var Module = typeof Module !== "undefined" ? Module : {};

var moduleOverrides = {};

var key;

for (key in Module) {
 if (Module.hasOwnProperty(key)) {
  moduleOverrides[key] = Module[key];
 }
}

Module["arguments"] = [];

Module["thisProgram"] = "./this.program";

Module["quit"] = function(status, toThrow) {
 throw toThrow;
};

Module["preRun"] = [];

Module["postRun"] = [];

var ENVIRONMENT_IS_WEB = false;

var ENVIRONMENT_IS_WORKER = false;

var ENVIRONMENT_IS_NODE = false;

var ENVIRONMENT_IS_SHELL = false;

ENVIRONMENT_IS_WEB = typeof window === "object";

ENVIRONMENT_IS_WORKER = typeof importScripts === "function";

ENVIRONMENT_IS_NODE = typeof process === "object" && typeof require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;

ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (Module["ENVIRONMENT"]) {
 throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)");
}

var scriptDirectory = "";

function locateFile(path) {
 if (Module["locateFile"]) {
  return Module["locateFile"](path, scriptDirectory);
 } else {
  return scriptDirectory + path;
 }
}

if (ENVIRONMENT_IS_NODE) {
 scriptDirectory = __dirname + "/";
 var nodeFS;
 var nodePath;
 Module["read"] = function shell_read(filename, binary) {
  var ret;
  ret = tryParseAsDataURI(filename);
  if (!ret) {
   if (!nodeFS) nodeFS = require("fs");
   if (!nodePath) nodePath = require("path");
   filename = nodePath["normalize"](filename);
   ret = nodeFS["readFileSync"](filename);
  }
  return binary ? ret : ret.toString();
 };
 Module["readBinary"] = function readBinary(filename) {
  var ret = Module["read"](filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
 };
 if (process["argv"].length > 1) {
  Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
 }
 Module["arguments"] = process["argv"].slice(2);
 if (typeof module !== "undefined") {
  module["exports"] = Module;
 }
 process["on"]("uncaughtException", function(ex) {
  if (!(ex instanceof ExitStatus)) {
   throw ex;
  }
 });
 process["on"]("unhandledRejection", abort);
 Module["quit"] = function(status) {
  process["exit"](status);
 };
 Module["inspect"] = function() {
  return "[Emscripten Module object]";
 };
} else if (ENVIRONMENT_IS_SHELL) {
 if (typeof read != "undefined") {
  Module["read"] = function shell_read(f) {
   var data = tryParseAsDataURI(f);
   if (data) {
    return intArrayToString(data);
   }
   return read(f);
  };
 }
 Module["readBinary"] = function readBinary(f) {
  var data;
  data = tryParseAsDataURI(f);
  if (data) {
   return data;
  }
  if (typeof readbuffer === "function") {
   return new Uint8Array(readbuffer(f));
  }
  data = read(f, "binary");
  assert(typeof data === "object");
  return data;
 };
 if (typeof scriptArgs != "undefined") {
  Module["arguments"] = scriptArgs;
 } else if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
 if (typeof quit === "function") {
  Module["quit"] = function(status) {
   quit(status);
  };
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 if (ENVIRONMENT_IS_WORKER) {
  scriptDirectory = self.location.href;
 } else if (document.currentScript) {
  scriptDirectory = document.currentScript.src;
 }
 if (scriptDirectory.indexOf("blob:") !== 0) {
  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf("/") + 1);
 } else {
  scriptDirectory = "";
 }
 Module["read"] = function shell_read(url) {
  try {
   var xhr = new XMLHttpRequest();
   xhr.open("GET", url, false);
   xhr.send(null);
   return xhr.responseText;
  } catch (err) {
   var data = tryParseAsDataURI(url);
   if (data) {
    return intArrayToString(data);
   }
   throw err;
  }
 };
 if (ENVIRONMENT_IS_WORKER) {
  Module["readBinary"] = function readBinary(url) {
   try {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    xhr.responseType = "arraybuffer";
    xhr.send(null);
    return new Uint8Array(xhr.response);
   } catch (err) {
    var data = tryParseAsDataURI(url);
    if (data) {
     return data;
    }
    throw err;
   }
  };
 }
 Module["readAsync"] = function readAsync(url, onload, onerror) {
  var xhr = new XMLHttpRequest();
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = function xhr_onload() {
   if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
    onload(xhr.response);
    return;
   }
   var data = tryParseAsDataURI(url);
   if (data) {
    onload(data.buffer);
    return;
   }
   onerror();
  };
  xhr.onerror = onerror;
  xhr.send(null);
 };
 Module["setWindowTitle"] = function(title) {
  document.title = title;
 };
} else {
 throw new Error("environment detection error");
}

var out = Module["print"] || (typeof console !== "undefined" ? console.log.bind(console) : typeof print !== "undefined" ? print : null);

var err = Module["printErr"] || (typeof printErr !== "undefined" ? printErr : typeof console !== "undefined" && console.warn.bind(console) || out);

for (key in moduleOverrides) {
 if (moduleOverrides.hasOwnProperty(key)) {
  Module[key] = moduleOverrides[key];
 }
}

moduleOverrides = undefined;

assert(typeof Module["memoryInitializerPrefixURL"] === "undefined", "Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["pthreadMainPrefixURL"] === "undefined", "Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["cdInitializerPrefixURL"] === "undefined", "Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["filePackagePrefixURL"] === "undefined", "Module.filePackagePrefixURL option was removed, use Module.locateFile instead");

var STACK_ALIGN = 16;

stackSave = stackRestore = stackAlloc = function() {
 abort("cannot use the stack before compiled code is ready to run, and has provided stack access");
};

function dynamicAlloc(size) {
 assert(DYNAMICTOP_PTR);
 var ret = HEAP32[DYNAMICTOP_PTR >> 2];
 var end = ret + size + 15 & -16;
 if (end <= _emscripten_get_heap_size()) {
  HEAP32[DYNAMICTOP_PTR >> 2] = end;
 } else {
  var success = _emscripten_resize_heap(end);
  if (!success) return 0;
 }
 return ret;
}

function getNativeTypeSize(type) {
 switch (type) {
 case "i1":
 case "i8":
  return 1;

 case "i16":
  return 2;

 case "i32":
  return 4;

 case "i64":
  return 8;

 case "float":
  return 4;

 case "double":
  return 8;

 default:
  {
   if (type[type.length - 1] === "*") {
    return 4;
   } else if (type[0] === "i") {
    var bits = parseInt(type.substr(1));
    assert(bits % 8 === 0, "getNativeTypeSize invalid bits " + bits + ", type " + type);
    return bits / 8;
   } else {
    return 0;
   }
  }
 }
}

function warnOnce(text) {
 if (!warnOnce.shown) warnOnce.shown = {};
 if (!warnOnce.shown[text]) {
  warnOnce.shown[text] = 1;
  err(text);
 }
}

var jsCallStartIndex = 1;

var functionPointers = new Array(0);

var funcWrappers = {};

function dynCall(sig, ptr, args) {
 if (args && args.length) {
  assert(args.length == sig.length - 1);
  assert("dynCall_" + sig in Module, "bad function pointer type - no table for sig '" + sig + "'");
  return Module["dynCall_" + sig].apply(null, [ ptr ].concat(args));
 } else {
  assert(sig.length == 1);
  assert("dynCall_" + sig in Module, "bad function pointer type - no table for sig '" + sig + "'");
  return Module["dynCall_" + sig].call(null, ptr);
 }
}

var tempRet0 = 0;

var setTempRet0 = function(value) {
 tempRet0 = value;
};

var getTempRet0 = function() {
 return tempRet0;
};

var GLOBAL_BASE = 8;

var ABORT = false;

var EXITSTATUS = 0;

function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed: " + text);
 }
}

function getCFunc(ident) {
 var func = Module["_" + ident];
 assert(func, "Cannot call unknown function " + ident + ", make sure it is exported");
 return func;
}

function ccall(ident, returnType, argTypes, args, opts) {
 var toC = {
  "string": function(str) {
   var ret = 0;
   if (str !== null && str !== undefined && str !== 0) {
    var len = (str.length << 2) + 1;
    ret = stackAlloc(len);
    stringToUTF8(str, ret, len);
   }
   return ret;
  },
  "array": function(arr) {
   var ret = stackAlloc(arr.length);
   writeArrayToMemory(arr, ret);
   return ret;
  }
 };
 function convertReturnValue(ret) {
  if (returnType === "string") return UTF8ToString(ret);
  if (returnType === "boolean") return Boolean(ret);
  return ret;
 }
 var func = getCFunc(ident);
 var cArgs = [];
 var stack = 0;
 assert(returnType !== "array", 'Return type should not be "array".');
 if (args) {
  for (var i = 0; i < args.length; i++) {
   var converter = toC[argTypes[i]];
   if (converter) {
    if (stack === 0) stack = stackSave();
    cArgs[i] = converter(args[i]);
   } else {
    cArgs[i] = args[i];
   }
  }
 }
 var ret = func.apply(null, cArgs);
 ret = convertReturnValue(ret);
 if (stack !== 0) stackRestore(stack);
 return ret;
}

function setValue(ptr, value, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  HEAP8[ptr >> 0] = value;
  break;

 case "i8":
  HEAP8[ptr >> 0] = value;
  break;

 case "i16":
  HEAP16[ptr >> 1] = value;
  break;

 case "i32":
  HEAP32[ptr >> 2] = value;
  break;

 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], 
  HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
  break;

 case "float":
  HEAPF32[ptr >> 2] = value;
  break;

 case "double":
  HEAPF64[ptr >> 3] = value;
  break;

 default:
  abort("invalid type for setValue: " + type);
 }
}

var ALLOC_NORMAL = 0;

var ALLOC_NONE = 3;

function allocate(slab, types, allocator, ptr) {
 var zeroinit, size;
 if (typeof slab === "number") {
  zeroinit = true;
  size = slab;
 } else {
  zeroinit = false;
  size = slab.length;
 }
 var singleType = typeof types === "string" ? types : null;
 var ret;
 if (allocator == ALLOC_NONE) {
  ret = ptr;
 } else {
  ret = [ _malloc, stackAlloc, dynamicAlloc ][allocator](Math.max(size, singleType ? 1 : types.length));
 }
 if (zeroinit) {
  var stop;
  ptr = ret;
  assert((ret & 3) == 0);
  stop = ret + (size & ~3);
  for (;ptr < stop; ptr += 4) {
   HEAP32[ptr >> 2] = 0;
  }
  stop = ret + size;
  while (ptr < stop) {
   HEAP8[ptr++ >> 0] = 0;
  }
  return ret;
 }
 if (singleType === "i8") {
  if (slab.subarray || slab.slice) {
   HEAPU8.set(slab, ret);
  } else {
   HEAPU8.set(new Uint8Array(slab), ret);
  }
  return ret;
 }
 var i = 0, type, typeSize, previousType;
 while (i < size) {
  var curr = slab[i];
  type = singleType || types[i];
  if (type === 0) {
   i++;
   continue;
  }
  assert(type, "Must know what type to store in allocate!");
  if (type == "i64") type = "i32";
  setValue(ret + i, curr, type);
  if (previousType !== type) {
   typeSize = getNativeTypeSize(type);
   previousType = type;
  }
  i += typeSize;
 }
 return ret;
}

function getMemory(size) {
 if (!runtimeInitialized) return dynamicAlloc(size);
 return _malloc(size);
}

var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : undefined;

function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {
 var endIdx = idx + maxBytesToRead;
 var endPtr = idx;
 while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;
 if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
  return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
 } else {
  var str = "";
  while (idx < endPtr) {
   var u0 = u8Array[idx++];
   if (!(u0 & 128)) {
    str += String.fromCharCode(u0);
    continue;
   }
   var u1 = u8Array[idx++] & 63;
   if ((u0 & 224) == 192) {
    str += String.fromCharCode((u0 & 31) << 6 | u1);
    continue;
   }
   var u2 = u8Array[idx++] & 63;
   if ((u0 & 240) == 224) {
    u0 = (u0 & 15) << 12 | u1 << 6 | u2;
   } else {
    if ((u0 & 248) != 240) warnOnce("Invalid UTF-8 leading byte 0x" + u0.toString(16) + " encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!");
    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u8Array[idx++] & 63;
   }
   if (u0 < 65536) {
    str += String.fromCharCode(u0);
   } else {
    var ch = u0 - 65536;
    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
   }
  }
 }
 return str;
}

function UTF8ToString(ptr, maxBytesToRead) {
 return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
}

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) {
   var u1 = str.charCodeAt(++i);
   u = 65536 + ((u & 1023) << 10) | u1 & 1023;
  }
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   outU8Array[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   outU8Array[outIdx++] = 192 | u >> 6;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   outU8Array[outIdx++] = 224 | u >> 12;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 3 >= endIdx) break;
   if (u >= 2097152) warnOnce("Invalid Unicode code point 0x" + u.toString(16) + " encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).");
   outU8Array[outIdx++] = 240 | u >> 18;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  }
 }
 outU8Array[outIdx] = 0;
 return outIdx - startIdx;
}

function stringToUTF8(str, outPtr, maxBytesToWrite) {
 assert(typeof maxBytesToWrite == "number", "stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}

function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) ++len; else if (u <= 2047) len += 2; else if (u <= 65535) len += 3; else len += 4;
 }
 return len;
}

var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : undefined;

function allocateUTF8(str) {
 var size = lengthBytesUTF8(str) + 1;
 var ret = _malloc(size);
 if (ret) stringToUTF8Array(str, HEAP8, ret, size);
 return ret;
}

function writeArrayToMemory(array, buffer) {
 assert(array.length >= 0, "writeArrayToMemory array must have a length (should be an array or typed array)");
 HEAP8.set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  assert(str.charCodeAt(i) === str.charCodeAt(i) & 255);
  HEAP8[buffer++ >> 0] = str.charCodeAt(i);
 }
 if (!dontAddNull) HEAP8[buffer >> 0] = 0;
}

function demangle(func) {
 var __cxa_demangle_func = Module["___cxa_demangle"] || Module["__cxa_demangle"];
 assert(__cxa_demangle_func);
 try {
  var s = func;
  if (s.startsWith("__Z")) s = s.substr(1);
  var len = lengthBytesUTF8(s) + 1;
  var buf = _malloc(len);
  stringToUTF8(s, buf, len);
  var status = _malloc(4);
  var ret = __cxa_demangle_func(buf, 0, 0, status);
  if (HEAP32[status >> 2] === 0 && ret) {
   return UTF8ToString(ret);
  }
 } catch (e) {} finally {
  if (buf) _free(buf);
  if (status) _free(status);
  if (ret) _free(ret);
 }
 return func;
}

function demangleAll(text) {
 var regex = /__Z[\w\d_]+/g;
 return text.replace(regex, function(x) {
  var y = demangle(x);
  return x === y ? x : y + " [" + x + "]";
 });
}

function jsStackTrace() {
 var err = new Error();
 if (!err.stack) {
  try {
   throw new Error(0);
  } catch (e) {
   err = e;
  }
  if (!err.stack) {
   return "(no stack trace available)";
  }
 }
 return err.stack.toString();
}

function stackTrace() {
 var js = jsStackTrace();
 if (Module["extraStackTrace"]) js += "\n" + Module["extraStackTrace"]();
 return demangleAll(js);
}

var PAGE_SIZE = 16384;

function alignUp(x, multiple) {
 if (x % multiple > 0) {
  x += multiple - x % multiple;
 }
 return x;
}

var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBufferViews() {
 Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
 Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
 Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
}

var STACK_BASE = 59168, STACK_MAX = 5302048, DYNAMIC_BASE = 5302048, DYNAMICTOP_PTR = 59136;

assert(STACK_BASE % 16 === 0, "stack must start aligned");

assert(DYNAMIC_BASE % 16 === 0, "heap must start aligned");

var TOTAL_STACK = 5242880;

if (Module["TOTAL_STACK"]) assert(TOTAL_STACK === Module["TOTAL_STACK"], "the stack size can no longer be determined at runtime");

var INITIAL_TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 268435456;

if (INITIAL_TOTAL_MEMORY < TOTAL_STACK) err("TOTAL_MEMORY should be larger than TOTAL_STACK, was " + INITIAL_TOTAL_MEMORY + "! (TOTAL_STACK=" + TOTAL_STACK + ")");

assert(typeof Int32Array !== "undefined" && typeof Float64Array !== "undefined" && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined, "JS engine does not provide full typed array support");

if (Module["buffer"]) {
 buffer = Module["buffer"];
 assert(buffer.byteLength === INITIAL_TOTAL_MEMORY, "provided buffer should be " + INITIAL_TOTAL_MEMORY + " bytes, but it is " + buffer.byteLength);
} else {
 {
  buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);
 }
 assert(buffer.byteLength === INITIAL_TOTAL_MEMORY);
}

updateGlobalBufferViews();

HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;

function writeStackCookie() {
 assert((STACK_MAX & 3) == 0);
 HEAPU32[(STACK_MAX >> 2) - 1] = 34821223;
 HEAPU32[(STACK_MAX >> 2) - 2] = 2310721022;
}

function checkStackCookie() {
 if (HEAPU32[(STACK_MAX >> 2) - 1] != 34821223 || HEAPU32[(STACK_MAX >> 2) - 2] != 2310721022) {
  abort("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x" + HEAPU32[(STACK_MAX >> 2) - 2].toString(16) + " " + HEAPU32[(STACK_MAX >> 2) - 1].toString(16));
 }
 if (HEAP32[0] !== 1668509029) throw "Runtime error: The application has corrupted its heap memory area (address zero)!";
}

function abortStackOverflow(allocSize) {
 abort("Stack overflow! Attempted to allocate " + allocSize + " bytes on the stack, but stack has only " + (STACK_MAX - stackSave() + allocSize) + " bytes available!");
}

HEAP32[0] = 1668509029;

HEAP16[1] = 25459;

if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99) throw "Runtime error: expected the system to be little-endian!";

function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  var callback = callbacks.shift();
  if (typeof callback == "function") {
   callback();
   continue;
  }
  var func = callback.func;
  if (typeof func === "number") {
   if (callback.arg === undefined) {
    Module["dynCall_v"](func);
   } else {
    Module["dynCall_vi"](func, callback.arg);
   }
  } else {
   func(callback.arg === undefined ? null : callback.arg);
  }
 }
}

var __ATPRERUN__ = [];

var __ATINIT__ = [];

var __ATMAIN__ = [];

var __ATPOSTRUN__ = [];

var runtimeInitialized = false;

var runtimeExited = false;

function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
 checkStackCookie();
 if (runtimeInitialized) return;
 runtimeInitialized = true;
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
 TTY.init();
 callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
 checkStackCookie();
 FS.ignorePermissions = false;
 callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
 checkStackCookie();
 runtimeExited = true;
}

function postRun() {
 checkStackCookie();
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}

function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}

assert(Math.imul, "This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.fround, "This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.clz32, "This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.trunc, "This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

var Math_abs = Math.abs;

var Math_ceil = Math.ceil;

var Math_floor = Math.floor;

var Math_min = Math.min;

var runDependencies = 0;

var runDependencyWatcher = null;

var dependenciesFulfilled = null;

var runDependencyTracking = {};

function getUniqueRunDependency(id) {
 var orig = id;
 while (1) {
  if (!runDependencyTracking[id]) return id;
  id = orig + Math.random();
 }
 return id;
}

function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(!runDependencyTracking[id]);
  runDependencyTracking[id] = 1;
  if (runDependencyWatcher === null && typeof setInterval !== "undefined") {
   runDependencyWatcher = setInterval(function() {
    if (ABORT) {
     clearInterval(runDependencyWatcher);
     runDependencyWatcher = null;
     return;
    }
    var shown = false;
    for (var dep in runDependencyTracking) {
     if (!shown) {
      shown = true;
      err("still waiting on run dependencies:");
     }
     err("dependency: " + dep);
    }
    if (shown) {
     err("(end of list)");
    }
   }, 1e4);
  }
 } else {
  err("warning: run dependency added without ID");
 }
}

function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(runDependencyTracking[id]);
  delete runDependencyTracking[id];
 } else {
  err("warning: run dependency removed without ID");
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}

Module["preloadedImages"] = {};

Module["preloadedAudios"] = {};

var memoryInitializer = null;

var dataURIPrefix = "data:application/octet-stream;base64,";

function isDataURI(filename) {
 return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0;
}

var ASM_CONSTS = [ function($0, $1, $2, $3, $4, $5) {
 if (!artoolkit["frameMalloc"]) {
  artoolkit["frameMalloc"] = {};
 }
 var frameMalloc = artoolkit["frameMalloc"];
 frameMalloc["framepointer"] = $1;
 frameMalloc["framesize"] = $2;
 frameMalloc["camera"] = $3;
 frameMalloc["transform"] = $4;
 frameMalloc["videoLumaPointer"] = $5;
}, function($0, $1, $2, $3) {
 if (!artoolkit["multiEachMarkerInfo"]) {
  artoolkit["multiEachMarkerInfo"] = {};
 }
 var multiEachMarker = artoolkit["multiEachMarkerInfo"];
 multiEachMarker["visible"] = $0;
 multiEachMarker["pattId"] = $1;
 multiEachMarker["pattType"] = $2;
 multiEachMarker["width"] = $3;
}, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32) {
 var $a = arguments;
 var i = 12;
 if (!artoolkit["markerInfo"]) {
  artoolkit["markerInfo"] = {
   pos: [ 0, 0 ],
   line: [ [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ] ],
   vertex: [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ]
  };
 }
 var markerInfo = artoolkit["markerInfo"];
 markerInfo["area"] = $0;
 markerInfo["id"] = $1;
 markerInfo["idPatt"] = $2;
 markerInfo["idMatrix"] = $3;
 markerInfo["dir"] = $4;
 markerInfo["dirPatt"] = $5;
 markerInfo["dirMatrix"] = $6;
 markerInfo["cf"] = $7;
 markerInfo["cfPatt"] = $8;
 markerInfo["cfMatrix"] = $9;
 markerInfo["pos"][0] = $10;
 markerInfo["pos"][1] = $11;
 markerInfo["line"][0][0] = $a[i++];
 markerInfo["line"][0][1] = $a[i++];
 markerInfo["line"][0][2] = $a[i++];
 markerInfo["line"][1][0] = $a[i++];
 markerInfo["line"][1][1] = $a[i++];
 markerInfo["line"][1][2] = $a[i++];
 markerInfo["line"][2][0] = $a[i++];
 markerInfo["line"][2][1] = $a[i++];
 markerInfo["line"][2][2] = $a[i++];
 markerInfo["line"][3][0] = $a[i++];
 markerInfo["line"][3][1] = $a[i++];
 markerInfo["line"][3][2] = $a[i++];
 markerInfo["vertex"][0][0] = $a[i++];
 markerInfo["vertex"][0][1] = $a[i++];
 markerInfo["vertex"][1][0] = $a[i++];
 markerInfo["vertex"][1][1] = $a[i++];
 markerInfo["vertex"][2][0] = $a[i++];
 markerInfo["vertex"][2][1] = $a[i++];
 markerInfo["vertex"][3][0] = $a[i++];
 markerInfo["vertex"][3][1] = $a[i++];
 markerInfo["errorCorrected"] = $a[i++];
}, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) {
 var $a = arguments;
 var i = 0;
 if (!artoolkit["NFTMarkerInfo"]) {
  artoolkit["NFTMarkerInfo"] = {
   id: 0,
   error: -1,
   found: 0,
   pose: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
  };
 }
 var markerInfo = artoolkit["NFTMarkerInfo"];
 markerInfo["id"] = $a[i++];
 markerInfo["error"] = $a[i++];
 markerInfo["found"] = 1;
 markerInfo["pose"][0] = $a[i++];
 markerInfo["pose"][1] = $a[i++];
 markerInfo["pose"][2] = $a[i++];
 markerInfo["pose"][3] = $a[i++];
 markerInfo["pose"][4] = $a[i++];
 markerInfo["pose"][5] = $a[i++];
 markerInfo["pose"][6] = $a[i++];
 markerInfo["pose"][7] = $a[i++];
 markerInfo["pose"][8] = $a[i++];
 markerInfo["pose"][9] = $a[i++];
 markerInfo["pose"][10] = $a[i++];
 markerInfo["pose"][11] = $a[i++];
}, function($0) {
 var $a = arguments;
 var i = 0;
 if (!artoolkit["NFTMarkerInfo"]) {
  artoolkit["NFTMarkerInfo"] = {
   id: 0,
   error: -1,
   found: 0,
   pose: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
  };
 }
 var markerInfo = artoolkit["NFTMarkerInfo"];
 markerInfo["id"] = $a[i++];
 markerInfo["error"] = -1;
 markerInfo["found"] = 0;
 markerInfo["pose"][0] = 0;
 markerInfo["pose"][1] = 0;
 markerInfo["pose"][2] = 0;
 markerInfo["pose"][3] = 0;
 markerInfo["pose"][4] = 0;
 markerInfo["pose"][5] = 0;
 markerInfo["pose"][6] = 0;
 markerInfo["pose"][7] = 0;
 markerInfo["pose"][8] = 0;
 markerInfo["pose"][9] = 0;
 markerInfo["pose"][10] = 0;
 markerInfo["pose"][11] = 0;
} ];

function _emscripten_asm_const_iiiiiii(code, a0, a1, a2, a3, a4, a5) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5);
}

function _emscripten_asm_const_iiiid(code, a0, a1, a2, a3) {
 return ASM_CONSTS[code](a0, a1, a2, a3);
}

function _emscripten_asm_const_iiddddddddddddd(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

function _emscripten_asm_const_ii(code, a0) {
 return ASM_CONSTS[code](a0);
}

function _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
}

__ATINIT__.push({
 func: function() {
  globalCtors();
 }
});

memoryInitializer = "data:application/octet-stream;base64,";

var tempDoublePtr = 59152;

assert(tempDoublePtr % 8 == 0);

var ENV = {};

function ___buildEnvironment(environ) {
 var MAX_ENV_VALUES = 64;
 var TOTAL_ENV_SIZE = 1024;
 var poolPtr;
 var envPtr;
 if (!___buildEnvironment.called) {
  ___buildEnvironment.called = true;
  ENV["USER"] = ENV["LOGNAME"] = "web_user";
  ENV["PATH"] = "/";
  ENV["PWD"] = "/";
  ENV["HOME"] = "/home/web_user";
  ENV["LANG"] = "C.UTF-8";
  ENV["_"] = Module["thisProgram"];
  poolPtr = getMemory(TOTAL_ENV_SIZE);
  envPtr = getMemory(MAX_ENV_VALUES * 4);
  HEAP32[envPtr >> 2] = poolPtr;
  HEAP32[environ >> 2] = envPtr;
 } else {
  envPtr = HEAP32[environ >> 2];
  poolPtr = HEAP32[envPtr >> 2];
 }
 var strings = [];
 var totalSize = 0;
 for (var key in ENV) {
  if (typeof ENV[key] === "string") {
   var line = key + "=" + ENV[key];
   strings.push(line);
   totalSize += line.length;
  }
 }
 if (totalSize > TOTAL_ENV_SIZE) {
  throw new Error("Environment size exceeded TOTAL_ENV_SIZE!");
 }
 var ptrSize = 4;
 for (var i = 0; i < strings.length; i++) {
  var line = strings[i];
  writeAsciiToMemory(line, poolPtr);
  HEAP32[envPtr + i * ptrSize >> 2] = poolPtr;
  poolPtr += line.length + 1;
 }
 HEAP32[envPtr + strings.length * ptrSize >> 2] = 0;
}

function _emscripten_get_now() {
 abort();
}

function _emscripten_get_now_is_monotonic() {
 return 0 || ENVIRONMENT_IS_NODE || typeof dateNow !== "undefined" || typeof performance === "object" && performance && typeof performance["now"] === "function";
}

function ___setErrNo(value) {
 if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value; else err("failed to set errno from JS");
 return value;
}

function _clock_gettime(clk_id, tp) {
 var now;
 if (clk_id === 0) {
  now = Date.now();
 } else if (clk_id === 1 && _emscripten_get_now_is_monotonic()) {
  now = _emscripten_get_now();
 } else {
  ___setErrNo(22);
  return -1;
 }
 HEAP32[tp >> 2] = now / 1e3 | 0;
 HEAP32[tp + 4 >> 2] = now % 1e3 * 1e3 * 1e3 | 0;
 return 0;
}

function ___clock_gettime(a0, a1) {
 return _clock_gettime(a0, a1);
}

function ___cxa_allocate_exception(size) {
 return _malloc(size);
}

function ___cxa_free_exception(ptr) {
 try {
  return _free(ptr);
 } catch (e) {
  err("exception during cxa_free_exception: " + e);
 }
}

var EXCEPTIONS = {
 last: 0,
 caught: [],
 infos: {},
 deAdjust: function(adjusted) {
  if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
  for (var key in EXCEPTIONS.infos) {
   var ptr = +key;
   var adj = EXCEPTIONS.infos[ptr].adjusted;
   var len = adj.length;
   for (var i = 0; i < len; i++) {
    if (adj[i] === adjusted) {
     return ptr;
    }
   }
  }
  return adjusted;
 },
 addRef: function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount++;
 },
 decRef: function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  assert(info.refcount > 0);
  info.refcount--;
  if (info.refcount === 0 && !info.rethrown) {
   if (info.destructor) {
    Module["dynCall_vi"](info.destructor, ptr);
   }
   delete EXCEPTIONS.infos[ptr];
   ___cxa_free_exception(ptr);
  }
 },
 clearRef: function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount = 0;
 }
};

function ___cxa_begin_catch(ptr) {
 var info = EXCEPTIONS.infos[ptr];
 if (info && !info.caught) {
  info.caught = true;
  __ZSt18uncaught_exceptionv.uncaught_exception--;
 }
 if (info) info.rethrown = false;
 EXCEPTIONS.caught.push(ptr);
 EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
 return ptr;
}

function ___resumeException(ptr) {
 if (!EXCEPTIONS.last) {
  EXCEPTIONS.last = ptr;
 }
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}

function ___cxa_find_matching_catch() {
 var thrown = EXCEPTIONS.last;
 if (!thrown) {
  return (setTempRet0(0), 0) | 0;
 }
 var info = EXCEPTIONS.infos[thrown];
 var throwntype = info.type;
 if (!throwntype) {
  return (setTempRet0(0), thrown) | 0;
 }
 var typeArray = Array.prototype.slice.call(arguments);
 var pointer = Module["___cxa_is_pointer_type"](throwntype);
 if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
 HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
 thrown = ___cxa_find_matching_catch.buffer;
 for (var i = 0; i < typeArray.length; i++) {
  if (typeArray[i] && Module["___cxa_can_catch"](typeArray[i], throwntype, thrown)) {
   thrown = HEAP32[thrown >> 2];
   info.adjusted.push(thrown);
   return (setTempRet0(typeArray[i]), thrown) | 0;
  }
 }
 thrown = HEAP32[thrown >> 2];
 return (setTempRet0(throwntype), thrown) | 0;
}

function ___cxa_throw(ptr, type, destructor) {
 EXCEPTIONS.infos[ptr] = {
  ptr: ptr,
  adjusted: [ ptr ],
  type: type,
  destructor: destructor,
  refcount: 0,
  caught: false,
  rethrown: false
 };
 EXCEPTIONS.last = ptr;
 if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
  __ZSt18uncaught_exceptionv.uncaught_exception = 1;
 } else {
  __ZSt18uncaught_exceptionv.uncaught_exception++;
 }
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}

function ___cxa_uncaught_exception() {
 return !!__ZSt18uncaught_exceptionv.uncaught_exception;
}

function ___gxx_personality_v0() {}

function ___lock() {}

function ___map_file(pathname, size) {
 ___setErrNo(1);
 return -1;
}

var PATH = {
 splitPath: function(filename) {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 },
 normalizeArray: function(parts, allowAboveRoot) {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (;up; up--) {
    parts.unshift("..");
   }
  }
  return parts;
 },
 normalize: function(path) {
  var isAbsolute = path.charAt(0) === "/", trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter(function(p) {
   return !!p;
  }), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 },
 dirname: function(path) {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 },
 basename: function(path) {
  if (path === "/") return "/";
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 },
 extname: function(path) {
  return PATH.splitPath(path)[3];
 },
 join: function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return PATH.normalize(paths.join("/"));
 },
 join2: function(l, r) {
  return PATH.normalize(l + "/" + r);
 },
 resolve: function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path !== "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = path.charAt(0) === "/";
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(function(p) {
   return !!p;
  }), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 },
 relative: function(from, to) {
  from = PATH.resolve(from).substr(1);
  to = PATH.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (;start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (;end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 }
};

var TTY = {
 ttys: [],
 init: function() {},
 shutdown: function() {},
 register: function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 },
 stream_ops: {
  open: function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(19);
   }
   stream.tty = tty;
   stream.seekable = false;
  },
  close: function(stream) {
   stream.tty.ops.flush(stream.tty);
  },
  flush: function(stream) {
   stream.tty.ops.flush(stream.tty);
  },
  read: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(6);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(5);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(11);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  },
  write: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(6);
   }
   try {
    for (var i = 0; i < length; i++) {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    }
   } catch (e) {
    throw new FS.ErrnoError(5);
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  }
 },
 default_tty_ops: {
  get_char: function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = new Buffer(BUFSIZE);
     var bytesRead = 0;
     var isPosixPlatform = process.platform != "win32";
     var fd = process.stdin.fd;
     if (isPosixPlatform) {
      var usingDevice = false;
      try {
       fd = fs.openSync("/dev/stdin", "r");
       usingDevice = true;
      } catch (e) {}
     }
     try {
      bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
     } catch (e) {
      if (e.toString().indexOf("EOF") != -1) bytesRead = 0; else throw e;
     }
     if (usingDevice) {
      fs.closeSync(fd);
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  },
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  flush: function(tty) {
   if (tty.output && tty.output.length > 0) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 },
 default_tty1_ops: {
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  flush: function(tty) {
   if (tty.output && tty.output.length > 0) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 }
};

var MEMFS = {
 ops_table: null,
 mount: function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 },
 createNode: function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(1);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 },
 getFileDataAsRegularArray: function(node) {
  if (node.contents && node.contents.subarray) {
   var arr = [];
   for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
   return arr;
  }
  return node.contents;
 },
 getFileDataAsTypedArray: function(node) {
  if (!node.contents) return new Uint8Array();
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 },
 expandFileStorage: function(node, newCapacity) {
  var prevCapacity = node.contents ? node.contents.length : 0;
  if (prevCapacity >= newCapacity) return;
  var CAPACITY_DOUBLING_MAX = 1024 * 1024;
  newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
  if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
  var oldContents = node.contents;
  node.contents = new Uint8Array(newCapacity);
  if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
  return;
 },
 resizeFileStorage: function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
   return;
  }
  if (!node.contents || node.contents.subarray) {
   var oldContents = node.contents;
   node.contents = new Uint8Array(new ArrayBuffer(newSize));
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
   return;
  }
  if (!node.contents) node.contents = [];
  if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);
  node.usedBytes = newSize;
 },
 node_ops: {
  getattr: function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  },
  setattr: function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  },
  lookup: function(parent, name) {
   throw FS.genericErrors[2];
  },
  mknod: function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  },
  rename: function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(39);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   old_node.parent = new_dir;
  },
  unlink: function(parent, name) {
   delete parent.contents[name];
  },
  rmdir: function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(39);
   }
   delete parent.contents[name];
  },
  readdir: function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  },
  symlink: function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  },
  readlink: function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(22);
   }
   return node.link;
  }
 },
 stream_ops: {
  read: function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  },
  write: function(stream, buffer, offset, length, position, canOwn) {
   if (canOwn) {
    warnOnce("file packager has copied file data into memory, but in memory growth we are forced to copy it again (see --no-heap-copy)");
   }
   canOwn = false;
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     assert(position === 0, "canOwn must imply no weird position inside the file");
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  },
  llseek: function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(22);
   }
   return position;
  },
  allocate: function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  },
  mmap: function(stream, buffer, offset, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(19);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < stream.node.usedBytes) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = _malloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(12);
    }
    buffer.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  },
  msync: function(stream, buffer, offset, length, mmapFlags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(19);
   }
   if (mmapFlags & 2) {
    return 0;
   }
   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  }
 }
};

var IDBFS = {
 dbs: {},
 indexedDB: function() {
  if (typeof indexedDB !== "undefined") return indexedDB;
  var ret = null;
  if (typeof window === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  assert(ret, "IDBFS used, but indexedDB not supported");
  return ret;
 },
 DB_VERSION: 21,
 DB_STORE_NAME: "FILE_DATA",
 mount: function(mount) {
  return MEMFS.mount.apply(null, arguments);
 },
 syncfs: function(mount, populate, callback) {
  IDBFS.getLocalSet(mount, function(err, local) {
   if (err) return callback(err);
   IDBFS.getRemoteSet(mount, function(err, remote) {
    if (err) return callback(err);
    var src = populate ? remote : local;
    var dst = populate ? local : remote;
    IDBFS.reconcile(src, dst, callback);
   });
  });
 },
 getDB: function(name, callback) {
  var db = IDBFS.dbs[name];
  if (db) {
   return callback(null, db);
  }
  var req;
  try {
   req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
  } catch (e) {
   return callback(e);
  }
  if (!req) {
   return callback("Unable to connect to IndexedDB");
  }
  req.onupgradeneeded = function(e) {
   var db = e.target.result;
   var transaction = e.target.transaction;
   var fileStore;
   if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
   } else {
    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
   }
   if (!fileStore.indexNames.contains("timestamp")) {
    fileStore.createIndex("timestamp", "timestamp", {
     unique: false
    });
   }
  };
  req.onsuccess = function() {
   db = req.result;
   IDBFS.dbs[name] = db;
   callback(null, db);
  };
  req.onerror = function(e) {
   callback(this.error);
   e.preventDefault();
  };
 },
 getLocalSet: function(mount, callback) {
  var entries = {};
  function isRealDir(p) {
   return p !== "." && p !== "..";
  }
  function toAbsolute(root) {
   return function(p) {
    return PATH.join2(root, p);
   };
  }
  var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  while (check.length) {
   var path = check.pop();
   var stat;
   try {
    stat = FS.stat(path);
   } catch (e) {
    return callback(e);
   }
   if (FS.isDir(stat.mode)) {
    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
   }
   entries[path] = {
    timestamp: stat.mtime
   };
  }
  return callback(null, {
   type: "local",
   entries: entries
  });
 },
 getRemoteSet: function(mount, callback) {
  var entries = {};
  IDBFS.getDB(mount.mountpoint, function(err, db) {
   if (err) return callback(err);
   try {
    var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readonly");
    transaction.onerror = function(e) {
     callback(this.error);
     e.preventDefault();
    };
    var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
    var index = store.index("timestamp");
    index.openKeyCursor().onsuccess = function(event) {
     var cursor = event.target.result;
     if (!cursor) {
      return callback(null, {
       type: "remote",
       db: db,
       entries: entries
      });
     }
     entries[cursor.primaryKey] = {
      timestamp: cursor.key
     };
     cursor.continue();
    };
   } catch (e) {
    return callback(e);
   }
  });
 },
 loadLocalEntry: function(path, callback) {
  var stat, node;
  try {
   var lookup = FS.lookupPath(path);
   node = lookup.node;
   stat = FS.stat(path);
  } catch (e) {
   return callback(e);
  }
  if (FS.isDir(stat.mode)) {
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode
   });
  } else if (FS.isFile(stat.mode)) {
   node.contents = MEMFS.getFileDataAsTypedArray(node);
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode,
    contents: node.contents
   });
  } else {
   return callback(new Error("node type not supported"));
  }
 },
 storeLocalEntry: function(path, entry, callback) {
  try {
   if (FS.isDir(entry.mode)) {
    FS.mkdir(path, entry.mode);
   } else if (FS.isFile(entry.mode)) {
    FS.writeFile(path, entry.contents, {
     canOwn: true
    });
   } else {
    return callback(new Error("node type not supported"));
   }
   FS.chmod(path, entry.mode);
   FS.utime(path, entry.timestamp, entry.timestamp);
  } catch (e) {
   return callback(e);
  }
  callback(null);
 },
 removeLocalEntry: function(path, callback) {
  try {
   var lookup = FS.lookupPath(path);
   var stat = FS.stat(path);
   if (FS.isDir(stat.mode)) {
    FS.rmdir(path);
   } else if (FS.isFile(stat.mode)) {
    FS.unlink(path);
   }
  } catch (e) {
   return callback(e);
  }
  callback(null);
 },
 loadRemoteEntry: function(store, path, callback) {
  var req = store.get(path);
  req.onsuccess = function(event) {
   callback(null, event.target.result);
  };
  req.onerror = function(e) {
   callback(this.error);
   e.preventDefault();
  };
 },
 storeRemoteEntry: function(store, path, entry, callback) {
  var req = store.put(entry, path);
  req.onsuccess = function() {
   callback(null);
  };
  req.onerror = function(e) {
   callback(this.error);
   e.preventDefault();
  };
 },
 removeRemoteEntry: function(store, path, callback) {
  var req = store.delete(path);
  req.onsuccess = function() {
   callback(null);
  };
  req.onerror = function(e) {
   callback(this.error);
   e.preventDefault();
  };
 },
 reconcile: function(src, dst, callback) {
  var total = 0;
  var create = [];
  Object.keys(src.entries).forEach(function(key) {
   var e = src.entries[key];
   var e2 = dst.entries[key];
   if (!e2 || e.timestamp > e2.timestamp) {
    create.push(key);
    total++;
   }
  });
  var remove = [];
  Object.keys(dst.entries).forEach(function(key) {
   var e = dst.entries[key];
   var e2 = src.entries[key];
   if (!e2) {
    remove.push(key);
    total++;
   }
  });
  if (!total) {
   return callback(null);
  }
  var errored = false;
  var completed = 0;
  var db = src.type === "remote" ? src.db : dst.db;
  var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readwrite");
  var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return callback(err);
    }
    return;
   }
   if (++completed >= total) {
    return callback(null);
   }
  }
  transaction.onerror = function(e) {
   done(this.error);
   e.preventDefault();
  };
  create.sort().forEach(function(path) {
   if (dst.type === "local") {
    IDBFS.loadRemoteEntry(store, path, function(err, entry) {
     if (err) return done(err);
     IDBFS.storeLocalEntry(path, entry, done);
    });
   } else {
    IDBFS.loadLocalEntry(path, function(err, entry) {
     if (err) return done(err);
     IDBFS.storeRemoteEntry(store, path, entry, done);
    });
   }
  });
  remove.sort().reverse().forEach(function(path) {
   if (dst.type === "local") {
    IDBFS.removeLocalEntry(path, done);
   } else {
    IDBFS.removeRemoteEntry(store, path, done);
   }
  });
 }
};

var NODEFS = {
 isWindows: false,
 staticInit: function() {
  NODEFS.isWindows = !!process.platform.match(/^win/);
  var flags = process["binding"]("constants");
  if (flags["fs"]) {
   flags = flags["fs"];
  }
  NODEFS.flagsForNodeMap = {
   1024: flags["O_APPEND"],
   64: flags["O_CREAT"],
   128: flags["O_EXCL"],
   0: flags["O_RDONLY"],
   2: flags["O_RDWR"],
   4096: flags["O_SYNC"],
   512: flags["O_TRUNC"],
   1: flags["O_WRONLY"]
  };
 },
 bufferFrom: function(arrayBuffer) {
  return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);
 },
 mount: function(mount) {
  assert(ENVIRONMENT_IS_NODE);
  return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
 },
 createNode: function(parent, name, mode, dev) {
  if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
   throw new FS.ErrnoError(22);
  }
  var node = FS.createNode(parent, name, mode);
  node.node_ops = NODEFS.node_ops;
  node.stream_ops = NODEFS.stream_ops;
  return node;
 },
 getMode: function(path) {
  var stat;
  try {
   stat = fs.lstatSync(path);
   if (NODEFS.isWindows) {
    stat.mode = stat.mode | (stat.mode & 292) >> 2;
   }
  } catch (e) {
   if (!e.code) throw e;
   throw new FS.ErrnoError(-e.errno);
  }
  return stat.mode;
 },
 realPath: function(node) {
  var parts = [];
  while (node.parent !== node) {
   parts.push(node.name);
   node = node.parent;
  }
  parts.push(node.mount.opts.root);
  parts.reverse();
  return PATH.join.apply(null, parts);
 },
 flagsForNode: function(flags) {
  flags &= ~2097152;
  flags &= ~2048;
  flags &= ~32768;
  flags &= ~524288;
  var newFlags = 0;
  for (var k in NODEFS.flagsForNodeMap) {
   if (flags & k) {
    newFlags |= NODEFS.flagsForNodeMap[k];
    flags ^= k;
   }
  }
  if (!flags) {
   return newFlags;
  } else {
   throw new FS.ErrnoError(22);
  }
 },
 node_ops: {
  getattr: function(node) {
   var path = NODEFS.realPath(node);
   var stat;
   try {
    stat = fs.lstatSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
   if (NODEFS.isWindows && !stat.blksize) {
    stat.blksize = 4096;
   }
   if (NODEFS.isWindows && !stat.blocks) {
    stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
   }
   return {
    dev: stat.dev,
    ino: stat.ino,
    mode: stat.mode,
    nlink: stat.nlink,
    uid: stat.uid,
    gid: stat.gid,
    rdev: stat.rdev,
    size: stat.size,
    atime: stat.atime,
    mtime: stat.mtime,
    ctime: stat.ctime,
    blksize: stat.blksize,
    blocks: stat.blocks
   };
  },
  setattr: function(node, attr) {
   var path = NODEFS.realPath(node);
   try {
    if (attr.mode !== undefined) {
     fs.chmodSync(path, attr.mode);
     node.mode = attr.mode;
    }
    if (attr.timestamp !== undefined) {
     var date = new Date(attr.timestamp);
     fs.utimesSync(path, date, date);
    }
    if (attr.size !== undefined) {
     fs.truncateSync(path, attr.size);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  lookup: function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   var mode = NODEFS.getMode(path);
   return NODEFS.createNode(parent, name, mode);
  },
  mknod: function(parent, name, mode, dev) {
   var node = NODEFS.createNode(parent, name, mode, dev);
   var path = NODEFS.realPath(node);
   try {
    if (FS.isDir(node.mode)) {
     fs.mkdirSync(path, node.mode);
    } else {
     fs.writeFileSync(path, "", {
      mode: node.mode
     });
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
   return node;
  },
  rename: function(oldNode, newDir, newName) {
   var oldPath = NODEFS.realPath(oldNode);
   var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
   try {
    fs.renameSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  unlink: function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.unlinkSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  rmdir: function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.rmdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  readdir: function(node) {
   var path = NODEFS.realPath(node);
   try {
    return fs.readdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  symlink: function(parent, newName, oldPath) {
   var newPath = PATH.join2(NODEFS.realPath(parent), newName);
   try {
    fs.symlinkSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  readlink: function(node) {
   var path = NODEFS.realPath(node);
   try {
    path = fs.readlinkSync(path);
    path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
    return path;
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  }
 },
 stream_ops: {
  open: function(stream) {
   var path = NODEFS.realPath(stream.node);
   try {
    if (FS.isFile(stream.node.mode)) {
     stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  close: function(stream) {
   try {
    if (FS.isFile(stream.node.mode) && stream.nfd) {
     fs.closeSync(stream.nfd);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(-e.errno);
   }
  },
  read: function(stream, buffer, offset, length, position) {
   if (length === 0) return 0;
   try {
    return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
   } catch (e) {
    throw new FS.ErrnoError(-e.errno);
   }
  },
  write: function(stream, buffer, offset, length, position) {
   try {
    return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
   } catch (e) {
    throw new FS.ErrnoError(-e.errno);
   }
  },
  llseek: function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     try {
      var stat = fs.fstatSync(stream.nfd);
      position += stat.size;
     } catch (e) {
      throw new FS.ErrnoError(-e.errno);
     }
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(22);
   }
   return position;
  }
 }
};

var WORKERFS = {
 DIR_MODE: 16895,
 FILE_MODE: 33279,
 reader: null,
 mount: function(mount) {
  assert(ENVIRONMENT_IS_WORKER);
  if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
  var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
  var createdParents = {};
  function ensureParent(path) {
   var parts = path.split("/");
   var parent = root;
   for (var i = 0; i < parts.length - 1; i++) {
    var curr = parts.slice(0, i + 1).join("/");
    if (!createdParents[curr]) {
     createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
    }
    parent = createdParents[curr];
   }
   return parent;
  }
  function base(path) {
   var parts = path.split("/");
   return parts[parts.length - 1];
  }
  Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
   WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
  });
  (mount.opts["blobs"] || []).forEach(function(obj) {
   WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
  });
  (mount.opts["packages"] || []).forEach(function(pack) {
   pack["metadata"].files.forEach(function(file) {
    var name = file.filename.substr(1);
    WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
   });
  });
  return root;
 },
 createNode: function(parent, name, mode, dev, contents, mtime) {
  var node = FS.createNode(parent, name, mode);
  node.mode = mode;
  node.node_ops = WORKERFS.node_ops;
  node.stream_ops = WORKERFS.stream_ops;
  node.timestamp = (mtime || new Date()).getTime();
  assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
  if (mode === WORKERFS.FILE_MODE) {
   node.size = contents.size;
   node.contents = contents;
  } else {
   node.size = 4096;
   node.contents = {};
  }
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 },
 node_ops: {
  getattr: function(node) {
   return {
    dev: 1,
    ino: undefined,
    mode: node.mode,
    nlink: 1,
    uid: 0,
    gid: 0,
    rdev: undefined,
    size: node.size,
    atime: new Date(node.timestamp),
    mtime: new Date(node.timestamp),
    ctime: new Date(node.timestamp),
    blksize: 4096,
    blocks: Math.ceil(node.size / 4096)
   };
  },
  setattr: function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
  },
  lookup: function(parent, name) {
   throw new FS.ErrnoError(2);
  },
  mknod: function(parent, name, mode, dev) {
   throw new FS.ErrnoError(1);
  },
  rename: function(oldNode, newDir, newName) {
   throw new FS.ErrnoError(1);
  },
  unlink: function(parent, name) {
   throw new FS.ErrnoError(1);
  },
  rmdir: function(parent, name) {
   throw new FS.ErrnoError(1);
  },
  readdir: function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  },
  symlink: function(parent, newName, oldPath) {
   throw new FS.ErrnoError(1);
  },
  readlink: function(node) {
   throw new FS.ErrnoError(1);
  }
 },
 stream_ops: {
  read: function(stream, buffer, offset, length, position) {
   if (position >= stream.node.size) return 0;
   var chunk = stream.node.contents.slice(position, position + length);
   var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
   buffer.set(new Uint8Array(ab), offset);
   return chunk.size;
  },
  write: function(stream, buffer, offset, length, position) {
   throw new FS.ErrnoError(5);
  },
  llseek: function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.size;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(22);
   }
   return position;
  }
 }
};

var ERRNO_MESSAGES = {
 0: "Success",
 1: "Not super-user",
 2: "No such file or directory",
 3: "No such process",
 4: "Interrupted system call",
 5: "I/O error",
 6: "No such device or address",
 7: "Arg list too long",
 8: "Exec format error",
 9: "Bad file number",
 10: "No children",
 11: "No more processes",
 12: "Not enough core",
 13: "Permission denied",
 14: "Bad address",
 15: "Block device required",
 16: "Mount device busy",
 17: "File exists",
 18: "Cross-device link",
 19: "No such device",
 20: "Not a directory",
 21: "Is a directory",
 22: "Invalid argument",
 23: "Too many open files in system",
 24: "Too many open files",
 25: "Not a typewriter",
 26: "Text file busy",
 27: "File too large",
 28: "No space left on device",
 29: "Illegal seek",
 30: "Read only file system",
 31: "Too many links",
 32: "Broken pipe",
 33: "Math arg out of domain of func",
 34: "Math result not representable",
 35: "File locking deadlock error",
 36: "File or path name too long",
 37: "No record locks available",
 38: "Function not implemented",
 39: "Directory not empty",
 40: "Too many symbolic links",
 42: "No message of desired type",
 43: "Identifier removed",
 44: "Channel number out of range",
 45: "Level 2 not synchronized",
 46: "Level 3 halted",
 47: "Level 3 reset",
 48: "Link number out of range",
 49: "Protocol driver not attached",
 50: "No CSI structure available",
 51: "Level 2 halted",
 52: "Invalid exchange",
 53: "Invalid request descriptor",
 54: "Exchange full",
 55: "No anode",
 56: "Invalid request code",
 57: "Invalid slot",
 59: "Bad font file fmt",
 60: "Device not a stream",
 61: "No data (for no delay io)",
 62: "Timer expired",
 63: "Out of streams resources",
 64: "Machine is not on the network",
 65: "Package not installed",
 66: "The object is remote",
 67: "The link has been severed",
 68: "Advertise error",
 69: "Srmount error",
 70: "Communication error on send",
 71: "Protocol error",
 72: "Multihop attempted",
 73: "Cross mount point (not really error)",
 74: "Trying to read unreadable message",
 75: "Value too large for defined data type",
 76: "Given log. name not unique",
 77: "f.d. invalid for this operation",
 78: "Remote address changed",
 79: "Can   access a needed shared lib",
 80: "Accessing a corrupted shared lib",
 81: ".lib section in a.out corrupted",
 82: "Attempting to link in too many libs",
 83: "Attempting to exec a shared library",
 84: "Illegal byte sequence",
 86: "Streams pipe error",
 87: "Too many users",
 88: "Socket operation on non-socket",
 89: "Destination address required",
 90: "Message too long",
 91: "Protocol wrong type for socket",
 92: "Protocol not available",
 93: "Unknown protocol",
 94: "Socket type not supported",
 95: "Not supported",
 96: "Protocol family not supported",
 97: "Address family not supported by protocol family",
 98: "Address already in use",
 99: "Address not available",
 100: "Network interface is not configured",
 101: "Network is unreachable",
 102: "Connection reset by network",
 103: "Connection aborted",
 104: "Connection reset by peer",
 105: "No buffer space available",
 106: "Socket is already connected",
 107: "Socket is not connected",
 108: "Can't send after socket shutdown",
 109: "Too many references",
 110: "Connection timed out",
 111: "Connection refused",
 112: "Host is down",
 113: "Host is unreachable",
 114: "Socket already connected",
 115: "Connection already in progress",
 116: "Stale file handle",
 122: "Quota exceeded",
 123: "No medium (in tape drive)",
 125: "Operation canceled",
 130: "Previous owner died",
 131: "State not recoverable"
};

var ERRNO_CODES = {
 EPERM: 1,
 ENOENT: 2,
 ESRCH: 3,
 EINTR: 4,
 EIO: 5,
 ENXIO: 6,
 E2BIG: 7,
 ENOEXEC: 8,
 EBADF: 9,
 ECHILD: 10,
 EAGAIN: 11,
 EWOULDBLOCK: 11,
 ENOMEM: 12,
 EACCES: 13,
 EFAULT: 14,
 ENOTBLK: 15,
 EBUSY: 16,
 EEXIST: 17,
 EXDEV: 18,
 ENODEV: 19,
 ENOTDIR: 20,
 EISDIR: 21,
 EINVAL: 22,
 ENFILE: 23,
 EMFILE: 24,
 ENOTTY: 25,
 ETXTBSY: 26,
 EFBIG: 27,
 ENOSPC: 28,
 ESPIPE: 29,
 EROFS: 30,
 EMLINK: 31,
 EPIPE: 32,
 EDOM: 33,
 ERANGE: 34,
 ENOMSG: 42,
 EIDRM: 43,
 ECHRNG: 44,
 EL2NSYNC: 45,
 EL3HLT: 46,
 EL3RST: 47,
 ELNRNG: 48,
 EUNATCH: 49,
 ENOCSI: 50,
 EL2HLT: 51,
 EDEADLK: 35,
 ENOLCK: 37,
 EBADE: 52,
 EBADR: 53,
 EXFULL: 54,
 ENOANO: 55,
 EBADRQC: 56,
 EBADSLT: 57,
 EDEADLOCK: 35,
 EBFONT: 59,
 ENOSTR: 60,
 ENODATA: 61,
 ETIME: 62,
 ENOSR: 63,
 ENONET: 64,
 ENOPKG: 65,
 EREMOTE: 66,
 ENOLINK: 67,
 EADV: 68,
 ESRMNT: 69,
 ECOMM: 70,
 EPROTO: 71,
 EMULTIHOP: 72,
 EDOTDOT: 73,
 EBADMSG: 74,
 ENOTUNIQ: 76,
 EBADFD: 77,
 EREMCHG: 78,
 ELIBACC: 79,
 ELIBBAD: 80,
 ELIBSCN: 81,
 ELIBMAX: 82,
 ELIBEXEC: 83,
 ENOSYS: 38,
 ENOTEMPTY: 39,
 ENAMETOOLONG: 36,
 ELOOP: 40,
 EOPNOTSUPP: 95,
 EPFNOSUPPORT: 96,
 ECONNRESET: 104,
 ENOBUFS: 105,
 EAFNOSUPPORT: 97,
 EPROTOTYPE: 91,
 ENOTSOCK: 88,
 ENOPROTOOPT: 92,
 ESHUTDOWN: 108,
 ECONNREFUSED: 111,
 EADDRINUSE: 98,
 ECONNABORTED: 103,
 ENETUNREACH: 101,
 ENETDOWN: 100,
 ETIMEDOUT: 110,
 EHOSTDOWN: 112,
 EHOSTUNREACH: 113,
 EINPROGRESS: 115,
 EALREADY: 114,
 EDESTADDRREQ: 89,
 EMSGSIZE: 90,
 EPROTONOSUPPORT: 93,
 ESOCKTNOSUPPORT: 94,
 EADDRNOTAVAIL: 99,
 ENETRESET: 102,
 EISCONN: 106,
 ENOTCONN: 107,
 ETOOMANYREFS: 109,
 EUSERS: 87,
 EDQUOT: 122,
 ESTALE: 116,
 ENOTSUP: 95,
 ENOMEDIUM: 123,
 EILSEQ: 84,
 EOVERFLOW: 75,
 ECANCELED: 125,
 ENOTRECOVERABLE: 131,
 EOWNERDEAD: 130,
 ESTRPIPE: 86
};

var FS = {
 root: null,
 mounts: [],
 devices: {},
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 trackingDelegate: {},
 tracking: {
  openFlags: {
   READ: 1,
   WRITE: 2
  }
 },
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 handleFSError: function(e) {
  if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
  return ___setErrNo(e.errno);
 },
 lookupPath: function(path, opts) {
  path = PATH.resolve(FS.cwd(), path);
  opts = opts || {};
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  for (var key in defaults) {
   if (opts[key] === undefined) {
    opts[key] = defaults[key];
   }
  }
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(40);
  }
  var parts = PATH.normalizeArray(path.split("/").filter(function(p) {
   return !!p;
  }), false);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(40);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 },
 getPath: function(node) {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 },
 hashName: function(parentid, name) {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 },
 hashAddNode: function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 },
 hashRemoveNode: function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 },
 lookupNode: function(parent, name) {
  var err = FS.mayLookup(parent);
  if (err) {
   throw new FS.ErrnoError(err, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 },
 createNode: function(parent, name, mode, rdev) {
  if (!FS.FSNode) {
   FS.FSNode = function(parent, name, mode, rdev) {
    if (!parent) {
     parent = this;
    }
    this.parent = parent;
    this.mount = parent.mount;
    this.mounted = null;
    this.id = FS.nextInode++;
    this.name = name;
    this.mode = mode;
    this.node_ops = {};
    this.stream_ops = {};
    this.rdev = rdev;
   };
   FS.FSNode.prototype = {};
   var readMode = 292 | 73;
   var writeMode = 146;
   Object.defineProperties(FS.FSNode.prototype, {
    read: {
     get: function() {
      return (this.mode & readMode) === readMode;
     },
     set: function(val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
     }
    },
    write: {
     get: function() {
      return (this.mode & writeMode) === writeMode;
     },
     set: function(val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
     }
    },
    isFolder: {
     get: function() {
      return FS.isDir(this.mode);
     }
    },
    isDevice: {
     get: function() {
      return FS.isChrdev(this.mode);
     }
    }
   });
  }
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 },
 destroyNode: function(node) {
  FS.hashRemoveNode(node);
 },
 isRoot: function(node) {
  return node === node.parent;
 },
 isMountpoint: function(node) {
  return !!node.mounted;
 },
 isFile: function(mode) {
  return (mode & 61440) === 32768;
 },
 isDir: function(mode) {
  return (mode & 61440) === 16384;
 },
 isLink: function(mode) {
  return (mode & 61440) === 40960;
 },
 isChrdev: function(mode) {
  return (mode & 61440) === 8192;
 },
 isBlkdev: function(mode) {
  return (mode & 61440) === 24576;
 },
 isFIFO: function(mode) {
  return (mode & 61440) === 4096;
 },
 isSocket: function(mode) {
  return (mode & 49152) === 49152;
 },
 flagModes: {
  "r": 0,
  "rs": 1052672,
  "r+": 2,
  "w": 577,
  "wx": 705,
  "xw": 705,
  "w+": 578,
  "wx+": 706,
  "xw+": 706,
  "a": 1089,
  "ax": 1217,
  "xa": 1217,
  "a+": 1090,
  "ax+": 1218,
  "xa+": 1218
 },
 modeStringToFlags: function(str) {
  var flags = FS.flagModes[str];
  if (typeof flags === "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 },
 flagsToPermissionString: function(flag) {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 },
 nodePermissions: function(node, perms) {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
   return 13;
  } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
   return 13;
  } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
   return 13;
  }
  return 0;
 },
 mayLookup: function(dir) {
  var err = FS.nodePermissions(dir, "x");
  if (err) return err;
  if (!dir.node_ops.lookup) return 13;
  return 0;
 },
 mayCreate: function(dir, name) {
  try {
   var node = FS.lookupNode(dir, name);
   return 17;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 },
 mayDelete: function(dir, name, isdir) {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var err = FS.nodePermissions(dir, "wx");
  if (err) {
   return err;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return 20;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return 16;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return 21;
   }
  }
  return 0;
 },
 mayOpen: function(node, flags) {
  if (!node) {
   return 2;
  }
  if (FS.isLink(node.mode)) {
   return 40;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return 21;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 },
 MAX_OPEN_FDS: 4096,
 nextfd: function(fd_start, fd_end) {
  fd_start = fd_start || 0;
  fd_end = fd_end || FS.MAX_OPEN_FDS;
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(24);
 },
 getStream: function(fd) {
  return FS.streams[fd];
 },
 createStream: function(stream, fd_start, fd_end) {
  if (!FS.FSStream) {
   FS.FSStream = function() {};
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: function() {
      return this.node;
     },
     set: function(val) {
      this.node = val;
     }
    },
    isRead: {
     get: function() {
      return (this.flags & 2097155) !== 1;
     }
    },
    isWrite: {
     get: function() {
      return (this.flags & 2097155) !== 0;
     }
    },
    isAppend: {
     get: function() {
      return this.flags & 1024;
     }
    }
   });
  }
  var newStream = new FS.FSStream();
  for (var p in stream) {
   newStream[p] = stream[p];
  }
  stream = newStream;
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 },
 closeStream: function(fd) {
  FS.streams[fd] = null;
 },
 chrdev_stream_ops: {
  open: function(stream) {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  },
  llseek: function() {
   throw new FS.ErrnoError(29);
  }
 },
 major: function(dev) {
  return dev >> 8;
 },
 minor: function(dev) {
  return dev & 255;
 },
 makedev: function(ma, mi) {
  return ma << 8 | mi;
 },
 registerDevice: function(dev, ops) {
  FS.devices[dev] = {
   stream_ops: ops
  };
 },
 getDevice: function(dev) {
  return FS.devices[dev];
 },
 getMounts: function(mount) {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 },
 syncfs: function(populate, callback) {
  if (typeof populate === "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(err) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(err);
  }
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(err);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach(function(mount) {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  });
 },
 mount: function(type, opts, mountpoint) {
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(16);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(16);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(20);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 },
 unmount: function(mountpoint) {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(22);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach(function(hash) {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.indexOf(current.mount) !== -1) {
     FS.destroyNode(current);
    }
    current = next;
   }
  });
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 },
 lookup: function(parent, name) {
  return parent.node_ops.lookup(parent, name);
 },
 mknod: function(path, mode, dev) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(22);
  }
  var err = FS.mayCreate(parent, name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(1);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 },
 create: function(path, mode) {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 },
 mkdir: function(path, mode) {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 },
 mkdirTree: function(path, mode) {
  var dirs = path.split("/");
  var d = "";
  for (var i = 0; i < dirs.length; ++i) {
   if (!dirs[i]) continue;
   d += "/" + dirs[i];
   try {
    FS.mkdir(d, mode);
   } catch (e) {
    if (e.errno != 17) throw e;
   }
  }
 },
 mkdev: function(path, mode, dev) {
  if (typeof dev === "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 },
 symlink: function(oldpath, newpath) {
  if (!PATH.resolve(oldpath)) {
   throw new FS.ErrnoError(2);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(2);
  }
  var newname = PATH.basename(newpath);
  var err = FS.mayCreate(parent, newname);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(1);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 },
 rename: function(old_path, new_path) {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  try {
   lookup = FS.lookupPath(old_path, {
    parent: true
   });
   old_dir = lookup.node;
   lookup = FS.lookupPath(new_path, {
    parent: true
   });
   new_dir = lookup.node;
  } catch (e) {
   throw new FS.ErrnoError(16);
  }
  if (!old_dir || !new_dir) throw new FS.ErrnoError(2);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(18);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(22);
  }
  relative = PATH.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(39);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var err = FS.mayDelete(old_dir, old_name, isdir);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(1);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(16);
  }
  if (new_dir !== old_dir) {
   err = FS.nodePermissions(old_dir, "w");
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  try {
   if (FS.trackingDelegate["willMovePath"]) {
    FS.trackingDelegate["willMovePath"](old_path, new_path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
  try {
   if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
  } catch (e) {
   console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
 },
 rmdir: function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, true);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(1);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(16);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 },
 readdir: function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(20);
  }
  return node.node_ops.readdir(node);
 },
 unlink: function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, false);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(1);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(16);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 },
 readlink: function(path) {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(2);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(22);
  }
  return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 },
 stat: function(path, dontFollow) {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(2);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(1);
  }
  return node.node_ops.getattr(node);
 },
 lstat: function(path) {
  return FS.stat(path, true);
 },
 chmod: function(path, mode, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(1);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 },
 lchmod: function(path, mode) {
  FS.chmod(path, mode, true);
 },
 fchmod: function(fd, mode) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(9);
  }
  FS.chmod(stream.node, mode);
 },
 chown: function(path, uid, gid, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(1);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 },
 lchown: function(path, uid, gid) {
  FS.chown(path, uid, gid, true);
 },
 fchown: function(fd, uid, gid) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(9);
  }
  FS.chown(stream.node, uid, gid);
 },
 truncate: function(path, len) {
  if (len < 0) {
   throw new FS.ErrnoError(22);
  }
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(1);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(21);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(22);
  }
  var err = FS.nodePermissions(node, "w");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 },
 ftruncate: function(fd, len) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(9);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(22);
  }
  FS.truncate(stream.node, len);
 },
 utime: function(path, atime, mtime) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 },
 open: function(path, flags, mode, fd_start, fd_end) {
  if (path === "") {
   throw new FS.ErrnoError(2);
  }
  flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode === "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path === "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(17);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(2);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(20);
  }
  if (!created) {
   var err = FS.mayOpen(node, flags);
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  if (flags & 512) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  }, fd_start, fd_end);
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
    console.log("FS.trackingDelegate error on read file: " + path);
   }
  }
  try {
   if (FS.trackingDelegate["onOpenFile"]) {
    var trackingFlags = 0;
    if ((flags & 2097155) !== 1) {
     trackingFlags |= FS.tracking.openFlags.READ;
    }
    if ((flags & 2097155) !== 0) {
     trackingFlags |= FS.tracking.openFlags.WRITE;
    }
    FS.trackingDelegate["onOpenFile"](path, trackingFlags);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
  }
  return stream;
 },
 close: function(stream) {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
  stream.fd = null;
 },
 isClosed: function(stream) {
  return stream.fd === null;
 },
 llseek: function(stream, offset, whence) {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(29);
  }
  if (whence != 0 && whence != 1 && whence != 2) {
   throw new FS.ErrnoError(22);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 },
 read: function(stream, buffer, offset, length, position) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(22);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(9);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(21);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(22);
  }
  var seeking = typeof position !== "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(29);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 },
 write: function(stream, buffer, offset, length, position, canOwn) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(22);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(9);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(21);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(22);
  }
  if (stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = typeof position !== "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(29);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  try {
   if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
  } catch (e) {
   console.log("FS.trackingDelegate['onWriteToFile']('" + stream.path + "') threw an exception: " + e.message);
  }
  return bytesWritten;
 },
 allocate: function(stream, offset, length) {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(9);
  }
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(22);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(9);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(19);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(95);
  }
  stream.stream_ops.allocate(stream, offset, length);
 },
 mmap: function(stream, buffer, offset, length, position, prot, flags) {
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(13);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(19);
  }
  return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
 },
 msync: function(stream, buffer, offset, length, mmapFlags) {
  if (!stream || !stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 },
 munmap: function(stream) {
  return 0;
 },
 ioctl: function(stream, cmd, arg) {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(25);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 },
 readFile: function(path, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "r";
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 },
 writeFile: function(path, data, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "w";
  var stream = FS.open(path, opts.flags, opts.mode);
  if (typeof data === "string") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
  } else if (ArrayBuffer.isView(data)) {
   FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
  } else {
   throw new Error("Unsupported data type");
  }
  FS.close(stream);
 },
 cwd: function() {
  return FS.currentPath;
 },
 chdir: function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (lookup.node === null) {
   throw new FS.ErrnoError(2);
  }
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(20);
  }
  var err = FS.nodePermissions(lookup.node, "x");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  FS.currentPath = lookup.path;
 },
 createDefaultDirectories: function() {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 },
 createDefaultDevices: function() {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: function() {
    return 0;
   },
   write: function(stream, buffer, offset, length, pos) {
    return length;
   }
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device;
  if (typeof crypto === "object" && typeof crypto["getRandomValues"] === "function") {
   var randomBuffer = new Uint8Array(1);
   random_device = function() {
    crypto.getRandomValues(randomBuffer);
    return randomBuffer[0];
   };
  } else if (ENVIRONMENT_IS_NODE) {
   try {
    var crypto_module = require("crypto");
    random_device = function() {
     return crypto_module["randomBytes"](1)[0];
    };
   } catch (e) {}
  } else {}
  if (!random_device) {
   random_device = function() {
    abort("no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };");
   };
  }
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 },
 createSpecialDirectories: function() {
  FS.mkdir("/proc");
  FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: function() {
    var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: function(parent, name) {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(9);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: function() {
         return stream.path;
        }
       }
      };
      ret.parent = ret;
      return ret;
     }
    };
    return node;
   }
  }, {}, "/proc/self/fd");
 },
 createStandardStreams: function() {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", "r");
  var stdout = FS.open("/dev/stdout", "w");
  var stderr = FS.open("/dev/stderr", "w");
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 },
 ensureErrnoError: function() {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.node = node;
   this.setErrno = function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   };
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
   if (this.stack) Object.defineProperty(this, "stack", {
    value: new Error().stack,
    writable: true
   });
   if (this.stack) this.stack = demangleAll(this.stack);
  };
  FS.ErrnoError.prototype = new Error();
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ 2 ].forEach(function(code) {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  });
 },
 staticInit: function() {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS,
   "IDBFS": IDBFS,
   "NODEFS": NODEFS,
   "WORKERFS": WORKERFS
  };
 },
 init: function(input, output, error) {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 },
 quit: function() {
  FS.init.initialized = false;
  var fflush = Module["_fflush"];
  if (fflush) fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 },
 getMode: function(canRead, canWrite) {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 },
 joinPath: function(parts, forceRelative) {
  var path = PATH.join.apply(null, parts);
  if (forceRelative && path[0] == "/") path = path.substr(1);
  return path;
 },
 absolutePath: function(relative, base) {
  return PATH.resolve(base, relative);
 },
 standardizePath: function(path) {
  return PATH.normalize(path);
 },
 findObject: function(path, dontResolveLastLink) {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (ret.exists) {
   return ret.object;
  } else {
   ___setErrNo(ret.error);
   return null;
  }
 },
 analyzePath: function(path, dontResolveLastLink) {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 },
 createFolder: function(parent, name, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.mkdir(path, mode);
 },
 createPath: function(parent, path, canRead, canWrite) {
  parent = typeof parent === "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 },
 createFile: function(parent, name, properties, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 },
 createDataFile: function(parent, name, data, canRead, canWrite, canOwn) {
  var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data === "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, "w");
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 },
 createDevice: function(parent, name, input, output) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: function(stream) {
    stream.seekable = false;
   },
   close: function(stream) {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   },
   read: function(stream, buffer, offset, length, pos) {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(5);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(11);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   },
   write: function(stream, buffer, offset, length, pos) {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(5);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   }
  });
  return FS.mkdev(path, mode, dev);
 },
 createLink: function(parent, name, target, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  return FS.symlink(target, path);
 },
 forceLoadFile: function(obj) {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  var success = true;
  if (typeof XMLHttpRequest !== "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (Module["read"]) {
   try {
    obj.contents = intArrayFromString(Module["read"](obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    success = false;
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
  if (!success) ___setErrNo(5);
  return success;
 },
 createLazyFile: function(parent, name, url, canRead, canWrite) {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest();
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = function(from, to) {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    } else {
     return intArrayFromString(xhr.responseText || "", true);
    }
   };
   var lazyArray = this;
   lazyArray.setDataGetter(function(chunkNum) {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] === "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   });
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest !== "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array();
   Object.defineProperties(lazyArray, {
    length: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     }
    },
    chunkSize: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     }
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: function() {
     return this.contents.length;
    }
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach(function(key) {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    if (!FS.forceLoadFile(node)) {
     throw new FS.ErrnoError(5);
    }
    return fn.apply(null, arguments);
   };
  });
  stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
   if (!FS.forceLoadFile(node)) {
    throw new FS.ErrnoError(5);
   }
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  };
  node.stream_ops = stream_ops;
  return node;
 },
 createPreloadedFile: function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
  Browser.init();
  var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   var handled = false;
   Module["preloadPlugins"].forEach(function(plugin) {
    if (handled) return;
    if (plugin["canHandle"](fullname)) {
     plugin["handle"](byteArray, fullname, finish, function() {
      if (onerror) onerror();
      removeRunDependency(dep);
     });
     handled = true;
    }
   });
   if (!handled) finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   Browser.asyncLoad(url, function(byteArray) {
    processData(byteArray);
   }, onerror);
  } else {
   processData(url);
  }
 },
 indexedDB: function() {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 },
 DB_NAME: function() {
  return "EM_FS_" + window.location.pathname;
 },
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: function(paths, onload, onerror) {
  onload = onload || function() {};
  onerror = onerror || function() {};
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
   console.log("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(function(path) {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = function putRequest_onsuccess() {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = function putRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 },
 loadFilesFromDB: function(paths, onload, onerror) {
  onload = onload || function() {};
  onerror = onerror || function() {};
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(function(path) {
    var getRequest = files.get(path);
    getRequest.onsuccess = function getRequest_onsuccess() {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = function getRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 }
};

var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 mappings: {},
 umask: 511,
 calculateAt: function(dirfd, path) {
  if (path[0] !== "/") {
   var dir;
   if (dirfd === -100) {
    dir = FS.cwd();
   } else {
    var dirstream = FS.getStream(dirfd);
    if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    dir = dirstream.path;
   }
   path = PATH.join2(dir, path);
  }
  return path;
 },
 doStat: function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -ERRNO_CODES.ENOTDIR;
   }
   throw e;
  }
  HEAP32[buf >> 2] = stat.dev;
  HEAP32[buf + 4 >> 2] = 0;
  HEAP32[buf + 8 >> 2] = stat.ino;
  HEAP32[buf + 12 >> 2] = stat.mode;
  HEAP32[buf + 16 >> 2] = stat.nlink;
  HEAP32[buf + 20 >> 2] = stat.uid;
  HEAP32[buf + 24 >> 2] = stat.gid;
  HEAP32[buf + 28 >> 2] = stat.rdev;
  HEAP32[buf + 32 >> 2] = 0;
  tempI64 = [ stat.size >>> 0, (tempDouble = stat.size, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], 
  HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];
  HEAP32[buf + 48 >> 2] = 4096;
  HEAP32[buf + 52 >> 2] = stat.blocks;
  HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;
  HEAP32[buf + 60 >> 2] = 0;
  HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;
  HEAP32[buf + 68 >> 2] = 0;
  HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;
  HEAP32[buf + 76 >> 2] = 0;
  tempI64 = [ stat.ino >>> 0, (tempDouble = stat.ino, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], 
  HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];
  return 0;
 },
 doMsync: function(addr, stream, len, flags) {
  var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
  FS.msync(stream, buffer, 0, len, flags);
 },
 doMkdir: function(path, mode) {
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 },
 doMknod: function(path, mode, dev) {
  switch (mode & 61440) {
  case 32768:
  case 8192:
  case 24576:
  case 4096:
  case 49152:
   break;

  default:
   return -ERRNO_CODES.EINVAL;
  }
  FS.mknod(path, mode, dev);
  return 0;
 },
 doReadlink: function(path, buf, bufsize) {
  if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
  var ret = FS.readlink(path);
  var len = Math.min(bufsize, lengthBytesUTF8(ret));
  var endChar = HEAP8[buf + len];
  stringToUTF8(ret, buf, bufsize + 1);
  HEAP8[buf + len] = endChar;
  return len;
 },
 doAccess: function(path, amode) {
  if (amode & ~7) {
   return -ERRNO_CODES.EINVAL;
  }
  var node;
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  node = lookup.node;
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -ERRNO_CODES.EACCES;
  }
  return 0;
 },
 doDup: function(path, flags, suggestFD) {
  var suggest = FS.getStream(suggestFD);
  if (suggest) FS.close(suggest);
  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
 },
 doReadv: function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.read(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
   if (curr < len) break;
  }
  return ret;
 },
 doWritev: function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.write(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
  }
  return ret;
 },
 varargs: 0,
 get: function(varargs) {
  SYSCALLS.varargs += 4;
  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
  return ret;
 },
 getStr: function() {
  var ret = UTF8ToString(SYSCALLS.get());
  return ret;
 },
 getStreamFromFD: function() {
  var stream = FS.getStream(SYSCALLS.get());
  if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return stream;
 },
 getSocketFromFD: function() {
  var socket = SOCKFS.getSocket(SYSCALLS.get());
  if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return socket;
 },
 getSocketAddress: function(allowNull) {
  var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
  if (allowNull && addrp === 0) return null;
  var info = __read_sockaddr(addrp, addrlen);
  if (info.errno) throw new FS.ErrnoError(info.errno);
  info.addr = DNS.lookup_addr(info.addr) || info.addr;
  return info;
 },
 get64: function() {
  var low = SYSCALLS.get(), high = SYSCALLS.get();
  if (low >= 0) assert(high === 0); else assert(high === -1);
  return low;
 },
 getZero: function() {
  assert(SYSCALLS.get() === 0);
 }
};

function ___syscall10(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var path = SYSCALLS.getStr();
  FS.unlink(path);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall140(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
  if (!(offset_high == -1 && offset_low < 0) && !(offset_high == 0 && offset_low >= 0)) {
   return -ERRNO_CODES.EOVERFLOW;
  }
  var offset = offset_low;
  FS.llseek(stream, offset, whence);
  tempI64 = [ stream.position >>> 0, (tempDouble = stream.position, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], 
  HEAP32[result >> 2] = tempI64[0], HEAP32[result + 4 >> 2] = tempI64[1];
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall145(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doReadv(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall146(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doWritev(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall221(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
  switch (cmd) {
  case 0:
   {
    var arg = SYSCALLS.get();
    if (arg < 0) {
     return -ERRNO_CODES.EINVAL;
    }
    var newStream;
    newStream = FS.open(stream.path, stream.flags, 0, arg);
    return newStream.fd;
   }

  case 1:
  case 2:
   return 0;

  case 3:
   return stream.flags;

  case 4:
   {
    var arg = SYSCALLS.get();
    stream.flags |= arg;
    return 0;
   }

  case 12:
   {
    var arg = SYSCALLS.get();
    var offset = 0;
    HEAP16[arg + offset >> 1] = 2;
    return 0;
   }

  case 13:
  case 14:
   return 0;

  case 16:
  case 8:
   return -ERRNO_CODES.EINVAL;

  case 9:
   ___setErrNo(ERRNO_CODES.EINVAL);
   return -1;

  default:
   {
    return -ERRNO_CODES.EINVAL;
   }
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall5(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get();
  var stream = FS.open(pathname, flags, mode);
  return stream.fd;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall54(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
  switch (op) {
  case 21509:
  case 21505:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }

  case 21510:
  case 21511:
  case 21512:
  case 21506:
  case 21507:
  case 21508:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }

  case 21519:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    var argp = SYSCALLS.get();
    HEAP32[argp >> 2] = 0;
    return 0;
   }

  case 21520:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return -ERRNO_CODES.EINVAL;
   }

  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }

  case 21523:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }

  case 21524:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }

  default:
   abort("bad ioctl syscall " + op);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall6(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD();
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___syscall91(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var addr = SYSCALLS.get(), len = SYSCALLS.get();
  var info = SYSCALLS.mappings[addr];
  if (!info) return 0;
  if (len === info.len) {
   var stream = FS.getStream(info.fd);
   SYSCALLS.doMsync(addr, stream, len, info.flags);
   FS.munmap(stream);
   SYSCALLS.mappings[addr] = null;
   if (info.allocated) {
    _free(info.malloc);
   }
  }
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___unlock() {}

function getShiftFromSize(size) {
 switch (size) {
 case 1:
  return 0;

 case 2:
  return 1;

 case 4:
  return 2;

 case 8:
  return 3;

 default:
  throw new TypeError("Unknown type size: " + size);
 }
}

function embind_init_charCodes() {
 var codes = new Array(256);
 for (var i = 0; i < 256; ++i) {
  codes[i] = String.fromCharCode(i);
 }
 embind_charCodes = codes;
}

var embind_charCodes = undefined;

function readLatin1String(ptr) {
 var ret = "";
 var c = ptr;
 while (HEAPU8[c]) {
  ret += embind_charCodes[HEAPU8[c++]];
 }
 return ret;
}

var awaitingDependencies = {};

var registeredTypes = {};

var typeDependencies = {};

var char_0 = 48;

var char_9 = 57;

function makeLegalFunctionName(name) {
 if (undefined === name) {
  return "_unknown";
 }
 name = name.replace(/[^a-zA-Z0-9_]/g, "$");
 var f = name.charCodeAt(0);
 if (f >= char_0 && f <= char_9) {
  return "_" + name;
 } else {
  return name;
 }
}

function createNamedFunction(name, body) {
 name = makeLegalFunctionName(name);
 return new Function("body", "return function " + name + "() {\n" + '    "use strict";' + "    return body.apply(this, arguments);\n" + "};\n")(body);
}

function extendError(baseErrorType, errorName) {
 var errorClass = createNamedFunction(errorName, function(message) {
  this.name = errorName;
  this.message = message;
  var stack = new Error(message).stack;
  if (stack !== undefined) {
   this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
  }
 });
 errorClass.prototype = Object.create(baseErrorType.prototype);
 errorClass.prototype.constructor = errorClass;
 errorClass.prototype.toString = function() {
  if (this.message === undefined) {
   return this.name;
  } else {
   return this.name + ": " + this.message;
  }
 };
 return errorClass;
}

var BindingError = undefined;

function throwBindingError(message) {
 throw new BindingError(message);
}

var InternalError = undefined;

function throwInternalError(message) {
 throw new InternalError(message);
}

function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
 myTypes.forEach(function(type) {
  typeDependencies[type] = dependentTypes;
 });
 function onComplete(typeConverters) {
  var myTypeConverters = getTypeConverters(typeConverters);
  if (myTypeConverters.length !== myTypes.length) {
   throwInternalError("Mismatched type converter count");
  }
  for (var i = 0; i < myTypes.length; ++i) {
   registerType(myTypes[i], myTypeConverters[i]);
  }
 }
 var typeConverters = new Array(dependentTypes.length);
 var unregisteredTypes = [];
 var registered = 0;
 dependentTypes.forEach(function(dt, i) {
  if (registeredTypes.hasOwnProperty(dt)) {
   typeConverters[i] = registeredTypes[dt];
  } else {
   unregisteredTypes.push(dt);
   if (!awaitingDependencies.hasOwnProperty(dt)) {
    awaitingDependencies[dt] = [];
   }
   awaitingDependencies[dt].push(function() {
    typeConverters[i] = registeredTypes[dt];
    ++registered;
    if (registered === unregisteredTypes.length) {
     onComplete(typeConverters);
    }
   });
  }
 });
 if (0 === unregisteredTypes.length) {
  onComplete(typeConverters);
 }
}

function registerType(rawType, registeredInstance, options) {
 options = options || {};
 if (!("argPackAdvance" in registeredInstance)) {
  throw new TypeError("registerType registeredInstance requires argPackAdvance");
 }
 var name = registeredInstance.name;
 if (!rawType) {
  throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
 }
 if (registeredTypes.hasOwnProperty(rawType)) {
  if (options.ignoreDuplicateRegistrations) {
   return;
  } else {
   throwBindingError("Cannot register type '" + name + "' twice");
  }
 }
 registeredTypes[rawType] = registeredInstance;
 delete typeDependencies[rawType];
 if (awaitingDependencies.hasOwnProperty(rawType)) {
  var callbacks = awaitingDependencies[rawType];
  delete awaitingDependencies[rawType];
  callbacks.forEach(function(cb) {
   cb();
  });
 }
}

function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(wt) {
   return !!wt;
  },
  "toWireType": function(destructors, o) {
   return o ? trueValue : falseValue;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": function(pointer) {
   var heap;
   if (size === 1) {
    heap = HEAP8;
   } else if (size === 2) {
    heap = HEAP16;
   } else if (size === 4) {
    heap = HEAP32;
   } else {
    throw new TypeError("Unknown boolean type size: " + name);
   }
   return this["fromWireType"](heap[pointer >> shift]);
  },
  destructorFunction: null
 });
}

function __embind_register_constant(name, type, value) {
 name = readLatin1String(name);
 whenDependentTypesAreResolved([], [ type ], function(type) {
  type = type[0];
  Module[name] = type["fromWireType"](value);
  return [];
 });
}

var emval_free_list = [];

var emval_handle_array = [ {}, {
 value: undefined
}, {
 value: null
}, {
 value: true
}, {
 value: false
} ];

function __emval_decref(handle) {
 if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
  emval_handle_array[handle] = undefined;
  emval_free_list.push(handle);
 }
}

function count_emval_handles() {
 var count = 0;
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   ++count;
  }
 }
 return count;
}

function get_first_emval() {
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   return emval_handle_array[i];
  }
 }
 return null;
}

function init_emval() {
 Module["count_emval_handles"] = count_emval_handles;
 Module["get_first_emval"] = get_first_emval;
}

function __emval_register(value) {
 switch (value) {
 case undefined:
  {
   return 1;
  }

 case null:
  {
   return 2;
  }

 case true:
  {
   return 3;
  }

 case false:
  {
   return 4;
  }

 default:
  {
   var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
   emval_handle_array[handle] = {
    refcount: 1,
    value: value
   };
   return handle;
  }
 }
}

function simpleReadValueFromPointer(pointer) {
 return this["fromWireType"](HEAPU32[pointer >> 2]);
}

function __embind_register_emval(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(handle) {
   var rv = emval_handle_array[handle].value;
   __emval_decref(handle);
   return rv;
  },
  "toWireType": function(destructors, value) {
   return __emval_register(value);
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: null
 });
}

function _embind_repr(v) {
 if (v === null) {
  return "null";
 }
 var t = typeof v;
 if (t === "object" || t === "array" || t === "function") {
  return v.toString();
 } else {
  return "" + v;
 }
}

function floatReadValueFromPointer(name, shift) {
 switch (shift) {
 case 2:
  return function(pointer) {
   return this["fromWireType"](HEAPF32[pointer >> 2]);
  };

 case 3:
  return function(pointer) {
   return this["fromWireType"](HEAPF64[pointer >> 3]);
  };

 default:
  throw new TypeError("Unknown float type: " + name);
 }
}

function __embind_register_float(rawType, name, size) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   return value;
  },
  "toWireType": function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   return value;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": floatReadValueFromPointer(name, shift),
  destructorFunction: null
 });
}

function new_(constructor, argumentList) {
 if (!(constructor instanceof Function)) {
  throw new TypeError("new_ called with constructor type " + typeof constructor + " which is not a function");
 }
 var dummy = createNamedFunction(constructor.name || "unknownFunctionName", function() {});
 dummy.prototype = constructor.prototype;
 var obj = new dummy();
 var r = constructor.apply(obj, argumentList);
 return r instanceof Object ? r : obj;
}

function runDestructors(destructors) {
 while (destructors.length) {
  var ptr = destructors.pop();
  var del = destructors.pop();
  del(ptr);
 }
}

function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
 var argCount = argTypes.length;
 if (argCount < 2) {
  throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
 }
 var isClassMethodFunc = argTypes[1] !== null && classType !== null;
 var needsDestructorStack = false;
 for (var i = 1; i < argTypes.length; ++i) {
  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {
   needsDestructorStack = true;
   break;
  }
 }
 var returns = argTypes[0].name !== "void";
 var argsList = "";
 var argsListWired = "";
 for (var i = 0; i < argCount - 2; ++i) {
  argsList += (i !== 0 ? ", " : "") + "arg" + i;
  argsListWired += (i !== 0 ? ", " : "") + "arg" + i + "Wired";
 }
 var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\n" + "if (arguments.length !== " + (argCount - 2) + ") {\n" + "throwBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n" + "}\n";
 if (needsDestructorStack) {
  invokerFnBody += "var destructors = [];\n";
 }
 var dtorStack = needsDestructorStack ? "destructors" : "null";
 var args1 = [ "throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam" ];
 var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];
 if (isClassMethodFunc) {
  invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
 }
 for (var i = 0; i < argCount - 2; ++i) {
  invokerFnBody += "var arg" + i + "Wired = argType" + i + ".toWireType(" + dtorStack + ", arg" + i + "); // " + argTypes[i + 2].name + "\n";
  args1.push("argType" + i);
  args2.push(argTypes[i + 2]);
 }
 if (isClassMethodFunc) {
  argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
 }
 invokerFnBody += (returns ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";
 if (needsDestructorStack) {
  invokerFnBody += "runDestructors(destructors);\n";
 } else {
  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {
   var paramName = i === 1 ? "thisWired" : "arg" + (i - 2) + "Wired";
   if (argTypes[i].destructorFunction !== null) {
    invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes[i].name + "\n";
    args1.push(paramName + "_dtor");
    args2.push(argTypes[i].destructorFunction);
   }
  }
 }
 if (returns) {
  invokerFnBody += "var ret = retType.fromWireType(rv);\n" + "return ret;\n";
 } else {}
 invokerFnBody += "}\n";
 args1.push(invokerFnBody);
 var invokerFunction = new_(Function, args1).apply(null, args2);
 return invokerFunction;
}

function ensureOverloadTable(proto, methodName, humanName) {
 if (undefined === proto[methodName].overloadTable) {
  var prevFunc = proto[methodName];
  proto[methodName] = function() {
   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
    throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
   }
   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
  };
  proto[methodName].overloadTable = [];
  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
 }
}

function exposePublicSymbol(name, value, numArguments) {
 if (Module.hasOwnProperty(name)) {
  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {
   throwBindingError("Cannot register public name '" + name + "' twice");
  }
  ensureOverloadTable(Module, name, name);
  if (Module.hasOwnProperty(numArguments)) {
   throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
  }
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  if (undefined !== numArguments) {
   Module[name].numArguments = numArguments;
  }
 }
}

function heap32VectorToArray(count, firstElement) {
 var array = [];
 for (var i = 0; i < count; i++) {
  array.push(HEAP32[(firstElement >> 2) + i]);
 }
 return array;
}

function replacePublicSymbol(name, value, numArguments) {
 if (!Module.hasOwnProperty(name)) {
  throwInternalError("Replacing nonexistant public symbol");
 }
 if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  Module[name].argCount = numArguments;
 }
}

function embind__requireFunction(signature, rawFunction) {
 signature = readLatin1String(signature);
 function makeDynCaller(dynCall) {
  var args = [];
  for (var i = 1; i < signature.length; ++i) {
   args.push("a" + i);
  }
  var name = "dynCall_" + signature + "_" + rawFunction;
  var body = "return function " + name + "(" + args.join(", ") + ") {\n";
  body += "    return dynCall(rawFunction" + (args.length ? ", " : "") + args.join(", ") + ");\n";
  body += "};\n";
  return new Function("dynCall", "rawFunction", body)(dynCall, rawFunction);
 }
 var fp;
 if (Module["FUNCTION_TABLE_" + signature] !== undefined) {
  fp = Module["FUNCTION_TABLE_" + signature][rawFunction];
 } else if (typeof FUNCTION_TABLE !== "undefined") {
  fp = FUNCTION_TABLE[rawFunction];
 } else {
  var dc = Module["dynCall_" + signature];
  if (dc === undefined) {
   dc = Module["dynCall_" + signature.replace(/f/g, "d")];
   if (dc === undefined) {
    throwBindingError("No dynCall invoker for signature: " + signature);
   }
  }
  fp = makeDynCaller(dc);
 }
 if (typeof fp !== "function") {
  throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
 }
 return fp;
}

var UnboundTypeError = undefined;

function getTypeName(type) {
 var ptr = ___getTypeName(type);
 var rv = readLatin1String(ptr);
 _free(ptr);
 return rv;
}

function throwUnboundTypeError(message, types) {
 var unboundTypes = [];
 var seen = {};
 function visit(type) {
  if (seen[type]) {
   return;
  }
  if (registeredTypes[type]) {
   return;
  }
  if (typeDependencies[type]) {
   typeDependencies[type].forEach(visit);
   return;
  }
  unboundTypes.push(type);
  seen[type] = true;
 }
 types.forEach(visit);
 throw new UnboundTypeError(message + ": " + unboundTypes.map(getTypeName).join([ ", " ]));
}

function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
 var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 name = readLatin1String(name);
 rawInvoker = embind__requireFunction(signature, rawInvoker);
 exposePublicSymbol(name, function() {
  throwUnboundTypeError("Cannot call " + name + " due to unbound types", argTypes);
 }, argCount - 1);
 whenDependentTypesAreResolved([], argTypes, function(argTypes) {
  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));
  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);
  return [];
 });
}

function integerReadValueFromPointer(name, shift, signed) {
 switch (shift) {
 case 0:
  return signed ? function readS8FromPointer(pointer) {
   return HEAP8[pointer];
  } : function readU8FromPointer(pointer) {
   return HEAPU8[pointer];
  };

 case 1:
  return signed ? function readS16FromPointer(pointer) {
   return HEAP16[pointer >> 1];
  } : function readU16FromPointer(pointer) {
   return HEAPU16[pointer >> 1];
  };

 case 2:
  return signed ? function readS32FromPointer(pointer) {
   return HEAP32[pointer >> 2];
  } : function readU32FromPointer(pointer) {
   return HEAPU32[pointer >> 2];
  };

 default:
  throw new TypeError("Unknown integer type: " + name);
 }
}

function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
 name = readLatin1String(name);
 if (maxRange === -1) {
  maxRange = 4294967295;
 }
 var shift = getShiftFromSize(size);
 var fromWireType = function(value) {
  return value;
 };
 if (minRange === 0) {
  var bitshift = 32 - 8 * size;
  fromWireType = function(value) {
   return value << bitshift >>> bitshift;
  };
 }
 var isUnsignedType = name.indexOf("unsigned") != -1;
 registerType(primitiveType, {
  name: name,
  "fromWireType": fromWireType,
  "toWireType": function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   if (value < minRange || value > maxRange) {
    throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ", " + maxRange + "]!");
   }
   return isUnsignedType ? value >>> 0 : value | 0;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": integerReadValueFromPointer(name, shift, minRange !== 0),
  destructorFunction: null
 });
}

function __embind_register_memory_view(rawType, dataTypeIndex, name) {
 var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];
 var TA = typeMapping[dataTypeIndex];
 function decodeMemoryView(handle) {
  handle = handle >> 2;
  var heap = HEAPU32;
  var size = heap[handle];
  var data = heap[handle + 1];
  return new TA(heap["buffer"], data, size);
 }
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": decodeMemoryView,
  "argPackAdvance": 8,
  "readValueFromPointer": decodeMemoryView
 }, {
  ignoreDuplicateRegistrations: true
 });
}

function __embind_register_std_string(rawType, name) {
 name = readLatin1String(name);
 var stdStringIsUTF8 = name === "std::string";
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var length = HEAPU32[value >> 2];
   var str;
   if (stdStringIsUTF8) {
    var endChar = HEAPU8[value + 4 + length];
    var endCharSwap = 0;
    if (endChar != 0) {
     endCharSwap = endChar;
     HEAPU8[value + 4 + length] = 0;
    }
    var decodeStartPtr = value + 4;
    for (var i = 0; i <= length; ++i) {
     var currentBytePtr = value + 4 + i;
     if (HEAPU8[currentBytePtr] == 0) {
      var stringSegment = UTF8ToString(decodeStartPtr);
      if (str === undefined) str = stringSegment; else {
       str += String.fromCharCode(0);
       str += stringSegment;
      }
      decodeStartPtr = currentBytePtr + 1;
     }
    }
    if (endCharSwap != 0) HEAPU8[value + 4 + length] = endCharSwap;
   } else {
    var a = new Array(length);
    for (var i = 0; i < length; ++i) {
     a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
    }
    str = a.join("");
   }
   _free(value);
   return str;
  },
  "toWireType": function(destructors, value) {
   if (value instanceof ArrayBuffer) {
    value = new Uint8Array(value);
   }
   var getLength;
   var valueIsOfTypeString = typeof value === "string";
   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
    throwBindingError("Cannot pass non-string to std::string");
   }
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    getLength = function() {
     return lengthBytesUTF8(value);
    };
   } else {
    getLength = function() {
     return value.length;
    };
   }
   var length = getLength();
   var ptr = _malloc(4 + length + 1);
   HEAPU32[ptr >> 2] = length;
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    stringToUTF8(value, ptr + 4, length + 1);
   } else {
    if (valueIsOfTypeString) {
     for (var i = 0; i < length; ++i) {
      var charCode = value.charCodeAt(i);
      if (charCode > 255) {
       _free(ptr);
       throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
      }
      HEAPU8[ptr + 4 + i] = charCode;
     }
    } else {
     for (var i = 0; i < length; ++i) {
      HEAPU8[ptr + 4 + i] = value[i];
     }
    }
   }
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

function __embind_register_std_wstring(rawType, charSize, name) {
 name = readLatin1String(name);
 var getHeap, shift;
 if (charSize === 2) {
  getHeap = function() {
   return HEAPU16;
  };
  shift = 1;
 } else if (charSize === 4) {
  getHeap = function() {
   return HEAPU32;
  };
  shift = 2;
 }
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var HEAP = getHeap();
   var length = HEAPU32[value >> 2];
   var a = new Array(length);
   var start = value + 4 >> shift;
   for (var i = 0; i < length; ++i) {
    a[i] = String.fromCharCode(HEAP[start + i]);
   }
   _free(value);
   return a.join("");
  },
  "toWireType": function(destructors, value) {
   var HEAP = getHeap();
   var length = value.length;
   var ptr = _malloc(4 + length * charSize);
   HEAPU32[ptr >> 2] = length;
   var start = ptr + 4 >> shift;
   for (var i = 0; i < length; ++i) {
    HEAP[start + i] = value.charCodeAt(i);
   }
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

function __embind_register_void(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  isVoid: true,
  name: name,
  "argPackAdvance": 0,
  "fromWireType": function() {
   return undefined;
  },
  "toWireType": function(destructors, o) {
   return undefined;
  }
 });
}

function _abort() {
 Module["abort"]();
}

function _emscripten_get_heap_size() {
 return HEAP8.length;
}

function abortOnCannotGrowMemory(requestedSize) {
 abort("Cannot enlarge memory arrays to size " + requestedSize + " bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + HEAP8.length + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
}

function emscripten_realloc_buffer(size) {
 try {
  var newBuffer = new ArrayBuffer(size);
  if (newBuffer.byteLength != size) return false;
  new Int8Array(newBuffer).set(HEAP8);
 } catch (e) {
  return false;
 }
 buffer = newBuffer;
 Module["_emscripten_replace_memory"](newBuffer);
 return true;
}

function _emscripten_resize_heap(requestedSize) {
 var oldSize = _emscripten_get_heap_size();
 assert(requestedSize > oldSize);
 var PAGE_MULTIPLE = 16777216;
 var LIMIT = 2147483648 - PAGE_MULTIPLE;
 if (requestedSize > LIMIT) {
  err("Cannot enlarge memory, asked to go up to " + requestedSize + " bytes, but the limit is " + LIMIT + " bytes!");
  return false;
 }
 var MIN_TOTAL_MEMORY = 16777216;
 var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY);
 while (newSize < requestedSize) {
  if (newSize <= 536870912) {
   newSize = alignUp(2 * newSize, PAGE_MULTIPLE);
  } else {
   newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);
   if (newSize === oldSize) {
    warnOnce("Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only " + HEAP8.length);
   }
  }
 }
 var start = Date.now();
 if (!emscripten_realloc_buffer(newSize)) {
  err("Failed to grow the heap from " + oldSize + " bytes to " + newSize + " bytes, not enough memory!");
  return false;
 }
 updateGlobalBufferViews();
 err("Warning: Enlarging memory arrays, this is not fast! " + [ oldSize, newSize ]);
 return true;
}

function _exit(status) {
 exit(status);
}

function _getenv(name) {
 if (name === 0) return 0;
 name = UTF8ToString(name);
 if (!ENV.hasOwnProperty(name)) return 0;
 if (_getenv.ret) _free(_getenv.ret);
 _getenv.ret = allocateUTF8(ENV[name]);
 return _getenv.ret;
}

function _gettimeofday(ptr) {
 var now = Date.now();
 HEAP32[ptr >> 2] = now / 1e3 | 0;
 HEAP32[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;
 return 0;
}

function _llvm_stackrestore(p) {
 var self = _llvm_stacksave;
 var ret = self.LLVM_SAVEDSTACKS[p];
 self.LLVM_SAVEDSTACKS.splice(p, 1);
 stackRestore(ret);
}

function _llvm_stacksave() {
 var self = _llvm_stacksave;
 if (!self.LLVM_SAVEDSTACKS) {
  self.LLVM_SAVEDSTACKS = [];
 }
 self.LLVM_SAVEDSTACKS.push(stackSave());
 return self.LLVM_SAVEDSTACKS.length - 1;
}

function _llvm_trap() {
 abort("trap!");
}

var ___tm_current = 58992;

var ___tm_timezone = (stringToUTF8("GMT", 59040, 4), 59040);

function _tzset() {
 if (_tzset.called) return;
 _tzset.called = true;
 HEAP32[__get_timezone() >> 2] = new Date().getTimezoneOffset() * 60;
 var winter = new Date(2e3, 0, 1);
 var summer = new Date(2e3, 6, 1);
 HEAP32[__get_daylight() >> 2] = Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
 function extractZone(date) {
  var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
  return match ? match[1] : "GMT";
 }
 var winterName = extractZone(winter);
 var summerName = extractZone(summer);
 var winterNamePtr = allocate(intArrayFromString(winterName), "i8", ALLOC_NORMAL);
 var summerNamePtr = allocate(intArrayFromString(summerName), "i8", ALLOC_NORMAL);
 if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
  HEAP32[__get_tzname() >> 2] = winterNamePtr;
  HEAP32[__get_tzname() + 4 >> 2] = summerNamePtr;
 } else {
  HEAP32[__get_tzname() >> 2] = summerNamePtr;
  HEAP32[__get_tzname() + 4 >> 2] = winterNamePtr;
 }
}

function _localtime_r(time, tmPtr) {
 _tzset();
 var date = new Date(HEAP32[time >> 2] * 1e3);
 HEAP32[tmPtr >> 2] = date.getSeconds();
 HEAP32[tmPtr + 4 >> 2] = date.getMinutes();
 HEAP32[tmPtr + 8 >> 2] = date.getHours();
 HEAP32[tmPtr + 12 >> 2] = date.getDate();
 HEAP32[tmPtr + 16 >> 2] = date.getMonth();
 HEAP32[tmPtr + 20 >> 2] = date.getFullYear() - 1900;
 HEAP32[tmPtr + 24 >> 2] = date.getDay();
 var start = new Date(date.getFullYear(), 0, 1);
 var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;
 HEAP32[tmPtr + 28 >> 2] = yday;
 HEAP32[tmPtr + 36 >> 2] = -(date.getTimezoneOffset() * 60);
 var summerOffset = new Date(2e3, 6, 1).getTimezoneOffset();
 var winterOffset = start.getTimezoneOffset();
 var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;
 HEAP32[tmPtr + 32 >> 2] = dst;
 var zonePtr = HEAP32[__get_tzname() + (dst ? 4 : 0) >> 2];
 HEAP32[tmPtr + 40 >> 2] = zonePtr;
 return tmPtr;
}

function _localtime(time) {
 return _localtime_r(time, ___tm_current);
}

function _longjmp(env, value) {
 _setThrew(env, value || 1);
 throw "longjmp";
}

function _emscripten_memcpy_big(dest, src, num) {
 HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
}

function _pthread_attr_destroy(attr) {
 return 0;
}

function _pthread_attr_init(attr) {
 return 0;
}

function _pthread_attr_setdetachstate() {}

function _pthread_cond_destroy() {
 return 0;
}

function _pthread_cond_init() {
 return 0;
}

function _pthread_cond_signal() {
 return 0;
}

function _pthread_cond_wait() {
 return 0;
}

function _pthread_create() {
 return 11;
}

function __isLeapYear(year) {
 return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}

function __arraySum(array, index) {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) ;
 return sum;
}

var __MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

var __MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

function __addDays(date, days) {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = __isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
}

function _strftime(s, maxsize, format, tm) {
 var tm_zone = HEAP32[tm + 40 >> 2];
 var date = {
  tm_sec: HEAP32[tm >> 2],
  tm_min: HEAP32[tm + 4 >> 2],
  tm_hour: HEAP32[tm + 8 >> 2],
  tm_mday: HEAP32[tm + 12 >> 2],
  tm_mon: HEAP32[tm + 16 >> 2],
  tm_year: HEAP32[tm + 20 >> 2],
  tm_wday: HEAP32[tm + 24 >> 2],
  tm_yday: HEAP32[tm + 28 >> 2],
  tm_isdst: HEAP32[tm + 32 >> 2],
  tm_gmtoff: HEAP32[tm + 36 >> 2],
  tm_zone: tm_zone ? UTF8ToString(tm_zone) : ""
 };
 var pattern = UTF8ToString(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value === "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);

  case 1:
   return janFourth;

  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);

  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);

  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);

  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);

  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   } else {
    return thisDate.getFullYear();
   }
  } else {
   return thisDate.getFullYear() - 1;
  }
 }
 var EXPANSION_RULES_2 = {
  "%a": function(date) {
   return WEEKDAYS[date.tm_wday].substring(0, 3);
  },
  "%A": function(date) {
   return WEEKDAYS[date.tm_wday];
  },
  "%b": function(date) {
   return MONTHS[date.tm_mon].substring(0, 3);
  },
  "%B": function(date) {
   return MONTHS[date.tm_mon];
  },
  "%C": function(date) {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  },
  "%d": function(date) {
   return leadingNulls(date.tm_mday, 2);
  },
  "%e": function(date) {
   return leadingSomething(date.tm_mday, 2, " ");
  },
  "%g": function(date) {
   return getWeekBasedYear(date).toString().substring(2);
  },
  "%G": function(date) {
   return getWeekBasedYear(date);
  },
  "%H": function(date) {
   return leadingNulls(date.tm_hour, 2);
  },
  "%I": function(date) {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  },
  "%j": function(date) {
   return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
  },
  "%m": function(date) {
   return leadingNulls(date.tm_mon + 1, 2);
  },
  "%M": function(date) {
   return leadingNulls(date.tm_min, 2);
  },
  "%n": function() {
   return "\n";
  },
  "%p": function(date) {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   } else {
    return "PM";
   }
  },
  "%S": function(date) {
   return leadingNulls(date.tm_sec, 2);
  },
  "%t": function() {
   return "\t";
  },
  "%u": function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay() || 7;
  },
  "%U": function(date) {
   var janFirst = new Date(date.tm_year + 1900, 0, 1);
   var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstSunday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
  },
  "%V": function(date) {
   var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
   var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
   var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
   var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
   var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
   if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
    return "53";
   }
   if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
    return "01";
   }
   var daysDifference;
   if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
   } else {
    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
   }
   return leadingNulls(Math.ceil(daysDifference / 7), 2);
  },
  "%w": function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay();
  },
  "%W": function(date) {
   var janFirst = new Date(date.tm_year, 0, 1);
   var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstMonday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
  },
  "%y": function(date) {
   return (date.tm_year + 1900).toString().substring(2);
  },
  "%Y": function(date) {
   return date.tm_year + 1900;
  },
  "%z": function(date) {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  },
  "%Z": function(date) {
   return date.tm_zone;
  },
  "%%": function() {
   return "%";
  }
 };
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.indexOf(rule) >= 0) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}

function _strftime_l(s, maxsize, format, tm) {
 return _strftime(s, maxsize, format, tm);
}

function _sysconf(name) {
 switch (name) {
 case 30:
  return PAGE_SIZE;

 case 85:
  var maxHeapSize = 2 * 1024 * 1024 * 1024 - 16777216;
  return maxHeapSize / PAGE_SIZE;

 case 132:
 case 133:
 case 12:
 case 137:
 case 138:
 case 15:
 case 235:
 case 16:
 case 17:
 case 18:
 case 19:
 case 20:
 case 149:
 case 13:
 case 10:
 case 236:
 case 153:
 case 9:
 case 21:
 case 22:
 case 159:
 case 154:
 case 14:
 case 77:
 case 78:
 case 139:
 case 80:
 case 81:
 case 82:
 case 68:
 case 67:
 case 164:
 case 11:
 case 29:
 case 47:
 case 48:
 case 95:
 case 52:
 case 51:
 case 46:
  return 200809;

 case 79:
  return 0;

 case 27:
 case 246:
 case 127:
 case 128:
 case 23:
 case 24:
 case 160:
 case 161:
 case 181:
 case 182:
 case 242:
 case 183:
 case 184:
 case 243:
 case 244:
 case 245:
 case 165:
 case 178:
 case 179:
 case 49:
 case 50:
 case 168:
 case 169:
 case 175:
 case 170:
 case 171:
 case 172:
 case 97:
 case 76:
 case 32:
 case 173:
 case 35:
  return -1;

 case 176:
 case 177:
 case 7:
 case 155:
 case 8:
 case 157:
 case 125:
 case 126:
 case 92:
 case 93:
 case 129:
 case 130:
 case 131:
 case 94:
 case 91:
  return 1;

 case 74:
 case 60:
 case 69:
 case 70:
 case 4:
  return 1024;

 case 31:
 case 42:
 case 72:
  return 32;

 case 87:
 case 26:
 case 33:
  return 2147483647;

 case 34:
 case 1:
  return 47839;

 case 38:
 case 36:
  return 99;

 case 43:
 case 37:
  return 2048;

 case 0:
  return 2097152;

 case 3:
  return 65536;

 case 28:
  return 32768;

 case 44:
  return 32767;

 case 75:
  return 16384;

 case 39:
  return 1e3;

 case 89:
  return 700;

 case 71:
  return 256;

 case 40:
  return 255;

 case 2:
  return 100;

 case 180:
  return 64;

 case 25:
  return 20;

 case 5:
  return 16;

 case 6:
  return 6;

 case 73:
  return 4;

 case 84:
  {
   if (typeof navigator === "object") return navigator["hardwareConcurrency"] || 1;
   return 1;
  }
 }
 ___setErrNo(22);
 return -1;
}

function _time(ptr) {
 var ret = Date.now() / 1e3 | 0;
 if (ptr) {
  HEAP32[ptr >> 2] = ret;
 }
 return ret;
}

if (ENVIRONMENT_IS_NODE) {
 _emscripten_get_now = function _emscripten_get_now_actual() {
  var t = process["hrtime"]();
  return t[0] * 1e3 + t[1] / 1e6;
 };
} else if (typeof dateNow !== "undefined") {
 _emscripten_get_now = dateNow;
} else if (typeof performance === "object" && performance && typeof performance["now"] === "function") {
 _emscripten_get_now = function() {
  return performance["now"]();
 };
} else {
 _emscripten_get_now = Date.now;
}

FS.staticInit();

if (ENVIRONMENT_IS_NODE) {
 var fs = require("fs");
 var NODEJS_PATH = require("path");
 NODEFS.staticInit();
}

embind_init_charCodes();

BindingError = Module["BindingError"] = extendError(Error, "BindingError");

InternalError = Module["InternalError"] = extendError(Error, "InternalError");

init_emval();

UnboundTypeError = Module["UnboundTypeError"] = extendError(Error, "UnboundTypeError");

var ASSERTIONS = true;

function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}

function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   if (ASSERTIONS) {
    assert(false, "Character code " + chr + " (" + String.fromCharCode(chr) + ")  at offset " + i + " not in 0x00-0xFF.");
   }
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}

var decodeBase64 = typeof atob === "function" ? atob : function(input) {
 var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
 var output = "";
 var chr1, chr2, chr3;
 var enc1, enc2, enc3, enc4;
 var i = 0;
 input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
 do {
  enc1 = keyStr.indexOf(input.charAt(i++));
  enc2 = keyStr.indexOf(input.charAt(i++));
  enc3 = keyStr.indexOf(input.charAt(i++));
  enc4 = keyStr.indexOf(input.charAt(i++));
  chr1 = enc1 << 2 | enc2 >> 4;
  chr2 = (enc2 & 15) << 4 | enc3 >> 2;
  chr3 = (enc3 & 3) << 6 | enc4;
  output = output + String.fromCharCode(chr1);
  if (enc3 !== 64) {
   output = output + String.fromCharCode(chr2);
  }
  if (enc4 !== 64) {
   output = output + String.fromCharCode(chr3);
  }
 } while (i < input.length);
 return output;
};

function intArrayFromBase64(s) {
 if (typeof ENVIRONMENT_IS_NODE === "boolean" && ENVIRONMENT_IS_NODE) {
  var buf;
  try {
   buf = Buffer.from(s, "base64");
  } catch (_) {
   buf = new Buffer(s, "base64");
  }
  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
 }
 try {
  var decoded = decodeBase64(s);
  var bytes = new Uint8Array(decoded.length);
  for (var i = 0; i < decoded.length; ++i) {
   bytes[i] = decoded.charCodeAt(i);
  }
  return bytes;
 } catch (_) {
  throw new Error("Converting base64 string to bytes failed.");
 }
}

function tryParseAsDataURI(filename) {
 if (!isDataURI(filename)) {
  return;
 }
 return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}

function nullFunc_di(x) {
 err("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_dii(x) {
 err("Invalid function pointer called with signature 'dii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_i(x) {
 err("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_ii(x) {
 err("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iidiiii(x) {
 err("Invalid function pointer called with signature 'iidiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iii(x) {
 err("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiii(x) {
 err("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiii(x) {
 err("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiid(x) {
 err("Invalid function pointer called with signature 'iiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiii(x) {
 err("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiiid(x) {
 err("Invalid function pointer called with signature 'iiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiiii(x) {
 err("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiiiii(x) {
 err("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_iiiiiiiii(x) {
 err("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_v(x) {
 err("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_vi(x) {
 err("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_vid(x) {
 err("Invalid function pointer called with signature 'vid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_vii(x) {
 err("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viid(x) {
 err("Invalid function pointer called with signature 'viid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viii(x) {
 err("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viiii(x) {
 err("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viiiii(x) {
 err("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viiiiii(x) {
 err("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function nullFunc_viiiiiii(x) {
 err("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 err("Build with ASSERTIONS=2 for more info.");
 abort(x);
}

function invoke_ii(index, a1) {
 var sp = stackSave();
 try {
  return dynCall_ii(index, a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iii(index, a1, a2) {
 var sp = stackSave();
 try {
  return dynCall_iii(index, a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  return dynCall_iiii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_vi(index, a1) {
 var sp = stackSave();
 try {
  dynCall_vi(index, a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_vii(index, a1, a2) {
 var sp = stackSave();
 try {
  dynCall_vii(index, a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  dynCall_viii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiii(index, a1, a2, a3, a4) {
 var sp = stackSave();
 try {
  dynCall_viiii(index, a1, a2, a3, a4);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

var asmGlobalArg = {
 "Math": Math,
 "Int8Array": Int8Array,
 "Int16Array": Int16Array,
 "Int32Array": Int32Array,
 "Uint8Array": Uint8Array,
 "Uint16Array": Uint16Array,
 "Float32Array": Float32Array,
 "Float64Array": Float64Array,
 "NaN": NaN,
 Infinity: Infinity
};

var asmLibraryArg = {
 "abort": abort,
 "setTempRet0": setTempRet0,
 "getTempRet0": getTempRet0,
 "abortStackOverflow": abortStackOverflow,
 "nullFunc_di": nullFunc_di,
 "nullFunc_dii": nullFunc_dii,
 "nullFunc_i": nullFunc_i,
 "nullFunc_ii": nullFunc_ii,
 "nullFunc_iidiiii": nullFunc_iidiiii,
 "nullFunc_iii": nullFunc_iii,
 "nullFunc_iiii": nullFunc_iiii,
 "nullFunc_iiiii": nullFunc_iiiii,
 "nullFunc_iiiiid": nullFunc_iiiiid,
 "nullFunc_iiiiii": nullFunc_iiiiii,
 "nullFunc_iiiiiid": nullFunc_iiiiiid,
 "nullFunc_iiiiiii": nullFunc_iiiiiii,
 "nullFunc_iiiiiiii": nullFunc_iiiiiiii,
 "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii,
 "nullFunc_v": nullFunc_v,
 "nullFunc_vi": nullFunc_vi,
 "nullFunc_vid": nullFunc_vid,
 "nullFunc_vii": nullFunc_vii,
 "nullFunc_viid": nullFunc_viid,
 "nullFunc_viii": nullFunc_viii,
 "nullFunc_viiii": nullFunc_viiii,
 "nullFunc_viiiii": nullFunc_viiiii,
 "nullFunc_viiiiii": nullFunc_viiiiii,
 "nullFunc_viiiiiii": nullFunc_viiiiiii,
 "invoke_ii": invoke_ii,
 "invoke_iii": invoke_iii,
 "invoke_iiii": invoke_iiii,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_viii": invoke_viii,
 "invoke_viiii": invoke_viiii,
 "___buildEnvironment": ___buildEnvironment,
 "___clock_gettime": ___clock_gettime,
 "___cxa_allocate_exception": ___cxa_allocate_exception,
 "___cxa_begin_catch": ___cxa_begin_catch,
 "___cxa_find_matching_catch": ___cxa_find_matching_catch,
 "___cxa_free_exception": ___cxa_free_exception,
 "___cxa_throw": ___cxa_throw,
 "___cxa_uncaught_exception": ___cxa_uncaught_exception,
 "___gxx_personality_v0": ___gxx_personality_v0,
 "___lock": ___lock,
 "___map_file": ___map_file,
 "___resumeException": ___resumeException,
 "___setErrNo": ___setErrNo,
 "___syscall10": ___syscall10,
 "___syscall140": ___syscall140,
 "___syscall145": ___syscall145,
 "___syscall146": ___syscall146,
 "___syscall221": ___syscall221,
 "___syscall5": ___syscall5,
 "___syscall54": ___syscall54,
 "___syscall6": ___syscall6,
 "___syscall91": ___syscall91,
 "___unlock": ___unlock,
 "__addDays": __addDays,
 "__arraySum": __arraySum,
 "__embind_register_bool": __embind_register_bool,
 "__embind_register_constant": __embind_register_constant,
 "__embind_register_emval": __embind_register_emval,
 "__embind_register_float": __embind_register_float,
 "__embind_register_function": __embind_register_function,
 "__embind_register_integer": __embind_register_integer,
 "__embind_register_memory_view": __embind_register_memory_view,
 "__embind_register_std_string": __embind_register_std_string,
 "__embind_register_std_wstring": __embind_register_std_wstring,
 "__embind_register_void": __embind_register_void,
 "__emval_decref": __emval_decref,
 "__emval_register": __emval_register,
 "__isLeapYear": __isLeapYear,
 "_abort": _abort,
 "_clock_gettime": _clock_gettime,
 "_embind_repr": _embind_repr,
 "_emscripten_asm_const_ii": _emscripten_asm_const_ii,
 "_emscripten_asm_const_iiddddddddddddd": _emscripten_asm_const_iiddddddddddddd,
 "_emscripten_asm_const_iiiid": _emscripten_asm_const_iiiid,
 "_emscripten_asm_const_iiiiiii": _emscripten_asm_const_iiiiiii,
 "_emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi": _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi,
 "_emscripten_get_heap_size": _emscripten_get_heap_size,
 "_emscripten_get_now": _emscripten_get_now,
 "_emscripten_get_now_is_monotonic": _emscripten_get_now_is_monotonic,
 "_emscripten_memcpy_big": _emscripten_memcpy_big,
 "_emscripten_resize_heap": _emscripten_resize_heap,
 "_exit": _exit,
 "_getenv": _getenv,
 "_gettimeofday": _gettimeofday,
 "_llvm_stackrestore": _llvm_stackrestore,
 "_llvm_stacksave": _llvm_stacksave,
 "_llvm_trap": _llvm_trap,
 "_localtime": _localtime,
 "_localtime_r": _localtime_r,
 "_longjmp": _longjmp,
 "_pthread_attr_destroy": _pthread_attr_destroy,
 "_pthread_attr_init": _pthread_attr_init,
 "_pthread_attr_setdetachstate": _pthread_attr_setdetachstate,
 "_pthread_cond_destroy": _pthread_cond_destroy,
 "_pthread_cond_init": _pthread_cond_init,
 "_pthread_cond_signal": _pthread_cond_signal,
 "_pthread_cond_wait": _pthread_cond_wait,
 "_pthread_create": _pthread_create,
 "_strftime": _strftime,
 "_strftime_l": _strftime_l,
 "_sysconf": _sysconf,
 "_time": _time,
 "_tzset": _tzset,
 "abortOnCannotGrowMemory": abortOnCannotGrowMemory,
 "count_emval_handles": count_emval_handles,
 "craftInvokerFunction": craftInvokerFunction,
 "createNamedFunction": createNamedFunction,
 "embind__requireFunction": embind__requireFunction,
 "embind_init_charCodes": embind_init_charCodes,
 "emscripten_realloc_buffer": emscripten_realloc_buffer,
 "ensureOverloadTable": ensureOverloadTable,
 "exposePublicSymbol": exposePublicSymbol,
 "extendError": extendError,
 "floatReadValueFromPointer": floatReadValueFromPointer,
 "getShiftFromSize": getShiftFromSize,
 "getTypeName": getTypeName,
 "get_first_emval": get_first_emval,
 "heap32VectorToArray": heap32VectorToArray,
 "init_emval": init_emval,
 "integerReadValueFromPointer": integerReadValueFromPointer,
 "makeLegalFunctionName": makeLegalFunctionName,
 "new_": new_,
 "readLatin1String": readLatin1String,
 "registerType": registerType,
 "replacePublicSymbol": replacePublicSymbol,
 "runDestructors": runDestructors,
 "simpleReadValueFromPointer": simpleReadValueFromPointer,
 "throwBindingError": throwBindingError,
 "throwInternalError": throwInternalError,
 "throwUnboundTypeError": throwUnboundTypeError,
 "whenDependentTypesAreResolved": whenDependentTypesAreResolved,
 "tempDoublePtr": tempDoublePtr,
 "DYNAMICTOP_PTR": DYNAMICTOP_PTR
};

// EMSCRIPTEN_START_ASM


var asm = (/** @suppress {uselessCode} */ function(global,env,buffer) {

'almost asm';

  var HEAP8 = new global.Int8Array(buffer),
  HEAP16 = new global.Int16Array(buffer),
  HEAP32 = new global.Int32Array(buffer),
  HEAPU8 = new global.Uint8Array(buffer),
  HEAPU16 = new global.Uint16Array(buffer),
  HEAPF32 = new global.Float32Array(buffer),
  HEAPF64 = new global.Float64Array(buffer),
  tempDoublePtr=env.tempDoublePtr|0,
  DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0,
  __THREW__ = 0,
  threwValue = 0,
  setjmpId = 0,
  tempInt = 0,
  tempBigInt = 0,
  tempBigIntS = 0,
  tempValue = 0,
  tempDouble = 0.0,
  nan = global.NaN,
  inf = global.Infinity,
  Math_floor=global.Math.floor,
  Math_abs=global.Math.abs,
  Math_sqrt=global.Math.sqrt,
  Math_pow=global.Math.pow,
  Math_cos=global.Math.cos,
  Math_sin=global.Math.sin,
  Math_atan2=global.Math.atan2,
  Math_log=global.Math.log,
  Math_ceil=global.Math.ceil,
  Math_imul=global.Math.imul,
  Math_clz32=global.Math.clz32,
  abort=env.abort,
  setTempRet0=env.setTempRet0,
  getTempRet0=env.getTempRet0,
  abortStackOverflow=env.abortStackOverflow,
  nullFunc_di=env.nullFunc_di,
  nullFunc_dii=env.nullFunc_dii,
  nullFunc_i=env.nullFunc_i,
  nullFunc_ii=env.nullFunc_ii,
  nullFunc_iidiiii=env.nullFunc_iidiiii,
  nullFunc_iii=env.nullFunc_iii,
  nullFunc_iiii=env.nullFunc_iiii,
  nullFunc_iiiii=env.nullFunc_iiiii,
  nullFunc_iiiiid=env.nullFunc_iiiiid,
  nullFunc_iiiiii=env.nullFunc_iiiiii,
  nullFunc_iiiiiid=env.nullFunc_iiiiiid,
  nullFunc_iiiiiii=env.nullFunc_iiiiiii,
  nullFunc_iiiiiiii=env.nullFunc_iiiiiiii,
  nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii,
  nullFunc_v=env.nullFunc_v,
  nullFunc_vi=env.nullFunc_vi,
  nullFunc_vid=env.nullFunc_vid,
  nullFunc_vii=env.nullFunc_vii,
  nullFunc_viid=env.nullFunc_viid,
  nullFunc_viii=env.nullFunc_viii,
  nullFunc_viiii=env.nullFunc_viiii,
  nullFunc_viiiii=env.nullFunc_viiiii,
  nullFunc_viiiiii=env.nullFunc_viiiiii,
  nullFunc_viiiiiii=env.nullFunc_viiiiiii,
  invoke_ii=env.invoke_ii,
  invoke_iii=env.invoke_iii,
  invoke_iiii=env.invoke_iiii,
  invoke_vi=env.invoke_vi,
  invoke_vii=env.invoke_vii,
  invoke_viii=env.invoke_viii,
  invoke_viiii=env.invoke_viiii,
  ___buildEnvironment=env.___buildEnvironment,
  ___clock_gettime=env.___clock_gettime,
  ___cxa_allocate_exception=env.___cxa_allocate_exception,
  ___cxa_begin_catch=env.___cxa_begin_catch,
  ___cxa_find_matching_catch=env.___cxa_find_matching_catch,
  ___cxa_free_exception=env.___cxa_free_exception,
  ___cxa_throw=env.___cxa_throw,
  ___cxa_uncaught_exception=env.___cxa_uncaught_exception,
  ___gxx_personality_v0=env.___gxx_personality_v0,
  ___lock=env.___lock,
  ___map_file=env.___map_file,
  ___resumeException=env.___resumeException,
  ___setErrNo=env.___setErrNo,
  ___syscall10=env.___syscall10,
  ___syscall140=env.___syscall140,
  ___syscall145=env.___syscall145,
  ___syscall146=env.___syscall146,
  ___syscall221=env.___syscall221,
  ___syscall5=env.___syscall5,
  ___syscall54=env.___syscall54,
  ___syscall6=env.___syscall6,
  ___syscall91=env.___syscall91,
  ___unlock=env.___unlock,
  __addDays=env.__addDays,
  __arraySum=env.__arraySum,
  __embind_register_bool=env.__embind_register_bool,
  __embind_register_constant=env.__embind_register_constant,
  __embind_register_emval=env.__embind_register_emval,
  __embind_register_float=env.__embind_register_float,
  __embind_register_function=env.__embind_register_function,
  __embind_register_integer=env.__embind_register_integer,
  __embind_register_memory_view=env.__embind_register_memory_view,
  __embind_register_std_string=env.__embind_register_std_string,
  __embind_register_std_wstring=env.__embind_register_std_wstring,
  __embind_register_void=env.__embind_register_void,
  __emval_decref=env.__emval_decref,
  __emval_register=env.__emval_register,
  __isLeapYear=env.__isLeapYear,
  _abort=env._abort,
  _clock_gettime=env._clock_gettime,
  _embind_repr=env._embind_repr,
  _emscripten_asm_const_ii=env._emscripten_asm_const_ii,
  _emscripten_asm_const_iiddddddddddddd=env._emscripten_asm_const_iiddddddddddddd,
  _emscripten_asm_const_iiiid=env._emscripten_asm_const_iiiid,
  _emscripten_asm_const_iiiiiii=env._emscripten_asm_const_iiiiiii,
  _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi=env._emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi,
  _emscripten_get_heap_size=env._emscripten_get_heap_size,
  _emscripten_get_now=env._emscripten_get_now,
  _emscripten_get_now_is_monotonic=env._emscripten_get_now_is_monotonic,
  _emscripten_memcpy_big=env._emscripten_memcpy_big,
  _emscripten_resize_heap=env._emscripten_resize_heap,
  _exit=env._exit,
  _getenv=env._getenv,
  _gettimeofday=env._gettimeofday,
  _llvm_stackrestore=env._llvm_stackrestore,
  _llvm_stacksave=env._llvm_stacksave,
  _llvm_trap=env._llvm_trap,
  _localtime=env._localtime,
  _localtime_r=env._localtime_r,
  _longjmp=env._longjmp,
  _pthread_attr_destroy=env._pthread_attr_destroy,
  _pthread_attr_init=env._pthread_attr_init,
  _pthread_attr_setdetachstate=env._pthread_attr_setdetachstate,
  _pthread_cond_destroy=env._pthread_cond_destroy,
  _pthread_cond_init=env._pthread_cond_init,
  _pthread_cond_signal=env._pthread_cond_signal,
  _pthread_cond_wait=env._pthread_cond_wait,
  _pthread_create=env._pthread_create,
  _strftime=env._strftime,
  _strftime_l=env._strftime_l,
  _sysconf=env._sysconf,
  _time=env._time,
  _tzset=env._tzset,
  abortOnCannotGrowMemory=env.abortOnCannotGrowMemory,
  count_emval_handles=env.count_emval_handles,
  craftInvokerFunction=env.craftInvokerFunction,
  createNamedFunction=env.createNamedFunction,
  embind__requireFunction=env.embind__requireFunction,
  embind_init_charCodes=env.embind_init_charCodes,
  emscripten_realloc_buffer=env.emscripten_realloc_buffer,
  ensureOverloadTable=env.ensureOverloadTable,
  exposePublicSymbol=env.exposePublicSymbol,
  extendError=env.extendError,
  floatReadValueFromPointer=env.floatReadValueFromPointer,
  getShiftFromSize=env.getShiftFromSize,
  getTypeName=env.getTypeName,
  get_first_emval=env.get_first_emval,
  heap32VectorToArray=env.heap32VectorToArray,
  init_emval=env.init_emval,
  integerReadValueFromPointer=env.integerReadValueFromPointer,
  makeLegalFunctionName=env.makeLegalFunctionName,
  new_=env.new_,
  readLatin1String=env.readLatin1String,
  registerType=env.registerType,
  replacePublicSymbol=env.replacePublicSymbol,
  runDestructors=env.runDestructors,
  simpleReadValueFromPointer=env.simpleReadValueFromPointer,
  throwBindingError=env.throwBindingError,
  throwInternalError=env.throwInternalError,
  throwUnboundTypeError=env.throwUnboundTypeError,
  whenDependentTypesAreResolved=env.whenDependentTypesAreResolved,
  STACKTOP = 59168,
  STACK_MAX = 5302048,
  tempFloat = 0.0;

function _emscripten_replace_memory(newBuffer) {
  HEAP8 = new Int8Array(newBuffer);
  HEAPU8 = new Uint8Array(newBuffer);
  HEAP16 = new Int16Array(newBuffer);
  HEAPU16 = new Uint16Array(newBuffer);
  HEAP32 = new Int32Array(newBuffer);
  HEAPF32 = new Float32Array(newBuffer);
  HEAPF64 = new Float64Array(newBuffer);

  buffer = newBuffer;
  return true;
}

// EMSCRIPTEN_START_FUNCS

function __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i5 = i4 + 176 | 0;
 i6 = i4 + 112 | 0;
 i7 = i4 + 88 | 0;
 i8 = i4 + 64 | 0;
 i9 = i4 + 48 | 0;
 i10 = i4 + 160 | 0;
 i11 = i4 + 36 | 0;
 i12 = i4 + 148 | 0;
 i13 = i4 + 136 | 0;
 i14 = i4 + 124 | 0;
 i15 = i4 + 24 | 0;
 i16 = i4 + 12 | 0;
 i17 = i4;
 i18 = i2;
 i19 = i18 - i1 | 0;
 L1 : do if ((i19 | 0) > 1) {
  if ((i19 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 103 : 0) {
   i20 = (HEAP8[i1 + 1 >> 0] | 0) == 115;
   i21 = i20 ? i1 + 2 | 0 : i1;
   i22 = i20;
  } else {
   i21 = i1;
   i22 = 0;
  }
  do switch (HEAP8[i21 >> 0] | 0) {
  case 76:
   {
    i23 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
    break L1;
    break;
   }
  case 84:
   {
    i23 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
    break L1;
    break;
   }
  case 102:
   {
    i23 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
    break L1;
    break;
   }
  case 97:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 97:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50247, __ZNSt3__211char_traitsIcE6lengthEPKc(50247) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i20 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 100:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50265, __ZNSt3__211char_traitsIcE6lengthEPKc(50265) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i24 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 110:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50265, __ZNSt3__211char_traitsIcE6lengthEPKc(50265) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i20 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 78:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50308, __ZNSt3__211char_traitsIcE6lengthEPKc(50308) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i24 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 83:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50311, __ZNSt3__211char_traitsIcE6lengthEPKc(50311) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i20 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 116:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 122:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 99:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 99:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 108:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 109:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50313, __ZNSt3__211char_traitsIcE6lengthEPKc(50313) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i24 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 111:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50315, __ZNSt3__211char_traitsIcE6lengthEPKc(50315) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i20 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 118:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 100:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 97:
     {
      i24 = i21 + 2 | 0;
      i20 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i24, i2, i3) | 0;
      if ((i20 | 0) == (i24 | 0)) {
       i23 = i1;
       break L1;
      }
      i24 = i3 + 4 | 0;
      if ((HEAP32[i3 >> 2] | 0) == (HEAP32[i24 >> 2] | 0)) {
       i23 = i1;
       break L1;
      };
      HEAP32[i8 >> 2] = 0;
      HEAP32[i8 + 4 >> 2] = 0;
      HEAP32[i8 + 8 >> 2] = 0;
      L32 : do if (i22) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i8, 50317, __ZNSt3__211char_traitsIcE6lengthEPKc(50317) | 0); else {
       i25 = 0;
       while (1) {
        if ((i25 | 0) == 3) break L32;
        HEAP32[i8 + (i25 << 2) >> 2] = 0;
        i25 = i25 + 1 | 0;
       }
      } while (0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50320) | 0;
      HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
      HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
      HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
      i25 = 0;
      while (1) {
       if ((i25 | 0) == 3) break;
       HEAP32[i8 + (i25 << 2) >> 2] = 0;
       i25 = i25 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, (HEAP32[i24 >> 2] | 0) + -24 | 0);
      i25 = HEAP8[i9 + 11 >> 0] | 0;
      i26 = i25 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i7, i26 ? HEAP32[i9 >> 2] | 0 : i9, i26 ? HEAP32[i9 + 4 >> 2] | 0 : i25 & 255) | 0;
      HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
      HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
      i25 = 0;
      while (1) {
       if ((i25 | 0) == 3) break;
       HEAP32[i7 + (i25 << 2) >> 2] = 0;
       i25 = i25 + 1 | 0;
      }
      i25 = HEAP32[i24 >> 2] | 0;
      i26 = i25 + -24 | 0;
      i27 = i26 + 11 | 0;
      if ((HEAP8[i27 >> 0] | 0) < 0) {
       i28 = HEAP32[i26 >> 2] | 0;
       HEAP8[i5 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc(i28, i5);
       HEAP32[i25 + -20 >> 2] = 0;
      } else {
       HEAP8[i5 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc(i26, i5);
       HEAP8[i27 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i26);
      HEAP32[i26 >> 2] = HEAP32[i6 >> 2];
      HEAP32[i26 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
      HEAP32[i26 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
      i26 = 0;
      while (1) {
       if ((i26 | 0) == 3) break;
       HEAP32[i6 + (i26 << 2) >> 2] = 0;
       i26 = i26 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
      i23 = i20;
      break L1;
      break;
     }
    case 99:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 101:
     {
      i26 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50263, __ZNSt3__211char_traitsIcE6lengthEPKc(50263) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i26, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i26 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 108:
     {
      i24 = i21 + 2 | 0;
      i26 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i24, i2, i3) | 0;
      if ((i26 | 0) == (i24 | 0)) {
       i23 = i1;
       break L1;
      }
      i24 = i3 + 4 | 0;
      if ((HEAP32[i3 >> 2] | 0) == (HEAP32[i24 >> 2] | 0)) {
       i23 = i1;
       break L1;
      };
      HEAP32[i8 >> 2] = 0;
      HEAP32[i8 + 4 >> 2] = 0;
      HEAP32[i8 + 8 >> 2] = 0;
      L60 : do if (i22) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i8, 50317, __ZNSt3__211char_traitsIcE6lengthEPKc(50317) | 0); else {
       i27 = 0;
       while (1) {
        if ((i27 | 0) == 3) break L60;
        HEAP32[i8 + (i27 << 2) >> 2] = 0;
        i27 = i27 + 1 | 0;
       }
      } while (0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50330) | 0;
      HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
      HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
      HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
      i20 = 0;
      while (1) {
       if ((i20 | 0) == 3) break;
       HEAP32[i8 + (i20 << 2) >> 2] = 0;
       i20 = i20 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, (HEAP32[i24 >> 2] | 0) + -24 | 0);
      i20 = HEAP8[i9 + 11 >> 0] | 0;
      i27 = i20 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i7, i27 ? HEAP32[i9 >> 2] | 0 : i9, i27 ? HEAP32[i9 + 4 >> 2] | 0 : i20 & 255) | 0;
      HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
      HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
      i20 = 0;
      while (1) {
       if ((i20 | 0) == 3) break;
       HEAP32[i7 + (i20 << 2) >> 2] = 0;
       i20 = i20 + 1 | 0;
      }
      i20 = HEAP32[i24 >> 2] | 0;
      i27 = i20 + -24 | 0;
      i25 = i27 + 11 | 0;
      if ((HEAP8[i25 >> 0] | 0) < 0) {
       i28 = HEAP32[i27 >> 2] | 0;
       HEAP8[i5 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc(i28, i5);
       HEAP32[i20 + -20 >> 2] = 0;
      } else {
       HEAP8[i5 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc(i27, i5);
       HEAP8[i25 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i27);
      HEAP32[i27 >> 2] = HEAP32[i6 >> 2];
      HEAP32[i27 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
      HEAP32[i27 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
      i27 = 0;
      while (1) {
       if ((i27 | 0) == 3) break;
       HEAP32[i6 + (i27 << 2) >> 2] = 0;
       i27 = i27 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
      i23 = i26;
      break L1;
      break;
     }
    case 110:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 115:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 116:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 118:
     {
      i27 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50338, __ZNSt3__211char_traitsIcE6lengthEPKc(50338) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i27, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i27 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 86:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50340, __ZNSt3__211char_traitsIcE6lengthEPKc(50340) | 0);
      i27 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i27 | 0) == (i24 | 0) ? i1 : i27;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 101:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 111:
     {
      i27 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50343, __ZNSt3__211char_traitsIcE6lengthEPKc(50343) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i27, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i27 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 79:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50345, __ZNSt3__211char_traitsIcE6lengthEPKc(50345) | 0);
      i27 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i27 | 0) == (i24 | 0) ? i1 : i27;
      break L1;
      break;
     }
    case 113:
     {
      i27 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50348, __ZNSt3__211char_traitsIcE6lengthEPKc(50348) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i27, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i27 | 0) ? i1 : i24;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 103:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 101:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50351, __ZNSt3__211char_traitsIcE6lengthEPKc(50351) | 0);
      i27 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i27 | 0) == (i24 | 0) ? i1 : i27;
      break L1;
      break;
     }
    case 116:
     {
      i27 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50281, __ZNSt3__211char_traitsIcE6lengthEPKc(50281) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i27, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i27 | 0) ? i1 : i24;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 105:
   {
    if ((HEAP8[i21 + 1 >> 0] | 0) != 120) {
     i23 = i1;
     break L1;
    }
    i24 = i1 + 2 | 0;
    i27 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i24, i2, i3) | 0;
    if ((i27 | 0) == (i24 | 0)) {
     i23 = i1;
     break L1;
    }
    i24 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i27, i2, i3) | 0;
    i25 = i3 + 4 | 0;
    if ((i24 | 0) == (i27 | 0)) {
     i27 = HEAP32[i25 >> 2] | 0;
     i20 = 0;
     while (1) {
      if ((i20 | 0) == -1) break;
      i28 = i20 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i27 + (i28 * 24 | 0) | 0);
      i20 = i28;
     }
     HEAP32[i25 >> 2] = i27 + -24;
     i23 = i1;
     break L1;
    }
    i20 = HEAP32[i25 >> 2] | 0;
    if (((i20 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i23 = i1;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i20 + -24 | 0);
    i20 = HEAP32[i25 >> 2] | 0;
    i26 = 0;
    while (1) {
     if ((i26 | 0) == -1) break;
     i28 = i26 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20 + (i28 * 24 | 0) | 0);
     i26 = i28;
    }
    HEAP32[i25 >> 2] = i20 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, i20 + -48 | 0);
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i11, 50245, i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11, 50354) | 0;
    HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i9 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
    HEAP32[i9 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
    i26 = 0;
    while (1) {
     if ((i26 | 0) == 3) break;
     HEAP32[i11 + (i26 << 2) >> 2] = 0;
     i26 = i26 + 1 | 0;
    }
    i26 = HEAP8[i5 + 11 >> 0] | 0;
    i20 = i26 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i20 ? HEAP32[i5 >> 2] | 0 : i5, i20 ? HEAP32[i5 + 4 >> 2] | 0 : i26 & 255) | 0;
    HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
    HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
    i26 = 0;
    while (1) {
     if ((i26 | 0) == 3) break;
     HEAP32[i9 + (i26 << 2) >> 2] = 0;
     i26 = i26 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50292) | 0;
    HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i10 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
    HEAP32[i10 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
    i26 = 0;
    while (1) {
     if ((i26 | 0) == 3) break;
     HEAP32[i8 + (i26 << 2) >> 2] = 0;
     i26 = i26 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i10);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i25 >> 2] | 0) + -24 | 0, i7);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i23 = i24;
    break L1;
    break;
   }
  case 108:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 101:
     {
      i26 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50357, __ZNSt3__211char_traitsIcE6lengthEPKc(50357) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i26, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i26 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 115:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50360, __ZNSt3__211char_traitsIcE6lengthEPKc(50360) | 0);
      i26 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i26 | 0) == (i20 | 0) ? i1 : i26;
      break L1;
      break;
     }
    case 83:
     {
      i26 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50363, __ZNSt3__211char_traitsIcE6lengthEPKc(50363) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i26, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i26 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 116:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50279, __ZNSt3__211char_traitsIcE6lengthEPKc(50279) | 0);
      i26 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i26 | 0) == (i20 | 0) ? i1 : i26;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 109:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 105:
     {
      i26 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50367, __ZNSt3__211char_traitsIcE6lengthEPKc(50367) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i26, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i26 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 73:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50369, __ZNSt3__211char_traitsIcE6lengthEPKc(50369) | 0);
      i26 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i26 | 0) == (i20 | 0) ? i1 : i26;
      break L1;
      break;
     }
    case 108:
     {
      i26 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50263, __ZNSt3__211char_traitsIcE6lengthEPKc(50263) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i26, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i26 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 76:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50372, __ZNSt3__211char_traitsIcE6lengthEPKc(50372) | 0);
      i26 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i26 | 0) == (i20 | 0) ? i1 : i26;
      break L1;
      break;
     }
    case 109:
     {
      i26 = i1 + 2 | 0;
      if ((i26 | 0) != (i2 | 0) ? (HEAP8[i26 >> 0] | 0) == 95 : 0) {
       i20 = i1 + 3 | 0;
       HEAP32[i5 >> 2] = 0;
       HEAP32[i5 + 4 >> 2] = 0;
       HEAP32[i5 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50375, __ZNSt3__211char_traitsIcE6lengthEPKc(50375) | 0);
       i27 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
       i23 = (i27 | 0) == (i20 | 0) ? i1 : i27;
       break L1;
      }
      i27 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i26, i2, i3) | 0;
      if ((i27 | 0) == (i26 | 0)) {
       i23 = i1;
       break L1;
      }
      i26 = i3 + 4 | 0;
      i20 = HEAP32[i26 >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) == (i20 | 0)) {
       i23 = i1;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i20 + -24 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 50245) | 0;
      HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
      HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
      i20 = 0;
      while (1) {
       if ((i20 | 0) == 3) break;
       HEAP32[i7 + (i20 << 2) >> 2] = 0;
       i20 = i20 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50378) | 0;
      HEAP32[i12 >> 2] = HEAP32[i6 >> 2];
      HEAP32[i12 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
      HEAP32[i12 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
      i20 = 0;
      while (1) {
       if ((i20 | 0) == 3) break;
       HEAP32[i6 + (i20 << 2) >> 2] = 0;
       i20 = i20 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i12);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i26 >> 2] | 0) + -24 | 0, i5);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
      i23 = i27;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 110:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 119:
    case 97:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 101:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50382, __ZNSt3__211char_traitsIcE6lengthEPKc(50382) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i20 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 103:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50367, __ZNSt3__211char_traitsIcE6lengthEPKc(50367) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i24 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 116:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50385, __ZNSt3__211char_traitsIcE6lengthEPKc(50385) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i20 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 120:
     {
      i24 = i1 + 2 | 0;
      i20 = __ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_(i24, i2, i3) | 0;
      i23 = (i20 | 0) == (i24 | 0) ? i1 : i20;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 111:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 110:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 111:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50387, __ZNSt3__211char_traitsIcE6lengthEPKc(50387) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i20 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 114:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50390, __ZNSt3__211char_traitsIcE6lengthEPKc(50390) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i24 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 82:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50392, __ZNSt3__211char_traitsIcE6lengthEPKc(50392) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i20 | 0) ? i1 : i24;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 112:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 109:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50395, __ZNSt3__211char_traitsIcE6lengthEPKc(50395) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i24 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 108:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50399, __ZNSt3__211char_traitsIcE6lengthEPKc(50399) | 0);
      i24 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i24 | 0) == (i20 | 0) ? i1 : i24;
      break L1;
      break;
     }
    case 76:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50401, __ZNSt3__211char_traitsIcE6lengthEPKc(50401) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i24 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 112:
     {
      i20 = i1 + 2 | 0;
      if ((i20 | 0) != (i2 | 0) ? (HEAP8[i20 >> 0] | 0) == 95 : 0) {
       i24 = i1 + 3 | 0;
       HEAP32[i5 >> 2] = 0;
       HEAP32[i5 + 4 >> 2] = 0;
       HEAP32[i5 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50404, __ZNSt3__211char_traitsIcE6lengthEPKc(50404) | 0);
       i25 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
       i23 = (i25 | 0) == (i24 | 0) ? i1 : i25;
       break L1;
      }
      i25 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i20, i2, i3) | 0;
      if ((i25 | 0) == (i20 | 0)) {
       i23 = i1;
       break L1;
      }
      i20 = i3 + 4 | 0;
      i24 = HEAP32[i20 >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) == (i24 | 0)) {
       i23 = i1;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i24 + -24 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 50245) | 0;
      HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
      HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
      i24 = 0;
      while (1) {
       if ((i24 | 0) == 3) break;
       HEAP32[i7 + (i24 << 2) >> 2] = 0;
       i24 = i24 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50407) | 0;
      HEAP32[i13 >> 2] = HEAP32[i6 >> 2];
      HEAP32[i13 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
      HEAP32[i13 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
      i24 = 0;
      while (1) {
       if ((i24 | 0) == 3) break;
       HEAP32[i6 + (i24 << 2) >> 2] = 0;
       i24 = i24 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i13);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i20 >> 2] | 0) + -24 | 0, i5);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
      i23 = i25;
      break L1;
      break;
     }
    case 115:
     {
      i24 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50399, __ZNSt3__211char_traitsIcE6lengthEPKc(50399) | 0);
      i27 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i24, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i27 | 0) == (i24 | 0) ? i1 : i27;
      break L1;
      break;
     }
    case 116:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 113:
   {
    if ((HEAP8[i21 + 1 >> 0] | 0) != 117) {
     i23 = i1;
     break L1;
    }
    i27 = i1 + 2 | 0;
    i24 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i27, i2, i3) | 0;
    if ((i24 | 0) == (i27 | 0)) {
     i23 = i1;
     break L1;
    }
    i27 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i24, i2, i3) | 0;
    if ((i27 | 0) == (i24 | 0)) {
     i24 = i3 + 4 | 0;
     i26 = HEAP32[i24 >> 2] | 0;
     i28 = 0;
     while (1) {
      if ((i28 | 0) == -1) break;
      i29 = i28 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i26 + (i29 * 24 | 0) | 0);
      i28 = i29;
     }
     HEAP32[i24 >> 2] = i26 + -24;
     i23 = i1;
     break L1;
    }
    i28 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i27, i2, i3) | 0;
    i25 = i3 + 4 | 0;
    if ((i28 | 0) == (i27 | 0)) {
     i20 = HEAP32[i25 >> 2] | 0;
     i29 = 0;
     while (1) {
      if ((i29 | 0) == -1) break;
      i30 = i29 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20 + (i30 * 24 | 0) | 0);
      i29 = i30;
     }
     i29 = i20 + -24 | 0;
     HEAP32[i25 >> 2] = i29;
     i27 = 0;
     while (1) {
      if ((i27 | 0) == -1) break;
      i26 = i27 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i29 + (i26 * 24 | 0) | 0);
      i27 = i26;
     }
     HEAP32[i25 >> 2] = i20 + -48;
     i23 = i1;
     break L1;
    }
    i27 = HEAP32[i25 >> 2] | 0;
    if (((i27 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 3) {
     i23 = i1;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i27 + -24 | 0);
    i27 = HEAP32[i25 >> 2] | 0;
    i29 = 0;
    while (1) {
     if ((i29 | 0) == -1) break;
     i26 = i29 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i27 + (i26 * 24 | 0) | 0);
     i29 = i26;
    }
    HEAP32[i25 >> 2] = i27 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, i27 + -48 | 0);
    i29 = HEAP32[i25 >> 2] | 0;
    i20 = 0;
    while (1) {
     if ((i20 | 0) == -1) break;
     i26 = i20 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i29 + (i26 * 24 | 0) | 0);
     i20 = i26;
    }
    HEAP32[i25 >> 2] = i29 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i29 + -48 | 0);
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i17, 50245, i7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i17, 50411) | 0;
    HEAP32[i16 >> 2] = HEAP32[i17 >> 2];
    HEAP32[i16 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
    HEAP32[i16 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
    i20 = 0;
    while (1) {
     if ((i20 | 0) == 3) break;
     HEAP32[i17 + (i20 << 2) >> 2] = 0;
     i20 = i20 + 1 | 0;
    }
    i20 = HEAP8[i6 + 11 >> 0] | 0;
    i29 = i20 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i16, i29 ? HEAP32[i6 >> 2] | 0 : i6, i29 ? HEAP32[i6 + 4 >> 2] | 0 : i20 & 255) | 0;
    HEAP32[i15 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i15 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
    HEAP32[i15 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
    i20 = 0;
    while (1) {
     if ((i20 | 0) == 3) break;
     HEAP32[i16 + (i20 << 2) >> 2] = 0;
     i20 = i20 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i15, 50417) | 0;
    HEAP32[i11 >> 2] = HEAP32[i15 >> 2];
    HEAP32[i11 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
    HEAP32[i11 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
    i20 = 0;
    while (1) {
     if ((i20 | 0) == 3) break;
     HEAP32[i15 + (i20 << 2) >> 2] = 0;
     i20 = i20 + 1 | 0;
    }
    i20 = HEAP8[i5 + 11 >> 0] | 0;
    i29 = i20 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11, i29 ? HEAP32[i5 >> 2] | 0 : i5, i29 ? HEAP32[i5 + 4 >> 2] | 0 : i20 & 255) | 0;
    HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i9 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
    HEAP32[i9 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
    i20 = 0;
    while (1) {
     if ((i20 | 0) == 3) break;
     HEAP32[i11 + (i20 << 2) >> 2] = 0;
     i20 = i20 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50243) | 0;
    HEAP32[i14 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i14 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
    HEAP32[i14 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
    i20 = 0;
    while (1) {
     if ((i20 | 0) == 3) break;
     HEAP32[i9 + (i20 << 2) >> 2] = 0;
     i20 = i20 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i8, i14);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i25 >> 2] | 0) + -24 | 0, i8);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i23 = i28;
    break L1;
    break;
   }
  case 114:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 99:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 109:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50423, __ZNSt3__211char_traitsIcE6lengthEPKc(50423) | 0);
      i29 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i29 | 0) == (i20 | 0) ? i1 : i29;
      break L1;
      break;
     }
    case 77:
     {
      i29 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50425, __ZNSt3__211char_traitsIcE6lengthEPKc(50425) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i29, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i29 | 0) ? i1 : i20;
      break L1;
      break;
     }
    case 115:
     {
      i20 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50428, __ZNSt3__211char_traitsIcE6lengthEPKc(50428) | 0);
      i29 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i20, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i29 | 0) == (i20 | 0) ? i1 : i29;
      break L1;
      break;
     }
    case 83:
     {
      i29 = i1 + 2 | 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i5 + 4 >> 2] = 0;
      HEAP32[i5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50431, __ZNSt3__211char_traitsIcE6lengthEPKc(50431) | 0);
      i20 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i29, i2, i5, i3) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i23 = (i20 | 0) == (i29 | 0) ? i1 : i20;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 115:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 99:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 112:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 114:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 116:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 122:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 90:
     {
      if ((i18 - i21 | 0) <= 2) {
       i23 = i1;
       break L1;
      }
      switch (HEAP8[i21 + 2 >> 0] | 0) {
      case 84:
       {
        i23 = __ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
        break L1;
        break;
       }
      case 102:
       {
        i23 = __ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
        break L1;
        break;
       }
      default:
       {
        i23 = i1;
        break L1;
       }
      }
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 116:
   {
    switch (HEAP8[i21 + 1 >> 0] | 0) {
    case 105:
    case 101:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    case 114:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i5, 50435);
      i20 = i3 + 4 | 0;
      i29 = HEAP32[i20 >> 2] | 0;
      if (i29 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i29, i5);
       HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
      i23 = i1 + 2 | 0;
      break L1;
      break;
     }
    case 119:
     {
      i23 = __ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      break L1;
      break;
     }
    default:
     {
      i23 = i1;
      break L1;
     }
    }
    break;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    i23 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
    break L1;
    break;
   }
  default:
   {
    i23 = i1;
    break L1;
   }
  } while (0);
 } else i23 = i1; while (0);
 STACKTOP = i4;
 return i23 | 0;
}
function _arPattGetImage2(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, d11, i12) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 d11 = +d11;
 i12 = i12 | 0;
 var i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, d31 = 0.0, d32 = 0.0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0, i89 = 0, i90 = 0, i91 = 0, i92 = 0, i93 = 0, i94 = 0, i95 = 0, i96 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i14 = i13 + 232 | 0;
 i15 = i13 + 224 | 0;
 i16 = i13 + 216 | 0;
 i17 = i13 + 208 | 0;
 i18 = i13 + 144 | 0;
 i19 = i13 + 80 | 0;
 i20 = i13;
 i21 = i13 + 240 | 0;
 i22 = i13 + 236 | 0;
 HEAPF64[i18 >> 3] = 100.0;
 HEAPF64[i18 + 8 >> 3] = 100.0;
 HEAPF64[i18 + 16 >> 3] = 110.0;
 HEAPF64[i18 + 24 >> 3] = 100.0;
 HEAPF64[i18 + 32 >> 3] = 110.0;
 HEAPF64[i18 + 40 >> 3] = 110.0;
 HEAPF64[i18 + 48 >> 3] = 100.0;
 HEAPF64[i18 + 56 >> 3] = 110.0;
 d23 = +HEAPF64[i10 >> 3];
 HEAPF64[i19 >> 3] = d23;
 d24 = +HEAPF64[i10 + 8 >> 3];
 HEAPF64[i19 + 8 >> 3] = d24;
 d25 = +HEAPF64[i10 + 16 >> 3];
 HEAPF64[i19 + 16 >> 3] = d25;
 d26 = +HEAPF64[i10 + 24 >> 3];
 HEAPF64[i19 + 24 >> 3] = d26;
 d27 = +HEAPF64[i10 + 32 >> 3];
 HEAPF64[i19 + 32 >> 3] = d27;
 d28 = +HEAPF64[i10 + 40 >> 3];
 HEAPF64[i19 + 40 >> 3] = d28;
 d29 = +HEAPF64[i10 + 48 >> 3];
 HEAPF64[i19 + 48 >> 3] = d29;
 d30 = +HEAPF64[i10 + 56 >> 3];
 HEAPF64[i19 + 56 >> 3] = d30;
 _get_cpara(i18, i19, i20);
 d31 = d23 - d25;
 d32 = d24 - d26;
 i19 = ~~(d31 * d31 + d32 * d32);
 d32 = d27 - d29;
 d31 = d28 - d30;
 i18 = ~~(d32 * d32 + d31 * d31);
 d31 = d25 - d27;
 d27 = d26 - d28;
 i10 = ~~(d31 * d31 + d27 * d27);
 d27 = d29 - d23;
 d23 = d30 - d24;
 i33 = ~~(d27 * d27 + d23 * d23);
 i34 = ~~(+(((i18 | 0) > (i19 | 0) ? i18 : i19) | 0) * d11 * d11);
 i19 = ~~(+(((i33 | 0) > (i10 | 0) ? i33 : i10) | 0) * d11 * d11);
 if (!i1) {
  i10 = i3;
  while (1) if ((i10 | 0) < (i4 | 0) & (Math_imul(i10, i10) | 0) < (i34 | 0)) i10 = i10 << 1; else break;
  i33 = i3;
  while (1) if ((i33 | 0) < (i4 | 0) & (Math_imul(i33, i33) | 0) < (i19 | 0)) i33 = i33 << 1; else {
   i35 = i10;
   i36 = i33;
   break;
  }
 } else {
  i33 = i3;
  while (1) if ((i33 | 0) < (i4 | 0) & (Math_imul(i33 << 2, i33) | 0) < (i34 | 0)) i33 = i33 << 1; else break;
  i34 = i3;
  while (1) if ((i34 | 0) < (i4 | 0) & (Math_imul(i34 << 2, i34) | 0) < (i19 | 0)) i34 = i34 << 1; else {
   i35 = i33;
   i36 = i34;
   break;
  }
 }
 i34 = (i35 | 0) > (i4 | 0) ? i4 : i35;
 i35 = (i36 | 0) > (i4 | 0) ? i4 : i36;
 i36 = (i34 | 0) / (i3 | 0) | 0;
 i4 = (i35 | 0) / (i3 | 0) | 0;
 d23 = (1.0 - d11) * .5 * 10.0;
 d27 = d11 * 10.0;
 i33 = Math_imul(i3, i3) | 0;
 L15 : do if (!i2) {
  i19 = i33 * 3 | 0;
  i10 = _calloc(i19, 4) | 0;
  if (!i10) {
   _arLog(0, 3, 20510, i17);
   _exit(1);
  }
  do switch (i8 | 0) {
  case 0:
   {
    if ((i35 | 0) > 0) {
     d11 = d23 + 100.0;
     d24 = +(i35 | 0);
     i18 = (i34 | 0) > 0;
     d30 = +(i34 | 0);
     i37 = i20 + 48 | 0;
     i38 = i20 + 56 | 0;
     i39 = i20 + 64 | 0;
     i40 = i20 + 8 | 0;
     i41 = i20 + 16 | 0;
     i42 = i20 + 24 | 0;
     i43 = i20 + 32 | 0;
     i44 = i20 + 40 | 0;
     i45 = (i1 | 0) == 1;
     i46 = 0;
     do {
      d29 = d11 + d27 * (+(i46 | 0) + .5) / d24;
      if (i18) {
       i47 = 0;
       do {
        d31 = d11 + d27 * (+(i47 | 0) + .5) / d30;
        d28 = +HEAPF64[i39 >> 3] + (d31 * +HEAPF64[i37 >> 3] + d29 * +HEAPF64[i38 >> 3]);
        if (d28 == 0.0) {
         i48 = i10;
         break L15;
        }
        d26 = (+HEAPF64[i41 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i40 >> 3])) / d28;
        HEAPF32[i21 >> 2] = d26;
        d25 = (+HEAPF64[i44 >> 3] + (d31 * +HEAPF64[i42 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d28;
        HEAPF32[i22 >> 2] = d25;
        _arParamIdeal2ObservLTf(i9, d26, d25, i21, i22) | 0;
        d25 = +HEAPF32[i21 >> 2];
        if (i45) {
         i49 = ((~~(d25 + 1.0) | 0) / 2 | 0) << 1;
         i50 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i49 = ~~(d25 + .5);
         i50 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i49 | 0) > -1 ? (i50 | 0) < (i7 | 0) & ((i50 | 0) > -1 & (i49 | 0) < (i6 | 0)) : 0) {
         i51 = ((Math_imul(i50, i6) | 0) + i49 | 0) * 3 | 0;
         i52 = ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i53 = i10 + (i52 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + (HEAPU8[i5 + (i51 + 2) >> 0] | 0);
         i53 = i10 + (i52 + 1 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + (HEAPU8[i5 + (i51 + 1) >> 0] | 0);
         i53 = i10 + (i52 + 2 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + (HEAPU8[i5 + i51 >> 0] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i46 = i46 + 1 | 0;
     } while ((i46 | 0) < (i35 | 0));
    }
    break;
   }
  case 1:
   {
    if ((i35 | 0) > 0) {
     d30 = d23 + 100.0;
     d11 = +(i35 | 0);
     i46 = (i34 | 0) > 0;
     d24 = +(i34 | 0);
     i45 = i20 + 48 | 0;
     i43 = i20 + 56 | 0;
     i42 = i20 + 64 | 0;
     i44 = i20 + 8 | 0;
     i40 = i20 + 16 | 0;
     i41 = i20 + 24 | 0;
     i38 = i20 + 32 | 0;
     i37 = i20 + 40 | 0;
     i39 = (i1 | 0) == 1;
     i18 = 0;
     do {
      d29 = d30 + d27 * (+(i18 | 0) + .5) / d11;
      if (i46) {
       i47 = 0;
       do {
        d25 = d30 + d27 * (+(i47 | 0) + .5) / d24;
        d26 = +HEAPF64[i42 >> 3] + (d25 * +HEAPF64[i45 >> 3] + d29 * +HEAPF64[i43 >> 3]);
        if (d26 == 0.0) {
         i48 = i10;
         break L15;
        }
        d28 = (+HEAPF64[i40 >> 3] + (d25 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i44 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d28;
        d31 = (+HEAPF64[i37 >> 3] + (d25 * +HEAPF64[i41 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d31;
        _arParamIdeal2ObservLTf(i9, d28, d31, i21, i22) | 0;
        d31 = +HEAPF32[i21 >> 2];
        if (i39) {
         i54 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
         i55 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i54 = ~~(d31 + .5);
         i55 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i54 | 0) > -1 ? (i55 | 0) < (i7 | 0) & ((i55 | 0) > -1 & (i54 | 0) < (i6 | 0)) : 0) {
         i51 = ((Math_imul(i55, i6) | 0) + i54 | 0) * 3 | 0;
         i53 = ((Math_imul((i18 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i52 = i10 + (i53 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + (HEAPU8[i5 + i51 >> 0] | 0);
         i52 = i10 + (i53 + 1 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + (HEAPU8[i5 + (i51 + 1) >> 0] | 0);
         i52 = i10 + (i53 + 2 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + (HEAPU8[i5 + (i51 + 2) >> 0] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i18 = i18 + 1 | 0;
     } while ((i18 | 0) < (i35 | 0));
    }
    break;
   }
  case 2:
   {
    if ((i35 | 0) > 0) {
     d24 = d23 + 100.0;
     d30 = +(i35 | 0);
     i18 = (i34 | 0) > 0;
     d11 = +(i34 | 0);
     i39 = i20 + 48 | 0;
     i38 = i20 + 56 | 0;
     i41 = i20 + 64 | 0;
     i37 = i20 + 8 | 0;
     i44 = i20 + 16 | 0;
     i40 = i20 + 24 | 0;
     i43 = i20 + 32 | 0;
     i45 = i20 + 40 | 0;
     i42 = (i1 | 0) == 1;
     i46 = 0;
     do {
      d29 = d24 + d27 * (+(i46 | 0) + .5) / d30;
      if (i18) {
       i47 = 0;
       do {
        d31 = d24 + d27 * (+(i47 | 0) + .5) / d11;
        d28 = +HEAPF64[i41 >> 3] + (d31 * +HEAPF64[i39 >> 3] + d29 * +HEAPF64[i38 >> 3]);
        if (d28 == 0.0) {
         i48 = i10;
         break L15;
        }
        d26 = (+HEAPF64[i44 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i37 >> 3])) / d28;
        HEAPF32[i21 >> 2] = d26;
        d25 = (+HEAPF64[i45 >> 3] + (d31 * +HEAPF64[i40 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d28;
        HEAPF32[i22 >> 2] = d25;
        _arParamIdeal2ObservLTf(i9, d26, d25, i21, i22) | 0;
        d25 = +HEAPF32[i21 >> 2];
        if (i42) {
         i56 = ((~~(d25 + 1.0) | 0) / 2 | 0) << 1;
         i57 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i56 = ~~(d25 + .5);
         i57 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i56 | 0) > -1 ? (i57 | 0) < (i7 | 0) & ((i57 | 0) > -1 & (i56 | 0) < (i6 | 0)) : 0) {
         i51 = (Math_imul(i57, i6) | 0) + i56 << 2;
         i52 = ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i53 = i10 + (i52 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + (HEAPU8[i5 + (i51 | 2) >> 0] | 0);
         i53 = i10 + (i52 + 1 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + (HEAPU8[i5 + (i51 | 1) >> 0] | 0);
         i53 = i10 + (i52 + 2 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + (HEAPU8[i5 + i51 >> 0] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i46 = i46 + 1 | 0;
     } while ((i46 | 0) < (i35 | 0));
    }
    break;
   }
  case 3:
   {
    if ((i35 | 0) > 0) {
     d11 = d23 + 100.0;
     d24 = +(i35 | 0);
     i46 = (i34 | 0) > 0;
     d30 = +(i34 | 0);
     i42 = i20 + 48 | 0;
     i43 = i20 + 56 | 0;
     i40 = i20 + 64 | 0;
     i45 = i20 + 8 | 0;
     i37 = i20 + 16 | 0;
     i44 = i20 + 24 | 0;
     i38 = i20 + 32 | 0;
     i39 = i20 + 40 | 0;
     i41 = (i1 | 0) == 1;
     i18 = 0;
     do {
      d29 = d11 + d27 * (+(i18 | 0) + .5) / d24;
      if (i46) {
       i47 = 0;
       do {
        d25 = d11 + d27 * (+(i47 | 0) + .5) / d30;
        d26 = +HEAPF64[i40 >> 3] + (d25 * +HEAPF64[i42 >> 3] + d29 * +HEAPF64[i43 >> 3]);
        if (d26 == 0.0) {
         i48 = i10;
         break L15;
        }
        d28 = (+HEAPF64[i37 >> 3] + (d25 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i45 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d28;
        d31 = (+HEAPF64[i39 >> 3] + (d25 * +HEAPF64[i44 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d31;
        _arParamIdeal2ObservLTf(i9, d28, d31, i21, i22) | 0;
        d31 = +HEAPF32[i21 >> 2];
        if (i41) {
         i58 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
         i59 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i58 = ~~(d31 + .5);
         i59 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i58 | 0) > -1 ? (i59 | 0) < (i7 | 0) & ((i59 | 0) > -1 & (i58 | 0) < (i6 | 0)) : 0) {
         i51 = (Math_imul(i59, i6) | 0) + i58 << 2;
         i53 = ((Math_imul((i18 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i52 = i10 + (i53 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + (HEAPU8[i5 + i51 >> 0] | 0);
         i52 = i10 + (i53 + 1 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + (HEAPU8[i5 + (i51 | 1) >> 0] | 0);
         i52 = i10 + (i53 + 2 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + (HEAPU8[i5 + (i51 | 2) >> 0] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i18 = i18 + 1 | 0;
     } while ((i18 | 0) < (i35 | 0));
    }
    break;
   }
  case 4:
   {
    if ((i35 | 0) > 0) {
     d30 = d23 + 100.0;
     d11 = +(i35 | 0);
     i18 = (i34 | 0) > 0;
     d24 = +(i34 | 0);
     i41 = i20 + 48 | 0;
     i38 = i20 + 56 | 0;
     i44 = i20 + 64 | 0;
     i39 = i20 + 8 | 0;
     i45 = i20 + 16 | 0;
     i37 = i20 + 24 | 0;
     i43 = i20 + 32 | 0;
     i42 = i20 + 40 | 0;
     i40 = (i1 | 0) == 1;
     i46 = 0;
     do {
      d29 = d30 + d27 * (+(i46 | 0) + .5) / d11;
      if (i18) {
       i47 = 0;
       do {
        d31 = d30 + d27 * (+(i47 | 0) + .5) / d24;
        d28 = +HEAPF64[i44 >> 3] + (d31 * +HEAPF64[i41 >> 3] + d29 * +HEAPF64[i38 >> 3]);
        if (d28 == 0.0) {
         i48 = i10;
         break L15;
        }
        d26 = (+HEAPF64[i45 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i39 >> 3])) / d28;
        HEAPF32[i21 >> 2] = d26;
        d25 = (+HEAPF64[i42 >> 3] + (d31 * +HEAPF64[i37 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d28;
        HEAPF32[i22 >> 2] = d25;
        _arParamIdeal2ObservLTf(i9, d26, d25, i21, i22) | 0;
        d25 = +HEAPF32[i21 >> 2];
        if (i40) {
         i60 = ((~~(d25 + 1.0) | 0) / 2 | 0) << 1;
         i61 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i60 = ~~(d25 + .5);
         i61 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i60 | 0) > -1 ? (i61 | 0) < (i7 | 0) & ((i61 | 0) > -1 & (i60 | 0) < (i6 | 0)) : 0) {
         i51 = (Math_imul(i61, i6) | 0) + i60 << 2;
         i52 = ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i53 = i10 + (i52 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + (HEAPU8[i5 + (i51 | 1) >> 0] | 0);
         i53 = i10 + (i52 + 1 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + (HEAPU8[i5 + (i51 | 2) >> 0] | 0);
         i53 = i10 + (i52 + 2 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + (HEAPU8[i5 + (i51 | 3) >> 0] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i46 = i46 + 1 | 0;
     } while ((i46 | 0) < (i35 | 0));
    }
    break;
   }
  case 5:
  case 12:
  case 13:
  case 14:
   {
    if ((i35 | 0) > 0) {
     d24 = d23 + 100.0;
     d30 = +(i35 | 0);
     i46 = (i34 | 0) > 0;
     d11 = +(i34 | 0);
     i40 = i20 + 48 | 0;
     i43 = i20 + 56 | 0;
     i37 = i20 + 64 | 0;
     i42 = i20 + 8 | 0;
     i39 = i20 + 16 | 0;
     i45 = i20 + 24 | 0;
     i38 = i20 + 32 | 0;
     i41 = i20 + 40 | 0;
     i44 = (i1 | 0) == 1;
     i18 = 0;
     do {
      d29 = d24 + d27 * (+(i18 | 0) + .5) / d30;
      if (i46) {
       i47 = 0;
       do {
        d25 = d24 + d27 * (+(i47 | 0) + .5) / d11;
        d26 = +HEAPF64[i37 >> 3] + (d25 * +HEAPF64[i40 >> 3] + d29 * +HEAPF64[i43 >> 3]);
        if (d26 == 0.0) {
         i48 = i10;
         break L15;
        }
        d28 = (+HEAPF64[i39 >> 3] + (d25 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i42 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d28;
        d31 = (+HEAPF64[i41 >> 3] + (d25 * +HEAPF64[i45 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d31;
        _arParamIdeal2ObservLTf(i9, d28, d31, i21, i22) | 0;
        d31 = +HEAPF32[i21 >> 2];
        if (i44) {
         i62 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
         i63 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i62 = ~~(d31 + .5);
         i63 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i62 | 0) > -1 ? (i63 | 0) < (i7 | 0) & ((i63 | 0) > -1 & (i62 | 0) < (i6 | 0)) : 0) {
         i51 = i5 + ((Math_imul(i63, i6) | 0) + i62) | 0;
         i53 = HEAPU8[i51 >> 0] | 0;
         i51 = ((Math_imul((i18 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i52 = i10 + (i51 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + i53;
         i52 = i10 + (i51 + 1 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + i53;
         i52 = i10 + (i51 + 2 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + i53;
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i18 = i18 + 1 | 0;
     } while ((i18 | 0) < (i35 | 0));
    }
    break;
   }
  case 6:
   {
    if ((i35 | 0) > 0) {
     d11 = d23 + 100.0;
     d24 = +(i35 | 0);
     i18 = (i34 | 0) > 0;
     d30 = +(i34 | 0);
     i44 = i20 + 48 | 0;
     i38 = i20 + 56 | 0;
     i45 = i20 + 64 | 0;
     i41 = i20 + 8 | 0;
     i42 = i20 + 16 | 0;
     i39 = i20 + 24 | 0;
     i43 = i20 + 32 | 0;
     i40 = i20 + 40 | 0;
     i37 = (i1 | 0) == 1;
     i46 = 0;
     do {
      d29 = d11 + d27 * (+(i46 | 0) + .5) / d24;
      if (i18) {
       i47 = 0;
       do {
        d31 = d11 + d27 * (+(i47 | 0) + .5) / d30;
        d28 = +HEAPF64[i45 >> 3] + (d31 * +HEAPF64[i44 >> 3] + d29 * +HEAPF64[i38 >> 3]);
        if (d28 == 0.0) {
         i48 = i10;
         break L15;
        }
        d26 = (+HEAPF64[i42 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i41 >> 3])) / d28;
        HEAPF32[i21 >> 2] = d26;
        d25 = (+HEAPF64[i40 >> 3] + (d31 * +HEAPF64[i39 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d28;
        HEAPF32[i22 >> 2] = d25;
        _arParamIdeal2ObservLTf(i9, d26, d25, i21, i22) | 0;
        d25 = +HEAPF32[i21 >> 2];
        if (i37) {
         i64 = ((~~(d25 + 1.0) | 0) / 2 | 0) << 1;
         i65 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i64 = ~~(d25 + .5);
         i65 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i64 | 0) > -1 ? (i65 | 0) < (i7 | 0) & ((i65 | 0) > -1 & (i64 | 0) < (i6 | 0)) : 0) {
         i53 = (Math_imul(i65, i6) | 0) + i64 << 2;
         i52 = ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i51 = i10 + (i52 << 2) | 0;
         HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + (HEAPU8[i5 + (i53 | 3) >> 0] | 0);
         i51 = i10 + (i52 + 1 << 2) | 0;
         HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + (HEAPU8[i5 + (i53 | 2) >> 0] | 0);
         i51 = i10 + (i52 + 2 << 2) | 0;
         HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + (HEAPU8[i5 + (i53 | 1) >> 0] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i46 = i46 + 1 | 0;
     } while ((i46 | 0) < (i35 | 0));
    }
    break;
   }
  case 7:
   {
    if ((i35 | 0) > 0) {
     d30 = d23 + 100.0;
     d11 = +(i35 | 0);
     i46 = (i34 | 0) > 0;
     d24 = +(i34 | 0);
     i37 = i20 + 48 | 0;
     i43 = i20 + 56 | 0;
     i39 = i20 + 64 | 0;
     i40 = i20 + 8 | 0;
     i41 = i20 + 16 | 0;
     i42 = i20 + 24 | 0;
     i38 = i20 + 32 | 0;
     i44 = i20 + 40 | 0;
     i45 = (i1 | 0) == 1;
     i18 = 0;
     do {
      d29 = d30 + d27 * (+(i18 | 0) + .5) / d11;
      if (i46) {
       i47 = 0;
       do {
        d25 = d30 + d27 * (+(i47 | 0) + .5) / d24;
        d26 = +HEAPF64[i39 >> 3] + (d25 * +HEAPF64[i37 >> 3] + d29 * +HEAPF64[i43 >> 3]);
        if (d26 == 0.0) {
         i48 = i10;
         break L15;
        }
        d28 = (+HEAPF64[i41 >> 3] + (d25 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i40 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d28;
        d31 = (+HEAPF64[i44 >> 3] + (d25 * +HEAPF64[i42 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d31;
        _arParamIdeal2ObservLTf(i9, d28, d31, i21, i22) | 0;
        d31 = +HEAPF32[i21 >> 2];
        if (i45) {
         i66 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
         i67 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i66 = ~~(d31 + .5);
         i67 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i66 | 0) > -1 ? (i67 | 0) < (i7 | 0) & ((i67 | 0) > -1 & (i66 | 0) < (i6 | 0)) : 0) {
         i53 = Math_imul(i67, i6) | 0;
         i51 = (i66 & 65534) + i53 << 1;
         d31 = +((HEAPU8[i5 + i51 >> 0] | 0) + -128 | 0);
         d28 = +((HEAPU8[i5 + (i51 + 2) >> 0] | 0) + -128 | 0);
         d26 = +((HEAPU8[i5 + (i53 + i66 << 1 | 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
         i53 = ~~(d31 * 516.4110107421875 + d26) >> 8;
         i51 = ~~(d26 - d31 * 100.29100036621094 - d28 * 208.1199951171875) >> 8;
         i52 = ~~(d26 + d28 * 408.5830078125) >> 8;
         i68 = (i53 | 0) > 0 ? i53 : 0;
         i53 = ((Math_imul((i18 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i69 = i10 + (i53 << 2) | 0;
         HEAP32[i69 >> 2] = ((i68 | 0) < 255 ? i68 : 255) + (HEAP32[i69 >> 2] | 0);
         i69 = (i51 | 0) > 0 ? i51 : 0;
         i51 = i10 + (i53 + 1 << 2) | 0;
         HEAP32[i51 >> 2] = ((i69 | 0) < 255 ? i69 : 255) + (HEAP32[i51 >> 2] | 0);
         i51 = (i52 | 0) > 0 ? i52 : 0;
         i52 = i10 + (i53 + 2 << 2) | 0;
         HEAP32[i52 >> 2] = ((i51 | 0) < 255 ? i51 : 255) + (HEAP32[i52 >> 2] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i18 = i18 + 1 | 0;
     } while ((i18 | 0) < (i35 | 0));
    }
    break;
   }
  case 8:
   {
    if ((i35 | 0) > 0) {
     d24 = d23 + 100.0;
     d30 = +(i35 | 0);
     i18 = (i34 | 0) > 0;
     d11 = +(i34 | 0);
     i45 = i20 + 48 | 0;
     i38 = i20 + 56 | 0;
     i42 = i20 + 64 | 0;
     i44 = i20 + 8 | 0;
     i40 = i20 + 16 | 0;
     i41 = i20 + 24 | 0;
     i43 = i20 + 32 | 0;
     i37 = i20 + 40 | 0;
     i39 = (i1 | 0) == 1;
     i46 = 0;
     do {
      d29 = d24 + d27 * (+(i46 | 0) + .5) / d30;
      if (i18) {
       i47 = 0;
       do {
        d28 = d24 + d27 * (+(i47 | 0) + .5) / d11;
        d26 = +HEAPF64[i42 >> 3] + (d28 * +HEAPF64[i45 >> 3] + d29 * +HEAPF64[i38 >> 3]);
        if (d26 == 0.0) {
         i48 = i10;
         break L15;
        }
        d31 = (+HEAPF64[i40 >> 3] + (d28 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i44 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d31;
        d25 = (+HEAPF64[i37 >> 3] + (d28 * +HEAPF64[i41 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d25;
        _arParamIdeal2ObservLTf(i9, d31, d25, i21, i22) | 0;
        d25 = +HEAPF32[i21 >> 2];
        if (i39) {
         i70 = ((~~(d25 + 1.0) | 0) / 2 | 0) << 1;
         i71 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i70 = ~~(d25 + .5);
         i71 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i70 | 0) > -1 ? (i71 | 0) < (i7 | 0) & ((i71 | 0) > -1 & (i70 | 0) < (i6 | 0)) : 0) {
         i52 = Math_imul(i71, i6) | 0;
         i51 = (i70 & 65534) + i52 << 1;
         d25 = +((HEAPU8[i5 + (i51 | 1) >> 0] | 0) + -128 | 0);
         d31 = +((HEAPU8[i5 + (i51 + 3) >> 0] | 0) + -128 | 0);
         d26 = +((HEAPU8[i5 + (i52 + i70 << 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
         i52 = ~~(d26 + d25 * 516.4110107421875) >> 8;
         i51 = ~~(d26 - d25 * 100.29100036621094 - d31 * 208.1199951171875) >> 8;
         i53 = ~~(d26 + d31 * 408.5830078125) >> 8;
         i69 = (i52 | 0) > 0 ? i52 : 0;
         i52 = ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i68 = i10 + (i52 << 2) | 0;
         HEAP32[i68 >> 2] = ((i69 | 0) < 255 ? i69 : 255) + (HEAP32[i68 >> 2] | 0);
         i68 = (i51 | 0) > 0 ? i51 : 0;
         i51 = i10 + (i52 + 1 << 2) | 0;
         HEAP32[i51 >> 2] = ((i68 | 0) < 255 ? i68 : 255) + (HEAP32[i51 >> 2] | 0);
         i51 = (i53 | 0) > 0 ? i53 : 0;
         i53 = i10 + (i52 + 2 << 2) | 0;
         HEAP32[i53 >> 2] = ((i51 | 0) < 255 ? i51 : 255) + (HEAP32[i53 >> 2] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i46 = i46 + 1 | 0;
     } while ((i46 | 0) < (i35 | 0));
    }
    break;
   }
  case 9:
   {
    if ((i35 | 0) > 0) {
     d11 = d23 + 100.0;
     d24 = +(i35 | 0);
     i46 = (i34 | 0) > 0;
     d30 = +(i34 | 0);
     i39 = i20 + 48 | 0;
     i43 = i20 + 56 | 0;
     i41 = i20 + 64 | 0;
     i37 = i20 + 8 | 0;
     i44 = i20 + 16 | 0;
     i40 = i20 + 24 | 0;
     i38 = i20 + 32 | 0;
     i45 = i20 + 40 | 0;
     i42 = (i1 | 0) == 1;
     i18 = 0;
     do {
      d29 = d11 + d27 * (+(i18 | 0) + .5) / d24;
      if (i46) {
       i47 = 0;
       do {
        d31 = d11 + d27 * (+(i47 | 0) + .5) / d30;
        d26 = +HEAPF64[i41 >> 3] + (d31 * +HEAPF64[i39 >> 3] + d29 * +HEAPF64[i43 >> 3]);
        if (d26 == 0.0) {
         i48 = i10;
         break L15;
        }
        d25 = (+HEAPF64[i44 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i37 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d25;
        d28 = (+HEAPF64[i45 >> 3] + (d31 * +HEAPF64[i40 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d28;
        _arParamIdeal2ObservLTf(i9, d25, d28, i21, i22) | 0;
        d28 = +HEAPF32[i21 >> 2];
        if (i42) {
         i72 = ((~~(d28 + 1.0) | 0) / 2 | 0) << 1;
         i73 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i72 = ~~(d28 + .5);
         i73 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i72 | 0) > -1 ? (i73 | 0) < (i7 | 0) & ((i73 | 0) > -1 & (i72 | 0) < (i6 | 0)) : 0) {
         i53 = (Math_imul(i73, i6) | 0) + i72 << 1;
         i51 = HEAP8[i5 + (i53 | 1) >> 0] | 0;
         i52 = ((Math_imul((i18 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i68 = i10 + (i52 << 2) | 0;
         HEAP32[i68 >> 2] = (HEAP32[i68 >> 2] | 0) + ((i51 << 3 & 255 | 4) & 255);
         i68 = HEAP8[i5 + i53 >> 0] | 0;
         i53 = i10 + (i52 + 1 << 2) | 0;
         HEAP32[i53 >> 2] = ((i51 & -32 & 255) >>> 3 | i68 << 5 & 255 | 2) + (HEAP32[i53 >> 2] | 0);
         i53 = i10 + (i52 + 2 << 2) | 0;
         HEAP32[i53 >> 2] = (HEAP32[i53 >> 2] | 0) + ((i68 & -8 | 4) & 255);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i18 = i18 + 1 | 0;
     } while ((i18 | 0) < (i35 | 0));
    }
    break;
   }
  case 10:
   {
    if ((i35 | 0) > 0) {
     d30 = d23 + 100.0;
     d11 = +(i35 | 0);
     i18 = (i34 | 0) > 0;
     d24 = +(i34 | 0);
     i42 = i20 + 48 | 0;
     i38 = i20 + 56 | 0;
     i40 = i20 + 64 | 0;
     i45 = i20 + 8 | 0;
     i37 = i20 + 16 | 0;
     i44 = i20 + 24 | 0;
     i43 = i20 + 32 | 0;
     i39 = i20 + 40 | 0;
     i41 = (i1 | 0) == 1;
     i46 = 0;
     do {
      d29 = d30 + d27 * (+(i46 | 0) + .5) / d11;
      if (i18) {
       i47 = 0;
       do {
        d28 = d30 + d27 * (+(i47 | 0) + .5) / d24;
        d25 = +HEAPF64[i40 >> 3] + (d28 * +HEAPF64[i42 >> 3] + d29 * +HEAPF64[i38 >> 3]);
        if (d25 == 0.0) {
         i48 = i10;
         break L15;
        }
        d26 = (+HEAPF64[i37 >> 3] + (d28 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i45 >> 3])) / d25;
        HEAPF32[i21 >> 2] = d26;
        d31 = (+HEAPF64[i39 >> 3] + (d28 * +HEAPF64[i44 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d25;
        HEAPF32[i22 >> 2] = d31;
        _arParamIdeal2ObservLTf(i9, d26, d31, i21, i22) | 0;
        d31 = +HEAPF32[i21 >> 2];
        if (i41) {
         i74 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
         i75 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i74 = ~~(d31 + .5);
         i75 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i74 | 0) > -1 ? (i75 | 0) < (i7 | 0) & ((i75 | 0) > -1 & (i74 | 0) < (i6 | 0)) : 0) {
         i68 = (Math_imul(i75, i6) | 0) + i74 << 1;
         i53 = HEAP8[i5 + (i68 | 1) >> 0] | 0;
         i52 = ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i51 = i10 + (i52 << 2) | 0;
         HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + ((i53 << 2 & 255 | 4) & 255);
         i51 = HEAP8[i5 + i68 >> 0] | 0;
         i68 = i10 + (i52 + 1 << 2) | 0;
         HEAP32[i68 >> 2] = ((i53 & -64 & 255) >>> 3 | i51 << 5 & 255 | 4) + (HEAP32[i68 >> 2] | 0);
         i68 = i10 + (i52 + 2 << 2) | 0;
         HEAP32[i68 >> 2] = (HEAP32[i68 >> 2] | 0) + ((i51 & -8 | 4) & 255);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i46 = i46 + 1 | 0;
     } while ((i46 | 0) < (i35 | 0));
    }
    break;
   }
  case 11:
   {
    if ((i35 | 0) > 0) {
     d24 = d23 + 100.0;
     d30 = +(i35 | 0);
     i46 = (i34 | 0) > 0;
     d11 = +(i34 | 0);
     i41 = i20 + 48 | 0;
     i43 = i20 + 56 | 0;
     i44 = i20 + 64 | 0;
     i39 = i20 + 8 | 0;
     i45 = i20 + 16 | 0;
     i37 = i20 + 24 | 0;
     i38 = i20 + 32 | 0;
     i42 = i20 + 40 | 0;
     i40 = (i1 | 0) == 1;
     i18 = 0;
     do {
      d29 = d24 + d27 * (+(i18 | 0) + .5) / d30;
      if (i46) {
       i47 = 0;
       do {
        d31 = d24 + d27 * (+(i47 | 0) + .5) / d11;
        d26 = +HEAPF64[i44 >> 3] + (d31 * +HEAPF64[i41 >> 3] + d29 * +HEAPF64[i43 >> 3]);
        if (d26 == 0.0) {
         i48 = i10;
         break L15;
        }
        d25 = (+HEAPF64[i45 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i39 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d25;
        d28 = (+HEAPF64[i42 >> 3] + (d31 * +HEAPF64[i37 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d28;
        _arParamIdeal2ObservLTf(i9, d25, d28, i21, i22) | 0;
        d28 = +HEAPF32[i21 >> 2];
        if (i40) {
         i76 = ((~~(d28 + 1.0) | 0) / 2 | 0) << 1;
         i77 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i76 = ~~(d28 + .5);
         i77 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i76 | 0) > -1 ? (i77 | 0) < (i7 | 0) & ((i77 | 0) > -1 & (i76 | 0) < (i6 | 0)) : 0) {
         i51 = (Math_imul(i77, i6) | 0) + i76 << 1;
         i68 = ((Math_imul((i18 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) | 0) * 3 | 0;
         i52 = i10 + (i68 << 2) | 0;
         HEAP32[i52 >> 2] = (HEAP32[i52 >> 2] | 0) + ((HEAP8[i5 + (i51 | 1) >> 0] & -16 | 8) & 255);
         i52 = HEAP8[i5 + i51 >> 0] | 0;
         i51 = i10 + (i68 + 1 << 2) | 0;
         HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + ((i52 << 4 & 255 | 8) & 255);
         i51 = i10 + (i68 + 2 << 2) | 0;
         HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + ((i52 & -16 | 8) & 255);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i18 = i18 + 1 | 0;
     } while ((i18 | 0) < (i35 | 0));
    }
    break;
   }
  default:
   {
    _arLog(0, 3, 17958, i16);
    i48 = i10;
    break L15;
   }
  } while (0);
  if (i33 | 0) {
   i18 = Math_imul(i4, i36) | 0;
   i40 = 0;
   do {
    HEAP8[i12 + i40 >> 0] = ((HEAP32[i10 + (i40 << 2) >> 2] | 0) >>> 0) / (i18 >>> 0) | 0;
    i40 = i40 + 1 | 0;
   } while (i40 >>> 0 < i19 >>> 0);
  }
  _free(i10);
  i78 = 0;
  STACKTOP = i13;
  return i78 | 0;
 } else {
  i19 = _calloc(i33, 4) | 0;
  if (!i19) {
   _arLog(0, 3, 20510, i15);
   _exit(1);
  }
  L249 : do if (i8 >>> 0 < 2) {
   if ((i35 | 0) > 0) {
    d11 = d23 + 100.0;
    d24 = +(i35 | 0);
    i40 = (i34 | 0) > 0;
    d30 = +(i34 | 0);
    i18 = i20 + 48 | 0;
    i38 = i20 + 56 | 0;
    i37 = i20 + 64 | 0;
    i42 = i20 + 8 | 0;
    i39 = i20 + 16 | 0;
    i45 = i20 + 24 | 0;
    i43 = i20 + 32 | 0;
    i41 = i20 + 40 | 0;
    i44 = (i1 | 0) == 1;
    i46 = 0;
    do {
     d29 = d11 + d27 * (+(i46 | 0) + .5) / d24;
     if (i40) {
      i47 = 0;
      do {
       d28 = d11 + d27 * (+(i47 | 0) + .5) / d30;
       d25 = +HEAPF64[i37 >> 3] + (d28 * +HEAPF64[i18 >> 3] + d29 * +HEAPF64[i38 >> 3]);
       if (d25 == 0.0) {
        i48 = i19;
        break L15;
       }
       d26 = (+HEAPF64[i39 >> 3] + (d28 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i42 >> 3])) / d25;
       HEAPF32[i21 >> 2] = d26;
       d31 = (+HEAPF64[i41 >> 3] + (d28 * +HEAPF64[i45 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d25;
       HEAPF32[i22 >> 2] = d31;
       _arParamIdeal2ObservLTf(i9, d26, d31, i21, i22) | 0;
       d31 = +HEAPF32[i21 >> 2];
       if (i44) {
        i79 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
        i80 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        i79 = ~~(d31 + .5);
        i80 = ~~(+HEAPF32[i22 >> 2] + .5);
       }
       if ((i79 | 0) > -1 ? (i80 | 0) < (i7 | 0) & ((i80 | 0) > -1 & (i79 | 0) < (i6 | 0)) : 0) {
        i52 = ((Math_imul(i80, i6) | 0) + i79 | 0) * 3 | 0;
        i51 = i19 + ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) << 2) | 0;
        HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + ((((HEAPU8[i5 + (i52 + 1) >> 0] | 0) + (HEAPU8[i5 + i52 >> 0] | 0) + (HEAPU8[i5 + (i52 + 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
       }
       i47 = i47 + 1 | 0;
      } while ((i47 | 0) < (i34 | 0));
     }
     i46 = i46 + 1 | 0;
    } while ((i46 | 0) < (i35 | 0));
   }
  } else {
   if ((i8 | 1 | 0) == 3) {
    if ((i35 | 0) <= 0) break;
    d30 = d23 + 100.0;
    d11 = +(i35 | 0);
    i46 = (i34 | 0) > 0;
    d24 = +(i34 | 0);
    i44 = i20 + 48 | 0;
    i43 = i20 + 56 | 0;
    i45 = i20 + 64 | 0;
    i41 = i20 + 8 | 0;
    i42 = i20 + 16 | 0;
    i39 = i20 + 24 | 0;
    i38 = i20 + 32 | 0;
    i18 = i20 + 40 | 0;
    i37 = (i1 | 0) == 1;
    i40 = 0;
    while (1) {
     d29 = d30 + d27 * (+(i40 | 0) + .5) / d11;
     if (i46) {
      i47 = 0;
      do {
       d31 = d30 + d27 * (+(i47 | 0) + .5) / d24;
       d26 = +HEAPF64[i45 >> 3] + (d31 * +HEAPF64[i44 >> 3] + d29 * +HEAPF64[i43 >> 3]);
       if (d26 == 0.0) {
        i48 = i19;
        break L15;
       }
       d25 = (+HEAPF64[i42 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i41 >> 3])) / d26;
       HEAPF32[i21 >> 2] = d25;
       d28 = (+HEAPF64[i18 >> 3] + (d31 * +HEAPF64[i39 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
       HEAPF32[i22 >> 2] = d28;
       _arParamIdeal2ObservLTf(i9, d25, d28, i21, i22) | 0;
       d28 = +HEAPF32[i21 >> 2];
       if (i37) {
        i81 = ((~~(d28 + 1.0) | 0) / 2 | 0) << 1;
        i82 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        i81 = ~~(d28 + .5);
        i82 = ~~(+HEAPF32[i22 >> 2] + .5);
       }
       if ((i81 | 0) > -1 ? (i82 | 0) < (i7 | 0) & ((i82 | 0) > -1 & (i81 | 0) < (i6 | 0)) : 0) {
        i52 = (Math_imul(i82, i6) | 0) + i81 << 2;
        i51 = i19 + ((Math_imul((i40 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) << 2) | 0;
        HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + ((((HEAPU8[i5 + (i52 | 1) >> 0] | 0) + (HEAPU8[i5 + i52 >> 0] | 0) + (HEAPU8[i5 + (i52 | 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
       }
       i47 = i47 + 1 | 0;
      } while ((i47 | 0) < (i34 | 0));
     }
     i40 = i40 + 1 | 0;
     if ((i40 | 0) >= (i35 | 0)) break L249;
    }
   }
   if ((i8 | 2 | 0) == 6) {
    if ((i35 | 0) <= 0) break;
    d24 = d23 + 100.0;
    d30 = +(i35 | 0);
    i40 = (i34 | 0) > 0;
    d11 = +(i34 | 0);
    i37 = i20 + 48 | 0;
    i38 = i20 + 56 | 0;
    i39 = i20 + 64 | 0;
    i18 = i20 + 8 | 0;
    i41 = i20 + 16 | 0;
    i42 = i20 + 24 | 0;
    i43 = i20 + 32 | 0;
    i44 = i20 + 40 | 0;
    i45 = (i1 | 0) == 1;
    i46 = 0;
    while (1) {
     d29 = d24 + d27 * (+(i46 | 0) + .5) / d30;
     if (i40) {
      i47 = 0;
      do {
       d28 = d24 + d27 * (+(i47 | 0) + .5) / d11;
       d25 = +HEAPF64[i39 >> 3] + (d28 * +HEAPF64[i37 >> 3] + d29 * +HEAPF64[i38 >> 3]);
       if (d25 == 0.0) {
        i48 = i19;
        break L15;
       }
       d26 = (+HEAPF64[i41 >> 3] + (d28 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i18 >> 3])) / d25;
       HEAPF32[i21 >> 2] = d26;
       d31 = (+HEAPF64[i44 >> 3] + (d28 * +HEAPF64[i42 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d25;
       HEAPF32[i22 >> 2] = d31;
       _arParamIdeal2ObservLTf(i9, d26, d31, i21, i22) | 0;
       d31 = +HEAPF32[i21 >> 2];
       if (i45) {
        i83 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
        i84 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        i83 = ~~(d31 + .5);
        i84 = ~~(+HEAPF32[i22 >> 2] + .5);
       }
       if ((i83 | 0) > -1 ? (i84 | 0) < (i7 | 0) & ((i84 | 0) > -1 & (i83 | 0) < (i6 | 0)) : 0) {
        i52 = (Math_imul(i84, i6) | 0) + i83 << 2;
        i51 = i19 + ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) << 2) | 0;
        HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + ((((HEAPU8[i5 + (i52 | 2) >> 0] | 0) + (HEAPU8[i5 + (i52 | 1) >> 0] | 0) + (HEAPU8[i5 + (i52 | 3) >> 0] | 0) | 0) >>> 0) / 3 | 0);
       }
       i47 = i47 + 1 | 0;
      } while ((i47 | 0) < (i34 | 0));
     }
     i46 = i46 + 1 | 0;
     if ((i46 | 0) >= (i35 | 0)) break L249;
    }
   }
   switch (i8 | 0) {
   case 5:
   case 12:
   case 13:
   case 14:
    {
     if ((i35 | 0) <= 0) break L249;
     d11 = d23 + 100.0;
     d24 = +(i35 | 0);
     i46 = (i34 | 0) > 0;
     d30 = +(i34 | 0);
     i45 = i20 + 48 | 0;
     i43 = i20 + 56 | 0;
     i42 = i20 + 64 | 0;
     i44 = i20 + 8 | 0;
     i18 = i20 + 16 | 0;
     i41 = i20 + 24 | 0;
     i38 = i20 + 32 | 0;
     i37 = i20 + 40 | 0;
     i39 = (i1 | 0) == 1;
     i40 = 0;
     do {
      d29 = d11 + d27 * (+(i40 | 0) + .5) / d24;
      if (i46) {
       i47 = 0;
       do {
        d31 = d11 + d27 * (+(i47 | 0) + .5) / d30;
        d26 = +HEAPF64[i42 >> 3] + (d31 * +HEAPF64[i45 >> 3] + d29 * +HEAPF64[i43 >> 3]);
        if (d26 == 0.0) {
         i48 = i19;
         break L15;
        }
        d25 = (+HEAPF64[i18 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i44 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d25;
        d28 = (+HEAPF64[i37 >> 3] + (d31 * +HEAPF64[i41 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d28;
        _arParamIdeal2ObservLTf(i9, d25, d28, i21, i22) | 0;
        d28 = +HEAPF32[i21 >> 2];
        if (i39) {
         i85 = ((~~(d28 + 1.0) | 0) / 2 | 0) << 1;
         i86 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i85 = ~~(d28 + .5);
         i86 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i85 | 0) > -1 ? (i86 | 0) < (i7 | 0) & ((i86 | 0) > -1 & (i85 | 0) < (i6 | 0)) : 0) {
         i52 = i5 + ((Math_imul(i86, i6) | 0) + i85) | 0;
         i51 = i19 + ((Math_imul((i40 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) << 2) | 0;
         HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + (HEAPU8[i52 >> 0] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i40 = i40 + 1 | 0;
     } while ((i40 | 0) < (i35 | 0));
     break;
    }
   case 7:
    {
     if ((i35 | 0) <= 0) break L249;
     d30 = d23 + 100.0;
     d11 = +(i35 | 0);
     i40 = (i34 | 0) > 0;
     d24 = +(i34 | 0);
     i39 = i20 + 48 | 0;
     i38 = i20 + 56 | 0;
     i41 = i20 + 64 | 0;
     i37 = i20 + 8 | 0;
     i44 = i20 + 16 | 0;
     i18 = i20 + 24 | 0;
     i43 = i20 + 32 | 0;
     i45 = i20 + 40 | 0;
     i42 = (i1 | 0) == 1;
     i46 = 0;
     do {
      d29 = d30 + d27 * (+(i46 | 0) + .5) / d11;
      if (i40) {
       i47 = 0;
       do {
        d28 = d30 + d27 * (+(i47 | 0) + .5) / d24;
        d25 = +HEAPF64[i41 >> 3] + (d28 * +HEAPF64[i39 >> 3] + d29 * +HEAPF64[i38 >> 3]);
        if (d25 == 0.0) {
         i48 = i19;
         break L15;
        }
        d26 = (+HEAPF64[i44 >> 3] + (d28 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i37 >> 3])) / d25;
        HEAPF32[i21 >> 2] = d26;
        d31 = (+HEAPF64[i45 >> 3] + (d28 * +HEAPF64[i18 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d25;
        HEAPF32[i22 >> 2] = d31;
        _arParamIdeal2ObservLTf(i9, d26, d31, i21, i22) | 0;
        d31 = +HEAPF32[i21 >> 2];
        if (i42) {
         i87 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
         i88 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i87 = ~~(d31 + .5);
         i88 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i87 | 0) > -1 ? (i88 | 0) < (i7 | 0) & ((i88 | 0) > -1 & (i87 | 0) < (i6 | 0)) : 0) {
         i52 = i5 + ((Math_imul(i88, i6) | 0) + i87 << 1 | 1) | 0;
         i51 = i19 + ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) << 2) | 0;
         HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + (HEAPU8[i52 >> 0] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i46 = i46 + 1 | 0;
     } while ((i46 | 0) < (i35 | 0));
     break;
    }
   case 8:
    {
     if ((i35 | 0) <= 0) break L249;
     d24 = d23 + 100.0;
     d30 = +(i35 | 0);
     i46 = (i34 | 0) > 0;
     d11 = +(i34 | 0);
     i42 = i20 + 48 | 0;
     i43 = i20 + 56 | 0;
     i18 = i20 + 64 | 0;
     i45 = i20 + 8 | 0;
     i37 = i20 + 16 | 0;
     i44 = i20 + 24 | 0;
     i38 = i20 + 32 | 0;
     i39 = i20 + 40 | 0;
     i41 = (i1 | 0) == 1;
     i40 = 0;
     do {
      d29 = d24 + d27 * (+(i40 | 0) + .5) / d30;
      if (i46) {
       i47 = 0;
       do {
        d31 = d24 + d27 * (+(i47 | 0) + .5) / d11;
        d26 = +HEAPF64[i18 >> 3] + (d31 * +HEAPF64[i42 >> 3] + d29 * +HEAPF64[i43 >> 3]);
        if (d26 == 0.0) {
         i48 = i19;
         break L15;
        }
        d25 = (+HEAPF64[i37 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i45 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d25;
        d28 = (+HEAPF64[i39 >> 3] + (d31 * +HEAPF64[i44 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d28;
        _arParamIdeal2ObservLTf(i9, d25, d28, i21, i22) | 0;
        d28 = +HEAPF32[i21 >> 2];
        if (i41) {
         i89 = ((~~(d28 + 1.0) | 0) / 2 | 0) << 1;
         i90 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i89 = ~~(d28 + .5);
         i90 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i89 | 0) > -1 ? (i90 | 0) < (i7 | 0) & ((i90 | 0) > -1 & (i89 | 0) < (i6 | 0)) : 0) {
         i52 = i5 + ((Math_imul(i90, i6) | 0) + i89 << 1) | 0;
         i51 = i19 + ((Math_imul((i40 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) << 2) | 0;
         HEAP32[i51 >> 2] = (HEAP32[i51 >> 2] | 0) + (HEAPU8[i52 >> 0] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i40 = i40 + 1 | 0;
     } while ((i40 | 0) < (i35 | 0));
     break;
    }
   case 9:
    {
     if ((i35 | 0) <= 0) break L249;
     d11 = d23 + 100.0;
     d24 = +(i35 | 0);
     i40 = (i34 | 0) > 0;
     d30 = +(i34 | 0);
     i41 = i20 + 48 | 0;
     i38 = i20 + 56 | 0;
     i44 = i20 + 64 | 0;
     i39 = i20 + 8 | 0;
     i45 = i20 + 16 | 0;
     i37 = i20 + 24 | 0;
     i43 = i20 + 32 | 0;
     i42 = i20 + 40 | 0;
     i18 = (i1 | 0) == 1;
     i46 = 0;
     do {
      d29 = d11 + d27 * (+(i46 | 0) + .5) / d24;
      if (i40) {
       i47 = 0;
       do {
        d28 = d11 + d27 * (+(i47 | 0) + .5) / d30;
        d25 = +HEAPF64[i44 >> 3] + (d28 * +HEAPF64[i41 >> 3] + d29 * +HEAPF64[i38 >> 3]);
        if (d25 == 0.0) {
         i48 = i19;
         break L15;
        }
        d26 = (+HEAPF64[i45 >> 3] + (d28 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i39 >> 3])) / d25;
        HEAPF32[i21 >> 2] = d26;
        d31 = (+HEAPF64[i42 >> 3] + (d28 * +HEAPF64[i37 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d25;
        HEAPF32[i22 >> 2] = d31;
        _arParamIdeal2ObservLTf(i9, d26, d31, i21, i22) | 0;
        d31 = +HEAPF32[i21 >> 2];
        if (i18) {
         i91 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
         i92 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i91 = ~~(d31 + .5);
         i92 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i91 | 0) > -1 ? (i92 | 0) < (i7 | 0) & ((i92 | 0) > -1 & (i91 | 0) < (i6 | 0)) : 0) {
         i52 = (Math_imul(i92, i6) | 0) + i91 << 1;
         i51 = HEAPU8[i5 + i52 >> 0] | 0;
         i68 = HEAPU8[i5 + (i52 | 1) >> 0] | 0;
         i52 = i19 + ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) << 2) | 0;
         HEAP32[i52 >> 2] = ((((i51 << 5 & 224 | i68 >>> 3 & 28 | 2) + (i51 & 248 | 4) + (i68 << 3 & 248 | 4) | 0) >>> 0) / 3 | 0) + (HEAP32[i52 >> 2] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i46 = i46 + 1 | 0;
     } while ((i46 | 0) < (i35 | 0));
     break;
    }
   case 10:
    {
     if ((i35 | 0) <= 0) break L249;
     d30 = d23 + 100.0;
     d11 = +(i35 | 0);
     i46 = (i34 | 0) > 0;
     d24 = +(i34 | 0);
     i18 = i20 + 48 | 0;
     i43 = i20 + 56 | 0;
     i37 = i20 + 64 | 0;
     i42 = i20 + 8 | 0;
     i39 = i20 + 16 | 0;
     i45 = i20 + 24 | 0;
     i38 = i20 + 32 | 0;
     i41 = i20 + 40 | 0;
     i44 = (i1 | 0) == 1;
     i40 = 0;
     do {
      d29 = d30 + d27 * (+(i40 | 0) + .5) / d11;
      if (i46) {
       i47 = 0;
       do {
        d31 = d30 + d27 * (+(i47 | 0) + .5) / d24;
        d26 = +HEAPF64[i37 >> 3] + (d31 * +HEAPF64[i18 >> 3] + d29 * +HEAPF64[i43 >> 3]);
        if (d26 == 0.0) {
         i48 = i19;
         break L15;
        }
        d25 = (+HEAPF64[i39 >> 3] + (d31 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i42 >> 3])) / d26;
        HEAPF32[i21 >> 2] = d25;
        d28 = (+HEAPF64[i41 >> 3] + (d31 * +HEAPF64[i45 >> 3] + d29 * +HEAPF64[i38 >> 3])) / d26;
        HEAPF32[i22 >> 2] = d28;
        _arParamIdeal2ObservLTf(i9, d25, d28, i21, i22) | 0;
        d28 = +HEAPF32[i21 >> 2];
        if (i44) {
         i93 = ((~~(d28 + 1.0) | 0) / 2 | 0) << 1;
         i94 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i93 = ~~(d28 + .5);
         i94 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i93 | 0) > -1 ? (i94 | 0) < (i7 | 0) & ((i94 | 0) > -1 & (i93 | 0) < (i6 | 0)) : 0) {
         i52 = (Math_imul(i94, i6) | 0) + i93 << 1;
         i68 = HEAPU8[i5 + i52 >> 0] | 0;
         i51 = HEAPU8[i5 + (i52 | 1) >> 0] | 0;
         i52 = i19 + ((Math_imul((i40 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) << 2) | 0;
         HEAP32[i52 >> 2] = ((((i68 << 5 & 224 | i51 >>> 3 & 24 | 4) + (i68 & 248 | 4) + (i51 << 2 & 248 | 4) | 0) >>> 0) / 3 | 0) + (HEAP32[i52 >> 2] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i40 = i40 + 1 | 0;
     } while ((i40 | 0) < (i35 | 0));
     break;
    }
   case 11:
    {
     if ((i35 | 0) <= 0) break L249;
     d24 = d23 + 100.0;
     d30 = +(i35 | 0);
     i40 = (i34 | 0) > 0;
     d11 = +(i34 | 0);
     i44 = i20 + 48 | 0;
     i38 = i20 + 56 | 0;
     i45 = i20 + 64 | 0;
     i41 = i20 + 8 | 0;
     i42 = i20 + 16 | 0;
     i39 = i20 + 24 | 0;
     i43 = i20 + 32 | 0;
     i18 = i20 + 40 | 0;
     i37 = (i1 | 0) == 1;
     i46 = 0;
     do {
      d29 = d24 + d27 * (+(i46 | 0) + .5) / d30;
      if (i40) {
       i47 = 0;
       do {
        d28 = d24 + d27 * (+(i47 | 0) + .5) / d11;
        d25 = +HEAPF64[i45 >> 3] + (d28 * +HEAPF64[i44 >> 3] + d29 * +HEAPF64[i38 >> 3]);
        if (d25 == 0.0) {
         i48 = i19;
         break L15;
        }
        d26 = (+HEAPF64[i42 >> 3] + (d28 * +HEAPF64[i20 >> 3] + d29 * +HEAPF64[i41 >> 3])) / d25;
        HEAPF32[i21 >> 2] = d26;
        d31 = (+HEAPF64[i18 >> 3] + (d28 * +HEAPF64[i39 >> 3] + d29 * +HEAPF64[i43 >> 3])) / d25;
        HEAPF32[i22 >> 2] = d31;
        _arParamIdeal2ObservLTf(i9, d26, d31, i21, i22) | 0;
        d31 = +HEAPF32[i21 >> 2];
        if (i37) {
         i95 = ((~~(d31 + 1.0) | 0) / 2 | 0) << 1;
         i96 = ((~~(+HEAPF32[i22 >> 2] + 1.0) | 0) / 2 | 0) << 1;
        } else {
         i95 = ~~(d31 + .5);
         i96 = ~~(+HEAPF32[i22 >> 2] + .5);
        }
        if ((i95 | 0) > -1 ? (i96 | 0) < (i7 | 0) & ((i96 | 0) > -1 & (i95 | 0) < (i6 | 0)) : 0) {
         i52 = (Math_imul(i96, i6) | 0) + i95 << 1;
         i51 = HEAPU8[i5 + i52 >> 0] | 0;
         i68 = i19 + ((Math_imul((i46 | 0) / (i4 | 0) | 0, i3) | 0) + ((i47 | 0) / (i36 | 0) | 0) << 2) | 0;
         HEAP32[i68 >> 2] = ((((i51 << 4 & 240 | 8) + (i51 & 240 | 8) + ((HEAP8[i5 + (i52 | 1) >> 0] & -16 | 8) & 255) | 0) >>> 0) / 3 | 0) + (HEAP32[i68 >> 2] | 0);
        }
        i47 = i47 + 1 | 0;
       } while ((i47 | 0) < (i34 | 0));
      }
      i46 = i46 + 1 | 0;
     } while ((i46 | 0) < (i35 | 0));
     break;
    }
   default:
    {
     _arLog(0, 3, 17958, i14);
     i48 = i19;
     break L15;
    }
   }
  } while (0);
  if (i33 | 0) {
   i10 = Math_imul(i4, i36) | 0;
   i46 = 0;
   do {
    HEAP8[i12 + i46 >> 0] = ((HEAP32[i19 + (i46 << 2) >> 2] | 0) >>> 0) / (i10 >>> 0) | 0;
    i46 = i46 + 1 | 0;
   } while ((i46 | 0) != (i33 | 0));
  }
  _free(i19);
  i78 = 0;
  STACKTOP = i13;
  return i78 | 0;
 } while (0);
 _free(i48);
 i78 = -1;
 STACKTOP = i13;
 return i78 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i5 = i4 + 128 | 0;
 i6 = i4 + 104 | 0;
 i7 = i4 + 40 | 0;
 i8 = i4 + 88 | 0;
 i9 = i4 + 24 | 0;
 i10 = i4 + 76 | 0;
 i11 = i4 + 12 | 0;
 i12 = i4;
 i13 = i4 + 64 | 0;
 L1 : do if ((i1 | 0) != (i2 | 0)) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 75:
  case 86:
  case 114:
   {
    HEAP32[i5 >> 2] = 0;
    i14 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1, i2, i5) | 0;
    L5 : do if ((i14 | 0) != (i1 | 0) ? (i15 = (HEAP8[i14 >> 0] | 0) == 70, i16 = i3 + 4 | 0, i17 = ((HEAP32[i16 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0, i18 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i14, i2, i3) | 0, i19 = ((HEAP32[i16 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0, (i18 | 0) != (i14 | 0)) : 0) {
     i16 = i3 + 20 | 0;
     i20 = HEAP32[i16 >> 2] | 0;
     if (i15) {
      i21 = 0;
      while (1) {
       if ((i21 | 0) == -1) break;
       i22 = i21 + -1 | 0;
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i20 + (i22 << 4) | 0);
       i21 = i22;
      }
      i21 = i20 + -16 | 0;
      HEAP32[i16 >> 2] = i21;
      i23 = i21;
     } else i23 = i20;
     i21 = HEAP32[i3 + 12 >> 2] | 0;
     HEAP32[i6 >> 2] = i21;
     if (i23 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i23 >> 2] = 0;
      HEAP32[i23 + 4 >> 2] = 0;
      HEAP32[i23 + 8 >> 2] = 0;
      HEAP32[i23 + 12 >> 2] = i21;
      HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i3 + 16 | 0, i6);
     i21 = HEAP32[i5 >> 2] | 0;
     i22 = (i21 & 1 | 0) == 0;
     i24 = (i21 & 2 | 0) == 0;
     i25 = (i21 & 4 | 0) == 0;
     i21 = i17;
     while (1) {
      if (i21 >>> 0 >= i19 >>> 0) {
       i26 = i18;
       break L5;
      }
      if (i15) {
       i27 = HEAP32[i3 >> 2] | 0;
       i28 = i27 + (i21 * 24 | 0) + 12 | 0;
       i29 = HEAP8[i28 + 11 >> 0] | 0;
       i30 = i29 << 24 >> 24 < 0;
       if (i30) {
        i31 = HEAP32[i27 + (i21 * 24 | 0) + 16 >> 2] | 0;
        i32 = HEAP32[i28 >> 2] | 0;
       } else {
        i31 = i29 & 255;
        i32 = i28;
       }
       i33 = i31 + -2 | 0;
       if ((HEAP8[i32 + i33 >> 0] | 0) == 38) i34 = i31 + -3 | 0; else {
        if (i30) {
         i35 = HEAP32[i28 >> 2] | 0;
         i36 = HEAP32[i27 + (i21 * 24 | 0) + 16 >> 2] | 0;
        } else {
         i35 = i28;
         i36 = i29 & 255;
        }
        i34 = (HEAP8[i35 + i36 + -1 >> 0] | 0) == 38 ? i33 : i31;
       }
       if (i22) i37 = i34; else {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i28, i34, 50190) | 0;
        i37 = i34 + 6 | 0;
       }
       if (i24) i38 = i37; else {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i3 >> 2] | 0) + (i21 * 24 | 0) + 12 | 0, i37, 50197) | 0;
        i38 = i37 + 9 | 0;
       }
       if (!i25) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i3 >> 2] | 0) + (i21 * 24 | 0) + 12 | 0, i38, 50207) | 0;
      } else {
       if (!i22) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i3 >> 2] | 0) + (i21 * 24 | 0) | 0, 50190) | 0;
       if (!i24) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i3 >> 2] | 0) + (i21 * 24 | 0) | 0, 50197) | 0;
       if (!i25) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i3 >> 2] | 0) + (i21 * 24 | 0) | 0, 50207) | 0;
      }
      i28 = HEAP32[i16 >> 2] | 0;
      i33 = (HEAP32[i3 >> 2] | 0) + (i21 * 24 | 0) | 0;
      i29 = i28 + -12 | 0;
      i27 = HEAP32[i29 >> 2] | 0;
      if ((i27 | 0) == (HEAP32[i28 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i28 + -16 | 0, i33); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i27, i33);
       HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 24;
      }
      i21 = i21 + 1 | 0;
     }
    } else i26 = i1; while (0);
    i39 = i26;
    break L1;
    break;
   }
  default:
   {}
  }
  i14 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
  if ((i14 | 0) == (i1 | 0)) {
   L59 : do switch (HEAP8[i1 >> 0] | 0) {
   case 65:
    {
     i21 = __ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
     if ((i21 | 0) == (i1 | 0)) {
      i39 = i1;
      break L1;
     }
     i16 = HEAP32[i3 + 4 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i16 | 0)) {
      i39 = i1;
      break L1;
     }
     HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i16 + -24 | 0, i6);
     i16 = i3 + 20 | 0;
     i25 = HEAP32[i16 >> 2] | 0;
     if (i25 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i25 >> 2] = 0;
      i24 = i25 + 4 | 0;
      HEAP32[i24 >> 2] = 0;
      i22 = i25 + 8 | 0;
      HEAP32[i22 >> 2] = 0;
      HEAP32[i25 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
      HEAP32[i25 >> 2] = HEAP32[i5 >> 2];
      i25 = i5 + 4 | 0;
      HEAP32[i24 >> 2] = HEAP32[i25 >> 2];
      i24 = i5 + 8 | 0;
      HEAP32[i22 >> 2] = HEAP32[i24 >> 2];
      HEAP32[i24 >> 2] = 0;
      HEAP32[i25 >> 2] = 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
     i39 = i21;
     break L1;
     break;
    }
   case 67:
    {
     i21 = i1 + 1 | 0;
     i16 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i21, i2, i3) | 0;
     if ((i16 | 0) == (i21 | 0)) {
      i39 = i1;
      break L1;
     }
     i21 = i3 + 4 | 0;
     i25 = HEAP32[i21 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i25 | 0)) {
      i39 = i1;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i25 + -24 | 0, 50217) | 0;
     i25 = (HEAP32[i21 >> 2] | 0) + -24 | 0;
     HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i25, i6);
     i25 = i3 + 20 | 0;
     i21 = HEAP32[i25 >> 2] | 0;
     if (i21 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i21 >> 2] = 0;
      i24 = i21 + 4 | 0;
      HEAP32[i24 >> 2] = 0;
      i22 = i21 + 8 | 0;
      HEAP32[i22 >> 2] = 0;
      HEAP32[i21 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
      HEAP32[i21 >> 2] = HEAP32[i5 >> 2];
      i21 = i5 + 4 | 0;
      HEAP32[i24 >> 2] = HEAP32[i21 >> 2];
      i24 = i5 + 8 | 0;
      HEAP32[i22 >> 2] = HEAP32[i24 >> 2];
      HEAP32[i24 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
     i39 = i16;
     break L1;
     break;
    }
   case 70:
    {
     i16 = __ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
     if ((i16 | 0) == (i1 | 0)) {
      i39 = i1;
      break L1;
     }
     i25 = HEAP32[i3 + 4 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i25 | 0)) {
      i39 = i1;
      break L1;
     }
     HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i25 + -24 | 0, i6);
     i25 = i3 + 20 | 0;
     i21 = HEAP32[i25 >> 2] | 0;
     if (i21 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i21 >> 2] = 0;
      i24 = i21 + 4 | 0;
      HEAP32[i24 >> 2] = 0;
      i22 = i21 + 8 | 0;
      HEAP32[i22 >> 2] = 0;
      HEAP32[i21 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
      HEAP32[i21 >> 2] = HEAP32[i5 >> 2];
      i21 = i5 + 4 | 0;
      HEAP32[i24 >> 2] = HEAP32[i21 >> 2];
      i24 = i5 + 8 | 0;
      HEAP32[i22 >> 2] = HEAP32[i24 >> 2];
      HEAP32[i24 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
     i39 = i16;
     break L1;
     break;
    }
   case 71:
    {
     i16 = i1 + 1 | 0;
     i25 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i3) | 0;
     if ((i25 | 0) == (i16 | 0)) {
      i39 = i1;
      break L1;
     }
     i16 = i3 + 4 | 0;
     i21 = HEAP32[i16 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i21 | 0)) {
      i39 = i1;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i21 + -24 | 0, 50226) | 0;
     i21 = (HEAP32[i16 >> 2] | 0) + -24 | 0;
     HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i21, i6);
     i21 = i3 + 20 | 0;
     i16 = HEAP32[i21 >> 2] | 0;
     if (i16 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i16 >> 2] = 0;
      i24 = i16 + 4 | 0;
      HEAP32[i24 >> 2] = 0;
      i22 = i16 + 8 | 0;
      HEAP32[i22 >> 2] = 0;
      HEAP32[i16 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
      HEAP32[i16 >> 2] = HEAP32[i5 >> 2];
      i16 = i5 + 4 | 0;
      HEAP32[i24 >> 2] = HEAP32[i16 >> 2];
      i24 = i5 + 8 | 0;
      HEAP32[i22 >> 2] = HEAP32[i24 >> 2];
      HEAP32[i24 >> 2] = 0;
      HEAP32[i16 >> 2] = 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i21 >> 2] = (HEAP32[i21 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
     i39 = i25;
     break L1;
     break;
    }
   case 77:
    {
     i25 = __ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
     if ((i25 | 0) == (i1 | 0)) {
      i39 = i1;
      break L1;
     }
     i21 = HEAP32[i3 + 4 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i21 | 0)) {
      i39 = i1;
      break L1;
     }
     HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i21 + -24 | 0, i6);
     i21 = i3 + 20 | 0;
     i16 = HEAP32[i21 >> 2] | 0;
     if (i16 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i16 >> 2] = 0;
      i24 = i16 + 4 | 0;
      HEAP32[i24 >> 2] = 0;
      i22 = i16 + 8 | 0;
      HEAP32[i22 >> 2] = 0;
      HEAP32[i16 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
      HEAP32[i16 >> 2] = HEAP32[i5 >> 2];
      i16 = i5 + 4 | 0;
      HEAP32[i24 >> 2] = HEAP32[i16 >> 2];
      i24 = i5 + 8 | 0;
      HEAP32[i22 >> 2] = HEAP32[i24 >> 2];
      HEAP32[i24 >> 2] = 0;
      HEAP32[i16 >> 2] = 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i21 >> 2] = (HEAP32[i21 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
     i39 = i25;
     break L1;
     break;
    }
   case 79:
    {
     i25 = i3 + 4 | 0;
     i21 = ((HEAP32[i25 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
     i16 = i1 + 1 | 0;
     i24 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i3) | 0;
     i22 = ((HEAP32[i25 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
     if ((i24 | 0) == (i16 | 0)) {
      i39 = i1;
      break L1;
     }
     i16 = HEAP32[i3 + 12 >> 2] | 0;
     HEAP32[i5 >> 2] = i16;
     i25 = i3 + 20 | 0;
     i15 = HEAP32[i25 >> 2] | 0;
     if (i15 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = 0;
      HEAP32[i15 + 4 >> 2] = 0;
      HEAP32[i15 + 8 >> 2] = 0;
      HEAP32[i15 + 12 >> 2] = i16;
      HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i3 + 16 | 0, i5);
     i16 = i5 + 11 | 0;
     i15 = i5 + 4 | 0;
     i18 = i21;
     while (1) {
      if (i18 >>> 0 >= i22 >>> 0) {
       i39 = i24;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i5, (HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) + 12 | 0, 2);
      i21 = __ZNSt3__211char_traitsIcE6lengthEPKc(50237) | 0;
      i19 = HEAP8[i16 >> 0] | 0;
      if ((i21 | 0) == ((i19 << 24 >> 24 < 0 ? HEAP32[i15 >> 2] | 0 : i19 & 255) | 0)) i40 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i5, 50237, i21) | 0) == 0; else i40 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i21 = HEAP32[i3 >> 2] | 0;
      i19 = i21 + (i18 * 24 | 0) | 0;
      if (!i40) {
       i17 = i21 + (i18 * 24 | 0) + 12 | 0;
       if ((HEAP8[i17 + 11 >> 0] | 0) < 0) i41 = HEAP32[i17 >> 2] | 0; else i41 = i17;
       if ((HEAP8[i41 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i19, 50245) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) + 12 | 0, 0, 50243) | 0;
       }
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i19, 50240) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) + 12 | 0, 0, 50243) | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) | 0, 50247) | 0;
      i19 = HEAP32[i25 >> 2] | 0;
      i17 = (HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) | 0;
      i21 = i19 + -12 | 0;
      i20 = HEAP32[i21 >> 2] | 0;
      if ((i20 | 0) == (HEAP32[i19 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i19 + -16 | 0, i17); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i20, i17);
       HEAP32[i21 >> 2] = (HEAP32[i21 >> 2] | 0) + 24;
      }
      i18 = i18 + 1 | 0;
     }
     break;
    }
   case 80:
    {
     i18 = i3 + 4 | 0;
     i25 = ((HEAP32[i18 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
     i15 = i1 + 1 | 0;
     i16 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i15, i2, i3) | 0;
     i24 = ((HEAP32[i18 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
     if ((i16 | 0) == (i15 | 0)) {
      i39 = i1;
      break L1;
     }
     i18 = HEAP32[i3 + 12 >> 2] | 0;
     HEAP32[i5 >> 2] = i18;
     i22 = i3 + 20 | 0;
     i21 = HEAP32[i22 >> 2] | 0;
     if (i21 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i21 >> 2] = 0;
      HEAP32[i21 + 4 >> 2] = 0;
      HEAP32[i21 + 8 >> 2] = 0;
      HEAP32[i21 + 12 >> 2] = i18;
      HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i3 + 16 | 0, i5);
     i18 = i5 + 11 | 0;
     i21 = i5 + 4 | 0;
     i17 = i5 + 11 | 0;
     i20 = i5 + 4 | 0;
     i19 = i25;
     while (1) {
      if (i19 >>> 0 >= i24 >>> 0) {
       i39 = i16;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i5, (HEAP32[i3 >> 2] | 0) + (i19 * 24 | 0) + 12 | 0, 2);
      i25 = __ZNSt3__211char_traitsIcE6lengthEPKc(50237) | 0;
      i29 = HEAP8[i18 >> 0] | 0;
      if ((i25 | 0) == ((i29 << 24 >> 24 < 0 ? HEAP32[i21 >> 2] | 0 : i29 & 255) | 0)) i42 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i5, 50237, i25) | 0) == 0; else i42 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i25 = HEAP32[i3 >> 2] | 0;
      i29 = i25 + (i19 * 24 | 0) | 0;
      if (!i42) {
       i33 = i25 + (i19 * 24 | 0) + 12 | 0;
       if ((HEAP8[i33 + 11 >> 0] | 0) < 0) i43 = HEAP32[i33 >> 2] | 0; else i43 = i33;
       if ((HEAP8[i43 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i29, 50245) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i3 >> 2] | 0) + (i19 * 24 | 0) + 12 | 0, 0, 50243) | 0;
       }
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i29, 50240) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i3 >> 2] | 0) + (i19 * 24 | 0) + 12 | 0, 0, 50243) | 0;
      }
      if ((HEAP8[i15 >> 0] | 0) == 85) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i5, (HEAP32[i3 >> 2] | 0) + (i19 * 24 | 0) | 0, 12);
       i29 = __ZNSt3__211char_traitsIcE6lengthEPKc(50250) | 0;
       i33 = HEAP8[i17 >> 0] | 0;
       if ((i29 | 0) == ((i33 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i33 & 255) | 0)) i44 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i5, 50250, i29) | 0) != 0; else i44 = 1;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
       i29 = (HEAP32[i3 >> 2] | 0) + (i19 * 24 | 0) | 0;
       if (i44) {
        i45 = i29;
        i46 = 113;
       } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKc(i29);
      } else {
       i45 = (HEAP32[i3 >> 2] | 0) + (i19 * 24 | 0) | 0;
       i46 = 113;
      }
      if ((i46 | 0) == 113) {
       i46 = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i45, 50263) | 0;
      }
      i29 = HEAP32[i22 >> 2] | 0;
      i33 = (HEAP32[i3 >> 2] | 0) + (i19 * 24 | 0) | 0;
      i25 = i29 + -12 | 0;
      i27 = HEAP32[i25 >> 2] | 0;
      if ((i27 | 0) == (HEAP32[i29 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i29 + -16 | 0, i33); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i27, i33);
       HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 24;
      }
      i19 = i19 + 1 | 0;
     }
     break;
    }
   case 82:
    {
     i19 = i3 + 4 | 0;
     i22 = ((HEAP32[i19 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
     i20 = i1 + 1 | 0;
     i17 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i20, i2, i3) | 0;
     i15 = ((HEAP32[i19 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
     if ((i17 | 0) == (i20 | 0)) {
      i39 = i1;
      break L1;
     }
     i20 = HEAP32[i3 + 12 >> 2] | 0;
     HEAP32[i5 >> 2] = i20;
     i19 = i3 + 20 | 0;
     i21 = HEAP32[i19 >> 2] | 0;
     if (i21 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i21 >> 2] = 0;
      HEAP32[i21 + 4 >> 2] = 0;
      HEAP32[i21 + 8 >> 2] = 0;
      HEAP32[i21 + 12 >> 2] = i20;
      HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i3 + 16 | 0, i5);
     i20 = i5 + 11 | 0;
     i21 = i5 + 4 | 0;
     i18 = i22;
     while (1) {
      if (i18 >>> 0 >= i15 >>> 0) {
       i39 = i17;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i5, (HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) + 12 | 0, 2);
      i22 = __ZNSt3__211char_traitsIcE6lengthEPKc(50237) | 0;
      i16 = HEAP8[i20 >> 0] | 0;
      if ((i22 | 0) == ((i16 << 24 >> 24 < 0 ? HEAP32[i21 >> 2] | 0 : i16 & 255) | 0)) i47 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i5, 50237, i22) | 0) == 0; else i47 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i22 = HEAP32[i3 >> 2] | 0;
      i16 = i22 + (i18 * 24 | 0) | 0;
      if (!i47) {
       i24 = i22 + (i18 * 24 | 0) + 12 | 0;
       if ((HEAP8[i24 + 11 >> 0] | 0) < 0) i48 = HEAP32[i24 >> 2] | 0; else i48 = i24;
       if ((HEAP8[i48 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i16, 50245) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) + 12 | 0, 0, 50243) | 0;
       }
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i16, 50240) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) + 12 | 0, 0, 50243) | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) | 0, 50265) | 0;
      i16 = HEAP32[i19 >> 2] | 0;
      i24 = (HEAP32[i3 >> 2] | 0) + (i18 * 24 | 0) | 0;
      i22 = i16 + -12 | 0;
      i25 = HEAP32[i22 >> 2] | 0;
      if ((i25 | 0) == (HEAP32[i16 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i16 + -16 | 0, i24); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i25, i24);
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + 24;
      }
      i18 = i18 + 1 | 0;
     }
     break;
    }
   case 84:
    {
     i18 = i3 + 4 | 0;
     i19 = ((HEAP32[i18 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
     i21 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
     i20 = ((HEAP32[i18 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
     if ((i21 | 0) == (i1 | 0)) {
      i39 = i1;
      break L1;
     }
     i17 = i3 + 16 | 0;
     i15 = i3 + 12 | 0;
     i22 = HEAP32[i15 >> 2] | 0;
     HEAP32[i5 >> 2] = i22;
     i24 = i3 + 20 | 0;
     i25 = HEAP32[i24 >> 2] | 0;
     i16 = i3 + 24 | 0;
     if (i25 >>> 0 < (HEAP32[i16 >> 2] | 0) >>> 0) {
      HEAP32[i25 >> 2] = 0;
      HEAP32[i25 + 4 >> 2] = 0;
      HEAP32[i25 + 8 >> 2] = 0;
      HEAP32[i25 + 12 >> 2] = i22;
      HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i17, i5);
     i22 = i19;
     while (1) {
      if (i22 >>> 0 >= i20 >>> 0) break;
      i25 = HEAP32[i24 >> 2] | 0;
      i33 = (HEAP32[i3 >> 2] | 0) + (i22 * 24 | 0) | 0;
      i27 = i25 + -12 | 0;
      i29 = HEAP32[i27 >> 2] | 0;
      if ((i29 | 0) == (HEAP32[i25 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i25 + -16 | 0, i33); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i29, i33);
       HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 24;
      }
      i22 = i22 + 1 | 0;
     }
     if (!((i20 | 0) == (i19 + 1 | 0) & (HEAP8[i3 + 63 >> 0] | 0) != 0)) {
      i39 = i21;
      break L1;
     }
     i22 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i21, i2, i3) | 0;
     if ((i22 | 0) == (i21 | 0)) {
      i39 = i21;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, (HEAP32[i18 >> 2] | 0) + -24 | 0);
     i27 = HEAP32[i18 >> 2] | 0;
     i33 = 0;
     while (1) {
      if ((i33 | 0) == -1) break;
      i29 = i33 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i27 + (i29 * 24 | 0) | 0);
      i33 = i29;
     }
     HEAP32[i18 >> 2] = i27 + -24;
     i33 = HEAP8[i5 + 11 >> 0] | 0;
     i21 = i33 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i27 + -48 | 0, i21 ? HEAP32[i5 >> 2] | 0 : i5, i21 ? HEAP32[i5 + 4 >> 2] | 0 : i33 & 255) | 0;
     i33 = (HEAP32[i18 >> 2] | 0) + -24 | 0;
     HEAP32[i7 >> 2] = HEAP32[i15 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i6, i33, i7);
     i33 = HEAP32[i24 >> 2] | 0;
     if (i33 >>> 0 < (HEAP32[i16 >> 2] | 0) >>> 0) {
      HEAP32[i33 >> 2] = 0;
      i21 = i33 + 4 | 0;
      HEAP32[i21 >> 2] = 0;
      i19 = i33 + 8 | 0;
      HEAP32[i19 >> 2] = 0;
      HEAP32[i33 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
      HEAP32[i33 >> 2] = HEAP32[i6 >> 2];
      i33 = i6 + 4 | 0;
      HEAP32[i21 >> 2] = HEAP32[i33 >> 2];
      i21 = i6 + 8 | 0;
      HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
      HEAP32[i21 >> 2] = 0;
      HEAP32[i33 >> 2] = 0;
      HEAP32[i6 >> 2] = 0;
      HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i17, i6);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i39 = i22;
     break L1;
     break;
    }
   case 85:
    {
     i33 = i1 + 1 | 0;
     if ((i33 | 0) == (i2 | 0)) {
      i39 = i1;
      break L1;
     }
     i21 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i33, i2, i3) | 0;
     if ((i21 | 0) == (i33 | 0)) {
      i39 = i1;
      break L1;
     }
     i33 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i21, i2, i3) | 0;
     if ((i33 | 0) == (i21 | 0)) {
      i39 = i1;
      break L1;
     }
     i21 = i3 + 4 | 0;
     i19 = HEAP32[i21 >> 2] | 0;
     if (((i19 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i39 = i1;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i19 + -24 | 0);
     i19 = HEAP32[i21 >> 2] | 0;
     i20 = 0;
     while (1) {
      if ((i20 | 0) == -1) break;
      i29 = i20 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i19 + (i29 * 24 | 0) | 0);
      i20 = i29;
     }
     HEAP32[i21 >> 2] = i19 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i6, i19 + -48 | 0, 9);
     i20 = __ZNSt3__211char_traitsIcE6lengthEPKc(50267) | 0;
     i22 = HEAP8[i6 + 11 >> 0] | 0;
     if ((i20 | 0) == ((i22 << 24 >> 24 < 0 ? HEAP32[i6 + 4 >> 2] | 0 : i22 & 255) | 0)) {
      i22 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i6, 50267, i20) | 0) == 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
      if (i22) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i21 >> 2] | 0) + -24 | 0);
       i22 = HEAP32[i21 >> 2] | 0;
       i20 = 0;
       while (1) {
        if ((i20 | 0) == -1) break;
        i17 = i20 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i22 + (i17 * 24 | 0) | 0);
        i20 = i17;
       }
       HEAP32[i21 >> 2] = i22 + -24;
       i20 = i6 + 11 | 0;
       i19 = HEAP8[i20 >> 0] | 0;
       i17 = i19 << 24 >> 24 < 0;
       i24 = i6 + 4 | 0;
       i16 = i17 ? HEAP32[i6 >> 2] | 0 : i6;
       i15 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i16 + 9 | 0, i16 + (i17 ? HEAP32[i24 >> 2] | 0 : i19 & 255) | 0, i3) | 0;
       if ((i15 | 0) == (((HEAP8[i20 >> 0] | 0) < 0 ? HEAP32[i6 >> 2] | 0 : i6) + 9 | 0)) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i9, i5, 50277);
        i15 = HEAP8[i20 >> 0] | 0;
        i20 = i15 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i20 ? HEAP32[i6 >> 2] | 0 : i6, i20 ? HEAP32[i24 >> 2] | 0 : i15 & 255) | 0;
        HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
        HEAP32[i13 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
        HEAP32[i13 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
        i15 = 0;
        while (1) {
         if ((i15 | 0) == 3) break;
         HEAP32[i9 + (i15 << 2) >> 2] = 0;
         i15 = i15 + 1 | 0;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i13);
        i15 = HEAP32[i21 >> 2] | 0;
        if (i15 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i15, i7);
         HEAP32[i21 >> 2] = (HEAP32[i21 >> 2] | 0) + 24;
        } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i7);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
       } else {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i11, i5, 50279);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, (HEAP32[i21 >> 2] | 0) + -24 | 0);
        i15 = HEAP8[i12 + 11 >> 0] | 0;
        i22 = i15 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11, i22 ? HEAP32[i12 >> 2] | 0 : i12, i22 ? HEAP32[i12 + 4 >> 2] | 0 : i15 & 255) | 0;
        HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
        HEAP32[i9 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
        HEAP32[i9 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
        i15 = 0;
        while (1) {
         if ((i15 | 0) == 3) break;
         HEAP32[i11 + (i15 << 2) >> 2] = 0;
         i15 = i15 + 1 | 0;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50281) | 0;
        HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
        HEAP32[i10 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
        HEAP32[i10 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
        i15 = 0;
        while (1) {
         if ((i15 | 0) == 3) break;
         HEAP32[i9 + (i15 << 2) >> 2] = 0;
         i15 = i15 + 1 | 0;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i10);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i21 >> 2] | 0) + -24 | 0, i7);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
      } else i46 = 167;
     } else {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
      i46 = 167;
     }
     if ((i46 | 0) == 167) {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i7, i5, 50277);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, (HEAP32[i21 >> 2] | 0) + -24 | 0);
      i15 = HEAP8[i9 + 11 >> 0] | 0;
      i22 = i15 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i7, i22 ? HEAP32[i9 >> 2] | 0 : i9, i22 ? HEAP32[i9 + 4 >> 2] | 0 : i15 & 255) | 0;
      HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i8 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
      HEAP32[i8 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
      i15 = 0;
      while (1) {
       if ((i15 | 0) == 3) break;
       HEAP32[i7 + (i15 << 2) >> 2] = 0;
       i15 = i15 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i8);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i21 >> 2] | 0) + -24 | 0, i6);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
     }
     i15 = (HEAP32[i21 >> 2] | 0) + -24 | 0;
     HEAP32[i7 >> 2] = HEAP32[i3 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i6, i15, i7);
     i15 = i3 + 20 | 0;
     i22 = HEAP32[i15 >> 2] | 0;
     if (i22 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i22 >> 2] = 0;
      i24 = i22 + 4 | 0;
      HEAP32[i24 >> 2] = 0;
      i20 = i22 + 8 | 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i22 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
      HEAP32[i22 >> 2] = HEAP32[i6 >> 2];
      i22 = i6 + 4 | 0;
      HEAP32[i24 >> 2] = HEAP32[i22 >> 2];
      i24 = i6 + 8 | 0;
      HEAP32[i20 >> 2] = HEAP32[i24 >> 2];
      HEAP32[i24 >> 2] = 0;
      HEAP32[i22 >> 2] = 0;
      HEAP32[i6 >> 2] = 0;
      HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i6);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i39 = i33;
     break L1;
     break;
    }
   case 83:
    {
     i15 = i1 + 1 | 0;
     if ((i15 | 0) != (i2 | 0) ? (HEAP8[i15 >> 0] | 0) == 116 : 0) {
      i15 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
      if ((i15 | 0) == (i1 | 0)) {
       i39 = i1;
       break L1;
      }
      i22 = HEAP32[i3 + 4 >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) == (i22 | 0)) {
       i39 = i1;
       break L1;
      }
      HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i22 + -24 | 0, i6);
      i22 = i3 + 20 | 0;
      i24 = HEAP32[i22 >> 2] | 0;
      if (i24 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
       HEAP32[i24 >> 2] = 0;
       i20 = i24 + 4 | 0;
       HEAP32[i20 >> 2] = 0;
       i19 = i24 + 8 | 0;
       HEAP32[i19 >> 2] = 0;
       HEAP32[i24 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
       HEAP32[i24 >> 2] = HEAP32[i5 >> 2];
       i24 = i5 + 4 | 0;
       HEAP32[i20 >> 2] = HEAP32[i24 >> 2];
       i20 = i5 + 8 | 0;
       HEAP32[i19 >> 2] = HEAP32[i20 >> 2];
       HEAP32[i20 >> 2] = 0;
       HEAP32[i24 >> 2] = 0;
       HEAP32[i5 >> 2] = 0;
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
      i39 = i15;
      break L1;
     }
     i15 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
     if ((i15 | 0) == (i1 | 0)) {
      i39 = i1;
      break L1;
     }
     i22 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i15, i2, i3) | 0;
     if ((i22 | 0) == (i15 | 0)) {
      i39 = i15;
      break L1;
     }
     i24 = i3 + 4 | 0;
     i20 = HEAP32[i24 >> 2] | 0;
     if (((i20 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i39 = i15;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i20 + -24 | 0);
     i20 = HEAP32[i24 >> 2] | 0;
     i15 = 0;
     while (1) {
      if ((i15 | 0) == -1) break;
      i19 = i15 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20 + (i19 * 24 | 0) | 0);
      i15 = i19;
     }
     HEAP32[i24 >> 2] = i20 + -24;
     i15 = HEAP8[i5 + 11 >> 0] | 0;
     i33 = i15 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i20 + -48 | 0, i33 ? HEAP32[i5 >> 2] | 0 : i5, i33 ? HEAP32[i5 + 4 >> 2] | 0 : i15 & 255) | 0;
     i15 = (HEAP32[i24 >> 2] | 0) + -24 | 0;
     HEAP32[i7 >> 2] = HEAP32[i3 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i6, i15, i7);
     i15 = i3 + 20 | 0;
     i33 = HEAP32[i15 >> 2] | 0;
     if (i33 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i33 >> 2] = 0;
      i21 = i33 + 4 | 0;
      HEAP32[i21 >> 2] = 0;
      i19 = i33 + 8 | 0;
      HEAP32[i19 >> 2] = 0;
      HEAP32[i33 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
      HEAP32[i33 >> 2] = HEAP32[i6 >> 2];
      i33 = i6 + 4 | 0;
      HEAP32[i21 >> 2] = HEAP32[i33 >> 2];
      i21 = i6 + 8 | 0;
      HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
      HEAP32[i21 >> 2] = 0;
      HEAP32[i33 >> 2] = 0;
      HEAP32[i6 >> 2] = 0;
      HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i6);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i39 = i22;
     break L1;
     break;
    }
   case 68:
    {
     i15 = i1 + 1 | 0;
     if ((i15 | 0) != (i2 | 0)) switch (HEAP8[i15 >> 0] | 0) {
     case 112:
      {
       i15 = i3 + 4 | 0;
       i33 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
       i21 = i1 + 2 | 0;
       i19 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i21, i2, i3) | 0;
       i17 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
       if ((i19 | 0) == (i21 | 0)) break L59;
       i21 = HEAP32[i3 + 12 >> 2] | 0;
       HEAP32[i5 >> 2] = i21;
       i15 = i3 + 20 | 0;
       i16 = HEAP32[i15 >> 2] | 0;
       if (i16 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
        HEAP32[i16 >> 2] = 0;
        HEAP32[i16 + 4 >> 2] = 0;
        HEAP32[i16 + 8 >> 2] = 0;
        HEAP32[i16 + 12 >> 2] = i21;
        HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i3 + 16 | 0, i5);
       i21 = i33;
       while (1) {
        if (i21 >>> 0 >= i17 >>> 0) {
         i39 = i19;
         break L1;
        }
        i33 = HEAP32[i15 >> 2] | 0;
        i16 = (HEAP32[i3 >> 2] | 0) + (i21 * 24 | 0) | 0;
        i18 = i33 + -12 | 0;
        i27 = HEAP32[i18 >> 2] | 0;
        if ((i27 | 0) == (HEAP32[i33 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i33 + -16 | 0, i16); else {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i27, i16);
         HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + 24;
        }
        i21 = i21 + 1 | 0;
       }
       break;
      }
     case 84:
     case 116:
      {
       i21 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
       if ((i21 | 0) == (i1 | 0)) break L59;
       i15 = HEAP32[i3 + 4 >> 2] | 0;
       if ((HEAP32[i3 >> 2] | 0) == (i15 | 0)) {
        i39 = i1;
        break L1;
       }
       HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i15 + -24 | 0, i6);
       i15 = i3 + 20 | 0;
       i19 = HEAP32[i15 >> 2] | 0;
       if (i19 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
        HEAP32[i19 >> 2] = 0;
        i17 = i19 + 4 | 0;
        HEAP32[i17 >> 2] = 0;
        i22 = i19 + 8 | 0;
        HEAP32[i22 >> 2] = 0;
        HEAP32[i19 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
        HEAP32[i19 >> 2] = HEAP32[i5 >> 2];
        i19 = i5 + 4 | 0;
        HEAP32[i17 >> 2] = HEAP32[i19 >> 2];
        i17 = i5 + 8 | 0;
        HEAP32[i22 >> 2] = HEAP32[i17 >> 2];
        HEAP32[i17 >> 2] = 0;
        HEAP32[i19 >> 2] = 0;
        HEAP32[i5 >> 2] = 0;
        HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
       i39 = i21;
       break L1;
       break;
      }
     case 118:
      {
       i21 = __ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
       if ((i21 | 0) == (i1 | 0)) break L59;
       i15 = HEAP32[i3 + 4 >> 2] | 0;
       if ((HEAP32[i3 >> 2] | 0) == (i15 | 0)) {
        i39 = i1;
        break L1;
       }
       HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i15 + -24 | 0, i6);
       i15 = i3 + 20 | 0;
       i19 = HEAP32[i15 >> 2] | 0;
       if (i19 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
        HEAP32[i19 >> 2] = 0;
        i17 = i19 + 4 | 0;
        HEAP32[i17 >> 2] = 0;
        i22 = i19 + 8 | 0;
        HEAP32[i22 >> 2] = 0;
        HEAP32[i19 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
        HEAP32[i19 >> 2] = HEAP32[i5 >> 2];
        i19 = i5 + 4 | 0;
        HEAP32[i17 >> 2] = HEAP32[i19 >> 2];
        i17 = i5 + 8 | 0;
        HEAP32[i22 >> 2] = HEAP32[i17 >> 2];
        HEAP32[i17 >> 2] = 0;
        HEAP32[i19 >> 2] = 0;
        HEAP32[i5 >> 2] = 0;
        HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
       i39 = i21;
       break L1;
       break;
      }
     default:
      break L59;
     }
     break;
    }
   default:
    {}
   } while (0);
   i21 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   if ((i21 | 0) == (i1 | 0)) {
    i15 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
    if ((i15 | 0) != (i1 | 0) ? (i19 = HEAP32[i3 + 4 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i19 | 0)) : 0) {
     HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i19 + -24 | 0, i6);
     i19 = i3 + 20 | 0;
     i17 = HEAP32[i19 >> 2] | 0;
     if (i17 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i17 >> 2] = 0;
      i22 = i17 + 4 | 0;
      HEAP32[i22 >> 2] = 0;
      i24 = i17 + 8 | 0;
      HEAP32[i24 >> 2] = 0;
      HEAP32[i17 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
      HEAP32[i17 >> 2] = HEAP32[i5 >> 2];
      i17 = i5 + 4 | 0;
      HEAP32[i22 >> 2] = HEAP32[i17 >> 2];
      i22 = i5 + 8 | 0;
      HEAP32[i24 >> 2] = HEAP32[i22 >> 2];
      HEAP32[i22 >> 2] = 0;
      HEAP32[i17 >> 2] = 0;
      HEAP32[i5 >> 2] = 0;
      HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
     i39 = i15;
    } else i39 = i1;
   } else i39 = i21;
  } else i39 = i14;
 } else i39 = i1; while (0);
 STACKTOP = i4;
 return i39 | 0;
}

function __ZN6vision20SamplePyramidFREAK84EPfPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff(i1, i2, i3, i4, i5, i6, i7, i8, i9, d10, d11, d12, d13, d14, d15, d16, d17) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 d10 = +d10;
 d11 = +d11;
 d12 = +d12;
 d13 = +d13;
 d14 = +d14;
 d15 = +d15;
 d16 = +d16;
 d17 = +d17;
 var i18 = 0, i19 = 0, i20 = 0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, d31 = 0.0, d32 = 0.0, d33 = 0.0, d34 = 0.0, d35 = 0.0, d36 = 0.0, d37 = 0.0, d38 = 0.0, d39 = 0.0, d40 = 0.0, d41 = 0.0, d42 = 0.0, d43 = 0.0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, d54 = 0.0, d55 = 0.0, d56 = 0.0, d57 = 0.0, d58 = 0.0, d59 = 0.0, d60 = 0.0, d61 = 0.0, d62 = 0.0, d63 = 0.0, d64 = 0.0, d65 = 0.0, d66 = 0.0, d67 = 0.0, d68 = 0.0, d69 = 0.0, d70 = 0.0, d71 = 0.0, d72 = 0.0, d73 = 0.0, d74 = 0.0, d75 = 0.0, d76 = 0.0, d77 = 0.0, d78 = 0.0, d79 = 0.0, d80 = 0.0, d81 = 0.0, d82 = 0.0, d83 = 0.0, d84 = 0.0, d85 = 0.0, d86 = 0.0, d87 = 0.0, d88 = 0.0, d89 = 0.0, d90 = 0.0, d91 = 0.0, d92 = 0.0, d93 = 0.0, d94 = 0.0, d95 = 0.0, d96 = 0.0, d97 = 0.0, d98 = 0.0, d99 = 0.0, d100 = 0.0, d101 = 0.0, d102 = 0.0, d103 = 0.0, d104 = 0.0, d105 = 0.0, d106 = 0.0, d107 = 0.0, d108 = 0.0, d109 = 0.0, d110 = 0.0, d111 = 0.0, d112 = 0.0, d113 = 0.0, d114 = 0.0, d115 = 0.0, d116 = 0.0, d117 = 0.0, d118 = 0.0, d119 = 0.0, d120 = 0.0, d121 = 0.0, d122 = 0.0, d123 = 0.0, d124 = 0.0, d125 = 0.0, d126 = 0.0, d127 = 0.0, d128 = 0.0, d129 = 0.0, d130 = 0.0, d131 = 0.0, d132 = 0.0, d133 = 0.0, d134 = 0.0, d135 = 0.0, d136 = 0.0, d137 = 0.0, d138 = 0.0, d139 = 0.0, d140 = 0.0, d141 = 0.0, d142 = 0.0, d143 = 0.0, d144 = 0.0, d145 = 0.0, d146 = 0.0, d147 = 0.0, d148 = 0.0, d149 = 0.0, d150 = 0.0, d151 = 0.0, d152 = 0.0, d153 = 0.0, d154 = 0.0, d155 = 0.0, d156 = 0.0, d157 = 0.0, d158 = 0.0, d159 = 0.0, d160 = 0.0, d161 = 0.0, d162 = 0.0, d163 = 0.0, d164 = 0.0, d165 = 0.0, d166 = 0.0, d167 = 0.0, d168 = 0.0, d169 = 0.0, d170 = 0.0, d171 = 0.0, d172 = 0.0, d173 = 0.0, i174 = 0, i175 = 0, i176 = 0, i177 = 0, d178 = 0.0, i179 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i19 = i18 + 4 | 0;
 i20 = i18;
 d21 = +HEAPF32[i3 + 12 >> 2] * d17;
 d17 = d21 < 1.0 ? 1.0 : d21;
 d21 = +HEAPF32[i3 >> 2];
 d22 = +HEAPF32[i3 + 4 >> 2];
 d23 = +HEAPF32[i3 + 8 >> 2];
 d24 = d17 * +Math_cos(+d23);
 d25 = d17 * +Math_sin(+d23);
 d23 = -d25;
 d26 = +HEAPF32[i4 >> 2];
 d27 = +HEAPF32[i4 + 4 >> 2];
 d28 = d21 + (d26 * d24 + d27 * d23);
 d29 = d22 + (d26 * d25 + d24 * d27);
 d27 = +HEAPF32[i4 + 8 >> 2];
 d26 = +HEAPF32[i4 + 12 >> 2];
 d30 = d21 + (d24 * d27 + d26 * d23);
 d31 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i4 + 16 >> 2];
 d27 = +HEAPF32[i4 + 20 >> 2];
 d32 = d21 + (d24 * d26 + d27 * d23);
 d33 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i4 + 24 >> 2];
 d26 = +HEAPF32[i4 + 28 >> 2];
 d34 = d21 + (d24 * d27 + d26 * d23);
 d35 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i4 + 32 >> 2];
 d27 = +HEAPF32[i4 + 36 >> 2];
 d36 = d21 + (d24 * d26 + d27 * d23);
 d37 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i4 + 40 >> 2];
 d26 = +HEAPF32[i4 + 44 >> 2];
 d38 = d21 + (d24 * d27 + d26 * d23);
 d39 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i5 >> 2];
 d27 = +HEAPF32[i5 + 4 >> 2];
 d40 = d21 + (d24 * d26 + d27 * d23);
 d41 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i5 + 8 >> 2];
 d26 = +HEAPF32[i5 + 12 >> 2];
 d42 = d21 + (d24 * d27 + d26 * d23);
 d43 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i5 + 16 >> 2];
 d27 = +HEAPF32[i5 + 20 >> 2];
 d44 = d21 + (d24 * d26 + d27 * d23);
 d45 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i5 + 24 >> 2];
 d26 = +HEAPF32[i5 + 28 >> 2];
 d46 = d21 + (d24 * d27 + d26 * d23);
 d47 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i5 + 32 >> 2];
 d27 = +HEAPF32[i5 + 36 >> 2];
 d48 = d21 + (d24 * d26 + d27 * d23);
 d49 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i5 + 40 >> 2];
 d26 = +HEAPF32[i5 + 44 >> 2];
 d50 = d21 + (d24 * d27 + d26 * d23);
 d51 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i6 >> 2];
 d27 = +HEAPF32[i6 + 4 >> 2];
 d52 = d21 + (d24 * d26 + d27 * d23);
 d53 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i6 + 8 >> 2];
 d26 = +HEAPF32[i6 + 12 >> 2];
 d54 = d21 + (d24 * d27 + d26 * d23);
 d55 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i6 + 16 >> 2];
 d27 = +HEAPF32[i6 + 20 >> 2];
 d56 = d21 + (d24 * d26 + d27 * d23);
 d57 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i6 + 24 >> 2];
 d26 = +HEAPF32[i6 + 28 >> 2];
 d58 = d21 + (d24 * d27 + d26 * d23);
 d59 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i6 + 32 >> 2];
 d27 = +HEAPF32[i6 + 36 >> 2];
 d60 = d21 + (d24 * d26 + d27 * d23);
 d61 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i6 + 40 >> 2];
 d26 = +HEAPF32[i6 + 44 >> 2];
 d62 = d21 + (d24 * d27 + d26 * d23);
 d63 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i7 >> 2];
 d27 = +HEAPF32[i7 + 4 >> 2];
 d64 = d21 + (d24 * d26 + d27 * d23);
 d65 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i7 + 8 >> 2];
 d26 = +HEAPF32[i7 + 12 >> 2];
 d66 = d21 + (d24 * d27 + d26 * d23);
 d67 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i7 + 16 >> 2];
 d27 = +HEAPF32[i7 + 20 >> 2];
 d68 = d21 + (d24 * d26 + d27 * d23);
 d69 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i7 + 24 >> 2];
 d26 = +HEAPF32[i7 + 28 >> 2];
 d70 = d21 + (d24 * d27 + d26 * d23);
 d71 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i7 + 32 >> 2];
 d27 = +HEAPF32[i7 + 36 >> 2];
 d72 = d21 + (d24 * d26 + d27 * d23);
 d73 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i7 + 40 >> 2];
 d26 = +HEAPF32[i7 + 44 >> 2];
 d74 = d21 + (d24 * d27 + d26 * d23);
 d75 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i8 >> 2];
 d27 = +HEAPF32[i8 + 4 >> 2];
 d76 = d21 + (d24 * d26 + d27 * d23);
 d77 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i8 + 8 >> 2];
 d26 = +HEAPF32[i8 + 12 >> 2];
 d78 = d21 + (d24 * d27 + d26 * d23);
 d79 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i8 + 16 >> 2];
 d27 = +HEAPF32[i8 + 20 >> 2];
 d80 = d21 + (d24 * d26 + d27 * d23);
 d81 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i8 + 24 >> 2];
 d26 = +HEAPF32[i8 + 28 >> 2];
 d82 = d21 + (d24 * d27 + d26 * d23);
 d83 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i8 + 32 >> 2];
 d27 = +HEAPF32[i8 + 36 >> 2];
 d84 = d21 + (d24 * d26 + d27 * d23);
 d85 = d22 + (d25 * d26 + d24 * d27);
 d27 = +HEAPF32[i8 + 40 >> 2];
 d26 = +HEAPF32[i8 + 44 >> 2];
 d86 = d21 + (d24 * d27 + d26 * d23);
 d87 = d22 + (d25 * d27 + d24 * d26);
 d26 = +HEAPF32[i9 >> 2];
 d27 = +HEAPF32[i9 + 4 >> 2];
 d88 = +HEAPF32[i9 + 8 >> 2];
 d89 = +HEAPF32[i9 + 12 >> 2];
 d90 = d21 + (d24 * d88 + d89 * d23);
 d91 = d22 + (d25 * d88 + d24 * d89);
 d89 = +HEAPF32[i9 + 16 >> 2];
 d88 = +HEAPF32[i9 + 20 >> 2];
 d92 = d21 + (d24 * d89 + d88 * d23);
 d93 = d22 + (d25 * d89 + d24 * d88);
 d88 = +HEAPF32[i9 + 24 >> 2];
 d89 = +HEAPF32[i9 + 28 >> 2];
 d94 = d21 + (d24 * d88 + d89 * d23);
 d95 = d22 + (d25 * d88 + d24 * d89);
 d89 = +HEAPF32[i9 + 32 >> 2];
 d88 = +HEAPF32[i9 + 36 >> 2];
 d96 = d21 + (d24 * d89 + d88 * d23);
 d97 = d22 + (d25 * d89 + d24 * d88);
 d88 = +HEAPF32[i9 + 40 >> 2];
 d89 = +HEAPF32[i9 + 44 >> 2];
 d98 = d21 + (d24 * d88 + d89 * d23);
 d99 = d22 + (d25 * d88 + d24 * d89);
 d89 = d17 * d10;
 d10 = d17 * d11;
 d11 = d17 * d12;
 d12 = d17 * d13;
 d13 = d17 * d14;
 d14 = d17 * d15;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i19, i20, d17 * d16);
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d16 = 1.0 / +(1 << i9 | 0);
 d17 = d16 * .5 + -.5;
 d15 = (d21 + (d24 * d26 + d27 * d23)) * d16 + d17;
 d23 = (d22 + (d25 * d26 + d24 * d27)) * d16 + d17;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d17 = +((i9 + -2 | 0) >>> 0);
 if (!(d15 < 0.0)) if (d15 > d17) d100 = d17; else d100 = d15; else d100 = 0.0;
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d15 = +((i7 + -2 | 0) >>> 0);
 if (!(d23 < 0.0)) if (d23 > d15) d101 = d15; else d101 = d23; else d101 = 0.0;
 d23 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d100, d101);
 HEAPF32[i1 >> 2] = d23;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d23 = 1.0 / +(1 << i8 | 0);
 d101 = d23 * .5 + -.5;
 d100 = d90 * d23 + d101;
 d90 = d91 * d23 + d101;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d101 = +((i8 + -2 | 0) >>> 0);
 if (!(d100 < 0.0)) if (d100 > d101) d102 = d101; else d102 = d100; else d102 = 0.0;
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d100 = +((i9 + -2 | 0) >>> 0);
 if (!(d90 < 0.0)) if (d90 > d100) d103 = d100; else d103 = d90; else d103 = 0.0;
 d90 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d102, d103);
 HEAPF32[i1 + 4 >> 2] = d90;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d90 = 1.0 / +(1 << i7 | 0);
 d103 = d90 * .5 + -.5;
 d102 = d92 * d90 + d103;
 d92 = d93 * d90 + d103;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d103 = +((i7 + -2 | 0) >>> 0);
 if (!(d102 < 0.0)) if (d102 > d103) d104 = d103; else d104 = d102; else d104 = 0.0;
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d102 = +((i8 + -2 | 0) >>> 0);
 if (!(d92 < 0.0)) if (d92 > d102) d105 = d102; else d105 = d92; else d105 = 0.0;
 d92 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d104, d105);
 HEAPF32[i1 + 8 >> 2] = d92;
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d92 = 1.0 / +(1 << i9 | 0);
 d105 = d92 * .5 + -.5;
 d104 = d94 * d92 + d105;
 d94 = d95 * d92 + d105;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d105 = +((i9 + -2 | 0) >>> 0);
 if (!(d104 < 0.0)) if (d104 > d105) d106 = d105; else d106 = d104; else d106 = 0.0;
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d104 = +((i7 + -2 | 0) >>> 0);
 if (!(d94 < 0.0)) if (d94 > d104) d107 = d104; else d107 = d94; else d107 = 0.0;
 d94 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d106, d107);
 HEAPF32[i1 + 12 >> 2] = d94;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d94 = 1.0 / +(1 << i8 | 0);
 d107 = d94 * .5 + -.5;
 d106 = d96 * d94 + d107;
 d96 = d97 * d94 + d107;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d107 = +((i8 + -2 | 0) >>> 0);
 if (!(d106 < 0.0)) if (d106 > d107) d108 = d107; else d108 = d106; else d108 = 0.0;
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d106 = +((i9 + -2 | 0) >>> 0);
 if (!(d96 < 0.0)) if (d96 > d106) d109 = d106; else d109 = d96; else d109 = 0.0;
 d96 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d108, d109);
 HEAPF32[i1 + 16 >> 2] = d96;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d96 = 1.0 / +(1 << i7 | 0);
 d109 = d96 * .5 + -.5;
 d108 = d98 * d96 + d109;
 d98 = d99 * d96 + d109;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d109 = +((i7 + -2 | 0) >>> 0);
 if (!(d108 < 0.0)) if (d108 > d109) d110 = d109; else d110 = d108; else d110 = 0.0;
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d108 = +((i8 + -2 | 0) >>> 0);
 if (!(d98 < 0.0)) if (d98 > d108) d111 = d108; else d111 = d98; else d111 = 0.0;
 d98 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d110, d111);
 HEAPF32[i1 + 20 >> 2] = d98;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i19, i20, d14);
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d14 = 1.0 / +(1 << i9 | 0);
 d98 = d14 * .5 + -.5;
 d111 = d76 * d14 + d98;
 d76 = d77 * d14 + d98;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d98 = +((i9 + -2 | 0) >>> 0);
 if (!(d111 < 0.0)) if (d111 > d98) d112 = d98; else d112 = d111; else d112 = 0.0;
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d111 = +((i7 + -2 | 0) >>> 0);
 if (!(d76 < 0.0)) if (d76 > d111) d113 = d111; else d113 = d76; else d113 = 0.0;
 d76 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d112, d113);
 HEAPF32[i1 + 24 >> 2] = d76;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d76 = 1.0 / +(1 << i8 | 0);
 d113 = d76 * .5 + -.5;
 d112 = d78 * d76 + d113;
 d78 = d79 * d76 + d113;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d113 = +((i8 + -2 | 0) >>> 0);
 if (!(d112 < 0.0)) if (d112 > d113) d114 = d113; else d114 = d112; else d114 = 0.0;
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d112 = +((i9 + -2 | 0) >>> 0);
 if (!(d78 < 0.0)) if (d78 > d112) d115 = d112; else d115 = d78; else d115 = 0.0;
 d78 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d114, d115);
 HEAPF32[i1 + 28 >> 2] = d78;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d78 = 1.0 / +(1 << i7 | 0);
 d115 = d78 * .5 + -.5;
 d114 = d80 * d78 + d115;
 d80 = d81 * d78 + d115;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d115 = +((i7 + -2 | 0) >>> 0);
 if (!(d114 < 0.0)) if (d114 > d115) d116 = d115; else d116 = d114; else d116 = 0.0;
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d114 = +((i8 + -2 | 0) >>> 0);
 if (!(d80 < 0.0)) if (d80 > d114) d117 = d114; else d117 = d80; else d117 = 0.0;
 d80 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d116, d117);
 HEAPF32[i1 + 32 >> 2] = d80;
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d80 = 1.0 / +(1 << i9 | 0);
 d117 = d80 * .5 + -.5;
 d116 = d82 * d80 + d117;
 d82 = d83 * d80 + d117;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d117 = +((i9 + -2 | 0) >>> 0);
 do if (d116 < 0.0) d118 = 0.0; else {
  if (!(d116 > d117)) {
   d118 = d116;
   break;
  }
  d118 = d117;
 } while (0);
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d117 = +((i7 + -2 | 0) >>> 0);
 do if (d82 < 0.0) d119 = 0.0; else {
  if (!(d82 > d117)) {
   d119 = d82;
   break;
  }
  d119 = d117;
 } while (0);
 d117 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d118, d119);
 HEAPF32[i1 + 36 >> 2] = d117;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d117 = 1.0 / +(1 << i8 | 0);
 d119 = d117 * .5 + -.5;
 d118 = d84 * d117 + d119;
 d84 = d85 * d117 + d119;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d119 = +((i8 + -2 | 0) >>> 0);
 do if (d118 < 0.0) d120 = 0.0; else {
  if (!(d118 > d119)) {
   d120 = d118;
   break;
  }
  d120 = d119;
 } while (0);
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d119 = +((i9 + -2 | 0) >>> 0);
 do if (d84 < 0.0) d121 = 0.0; else {
  if (!(d84 > d119)) {
   d121 = d84;
   break;
  }
  d121 = d119;
 } while (0);
 d119 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d120, d121);
 HEAPF32[i1 + 40 >> 2] = d119;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d119 = 1.0 / +(1 << i7 | 0);
 d121 = d119 * .5 + -.5;
 d120 = d86 * d119 + d121;
 d86 = d87 * d119 + d121;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d121 = +((i7 + -2 | 0) >>> 0);
 do if (d120 < 0.0) d122 = 0.0; else {
  if (!(d120 > d121)) {
   d122 = d120;
   break;
  }
  d122 = d121;
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d121 = +((i8 + -2 | 0) >>> 0);
 do if (d86 < 0.0) d123 = 0.0; else {
  if (!(d86 > d121)) {
   d123 = d86;
   break;
  }
  d123 = d121;
 } while (0);
 d121 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d122, d123);
 HEAPF32[i1 + 44 >> 2] = d121;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i19, i20, d13);
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d13 = 1.0 / +(1 << i9 | 0);
 d121 = d13 * .5 + -.5;
 d123 = d64 * d13 + d121;
 d64 = d65 * d13 + d121;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d121 = +((i9 + -2 | 0) >>> 0);
 do if (d123 < 0.0) d124 = 0.0; else {
  if (!(d123 > d121)) {
   d124 = d123;
   break;
  }
  d124 = d121;
 } while (0);
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d121 = +((i7 + -2 | 0) >>> 0);
 do if (d64 < 0.0) d125 = 0.0; else {
  if (!(d64 > d121)) {
   d125 = d64;
   break;
  }
  d125 = d121;
 } while (0);
 d121 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d124, d125);
 HEAPF32[i1 + 48 >> 2] = d121;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d121 = 1.0 / +(1 << i8 | 0);
 d125 = d121 * .5 + -.5;
 d124 = d66 * d121 + d125;
 d66 = d67 * d121 + d125;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d125 = +((i8 + -2 | 0) >>> 0);
 do if (d124 < 0.0) d126 = 0.0; else {
  if (!(d124 > d125)) {
   d126 = d124;
   break;
  }
  d126 = d125;
 } while (0);
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d125 = +((i9 + -2 | 0) >>> 0);
 do if (d66 < 0.0) d127 = 0.0; else {
  if (!(d66 > d125)) {
   d127 = d66;
   break;
  }
  d127 = d125;
 } while (0);
 d125 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d126, d127);
 HEAPF32[i1 + 52 >> 2] = d125;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d125 = 1.0 / +(1 << i7 | 0);
 d127 = d125 * .5 + -.5;
 d126 = d68 * d125 + d127;
 d68 = d69 * d125 + d127;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d127 = +((i7 + -2 | 0) >>> 0);
 do if (d126 < 0.0) d128 = 0.0; else {
  if (!(d126 > d127)) {
   d128 = d126;
   break;
  }
  d128 = d127;
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d127 = +((i8 + -2 | 0) >>> 0);
 do if (d68 < 0.0) d129 = 0.0; else {
  if (!(d68 > d127)) {
   d129 = d68;
   break;
  }
  d129 = d127;
 } while (0);
 d127 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d128, d129);
 HEAPF32[i1 + 56 >> 2] = d127;
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d127 = 1.0 / +(1 << i9 | 0);
 d129 = d127 * .5 + -.5;
 d128 = d70 * d127 + d129;
 d70 = d71 * d127 + d129;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d129 = +((i9 + -2 | 0) >>> 0);
 do if (d128 < 0.0) d130 = 0.0; else {
  if (!(d128 > d129)) {
   d130 = d128;
   break;
  }
  d130 = d129;
 } while (0);
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d129 = +((i7 + -2 | 0) >>> 0);
 do if (d70 < 0.0) d131 = 0.0; else {
  if (!(d70 > d129)) {
   d131 = d70;
   break;
  }
  d131 = d129;
 } while (0);
 d129 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d130, d131);
 HEAPF32[i1 + 60 >> 2] = d129;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d129 = 1.0 / +(1 << i8 | 0);
 d131 = d129 * .5 + -.5;
 d130 = d72 * d129 + d131;
 d72 = d73 * d129 + d131;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d131 = +((i8 + -2 | 0) >>> 0);
 do if (d130 < 0.0) d132 = 0.0; else {
  if (!(d130 > d131)) {
   d132 = d130;
   break;
  }
  d132 = d131;
 } while (0);
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d131 = +((i9 + -2 | 0) >>> 0);
 do if (d72 < 0.0) d133 = 0.0; else {
  if (!(d72 > d131)) {
   d133 = d72;
   break;
  }
  d133 = d131;
 } while (0);
 d131 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d132, d133);
 HEAPF32[i1 + 64 >> 2] = d131;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d131 = 1.0 / +(1 << i7 | 0);
 d133 = d131 * .5 + -.5;
 d132 = d74 * d131 + d133;
 d74 = d75 * d131 + d133;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d133 = +((i7 + -2 | 0) >>> 0);
 do if (d132 < 0.0) d134 = 0.0; else {
  if (!(d132 > d133)) {
   d134 = d132;
   break;
  }
  d134 = d133;
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d133 = +((i8 + -2 | 0) >>> 0);
 do if (d74 < 0.0) d135 = 0.0; else {
  if (!(d74 > d133)) {
   d135 = d74;
   break;
  }
  d135 = d133;
 } while (0);
 d133 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d134, d135);
 HEAPF32[i1 + 68 >> 2] = d133;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i19, i20, d12);
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d12 = 1.0 / +(1 << i9 | 0);
 d133 = d12 * .5 + -.5;
 d135 = d52 * d12 + d133;
 d52 = d53 * d12 + d133;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d133 = +((i9 + -2 | 0) >>> 0);
 do if (d135 < 0.0) d136 = 0.0; else {
  if (!(d135 > d133)) {
   d136 = d135;
   break;
  }
  d136 = d133;
 } while (0);
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d133 = +((i7 + -2 | 0) >>> 0);
 do if (d52 < 0.0) d137 = 0.0; else {
  if (!(d52 > d133)) {
   d137 = d52;
   break;
  }
  d137 = d133;
 } while (0);
 d133 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d136, d137);
 HEAPF32[i1 + 72 >> 2] = d133;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d133 = 1.0 / +(1 << i8 | 0);
 d137 = d133 * .5 + -.5;
 d136 = d54 * d133 + d137;
 d54 = d55 * d133 + d137;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d137 = +((i8 + -2 | 0) >>> 0);
 do if (d136 < 0.0) d138 = 0.0; else {
  if (!(d136 > d137)) {
   d138 = d136;
   break;
  }
  d138 = d137;
 } while (0);
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d137 = +((i9 + -2 | 0) >>> 0);
 do if (d54 < 0.0) d139 = 0.0; else {
  if (!(d54 > d137)) {
   d139 = d54;
   break;
  }
  d139 = d137;
 } while (0);
 d137 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d138, d139);
 HEAPF32[i1 + 76 >> 2] = d137;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d137 = 1.0 / +(1 << i7 | 0);
 d139 = d137 * .5 + -.5;
 d138 = d56 * d137 + d139;
 d56 = d57 * d137 + d139;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d139 = +((i7 + -2 | 0) >>> 0);
 do if (d138 < 0.0) d140 = 0.0; else {
  if (!(d138 > d139)) {
   d140 = d138;
   break;
  }
  d140 = d139;
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d139 = +((i8 + -2 | 0) >>> 0);
 do if (d56 < 0.0) d141 = 0.0; else {
  if (!(d56 > d139)) {
   d141 = d56;
   break;
  }
  d141 = d139;
 } while (0);
 d139 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d140, d141);
 HEAPF32[i1 + 80 >> 2] = d139;
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d139 = 1.0 / +(1 << i9 | 0);
 d141 = d139 * .5 + -.5;
 d140 = d58 * d139 + d141;
 d58 = d59 * d139 + d141;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d141 = +((i9 + -2 | 0) >>> 0);
 do if (d140 < 0.0) d142 = 0.0; else {
  if (!(d140 > d141)) {
   d142 = d140;
   break;
  }
  d142 = d141;
 } while (0);
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d141 = +((i7 + -2 | 0) >>> 0);
 do if (d58 < 0.0) d143 = 0.0; else {
  if (!(d58 > d141)) {
   d143 = d58;
   break;
  }
  d143 = d141;
 } while (0);
 d141 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d142, d143);
 HEAPF32[i1 + 84 >> 2] = d141;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d141 = 1.0 / +(1 << i8 | 0);
 d143 = d141 * .5 + -.5;
 d142 = d60 * d141 + d143;
 d60 = d61 * d141 + d143;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d143 = +((i8 + -2 | 0) >>> 0);
 do if (d142 < 0.0) d144 = 0.0; else {
  if (!(d142 > d143)) {
   d144 = d142;
   break;
  }
  d144 = d143;
 } while (0);
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d143 = +((i9 + -2 | 0) >>> 0);
 do if (d60 < 0.0) d145 = 0.0; else {
  if (!(d60 > d143)) {
   d145 = d60;
   break;
  }
  d145 = d143;
 } while (0);
 d143 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d144, d145);
 HEAPF32[i1 + 88 >> 2] = d143;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d143 = 1.0 / +(1 << i7 | 0);
 d145 = d143 * .5 + -.5;
 d144 = d62 * d143 + d145;
 d62 = d63 * d143 + d145;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d145 = +((i7 + -2 | 0) >>> 0);
 do if (d144 < 0.0) d146 = 0.0; else {
  if (!(d144 > d145)) {
   d146 = d144;
   break;
  }
  d146 = d145;
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d145 = +((i8 + -2 | 0) >>> 0);
 do if (d62 < 0.0) d147 = 0.0; else {
  if (!(d62 > d145)) {
   d147 = d62;
   break;
  }
  d147 = d145;
 } while (0);
 d145 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d146, d147);
 HEAPF32[i1 + 92 >> 2] = d145;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i19, i20, d11);
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d11 = 1.0 / +(1 << i9 | 0);
 d145 = d11 * .5 + -.5;
 d147 = d40 * d11 + d145;
 d40 = d41 * d11 + d145;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d145 = +((i9 + -2 | 0) >>> 0);
 do if (d147 < 0.0) d148 = 0.0; else {
  if (!(d147 > d145)) {
   d148 = d147;
   break;
  }
  d148 = d145;
 } while (0);
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d145 = +((i7 + -2 | 0) >>> 0);
 do if (d40 < 0.0) d149 = 0.0; else {
  if (!(d40 > d145)) {
   d149 = d40;
   break;
  }
  d149 = d145;
 } while (0);
 d145 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d148, d149);
 HEAPF32[i1 + 96 >> 2] = d145;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d145 = 1.0 / +(1 << i8 | 0);
 d149 = d145 * .5 + -.5;
 d148 = d42 * d145 + d149;
 d42 = d43 * d145 + d149;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d149 = +((i8 + -2 | 0) >>> 0);
 do if (d148 < 0.0) d150 = 0.0; else {
  if (!(d148 > d149)) {
   d150 = d148;
   break;
  }
  d150 = d149;
 } while (0);
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d149 = +((i9 + -2 | 0) >>> 0);
 do if (d42 < 0.0) d151 = 0.0; else {
  if (!(d42 > d149)) {
   d151 = d42;
   break;
  }
  d151 = d149;
 } while (0);
 d149 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d150, d151);
 HEAPF32[i1 + 100 >> 2] = d149;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d149 = 1.0 / +(1 << i7 | 0);
 d151 = d149 * .5 + -.5;
 d150 = d44 * d149 + d151;
 d44 = d45 * d149 + d151;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d151 = +((i7 + -2 | 0) >>> 0);
 do if (d150 < 0.0) d152 = 0.0; else {
  if (!(d150 > d151)) {
   d152 = d150;
   break;
  }
  d152 = d151;
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d151 = +((i8 + -2 | 0) >>> 0);
 do if (d44 < 0.0) d153 = 0.0; else {
  if (!(d44 > d151)) {
   d153 = d44;
   break;
  }
  d153 = d151;
 } while (0);
 d151 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d152, d153);
 HEAPF32[i1 + 104 >> 2] = d151;
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d151 = 1.0 / +(1 << i9 | 0);
 d153 = d151 * .5 + -.5;
 d152 = d46 * d151 + d153;
 d46 = d47 * d151 + d153;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d153 = +((i9 + -2 | 0) >>> 0);
 do if (d152 < 0.0) d154 = 0.0; else {
  if (!(d152 > d153)) {
   d154 = d152;
   break;
  }
  d154 = d153;
 } while (0);
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d153 = +((i7 + -2 | 0) >>> 0);
 do if (d46 < 0.0) d155 = 0.0; else {
  if (!(d46 > d153)) {
   d155 = d46;
   break;
  }
  d155 = d153;
 } while (0);
 d153 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d154, d155);
 HEAPF32[i1 + 108 >> 2] = d153;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d153 = 1.0 / +(1 << i8 | 0);
 d155 = d153 * .5 + -.5;
 d154 = d48 * d153 + d155;
 d48 = d49 * d153 + d155;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d155 = +((i8 + -2 | 0) >>> 0);
 do if (d154 < 0.0) d156 = 0.0; else {
  if (!(d154 > d155)) {
   d156 = d154;
   break;
  }
  d156 = d155;
 } while (0);
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d155 = +((i9 + -2 | 0) >>> 0);
 do if (d48 < 0.0) d157 = 0.0; else {
  if (!(d48 > d155)) {
   d157 = d48;
   break;
  }
  d157 = d155;
 } while (0);
 d155 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d156, d157);
 HEAPF32[i1 + 112 >> 2] = d155;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d155 = 1.0 / +(1 << i7 | 0);
 d157 = d155 * .5 + -.5;
 d156 = d50 * d155 + d157;
 d50 = d51 * d155 + d157;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d157 = +((i7 + -2 | 0) >>> 0);
 do if (d156 < 0.0) d158 = 0.0; else {
  if (!(d156 > d157)) {
   d158 = d156;
   break;
  }
  d158 = d157;
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d157 = +((i8 + -2 | 0) >>> 0);
 do if (d50 < 0.0) d159 = 0.0; else {
  if (!(d50 > d157)) {
   d159 = d50;
   break;
  }
  d159 = d157;
 } while (0);
 d157 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d158, d159);
 HEAPF32[i1 + 116 >> 2] = d157;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i19, i20, d10);
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d10 = 1.0 / +(1 << i9 | 0);
 d157 = d10 * .5 + -.5;
 d159 = d28 * d10 + d157;
 d28 = d29 * d10 + d157;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d157 = +((i9 + -2 | 0) >>> 0);
 do if (d159 < 0.0) d160 = 0.0; else {
  if (!(d159 > d157)) {
   d160 = d159;
   break;
  }
  d160 = d157;
 } while (0);
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d157 = +((i7 + -2 | 0) >>> 0);
 do if (d28 < 0.0) d161 = 0.0; else {
  if (!(d28 > d157)) {
   d161 = d28;
   break;
  }
  d161 = d157;
 } while (0);
 d157 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d160, d161);
 HEAPF32[i1 + 120 >> 2] = d157;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d157 = 1.0 / +(1 << i8 | 0);
 d161 = d157 * .5 + -.5;
 d160 = d30 * d157 + d161;
 d30 = d31 * d157 + d161;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d161 = +((i8 + -2 | 0) >>> 0);
 do if (d160 < 0.0) d162 = 0.0; else {
  if (!(d160 > d161)) {
   d162 = d160;
   break;
  }
  d162 = d161;
 } while (0);
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d161 = +((i9 + -2 | 0) >>> 0);
 do if (d30 < 0.0) d163 = 0.0; else {
  if (!(d30 > d161)) {
   d163 = d30;
   break;
  }
  d163 = d161;
 } while (0);
 d161 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d162, d163);
 HEAPF32[i1 + 124 >> 2] = d161;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d161 = 1.0 / +(1 << i7 | 0);
 d163 = d161 * .5 + -.5;
 d162 = d32 * d161 + d163;
 d32 = d33 * d161 + d163;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d163 = +((i7 + -2 | 0) >>> 0);
 do if (d162 < 0.0) d164 = 0.0; else {
  if (!(d162 > d163)) {
   d164 = d162;
   break;
  }
  d164 = d163;
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d163 = +((i8 + -2 | 0) >>> 0);
 do if (d32 < 0.0) d165 = 0.0; else {
  if (!(d32 > d163)) {
   d165 = d32;
   break;
  }
  d165 = d163;
 } while (0);
 d163 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d164, d165);
 HEAPF32[i1 + 128 >> 2] = d163;
 i9 = HEAP32[i19 >> 2] | 0;
 i8 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d163 = 1.0 / +(1 << i9 | 0);
 d165 = d163 * .5 + -.5;
 d164 = d34 * d163 + d165;
 d34 = d35 * d163 + d165;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 d165 = +((i9 + -2 | 0) >>> 0);
 do if (d164 < 0.0) d166 = 0.0; else {
  if (!(d164 > d165)) {
   d166 = d164;
   break;
  }
  d166 = d165;
 } while (0);
 i7 = HEAP32[i8 + 8 >> 2] | 0;
 d165 = +((i7 + -2 | 0) >>> 0);
 do if (d34 < 0.0) d167 = 0.0; else {
  if (!(d34 > d165)) {
   d167 = d34;
   break;
  }
  d167 = d165;
 } while (0);
 d165 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i8 + 24 >> 2] | 0, i9, i7, HEAP32[i8 + 12 >> 2] | 0, d166, d167);
 HEAPF32[i1 + 132 >> 2] = d165;
 i8 = HEAP32[i19 >> 2] | 0;
 i7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i8, HEAP32[i20 >> 2] | 0) | 0;
 d165 = 1.0 / +(1 << i8 | 0);
 d167 = d165 * .5 + -.5;
 d166 = d36 * d165 + d167;
 d36 = d37 * d165 + d167;
 i8 = HEAP32[i7 + 4 >> 2] | 0;
 d167 = +((i8 + -2 | 0) >>> 0);
 do if (d166 < 0.0) d168 = 0.0; else {
  if (!(d166 > d167)) {
   d168 = d166;
   break;
  }
  d168 = d167;
 } while (0);
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 d167 = +((i9 + -2 | 0) >>> 0);
 do if (d36 < 0.0) d169 = 0.0; else {
  if (!(d36 > d167)) {
   d169 = d36;
   break;
  }
  d169 = d167;
 } while (0);
 d167 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 + 24 >> 2] | 0, i8, i9, HEAP32[i7 + 12 >> 2] | 0, d168, d169);
 HEAPF32[i1 + 136 >> 2] = d167;
 i7 = HEAP32[i19 >> 2] | 0;
 i9 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i7, HEAP32[i20 >> 2] | 0) | 0;
 d167 = 1.0 / +(1 << i7 | 0);
 d169 = d167 * .5 + -.5;
 d168 = d38 * d167 + d169;
 d38 = d39 * d167 + d169;
 i7 = HEAP32[i9 + 4 >> 2] | 0;
 d169 = +((i7 + -2 | 0) >>> 0);
 do if (d168 < 0.0) d170 = 0.0; else {
  if (!(d168 > d169)) {
   d170 = d168;
   break;
  }
  d170 = d169;
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 d169 = +((i8 + -2 | 0) >>> 0);
 do if (d38 < 0.0) d171 = 0.0; else {
  if (!(d38 > d169)) {
   d171 = d38;
   break;
  }
  d171 = d169;
 } while (0);
 d169 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i9 + 24 >> 2] | 0, i7, i8, HEAP32[i9 + 12 >> 2] | 0, d170, d171);
 HEAPF32[i1 + 140 >> 2] = d169;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i2, i19, i20, d89);
 i9 = HEAP32[i19 >> 2] | 0;
 i19 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i9, HEAP32[i20 >> 2] | 0) | 0;
 d89 = 1.0 / +(1 << i9 | 0);
 d169 = d89 * .5 + -.5;
 d171 = d21 * d89 + d169;
 d21 = d22 * d89 + d169;
 i9 = HEAP32[i19 + 4 >> 2] | 0;
 d169 = +((i9 + -2 | 0) >>> 0);
 do if (d171 < 0.0) d172 = 0.0; else {
  if (!(d171 > d169)) {
   d172 = d171;
   break;
  }
  d172 = d169;
 } while (0);
 i20 = HEAP32[i19 + 8 >> 2] | 0;
 d169 = +((i20 + -2 | 0) >>> 0);
 if (d21 < 0.0) {
  d173 = 0.0;
  i174 = i19 + 24 | 0;
  i175 = HEAP32[i174 >> 2] | 0;
  i176 = i19 + 12 | 0;
  i177 = HEAP32[i176 >> 2] | 0;
  d178 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(i175, i9, i20, i177, d172, d173);
  i179 = i1 + 144 | 0;
  HEAPF32[i179 >> 2] = d178;
  STACKTOP = i18;
  return 1;
 }
 if (!(d21 > d169)) {
  d173 = d21;
  i174 = i19 + 24 | 0;
  i175 = HEAP32[i174 >> 2] | 0;
  i176 = i19 + 12 | 0;
  i177 = HEAP32[i176 >> 2] | 0;
  d178 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(i175, i9, i20, i177, d172, d173);
  i179 = i1 + 144 | 0;
  HEAPF32[i179 >> 2] = d178;
  STACKTOP = i18;
  return 1;
 }
 d173 = d169;
 i174 = i19 + 24 | 0;
 i175 = HEAP32[i174 >> 2] | 0;
 i176 = i19 + 12 | 0;
 i177 = HEAP32[i176 >> 2] | 0;
 d178 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(i175, i9, i20, i177, d172, d173);
 i179 = i1 + 144 | 0;
 HEAPF32[i179 >> 2] = d178;
 STACKTOP = i18;
 return 1;
}

function __ZN6vision25DoGScaleInvariantDetector15extractFeaturesEPKNS_25GaussianScaleSpacePyramidEPKNS_10DoGPyramidE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, d8 = 0.0, d9 = 0.0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, d47 = 0.0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, d59 = 0.0, d60 = 0.0, i61 = 0, d62 = 0.0, i63 = 0, d64 = 0.0, i65 = 0, i66 = 0, i67 = 0, d68 = 0.0, d69 = 0.0, d70 = 0.0, i71 = 0, i72 = 0, i73 = 0, d74 = 0.0, d75 = 0.0, d76 = 0.0, i77 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4;
 i6 = i1 + 60 | 0;
 i7 = i1 + 64 | 0;
 HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
 d8 = +HEAPF32[i1 + 52 >> 2];
 d9 = d8 * d8;
 i10 = i1 + 32 | 0;
 i11 = i1 + 36 | 0;
 if ((((HEAP32[i11 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) >> 5) + -1 | 0) >>> 0 <= 1) {
  STACKTOP = i4;
  return;
 }
 i12 = i3 + 16 | 0;
 i13 = i5 + 12 | 0;
 i14 = i5 + 16 | 0;
 i15 = i5 + 24 | 0;
 i16 = i5 + 28 | 0;
 i17 = i5 + 4 | 0;
 i18 = i1 + 68 | 0;
 i1 = i5 + 12 | 0;
 i19 = i5 + 16 | 0;
 i20 = i5 + 24 | 0;
 i21 = i5 + 28 | 0;
 i22 = i5 + 4 | 0;
 i23 = i5 + 12 | 0;
 i24 = i5 + 16 | 0;
 i25 = i5 + 24 | 0;
 i26 = i5 + 28 | 0;
 i27 = i5 + 4 | 0;
 i28 = 1;
 L4 : while (1) {
  i29 = i28 + -1 | 0;
  i30 = HEAP32[i3 >> 2] | 0;
  i31 = i30 + (i29 << 5) | 0;
  i32 = i30 + (i28 << 5) | 0;
  i33 = i28;
  i28 = i28 + 1 | 0;
  i34 = i30 + (i28 << 5) | 0;
  i35 = __ZNK6vision10DoGPyramid15octaveFromIndexEi(i3, i33) | 0;
  i36 = (i33 | 0) % (HEAP32[i12 >> 2] | 0) | 0;
  i37 = i30 + (i29 << 5) + 4 | 0;
  i38 = HEAP32[i37 >> 2] | 0;
  i39 = HEAP32[i30 + (i33 << 5) + 4 >> 2] | 0;
  L6 : do if ((i38 | 0) == (i39 | 0)) {
   i40 = i30 + (i28 << 5) + 4 | 0;
   i41 = HEAP32[i40 >> 2] | 0;
   if ((i38 | 0) == (i41 | 0)) {
    i42 = HEAP32[i30 + (i29 << 5) + 8 >> 2] | 0;
    if ((i42 | 0) != (HEAP32[i30 + (i33 << 5) + 8 >> 2] | 0)) {
     i43 = 8;
     break L4;
    }
    if ((i42 | 0) != (HEAP32[i30 + (i28 << 5) + 8 >> 2] | 0)) {
     i43 = 10;
     break L4;
    }
    i44 = i38 + -1 | 0;
    i45 = i42 + -1 | 0;
    if (i45 >>> 0 <= 1) break;
    i42 = i44 >>> 0 > 1;
    d8 = +(i36 | 0);
    i46 = i35 + -1 | 0;
    d47 = +(1 << i35 | 0);
    i48 = 1;
    while (1) {
     i49 = i48 + -1 | 0;
     i50 = __ZNK6vision5Image3getIfEEPKT_m(i31, i49) | 0;
     i51 = __ZNK6vision5Image3getIfEEPKT_m(i31, i48) | 0;
     i52 = i48;
     i48 = i48 + 1 | 0;
     i53 = __ZNK6vision5Image3getIfEEPKT_m(i31, i48) | 0;
     i54 = __ZNK6vision5Image3getIfEEPKT_m(i32, i49) | 0;
     i55 = __ZNK6vision5Image3getIfEEPKT_m(i32, i52) | 0;
     i56 = __ZNK6vision5Image3getIfEEPKT_m(i32, i48) | 0;
     i57 = __ZNK6vision5Image3getIfEEPKT_m(i34, i49) | 0;
     i49 = __ZNK6vision5Image3getIfEEPKT_m(i34, i52) | 0;
     i58 = __ZNK6vision5Image3getIfEEPKT_m(i34, i48) | 0;
     if (i42) {
      d59 = d47 * +(i52 >>> 0);
      i52 = 1;
      do {
       d60 = +HEAPF32[i55 + (i52 << 2) >> 2];
       do if (!(d60 * d60 < d9)) {
        i61 = i52 + -1 | 0;
        d62 = +HEAPF32[i50 + (i61 << 2) >> 2];
        do if (((d60 > d62 ? d60 > +HEAPF32[i50 + (i52 << 2) >> 2] : 0) ? (i63 = i52 + 1 | 0, d60 > +HEAPF32[i50 + (i63 << 2) >> 2]) : 0) ? d60 > +HEAPF32[i51 + (i61 << 2) >> 2] : 0) {
         if (!(d60 > +HEAPF32[i51 + (i52 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i51 + (i63 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i53 + (i61 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i53 + (i52 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i53 + (i63 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i54 + (i61 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i54 + (i52 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i54 + (i63 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i55 + (i61 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i55 + (i63 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i56 + (i61 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i56 + (i52 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i56 + (i63 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i57 + (i61 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i57 + (i52 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i57 + (i63 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i49 + (i61 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i49 + (i52 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i49 + (i63 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i58 + (i61 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i58 + (i52 << 2) >> 2])) {
          i43 = 43;
          break;
         }
         if (!(d60 > +HEAPF32[i58 + (i63 << 2) >> 2])) i43 = 43;
        } else i43 = 43; while (0);
        if ((i43 | 0) == 43) {
         i43 = 0;
         if (!(d60 < d62)) break;
         if (!(d60 < +HEAPF32[i50 + (i52 << 2) >> 2])) break;
         i63 = i52 + 1 | 0;
         if (!(d60 < +HEAPF32[i50 + (i63 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i51 + (i61 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i51 + (i52 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i51 + (i63 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i53 + (i61 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i53 + (i52 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i53 + (i63 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i54 + (i61 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i54 + (i52 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i54 + (i63 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i55 + (i61 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i55 + (i63 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i56 + (i61 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i56 + (i52 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i56 + (i63 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i57 + (i61 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i57 + (i52 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i57 + (i63 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i49 + (i61 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i49 + (i52 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i49 + (i63 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i58 + (i61 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i58 + (i52 << 2) >> 2])) break;
         if (!(d60 < +HEAPF32[i58 + (i63 << 2) >> 2])) break;
        }
        HEAP32[i13 >> 2] = i35;
        HEAP32[i14 >> 2] = i36;
        HEAPF32[i15 >> 2] = d60;
        d64 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i2, i35, d8);
        HEAPF32[i16 >> 2] = d64;
        d64 = +_ldexp(1.0, i46) + -.5;
        HEAPF32[i5 >> 2] = d47 * +(i52 >>> 0) + d64;
        HEAPF32[i17 >> 2] = d59 + d64;
        i63 = HEAP32[i7 >> 2] | 0;
        if ((i63 | 0) == (HEAP32[i18 >> 2] | 0)) {
         __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i6, i5);
         break;
        } else {
         i65 = i63;
         i66 = i5;
         i67 = i65 + 36 | 0;
         do {
          HEAP32[i65 >> 2] = HEAP32[i66 >> 2];
          i65 = i65 + 4 | 0;
          i66 = i66 + 4 | 0;
         } while ((i65 | 0) < (i67 | 0));
         HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 36;
         break;
        }
       } while (0);
       i52 = i52 + 1 | 0;
      } while ((i52 | 0) != (i44 | 0));
     }
     if ((i48 | 0) == (i45 | 0)) break L6;
    }
   }
   i45 = i38 >>> 1;
   if ((i45 | 0) == (i41 | 0)) {
    i48 = HEAP32[i30 + (i29 << 5) + 8 >> 2] | 0;
    if ((i48 | 0) != (HEAP32[i30 + (i33 << 5) + 8 >> 2] | 0)) {
     i43 = 75;
     break L4;
    }
    i44 = i48 >>> 1;
    i48 = i30 + (i28 << 5) + 8 | 0;
    if ((i44 | 0) != (HEAP32[i48 >> 2] | 0)) {
     i43 = 77;
     break L4;
    }
    i46 = ~~+Math_floor(+((+((i41 + -1 | 0) >>> 0) + -.5) * 2.0 + .5)) >>> 0;
    i42 = ~~+Math_floor(+((+((i44 + -1 | 0) >>> 0) + -.5) * 2.0 + .5)) >>> 0;
    if (i42 >>> 0 > 2) {
     i44 = i46 >>> 0 > 2;
     d47 = +(i36 | 0);
     i52 = i35 + -1 | 0;
     d8 = +(1 << i35 | 0);
     i58 = i30 + (i28 << 5) + 24 | 0;
     i49 = i30 + (i28 << 5) + 12 | 0;
     i57 = 2;
     do {
      i56 = i57 + -1 | 0;
      i55 = __ZNK6vision5Image3getIfEEPKT_m(i31, i56) | 0;
      i54 = __ZNK6vision5Image3getIfEEPKT_m(i31, i57) | 0;
      i53 = i57;
      i57 = i57 + 1 | 0;
      i51 = __ZNK6vision5Image3getIfEEPKT_m(i31, i57) | 0;
      i50 = __ZNK6vision5Image3getIfEEPKT_m(i32, i56) | 0;
      i56 = __ZNK6vision5Image3getIfEEPKT_m(i32, i53) | 0;
      i61 = __ZNK6vision5Image3getIfEEPKT_m(i32, i57) | 0;
      if (i44) {
       d59 = +(i53 >>> 0);
       d60 = d59 * .5 + -.25;
       d62 = d8 * d59;
       d59 = d60 + -.5;
       d64 = d60 + .5;
       i53 = 2;
       do {
        i63 = i56 + (i53 << 2) | 0;
        d68 = +HEAPF32[i63 >> 2];
        do if (!(d68 * d68 < d9)) {
         d69 = +(i53 >>> 0);
         d70 = d69 * .5 + -.25;
         i71 = i53 + -1 | 0;
         i72 = i55 + (i71 << 2) | 0;
         do if (((d68 > +HEAPF32[i72 >> 2] ? d68 > +HEAPF32[i55 + (i53 << 2) >> 2] : 0) ? (i73 = i53 + 1 | 0, d68 > +HEAPF32[i55 + (i73 << 2) >> 2]) : 0) ? d68 > +HEAPF32[i54 + (i71 << 2) >> 2] : 0) {
          if (!(d68 > +HEAPF32[i54 + (i53 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i54 + (i73 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i51 + (i71 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i51 + (i53 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i51 + (i73 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i50 + (i71 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i50 + (i53 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i50 + (i73 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i56 + (i71 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i56 + (i73 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i61 + (i71 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i61 + (i53 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          if (!(d68 > +HEAPF32[i61 + (i73 << 2) >> 2])) {
           i43 = 110;
           break;
          }
          d74 = d70 + -.5;
          if (!(d68 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d74, d59))) {
           i43 = 110;
           break;
          }
          d75 = +HEAPF32[i63 >> 2];
          if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d59))) {
           i43 = 110;
           break;
          }
          d75 = +HEAPF32[i63 >> 2];
          d76 = d70 + .5;
          if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d76, d59))) {
           i43 = 110;
           break;
          }
          d75 = +HEAPF32[i63 >> 2];
          if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d74, d60))) {
           i43 = 110;
           break;
          }
          d75 = +HEAPF32[i63 >> 2];
          if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d60))) {
           i43 = 110;
           break;
          }
          d75 = +HEAPF32[i63 >> 2];
          if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d76, d60))) {
           i43 = 110;
           break;
          }
          d75 = +HEAPF32[i63 >> 2];
          if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d74, d64))) {
           i43 = 110;
           break;
          }
          d74 = +HEAPF32[i63 >> 2];
          if (!(d74 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d64))) {
           i43 = 110;
           break;
          }
          d74 = +HEAPF32[i63 >> 2];
          if (!(d74 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d76, d64))) i43 = 110;
         } else i43 = 110; while (0);
         if ((i43 | 0) == 110) {
          i43 = 0;
          d76 = +HEAPF32[i63 >> 2];
          if (!(d76 < +HEAPF32[i72 >> 2])) break;
          if (!(d76 < +HEAPF32[i55 + (i53 << 2) >> 2])) break;
          i73 = i53 + 1 | 0;
          if (!(d76 < +HEAPF32[i55 + (i73 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i54 + (i71 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i54 + (i53 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i54 + (i73 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i51 + (i71 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i51 + (i53 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i51 + (i73 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i50 + (i71 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i50 + (i53 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i50 + (i73 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i56 + (i71 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i56 + (i73 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i61 + (i71 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i61 + (i53 << 2) >> 2])) break;
          if (!(d76 < +HEAPF32[i61 + (i73 << 2) >> 2])) break;
          d74 = d70 + -.5;
          if (!(d76 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d74, d59))) break;
          d76 = +HEAPF32[i63 >> 2];
          if (!(d76 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d59))) break;
          d76 = +HEAPF32[i63 >> 2];
          d75 = d70 + .5;
          if (!(d76 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d75, d59))) break;
          d76 = +HEAPF32[i63 >> 2];
          if (!(d76 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d74, d60))) break;
          d76 = +HEAPF32[i63 >> 2];
          if (!(d76 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d60))) break;
          d76 = +HEAPF32[i63 >> 2];
          if (!(d76 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d75, d60))) break;
          d76 = +HEAPF32[i63 >> 2];
          if (!(d76 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d74, d64))) break;
          d74 = +HEAPF32[i63 >> 2];
          if (!(d74 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d64))) break;
          d74 = +HEAPF32[i63 >> 2];
          if (!(d74 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i58 >> 2] | 0, HEAP32[i40 >> 2] | 0, HEAP32[i48 >> 2] | 0, HEAP32[i49 >> 2] | 0, d75, d64))) break;
         }
         HEAP32[i1 >> 2] = i35;
         HEAP32[i19 >> 2] = i36;
         HEAP32[i20 >> 2] = HEAP32[i63 >> 2];
         d75 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i2, i35, d47);
         HEAPF32[i21 >> 2] = d75;
         d75 = +_ldexp(1.0, i52) + -.5;
         HEAPF32[i5 >> 2] = d8 * d69 + d75;
         HEAPF32[i22 >> 2] = d62 + d75;
         i73 = HEAP32[i7 >> 2] | 0;
         if ((i73 | 0) == (HEAP32[i18 >> 2] | 0)) {
          __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i6, i5);
          break;
         } else {
          i65 = i73;
          i66 = i5;
          i67 = i65 + 36 | 0;
          do {
           HEAP32[i65 >> 2] = HEAP32[i66 >> 2];
           i65 = i65 + 4 | 0;
           i66 = i66 + 4 | 0;
          } while ((i65 | 0) < (i67 | 0));
          HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 36;
          break;
         }
        } while (0);
        i53 = i53 + 1 | 0;
       } while ((i53 | 0) != (i46 | 0));
      }
     } while ((i57 | 0) != (i42 | 0));
    }
   } else {
    i77 = i45;
    i43 = 140;
   }
  } else {
   i77 = i38 >>> 1;
   i43 = 140;
  } while (0);
  if (((i43 | 0) == 140 ? (i43 = 0, (i77 | 0) == (i39 | 0)) : 0) ? (i39 | 0) == (HEAP32[i30 + (i28 << 5) + 4 >> 2] | 0) : 0) {
   i38 = i30 + (i29 << 5) + 8 | 0;
   i31 = (HEAP32[i38 >> 2] | 0) >>> 1;
   if ((i31 | 0) != (HEAP32[i30 + (i33 << 5) + 8 >> 2] | 0)) {
    i43 = 143;
    break;
   }
   if ((i31 | 0) != (HEAP32[i30 + (i28 << 5) + 8 >> 2] | 0)) {
    i43 = 145;
    break;
   }
   i42 = i39 + -1 | 0;
   i57 = i31 + -1 | 0;
   if (i57 >>> 0 > 1) {
    i31 = i42 >>> 0 > 1;
    d8 = +(i36 | 0);
    i46 = i35 + -1 | 0;
    d47 = +(1 << i35 | 0);
    i52 = i30 + (i29 << 5) + 24 | 0;
    i49 = i30 + (i29 << 5) + 12 | 0;
    i48 = 1;
    do {
     i40 = i48 + -1 | 0;
     i58 = __ZNK6vision5Image3getIfEEPKT_m(i32, i40) | 0;
     i44 = __ZNK6vision5Image3getIfEEPKT_m(i32, i48) | 0;
     i41 = i48;
     i48 = i48 + 1 | 0;
     i53 = __ZNK6vision5Image3getIfEEPKT_m(i32, i48) | 0;
     i61 = __ZNK6vision5Image3getIfEEPKT_m(i34, i40) | 0;
     i40 = __ZNK6vision5Image3getIfEEPKT_m(i34, i41) | 0;
     i56 = __ZNK6vision5Image3getIfEEPKT_m(i34, i48) | 0;
     if (i31) {
      d62 = +(i41 << 1 >>> 0) + .5;
      d64 = d47 * +(i41 >>> 0);
      d60 = d62 + -2.0;
      d59 = d62 + 2.0;
      i41 = 1;
      do {
       i50 = i44 + (i41 << 2) | 0;
       d68 = +HEAPF32[i50 >> 2];
       do if (!(d68 * d68 < d9)) {
        d69 = +(i41 << 1 >>> 0) + .5;
        i51 = i41 + -1 | 0;
        i54 = i58 + (i51 << 2) | 0;
        do if (((d68 > +HEAPF32[i54 >> 2] ? d68 > +HEAPF32[i58 + (i41 << 2) >> 2] : 0) ? (i55 = i41 + 1 | 0, d68 > +HEAPF32[i58 + (i55 << 2) >> 2]) : 0) ? d68 > +HEAPF32[i44 + (i51 << 2) >> 2] : 0) {
         if (!(d68 > +HEAPF32[i44 + (i55 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i53 + (i51 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i53 + (i41 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i53 + (i55 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i61 + (i51 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i61 + (i41 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i61 + (i55 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i40 + (i51 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i40 + (i41 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i40 + (i55 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i56 + (i51 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i56 + (i41 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         if (!(d68 > +HEAPF32[i56 + (i55 << 2) >> 2])) {
          i43 = 178;
          break;
         }
         d70 = d69 + -2.0;
         if (!(d68 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d60))) {
          i43 = 178;
          break;
         }
         d75 = +HEAPF32[i50 >> 2];
         if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d69, d60))) {
          i43 = 178;
          break;
         }
         d75 = +HEAPF32[i50 >> 2];
         d74 = d69 + 2.0;
         if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d74, d60))) {
          i43 = 178;
          break;
         }
         d75 = +HEAPF32[i50 >> 2];
         if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d62))) {
          i43 = 178;
          break;
         }
         d75 = +HEAPF32[i50 >> 2];
         if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d69, d62))) {
          i43 = 178;
          break;
         }
         d75 = +HEAPF32[i50 >> 2];
         if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d74, d62))) {
          i43 = 178;
          break;
         }
         d75 = +HEAPF32[i50 >> 2];
         if (!(d75 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d59))) {
          i43 = 178;
          break;
         }
         d70 = +HEAPF32[i50 >> 2];
         if (!(d70 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d69, d59))) {
          i43 = 178;
          break;
         }
         d70 = +HEAPF32[i50 >> 2];
         if (!(d70 > +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d74, d59))) i43 = 178;
        } else i43 = 178; while (0);
        if ((i43 | 0) == 178) {
         i43 = 0;
         d74 = +HEAPF32[i50 >> 2];
         if (!(d74 < +HEAPF32[i54 >> 2])) break;
         if (!(d74 < +HEAPF32[i58 + (i41 << 2) >> 2])) break;
         i55 = i41 + 1 | 0;
         if (!(d74 < +HEAPF32[i58 + (i55 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i44 + (i51 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i44 + (i55 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i53 + (i51 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i53 + (i41 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i53 + (i55 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i61 + (i51 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i61 + (i41 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i61 + (i55 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i40 + (i51 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i40 + (i41 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i40 + (i55 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i56 + (i51 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i56 + (i41 << 2) >> 2])) break;
         if (!(d74 < +HEAPF32[i56 + (i55 << 2) >> 2])) break;
         d70 = d69 + -2.0;
         if (!(d74 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d60))) break;
         d74 = +HEAPF32[i50 >> 2];
         if (!(d74 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d69, d60))) break;
         d74 = +HEAPF32[i50 >> 2];
         d75 = d69 + 2.0;
         if (!(d74 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d75, d60))) break;
         d74 = +HEAPF32[i50 >> 2];
         if (!(d74 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d62))) break;
         d74 = +HEAPF32[i50 >> 2];
         if (!(d74 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d69, d62))) break;
         d74 = +HEAPF32[i50 >> 2];
         if (!(d74 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d75, d62))) break;
         d74 = +HEAPF32[i50 >> 2];
         if (!(d74 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d70, d59))) break;
         d70 = +HEAPF32[i50 >> 2];
         if (!(d70 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d69, d59))) break;
         d70 = +HEAPF32[i50 >> 2];
         if (!(d70 < +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i52 >> 2] | 0, HEAP32[i37 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i49 >> 2] | 0, d75, d59))) break;
        }
        HEAP32[i23 >> 2] = i35;
        HEAP32[i24 >> 2] = i36;
        HEAP32[i25 >> 2] = HEAP32[i50 >> 2];
        d75 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i2, i35, d8);
        HEAPF32[i26 >> 2] = d75;
        d75 = +_ldexp(1.0, i46) + -.5;
        HEAPF32[i5 >> 2] = d47 * +(i41 >>> 0) + d75;
        HEAPF32[i27 >> 2] = d64 + d75;
        i55 = HEAP32[i7 >> 2] | 0;
        if ((i55 | 0) == (HEAP32[i18 >> 2] | 0)) {
         __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i6, i5);
         break;
        } else {
         i65 = i55;
         i66 = i5;
         i67 = i65 + 36 | 0;
         do {
          HEAP32[i65 >> 2] = HEAP32[i66 >> 2];
          i65 = i65 + 4 | 0;
          i66 = i66 + 4 | 0;
         } while ((i65 | 0) < (i67 | 0));
         HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 36;
         break;
        }
       } while (0);
       i41 = i41 + 1 | 0;
      } while ((i41 | 0) != (i42 | 0));
     }
    } while ((i48 | 0) != (i57 | 0));
   }
  }
  if (i28 >>> 0 >= (((HEAP32[i11 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) >> 5) + -1 | 0) >>> 0) {
   i43 = 3;
   break;
  }
 }
 if ((i43 | 0) == 3) {
  STACKTOP = i4;
  return;
 } else if ((i43 | 0) == 8) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24602, 51) | 0, 20576, 130) | 0, 33554, 6) | 0, 192) | 0, 33561, 2) | 0, 24654, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 } else if ((i43 | 0) == 10) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24677, 51) | 0, 20576, 130) | 0, 33554, 6) | 0, 193) | 0, 33561, 2) | 0, 24654, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 } else if ((i43 | 0) == 75) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24602, 51) | 0, 20576, 130) | 0, 33554, 6) | 0, 277) | 0, 33561, 2) | 0, 24654, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 } else if ((i43 | 0) == 77) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24729, 56) | 0, 20576, 130) | 0, 33554, 6) | 0, 278) | 0, 33561, 2) | 0, 24654, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 } else if ((i43 | 0) == 143) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24786, 56) | 0, 20576, 130) | 0, 33554, 6) | 0, 362) | 0, 33561, 2) | 0, 24654, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 } else if ((i43 | 0) == 145) {
  i43 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24843, 56) | 0, 20576, 130) | 0, 33554, 6) | 0, 363) | 0, 33561, 2) | 0, 24654, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i43 + (HEAP32[(HEAP32[i43 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i43, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i43) | 0;
  _abort();
 }
}

function _read_markers(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0, i89 = 0, i90 = 0, i91 = 0, i92 = 0, i93 = 0, i94 = 0, i95 = 0, i96 = 0, i97 = 0, i98 = 0, i99 = 0, i100 = 0, i101 = 0, i102 = 0, i103 = 0, i104 = 0, i105 = 0, i106 = 0, i107 = 0, i108 = 0, i109 = 0, i110 = 0, i111 = 0, i112 = 0, i113 = 0, i114 = 0, i115 = 0, i116 = 0, i117 = 0, i118 = 0, i119 = 0, i120 = 0, i121 = 0, i122 = 0, i123 = 0, i124 = 0, i125 = 0, i126 = 0, i127 = 0, i128 = 0, i129 = 0, i130 = 0, i131 = 0, i132 = 0, i133 = 0, i134 = 0, i135 = 0, i136 = 0, i137 = 0, i138 = 0, i139 = 0, i140 = 0, i141 = 0, i142 = 0, i143 = 0, i144 = 0, i145 = 0, i146 = 0, i147 = 0, i148 = 0, i149 = 0, i150 = 0, i151 = 0, i152 = 0, i153 = 0, i154 = 0, i155 = 0, i156 = 0, i157 = 0, i158 = 0, i159 = 0, i160 = 0, i161 = 0, i162 = 0, i163 = 0, i164 = 0, i165 = 0, i166 = 0, i167 = 0, i168 = 0, i169 = 0, i170 = 0, i171 = 0, i172 = 0, i173 = 0, i174 = 0, i175 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i3 = i2;
 i4 = i1 + 416 | 0;
 i5 = i1 + 440 | 0;
 i6 = i1 + 24 | 0;
 i7 = i1 + 228 | 0;
 i8 = i1 + 244 | 0;
 i9 = i1 + 260 | 0;
 i10 = i1 + 276 | 0;
 i11 = i1 + 40 | 0;
 i12 = i1 + 300 | 0;
 i13 = i1 + 280 | 0;
 i14 = i1 + 284 | 0;
 i15 = i1 + 285 | 0;
 i16 = i1 + 286 | 0;
 i17 = i1 + 288 | 0;
 i18 = i1 + 290 | 0;
 i19 = i1 + 292 | 0;
 i20 = i1 + 296 | 0;
 i21 = HEAP32[i4 >> 2] | 0;
 L1 : while (1) {
  do if (!i21) {
   if (HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] | 0) {
    if (!(_next_marker(i1) | 0)) {
     i22 = 0;
     i23 = 211;
     break L1;
    }
    i24 = HEAP32[i4 >> 2] | 0;
    break;
   }
   i25 = HEAP32[i6 >> 2] | 0;
   i26 = i25 + 4 | 0;
   i27 = HEAP32[i26 >> 2] | 0;
   if (!i27) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i25 + 12 >> 2] & 127](i1) | 0)) {
     i22 = 0;
     i23 = 211;
     break L1;
    }
    i28 = HEAP32[i26 >> 2] | 0;
   } else i28 = i27;
   i27 = HEAP32[i25 >> 2] | 0;
   i29 = i28 + -1 | 0;
   i30 = i27 + 1 | 0;
   i31 = HEAP8[i27 >> 0] | 0;
   i27 = i31 & 255;
   if (!i29) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i25 + 12 >> 2] & 127](i1) | 0)) {
     i22 = 0;
     i23 = 211;
     break L1;
    }
    i32 = HEAP32[i26 >> 2] | 0;
    i33 = HEAP32[i25 >> 2] | 0;
   } else {
    i32 = i29;
    i33 = i30;
   }
   i30 = HEAP8[i33 >> 0] | 0;
   i29 = i30 & 255;
   if (i31 << 24 >> 24 != -1 | i30 << 24 >> 24 != -40) {
    i30 = HEAP32[i1 >> 2] | 0;
    HEAP32[i30 + 20 >> 2] = 53;
    HEAP32[i30 + 24 >> 2] = i27;
    HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i29;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   }
   HEAP32[i4 >> 2] = i29;
   HEAP32[i25 >> 2] = i33 + 1;
   HEAP32[i26 >> 2] = i32 + -1;
   i24 = i29;
  } else i24 = i21; while (0);
  do switch (i24 | 0) {
  case 218:
   {
    i23 = 24;
    break L1;
    break;
   }
  case 217:
   {
    i23 = 61;
    break L1;
    break;
   }
  case 216:
   {
    i29 = HEAP32[i1 >> 2] | 0;
    HEAP32[i29 + 20 >> 2] = 102;
    FUNCTION_TABLE_vii[HEAP32[i29 + 4 >> 2] & 63](i1, 1);
    i29 = (HEAP32[i5 >> 2] | 0) + 12 | 0;
    if (!(HEAP32[i29 >> 2] | 0)) i34 = i29; else {
     i29 = HEAP32[i1 >> 2] | 0;
     HEAP32[i29 + 20 >> 2] = 61;
     FUNCTION_TABLE_vi[HEAP32[i29 >> 2] & 255](i1);
     i34 = (HEAP32[i5 >> 2] | 0) + 12 | 0;
    }
    i29 = i7;
    i26 = i29 + 16 | 0;
    do {
     HEAP8[i29 >> 0] = 0;
     i29 = i29 + 1 | 0;
    } while ((i29 | 0) < (i26 | 0));
    i29 = i8;
    i26 = i29 + 16 | 0;
    do {
     HEAP8[i29 >> 0] = 1;
     i29 = i29 + 1 | 0;
    } while ((i29 | 0) < (i26 | 0));
    i29 = i9;
    i26 = i29 + 16 | 0;
    do {
     HEAP8[i29 >> 0] = 5;
     i29 = i29 + 1 | 0;
    } while ((i29 | 0) < (i26 | 0));
    HEAP32[i10 >> 2] = 0;
    HEAP32[i11 >> 2] = 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i13 >> 2] = 0;
    HEAP8[i14 >> 0] = 1;
    HEAP8[i15 >> 0] = 1;
    HEAP8[i16 >> 0] = 0;
    HEAP16[i17 >> 1] = 1;
    HEAP16[i18 >> 1] = 1;
    HEAP32[i19 >> 2] = 0;
    HEAP8[i20 >> 0] = 0;
    HEAP32[i34 >> 2] = 1;
    break;
   }
  case 193:
  case 192:
   {
    if (!(_get_sof(i1, 0, 0) | 0)) {
     i22 = 0;
     i23 = 211;
     break L1;
    }
    break;
   }
  case 194:
   {
    if (!(_get_sof(i1, 1, 0) | 0)) {
     i22 = 0;
     i23 = 211;
     break L1;
    }
    break;
   }
  case 201:
   {
    if (!(_get_sof(i1, 0, 1) | 0)) {
     i22 = 0;
     i23 = 211;
     break L1;
    }
    break;
   }
  case 202:
   {
    if (!(_get_sof(i1, 1, 1) | 0)) {
     i22 = 0;
     i23 = 211;
     break L1;
    }
    break;
   }
  case 207:
  case 206:
  case 205:
  case 203:
  case 200:
  case 199:
  case 198:
  case 197:
  case 195:
   {
    i29 = HEAP32[i1 >> 2] | 0;
    HEAP32[i29 + 20 >> 2] = 60;
    HEAP32[i29 + 24 >> 2] = i24;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
    break;
   }
  case 204:
   {
    i29 = HEAP32[i6 >> 2] | 0;
    i26 = i29 + 4 | 0;
    i25 = HEAP32[i26 >> 2] | 0;
    if (!i25) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i29 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i35 = HEAP32[i26 >> 2] | 0;
    } else i35 = i25;
    i25 = HEAP32[i29 >> 2] | 0;
    i27 = i35 + -1 | 0;
    i30 = i25 + 1 | 0;
    i31 = (HEAPU8[i25 >> 0] | 0) << 8;
    if (!i27) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i29 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i36 = HEAP32[i26 >> 2] | 0;
     i37 = HEAP32[i29 >> 2] | 0;
    } else {
     i36 = i27;
     i37 = i30;
    }
    i30 = i31 | (HEAPU8[i37 >> 0] | 0);
    i31 = i30 + -2 | 0;
    i27 = HEAP32[i1 >> 2] | 0;
    HEAP32[i27 + 20 >> 2] = 91;
    HEAP32[i27 + 24 >> 2] = HEAP32[i4 >> 2];
    HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i31;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
    HEAP32[i29 >> 2] = i37 + 1;
    HEAP32[i26 >> 2] = i36 + -1;
    if (i30 >>> 0 > 2) FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] & 63](i1, i31);
    break;
   }
  case 196:
   {
    i31 = HEAP32[i6 >> 2] | 0;
    i30 = i31 + 4 | 0;
    i26 = HEAP32[i30 >> 2] | 0;
    if (!i26) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i31 + 12 >> 2] & 127](i1) | 0)) {
      i23 = 144;
      break L1;
     }
     i38 = HEAP32[i30 >> 2] | 0;
    } else i38 = i26;
    i26 = HEAP32[i31 >> 2] | 0;
    i29 = i38 + -1 | 0;
    i27 = i26 + 1 | 0;
    i25 = (HEAPU8[i26 >> 0] | 0) << 8;
    if (!i29) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i31 + 12 >> 2] & 127](i1) | 0)) {
      i23 = 144;
      break L1;
     }
     i39 = HEAP32[i30 >> 2] | 0;
     i40 = HEAP32[i31 >> 2] | 0;
    } else {
     i39 = i29;
     i40 = i27;
    }
    i27 = i39 + -1 | 0;
    i29 = i40 + 1 | 0;
    i26 = i25 | (HEAPU8[i40 >> 0] | 0);
    i25 = i26 + -2 | 0;
    if (i26 >>> 0 > 18) {
     i26 = i31 + 12 | 0;
     i41 = i25;
     i42 = i29;
     i43 = i27;
     while (1) {
      if (!i43) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i44 = HEAP32[i30 >> 2] | 0;
       i45 = HEAP32[i31 >> 2] | 0;
      } else {
       i44 = i43;
       i45 = i42;
      }
      i46 = HEAPU8[i45 >> 0] | 0;
      i47 = HEAP32[i1 >> 2] | 0;
      HEAP32[i47 + 20 >> 2] = 80;
      HEAP32[i47 + 24 >> 2] = i46;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
      i47 = i44 + -1 | 0;
      i48 = i45 + 1 | 0;
      if (!i47) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i49 = HEAP32[i30 >> 2] | 0;
       i50 = HEAP32[i31 >> 2] | 0;
      } else {
       i49 = i47;
       i50 = i48;
      }
      i48 = HEAP8[i50 >> 0] | 0;
      i47 = i48 & 255;
      i51 = i49 + -1 | 0;
      i52 = i50 + 1 | 0;
      if (!i51) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i53 = HEAP32[i30 >> 2] | 0;
       i54 = HEAP32[i31 >> 2] | 0;
      } else {
       i53 = i51;
       i54 = i52;
      }
      i52 = HEAP8[i54 >> 0] | 0;
      i51 = i52 & 255;
      i55 = i51 + i47 | 0;
      i56 = i53 + -1 | 0;
      i57 = i54 + 1 | 0;
      if (!i56) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i58 = HEAP32[i30 >> 2] | 0;
       i59 = HEAP32[i31 >> 2] | 0;
      } else {
       i58 = i56;
       i59 = i57;
      }
      i57 = HEAP8[i59 >> 0] | 0;
      i56 = i57 & 255;
      i60 = i55 + i56 | 0;
      i55 = i58 + -1 | 0;
      i61 = i59 + 1 | 0;
      if (!i55) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i62 = HEAP32[i30 >> 2] | 0;
       i63 = HEAP32[i31 >> 2] | 0;
      } else {
       i62 = i55;
       i63 = i61;
      }
      i61 = HEAP8[i63 >> 0] | 0;
      i55 = i61 & 255;
      i64 = i60 + i55 | 0;
      i60 = i62 + -1 | 0;
      i65 = i63 + 1 | 0;
      if (!i60) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i66 = HEAP32[i30 >> 2] | 0;
       i67 = HEAP32[i31 >> 2] | 0;
      } else {
       i66 = i60;
       i67 = i65;
      }
      i65 = HEAP8[i67 >> 0] | 0;
      i60 = i65 & 255;
      i68 = i64 + i60 | 0;
      i64 = i66 + -1 | 0;
      i69 = i67 + 1 | 0;
      if (!i64) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i70 = HEAP32[i30 >> 2] | 0;
       i71 = HEAP32[i31 >> 2] | 0;
      } else {
       i70 = i64;
       i71 = i69;
      }
      i69 = HEAP8[i71 >> 0] | 0;
      i64 = i69 & 255;
      i72 = i68 + i64 | 0;
      i68 = i70 + -1 | 0;
      i73 = i71 + 1 | 0;
      if (!i68) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i74 = HEAP32[i30 >> 2] | 0;
       i75 = HEAP32[i31 >> 2] | 0;
      } else {
       i74 = i68;
       i75 = i73;
      }
      i73 = HEAP8[i75 >> 0] | 0;
      i68 = i73 & 255;
      i76 = i72 + i68 | 0;
      i72 = i74 + -1 | 0;
      i77 = i75 + 1 | 0;
      if (!i72) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i78 = HEAP32[i30 >> 2] | 0;
       i79 = HEAP32[i31 >> 2] | 0;
      } else {
       i78 = i72;
       i79 = i77;
      }
      i77 = HEAP8[i79 >> 0] | 0;
      i72 = i77 & 255;
      i80 = i76 + i72 | 0;
      i76 = i78 + -1 | 0;
      i81 = i79 + 1 | 0;
      if (!i76) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i82 = HEAP32[i30 >> 2] | 0;
       i83 = HEAP32[i31 >> 2] | 0;
      } else {
       i82 = i76;
       i83 = i81;
      }
      i81 = HEAP8[i83 >> 0] | 0;
      i76 = i81 & 255;
      i84 = i80 + i76 | 0;
      i80 = i82 + -1 | 0;
      i85 = i83 + 1 | 0;
      if (!i80) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i86 = HEAP32[i30 >> 2] | 0;
       i87 = HEAP32[i31 >> 2] | 0;
      } else {
       i86 = i80;
       i87 = i85;
      }
      i85 = HEAP8[i87 >> 0] | 0;
      i80 = i85 & 255;
      i88 = i84 + i80 | 0;
      i84 = i86 + -1 | 0;
      i89 = i87 + 1 | 0;
      if (!i84) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i90 = HEAP32[i30 >> 2] | 0;
       i91 = HEAP32[i31 >> 2] | 0;
      } else {
       i90 = i84;
       i91 = i89;
      }
      i89 = HEAP8[i91 >> 0] | 0;
      i84 = i89 & 255;
      i92 = i88 + i84 | 0;
      i88 = i90 + -1 | 0;
      i93 = i91 + 1 | 0;
      if (!i88) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i94 = HEAP32[i30 >> 2] | 0;
       i95 = HEAP32[i31 >> 2] | 0;
      } else {
       i94 = i88;
       i95 = i93;
      }
      i93 = HEAP8[i95 >> 0] | 0;
      i88 = i93 & 255;
      i96 = i92 + i88 | 0;
      i92 = i94 + -1 | 0;
      i97 = i95 + 1 | 0;
      if (!i92) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i98 = HEAP32[i30 >> 2] | 0;
       i99 = HEAP32[i31 >> 2] | 0;
      } else {
       i98 = i92;
       i99 = i97;
      }
      i97 = HEAP8[i99 >> 0] | 0;
      i92 = i97 & 255;
      i100 = i96 + i92 | 0;
      i96 = i98 + -1 | 0;
      i101 = i99 + 1 | 0;
      if (!i96) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i102 = HEAP32[i30 >> 2] | 0;
       i103 = HEAP32[i31 >> 2] | 0;
      } else {
       i102 = i96;
       i103 = i101;
      }
      i101 = HEAP8[i103 >> 0] | 0;
      i96 = i101 & 255;
      i104 = i100 + i96 | 0;
      i100 = i102 + -1 | 0;
      i105 = i103 + 1 | 0;
      if (!i100) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i106 = HEAP32[i30 >> 2] | 0;
       i107 = HEAP32[i31 >> 2] | 0;
      } else {
       i106 = i100;
       i107 = i105;
      }
      i105 = HEAP8[i107 >> 0] | 0;
      i100 = i105 & 255;
      i108 = i104 + i100 | 0;
      i104 = i106 + -1 | 0;
      i109 = i107 + 1 | 0;
      if (!i104) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
        i23 = 144;
        break L1;
       }
       i110 = HEAP32[i30 >> 2] | 0;
       i111 = HEAP32[i31 >> 2] | 0;
      } else {
       i110 = i104;
       i111 = i109;
      }
      i109 = HEAP8[i111 >> 0] | 0;
      i104 = i109 & 255;
      i112 = i108 + i104 | 0;
      i108 = i110 + -1 | 0;
      i113 = i111 + 1 | 0;
      i114 = i41 + -17 | 0;
      i115 = HEAP32[i1 >> 2] | 0;
      HEAP32[i115 + 24 >> 2] = i47;
      HEAP32[i115 + 28 >> 2] = i51;
      HEAP32[i115 + 32 >> 2] = i56;
      HEAP32[i115 + 36 >> 2] = i55;
      HEAP32[i115 + 40 >> 2] = i60;
      HEAP32[i115 + 44 >> 2] = i64;
      HEAP32[i115 + 48 >> 2] = i68;
      HEAP32[i115 + 52 >> 2] = i72;
      HEAP32[i115 + 20 >> 2] = 86;
      FUNCTION_TABLE_vii[HEAP32[i115 + 4 >> 2] & 63](i1, 2);
      i115 = HEAP32[i1 >> 2] | 0;
      HEAP32[i115 + 24 >> 2] = i76;
      HEAP32[i115 + 28 >> 2] = i80;
      HEAP32[i115 + 32 >> 2] = i84;
      HEAP32[i115 + 36 >> 2] = i88;
      HEAP32[i115 + 40 >> 2] = i92;
      HEAP32[i115 + 44 >> 2] = i96;
      HEAP32[i115 + 48 >> 2] = i100;
      HEAP32[i115 + 52 >> 2] = i104;
      HEAP32[i115 + 20 >> 2] = 86;
      FUNCTION_TABLE_vii[HEAP32[i115 + 4 >> 2] & 63](i1, 2);
      if (i112 >>> 0 > 256 | (i114 | 0) < (i112 | 0)) {
       i115 = HEAP32[i1 >> 2] | 0;
       HEAP32[i115 + 20 >> 2] = 8;
       FUNCTION_TABLE_vi[HEAP32[i115 >> 2] & 255](i1);
      }
      if (!i112) {
       i116 = i108;
       i117 = i113;
       i118 = 0;
      } else {
       i115 = 0;
       i104 = i113;
       i113 = i108;
       while (1) {
        if (!i113) {
         if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
          i23 = 144;
          break L1;
         }
         i119 = HEAP32[i30 >> 2] | 0;
         i120 = HEAP32[i31 >> 2] | 0;
        } else {
         i119 = i113;
         i120 = i104;
        }
        i108 = i119 + -1 | 0;
        i100 = i120 + 1 | 0;
        HEAP8[i3 + i115 >> 0] = HEAP8[i120 >> 0] | 0;
        i115 = i115 + 1 | 0;
        if (i115 >>> 0 >= i112 >>> 0) {
         i116 = i108;
         i117 = i100;
         i118 = i112;
         break;
        } else {
         i104 = i100;
         i113 = i108;
        }
       }
      }
      i113 = i114 - i118 | 0;
      i104 = (i46 & 16 | 0) == 0;
      i112 = i46 + -16 | 0;
      i115 = i104 ? i46 : i112;
      i108 = i104 ? i1 + 180 + (i46 << 2) | 0 : i1 + 196 + (i112 << 2) | 0;
      if (i115 >>> 0 > 3) {
       i112 = HEAP32[i1 >> 2] | 0;
       HEAP32[i112 + 20 >> 2] = 30;
       HEAP32[i112 + 24 >> 2] = i115;
       FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
      }
      i115 = HEAP32[i108 >> 2] | 0;
      if (!i115) {
       i112 = _jpeg_alloc_huff_table(i1) | 0;
       HEAP32[i108 >> 2] = i112;
       i121 = i112;
      } else i121 = i115;
      HEAP8[i121 >> 0] = 0;
      HEAP8[i121 + 1 >> 0] = i48;
      HEAP8[i121 + 2 >> 0] = i52;
      HEAP8[i121 + 3 >> 0] = i57;
      HEAP8[i121 + 4 >> 0] = i61;
      HEAP8[i121 + 5 >> 0] = i65;
      HEAP8[i121 + 6 >> 0] = i69;
      HEAP8[i121 + 7 >> 0] = i73;
      HEAP8[i121 + 8 >> 0] = i77;
      HEAP8[i121 + 9 >> 0] = i81;
      HEAP8[i121 + 10 >> 0] = i85;
      HEAP8[i121 + 11 >> 0] = i89;
      HEAP8[i121 + 12 >> 0] = i93;
      HEAP8[i121 + 13 >> 0] = i97;
      HEAP8[i121 + 14 >> 0] = i101;
      HEAP8[i121 + 15 >> 0] = i105;
      HEAP8[i121 + 16 >> 0] = i109;
      _memcpy((HEAP32[i108 >> 2] | 0) + 17 | 0, i3 | 0, 256) | 0;
      if ((i113 | 0) > 16) {
       i41 = i113;
       i42 = i117;
       i43 = i116;
      } else {
       i122 = i113;
       i123 = i116;
       i124 = i117;
       break;
      }
     }
    } else {
     i122 = i25;
     i123 = i27;
     i124 = i29;
    }
    if (i122 | 0) {
     i43 = HEAP32[i1 >> 2] | 0;
     HEAP32[i43 + 20 >> 2] = 11;
     FUNCTION_TABLE_vi[HEAP32[i43 >> 2] & 255](i1);
    }
    HEAP32[i31 >> 2] = i124;
    HEAP32[i30 >> 2] = i123;
    break;
   }
  case 219:
   {
    i43 = HEAP32[i6 >> 2] | 0;
    i42 = i43 + 4 | 0;
    i41 = HEAP32[i42 >> 2] | 0;
    if (!i41) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i43 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i125 = HEAP32[i42 >> 2] | 0;
    } else i125 = i41;
    i41 = HEAP32[i43 >> 2] | 0;
    i26 = i125 + -1 | 0;
    i113 = i41 + 1 | 0;
    i108 = (HEAPU8[i41 >> 0] | 0) << 8;
    if (!i26) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i43 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i126 = HEAP32[i42 >> 2] | 0;
     i127 = HEAP32[i43 >> 2] | 0;
    } else {
     i126 = i26;
     i127 = i113;
    }
    i113 = i126 + -1 | 0;
    i26 = i127 + 1 | 0;
    i41 = i108 | (HEAPU8[i127 >> 0] | 0);
    i108 = i41 + -2 | 0;
    if (i41 >>> 0 > 2) {
     i41 = i43 + 12 | 0;
     i115 = i108;
     i112 = i26;
     i104 = i113;
     while (1) {
      if (!i104) {
       if (!(FUNCTION_TABLE_ii[HEAP32[i41 >> 2] & 127](i1) | 0)) {
        i22 = 0;
        i23 = 211;
        break L1;
       }
       i128 = HEAP32[i42 >> 2] | 0;
       i129 = HEAP32[i43 >> 2] | 0;
      } else {
       i128 = i104;
       i129 = i112;
      }
      i100 = HEAPU8[i129 >> 0] | 0;
      i96 = i100 >>> 4;
      i92 = i100 & 15;
      i100 = HEAP32[i1 >> 2] | 0;
      HEAP32[i100 + 20 >> 2] = 81;
      HEAP32[i100 + 24 >> 2] = i92;
      HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i96;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
      if (i92 >>> 0 > 3) {
       i100 = HEAP32[i1 >> 2] | 0;
       HEAP32[i100 + 20 >> 2] = 31;
       HEAP32[i100 + 24 >> 2] = i92;
       FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
      }
      i100 = i1 + 164 + (i92 << 2) | 0;
      i92 = HEAP32[i100 >> 2] | 0;
      if (!i92) {
       i88 = _jpeg_alloc_quant_table(i1) | 0;
       HEAP32[i100 >> 2] = i88;
       i130 = i88;
      } else i130 = i92;
      i92 = i128 + -1 | 0;
      i88 = i129 + 1 | 0;
      i100 = (i96 | 0) == 0;
      if (i100) {
       i96 = 0;
       i84 = i88;
       i80 = i92;
       while (1) {
        if (!i80) {
         if (!(FUNCTION_TABLE_ii[HEAP32[i41 >> 2] & 127](i1) | 0)) {
          i22 = 0;
          i23 = 211;
          break L1;
         }
         i131 = HEAP32[i42 >> 2] | 0;
         i132 = HEAP32[i43 >> 2] | 0;
        } else {
         i131 = i80;
         i132 = i84;
        }
        HEAP16[i130 + (HEAP32[2560 + (i96 << 2) >> 2] << 1) >> 1] = HEAPU8[i132 >> 0] | 0;
        i96 = i96 + 1 | 0;
        i76 = i131 + -1 | 0;
        i72 = i132 + 1 | 0;
        if (i96 >>> 0 >= 64) {
         i133 = i76;
         i134 = i72;
         break;
        } else {
         i84 = i72;
         i80 = i76;
        }
       }
      } else {
       i80 = 0;
       i84 = i88;
       i96 = i92;
       while (1) {
        if (!i96) {
         if (!(FUNCTION_TABLE_ii[HEAP32[i41 >> 2] & 127](i1) | 0)) {
          i22 = 0;
          i23 = 211;
          break L1;
         }
         i135 = HEAP32[i42 >> 2] | 0;
         i136 = HEAP32[i43 >> 2] | 0;
        } else {
         i135 = i96;
         i136 = i84;
        }
        i109 = i135 + -1 | 0;
        i105 = i136 + 1 | 0;
        i101 = (HEAPU8[i136 >> 0] | 0) << 8;
        if (!i109) {
         if (!(FUNCTION_TABLE_ii[HEAP32[i41 >> 2] & 127](i1) | 0)) {
          i22 = 0;
          i23 = 211;
          break L1;
         }
         i137 = HEAP32[i42 >> 2] | 0;
         i138 = HEAP32[i43 >> 2] | 0;
        } else {
         i137 = i109;
         i138 = i105;
        }
        HEAP16[i130 + (HEAP32[2560 + (i80 << 2) >> 2] << 1) >> 1] = i101 | (HEAPU8[i138 >> 0] | 0);
        i80 = i80 + 1 | 0;
        i101 = i137 + -1 | 0;
        i105 = i138 + 1 | 0;
        if (i80 >>> 0 >= 64) {
         i133 = i101;
         i134 = i105;
         break;
        } else {
         i84 = i105;
         i96 = i101;
        }
       }
      }
      i96 = HEAP32[i1 >> 2] | 0;
      L188 : do if ((HEAP32[i96 + 104 >> 2] | 0) > 1) {
       i84 = 0;
       i80 = i96;
       while (1) {
        HEAP32[i80 + 24 >> 2] = HEAPU16[i130 + (i84 << 1) >> 1];
        HEAP32[i80 + 28 >> 2] = HEAPU16[i130 + ((i84 | 1) << 1) >> 1];
        HEAP32[i80 + 32 >> 2] = HEAPU16[i130 + ((i84 | 2) << 1) >> 1];
        HEAP32[i80 + 36 >> 2] = HEAPU16[i130 + ((i84 | 3) << 1) >> 1];
        HEAP32[i80 + 40 >> 2] = HEAPU16[i130 + ((i84 | 4) << 1) >> 1];
        HEAP32[i80 + 44 >> 2] = HEAPU16[i130 + ((i84 | 5) << 1) >> 1];
        HEAP32[i80 + 48 >> 2] = HEAPU16[i130 + ((i84 | 6) << 1) >> 1];
        HEAP32[i80 + 52 >> 2] = HEAPU16[i130 + ((i84 | 7) << 1) >> 1];
        HEAP32[i80 + 20 >> 2] = 93;
        FUNCTION_TABLE_vii[HEAP32[i80 + 4 >> 2] & 63](i1, 2);
        i92 = i84 + 8 | 0;
        if (i92 >>> 0 >= 64) break L188;
        i84 = i92;
        i80 = HEAP32[i1 >> 2] | 0;
       }
      } while (0);
      i96 = (i100 ? -65 : -129) + i115 | 0;
      if ((i96 | 0) > 0) {
       i115 = i96;
       i112 = i134;
       i104 = i133;
      } else {
       i139 = i96;
       i140 = i133;
       i141 = i134;
       break;
      }
     }
    } else {
     i139 = i108;
     i140 = i113;
     i141 = i26;
    }
    if (i139 | 0) {
     i104 = HEAP32[i1 >> 2] | 0;
     HEAP32[i104 + 20 >> 2] = 11;
     FUNCTION_TABLE_vi[HEAP32[i104 >> 2] & 255](i1);
    }
    HEAP32[i43 >> 2] = i141;
    HEAP32[i42 >> 2] = i140;
    break;
   }
  case 221:
   {
    i104 = HEAP32[i6 >> 2] | 0;
    i112 = i104 + 4 | 0;
    i115 = HEAP32[i112 >> 2] | 0;
    if (!i115) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i104 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i142 = HEAP32[i112 >> 2] | 0;
    } else i142 = i115;
    i115 = HEAP32[i104 >> 2] | 0;
    i41 = i142 + -1 | 0;
    i30 = i115 + 1 | 0;
    i31 = (HEAPU8[i115 >> 0] | 0) << 8;
    if (!i41) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i104 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i143 = HEAP32[i112 >> 2] | 0;
     i144 = HEAP32[i104 >> 2] | 0;
    } else {
     i143 = i41;
     i144 = i30;
    }
    i30 = i143 + -1 | 0;
    i41 = i144 + 1 | 0;
    if ((i31 | (HEAPU8[i144 >> 0] | 0) | 0) != 4) {
     i31 = HEAP32[i1 >> 2] | 0;
     HEAP32[i31 + 20 >> 2] = 11;
     FUNCTION_TABLE_vi[HEAP32[i31 >> 2] & 255](i1);
    }
    if (!i30) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i104 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i145 = HEAP32[i112 >> 2] | 0;
     i146 = HEAP32[i104 >> 2] | 0;
    } else {
     i145 = i30;
     i146 = i41;
    }
    i41 = i145 + -1 | 0;
    i30 = i146 + 1 | 0;
    i31 = (HEAPU8[i146 >> 0] | 0) << 8;
    if (!i41) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i104 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i147 = HEAP32[i112 >> 2] | 0;
     i148 = HEAP32[i104 >> 2] | 0;
    } else {
     i147 = i41;
     i148 = i30;
    }
    i30 = i31 | (HEAPU8[i148 >> 0] | 0);
    i31 = HEAP32[i1 >> 2] | 0;
    HEAP32[i31 + 20 >> 2] = 82;
    HEAP32[i31 + 24 >> 2] = i30;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
    HEAP32[i10 >> 2] = i30;
    HEAP32[i104 >> 2] = i148 + 1;
    HEAP32[i112 >> 2] = i147 + -1;
    break;
   }
  case 239:
  case 238:
  case 237:
  case 236:
  case 235:
  case 234:
  case 233:
  case 232:
  case 231:
  case 230:
  case 229:
  case 228:
  case 227:
  case 226:
  case 225:
  case 224:
   {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 32 + (i24 + -224 << 2) >> 2] & 127](i1) | 0)) {
     i22 = 0;
     i23 = 211;
     break L1;
    }
    break;
   }
  case 254:
   {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 127](i1) | 0)) {
     i22 = 0;
     i23 = 211;
     break L1;
    }
    break;
   }
  case 1:
  case 215:
  case 214:
  case 213:
  case 212:
  case 211:
  case 210:
  case 209:
  case 208:
   {
    i112 = HEAP32[i1 >> 2] | 0;
    HEAP32[i112 + 20 >> 2] = 92;
    HEAP32[i112 + 24 >> 2] = i24;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
    break;
   }
  case 220:
   {
    i112 = HEAP32[i6 >> 2] | 0;
    i104 = i112 + 4 | 0;
    i30 = HEAP32[i104 >> 2] | 0;
    if (!i30) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i112 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i149 = HEAP32[i104 >> 2] | 0;
    } else i149 = i30;
    i30 = HEAP32[i112 >> 2] | 0;
    i31 = i149 + -1 | 0;
    i41 = i30 + 1 | 0;
    i115 = (HEAPU8[i30 >> 0] | 0) << 8;
    if (!i31) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i112 + 12 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break L1;
     }
     i150 = HEAP32[i104 >> 2] | 0;
     i151 = HEAP32[i112 >> 2] | 0;
    } else {
     i150 = i31;
     i151 = i41;
    }
    i41 = i115 | (HEAPU8[i151 >> 0] | 0);
    i115 = i41 + -2 | 0;
    i31 = HEAP32[i1 >> 2] | 0;
    HEAP32[i31 + 20 >> 2] = 91;
    HEAP32[i31 + 24 >> 2] = HEAP32[i4 >> 2];
    HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i115;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
    HEAP32[i112 >> 2] = i151 + 1;
    HEAP32[i104 >> 2] = i150 + -1;
    if (i41 >>> 0 > 2) FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] & 63](i1, i115);
    break;
   }
  default:
   {
    i115 = HEAP32[i1 >> 2] | 0;
    HEAP32[i115 + 20 >> 2] = 68;
    HEAP32[i115 + 24 >> 2] = i24;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   }
  } while (0);
  HEAP32[i4 >> 2] = 0;
  i21 = 0;
 }
 if ((i23 | 0) == 24) {
  i21 = HEAP32[i6 >> 2] | 0;
  i6 = HEAP32[i21 >> 2] | 0;
  i24 = i21 + 4 | 0;
  i150 = HEAP32[i24 >> 2] | 0;
  if (!(HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0)) {
   i151 = HEAP32[i1 >> 2] | 0;
   HEAP32[i151 + 20 >> 2] = 62;
   FUNCTION_TABLE_vi[HEAP32[i151 >> 2] & 255](i1);
  }
  do if (!i150) if (!(FUNCTION_TABLE_ii[HEAP32[i21 + 12 >> 2] & 127](i1) | 0)) {
   i22 = 0;
   STACKTOP = i2;
   return i22 | 0;
  } else {
   i152 = HEAP32[i24 >> 2] | 0;
   i153 = HEAP32[i21 >> 2] | 0;
   break;
  } else {
   i152 = i150;
   i153 = i6;
  } while (0);
  i6 = i152 + -1 | 0;
  i152 = i153 + 1 | 0;
  i150 = (HEAPU8[i153 >> 0] | 0) << 8;
  do if (!i6) if (!(FUNCTION_TABLE_ii[HEAP32[i21 + 12 >> 2] & 127](i1) | 0)) {
   i22 = 0;
   STACKTOP = i2;
   return i22 | 0;
  } else {
   i154 = HEAP32[i24 >> 2] | 0;
   i155 = HEAP32[i21 >> 2] | 0;
   break;
  } else {
   i154 = i6;
   i155 = i152;
  } while (0);
  i152 = i154 + -1 | 0;
  i154 = i155 + 1 | 0;
  i6 = i150 | (HEAPU8[i155 >> 0] | 0);
  do if (!i152) if (!(FUNCTION_TABLE_ii[HEAP32[i21 + 12 >> 2] & 127](i1) | 0)) {
   i22 = 0;
   STACKTOP = i2;
   return i22 | 0;
  } else {
   i156 = HEAP32[i24 >> 2] | 0;
   i157 = HEAP32[i21 >> 2] | 0;
   break;
  } else {
   i156 = i152;
   i157 = i154;
  } while (0);
  i154 = HEAP8[i157 >> 0] | 0;
  i152 = i154 & 255;
  i155 = HEAP32[i1 >> 2] | 0;
  HEAP32[i155 + 20 >> 2] = 103;
  HEAP32[i155 + 24 >> 2] = i152;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
  if ((i154 + -1 & 255) > 3 | (i6 | 0) != ((i152 << 1) + 6 | 0)) {
   i6 = HEAP32[i1 >> 2] | 0;
   HEAP32[i6 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[i6 >> 2] & 255](i1);
   HEAP32[i1 + 328 >> 2] = i152;
   i6 = i156 + -1 | 0;
   i155 = i157 + 1 | 0;
   i150 = (i6 | 0) == 0;
   if (!(i154 << 24 >> 24)) {
    i158 = i6;
    i159 = i155;
    i160 = i150;
   } else {
    i161 = i155;
    i162 = i6;
    i163 = i150;
    i23 = 38;
   }
  } else {
   HEAP32[i1 + 328 >> 2] = i152;
   i150 = i156 + -1 | 0;
   i161 = i157 + 1 | 0;
   i162 = i150;
   i163 = (i150 | 0) == 0;
   i23 = 38;
  }
  L264 : do if ((i23 | 0) == 38) {
   i150 = i21 + 12 | 0;
   i157 = i1 + 216 | 0;
   i156 = i1 + 36 | 0;
   i6 = 0;
   i155 = i161;
   i154 = i162;
   i153 = i163;
   while (1) {
    if (i153) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i150 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break;
     }
     i164 = HEAP32[i24 >> 2] | 0;
     i165 = HEAP32[i21 >> 2] | 0;
    } else {
     i164 = i154;
     i165 = i155;
    }
    i151 = i164 + -1 | 0;
    i149 = i165 + 1 | 0;
    i147 = HEAPU8[i165 >> 0] | 0;
    if (!i151) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i150 >> 2] & 127](i1) | 0)) {
      i22 = 0;
      i23 = 211;
      break;
     }
     i166 = HEAP32[i24 >> 2] | 0;
     i167 = HEAP32[i21 >> 2] | 0;
    } else {
     i166 = i151;
     i167 = i149;
    }
    i149 = HEAPU8[i167 >> 0] | 0;
    i151 = HEAP32[i157 >> 2] | 0;
    i148 = HEAP32[i156 >> 2] | 0;
    L276 : do if ((i148 | 0) > 0) {
     i10 = i151;
     i146 = 0;
     while (1) {
      if ((HEAP32[i10 >> 2] | 0) == (i147 | 0)) {
       i168 = i10;
       break L276;
      }
      i146 = i146 + 1 | 0;
      i145 = i10 + 84 | 0;
      if ((i146 | 0) >= (i148 | 0)) {
       i169 = i145;
       i23 = 49;
       break;
      } else i10 = i145;
     }
    } else {
     i169 = i151;
     i23 = 49;
    } while (0);
    if ((i23 | 0) == 49) {
     i23 = 0;
     i151 = HEAP32[i1 >> 2] | 0;
     HEAP32[i151 + 20 >> 2] = 5;
     HEAP32[i151 + 24 >> 2] = i147;
     FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
     i168 = i169;
    }
    HEAP32[i1 + 332 + (i6 << 2) >> 2] = i168;
    i151 = i168 + 20 | 0;
    HEAP32[i151 >> 2] = i149 >>> 4;
    i148 = i168 + 24 | 0;
    HEAP32[i148 >> 2] = i149 & 15;
    i42 = HEAP32[i1 >> 2] | 0;
    HEAP32[i42 + 24 >> 2] = i147;
    HEAP32[i42 + 28 >> 2] = HEAP32[i151 >> 2];
    HEAP32[i42 + 32 >> 2] = HEAP32[i148 >> 2];
    HEAP32[i42 + 20 >> 2] = 104;
    FUNCTION_TABLE_vii[HEAP32[i42 + 4 >> 2] & 63](i1, 1);
    i6 = i6 + 1 | 0;
    i42 = i166 + -1 | 0;
    i148 = i167 + 1 | 0;
    i151 = (i42 | 0) == 0;
    if (i6 >>> 0 >= i152 >>> 0) {
     i158 = i42;
     i159 = i148;
     i160 = i151;
     break L264;
    } else {
     i155 = i148;
     i154 = i42;
     i153 = i151;
    }
   }
   if ((i23 | 0) == 211) {
    STACKTOP = i2;
    return i22 | 0;
   }
  } while (0);
  do if (i160) if (!(FUNCTION_TABLE_ii[HEAP32[i21 + 12 >> 2] & 127](i1) | 0)) {
   i22 = 0;
   STACKTOP = i2;
   return i22 | 0;
  } else {
   i170 = HEAP32[i24 >> 2] | 0;
   i171 = HEAP32[i21 >> 2] | 0;
   break;
  } else {
   i170 = i158;
   i171 = i159;
  } while (0);
  i159 = i170 + -1 | 0;
  i170 = i171 + 1 | 0;
  i158 = i1 + 400 | 0;
  HEAP32[i158 >> 2] = HEAPU8[i171 >> 0];
  do if (!i159) if (!(FUNCTION_TABLE_ii[HEAP32[i21 + 12 >> 2] & 127](i1) | 0)) {
   i22 = 0;
   STACKTOP = i2;
   return i22 | 0;
  } else {
   i172 = HEAP32[i24 >> 2] | 0;
   i173 = HEAP32[i21 >> 2] | 0;
   break;
  } else {
   i172 = i159;
   i173 = i170;
  } while (0);
  i170 = i172 + -1 | 0;
  i172 = i173 + 1 | 0;
  i159 = i1 + 404 | 0;
  HEAP32[i159 >> 2] = HEAPU8[i173 >> 0];
  do if (!i170) if (!(FUNCTION_TABLE_ii[HEAP32[i21 + 12 >> 2] & 127](i1) | 0)) {
   i22 = 0;
   STACKTOP = i2;
   return i22 | 0;
  } else {
   i174 = HEAP32[i24 >> 2] | 0;
   i175 = HEAP32[i21 >> 2] | 0;
   break;
  } else {
   i174 = i170;
   i175 = i172;
  } while (0);
  i172 = HEAPU8[i175 >> 0] | 0;
  i170 = i1 + 408 | 0;
  HEAP32[i170 >> 2] = i172 >>> 4;
  i173 = i1 + 412 | 0;
  HEAP32[i173 >> 2] = i172 & 15;
  i172 = HEAP32[i1 >> 2] | 0;
  HEAP32[i172 + 24 >> 2] = HEAP32[i158 >> 2];
  HEAP32[i172 + 28 >> 2] = HEAP32[i159 >> 2];
  HEAP32[i172 + 32 >> 2] = HEAP32[i170 >> 2];
  HEAP32[i172 + 36 >> 2] = HEAP32[i173 >> 2];
  HEAP32[i172 + 20 >> 2] = 105;
  FUNCTION_TABLE_vii[HEAP32[i172 + 4 >> 2] & 63](i1, 1);
  HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] = 0;
  i5 = i1 + 144 | 0;
  HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
  HEAP32[i21 >> 2] = i175 + 1;
  HEAP32[i24 >> 2] = i174 + -1;
  HEAP32[i4 >> 2] = 0;
  i22 = 1;
  STACKTOP = i2;
  return i22 | 0;
 } else if ((i23 | 0) == 61) {
  i174 = HEAP32[i1 >> 2] | 0;
  HEAP32[i174 + 20 >> 2] = 85;
  FUNCTION_TABLE_vii[HEAP32[i174 + 4 >> 2] & 63](i1, 1);
  HEAP32[i4 >> 2] = 0;
  i22 = 2;
  STACKTOP = i2;
  return i22 | 0;
 } else if ((i23 | 0) == 144) {
  i22 = 0;
  STACKTOP = i2;
  return i22 | 0;
 } else if ((i23 | 0) == 211) {
  STACKTOP = i2;
  return i22 | 0;
 }
 return 0;
}
function _malloc(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 do if (i1 >>> 0 < 245) {
  i4 = i1 >>> 0 < 11 ? 16 : i1 + 11 & -8;
  i5 = i4 >>> 3;
  i6 = HEAP32[14230] | 0;
  i7 = i6 >>> i5;
  if (i7 & 3 | 0) {
   i8 = (i7 & 1 ^ 1) + i5 | 0;
   i9 = 56960 + (i8 << 1 << 2) | 0;
   i10 = i9 + 8 | 0;
   i11 = HEAP32[i10 >> 2] | 0;
   i12 = i11 + 8 | 0;
   i13 = HEAP32[i12 >> 2] | 0;
   if ((i13 | 0) == (i9 | 0)) HEAP32[14230] = i6 & ~(1 << i8); else {
    HEAP32[i13 + 12 >> 2] = i9;
    HEAP32[i10 >> 2] = i13;
   }
   i13 = i8 << 3;
   HEAP32[i11 + 4 >> 2] = i13 | 3;
   i8 = i11 + i13 + 4 | 0;
   HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 1;
   i14 = i12;
   STACKTOP = i2;
   return i14 | 0;
  }
  i12 = HEAP32[14232] | 0;
  if (i4 >>> 0 > i12 >>> 0) {
   if (i7 | 0) {
    i8 = 2 << i5;
    i13 = i7 << i5 & (i8 | 0 - i8);
    i8 = (i13 & 0 - i13) + -1 | 0;
    i13 = i8 >>> 12 & 16;
    i5 = i8 >>> i13;
    i8 = i5 >>> 5 & 8;
    i7 = i5 >>> i8;
    i5 = i7 >>> 2 & 4;
    i11 = i7 >>> i5;
    i7 = i11 >>> 1 & 2;
    i10 = i11 >>> i7;
    i11 = i10 >>> 1 & 1;
    i9 = (i8 | i13 | i5 | i7 | i11) + (i10 >>> i11) | 0;
    i11 = 56960 + (i9 << 1 << 2) | 0;
    i10 = i11 + 8 | 0;
    i7 = HEAP32[i10 >> 2] | 0;
    i5 = i7 + 8 | 0;
    i13 = HEAP32[i5 >> 2] | 0;
    if ((i13 | 0) == (i11 | 0)) {
     i8 = i6 & ~(1 << i9);
     HEAP32[14230] = i8;
     i15 = i8;
    } else {
     HEAP32[i13 + 12 >> 2] = i11;
     HEAP32[i10 >> 2] = i13;
     i15 = i6;
    }
    i13 = i9 << 3;
    i9 = i13 - i4 | 0;
    HEAP32[i7 + 4 >> 2] = i4 | 3;
    i10 = i7 + i4 | 0;
    HEAP32[i10 + 4 >> 2] = i9 | 1;
    HEAP32[i7 + i13 >> 2] = i9;
    if (i12 | 0) {
     i13 = HEAP32[14235] | 0;
     i7 = i12 >>> 3;
     i11 = 56960 + (i7 << 1 << 2) | 0;
     i8 = 1 << i7;
     if (!(i15 & i8)) {
      HEAP32[14230] = i15 | i8;
      i16 = i11;
      i17 = i11 + 8 | 0;
     } else {
      i8 = i11 + 8 | 0;
      i16 = HEAP32[i8 >> 2] | 0;
      i17 = i8;
     }
     HEAP32[i17 >> 2] = i13;
     HEAP32[i16 + 12 >> 2] = i13;
     HEAP32[i13 + 8 >> 2] = i16;
     HEAP32[i13 + 12 >> 2] = i11;
    }
    HEAP32[14232] = i9;
    HEAP32[14235] = i10;
    i14 = i5;
    STACKTOP = i2;
    return i14 | 0;
   }
   i5 = HEAP32[14231] | 0;
   if (i5) {
    i10 = (i5 & 0 - i5) + -1 | 0;
    i9 = i10 >>> 12 & 16;
    i11 = i10 >>> i9;
    i10 = i11 >>> 5 & 8;
    i13 = i11 >>> i10;
    i11 = i13 >>> 2 & 4;
    i8 = i13 >>> i11;
    i13 = i8 >>> 1 & 2;
    i7 = i8 >>> i13;
    i8 = i7 >>> 1 & 1;
    i18 = HEAP32[57224 + ((i10 | i9 | i11 | i13 | i8) + (i7 >>> i8) << 2) >> 2] | 0;
    i8 = i18;
    i7 = i18;
    i13 = (HEAP32[i18 + 4 >> 2] & -8) - i4 | 0;
    while (1) {
     i18 = HEAP32[i8 + 16 >> 2] | 0;
     if (!i18) {
      i11 = HEAP32[i8 + 20 >> 2] | 0;
      if (!i11) break; else i19 = i11;
     } else i19 = i18;
     i18 = (HEAP32[i19 + 4 >> 2] & -8) - i4 | 0;
     i11 = i18 >>> 0 < i13 >>> 0;
     i8 = i19;
     i7 = i11 ? i19 : i7;
     i13 = i11 ? i18 : i13;
    }
    i8 = i7 + i4 | 0;
    if (i8 >>> 0 > i7 >>> 0) {
     i18 = HEAP32[i7 + 24 >> 2] | 0;
     i11 = HEAP32[i7 + 12 >> 2] | 0;
     do if ((i11 | 0) == (i7 | 0)) {
      i9 = i7 + 20 | 0;
      i10 = HEAP32[i9 >> 2] | 0;
      if (!i10) {
       i20 = i7 + 16 | 0;
       i21 = HEAP32[i20 >> 2] | 0;
       if (!i21) {
        i22 = 0;
        break;
       } else {
        i23 = i21;
        i24 = i20;
       }
      } else {
       i23 = i10;
       i24 = i9;
      }
      i9 = i23;
      i10 = i24;
      while (1) {
       i20 = i9 + 20 | 0;
       i21 = HEAP32[i20 >> 2] | 0;
       if (!i21) {
        i25 = i9 + 16 | 0;
        i26 = HEAP32[i25 >> 2] | 0;
        if (!i26) break; else {
         i27 = i26;
         i28 = i25;
        }
       } else {
        i27 = i21;
        i28 = i20;
       }
       i9 = i27;
       i10 = i28;
      }
      HEAP32[i10 >> 2] = 0;
      i22 = i9;
     } else {
      i20 = HEAP32[i7 + 8 >> 2] | 0;
      HEAP32[i20 + 12 >> 2] = i11;
      HEAP32[i11 + 8 >> 2] = i20;
      i22 = i11;
     } while (0);
     do if (i18 | 0) {
      i11 = HEAP32[i7 + 28 >> 2] | 0;
      i20 = 57224 + (i11 << 2) | 0;
      if ((i7 | 0) == (HEAP32[i20 >> 2] | 0)) {
       HEAP32[i20 >> 2] = i22;
       if (!i22) {
        HEAP32[14231] = i5 & ~(1 << i11);
        break;
       }
      } else {
       i11 = i18 + 16 | 0;
       HEAP32[((HEAP32[i11 >> 2] | 0) == (i7 | 0) ? i11 : i18 + 20 | 0) >> 2] = i22;
       if (!i22) break;
      }
      HEAP32[i22 + 24 >> 2] = i18;
      i11 = HEAP32[i7 + 16 >> 2] | 0;
      if (i11 | 0) {
       HEAP32[i22 + 16 >> 2] = i11;
       HEAP32[i11 + 24 >> 2] = i22;
      }
      i11 = HEAP32[i7 + 20 >> 2] | 0;
      if (i11 | 0) {
       HEAP32[i22 + 20 >> 2] = i11;
       HEAP32[i11 + 24 >> 2] = i22;
      }
     } while (0);
     if (i13 >>> 0 < 16) {
      i18 = i13 + i4 | 0;
      HEAP32[i7 + 4 >> 2] = i18 | 3;
      i5 = i7 + i18 + 4 | 0;
      HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 1;
     } else {
      HEAP32[i7 + 4 >> 2] = i4 | 3;
      HEAP32[i8 + 4 >> 2] = i13 | 1;
      HEAP32[i8 + i13 >> 2] = i13;
      if (i12 | 0) {
       i5 = HEAP32[14235] | 0;
       i18 = i12 >>> 3;
       i11 = 56960 + (i18 << 1 << 2) | 0;
       i20 = 1 << i18;
       if (!(i20 & i6)) {
        HEAP32[14230] = i20 | i6;
        i29 = i11;
        i30 = i11 + 8 | 0;
       } else {
        i20 = i11 + 8 | 0;
        i29 = HEAP32[i20 >> 2] | 0;
        i30 = i20;
       }
       HEAP32[i30 >> 2] = i5;
       HEAP32[i29 + 12 >> 2] = i5;
       HEAP32[i5 + 8 >> 2] = i29;
       HEAP32[i5 + 12 >> 2] = i11;
      }
      HEAP32[14232] = i13;
      HEAP32[14235] = i8;
     }
     i14 = i7 + 8 | 0;
     STACKTOP = i2;
     return i14 | 0;
    } else i31 = i4;
   } else i31 = i4;
  } else i31 = i4;
 } else if (i1 >>> 0 <= 4294967231) {
  i11 = i1 + 11 | 0;
  i5 = i11 & -8;
  i20 = HEAP32[14231] | 0;
  if (i20) {
   i18 = 0 - i5 | 0;
   i21 = i11 >>> 8;
   if (i21) if (i5 >>> 0 > 16777215) i32 = 31; else {
    i11 = (i21 + 1048320 | 0) >>> 16 & 8;
    i25 = i21 << i11;
    i21 = (i25 + 520192 | 0) >>> 16 & 4;
    i26 = i25 << i21;
    i25 = (i26 + 245760 | 0) >>> 16 & 2;
    i33 = 14 - (i21 | i11 | i25) + (i26 << i25 >>> 15) | 0;
    i32 = i5 >>> (i33 + 7 | 0) & 1 | i33 << 1;
   } else i32 = 0;
   i33 = HEAP32[57224 + (i32 << 2) >> 2] | 0;
   L79 : do if (!i33) {
    i34 = 0;
    i35 = 0;
    i36 = i18;
    i37 = 61;
   } else {
    i25 = 0;
    i26 = i18;
    i11 = i33;
    i21 = i5 << ((i32 | 0) == 31 ? 0 : 25 - (i32 >>> 1) | 0);
    i38 = 0;
    while (1) {
     i39 = (HEAP32[i11 + 4 >> 2] & -8) - i5 | 0;
     if (i39 >>> 0 < i26 >>> 0) if (!i39) {
      i40 = i11;
      i41 = 0;
      i42 = i11;
      i37 = 65;
      break L79;
     } else {
      i43 = i11;
      i44 = i39;
     } else {
      i43 = i25;
      i44 = i26;
     }
     i39 = HEAP32[i11 + 20 >> 2] | 0;
     i11 = HEAP32[i11 + 16 + (i21 >>> 31 << 2) >> 2] | 0;
     i45 = (i39 | 0) == 0 | (i39 | 0) == (i11 | 0) ? i38 : i39;
     if (!i11) {
      i34 = i45;
      i35 = i43;
      i36 = i44;
      i37 = 61;
      break;
     } else {
      i25 = i43;
      i26 = i44;
      i21 = i21 << 1;
      i38 = i45;
     }
    }
   } while (0);
   if ((i37 | 0) == 61) {
    if ((i34 | 0) == 0 & (i35 | 0) == 0) {
     i33 = 2 << i32;
     i18 = (i33 | 0 - i33) & i20;
     if (!i18) {
      i31 = i5;
      break;
     }
     i33 = (i18 & 0 - i18) + -1 | 0;
     i18 = i33 >>> 12 & 16;
     i4 = i33 >>> i18;
     i33 = i4 >>> 5 & 8;
     i7 = i4 >>> i33;
     i4 = i7 >>> 2 & 4;
     i8 = i7 >>> i4;
     i7 = i8 >>> 1 & 2;
     i13 = i8 >>> i7;
     i8 = i13 >>> 1 & 1;
     i46 = 0;
     i47 = HEAP32[57224 + ((i33 | i18 | i4 | i7 | i8) + (i13 >>> i8) << 2) >> 2] | 0;
    } else {
     i46 = i35;
     i47 = i34;
    }
    if (!i47) {
     i48 = i46;
     i49 = i36;
    } else {
     i40 = i46;
     i41 = i36;
     i42 = i47;
     i37 = 65;
    }
   }
   if ((i37 | 0) == 65) {
    i8 = i40;
    i13 = i41;
    i7 = i42;
    while (1) {
     i4 = (HEAP32[i7 + 4 >> 2] & -8) - i5 | 0;
     i18 = i4 >>> 0 < i13 >>> 0;
     i33 = i18 ? i4 : i13;
     i4 = i18 ? i7 : i8;
     i18 = HEAP32[i7 + 16 >> 2] | 0;
     if (!i18) i50 = HEAP32[i7 + 20 >> 2] | 0; else i50 = i18;
     if (!i50) {
      i48 = i4;
      i49 = i33;
      break;
     } else {
      i8 = i4;
      i13 = i33;
      i7 = i50;
     }
    }
   }
   if (((i48 | 0) != 0 ? i49 >>> 0 < ((HEAP32[14232] | 0) - i5 | 0) >>> 0 : 0) ? (i7 = i48 + i5 | 0, i7 >>> 0 > i48 >>> 0) : 0) {
    i13 = HEAP32[i48 + 24 >> 2] | 0;
    i8 = HEAP32[i48 + 12 >> 2] | 0;
    do if ((i8 | 0) == (i48 | 0)) {
     i33 = i48 + 20 | 0;
     i4 = HEAP32[i33 >> 2] | 0;
     if (!i4) {
      i18 = i48 + 16 | 0;
      i6 = HEAP32[i18 >> 2] | 0;
      if (!i6) {
       i51 = 0;
       break;
      } else {
       i52 = i6;
       i53 = i18;
      }
     } else {
      i52 = i4;
      i53 = i33;
     }
     i33 = i52;
     i4 = i53;
     while (1) {
      i18 = i33 + 20 | 0;
      i6 = HEAP32[i18 >> 2] | 0;
      if (!i6) {
       i12 = i33 + 16 | 0;
       i38 = HEAP32[i12 >> 2] | 0;
       if (!i38) break; else {
        i54 = i38;
        i55 = i12;
       }
      } else {
       i54 = i6;
       i55 = i18;
      }
      i33 = i54;
      i4 = i55;
     }
     HEAP32[i4 >> 2] = 0;
     i51 = i33;
    } else {
     i18 = HEAP32[i48 + 8 >> 2] | 0;
     HEAP32[i18 + 12 >> 2] = i8;
     HEAP32[i8 + 8 >> 2] = i18;
     i51 = i8;
    } while (0);
    do if (i13) {
     i8 = HEAP32[i48 + 28 >> 2] | 0;
     i18 = 57224 + (i8 << 2) | 0;
     if ((i48 | 0) == (HEAP32[i18 >> 2] | 0)) {
      HEAP32[i18 >> 2] = i51;
      if (!i51) {
       i18 = i20 & ~(1 << i8);
       HEAP32[14231] = i18;
       i56 = i18;
       break;
      }
     } else {
      i18 = i13 + 16 | 0;
      HEAP32[((HEAP32[i18 >> 2] | 0) == (i48 | 0) ? i18 : i13 + 20 | 0) >> 2] = i51;
      if (!i51) {
       i56 = i20;
       break;
      }
     }
     HEAP32[i51 + 24 >> 2] = i13;
     i18 = HEAP32[i48 + 16 >> 2] | 0;
     if (i18 | 0) {
      HEAP32[i51 + 16 >> 2] = i18;
      HEAP32[i18 + 24 >> 2] = i51;
     }
     i18 = HEAP32[i48 + 20 >> 2] | 0;
     if (i18) {
      HEAP32[i51 + 20 >> 2] = i18;
      HEAP32[i18 + 24 >> 2] = i51;
      i56 = i20;
     } else i56 = i20;
    } else i56 = i20; while (0);
    L128 : do if (i49 >>> 0 < 16) {
     i20 = i49 + i5 | 0;
     HEAP32[i48 + 4 >> 2] = i20 | 3;
     i13 = i48 + i20 + 4 | 0;
     HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
    } else {
     HEAP32[i48 + 4 >> 2] = i5 | 3;
     HEAP32[i7 + 4 >> 2] = i49 | 1;
     HEAP32[i7 + i49 >> 2] = i49;
     i13 = i49 >>> 3;
     if (i49 >>> 0 < 256) {
      i20 = 56960 + (i13 << 1 << 2) | 0;
      i18 = HEAP32[14230] | 0;
      i8 = 1 << i13;
      if (!(i18 & i8)) {
       HEAP32[14230] = i18 | i8;
       i57 = i20;
       i58 = i20 + 8 | 0;
      } else {
       i8 = i20 + 8 | 0;
       i57 = HEAP32[i8 >> 2] | 0;
       i58 = i8;
      }
      HEAP32[i58 >> 2] = i7;
      HEAP32[i57 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i57;
      HEAP32[i7 + 12 >> 2] = i20;
      break;
     }
     i20 = i49 >>> 8;
     if (i20) if (i49 >>> 0 > 16777215) i59 = 31; else {
      i8 = (i20 + 1048320 | 0) >>> 16 & 8;
      i18 = i20 << i8;
      i20 = (i18 + 520192 | 0) >>> 16 & 4;
      i13 = i18 << i20;
      i18 = (i13 + 245760 | 0) >>> 16 & 2;
      i6 = 14 - (i20 | i8 | i18) + (i13 << i18 >>> 15) | 0;
      i59 = i49 >>> (i6 + 7 | 0) & 1 | i6 << 1;
     } else i59 = 0;
     i6 = 57224 + (i59 << 2) | 0;
     HEAP32[i7 + 28 >> 2] = i59;
     i18 = i7 + 16 | 0;
     HEAP32[i18 + 4 >> 2] = 0;
     HEAP32[i18 >> 2] = 0;
     i18 = 1 << i59;
     if (!(i56 & i18)) {
      HEAP32[14231] = i56 | i18;
      HEAP32[i6 >> 2] = i7;
      HEAP32[i7 + 24 >> 2] = i6;
      HEAP32[i7 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i7;
      break;
     }
     i18 = HEAP32[i6 >> 2] | 0;
     L145 : do if ((HEAP32[i18 + 4 >> 2] & -8 | 0) == (i49 | 0)) i60 = i18; else {
      i6 = i49 << ((i59 | 0) == 31 ? 0 : 25 - (i59 >>> 1) | 0);
      i13 = i18;
      while (1) {
       i61 = i13 + 16 + (i6 >>> 31 << 2) | 0;
       i8 = HEAP32[i61 >> 2] | 0;
       if (!i8) break;
       if ((HEAP32[i8 + 4 >> 2] & -8 | 0) == (i49 | 0)) {
        i60 = i8;
        break L145;
       } else {
        i6 = i6 << 1;
        i13 = i8;
       }
      }
      HEAP32[i61 >> 2] = i7;
      HEAP32[i7 + 24 >> 2] = i13;
      HEAP32[i7 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i7;
      break L128;
     } while (0);
     i18 = i60 + 8 | 0;
     i33 = HEAP32[i18 >> 2] | 0;
     HEAP32[i33 + 12 >> 2] = i7;
     HEAP32[i18 >> 2] = i7;
     HEAP32[i7 + 8 >> 2] = i33;
     HEAP32[i7 + 12 >> 2] = i60;
     HEAP32[i7 + 24 >> 2] = 0;
    } while (0);
    i14 = i48 + 8 | 0;
    STACKTOP = i2;
    return i14 | 0;
   } else i31 = i5;
  } else i31 = i5;
 } else i31 = -1; while (0);
 i48 = HEAP32[14232] | 0;
 if (i48 >>> 0 >= i31 >>> 0) {
  i60 = i48 - i31 | 0;
  i61 = HEAP32[14235] | 0;
  if (i60 >>> 0 > 15) {
   i49 = i61 + i31 | 0;
   HEAP32[14235] = i49;
   HEAP32[14232] = i60;
   HEAP32[i49 + 4 >> 2] = i60 | 1;
   HEAP32[i61 + i48 >> 2] = i60;
   HEAP32[i61 + 4 >> 2] = i31 | 3;
  } else {
   HEAP32[14232] = 0;
   HEAP32[14235] = 0;
   HEAP32[i61 + 4 >> 2] = i48 | 3;
   i60 = i61 + i48 + 4 | 0;
   HEAP32[i60 >> 2] = HEAP32[i60 >> 2] | 1;
  }
  i14 = i61 + 8 | 0;
  STACKTOP = i2;
  return i14 | 0;
 }
 i61 = HEAP32[14233] | 0;
 if (i61 >>> 0 > i31 >>> 0) {
  i60 = i61 - i31 | 0;
  HEAP32[14233] = i60;
  i48 = HEAP32[14236] | 0;
  i49 = i48 + i31 | 0;
  HEAP32[14236] = i49;
  HEAP32[i49 + 4 >> 2] = i60 | 1;
  HEAP32[i48 + 4 >> 2] = i31 | 3;
  i14 = i48 + 8 | 0;
  STACKTOP = i2;
  return i14 | 0;
 }
 if (!(HEAP32[14348] | 0)) {
  HEAP32[14350] = 4096;
  HEAP32[14349] = 4096;
  HEAP32[14351] = -1;
  HEAP32[14352] = -1;
  HEAP32[14353] = 0;
  HEAP32[14341] = 0;
  HEAP32[14348] = i3 & -16 ^ 1431655768;
  i62 = 4096;
 } else i62 = HEAP32[14350] | 0;
 i3 = i31 + 48 | 0;
 i48 = i31 + 47 | 0;
 i60 = i62 + i48 | 0;
 i49 = 0 - i62 | 0;
 i62 = i60 & i49;
 if (i62 >>> 0 <= i31 >>> 0) {
  i14 = 0;
  STACKTOP = i2;
  return i14 | 0;
 }
 i59 = HEAP32[14340] | 0;
 if (i59 | 0 ? (i56 = HEAP32[14338] | 0, i57 = i56 + i62 | 0, i57 >>> 0 <= i56 >>> 0 | i57 >>> 0 > i59 >>> 0) : 0) {
  i14 = 0;
  STACKTOP = i2;
  return i14 | 0;
 }
 L178 : do if (!(HEAP32[14341] & 4)) {
  i59 = HEAP32[14236] | 0;
  L180 : do if (i59) {
   i57 = 57368;
   while (1) {
    i56 = HEAP32[i57 >> 2] | 0;
    if (i56 >>> 0 <= i59 >>> 0 ? (i56 + (HEAP32[i57 + 4 >> 2] | 0) | 0) >>> 0 > i59 >>> 0 : 0) break;
    i56 = HEAP32[i57 + 8 >> 2] | 0;
    if (!i56) {
     i37 = 128;
     break L180;
    } else i57 = i56;
   }
   i56 = i60 - i61 & i49;
   if (i56 >>> 0 < 2147483647) {
    i58 = _sbrk(i56 | 0) | 0;
    if ((i58 | 0) == ((HEAP32[i57 >> 2] | 0) + (HEAP32[i57 + 4 >> 2] | 0) | 0)) if ((i58 | 0) == (-1 | 0)) i63 = i56; else {
     i64 = i56;
     i65 = i58;
     i37 = 145;
     break L178;
    } else {
     i66 = i58;
     i67 = i56;
     i37 = 136;
    }
   } else i63 = 0;
  } else i37 = 128; while (0);
  do if ((i37 | 0) == 128) {
   i59 = _sbrk(0) | 0;
   if ((i59 | 0) != (-1 | 0) ? (i5 = i59, i56 = HEAP32[14349] | 0, i58 = i56 + -1 | 0, i51 = ((i58 & i5 | 0) == 0 ? 0 : (i58 + i5 & 0 - i56) - i5 | 0) + i62 | 0, i5 = HEAP32[14338] | 0, i56 = i51 + i5 | 0, i51 >>> 0 > i31 >>> 0 & i51 >>> 0 < 2147483647) : 0) {
    i58 = HEAP32[14340] | 0;
    if (i58 | 0 ? i56 >>> 0 <= i5 >>> 0 | i56 >>> 0 > i58 >>> 0 : 0) {
     i63 = 0;
     break;
    }
    i58 = _sbrk(i51 | 0) | 0;
    if ((i58 | 0) == (i59 | 0)) {
     i64 = i51;
     i65 = i59;
     i37 = 145;
     break L178;
    } else {
     i66 = i58;
     i67 = i51;
     i37 = 136;
    }
   } else i63 = 0;
  } while (0);
  do if ((i37 | 0) == 136) {
   i51 = 0 - i67 | 0;
   if (!(i3 >>> 0 > i67 >>> 0 & (i67 >>> 0 < 2147483647 & (i66 | 0) != (-1 | 0)))) if ((i66 | 0) == (-1 | 0)) {
    i63 = 0;
    break;
   } else {
    i64 = i67;
    i65 = i66;
    i37 = 145;
    break L178;
   }
   i58 = HEAP32[14350] | 0;
   i59 = i48 - i67 + i58 & 0 - i58;
   if (i59 >>> 0 >= 2147483647) {
    i64 = i67;
    i65 = i66;
    i37 = 145;
    break L178;
   }
   if ((_sbrk(i59 | 0) | 0) == (-1 | 0)) {
    _sbrk(i51 | 0) | 0;
    i63 = 0;
    break;
   } else {
    i64 = i59 + i67 | 0;
    i65 = i66;
    i37 = 145;
    break L178;
   }
  } while (0);
  HEAP32[14341] = HEAP32[14341] | 4;
  i68 = i63;
  i37 = 143;
 } else {
  i68 = 0;
  i37 = 143;
 } while (0);
 if (((i37 | 0) == 143 ? i62 >>> 0 < 2147483647 : 0) ? (i63 = _sbrk(i62 | 0) | 0, i62 = _sbrk(0) | 0, i66 = i62 - i63 | 0, i67 = i66 >>> 0 > (i31 + 40 | 0) >>> 0, !((i63 | 0) == (-1 | 0) | i67 ^ 1 | i63 >>> 0 < i62 >>> 0 & ((i63 | 0) != (-1 | 0) & (i62 | 0) != (-1 | 0)) ^ 1)) : 0) {
  i64 = i67 ? i66 : i68;
  i65 = i63;
  i37 = 145;
 }
 if ((i37 | 0) == 145) {
  i63 = (HEAP32[14338] | 0) + i64 | 0;
  HEAP32[14338] = i63;
  if (i63 >>> 0 > (HEAP32[14339] | 0) >>> 0) HEAP32[14339] = i63;
  i63 = HEAP32[14236] | 0;
  L215 : do if (i63) {
   i68 = 57368;
   while (1) {
    i69 = HEAP32[i68 >> 2] | 0;
    i70 = HEAP32[i68 + 4 >> 2] | 0;
    if ((i65 | 0) == (i69 + i70 | 0)) {
     i37 = 154;
     break;
    }
    i66 = HEAP32[i68 + 8 >> 2] | 0;
    if (!i66) break; else i68 = i66;
   }
   if (((i37 | 0) == 154 ? (i66 = i68 + 4 | 0, (HEAP32[i68 + 12 >> 2] & 8 | 0) == 0) : 0) ? i65 >>> 0 > i63 >>> 0 & i69 >>> 0 <= i63 >>> 0 : 0) {
    HEAP32[i66 >> 2] = i70 + i64;
    i66 = (HEAP32[14233] | 0) + i64 | 0;
    i67 = i63 + 8 | 0;
    i62 = (i67 & 7 | 0) == 0 ? 0 : 0 - i67 & 7;
    i67 = i63 + i62 | 0;
    i48 = i66 - i62 | 0;
    HEAP32[14236] = i67;
    HEAP32[14233] = i48;
    HEAP32[i67 + 4 >> 2] = i48 | 1;
    HEAP32[i63 + i66 + 4 >> 2] = 40;
    HEAP32[14237] = HEAP32[14352];
    break;
   }
   if (i65 >>> 0 < (HEAP32[14234] | 0) >>> 0) HEAP32[14234] = i65;
   i66 = i65 + i64 | 0;
   i48 = 57368;
   while (1) {
    if ((HEAP32[i48 >> 2] | 0) == (i66 | 0)) {
     i37 = 162;
     break;
    }
    i67 = HEAP32[i48 + 8 >> 2] | 0;
    if (!i67) break; else i48 = i67;
   }
   if ((i37 | 0) == 162 ? (HEAP32[i48 + 12 >> 2] & 8 | 0) == 0 : 0) {
    HEAP32[i48 >> 2] = i65;
    i68 = i48 + 4 | 0;
    HEAP32[i68 >> 2] = (HEAP32[i68 >> 2] | 0) + i64;
    i68 = i65 + 8 | 0;
    i67 = i65 + ((i68 & 7 | 0) == 0 ? 0 : 0 - i68 & 7) | 0;
    i68 = i66 + 8 | 0;
    i62 = i66 + ((i68 & 7 | 0) == 0 ? 0 : 0 - i68 & 7) | 0;
    i68 = i67 + i31 | 0;
    i3 = i62 - i67 - i31 | 0;
    HEAP32[i67 + 4 >> 2] = i31 | 3;
    L238 : do if ((i63 | 0) == (i62 | 0)) {
     i49 = (HEAP32[14233] | 0) + i3 | 0;
     HEAP32[14233] = i49;
     HEAP32[14236] = i68;
     HEAP32[i68 + 4 >> 2] = i49 | 1;
    } else {
     if ((HEAP32[14235] | 0) == (i62 | 0)) {
      i49 = (HEAP32[14232] | 0) + i3 | 0;
      HEAP32[14232] = i49;
      HEAP32[14235] = i68;
      HEAP32[i68 + 4 >> 2] = i49 | 1;
      HEAP32[i68 + i49 >> 2] = i49;
      break;
     }
     i49 = HEAP32[i62 + 4 >> 2] | 0;
     if ((i49 & 3 | 0) == 1) {
      i61 = i49 & -8;
      i60 = i49 >>> 3;
      L246 : do if (i49 >>> 0 < 256) {
       i59 = HEAP32[i62 + 8 >> 2] | 0;
       i51 = HEAP32[i62 + 12 >> 2] | 0;
       if ((i51 | 0) == (i59 | 0)) {
        HEAP32[14230] = HEAP32[14230] & ~(1 << i60);
        break;
       } else {
        HEAP32[i59 + 12 >> 2] = i51;
        HEAP32[i51 + 8 >> 2] = i59;
        break;
       }
      } else {
       i59 = HEAP32[i62 + 24 >> 2] | 0;
       i51 = HEAP32[i62 + 12 >> 2] | 0;
       do if ((i51 | 0) == (i62 | 0)) {
        i58 = i62 + 16 | 0;
        i56 = i58 + 4 | 0;
        i5 = HEAP32[i56 >> 2] | 0;
        if (!i5) {
         i55 = HEAP32[i58 >> 2] | 0;
         if (!i55) {
          i71 = 0;
          break;
         } else {
          i72 = i55;
          i73 = i58;
         }
        } else {
         i72 = i5;
         i73 = i56;
        }
        i56 = i72;
        i5 = i73;
        while (1) {
         i58 = i56 + 20 | 0;
         i55 = HEAP32[i58 >> 2] | 0;
         if (!i55) {
          i54 = i56 + 16 | 0;
          i53 = HEAP32[i54 >> 2] | 0;
          if (!i53) break; else {
           i74 = i53;
           i75 = i54;
          }
         } else {
          i74 = i55;
          i75 = i58;
         }
         i56 = i74;
         i5 = i75;
        }
        HEAP32[i5 >> 2] = 0;
        i71 = i56;
       } else {
        i58 = HEAP32[i62 + 8 >> 2] | 0;
        HEAP32[i58 + 12 >> 2] = i51;
        HEAP32[i51 + 8 >> 2] = i58;
        i71 = i51;
       } while (0);
       if (!i59) break;
       i51 = HEAP32[i62 + 28 >> 2] | 0;
       i13 = 57224 + (i51 << 2) | 0;
       do if ((HEAP32[i13 >> 2] | 0) != (i62 | 0)) {
        i58 = i59 + 16 | 0;
        HEAP32[((HEAP32[i58 >> 2] | 0) == (i62 | 0) ? i58 : i59 + 20 | 0) >> 2] = i71;
        if (!i71) break L246;
       } else {
        HEAP32[i13 >> 2] = i71;
        if (i71 | 0) break;
        HEAP32[14231] = HEAP32[14231] & ~(1 << i51);
        break L246;
       } while (0);
       HEAP32[i71 + 24 >> 2] = i59;
       i51 = i62 + 16 | 0;
       i13 = HEAP32[i51 >> 2] | 0;
       if (i13 | 0) {
        HEAP32[i71 + 16 >> 2] = i13;
        HEAP32[i13 + 24 >> 2] = i71;
       }
       i13 = HEAP32[i51 + 4 >> 2] | 0;
       if (!i13) break;
       HEAP32[i71 + 20 >> 2] = i13;
       HEAP32[i13 + 24 >> 2] = i71;
      } while (0);
      i76 = i62 + i61 | 0;
      i77 = i61 + i3 | 0;
     } else {
      i76 = i62;
      i77 = i3;
     }
     i60 = i76 + 4 | 0;
     HEAP32[i60 >> 2] = HEAP32[i60 >> 2] & -2;
     HEAP32[i68 + 4 >> 2] = i77 | 1;
     HEAP32[i68 + i77 >> 2] = i77;
     i60 = i77 >>> 3;
     if (i77 >>> 0 < 256) {
      i49 = 56960 + (i60 << 1 << 2) | 0;
      i57 = HEAP32[14230] | 0;
      i13 = 1 << i60;
      if (!(i57 & i13)) {
       HEAP32[14230] = i57 | i13;
       i78 = i49;
       i79 = i49 + 8 | 0;
      } else {
       i13 = i49 + 8 | 0;
       i78 = HEAP32[i13 >> 2] | 0;
       i79 = i13;
      }
      HEAP32[i79 >> 2] = i68;
      HEAP32[i78 + 12 >> 2] = i68;
      HEAP32[i68 + 8 >> 2] = i78;
      HEAP32[i68 + 12 >> 2] = i49;
      break;
     }
     i49 = i77 >>> 8;
     do if (!i49) i80 = 0; else {
      if (i77 >>> 0 > 16777215) {
       i80 = 31;
       break;
      }
      i13 = (i49 + 1048320 | 0) >>> 16 & 8;
      i57 = i49 << i13;
      i60 = (i57 + 520192 | 0) >>> 16 & 4;
      i51 = i57 << i60;
      i57 = (i51 + 245760 | 0) >>> 16 & 2;
      i58 = 14 - (i60 | i13 | i57) + (i51 << i57 >>> 15) | 0;
      i80 = i77 >>> (i58 + 7 | 0) & 1 | i58 << 1;
     } while (0);
     i49 = 57224 + (i80 << 2) | 0;
     HEAP32[i68 + 28 >> 2] = i80;
     i61 = i68 + 16 | 0;
     HEAP32[i61 + 4 >> 2] = 0;
     HEAP32[i61 >> 2] = 0;
     i61 = HEAP32[14231] | 0;
     i58 = 1 << i80;
     if (!(i61 & i58)) {
      HEAP32[14231] = i61 | i58;
      HEAP32[i49 >> 2] = i68;
      HEAP32[i68 + 24 >> 2] = i49;
      HEAP32[i68 + 12 >> 2] = i68;
      HEAP32[i68 + 8 >> 2] = i68;
      break;
     }
     i58 = HEAP32[i49 >> 2] | 0;
     L291 : do if ((HEAP32[i58 + 4 >> 2] & -8 | 0) == (i77 | 0)) i81 = i58; else {
      i49 = i77 << ((i80 | 0) == 31 ? 0 : 25 - (i80 >>> 1) | 0);
      i61 = i58;
      while (1) {
       i82 = i61 + 16 + (i49 >>> 31 << 2) | 0;
       i57 = HEAP32[i82 >> 2] | 0;
       if (!i57) break;
       if ((HEAP32[i57 + 4 >> 2] & -8 | 0) == (i77 | 0)) {
        i81 = i57;
        break L291;
       } else {
        i49 = i49 << 1;
        i61 = i57;
       }
      }
      HEAP32[i82 >> 2] = i68;
      HEAP32[i68 + 24 >> 2] = i61;
      HEAP32[i68 + 12 >> 2] = i68;
      HEAP32[i68 + 8 >> 2] = i68;
      break L238;
     } while (0);
     i58 = i81 + 8 | 0;
     i49 = HEAP32[i58 >> 2] | 0;
     HEAP32[i49 + 12 >> 2] = i68;
     HEAP32[i58 >> 2] = i68;
     HEAP32[i68 + 8 >> 2] = i49;
     HEAP32[i68 + 12 >> 2] = i81;
     HEAP32[i68 + 24 >> 2] = 0;
    } while (0);
    i14 = i67 + 8 | 0;
    STACKTOP = i2;
    return i14 | 0;
   }
   i68 = 57368;
   while (1) {
    i3 = HEAP32[i68 >> 2] | 0;
    if (i3 >>> 0 <= i63 >>> 0 ? (i83 = i3 + (HEAP32[i68 + 4 >> 2] | 0) | 0, i83 >>> 0 > i63 >>> 0) : 0) break;
    i68 = HEAP32[i68 + 8 >> 2] | 0;
   }
   i68 = i83 + -47 | 0;
   i67 = i68 + 8 | 0;
   i3 = i68 + ((i67 & 7 | 0) == 0 ? 0 : 0 - i67 & 7) | 0;
   i67 = i63 + 16 | 0;
   i68 = i3 >>> 0 < i67 >>> 0 ? i63 : i3;
   i3 = i68 + 8 | 0;
   i62 = i64 + -40 | 0;
   i66 = i65 + 8 | 0;
   i48 = (i66 & 7 | 0) == 0 ? 0 : 0 - i66 & 7;
   i66 = i65 + i48 | 0;
   i49 = i62 - i48 | 0;
   HEAP32[14236] = i66;
   HEAP32[14233] = i49;
   HEAP32[i66 + 4 >> 2] = i49 | 1;
   HEAP32[i65 + i62 + 4 >> 2] = 40;
   HEAP32[14237] = HEAP32[14352];
   i62 = i68 + 4 | 0;
   HEAP32[i62 >> 2] = 27;
   HEAP32[i3 >> 2] = HEAP32[14342];
   HEAP32[i3 + 4 >> 2] = HEAP32[14343];
   HEAP32[i3 + 8 >> 2] = HEAP32[14344];
   HEAP32[i3 + 12 >> 2] = HEAP32[14345];
   HEAP32[14342] = i65;
   HEAP32[14343] = i64;
   HEAP32[14345] = 0;
   HEAP32[14344] = i3;
   i3 = i68 + 24 | 0;
   do {
    i49 = i3;
    i3 = i3 + 4 | 0;
    HEAP32[i3 >> 2] = 7;
   } while ((i49 + 8 | 0) >>> 0 < i83 >>> 0);
   if ((i68 | 0) != (i63 | 0)) {
    i3 = i68 - i63 | 0;
    HEAP32[i62 >> 2] = HEAP32[i62 >> 2] & -2;
    HEAP32[i63 + 4 >> 2] = i3 | 1;
    HEAP32[i68 >> 2] = i3;
    i49 = i3 >>> 3;
    if (i3 >>> 0 < 256) {
     i66 = 56960 + (i49 << 1 << 2) | 0;
     i48 = HEAP32[14230] | 0;
     i58 = 1 << i49;
     if (!(i48 & i58)) {
      HEAP32[14230] = i48 | i58;
      i84 = i66;
      i85 = i66 + 8 | 0;
     } else {
      i58 = i66 + 8 | 0;
      i84 = HEAP32[i58 >> 2] | 0;
      i85 = i58;
     }
     HEAP32[i85 >> 2] = i63;
     HEAP32[i84 + 12 >> 2] = i63;
     HEAP32[i63 + 8 >> 2] = i84;
     HEAP32[i63 + 12 >> 2] = i66;
     break;
    }
    i66 = i3 >>> 8;
    if (i66) if (i3 >>> 0 > 16777215) i86 = 31; else {
     i58 = (i66 + 1048320 | 0) >>> 16 & 8;
     i48 = i66 << i58;
     i66 = (i48 + 520192 | 0) >>> 16 & 4;
     i49 = i48 << i66;
     i48 = (i49 + 245760 | 0) >>> 16 & 2;
     i59 = 14 - (i66 | i58 | i48) + (i49 << i48 >>> 15) | 0;
     i86 = i3 >>> (i59 + 7 | 0) & 1 | i59 << 1;
    } else i86 = 0;
    i59 = 57224 + (i86 << 2) | 0;
    HEAP32[i63 + 28 >> 2] = i86;
    HEAP32[i63 + 20 >> 2] = 0;
    HEAP32[i67 >> 2] = 0;
    i48 = HEAP32[14231] | 0;
    i49 = 1 << i86;
    if (!(i48 & i49)) {
     HEAP32[14231] = i48 | i49;
     HEAP32[i59 >> 2] = i63;
     HEAP32[i63 + 24 >> 2] = i59;
     HEAP32[i63 + 12 >> 2] = i63;
     HEAP32[i63 + 8 >> 2] = i63;
     break;
    }
    i49 = HEAP32[i59 >> 2] | 0;
    L325 : do if ((HEAP32[i49 + 4 >> 2] & -8 | 0) == (i3 | 0)) i87 = i49; else {
     i59 = i3 << ((i86 | 0) == 31 ? 0 : 25 - (i86 >>> 1) | 0);
     i48 = i49;
     while (1) {
      i88 = i48 + 16 + (i59 >>> 31 << 2) | 0;
      i58 = HEAP32[i88 >> 2] | 0;
      if (!i58) break;
      if ((HEAP32[i58 + 4 >> 2] & -8 | 0) == (i3 | 0)) {
       i87 = i58;
       break L325;
      } else {
       i59 = i59 << 1;
       i48 = i58;
      }
     }
     HEAP32[i88 >> 2] = i63;
     HEAP32[i63 + 24 >> 2] = i48;
     HEAP32[i63 + 12 >> 2] = i63;
     HEAP32[i63 + 8 >> 2] = i63;
     break L215;
    } while (0);
    i3 = i87 + 8 | 0;
    i49 = HEAP32[i3 >> 2] | 0;
    HEAP32[i49 + 12 >> 2] = i63;
    HEAP32[i3 >> 2] = i63;
    HEAP32[i63 + 8 >> 2] = i49;
    HEAP32[i63 + 12 >> 2] = i87;
    HEAP32[i63 + 24 >> 2] = 0;
   }
  } else {
   i49 = HEAP32[14234] | 0;
   if ((i49 | 0) == 0 | i65 >>> 0 < i49 >>> 0) HEAP32[14234] = i65;
   HEAP32[14342] = i65;
   HEAP32[14343] = i64;
   HEAP32[14345] = 0;
   HEAP32[14239] = HEAP32[14348];
   HEAP32[14238] = -1;
   HEAP32[14243] = 56960;
   HEAP32[14242] = 56960;
   HEAP32[14245] = 56968;
   HEAP32[14244] = 56968;
   HEAP32[14247] = 56976;
   HEAP32[14246] = 56976;
   HEAP32[14249] = 56984;
   HEAP32[14248] = 56984;
   HEAP32[14251] = 56992;
   HEAP32[14250] = 56992;
   HEAP32[14253] = 57e3;
   HEAP32[14252] = 57e3;
   HEAP32[14255] = 57008;
   HEAP32[14254] = 57008;
   HEAP32[14257] = 57016;
   HEAP32[14256] = 57016;
   HEAP32[14259] = 57024;
   HEAP32[14258] = 57024;
   HEAP32[14261] = 57032;
   HEAP32[14260] = 57032;
   HEAP32[14263] = 57040;
   HEAP32[14262] = 57040;
   HEAP32[14265] = 57048;
   HEAP32[14264] = 57048;
   HEAP32[14267] = 57056;
   HEAP32[14266] = 57056;
   HEAP32[14269] = 57064;
   HEAP32[14268] = 57064;
   HEAP32[14271] = 57072;
   HEAP32[14270] = 57072;
   HEAP32[14273] = 57080;
   HEAP32[14272] = 57080;
   HEAP32[14275] = 57088;
   HEAP32[14274] = 57088;
   HEAP32[14277] = 57096;
   HEAP32[14276] = 57096;
   HEAP32[14279] = 57104;
   HEAP32[14278] = 57104;
   HEAP32[14281] = 57112;
   HEAP32[14280] = 57112;
   HEAP32[14283] = 57120;
   HEAP32[14282] = 57120;
   HEAP32[14285] = 57128;
   HEAP32[14284] = 57128;
   HEAP32[14287] = 57136;
   HEAP32[14286] = 57136;
   HEAP32[14289] = 57144;
   HEAP32[14288] = 57144;
   HEAP32[14291] = 57152;
   HEAP32[14290] = 57152;
   HEAP32[14293] = 57160;
   HEAP32[14292] = 57160;
   HEAP32[14295] = 57168;
   HEAP32[14294] = 57168;
   HEAP32[14297] = 57176;
   HEAP32[14296] = 57176;
   HEAP32[14299] = 57184;
   HEAP32[14298] = 57184;
   HEAP32[14301] = 57192;
   HEAP32[14300] = 57192;
   HEAP32[14303] = 57200;
   HEAP32[14302] = 57200;
   HEAP32[14305] = 57208;
   HEAP32[14304] = 57208;
   i49 = i64 + -40 | 0;
   i3 = i65 + 8 | 0;
   i67 = (i3 & 7 | 0) == 0 ? 0 : 0 - i3 & 7;
   i3 = i65 + i67 | 0;
   i68 = i49 - i67 | 0;
   HEAP32[14236] = i3;
   HEAP32[14233] = i68;
   HEAP32[i3 + 4 >> 2] = i68 | 1;
   HEAP32[i65 + i49 + 4 >> 2] = 40;
   HEAP32[14237] = HEAP32[14352];
  } while (0);
  i65 = HEAP32[14233] | 0;
  if (i65 >>> 0 > i31 >>> 0) {
   i64 = i65 - i31 | 0;
   HEAP32[14233] = i64;
   i65 = HEAP32[14236] | 0;
   i63 = i65 + i31 | 0;
   HEAP32[14236] = i63;
   HEAP32[i63 + 4 >> 2] = i64 | 1;
   HEAP32[i65 + 4 >> 2] = i31 | 3;
   i14 = i65 + 8 | 0;
   STACKTOP = i2;
   return i14 | 0;
  }
 }
 i65 = ___errno_location() | 0;
 HEAP32[i65 >> 2] = 12;
 i14 = 0;
 STACKTOP = i2;
 return i14 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4;
 L1 : do if ((i2 - i1 | 0) > 1) do switch (HEAP8[i1 >> 0] | 0) {
 case 97:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50545);
     i6 = i3 + 4 | 0;
     i7 = HEAP32[i6 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 110:
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50556);
     i6 = i3 + 4 | 0;
     i7 = HEAP32[i6 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 78:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50566);
     i6 = i3 + 4 | 0;
     i7 = HEAP32[i6 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50577);
     i6 = i3 + 4 | 0;
     i7 = HEAP32[i6 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 99:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50587);
     i6 = i3 + 4 | 0;
     i7 = HEAP32[i6 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50598);
     i6 = i3 + 4 | 0;
     i7 = HEAP32[i6 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50608);
     i6 = i3 + 4 | 0;
     i7 = HEAP32[i6 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 118:
    {
     i6 = i3 + 63 | 0;
     i7 = HEAP8[i6 >> 0] | 0;
     HEAP8[i6 >> 0] = 0;
     i9 = i1 + 2 | 0;
     i10 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i9, i2, i3) | 0;
     HEAP8[i6 >> 0] = i7;
     if ((i10 | 0) == (i9 | 0)) {
      i8 = i1;
      break L1;
     }
     i9 = HEAP32[i3 + 4 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i9 | 0)) {
      i8 = i1;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i9 + -24 | 0, 0, 50618) | 0;
     HEAP8[i3 + 60 >> 0] = 1;
     i8 = i10;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 100:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc(i5, 50628);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50646);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm16EEERAT__Kc(i5);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 118:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50656);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 86:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50666);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 101:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50677);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 79:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50687);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 113:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50698);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 103:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50709);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50720);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 105:
  {
   if ((HEAP8[i1 + 1 >> 0] | 0) != 120) {
    i8 = i1;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50730);
   i10 = i3 + 4 | 0;
   i9 = HEAP32[i10 >> 2] | 0;
   if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
    HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i8 = i1 + 2 | 0;
   break L1;
   break;
  }
 case 108:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50741);
     i10 = i3 + 4 | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 105:
    {
     i10 = i1 + 2 | 0;
     i9 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i10, i2, i3) | 0;
     if ((i9 | 0) == (i10 | 0)) {
      i8 = i1;
      break L1;
     }
     i10 = HEAP32[i3 + 4 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i10 | 0)) {
      i8 = i1;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i10 + -24 | 0, 0, 50752) | 0;
     i8 = i9;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50764);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i5, 50775);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50787);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 109:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50797);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 73:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50807);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50646);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 76:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50818);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50829);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 110:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i5, 50840);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50855);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 103:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50797);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50866);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 119:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i5, 50876);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 111:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50889);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 114:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50900);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 82:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50910);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 112:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i5, 50921);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50933);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 76:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50943);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 112:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50954);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50933);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50965);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 113:
  {
   if ((HEAP8[i1 + 1 >> 0] | 0) != 117) {
    i8 = i1;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50976);
   i9 = i3 + 4 | 0;
   i10 = HEAP32[i9 >> 2] | 0;
   if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
    HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i8 = i1 + 2 | 0;
   break L1;
   break;
  }
 case 114:
  {
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 50986);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 77:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 50996);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 51007);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i5, 51018);
     i9 = i3 + 4 | 0;
     i10 = HEAP32[i9 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i8 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i8 = i1;
     break L1;
    }
   }
   break;
  }
 case 118:
  {
   if (((HEAP8[i1 + 1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
    i8 = i1;
    break L1;
   }
   i9 = i1 + 2 | 0;
   i10 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i9, i2, i3) | 0;
   if ((i10 | 0) == (i9 | 0)) {
    i8 = i1;
    break L1;
   }
   i9 = HEAP32[i3 + 4 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i9 | 0)) {
    i8 = i1;
    break L1;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i9 + -24 | 0, 0, 50618) | 0;
   i8 = i10;
   break L1;
   break;
  }
 default:
  {
   i8 = i1;
   break L1;
  }
 } while (0); else i8 = i1; while (0);
 STACKTOP = i4;
 return i8 | 0;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0, i89 = 0, i90 = 0, i91 = 0, i92 = 0, i93 = 0, i94 = 0, i95 = 0, i96 = 0, i97 = 0, i98 = 0, i99 = 0, i100 = 0, i101 = 0, i102 = 0, i103 = 0, i104 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 i13 = i12 + 488 | 0;
 i14 = i12;
 i15 = i12 + 480 | 0;
 i16 = i12 + 472 | 0;
 i17 = i12 + 468 | 0;
 i18 = i12 + 496 | 0;
 i19 = i12 + 493 | 0;
 i20 = i12 + 492 | 0;
 i21 = i12 + 456 | 0;
 i22 = i12 + 444 | 0;
 i23 = i12 + 432 | 0;
 i24 = i12 + 420 | 0;
 i25 = i12 + 408 | 0;
 i26 = i12 + 404 | 0;
 i27 = i12 + 400 | 0;
 HEAP32[i13 >> 2] = i11;
 HEAP32[i15 >> 2] = i14;
 HEAP32[i15 + 4 >> 2] = 143;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = i14 + 400;
 HEAP32[i21 >> 2] = 0;
 HEAP32[i21 + 4 >> 2] = 0;
 HEAP32[i21 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i21 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i22 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 HEAP32[i23 >> 2] = 0;
 HEAP32[i23 + 4 >> 2] = 0;
 HEAP32[i23 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i23 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i24 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 HEAP32[i25 >> 2] = 0;
 HEAP32[i25 + 4 >> 2] = 0;
 HEAP32[i25 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i25 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(i3, i4, i18, i19, i20, i21, i22, i23, i24, i26);
 HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
 i4 = i8 + 8 | 0;
 i8 = i23 + 11 | 0;
 i3 = i23 + 4 | 0;
 i14 = i24 + 11 | 0;
 i11 = i24 + 4 | 0;
 i28 = i21 + 11 | 0;
 i29 = i21 + 4 | 0;
 i30 = (i5 & 512 | 0) != 0;
 i5 = i22 + 11 | 0;
 i31 = i18 + 3 | 0;
 i32 = i22 + 4 | 0;
 i33 = i25 + 11 | 0;
 i34 = i25 + 4 | 0;
 i35 = 0;
 i36 = 0;
 L21 : while (1) {
  if (i36 >>> 0 >= 4) {
   i37 = 243;
   break;
  }
  i38 = HEAP32[i1 >> 2] | 0;
  do if (i38) {
   i39 = HEAP32[i38 + 12 >> 2] | 0;
   if ((i39 | 0) == (HEAP32[i38 + 16 >> 2] | 0)) i40 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i40 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i39 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i40, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i1 >> 2] = 0;
    i41 = 1;
    break;
   } else {
    i41 = (HEAP32[i1 >> 2] | 0) == 0;
    break;
   }
  } else i41 = 1; while (0);
  i38 = HEAP32[i2 >> 2] | 0;
  do if (i38) {
   i39 = HEAP32[i38 + 12 >> 2] | 0;
   if ((i39 | 0) == (HEAP32[i38 + 16 >> 2] | 0)) i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i42 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i39 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i42, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i41) {
    i43 = i38;
    break;
   } else {
    i37 = 243;
    break L21;
   } else {
    HEAP32[i2 >> 2] = 0;
    i37 = 31;
    break;
   }
  } else i37 = 31; while (0);
  if ((i37 | 0) == 31) {
   i37 = 0;
   if (i41) {
    i37 = 243;
    break;
   } else i43 = 0;
  }
  L46 : do switch (HEAP8[i18 + i36 >> 0] | 0) {
  case 1:
   {
    if ((i36 | 0) == 3) i44 = i35; else {
     i38 = HEAP32[i1 >> 2] | 0;
     i39 = HEAP32[i38 + 12 >> 2] | 0;
     if ((i39 | 0) == (HEAP32[i38 + 16 >> 2] | 0)) i45 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i45 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i39 >> 0] | 0) | 0;
     if ((i45 & 255) << 24 >> 24 <= -1) {
      i37 = 45;
      break L21;
     }
     if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i45 << 24 >> 24 << 1) >> 1] & 8192)) {
      i37 = 45;
      break L21;
     }
     i39 = HEAP32[i1 >> 2] | 0;
     i38 = i39 + 12 | 0;
     i46 = HEAP32[i38 >> 2] | 0;
     if ((i46 | 0) == (HEAP32[i39 + 16 >> 2] | 0)) i47 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i39 >> 2] | 0) + 40 >> 2] & 127](i39) | 0; else {
      HEAP32[i38 >> 2] = i46 + 1;
      i47 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i46 >> 0] | 0) | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i25, i47 & 255);
     i37 = 47;
    }
    break;
   }
  case 0:
   {
    if ((i36 | 0) == 3) i44 = i35; else i37 = 47;
    break;
   }
  case 3:
   {
    i46 = HEAP8[i8 >> 0] | 0;
    i38 = i46 << 24 >> 24 < 0 ? HEAP32[i3 >> 2] | 0 : i46 & 255;
    i46 = HEAP8[i14 >> 0] | 0;
    i39 = i46 << 24 >> 24 < 0 ? HEAP32[i11 >> 2] | 0 : i46 & 255;
    if ((i38 | 0) == (0 - i39 | 0)) i44 = i35; else {
     i46 = (i38 | 0) == 0;
     i38 = HEAP32[i1 >> 2] | 0;
     i48 = HEAP32[i38 + 12 >> 2] | 0;
     i49 = (i48 | 0) == (HEAP32[i38 + 16 >> 2] | 0);
     if (i46 | (i39 | 0) == 0) {
      if (i49) i50 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i50 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i48 >> 0] | 0) | 0;
      i39 = i50 & 255;
      if (i46) {
       if ((HEAP8[((HEAP8[i14 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24) >> 0] | 0) != i39 << 24 >> 24) {
        i44 = i35;
        break L46;
       }
       i46 = HEAP32[i1 >> 2] | 0;
       i51 = i46 + 12 | 0;
       i52 = HEAP32[i51 >> 2] | 0;
       if ((i52 | 0) == (HEAP32[i46 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i46 >> 2] | 0) + 40 >> 2] & 127](i46) | 0; else {
        HEAP32[i51 >> 2] = i52 + 1;
        __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i52 >> 0] | 0) | 0;
       }
       HEAP8[i7 >> 0] = 1;
       i52 = HEAP8[i14 >> 0] | 0;
       i44 = (i52 << 24 >> 24 < 0 ? HEAP32[i11 >> 2] | 0 : i52 & 255) >>> 0 > 1 ? i24 : i35;
       break L46;
      }
      if ((HEAP8[((HEAP8[i8 >> 0] | 0) < 0 ? HEAP32[i23 >> 2] | 0 : i23) >> 0] | 0) != i39 << 24 >> 24) {
       HEAP8[i7 >> 0] = 1;
       i44 = i35;
       break L46;
      }
      i39 = HEAP32[i1 >> 2] | 0;
      i52 = i39 + 12 | 0;
      i51 = HEAP32[i52 >> 2] | 0;
      if ((i51 | 0) == (HEAP32[i39 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i39 >> 2] | 0) + 40 >> 2] & 127](i39) | 0; else {
       HEAP32[i52 >> 2] = i51 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i51 >> 0] | 0) | 0;
      }
      i51 = HEAP8[i8 >> 0] | 0;
      i44 = (i51 << 24 >> 24 < 0 ? HEAP32[i3 >> 2] | 0 : i51 & 255) >>> 0 > 1 ? i23 : i35;
      break L46;
     }
     if (i49) i53 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i53 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i48 >> 0] | 0) | 0;
     i48 = HEAP32[i1 >> 2] | 0;
     i38 = i48 + 12 | 0;
     i49 = HEAP32[i38 >> 2] | 0;
     i51 = (i49 | 0) == (HEAP32[i48 + 16 >> 2] | 0);
     if ((HEAP8[((HEAP8[i8 >> 0] | 0) < 0 ? HEAP32[i23 >> 2] | 0 : i23) >> 0] | 0) == (i53 & 255) << 24 >> 24) {
      if (i51) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 40 >> 2] & 127](i48) | 0; else {
       HEAP32[i38 >> 2] = i49 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i49 >> 0] | 0) | 0;
      }
      i38 = HEAP8[i8 >> 0] | 0;
      i44 = (i38 << 24 >> 24 < 0 ? HEAP32[i3 >> 2] | 0 : i38 & 255) >>> 0 > 1 ? i23 : i35;
      break L46;
     }
     if (i51) i54 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 36 >> 2] & 127](i48) | 0; else i54 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i49 >> 0] | 0) | 0;
     if ((HEAP8[((HEAP8[i14 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24) >> 0] | 0) != (i54 & 255) << 24 >> 24) {
      i37 = 105;
      break L21;
     }
     i49 = HEAP32[i1 >> 2] | 0;
     i48 = i49 + 12 | 0;
     i51 = HEAP32[i48 >> 2] | 0;
     if ((i51 | 0) == (HEAP32[i49 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i49 >> 2] | 0) + 40 >> 2] & 127](i49) | 0; else {
      HEAP32[i48 >> 2] = i51 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i51 >> 0] | 0) | 0;
     }
     HEAP8[i7 >> 0] = 1;
     i51 = HEAP8[i14 >> 0] | 0;
     i44 = (i51 << 24 >> 24 < 0 ? HEAP32[i11 >> 2] | 0 : i51 & 255) >>> 0 > 1 ? i24 : i35;
    }
    break;
   }
  case 2:
   {
    if (i36 >>> 0 < 2 | (i35 | 0) != 0) {
     i51 = HEAP8[i5 >> 0] | 0;
     i48 = i51 << 24 >> 24 < 0;
     i49 = HEAP32[i22 >> 2] | 0;
     i38 = i48 ? i49 : i22;
     i52 = i38;
     if (!i36) {
      i55 = i52;
      i56 = i49;
      i57 = i51;
     } else {
      i58 = i51;
      i59 = i48;
      i60 = i38;
      i61 = i52;
      i62 = i49;
      i37 = 110;
     }
    } else {
     if (!(i30 | (i36 | 0) == 2 & (HEAP8[i31 >> 0] | 0) != 0)) {
      i44 = 0;
      break L46;
     }
     i49 = HEAP8[i5 >> 0] | 0;
     i52 = i49 << 24 >> 24 < 0;
     i38 = HEAP32[i22 >> 2] | 0;
     i48 = i52 ? i38 : i22;
     i58 = i49;
     i59 = i52;
     i60 = i48;
     i61 = i48;
     i62 = i38;
     i37 = 110;
    }
    L109 : do if ((i37 | 0) == 110) {
     i37 = 0;
     if ((HEAPU8[i18 + (i36 + -1) >> 0] | 0) < 2) {
      i38 = i60 + (i59 ? HEAP32[i32 >> 2] | 0 : i58 & 255) | 0;
      i48 = i61;
      while (1) {
       i52 = i48;
       if ((i38 | 0) == (i52 | 0)) break;
       i49 = HEAP8[i52 >> 0] | 0;
       if (i49 << 24 >> 24 <= -1) break;
       if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i49 << 24 >> 24 << 1) >> 1] & 8192)) break;
       i48 = i52 + 1 | 0;
      }
      i38 = i48 - i61 | 0;
      i52 = HEAP8[i33 >> 0] | 0;
      i49 = i52 << 24 >> 24 < 0;
      i51 = HEAP32[i34 >> 2] | 0;
      i39 = i52 & 255;
      if (i38 >>> 0 <= (i49 ? i51 : i39) >>> 0) {
       i52 = (HEAP32[i25 >> 2] | 0) + i51 | 0;
       i51 = i25 + i39 | 0;
       i39 = i49 ? i52 : i51;
       i46 = i60;
       i63 = i49 ? i52 + (0 - i38) | 0 : i51 + (0 - i38) | 0;
       while (1) {
        if ((i63 | 0) == (i39 | 0)) {
         i55 = i48;
         i56 = i62;
         i57 = i58;
         break L109;
        }
        if ((HEAP8[i63 >> 0] | 0) != (HEAP8[i46 >> 0] | 0)) {
         i55 = i61;
         i56 = i62;
         i57 = i58;
         break L109;
        }
        i46 = i46 + 1 | 0;
        i63 = i63 + 1 | 0;
       }
      } else {
       i55 = i61;
       i56 = i62;
       i57 = i58;
      }
     } else {
      i55 = i61;
      i56 = i62;
      i57 = i58;
     }
    } while (0);
    i63 = i55;
    i46 = i57;
    i48 = i56;
    i39 = i43;
    L124 : while (1) {
     i38 = i46 << 24 >> 24 < 0;
     if ((i63 | 0) == ((i38 ? i48 : i22) + (i38 ? HEAP32[i32 >> 2] | 0 : i46 & 255) | 0)) break;
     i38 = HEAP32[i1 >> 2] | 0;
     do if (i38) {
      i51 = HEAP32[i38 + 12 >> 2] | 0;
      if ((i51 | 0) == (HEAP32[i38 + 16 >> 2] | 0)) i64 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i64 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i51 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i64, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[i1 >> 2] = 0;
       i65 = 1;
       break;
      } else {
       i65 = (HEAP32[i1 >> 2] | 0) == 0;
       break;
      }
     } else i65 = 1; while (0);
     do if (i39) {
      i38 = HEAP32[i39 + 12 >> 2] | 0;
      if ((i38 | 0) == (HEAP32[i39 + 16 >> 2] | 0)) i66 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i39 >> 2] | 0) + 36 >> 2] & 127](i39) | 0; else i66 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i38 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i66, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i65) {
       i67 = i39;
       break;
      } else break L124; else {
       HEAP32[i2 >> 2] = 0;
       i37 = 136;
       break;
      }
     } else i37 = 136; while (0);
     if ((i37 | 0) == 136) {
      i37 = 0;
      if (i65) break; else i67 = 0;
     }
     i38 = HEAP32[i1 >> 2] | 0;
     i51 = HEAP32[i38 + 12 >> 2] | 0;
     if ((i51 | 0) == (HEAP32[i38 + 16 >> 2] | 0)) i68 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i68 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i51 >> 0] | 0) | 0;
     if ((HEAP8[i63 >> 0] | 0) != (i68 & 255) << 24 >> 24) break;
     i51 = HEAP32[i1 >> 2] | 0;
     i38 = i51 + 12 | 0;
     i52 = HEAP32[i38 >> 2] | 0;
     if ((i52 | 0) == (HEAP32[i51 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i51 >> 2] | 0) + 40 >> 2] & 127](i51) | 0; else {
      HEAP32[i38 >> 2] = i52 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i52 >> 0] | 0) | 0;
     }
     i63 = i63 + 1 | 0;
     i46 = HEAP8[i5 >> 0] | 0;
     i48 = HEAP32[i22 >> 2] | 0;
     i39 = i67;
    }
    if (i30 ? (i39 = HEAP8[i5 >> 0] | 0, i48 = i39 << 24 >> 24 < 0, (i63 | 0) != ((i48 ? HEAP32[i22 >> 2] | 0 : i22) + (i48 ? HEAP32[i32 >> 2] | 0 : i39 & 255) | 0)) : 0) {
     i37 = 148;
     break L21;
    } else i44 = i35;
    break;
   }
  case 4:
   {
    i39 = 0;
    i48 = i43;
    i46 = i43;
    L161 : while (1) {
     i52 = HEAP32[i1 >> 2] | 0;
     do if (i52) {
      i38 = HEAP32[i52 + 12 >> 2] | 0;
      if ((i38 | 0) == (HEAP32[i52 + 16 >> 2] | 0)) i69 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i52 >> 2] | 0) + 36 >> 2] & 127](i52) | 0; else i69 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i38 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i69, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[i1 >> 2] = 0;
       i70 = 1;
       break;
      } else {
       i70 = (HEAP32[i1 >> 2] | 0) == 0;
       break;
      }
     } else i70 = 1; while (0);
     do if (i48) {
      i52 = HEAP32[i48 + 12 >> 2] | 0;
      if ((i52 | 0) == (HEAP32[i48 + 16 >> 2] | 0)) i71 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 36 >> 2] & 127](i48) | 0; else i71 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i52 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i71, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i70) {
       i72 = i46;
       i73 = i48;
       break;
      } else {
       i74 = i46;
       break L161;
      } else {
       HEAP32[i2 >> 2] = 0;
       i75 = 0;
       i37 = 162;
       break;
      }
     } else {
      i75 = i46;
      i37 = 162;
     } while (0);
     if ((i37 | 0) == 162) {
      i37 = 0;
      if (i70) {
       i74 = i75;
       break;
      } else {
       i72 = i75;
       i73 = 0;
      }
     }
     i52 = HEAP32[i1 >> 2] | 0;
     i38 = HEAP32[i52 + 12 >> 2] | 0;
     if ((i38 | 0) == (HEAP32[i52 + 16 >> 2] | 0)) i76 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i52 >> 2] | 0) + 36 >> 2] & 127](i52) | 0; else i76 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i38 >> 0] | 0) | 0;
     i38 = i76 & 255;
     if (i38 << 24 >> 24 > -1 ? (HEAP16[(HEAP32[i4 >> 2] | 0) + (i76 << 24 >> 24 << 1) >> 1] & 2048) != 0 : 0) {
      i52 = HEAP32[i10 >> 2] | 0;
      if ((i52 | 0) == (HEAP32[i13 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i9, i10, i13);
       i77 = HEAP32[i10 >> 2] | 0;
      } else i77 = i52;
      HEAP32[i10 >> 2] = i77 + 1;
      HEAP8[i77 >> 0] = i38;
      i78 = i39 + 1 | 0;
     } else {
      i52 = HEAP8[i28 >> 0] | 0;
      if (!((HEAP8[i20 >> 0] | 0) == i38 << 24 >> 24 & (i39 | 0 ? ((i52 << 24 >> 24 < 0 ? HEAP32[i29 >> 2] | 0 : i52 & 255) | 0) != 0 : 0))) {
       i74 = i72;
       break;
      }
      i52 = HEAP32[i16 >> 2] | 0;
      if ((i52 | 0) == (HEAP32[i17 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i15, i16, i17);
       i79 = HEAP32[i16 >> 2] | 0;
      } else i79 = i52;
      HEAP32[i16 >> 2] = i79 + 4;
      HEAP32[i79 >> 2] = i39;
      i78 = 0;
     }
     i52 = HEAP32[i1 >> 2] | 0;
     i38 = i52 + 12 | 0;
     i51 = HEAP32[i38 >> 2] | 0;
     if ((i51 | 0) == (HEAP32[i52 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i52 >> 2] | 0) + 40 >> 2] & 127](i52) | 0; else {
      HEAP32[i38 >> 2] = i51 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i51 >> 0] | 0) | 0;
     }
     i39 = i78;
     i48 = i73;
     i46 = i72;
    }
    i46 = HEAP32[i16 >> 2] | 0;
    if (i39 | 0 ? (HEAP32[i15 >> 2] | 0) != (i46 | 0) : 0) {
     if ((i46 | 0) == (HEAP32[i17 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i15, i16, i17);
      i80 = HEAP32[i16 >> 2] | 0;
     } else i80 = i46;
     HEAP32[i16 >> 2] = i80 + 4;
     HEAP32[i80 >> 2] = i39;
    }
    L213 : do if ((HEAP32[i26 >> 2] | 0) > 0) {
     i46 = HEAP32[i1 >> 2] | 0;
     do if (i46) {
      i48 = HEAP32[i46 + 12 >> 2] | 0;
      if ((i48 | 0) == (HEAP32[i46 + 16 >> 2] | 0)) i81 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i46 >> 2] | 0) + 36 >> 2] & 127](i46) | 0; else i81 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i48 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i81, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[i1 >> 2] = 0;
       i82 = 1;
       break;
      } else {
       i82 = (HEAP32[i1 >> 2] | 0) == 0;
       break;
      }
     } else i82 = 1; while (0);
     do if (i74) {
      i46 = HEAP32[i74 + 12 >> 2] | 0;
      if ((i46 | 0) == (HEAP32[i74 + 16 >> 2] | 0)) i83 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i74 >> 2] | 0) + 36 >> 2] & 127](i74) | 0; else i83 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i46 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i83, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i82) {
       i84 = i74;
       break;
      } else {
       i37 = 204;
       break L21;
      } else {
       HEAP32[i2 >> 2] = 0;
       i37 = 198;
       break;
      }
     } else i37 = 198; while (0);
     if ((i37 | 0) == 198) {
      i37 = 0;
      if (i82) {
       i37 = 204;
       break L21;
      } else i84 = 0;
     }
     i46 = HEAP32[i1 >> 2] | 0;
     i48 = HEAP32[i46 + 12 >> 2] | 0;
     if ((i48 | 0) == (HEAP32[i46 + 16 >> 2] | 0)) i85 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i46 >> 2] | 0) + 36 >> 2] & 127](i46) | 0; else i85 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i48 >> 0] | 0) | 0;
     if ((HEAP8[i19 >> 0] | 0) != (i85 & 255) << 24 >> 24) {
      i37 = 204;
      break L21;
     }
     i48 = HEAP32[i1 >> 2] | 0;
     i46 = i48 + 12 | 0;
     i63 = HEAP32[i46 >> 2] | 0;
     if ((i63 | 0) == (HEAP32[i48 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 40 >> 2] & 127](i48) | 0; else {
      HEAP32[i46 >> 2] = i63 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i63 >> 0] | 0) | 0;
     }
     i63 = i84;
     while (1) {
      if ((HEAP32[i26 >> 2] | 0) <= 0) break L213;
      i46 = HEAP32[i1 >> 2] | 0;
      do if (i46) {
       i48 = HEAP32[i46 + 12 >> 2] | 0;
       if ((i48 | 0) == (HEAP32[i46 + 16 >> 2] | 0)) i86 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i46 >> 2] | 0) + 36 >> 2] & 127](i46) | 0; else i86 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i48 >> 0] | 0) | 0;
       if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i86, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
        HEAP32[i1 >> 2] = 0;
        i87 = 1;
        break;
       } else {
        i87 = (HEAP32[i1 >> 2] | 0) == 0;
        break;
       }
      } else i87 = 1; while (0);
      do if (i63) {
       i46 = HEAP32[i63 + 12 >> 2] | 0;
       if ((i46 | 0) == (HEAP32[i63 + 16 >> 2] | 0)) i88 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i63 >> 2] | 0) + 36 >> 2] & 127](i63) | 0; else i88 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i46 >> 0] | 0) | 0;
       if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i88, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i87) {
        i89 = i63;
        break;
       } else {
        i37 = 230;
        break L21;
       } else {
        HEAP32[i2 >> 2] = 0;
        i37 = 223;
        break;
       }
      } else i37 = 223; while (0);
      if ((i37 | 0) == 223) {
       i37 = 0;
       if (i87) {
        i37 = 230;
        break L21;
       } else i89 = 0;
      }
      i46 = HEAP32[i1 >> 2] | 0;
      i48 = HEAP32[i46 + 12 >> 2] | 0;
      if ((i48 | 0) == (HEAP32[i46 + 16 >> 2] | 0)) i90 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i46 >> 2] | 0) + 36 >> 2] & 127](i46) | 0; else i90 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i48 >> 0] | 0) | 0;
      if ((i90 & 255) << 24 >> 24 <= -1) {
       i37 = 230;
       break L21;
      }
      if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i90 << 24 >> 24 << 1) >> 1] & 2048)) {
       i37 = 230;
       break L21;
      }
      if ((HEAP32[i10 >> 2] | 0) == (HEAP32[i13 >> 2] | 0)) __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i9, i10, i13);
      i48 = HEAP32[i1 >> 2] | 0;
      i46 = HEAP32[i48 + 12 >> 2] | 0;
      if ((i46 | 0) == (HEAP32[i48 + 16 >> 2] | 0)) i91 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 36 >> 2] & 127](i48) | 0; else i91 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i46 >> 0] | 0) | 0;
      i46 = HEAP32[i10 >> 2] | 0;
      HEAP32[i10 >> 2] = i46 + 1;
      HEAP8[i46 >> 0] = i91;
      HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + -1;
      i46 = HEAP32[i1 >> 2] | 0;
      i48 = i46 + 12 | 0;
      i51 = HEAP32[i48 >> 2] | 0;
      if ((i51 | 0) == (HEAP32[i46 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i46 >> 2] | 0) + 40 >> 2] & 127](i46) | 0; else {
       HEAP32[i48 >> 2] = i51 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i51 >> 0] | 0) | 0;
      }
      i63 = i89;
     }
    } while (0);
    if ((HEAP32[i10 >> 2] | 0) == (HEAP32[i9 >> 2] | 0)) {
     i37 = 241;
     break L21;
    } else i44 = i35;
    break;
   }
  default:
   i44 = i35;
  } while (0);
  L289 : do if ((i37 | 0) == 47) {
   i37 = 0;
   i39 = i43;
   while (1) {
    i63 = HEAP32[i1 >> 2] | 0;
    do if (i63) {
     i51 = HEAP32[i63 + 12 >> 2] | 0;
     if ((i51 | 0) == (HEAP32[i63 + 16 >> 2] | 0)) i92 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i63 >> 2] | 0) + 36 >> 2] & 127](i63) | 0; else i92 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i51 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i92, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[i1 >> 2] = 0;
      i93 = 1;
      break;
     } else {
      i93 = (HEAP32[i1 >> 2] | 0) == 0;
      break;
     }
    } else i93 = 1; while (0);
    do if (i39) {
     i63 = HEAP32[i39 + 12 >> 2] | 0;
     if ((i63 | 0) == (HEAP32[i39 + 16 >> 2] | 0)) i94 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i39 >> 2] | 0) + 36 >> 2] & 127](i39) | 0; else i94 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i63 >> 0] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i94, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i93) {
      i95 = i39;
      break;
     } else {
      i44 = i35;
      break L289;
     } else {
      HEAP32[i2 >> 2] = 0;
      i37 = 61;
      break;
     }
    } else i37 = 61; while (0);
    if ((i37 | 0) == 61) {
     i37 = 0;
     if (i93) {
      i44 = i35;
      break L289;
     } else i95 = 0;
    }
    i63 = HEAP32[i1 >> 2] | 0;
    i51 = HEAP32[i63 + 12 >> 2] | 0;
    if ((i51 | 0) == (HEAP32[i63 + 16 >> 2] | 0)) i96 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i63 >> 2] | 0) + 36 >> 2] & 127](i63) | 0; else i96 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i51 >> 0] | 0) | 0;
    if ((i96 & 255) << 24 >> 24 <= -1) {
     i44 = i35;
     break L289;
    }
    if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i96 << 24 >> 24 << 1) >> 1] & 8192)) {
     i44 = i35;
     break L289;
    }
    i51 = HEAP32[i1 >> 2] | 0;
    i63 = i51 + 12 | 0;
    i48 = HEAP32[i63 >> 2] | 0;
    if ((i48 | 0) == (HEAP32[i51 + 16 >> 2] | 0)) i97 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i51 >> 2] | 0) + 40 >> 2] & 127](i51) | 0; else {
     HEAP32[i63 >> 2] = i48 + 1;
     i97 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i48 >> 0] | 0) | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i25, i97 & 255);
    i39 = i95;
   }
  } while (0);
  i35 = i44;
  i36 = i36 + 1 | 0;
 }
 L326 : do if ((i37 | 0) == 45) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i98 = 0;
 } else if ((i37 | 0) == 105) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i98 = 0;
 } else if ((i37 | 0) == 148) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i98 = 0;
 } else if ((i37 | 0) == 204) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i98 = 0;
 } else if ((i37 | 0) == 230) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i98 = 0;
 } else if ((i37 | 0) == 241) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i98 = 0;
 } else if ((i37 | 0) == 243) {
  L328 : do if (i35 | 0) {
   i36 = i35 + 11 | 0;
   i44 = i35 + 4 | 0;
   i95 = 1;
   L330 : while (1) {
    i97 = HEAP8[i36 >> 0] | 0;
    if (i97 << 24 >> 24 < 0) i99 = HEAP32[i44 >> 2] | 0; else i99 = i97 & 255;
    if (i95 >>> 0 >= i99 >>> 0) break L328;
    i97 = HEAP32[i1 >> 2] | 0;
    do if (i97) {
     i96 = HEAP32[i97 + 12 >> 2] | 0;
     if ((i96 | 0) == (HEAP32[i97 + 16 >> 2] | 0)) i100 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i97 >> 2] | 0) + 36 >> 2] & 127](i97) | 0; else i100 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i96 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i100, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[i1 >> 2] = 0;
      i101 = 1;
      break;
     } else {
      i101 = (HEAP32[i1 >> 2] | 0) == 0;
      break;
     }
    } else i101 = 1; while (0);
    i97 = HEAP32[i2 >> 2] | 0;
    do if (i97) {
     i96 = HEAP32[i97 + 12 >> 2] | 0;
     if ((i96 | 0) == (HEAP32[i97 + 16 >> 2] | 0)) i102 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i97 >> 2] | 0) + 36 >> 2] & 127](i97) | 0; else i102 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i96 >> 0] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i102, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i101) break; else break L330; else {
      HEAP32[i2 >> 2] = 0;
      i37 = 262;
      break;
     }
    } else i37 = 262; while (0);
    if ((i37 | 0) == 262 ? (i37 = 0, i101) : 0) break;
    i97 = HEAP32[i1 >> 2] | 0;
    i96 = HEAP32[i97 + 12 >> 2] | 0;
    if ((i96 | 0) == (HEAP32[i97 + 16 >> 2] | 0)) i103 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i97 >> 2] | 0) + 36 >> 2] & 127](i97) | 0; else i103 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i96 >> 0] | 0) | 0;
    if ((HEAP8[i36 >> 0] | 0) < 0) i104 = HEAP32[i35 >> 2] | 0; else i104 = i35;
    if ((HEAP8[i104 + i95 >> 0] | 0) != (i103 & 255) << 24 >> 24) break;
    i96 = HEAP32[i1 >> 2] | 0;
    i97 = i96 + 12 | 0;
    i4 = HEAP32[i97 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i96 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i96 >> 2] | 0) + 40 >> 2] & 127](i96) | 0; else {
     HEAP32[i97 >> 2] = i4 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i4 >> 0] | 0) | 0;
    }
    i95 = i95 + 1 | 0;
   }
   HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
   i98 = 0;
   break L326;
  } while (0);
  i95 = HEAP32[i15 >> 2] | 0;
  i36 = HEAP32[i16 >> 2] | 0;
  if ((i95 | 0) != (i36 | 0)) {
   HEAP32[i27 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i95, i36, i27);
   if (!(HEAP32[i27 >> 2] | 0)) {
    i98 = 1;
    break;
   } else {
    HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
    i98 = 0;
    break;
   }
  } else i98 = 1;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i25);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 i21 = HEAP32[i15 >> 2] | 0;
 HEAP32[i15 >> 2] = 0;
 if (i21 | 0) FUNCTION_TABLE_vi[HEAP32[i15 + 4 >> 2] & 255](i21);
 STACKTOP = i12;
 return i98 | 0;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0, i89 = 0, i90 = 0, i91 = 0, i92 = 0, i93 = 0, i94 = 0, i95 = 0, i96 = 0, i97 = 0, i98 = 0, i99 = 0, i100 = 0, i101 = 0, i102 = 0, i103 = 0, i104 = 0, i105 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 i13 = i12 + 496 | 0;
 i14 = i12;
 i15 = i12 + 488 | 0;
 i16 = i12 + 480 | 0;
 i17 = i12 + 476 | 0;
 i18 = i12 + 500 | 0;
 i19 = i12 + 472 | 0;
 i20 = i12 + 468 | 0;
 i21 = i12 + 456 | 0;
 i22 = i12 + 444 | 0;
 i23 = i12 + 432 | 0;
 i24 = i12 + 420 | 0;
 i25 = i12 + 408 | 0;
 i26 = i12 + 404 | 0;
 i27 = i12 + 400 | 0;
 HEAP32[i13 >> 2] = i11;
 HEAP32[i15 >> 2] = i14;
 HEAP32[i15 + 4 >> 2] = 143;
 HEAP32[i16 >> 2] = i14;
 HEAP32[i17 >> 2] = i14 + 400;
 HEAP32[i21 >> 2] = 0;
 HEAP32[i21 + 4 >> 2] = 0;
 HEAP32[i21 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i21 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 HEAP32[i22 >> 2] = 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP32[i22 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i22 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 HEAP32[i23 >> 2] = 0;
 HEAP32[i23 + 4 >> 2] = 0;
 HEAP32[i23 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i23 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i24 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 HEAP32[i25 >> 2] = 0;
 HEAP32[i25 + 4 >> 2] = 0;
 HEAP32[i25 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i25 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(i3, i4, i18, i19, i20, i21, i22, i23, i24, i26);
 HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
 i4 = i23 + 8 + 3 | 0;
 i3 = i23 + 4 | 0;
 i14 = i24 + 8 + 3 | 0;
 i11 = i24 + 4 | 0;
 i28 = i21 + 11 | 0;
 i29 = i21 + 4 | 0;
 i30 = (i5 & 512 | 0) != 0;
 i5 = i22 + 8 + 3 | 0;
 i31 = i18 + 3 | 0;
 i32 = i22 + 4 | 0;
 i33 = i25 + 8 + 3 | 0;
 i34 = i25 + 4 | 0;
 i35 = 0;
 i36 = 0;
 L21 : while (1) {
  if (i36 >>> 0 >= 4) {
   i37 = 239;
   break;
  }
  i38 = HEAP32[i1 >> 2] | 0;
  do if (i38) {
   i39 = HEAP32[i38 + 12 >> 2] | 0;
   if ((i39 | 0) == (HEAP32[i38 + 16 >> 2] | 0)) i40 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i40 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i40, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i1 >> 2] = 0;
    i41 = 1;
    break;
   } else {
    i41 = (HEAP32[i1 >> 2] | 0) == 0;
    break;
   }
  } else i41 = 1; while (0);
  i38 = HEAP32[i2 >> 2] | 0;
  do if (i38) {
   i39 = HEAP32[i38 + 12 >> 2] | 0;
   if ((i39 | 0) == (HEAP32[i38 + 16 >> 2] | 0)) i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i42 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i42, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i41) {
    i43 = i38;
    break;
   } else {
    i37 = 239;
    break L21;
   } else {
    HEAP32[i2 >> 2] = 0;
    i37 = 31;
    break;
   }
  } else i37 = 31; while (0);
  if ((i37 | 0) == 31) {
   i37 = 0;
   if (i41) {
    i37 = 239;
    break;
   } else i43 = 0;
  }
  L46 : do switch (HEAP8[i18 + i36 >> 0] | 0) {
  case 1:
   {
    if ((i36 | 0) == 3) i44 = i35; else {
     i38 = HEAP32[i1 >> 2] | 0;
     i39 = HEAP32[i38 + 12 >> 2] | 0;
     if ((i39 | 0) == (HEAP32[i38 + 16 >> 2] | 0)) i45 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i45 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 12 >> 2] & 63](i8, 8192, i45) | 0)) {
      i37 = 44;
      break L21;
     }
     i39 = HEAP32[i1 >> 2] | 0;
     i38 = i39 + 12 | 0;
     i46 = HEAP32[i38 >> 2] | 0;
     if ((i46 | 0) == (HEAP32[i39 + 16 >> 2] | 0)) i47 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i39 >> 2] | 0) + 40 >> 2] & 127](i39) | 0; else {
      HEAP32[i38 >> 2] = i46 + 4;
      i47 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i46 >> 2] | 0) | 0;
     }
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i25, i47);
     i37 = 46;
    }
    break;
   }
  case 0:
   {
    if ((i36 | 0) == 3) i44 = i35; else i37 = 46;
    break;
   }
  case 3:
   {
    i46 = HEAP8[i4 >> 0] | 0;
    i38 = i46 << 24 >> 24 < 0 ? HEAP32[i3 >> 2] | 0 : i46 & 255;
    i46 = HEAP8[i14 >> 0] | 0;
    i39 = i46 << 24 >> 24 < 0 ? HEAP32[i11 >> 2] | 0 : i46 & 255;
    if ((i38 | 0) == (0 - i39 | 0)) i44 = i35; else {
     i46 = (i38 | 0) == 0;
     i38 = HEAP32[i1 >> 2] | 0;
     i48 = HEAP32[i38 + 12 >> 2] | 0;
     i49 = (i48 | 0) == (HEAP32[i38 + 16 >> 2] | 0);
     if (i46 | (i39 | 0) == 0) {
      if (i49) i50 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i50 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i48 >> 2] | 0) | 0;
      if (i46) {
       if ((i50 | 0) != (HEAP32[((HEAP8[i14 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24) >> 2] | 0)) {
        i44 = i35;
        break L46;
       }
       i46 = HEAP32[i1 >> 2] | 0;
       i39 = i46 + 12 | 0;
       i51 = HEAP32[i39 >> 2] | 0;
       if ((i51 | 0) == (HEAP32[i46 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i46 >> 2] | 0) + 40 >> 2] & 127](i46) | 0; else {
        HEAP32[i39 >> 2] = i51 + 4;
        __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i51 >> 2] | 0) | 0;
       }
       HEAP8[i7 >> 0] = 1;
       i51 = HEAP8[i14 >> 0] | 0;
       i44 = (i51 << 24 >> 24 < 0 ? HEAP32[i11 >> 2] | 0 : i51 & 255) >>> 0 > 1 ? i24 : i35;
       break L46;
      }
      if ((i50 | 0) != (HEAP32[((HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i23 >> 2] | 0 : i23) >> 2] | 0)) {
       HEAP8[i7 >> 0] = 1;
       i44 = i35;
       break L46;
      }
      i51 = HEAP32[i1 >> 2] | 0;
      i39 = i51 + 12 | 0;
      i46 = HEAP32[i39 >> 2] | 0;
      if ((i46 | 0) == (HEAP32[i51 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i51 >> 2] | 0) + 40 >> 2] & 127](i51) | 0; else {
       HEAP32[i39 >> 2] = i46 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i46 >> 2] | 0) | 0;
      }
      i46 = HEAP8[i4 >> 0] | 0;
      i44 = (i46 << 24 >> 24 < 0 ? HEAP32[i3 >> 2] | 0 : i46 & 255) >>> 0 > 1 ? i23 : i35;
      break L46;
     }
     if (i49) i52 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i38 >> 2] | 0) + 36 >> 2] & 127](i38) | 0; else i52 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i48 >> 2] | 0) | 0;
     i48 = HEAP32[i1 >> 2] | 0;
     i38 = i48 + 12 | 0;
     i49 = HEAP32[i38 >> 2] | 0;
     i46 = (i49 | 0) == (HEAP32[i48 + 16 >> 2] | 0);
     if ((i52 | 0) == (HEAP32[((HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i23 >> 2] | 0 : i23) >> 2] | 0)) {
      if (i46) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 40 >> 2] & 127](i48) | 0; else {
       HEAP32[i38 >> 2] = i49 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i49 >> 2] | 0) | 0;
      }
      i38 = HEAP8[i4 >> 0] | 0;
      i44 = (i38 << 24 >> 24 < 0 ? HEAP32[i3 >> 2] | 0 : i38 & 255) >>> 0 > 1 ? i23 : i35;
      break L46;
     }
     if (i46) i53 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 36 >> 2] & 127](i48) | 0; else i53 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i49 >> 2] | 0) | 0;
     if ((i53 | 0) != (HEAP32[((HEAP8[i14 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24) >> 2] | 0)) {
      i37 = 103;
      break L21;
     }
     i49 = HEAP32[i1 >> 2] | 0;
     i48 = i49 + 12 | 0;
     i46 = HEAP32[i48 >> 2] | 0;
     if ((i46 | 0) == (HEAP32[i49 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i49 >> 2] | 0) + 40 >> 2] & 127](i49) | 0; else {
      HEAP32[i48 >> 2] = i46 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i46 >> 2] | 0) | 0;
     }
     HEAP8[i7 >> 0] = 1;
     i46 = HEAP8[i14 >> 0] | 0;
     i44 = (i46 << 24 >> 24 < 0 ? HEAP32[i11 >> 2] | 0 : i46 & 255) >>> 0 > 1 ? i24 : i35;
    }
    break;
   }
  case 2:
   {
    if (i36 >>> 0 < 2 | (i35 | 0) != 0) {
     i46 = HEAP8[i5 >> 0] | 0;
     i48 = HEAP32[i22 >> 2] | 0;
     i49 = i46 << 24 >> 24 < 0 ? i48 : i22;
     if (!i36) {
      i54 = i49;
      i55 = i48;
      i56 = i46;
     } else {
      i57 = i49;
      i58 = i48;
      i59 = i46;
      i37 = 108;
     }
    } else {
     if (!(i30 | (i36 | 0) == 2 & (HEAP8[i31 >> 0] | 0) != 0)) {
      i44 = 0;
      break L46;
     }
     i46 = HEAP8[i5 >> 0] | 0;
     i48 = HEAP32[i22 >> 2] | 0;
     i57 = i46 << 24 >> 24 < 0 ? i48 : i22;
     i58 = i48;
     i59 = i46;
     i37 = 108;
    }
    L108 : do if ((i37 | 0) == 108) {
     i37 = 0;
     if ((HEAPU8[i18 + (i36 + -1) >> 0] | 0) < 2) {
      i46 = i57;
      i48 = i59;
      i49 = i58;
      while (1) {
       i38 = i48 << 24 >> 24 < 0;
       i39 = i46;
       if (((i38 ? i49 : i22) + ((i38 ? HEAP32[i32 >> 2] | 0 : i48 & 255) << 2) | 0) == (i39 | 0)) {
        i60 = i48;
        i61 = i49;
        break;
       }
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 12 >> 2] & 63](i8, 8192, HEAP32[i39 >> 2] | 0) | 0)) {
        i37 = 112;
        break;
       }
       i46 = i39 + 4 | 0;
       i48 = HEAP8[i5 >> 0] | 0;
       i49 = HEAP32[i22 >> 2] | 0;
      }
      if ((i37 | 0) == 112) {
       i37 = 0;
       i60 = HEAP8[i5 >> 0] | 0;
       i61 = HEAP32[i22 >> 2] | 0;
      }
      i49 = i60 << 24 >> 24 < 0 ? i61 : i22;
      i48 = i49;
      i39 = i46 - i48 >> 2;
      i38 = HEAP8[i33 >> 0] | 0;
      i51 = i38 << 24 >> 24 < 0;
      i62 = HEAP32[i34 >> 2] | 0;
      i63 = i38 & 255;
      if (i39 >>> 0 > (i51 ? i62 : i63) >>> 0) {
       i54 = i48;
       i55 = i61;
       i56 = i60;
      } else {
       i38 = (HEAP32[i25 >> 2] | 0) + (i62 << 2) | 0;
       i62 = i25 + (i63 << 2) | 0;
       i63 = i51 ? i38 : i62;
       i64 = i49;
       i49 = (i51 ? i38 : i62) + (0 - i39 << 2) | 0;
       while (1) {
        if ((i49 | 0) == (i63 | 0)) {
         i54 = i46;
         i55 = i61;
         i56 = i60;
         break L108;
        }
        if ((HEAP32[i49 >> 2] | 0) != (HEAP32[i64 >> 2] | 0)) {
         i54 = i48;
         i55 = i61;
         i56 = i60;
         break L108;
        }
        i64 = i64 + 4 | 0;
        i49 = i49 + 4 | 0;
       }
      }
     } else {
      i54 = i57;
      i55 = i58;
      i56 = i59;
     }
    } while (0);
    i49 = i54;
    i64 = i56;
    i48 = i55;
    i46 = i43;
    L124 : while (1) {
     i63 = i64 << 24 >> 24 < 0;
     if ((i49 | 0) == ((i63 ? i48 : i22) + ((i63 ? HEAP32[i32 >> 2] | 0 : i64 & 255) << 2) | 0)) break;
     i63 = HEAP32[i1 >> 2] | 0;
     do if (i63) {
      i39 = HEAP32[i63 + 12 >> 2] | 0;
      if ((i39 | 0) == (HEAP32[i63 + 16 >> 2] | 0)) i65 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i63 >> 2] | 0) + 36 >> 2] & 127](i63) | 0; else i65 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i65, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[i1 >> 2] = 0;
       i66 = 1;
       break;
      } else {
       i66 = (HEAP32[i1 >> 2] | 0) == 0;
       break;
      }
     } else i66 = 1; while (0);
     do if (i46) {
      i63 = HEAP32[i46 + 12 >> 2] | 0;
      if ((i63 | 0) == (HEAP32[i46 + 16 >> 2] | 0)) i67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i46 >> 2] | 0) + 36 >> 2] & 127](i46) | 0; else i67 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i63 >> 2] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i67, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i66) {
       i68 = i46;
       break;
      } else break L124; else {
       HEAP32[i2 >> 2] = 0;
       i37 = 134;
       break;
      }
     } else i37 = 134; while (0);
     if ((i37 | 0) == 134) {
      i37 = 0;
      if (i66) break; else i68 = 0;
     }
     i63 = HEAP32[i1 >> 2] | 0;
     i39 = HEAP32[i63 + 12 >> 2] | 0;
     if ((i39 | 0) == (HEAP32[i63 + 16 >> 2] | 0)) i69 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i63 >> 2] | 0) + 36 >> 2] & 127](i63) | 0; else i69 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
     if ((i69 | 0) != (HEAP32[i49 >> 2] | 0)) break;
     i39 = HEAP32[i1 >> 2] | 0;
     i63 = i39 + 12 | 0;
     i62 = HEAP32[i63 >> 2] | 0;
     if ((i62 | 0) == (HEAP32[i39 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i39 >> 2] | 0) + 40 >> 2] & 127](i39) | 0; else {
      HEAP32[i63 >> 2] = i62 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i62 >> 2] | 0) | 0;
     }
     i49 = i49 + 4 | 0;
     i64 = HEAP8[i5 >> 0] | 0;
     i48 = HEAP32[i22 >> 2] | 0;
     i46 = i68;
    }
    if (i30 ? (i46 = HEAP8[i5 >> 0] | 0, i48 = i46 << 24 >> 24 < 0, (i49 | 0) != ((i48 ? HEAP32[i22 >> 2] | 0 : i22) + ((i48 ? HEAP32[i32 >> 2] | 0 : i46 & 255) << 2) | 0)) : 0) {
     i37 = 146;
     break L21;
    } else i44 = i35;
    break;
   }
  case 4:
   {
    i46 = 0;
    i48 = i43;
    i64 = i43;
    L161 : while (1) {
     i62 = HEAP32[i1 >> 2] | 0;
     do if (i62) {
      i63 = HEAP32[i62 + 12 >> 2] | 0;
      if ((i63 | 0) == (HEAP32[i62 + 16 >> 2] | 0)) i70 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i62 >> 2] | 0) + 36 >> 2] & 127](i62) | 0; else i70 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i63 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i70, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[i1 >> 2] = 0;
       i71 = 1;
       break;
      } else {
       i71 = (HEAP32[i1 >> 2] | 0) == 0;
       break;
      }
     } else i71 = 1; while (0);
     do if (i48) {
      i62 = HEAP32[i48 + 12 >> 2] | 0;
      if ((i62 | 0) == (HEAP32[i48 + 16 >> 2] | 0)) i72 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 36 >> 2] & 127](i48) | 0; else i72 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i62 >> 2] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i72, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i71) {
       i73 = i64;
       i74 = i48;
       break;
      } else {
       i75 = i64;
       break L161;
      } else {
       HEAP32[i2 >> 2] = 0;
       i76 = 0;
       i37 = 160;
       break;
      }
     } else {
      i76 = i64;
      i37 = 160;
     } while (0);
     if ((i37 | 0) == 160) {
      i37 = 0;
      if (i71) {
       i75 = i76;
       break;
      } else {
       i73 = i76;
       i74 = 0;
      }
     }
     i62 = HEAP32[i1 >> 2] | 0;
     i63 = HEAP32[i62 + 12 >> 2] | 0;
     if ((i63 | 0) == (HEAP32[i62 + 16 >> 2] | 0)) i77 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i62 >> 2] | 0) + 36 >> 2] & 127](i62) | 0; else i77 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i63 >> 2] | 0) | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 12 >> 2] & 63](i8, 2048, i77) | 0) {
      i63 = HEAP32[i10 >> 2] | 0;
      if ((i63 | 0) == (HEAP32[i13 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i9, i10, i13);
       i78 = HEAP32[i10 >> 2] | 0;
      } else i78 = i63;
      HEAP32[i10 >> 2] = i78 + 4;
      HEAP32[i78 >> 2] = i77;
      i79 = i46 + 1 | 0;
     } else {
      i63 = HEAP8[i28 >> 0] | 0;
      if (!((i77 | 0) == (HEAP32[i20 >> 2] | 0) & (i46 | 0 ? ((i63 << 24 >> 24 < 0 ? HEAP32[i29 >> 2] | 0 : i63 & 255) | 0) != 0 : 0))) {
       i75 = i73;
       break;
      }
      i63 = HEAP32[i16 >> 2] | 0;
      if ((i63 | 0) == (HEAP32[i17 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i15, i16, i17);
       i80 = HEAP32[i16 >> 2] | 0;
      } else i80 = i63;
      HEAP32[i16 >> 2] = i80 + 4;
      HEAP32[i80 >> 2] = i46;
      i79 = 0;
     }
     i63 = HEAP32[i1 >> 2] | 0;
     i62 = i63 + 12 | 0;
     i39 = HEAP32[i62 >> 2] | 0;
     if ((i39 | 0) == (HEAP32[i63 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i63 >> 2] | 0) + 40 >> 2] & 127](i63) | 0; else {
      HEAP32[i62 >> 2] = i39 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
     }
     i46 = i79;
     i48 = i74;
     i64 = i73;
    }
    i64 = HEAP32[i16 >> 2] | 0;
    if (i46 | 0 ? (HEAP32[i15 >> 2] | 0) != (i64 | 0) : 0) {
     if ((i64 | 0) == (HEAP32[i17 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i15, i16, i17);
      i81 = HEAP32[i16 >> 2] | 0;
     } else i81 = i64;
     HEAP32[i16 >> 2] = i81 + 4;
     HEAP32[i81 >> 2] = i46;
    }
    L211 : do if ((HEAP32[i26 >> 2] | 0) > 0) {
     i64 = HEAP32[i1 >> 2] | 0;
     do if (i64) {
      i48 = HEAP32[i64 + 12 >> 2] | 0;
      if ((i48 | 0) == (HEAP32[i64 + 16 >> 2] | 0)) i82 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i64 >> 2] | 0) + 36 >> 2] & 127](i64) | 0; else i82 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i48 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i82, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[i1 >> 2] = 0;
       i83 = 1;
       break;
      } else {
       i83 = (HEAP32[i1 >> 2] | 0) == 0;
       break;
      }
     } else i83 = 1; while (0);
     do if (i75) {
      i64 = HEAP32[i75 + 12 >> 2] | 0;
      if ((i64 | 0) == (HEAP32[i75 + 16 >> 2] | 0)) i84 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i75 >> 2] | 0) + 36 >> 2] & 127](i75) | 0; else i84 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i64 >> 2] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i84, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i83) {
       i85 = i75;
       break;
      } else {
       i37 = 201;
       break L21;
      } else {
       HEAP32[i2 >> 2] = 0;
       i37 = 195;
       break;
      }
     } else i37 = 195; while (0);
     if ((i37 | 0) == 195) {
      i37 = 0;
      if (i83) {
       i37 = 201;
       break L21;
      } else i85 = 0;
     }
     i64 = HEAP32[i1 >> 2] | 0;
     i48 = HEAP32[i64 + 12 >> 2] | 0;
     if ((i48 | 0) == (HEAP32[i64 + 16 >> 2] | 0)) i86 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i64 >> 2] | 0) + 36 >> 2] & 127](i64) | 0; else i86 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i48 >> 2] | 0) | 0;
     if ((i86 | 0) != (HEAP32[i19 >> 2] | 0)) {
      i37 = 201;
      break L21;
     }
     i48 = HEAP32[i1 >> 2] | 0;
     i64 = i48 + 12 | 0;
     i49 = HEAP32[i64 >> 2] | 0;
     if ((i49 | 0) == (HEAP32[i48 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 40 >> 2] & 127](i48) | 0; else {
      HEAP32[i64 >> 2] = i49 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i49 >> 2] | 0) | 0;
     }
     i49 = i85;
     while (1) {
      if ((HEAP32[i26 >> 2] | 0) <= 0) break L211;
      i64 = HEAP32[i1 >> 2] | 0;
      do if (i64) {
       i48 = HEAP32[i64 + 12 >> 2] | 0;
       if ((i48 | 0) == (HEAP32[i64 + 16 >> 2] | 0)) i87 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i64 >> 2] | 0) + 36 >> 2] & 127](i64) | 0; else i87 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i48 >> 2] | 0) | 0;
       if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i87, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
        HEAP32[i1 >> 2] = 0;
        i88 = 1;
        break;
       } else {
        i88 = (HEAP32[i1 >> 2] | 0) == 0;
        break;
       }
      } else i88 = 1; while (0);
      do if (i49) {
       i64 = HEAP32[i49 + 12 >> 2] | 0;
       if ((i64 | 0) == (HEAP32[i49 + 16 >> 2] | 0)) i89 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i49 >> 2] | 0) + 36 >> 2] & 127](i49) | 0; else i89 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i64 >> 2] | 0) | 0;
       if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i89, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i88) {
        i90 = i49;
        break;
       } else {
        i37 = 226;
        break L21;
       } else {
        HEAP32[i2 >> 2] = 0;
        i37 = 220;
        break;
       }
      } else i37 = 220; while (0);
      if ((i37 | 0) == 220) {
       i37 = 0;
       if (i88) {
        i37 = 226;
        break L21;
       } else i90 = 0;
      }
      i64 = HEAP32[i1 >> 2] | 0;
      i48 = HEAP32[i64 + 12 >> 2] | 0;
      if ((i48 | 0) == (HEAP32[i64 + 16 >> 2] | 0)) i91 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i64 >> 2] | 0) + 36 >> 2] & 127](i64) | 0; else i91 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i48 >> 2] | 0) | 0;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 12 >> 2] & 63](i8, 2048, i91) | 0)) {
       i37 = 226;
       break L21;
      }
      if ((HEAP32[i10 >> 2] | 0) == (HEAP32[i13 >> 2] | 0)) __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i9, i10, i13);
      i48 = HEAP32[i1 >> 2] | 0;
      i64 = HEAP32[i48 + 12 >> 2] | 0;
      if ((i64 | 0) == (HEAP32[i48 + 16 >> 2] | 0)) i92 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i48 >> 2] | 0) + 36 >> 2] & 127](i48) | 0; else i92 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i64 >> 2] | 0) | 0;
      i64 = HEAP32[i10 >> 2] | 0;
      HEAP32[i10 >> 2] = i64 + 4;
      HEAP32[i64 >> 2] = i92;
      HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + -1;
      i64 = HEAP32[i1 >> 2] | 0;
      i48 = i64 + 12 | 0;
      i39 = HEAP32[i48 >> 2] | 0;
      if ((i39 | 0) == (HEAP32[i64 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i64 >> 2] | 0) + 40 >> 2] & 127](i64) | 0; else {
       HEAP32[i48 >> 2] = i39 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
      }
      i49 = i90;
     }
    } while (0);
    if ((HEAP32[i10 >> 2] | 0) == (HEAP32[i9 >> 2] | 0)) {
     i37 = 237;
     break L21;
    } else i44 = i35;
    break;
   }
  default:
   i44 = i35;
  } while (0);
  L286 : do if ((i37 | 0) == 46) {
   i37 = 0;
   i46 = i43;
   while (1) {
    i49 = HEAP32[i1 >> 2] | 0;
    do if (i49) {
     i39 = HEAP32[i49 + 12 >> 2] | 0;
     if ((i39 | 0) == (HEAP32[i49 + 16 >> 2] | 0)) i93 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i49 >> 2] | 0) + 36 >> 2] & 127](i49) | 0; else i93 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i93, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[i1 >> 2] = 0;
      i94 = 1;
      break;
     } else {
      i94 = (HEAP32[i1 >> 2] | 0) == 0;
      break;
     }
    } else i94 = 1; while (0);
    do if (i46) {
     i49 = HEAP32[i46 + 12 >> 2] | 0;
     if ((i49 | 0) == (HEAP32[i46 + 16 >> 2] | 0)) i95 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i46 >> 2] | 0) + 36 >> 2] & 127](i46) | 0; else i95 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i49 >> 2] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i95, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i94) {
      i96 = i46;
      break;
     } else {
      i44 = i35;
      break L286;
     } else {
      HEAP32[i2 >> 2] = 0;
      i37 = 60;
      break;
     }
    } else i37 = 60; while (0);
    if ((i37 | 0) == 60) {
     i37 = 0;
     if (i94) {
      i44 = i35;
      break L286;
     } else i96 = 0;
    }
    i49 = HEAP32[i1 >> 2] | 0;
    i39 = HEAP32[i49 + 12 >> 2] | 0;
    if ((i39 | 0) == (HEAP32[i49 + 16 >> 2] | 0)) i97 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i49 >> 2] | 0) + 36 >> 2] & 127](i49) | 0; else i97 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 12 >> 2] & 63](i8, 8192, i97) | 0)) {
     i44 = i35;
     break L286;
    }
    i39 = HEAP32[i1 >> 2] | 0;
    i49 = i39 + 12 | 0;
    i48 = HEAP32[i49 >> 2] | 0;
    if ((i48 | 0) == (HEAP32[i39 + 16 >> 2] | 0)) i98 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i39 >> 2] | 0) + 40 >> 2] & 127](i39) | 0; else {
     HEAP32[i49 >> 2] = i48 + 4;
     i98 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i48 >> 2] | 0) | 0;
    }
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i25, i98);
    i46 = i96;
   }
  } while (0);
  i35 = i44;
  i36 = i36 + 1 | 0;
 }
 L322 : do if ((i37 | 0) == 44) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i99 = 0;
 } else if ((i37 | 0) == 103) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i99 = 0;
 } else if ((i37 | 0) == 146) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i99 = 0;
 } else if ((i37 | 0) == 201) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i99 = 0;
 } else if ((i37 | 0) == 226) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i99 = 0;
 } else if ((i37 | 0) == 237) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i99 = 0;
 } else if ((i37 | 0) == 239) {
  L324 : do if (i35 | 0) {
   i36 = i35 + 8 + 3 | 0;
   i44 = i35 + 4 | 0;
   i96 = 1;
   L326 : while (1) {
    i98 = HEAP8[i36 >> 0] | 0;
    if (i98 << 24 >> 24 < 0) i100 = HEAP32[i44 >> 2] | 0; else i100 = i98 & 255;
    if (i96 >>> 0 >= i100 >>> 0) break L324;
    i98 = HEAP32[i1 >> 2] | 0;
    do if (i98) {
     i97 = HEAP32[i98 + 12 >> 2] | 0;
     if ((i97 | 0) == (HEAP32[i98 + 16 >> 2] | 0)) i101 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i98 >> 2] | 0) + 36 >> 2] & 127](i98) | 0; else i101 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i97 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i101, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[i1 >> 2] = 0;
      i102 = 1;
      break;
     } else {
      i102 = (HEAP32[i1 >> 2] | 0) == 0;
      break;
     }
    } else i102 = 1; while (0);
    i98 = HEAP32[i2 >> 2] | 0;
    do if (i98) {
     i97 = HEAP32[i98 + 12 >> 2] | 0;
     if ((i97 | 0) == (HEAP32[i98 + 16 >> 2] | 0)) i103 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i98 >> 2] | 0) + 36 >> 2] & 127](i98) | 0; else i103 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i97 >> 2] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i103, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i102) break; else break L326; else {
      HEAP32[i2 >> 2] = 0;
      i37 = 258;
      break;
     }
    } else i37 = 258; while (0);
    if ((i37 | 0) == 258 ? (i37 = 0, i102) : 0) break;
    i98 = HEAP32[i1 >> 2] | 0;
    i97 = HEAP32[i98 + 12 >> 2] | 0;
    if ((i97 | 0) == (HEAP32[i98 + 16 >> 2] | 0)) i104 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i98 >> 2] | 0) + 36 >> 2] & 127](i98) | 0; else i104 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i97 >> 2] | 0) | 0;
    if ((HEAP8[i36 >> 0] | 0) < 0) i105 = HEAP32[i35 >> 2] | 0; else i105 = i35;
    if ((i104 | 0) != (HEAP32[i105 + (i96 << 2) >> 2] | 0)) break;
    i97 = HEAP32[i1 >> 2] | 0;
    i98 = i97 + 12 | 0;
    i8 = HEAP32[i98 >> 2] | 0;
    if ((i8 | 0) == (HEAP32[i97 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i97 >> 2] | 0) + 40 >> 2] & 127](i97) | 0; else {
     HEAP32[i98 >> 2] = i8 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i8 >> 2] | 0) | 0;
    }
    i96 = i96 + 1 | 0;
   }
   HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
   i99 = 0;
   break L322;
  } while (0);
  i96 = HEAP32[i15 >> 2] | 0;
  i36 = HEAP32[i16 >> 2] | 0;
  if ((i96 | 0) != (i36 | 0)) {
   HEAP32[i27 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i96, i36, i27);
   if (!(HEAP32[i27 >> 2] | 0)) {
    i99 = 1;
    break;
   } else {
    HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
    i99 = 0;
    break;
   }
  } else i99 = 1;
 } while (0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i25);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i24);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i23);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 i21 = HEAP32[i15 >> 2] | 0;
 HEAP32[i15 >> 2] = 0;
 if (i21 | 0) FUNCTION_TABLE_vi[HEAP32[i15 + 4 >> 2] & 255](i21);
 STACKTOP = i12;
 return i99 | 0;
}

function _jpeg_make_d_derived_tbl(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 1312 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1312);
 i6 = i5 + 1040 | 0;
 i7 = i5;
 if (i3 >>> 0 > 3) {
  i8 = HEAP32[i1 >> 2] | 0;
  HEAP32[i8 + 20 >> 2] = 50;
  HEAP32[i8 + 24 >> 2] = i3;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i8 = (i2 | 0) != 0;
 i2 = HEAP32[(i8 ? i1 + 180 + (i3 << 2) | 0 : i1 + 196 + (i3 << 2) | 0) >> 2] | 0;
 if (!i2) {
  i9 = HEAP32[i1 >> 2] | 0;
  HEAP32[i9 + 20 >> 2] = 50;
  HEAP32[i9 + 24 >> 2] = i3;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i3 = HEAP32[i4 >> 2] | 0;
 if (!i3) {
  i9 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, 1424) | 0;
  HEAP32[i4 >> 2] = i9;
  i10 = i1;
  i11 = i9;
 } else {
  i10 = i1;
  i11 = i3;
 }
 HEAP32[i11 + 140 >> 2] = i2;
 i3 = HEAP8[i2 + 1 >> 0] | 0;
 i9 = i3 & 255;
 if (!(i3 << 24 >> 24)) i12 = 0; else {
  _memset(i6 | 0, 1, i9 | 0) | 0;
  i12 = i9;
 }
 i9 = HEAP8[i2 + 2 >> 0] | 0;
 i3 = i9 & 255;
 i4 = i12 + i3 | 0;
 if (i4 >>> 0 > 256) {
  i13 = HEAP32[i1 >> 2] | 0;
  HEAP32[i13 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i13 >> 2] & 255](i10);
 }
 if (!(i9 << 24 >> 24)) i14 = i12; else {
  _memset(i6 + i12 | 0, 2, i3 | 0) | 0;
  i14 = i4;
 }
 i4 = HEAP8[i2 + 3 >> 0] | 0;
 i3 = i4 & 255;
 i12 = i14 + i3 | 0;
 if ((i12 | 0) > 256) {
  i9 = HEAP32[i1 >> 2] | 0;
  HEAP32[i9 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i9 >> 2] & 255](i10);
 }
 if (!(i4 << 24 >> 24)) i15 = i14; else {
  _memset(i6 + i14 | 0, 3, i3 | 0) | 0;
  i15 = i12;
 }
 i12 = HEAP8[i2 + 4 >> 0] | 0;
 i3 = i12 & 255;
 i14 = i15 + i3 | 0;
 if ((i14 | 0) > 256) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i10);
 }
 if (!(i12 << 24 >> 24)) i16 = i15; else {
  _memset(i6 + i15 | 0, 4, i3 | 0) | 0;
  i16 = i14;
 }
 i14 = HEAP8[i2 + 5 >> 0] | 0;
 i3 = i14 & 255;
 i15 = i16 + i3 | 0;
 if ((i15 | 0) > 256) {
  i12 = HEAP32[i1 >> 2] | 0;
  HEAP32[i12 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i12 >> 2] & 255](i10);
 }
 if (!(i14 << 24 >> 24)) i17 = i16; else {
  _memset(i6 + i16 | 0, 5, i3 | 0) | 0;
  i17 = i15;
 }
 i15 = HEAP8[i2 + 6 >> 0] | 0;
 i3 = i15 & 255;
 i16 = i17 + i3 | 0;
 if ((i16 | 0) > 256) {
  i14 = HEAP32[i1 >> 2] | 0;
  HEAP32[i14 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i14 >> 2] & 255](i10);
 }
 if (!(i15 << 24 >> 24)) i18 = i17; else {
  _memset(i6 + i17 | 0, 6, i3 | 0) | 0;
  i18 = i16;
 }
 i16 = HEAP8[i2 + 7 >> 0] | 0;
 i3 = i16 & 255;
 i17 = i18 + i3 | 0;
 if ((i17 | 0) > 256) {
  i15 = HEAP32[i1 >> 2] | 0;
  HEAP32[i15 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i15 >> 2] & 255](i10);
 }
 if (!(i16 << 24 >> 24)) i19 = i18; else {
  _memset(i6 + i18 | 0, 7, i3 | 0) | 0;
  i19 = i17;
 }
 i17 = HEAP8[i2 + 8 >> 0] | 0;
 i3 = i17 & 255;
 i18 = i19 + i3 | 0;
 if ((i18 | 0) > 256) {
  i16 = HEAP32[i1 >> 2] | 0;
  HEAP32[i16 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i16 >> 2] & 255](i10);
 }
 if (!(i17 << 24 >> 24)) i20 = i19; else {
  _memset(i6 + i19 | 0, 8, i3 | 0) | 0;
  i20 = i18;
 }
 i18 = HEAP8[i2 + 9 >> 0] | 0;
 i3 = i18 & 255;
 i19 = i20 + i3 | 0;
 if ((i19 | 0) > 256) {
  i17 = HEAP32[i1 >> 2] | 0;
  HEAP32[i17 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i17 >> 2] & 255](i10);
 }
 if (!(i18 << 24 >> 24)) i21 = i20; else {
  _memset(i6 + i20 | 0, 9, i3 | 0) | 0;
  i21 = i19;
 }
 i19 = HEAP8[i2 + 10 >> 0] | 0;
 i3 = i19 & 255;
 i20 = i21 + i3 | 0;
 if ((i20 | 0) > 256) {
  i18 = HEAP32[i1 >> 2] | 0;
  HEAP32[i18 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i18 >> 2] & 255](i10);
 }
 if (!(i19 << 24 >> 24)) i22 = i21; else {
  _memset(i6 + i21 | 0, 10, i3 | 0) | 0;
  i22 = i20;
 }
 i20 = HEAP8[i2 + 11 >> 0] | 0;
 i3 = i20 & 255;
 i21 = i22 + i3 | 0;
 if ((i21 | 0) > 256) {
  i19 = HEAP32[i1 >> 2] | 0;
  HEAP32[i19 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i19 >> 2] & 255](i10);
 }
 if (!(i20 << 24 >> 24)) i23 = i22; else {
  _memset(i6 + i22 | 0, 11, i3 | 0) | 0;
  i23 = i21;
 }
 i21 = HEAP8[i2 + 12 >> 0] | 0;
 i3 = i21 & 255;
 i22 = i23 + i3 | 0;
 if ((i22 | 0) > 256) {
  i20 = HEAP32[i1 >> 2] | 0;
  HEAP32[i20 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i20 >> 2] & 255](i10);
 }
 if (!(i21 << 24 >> 24)) i24 = i23; else {
  _memset(i6 + i23 | 0, 12, i3 | 0) | 0;
  i24 = i22;
 }
 i22 = HEAP8[i2 + 13 >> 0] | 0;
 i3 = i22 & 255;
 i23 = i24 + i3 | 0;
 if ((i23 | 0) > 256) {
  i21 = HEAP32[i1 >> 2] | 0;
  HEAP32[i21 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i21 >> 2] & 255](i10);
 }
 if (!(i22 << 24 >> 24)) i25 = i24; else {
  _memset(i6 + i24 | 0, 13, i3 | 0) | 0;
  i25 = i23;
 }
 i23 = HEAP8[i2 + 14 >> 0] | 0;
 i3 = i23 & 255;
 i24 = i25 + i3 | 0;
 if ((i24 | 0) > 256) {
  i22 = HEAP32[i1 >> 2] | 0;
  HEAP32[i22 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i22 >> 2] & 255](i10);
 }
 if (!(i23 << 24 >> 24)) i26 = i25; else {
  _memset(i6 + i25 | 0, 14, i3 | 0) | 0;
  i26 = i24;
 }
 i24 = HEAP8[i2 + 15 >> 0] | 0;
 i3 = i24 & 255;
 i25 = i26 + i3 | 0;
 if ((i25 | 0) > 256) {
  i23 = HEAP32[i1 >> 2] | 0;
  HEAP32[i23 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i23 >> 2] & 255](i10);
 }
 if (!(i24 << 24 >> 24)) i27 = i26; else {
  _memset(i6 + i26 | 0, 15, i3 | 0) | 0;
  i27 = i25;
 }
 i25 = HEAP8[i2 + 16 >> 0] | 0;
 i3 = i25 & 255;
 i26 = i27 + i3 | 0;
 if ((i26 | 0) > 256) {
  i24 = HEAP32[i1 >> 2] | 0;
  HEAP32[i24 + 20 >> 2] = 8;
  FUNCTION_TABLE_vi[HEAP32[i24 >> 2] & 255](i10);
 }
 if (!(i25 << 24 >> 24)) i28 = i27; else {
  _memset(i6 + i27 | 0, 16, i3 | 0) | 0;
  i28 = i26;
 }
 HEAP8[i6 + i28 >> 0] = 0;
 i26 = HEAP8[i6 >> 0] | 0;
 if (i26 << 24 >> 24) {
  i3 = 0;
  i27 = i26 << 24 >> 24;
  i25 = 0;
  i24 = i26;
  while (1) {
   if ((i27 | 0) == (i24 << 24 >> 24 | 0)) {
    i26 = i3;
    i23 = i25;
    while (1) {
     i22 = i23 + 1 | 0;
     HEAP32[i7 + (i23 << 2) >> 2] = i26;
     i21 = i26 + 1 | 0;
     i20 = HEAP8[i6 + i22 >> 0] | 0;
     if ((i27 | 0) == (i20 << 24 >> 24 | 0)) {
      i26 = i21;
      i23 = i22;
     } else {
      i29 = i21;
      i30 = i22;
      i31 = i20;
      break;
     }
    }
   } else {
    i29 = i3;
    i30 = i25;
    i31 = i24;
   }
   if ((i29 | 0) >= (1 << i27 | 0)) {
    i23 = HEAP32[i1 >> 2] | 0;
    HEAP32[i23 + 20 >> 2] = 8;
    FUNCTION_TABLE_vi[HEAP32[i23 >> 2] & 255](i10);
   }
   if (!(i31 << 24 >> 24)) break; else {
    i3 = i29 << 1;
    i27 = i27 + 1 | 0;
    i25 = i30;
    i24 = i31;
   }
  }
 }
 i31 = i2 + 1 | 0;
 if (!(HEAP8[i31 >> 0] | 0)) {
  i32 = 0;
  i33 = -1;
 } else {
  HEAP32[i11 + 76 >> 2] = 0 - (HEAP32[i7 >> 2] | 0);
  i24 = HEAPU8[i31 >> 0] | 0;
  i32 = i24;
  i33 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 4 >> 2] = i33;
 i33 = i2 + 2 | 0;
 if (!(HEAP8[i33 >> 0] | 0)) {
  i34 = i32;
  i35 = -1;
 } else {
  HEAP32[i11 + 80 >> 2] = i32 - (HEAP32[i7 + (i32 << 2) >> 2] | 0);
  i24 = i32 + (HEAPU8[i33 >> 0] | 0) | 0;
  i34 = i24;
  i35 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 8 >> 2] = i35;
 i35 = i2 + 3 | 0;
 if (!(HEAP8[i35 >> 0] | 0)) {
  i36 = i34;
  i37 = -1;
 } else {
  HEAP32[i11 + 84 >> 2] = i34 - (HEAP32[i7 + (i34 << 2) >> 2] | 0);
  i24 = i34 + (HEAPU8[i35 >> 0] | 0) | 0;
  i36 = i24;
  i37 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 12 >> 2] = i37;
 i37 = i2 + 4 | 0;
 if (!(HEAP8[i37 >> 0] | 0)) {
  i38 = i36;
  i39 = -1;
 } else {
  HEAP32[i11 + 88 >> 2] = i36 - (HEAP32[i7 + (i36 << 2) >> 2] | 0);
  i24 = i36 + (HEAPU8[i37 >> 0] | 0) | 0;
  i38 = i24;
  i39 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 16 >> 2] = i39;
 i39 = i2 + 5 | 0;
 if (!(HEAP8[i39 >> 0] | 0)) {
  i40 = i38;
  i41 = -1;
 } else {
  HEAP32[i11 + 92 >> 2] = i38 - (HEAP32[i7 + (i38 << 2) >> 2] | 0);
  i24 = i38 + (HEAPU8[i39 >> 0] | 0) | 0;
  i40 = i24;
  i41 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 20 >> 2] = i41;
 i41 = i2 + 6 | 0;
 if (!(HEAP8[i41 >> 0] | 0)) {
  i42 = i40;
  i43 = -1;
 } else {
  HEAP32[i11 + 96 >> 2] = i40 - (HEAP32[i7 + (i40 << 2) >> 2] | 0);
  i24 = i40 + (HEAPU8[i41 >> 0] | 0) | 0;
  i42 = i24;
  i43 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 24 >> 2] = i43;
 i43 = i2 + 7 | 0;
 if (!(HEAP8[i43 >> 0] | 0)) {
  i44 = i42;
  i45 = -1;
 } else {
  HEAP32[i11 + 100 >> 2] = i42 - (HEAP32[i7 + (i42 << 2) >> 2] | 0);
  i24 = i42 + (HEAPU8[i43 >> 0] | 0) | 0;
  i44 = i24;
  i45 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 28 >> 2] = i45;
 i45 = i2 + 8 | 0;
 if (!(HEAP8[i45 >> 0] | 0)) {
  i46 = i44;
  i47 = -1;
 } else {
  HEAP32[i11 + 104 >> 2] = i44 - (HEAP32[i7 + (i44 << 2) >> 2] | 0);
  i24 = i44 + (HEAPU8[i45 >> 0] | 0) | 0;
  i46 = i24;
  i47 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 32 >> 2] = i47;
 i47 = i2 + 9 | 0;
 if (!(HEAP8[i47 >> 0] | 0)) {
  i48 = i46;
  i49 = -1;
 } else {
  HEAP32[i11 + 108 >> 2] = i46 - (HEAP32[i7 + (i46 << 2) >> 2] | 0);
  i24 = i46 + (HEAPU8[i47 >> 0] | 0) | 0;
  i48 = i24;
  i49 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 36 >> 2] = i49;
 i49 = i2 + 10 | 0;
 if (!(HEAP8[i49 >> 0] | 0)) {
  i50 = i48;
  i51 = -1;
 } else {
  HEAP32[i11 + 112 >> 2] = i48 - (HEAP32[i7 + (i48 << 2) >> 2] | 0);
  i24 = i48 + (HEAPU8[i49 >> 0] | 0) | 0;
  i50 = i24;
  i51 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 40 >> 2] = i51;
 i51 = i2 + 11 | 0;
 if (!(HEAP8[i51 >> 0] | 0)) {
  i52 = i50;
  i53 = -1;
 } else {
  HEAP32[i11 + 116 >> 2] = i50 - (HEAP32[i7 + (i50 << 2) >> 2] | 0);
  i24 = i50 + (HEAPU8[i51 >> 0] | 0) | 0;
  i52 = i24;
  i53 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 44 >> 2] = i53;
 i53 = i2 + 12 | 0;
 if (!(HEAP8[i53 >> 0] | 0)) {
  i54 = i52;
  i55 = -1;
 } else {
  HEAP32[i11 + 120 >> 2] = i52 - (HEAP32[i7 + (i52 << 2) >> 2] | 0);
  i24 = i52 + (HEAPU8[i53 >> 0] | 0) | 0;
  i54 = i24;
  i55 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 48 >> 2] = i55;
 i55 = i2 + 13 | 0;
 if (!(HEAP8[i55 >> 0] | 0)) {
  i56 = i54;
  i57 = -1;
 } else {
  HEAP32[i11 + 124 >> 2] = i54 - (HEAP32[i7 + (i54 << 2) >> 2] | 0);
  i24 = i54 + (HEAPU8[i55 >> 0] | 0) | 0;
  i56 = i24;
  i57 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 52 >> 2] = i57;
 i57 = i2 + 14 | 0;
 if (!(HEAP8[i57 >> 0] | 0)) {
  i58 = i56;
  i59 = -1;
 } else {
  HEAP32[i11 + 128 >> 2] = i56 - (HEAP32[i7 + (i56 << 2) >> 2] | 0);
  i24 = i56 + (HEAPU8[i57 >> 0] | 0) | 0;
  i58 = i24;
  i59 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 56 >> 2] = i59;
 i59 = i2 + 15 | 0;
 if (!(HEAP8[i59 >> 0] | 0)) {
  i60 = i58;
  i61 = -1;
 } else {
  HEAP32[i11 + 132 >> 2] = i58 - (HEAP32[i7 + (i58 << 2) >> 2] | 0);
  i24 = i58 + (HEAPU8[i59 >> 0] | 0) | 0;
  i60 = i24;
  i61 = HEAP32[i7 + (i24 + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 60 >> 2] = i61;
 i61 = i2 + 16 | 0;
 if (!(HEAP8[i61 >> 0] | 0)) i62 = -1; else {
  HEAP32[i11 + 136 >> 2] = i60 - (HEAP32[i7 + (i60 << 2) >> 2] | 0);
  i62 = HEAP32[i7 + (i60 + (HEAPU8[i61 >> 0] | 0) + -1 << 2) >> 2] | 0;
 }
 HEAP32[i11 + 64 >> 2] = i62;
 HEAP32[i11 + 68 >> 2] = 1048575;
 _memset(i11 + 144 | 0, 0, 1024) | 0;
 i62 = i2 + 1 | 0;
 if (!(HEAP8[i62 >> 0] | 0)) i63 = 0; else {
  i61 = 1;
  i60 = 0;
  while (1) {
   i24 = i2 + 17 + i60 | 0;
   i59 = 128;
   i58 = HEAP32[i7 + (i60 << 2) >> 2] << 7;
   while (1) {
    HEAP32[i11 + 144 + (i58 << 2) >> 2] = 1;
    HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i24 >> 0] | 0;
    if ((i59 | 0) > 1) {
     i59 = i59 + -1 | 0;
     i58 = i58 + 1 | 0;
    } else break;
   }
   i58 = i60 + 1 | 0;
   if (i61 >>> 0 < (HEAPU8[i62 >> 0] | 0) >>> 0) {
    i61 = i61 + 1 | 0;
    i60 = i58;
   } else {
    i63 = i58;
    break;
   }
  }
 }
 i60 = i2 + 2 | 0;
 if (!(HEAP8[i60 >> 0] | 0)) i64 = i63; else {
  i61 = 1;
  i62 = i63;
  while (1) {
   i63 = i2 + 17 + i62 | 0;
   i58 = 64;
   i59 = HEAP32[i7 + (i62 << 2) >> 2] << 6;
   while (1) {
    HEAP32[i11 + 144 + (i59 << 2) >> 2] = 2;
    HEAP8[i11 + 1168 + i59 >> 0] = HEAP8[i63 >> 0] | 0;
    if ((i58 | 0) > 1) {
     i58 = i58 + -1 | 0;
     i59 = i59 + 1 | 0;
    } else break;
   }
   i59 = i62 + 1 | 0;
   if (i61 >>> 0 < (HEAPU8[i60 >> 0] | 0) >>> 0) {
    i61 = i61 + 1 | 0;
    i62 = i59;
   } else {
    i64 = i59;
    break;
   }
  }
 }
 i62 = i2 + 3 | 0;
 if (!(HEAP8[i62 >> 0] | 0)) i65 = i64; else {
  i61 = 1;
  i60 = i64;
  while (1) {
   i64 = HEAP32[i7 + (i60 << 2) >> 2] << 5;
   i59 = i2 + 17 + i60 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i64 | 1;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i58 + 1 | 0;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i64 | 3;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 1 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 2 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 3 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i64 | 7;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i58 + 1 | 0;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i58 + 2 | 0;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i58 + 3 | 0;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i58 + 4 | 0;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i58 + 5 | 0;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i58 + 6 | 0;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i58 + 7 | 0;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i63 = i64 | 15;
   HEAP32[i11 + 144 + (i63 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i63 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 1 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 2 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 3 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 4 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 5 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 6 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 7 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 8 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 9 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 10 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 11 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 12 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 13 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 14 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i63 + 15 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i64 | 31;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 3;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i59 = i60 + 1 | 0;
   if (i61 >>> 0 < (HEAPU8[i62 >> 0] | 0) >>> 0) {
    i61 = i61 + 1 | 0;
    i60 = i59;
   } else {
    i65 = i59;
    break;
   }
  }
 }
 i60 = i2 + 4 | 0;
 if (!(HEAP8[i60 >> 0] | 0)) i66 = i65; else {
  i61 = 1;
  i62 = i65;
  while (1) {
   i65 = HEAP32[i7 + (i62 << 2) >> 2] << 4;
   i59 = i2 + 17 + i62 | 0;
   HEAP32[i11 + 144 + (i65 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i65 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i65 | 1;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i58 + 1 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i65 | 3;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i64 + 1 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i64 + 2 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i64 + 3 | 0;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i58 = i65 | 7;
   HEAP32[i11 + 144 + (i58 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i58 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i58 + 1 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i58 + 2 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i58 + 3 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i58 + 4 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i58 + 5 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i58 + 6 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i58 + 7 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i65 | 15;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 4;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i59 = i62 + 1 | 0;
   if (i61 >>> 0 < (HEAPU8[i60 >> 0] | 0) >>> 0) {
    i61 = i61 + 1 | 0;
    i62 = i59;
   } else {
    i66 = i59;
    break;
   }
  }
 }
 i62 = i2 + 5 | 0;
 if (!(HEAP8[i62 >> 0] | 0)) i67 = i66; else {
  i61 = 1;
  i60 = i66;
  while (1) {
   i66 = HEAP32[i7 + (i60 << 2) >> 2] << 3;
   i59 = i2 + 17 + i60 | 0;
   HEAP32[i11 + 144 + (i66 << 2) >> 2] = 5;
   HEAP8[i11 + 1168 + i66 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i66 | 1;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 5;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i65 = i64 + 1 | 0;
   HEAP32[i11 + 144 + (i65 << 2) >> 2] = 5;
   HEAP8[i11 + 1168 + i65 >> 0] = HEAP8[i59 >> 0] | 0;
   i65 = i66 | 3;
   HEAP32[i11 + 144 + (i65 << 2) >> 2] = 5;
   HEAP8[i11 + 1168 + i65 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i65 + 1 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 5;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i65 + 2 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 5;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i65 + 3 | 0;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 5;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i66 | 7;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 5;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i59 = i60 + 1 | 0;
   if (i61 >>> 0 < (HEAPU8[i62 >> 0] | 0) >>> 0) {
    i61 = i61 + 1 | 0;
    i60 = i59;
   } else {
    i67 = i59;
    break;
   }
  }
 }
 i60 = i2 + 6 | 0;
 if (!(HEAP8[i60 >> 0] | 0)) i68 = i67; else {
  i61 = 1;
  i62 = i67;
  while (1) {
   i67 = HEAP32[i7 + (i62 << 2) >> 2] << 2;
   i59 = i2 + 17 + i62 | 0;
   HEAP32[i11 + 144 + (i67 << 2) >> 2] = 6;
   HEAP8[i11 + 1168 + i67 >> 0] = HEAP8[i59 >> 0] | 0;
   i64 = i67 | 1;
   HEAP32[i11 + 144 + (i64 << 2) >> 2] = 6;
   HEAP8[i11 + 1168 + i64 >> 0] = HEAP8[i59 >> 0] | 0;
   i66 = i64 + 1 | 0;
   HEAP32[i11 + 144 + (i66 << 2) >> 2] = 6;
   HEAP8[i11 + 1168 + i66 >> 0] = HEAP8[i59 >> 0] | 0;
   i66 = i67 | 3;
   HEAP32[i11 + 144 + (i66 << 2) >> 2] = 6;
   HEAP8[i11 + 1168 + i66 >> 0] = HEAP8[i59 >> 0] | 0;
   i59 = i62 + 1 | 0;
   if (i61 >>> 0 < (HEAPU8[i60 >> 0] | 0) >>> 0) {
    i61 = i61 + 1 | 0;
    i62 = i59;
   } else {
    i68 = i59;
    break;
   }
  }
 }
 i62 = i2 + 7 | 0;
 if (!(HEAP8[i62 >> 0] | 0)) i69 = i68; else {
  i61 = 1;
  i60 = i68;
  while (1) {
   i68 = HEAP32[i7 + (i60 << 2) >> 2] << 1;
   i59 = i2 + 17 + i60 | 0;
   HEAP32[i11 + 144 + (i68 << 2) >> 2] = 7;
   HEAP8[i11 + 1168 + i68 >> 0] = HEAP8[i59 >> 0] | 0;
   i66 = i68 | 1;
   HEAP32[i11 + 144 + (i66 << 2) >> 2] = 7;
   HEAP8[i11 + 1168 + i66 >> 0] = HEAP8[i59 >> 0] | 0;
   i59 = i60 + 1 | 0;
   if (i61 >>> 0 < (HEAPU8[i62 >> 0] | 0) >>> 0) {
    i61 = i61 + 1 | 0;
    i60 = i59;
   } else {
    i69 = i59;
    break;
   }
  }
 }
 i60 = i2 + 8 | 0;
 if (HEAP8[i60 >> 0] | 0) {
  i61 = 1;
  i62 = i69;
  while (1) {
   i69 = HEAP32[i7 + (i62 << 2) >> 2] | 0;
   HEAP32[i11 + 144 + (i69 << 2) >> 2] = 8;
   HEAP8[i11 + 1168 + i69 >> 0] = HEAP8[i2 + 17 + i62 >> 0] | 0;
   if (i61 >>> 0 < (HEAPU8[i60 >> 0] | 0) >>> 0) {
    i61 = i61 + 1 | 0;
    i62 = i62 + 1 | 0;
   } else break;
  }
 }
 if (!(i8 & (i28 | 0) > 0)) {
  STACKTOP = i5;
  return;
 }
 i8 = 0;
 do {
  if ((HEAPU8[i2 + 17 + i8 >> 0] | 0) > 15) {
   i62 = HEAP32[i1 >> 2] | 0;
   HEAP32[i62 + 20 >> 2] = 8;
   FUNCTION_TABLE_vi[HEAP32[i62 >> 2] & 255](i10);
  }
  i8 = i8 + 1 | 0;
 } while ((i8 | 0) != (i28 | 0));
 STACKTOP = i5;
 return;
}

function _arDetectMarker(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, i54 = 0, d55 = 0.0, i56 = 0, d57 = 0.0, i58 = 0, d59 = 0.0, d60 = 0.0, d61 = 0.0, d62 = 0.0, d63 = 0.0, d64 = 0.0, d65 = 0.0, d66 = 0.0, d67 = 0.0, d68 = 0.0, d69 = 0.0, d70 = 0.0, d71 = 0.0, d72 = 0.0, d73 = 0.0, d74 = 0.0, d75 = 0.0, d76 = 0.0, d77 = 0.0, d78 = 0.0, i79 = 0, d80 = 0.0, i81 = 0, d82 = 0.0, i83 = 0, d84 = 0.0, i85 = 0, i86 = 0, i87 = 0, i88 = 0, i89 = 0, i90 = 0, i91 = 0, i92 = 0, i93 = 0, i94 = 0, i95 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i3 + 32 | 0;
 i5 = i3 + 24 | 0;
 i6 = i3;
 i7 = i3 + 40 | 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  i8 = -1;
  STACKTOP = i3;
  return i8 | 0;
 }
 i9 = i1 + 44 | 0;
 HEAP32[i9 >> 2] = 0;
 i10 = i1 + 7062388 | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 L4 : do if ((i11 | 0) == 4) {
  i12 = i1 + 7062396 | 0;
  i13 = HEAP32[i12 >> 2] | 0;
  do if ((i13 | 0) > 0) i14 = i13 + -1 | 0; else {
   i15 = i1 + 16 | 0;
   i16 = HEAP32[i15 >> 2] | 0;
   i17 = i1 + 7062400 | 0;
   i18 = (HEAP32[i17 >> 2] | 0) + i16 | 0;
   i19 = (i18 | 0) < 255 ? i18 : 255;
   i18 = i1 + 7062404 | 0;
   i20 = i16 - (HEAP32[i18 >> 2] | 0) | 0;
   i21 = (i20 | 0) > 0 ? i20 : 0;
   i20 = i2 + 12 | 0;
   i22 = i1 + 36 | 0;
   i23 = i1 + 40 | 0;
   i24 = i1 + 12 | 0;
   i25 = i1 + 20 | 0;
   i26 = i1 + 4834144 | 0;
   i27 = i1 + 15416 | 0;
   i28 = i1 + 15408 | 0;
   i29 = i1 + 4 | 0;
   i30 = i1 + 7062384 | 0;
   i31 = i1 + 24 | 0;
   i32 = i1 + 32 | 0;
   i33 = i1 + 7062416 | 0;
   i34 = i1 + 48 | 0;
   i35 = i1 + 7062424 | 0;
   if ((_arLabeling(HEAP32[i20 >> 2] | 0, HEAP32[i22 >> 2] | 0, HEAP32[i23 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i24 >> 2] | 0, i19, HEAP32[i25 >> 2] | 0, i26, 0) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   }
   if ((_arDetectMarker2(HEAP32[i22 >> 2] | 0, HEAP32[i23 >> 2] | 0, i26, HEAP32[i25 >> 2] | 0, 1e6, 70, 1.0, i27, i28) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   }
   if ((_arGetMarkerInfo(HEAP32[i2 >> 2] | 0, HEAP32[i22 >> 2] | 0, HEAP32[i23 >> 2] | 0, HEAP32[i29 >> 2] | 0, i27, HEAP32[i28 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i25 >> 2] | 0, HEAP32[i31 >> 2] | 0, (HEAP32[i32 >> 2] | 0) + 184 | 0, +HEAPF64[i33 >> 3], i34, i9, HEAP32[i35 >> 2] | 0) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   }
   i36 = HEAP32[i9 >> 2] | 0;
   if ((_arLabeling(HEAP32[i20 >> 2] | 0, HEAP32[i22 >> 2] | 0, HEAP32[i23 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i24 >> 2] | 0, i21, HEAP32[i25 >> 2] | 0, i26, 0) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   }
   if ((_arDetectMarker2(HEAP32[i22 >> 2] | 0, HEAP32[i23 >> 2] | 0, i26, HEAP32[i25 >> 2] | 0, 1e6, 70, 1.0, i27, i28) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   }
   if ((_arGetMarkerInfo(HEAP32[i2 >> 2] | 0, HEAP32[i22 >> 2] | 0, HEAP32[i23 >> 2] | 0, HEAP32[i29 >> 2] | 0, i27, HEAP32[i28 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i25 >> 2] | 0, HEAP32[i31 >> 2] | 0, (HEAP32[i32 >> 2] | 0) + 184 | 0, +HEAPF64[i33 >> 3], i34, i9, HEAP32[i35 >> 2] | 0) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   }
   i37 = HEAP32[i9 >> 2] | 0;
   if ((_arLabeling(HEAP32[i20 >> 2] | 0, HEAP32[i22 >> 2] | 0, HEAP32[i23 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i24 >> 2] | 0, i16, HEAP32[i25 >> 2] | 0, i26, 0) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   }
   if ((_arDetectMarker2(HEAP32[i22 >> 2] | 0, HEAP32[i23 >> 2] | 0, i26, HEAP32[i25 >> 2] | 0, 1e6, 70, 1.0, i27, i28) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   }
   if ((_arGetMarkerInfo(HEAP32[i2 >> 2] | 0, HEAP32[i22 >> 2] | 0, HEAP32[i23 >> 2] | 0, HEAP32[i29 >> 2] | 0, i27, HEAP32[i28 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i25 >> 2] | 0, HEAP32[i31 >> 2] | 0, (HEAP32[i32 >> 2] | 0) + 184 | 0, +HEAPF64[i33 >> 3], i34, i9, HEAP32[i35 >> 2] | 0) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   }
   i35 = HEAP32[i9 >> 2] | 0;
   if ((HEAP32[i1 >> 2] | 0) == 1) {
    HEAP32[i6 >> 2] = i21;
    HEAP32[i6 + 4 >> 2] = i37;
    HEAP32[i6 + 8 >> 2] = i16;
    HEAP32[i6 + 12 >> 2] = i35;
    HEAP32[i6 + 16 >> 2] = i19;
    HEAP32[i6 + 20 >> 2] = i36;
    _arLog(0, 3, 17750, i6);
   }
   if ((i36 | 0) > (i35 | 0) | (i37 | 0) > (i35 | 0)) {
    i35 = (i36 | 0) < (i37 | 0) ? i21 : i19;
    HEAP32[i15 >> 2] = i35;
    i15 = i35 - i16 | 0;
    if ((i15 | 0) > 0) {
     HEAP32[i17 >> 2] = i15;
     i38 = 1;
    } else {
     HEAP32[i17 >> 2] = 1;
     i38 = 0 - i15 | 0;
    }
    HEAP32[i18 >> 2] = i38;
    if ((HEAP32[i1 >> 2] | 0) == 1) {
     HEAP32[i5 >> 2] = i35;
     _arLog(0, 3, 17826, i5);
     i14 = HEAP32[i1 + 7062392 >> 2] | 0;
     break;
    } else {
     i14 = HEAP32[i1 + 7062392 >> 2] | 0;
     break;
    }
   }
   i35 = HEAP32[i17 >> 2] | 0;
   i15 = HEAP32[i18 >> 2] | 0;
   do if ((i35 | 0) >= (i15 | 0)) if ((i35 | 0) > (i15 | 0)) {
    HEAP32[i18 >> 2] = i15 + 1;
    i39 = i35;
    break;
   } else {
    i19 = i35 + 1 | 0;
    HEAP32[i17 >> 2] = i19;
    HEAP32[i18 >> 2] = i15 + 1;
    i39 = i19;
    break;
   } else {
    i19 = i35 + 1 | 0;
    HEAP32[i17 >> 2] = i19;
    i39 = i19;
   } while (0);
   if ((i39 + i16 | 0) > 254) {
    HEAP32[i17 >> 2] = 1;
    i40 = 1;
   } else i40 = i39;
   if ((i16 | 0) <= (i40 | 0)) HEAP32[i18 >> 2] = 1;
   HEAP32[i12 >> 2] = HEAP32[i1 + 7062392 >> 2];
   break L4;
  } while (0);
  HEAP32[i12 >> 2] = i14;
  i41 = HEAP32[i10 >> 2] | 0;
  i42 = 28;
 } else {
  i41 = i11;
  i42 = 28;
 } while (0);
 if ((i42 | 0) == 28) {
  L65 : do switch (i41 | 0) {
  case 3:
   {
    i11 = i1 + 7062408 | 0;
    i14 = i2 + 12 | 0;
    i40 = _arImageProcLumaHistAndBoxFilterWithBias(HEAP32[i11 >> 2] | 0, HEAP32[i14 >> 2] | 0, 9, -7) | 0;
    if ((i40 | 0) < 0) {
     i8 = i40;
     STACKTOP = i3;
     return i8 | 0;
    }
    i40 = HEAP32[i11 >> 2] | 0;
    i11 = i1 + 4834144 | 0;
    i39 = _arLabeling(HEAP32[i14 >> 2] | 0, HEAP32[i40 + 4 >> 2] | 0, HEAP32[i40 + 8 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 12 >> 2] | 0, 0, 0, i11, HEAP32[i40 >> 2] | 0) | 0;
    if ((i39 | 0) < 0) {
     i8 = i39;
     STACKTOP = i3;
     return i8 | 0;
    } else {
     i43 = i1 + 36 | 0;
     i44 = i1 + 40 | 0;
     i45 = i1 + 20 | 0;
     i46 = i11;
     break L65;
    }
    break;
   }
  case 2:
  case 1:
   {
    i11 = i1 + 7062396 | 0;
    i39 = HEAP32[i11 >> 2] | 0;
    if ((i39 | 0) > 0) {
     HEAP32[i11 >> 2] = i39 + -1;
     i42 = 43;
     break L65;
    }
    i39 = HEAP32[i1 + 7062408 >> 2] | 0;
    i40 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i41 | 0) == 1) i47 = _arImageProcLumaHistAndCDFAndMedian(i39, i40, i7) | 0; else i47 = _arImageProcLumaHistAndOtsu(i39, i40, i7) | 0;
    if ((i47 | 0) < 0) {
     i8 = i47;
     STACKTOP = i3;
     return i8 | 0;
    }
    i40 = i1 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == 1 ? (i39 = HEAPU8[i7 >> 0] | 0, (HEAP32[i40 >> 2] | 0) != (i39 | 0)) : 0) {
     HEAP32[i4 >> 2] = (HEAP32[i10 >> 2] | 0) == 1 ? 17878 : 17885;
     HEAP32[i4 + 4 >> 2] = i39;
     _arLog(0, 3, 17890, i4);
    }
    HEAP32[i40 >> 2] = HEAPU8[i7 >> 0];
    HEAP32[i11 >> 2] = HEAP32[i1 + 7062392 >> 2];
    i42 = 43;
    break;
   }
  default:
   i42 = 43;
  } while (0);
  if ((i42 | 0) == 43) {
   i42 = i1 + 36 | 0;
   i7 = i1 + 40 | 0;
   i4 = i1 + 20 | 0;
   i10 = i1 + 4834144 | 0;
   if ((_arLabeling(HEAP32[i2 + 12 >> 2] | 0, HEAP32[i42 >> 2] | 0, HEAP32[i7 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 12 >> 2] | 0, HEAP32[i1 + 16 >> 2] | 0, HEAP32[i4 >> 2] | 0, i10, 0) | 0) < 0) {
    i8 = -1;
    STACKTOP = i3;
    return i8 | 0;
   } else {
    i43 = i42;
    i44 = i7;
    i45 = i4;
    i46 = i10;
   }
  }
  i10 = i1 + 15416 | 0;
  i4 = i1 + 15408 | 0;
  if ((_arDetectMarker2(HEAP32[i43 >> 2] | 0, HEAP32[i44 >> 2] | 0, i46, HEAP32[i45 >> 2] | 0, 1e6, 70, 1.0, i10, i4) | 0) < 0) {
   i8 = -1;
   STACKTOP = i3;
   return i8 | 0;
  }
  if ((_arGetMarkerInfo(HEAP32[i2 >> 2] | 0, HEAP32[i43 >> 2] | 0, HEAP32[i44 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, i10, HEAP32[i4 >> 2] | 0, HEAP32[i1 + 7062384 >> 2] | 0, HEAP32[i45 >> 2] | 0, HEAP32[i1 + 24 >> 2] | 0, (HEAP32[i1 + 32 >> 2] | 0) + 184 | 0, +HEAPF64[i1 + 7062416 >> 3], i1 + 48 | 0, i9, HEAP32[i1 + 7062424 >> 2] | 0) | 0) < 0) {
   i8 = -1;
   STACKTOP = i3;
   return i8 | 0;
  }
 }
 i45 = i1 + 28 | 0;
 if ((HEAP32[i45 >> 2] | 0) == 1) {
  _confidenceCutoff(i1);
  i8 = 0;
  STACKTOP = i3;
  return i8 | 0;
 }
 i4 = i1 + 4818296 | 0;
 i10 = HEAP32[i4 >> 2] | 0;
 L102 : do if ((i10 | 0) > 0) {
  i44 = (HEAP32[i9 >> 2] | 0) > 0;
  i43 = i1 + 24 | 0;
  i2 = 0;
  i46 = i10;
  L104 : while (1) {
   L106 : do if (i44) {
    d48 = +(HEAP32[i1 + 4818304 + (i2 * 264 | 0) >> 2] | 0);
    i7 = HEAP32[i9 >> 2] | 0;
    i42 = i1 + 4818304 + (i2 * 264 | 0) + 56 | 0;
    i47 = i1 + 4818304 + (i2 * 264 | 0) + 64 | 0;
    i41 = 0;
    i11 = -1;
    d49 = .5;
    while (1) {
     d50 = +(HEAP32[i1 + 48 + (i41 << 8) >> 2] | 0);
     d51 = d48 / d50;
     if (!(d51 < .7 | d51 > 1.43) ? (d51 = +HEAPF64[i1 + 48 + (i41 << 8) + 56 >> 3] - +HEAPF64[i42 >> 3], d52 = +HEAPF64[i1 + 48 + (i41 << 8) + 64 >> 3] - +HEAPF64[i47 >> 3], d53 = (d51 * d51 + d52 * d52) / d50, d53 < d49) : 0) {
      i54 = i41;
      d55 = d53;
     } else {
      i54 = i11;
      d55 = d49;
     }
     i41 = i41 + 1 | 0;
     if ((i41 | 0) >= (i7 | 0)) break; else {
      i11 = i54;
      d49 = d55;
     }
    }
    if ((i54 | 0) > -1) {
     i11 = HEAP32[i43 >> 2] | 0;
     switch (i11 | 0) {
     case 2:
     case 1:
     case 0:
      break;
     case 4:
     case 3:
      {
       i7 = i1 + 48 + (i54 << 8) + 40 | 0;
       d49 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 40 >> 3];
       if (!(+HEAPF64[i7 >> 3] < d49)) {
        i41 = i1 + 48 + (i54 << 8) + 48 | 0;
        d48 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 48 >> 3];
        if (+HEAPF64[i41 >> 3] < d48) {
         i56 = i41;
         d57 = d48;
        } else {
         i58 = i46;
         break L106;
        }
       } else {
        i56 = i1 + 48 + (i54 << 8) + 48 | 0;
        d57 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 48 >> 3];
       }
       HEAPF64[i7 >> 3] = d49;
       HEAP32[i1 + 48 + (i54 << 8) + 8 >> 2] = HEAP32[i1 + 4818304 + (i2 * 264 | 0) + 8 >> 2];
       HEAPF64[i56 >> 3] = d57;
       HEAP32[i1 + 48 + (i54 << 8) + 12 >> 2] = HEAP32[i1 + 4818304 + (i2 * 264 | 0) + 12 >> 2];
       i7 = i1 + 4818304 + (i2 * 264 | 0) + 168 | 0;
       d49 = +HEAPF64[i7 >> 3];
       i41 = i1 + 48 + (i54 << 8) + 168 | 0;
       d48 = +HEAPF64[i41 >> 3];
       d53 = d49 - d48;
       i47 = i1 + 4818304 + (i2 * 264 | 0) + 176 | 0;
       d50 = +HEAPF64[i47 >> 3];
       i42 = i1 + 48 + (i54 << 8) + 176 | 0;
       d52 = +HEAPF64[i42 >> 3];
       d51 = d50 - d52;
       i40 = i1 + 4818304 + (i2 * 264 | 0) + 184 | 0;
       d59 = +HEAPF64[i40 >> 3];
       i39 = i1 + 48 + (i54 << 8) + 184 | 0;
       d60 = +HEAPF64[i39 >> 3];
       d61 = d59 - d60;
       i14 = i1 + 4818304 + (i2 * 264 | 0) + 192 | 0;
       d62 = +HEAPF64[i14 >> 3];
       i5 = i1 + 48 + (i54 << 8) + 192 | 0;
       d63 = +HEAPF64[i5 >> 3];
       d64 = d62 - d63;
       i38 = i1 + 4818304 + (i2 * 264 | 0) + 200 | 0;
       d65 = +HEAPF64[i38 >> 3];
       i6 = i1 + 48 + (i54 << 8) + 200 | 0;
       d66 = +HEAPF64[i6 >> 3];
       d67 = d65 - d66;
       i13 = i1 + 4818304 + (i2 * 264 | 0) + 208 | 0;
       d68 = +HEAPF64[i13 >> 3];
       i35 = i1 + 48 + (i54 << 8) + 208 | 0;
       d69 = +HEAPF64[i35 >> 3];
       d70 = d68 - d69;
       d71 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 216 >> 3];
       d72 = +HEAPF64[i1 + 48 + (i54 << 8) + 216 >> 3];
       d73 = d71 - d72;
       d74 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 224 >> 3];
       d75 = +HEAPF64[i1 + 48 + (i54 << 8) + 224 >> 3];
       d76 = d74 - d75;
       d77 = d53 * d53 + d51 * d51 + 0.0 + (d61 * d61 + d64 * d64) + (d67 * d67 + d70 * d70) + (d73 * d73 + d76 * d76);
       i15 = d77 < 1.0e8;
       d76 = i15 ? d77 : 1.0e8;
       d77 = d49 - d60;
       d73 = d50 - d63;
       d70 = d59 - d66;
       d67 = d62 - d69;
       d64 = d65 - d72;
       d61 = d68 - d75;
       d51 = d71 - d48;
       d53 = d74 - d52;
       d78 = d77 * d77 + d73 * d73 + 0.0 + (d70 * d70 + d67 * d67) + (d64 * d64 + d61 * d61) + (d51 * d51 + d53 * d53);
       i19 = d78 < d76;
       d53 = i19 ? d78 : d76;
       d76 = d49 - d66;
       d66 = d50 - d69;
       d69 = d59 - d72;
       d59 = d62 - d75;
       d62 = d65 - d48;
       d48 = d68 - d52;
       d52 = d71 - d60;
       d60 = d74 - d63;
       d63 = d76 * d76 + d66 * d66 + 0.0 + (d69 * d69 + d59 * d59) + (d62 * d62 + d48 * d48) + (d52 * d52 + d60 * d60);
       i21 = d63 < d53;
       d60 = +HEAPF64[i7 >> 3] - d72;
       d72 = +HEAPF64[i47 >> 3] - d75;
       d75 = +HEAPF64[i40 >> 3] - +HEAPF64[i41 >> 3];
       d52 = +HEAPF64[i14 >> 3] - +HEAPF64[i42 >> 3];
       d48 = +HEAPF64[i38 >> 3] - +HEAPF64[i39 >> 3];
       d62 = +HEAPF64[i13 >> 3] - +HEAPF64[i5 >> 3];
       d59 = d71 - +HEAPF64[i6 >> 3];
       d71 = d74 - +HEAPF64[i35 >> 3];
       i35 = d60 * d60 + d72 * d72 + 0.0 + (d75 * d75 + d52 * d52) + (d48 * d48 + d62 * d62) + (d59 * d59 + d71 * d71) < (i21 ? d63 : d53) ? 1 : i21 ? 2 : i19 ? 3 : i15 ? 4 : 5;
       HEAP32[i1 + 48 + (i54 << 8) + 20 >> 2] = (i35 + (HEAP32[i1 + 4818304 + (i2 * 264 | 0) + 20 >> 2] | 0) | 0) % 4 | 0;
       HEAP32[i1 + 48 + (i54 << 8) + 24 >> 2] = (i35 + (HEAP32[i1 + 4818304 + (i2 * 264 | 0) + 24 >> 2] | 0) | 0) % 4 | 0;
       i58 = HEAP32[i4 >> 2] | 0;
       break L106;
       break;
      }
     default:
      {
       i8 = -1;
       break L104;
      }
     }
     i35 = i1 + 48 + (i54 << 8) + 32 | 0;
     d53 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 32 >> 3];
     if (+HEAPF64[i35 >> 3] < d53) {
      HEAPF64[i35 >> 3] = d53;
      i35 = HEAP32[i1 + 4818304 + (i2 * 264 | 0) + 4 >> 2] | 0;
      HEAP32[i1 + 48 + (i54 << 8) + 4 >> 2] = i35;
      i15 = i1 + 4818304 + (i2 * 264 | 0) + 16 | 0;
      d63 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 168 >> 3];
      d71 = +HEAPF64[i1 + 48 + (i54 << 8) + 168 >> 3];
      d59 = d63 - d71;
      d62 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 176 >> 3];
      d48 = +HEAPF64[i1 + 48 + (i54 << 8) + 176 >> 3];
      d52 = d62 - d48;
      d75 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 184 >> 3];
      d72 = +HEAPF64[i1 + 48 + (i54 << 8) + 184 >> 3];
      d60 = d75 - d72;
      d74 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 192 >> 3];
      d69 = +HEAPF64[i1 + 48 + (i54 << 8) + 192 >> 3];
      d66 = d74 - d69;
      d76 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 200 >> 3];
      d68 = +HEAPF64[i1 + 48 + (i54 << 8) + 200 >> 3];
      d65 = d76 - d68;
      d50 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 208 >> 3];
      d49 = +HEAPF64[i1 + 48 + (i54 << 8) + 208 >> 3];
      d78 = d50 - d49;
      d51 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 216 >> 3];
      d61 = +HEAPF64[i1 + 48 + (i54 << 8) + 216 >> 3];
      d64 = d51 - d61;
      d67 = +HEAPF64[i1 + 4818304 + (i2 * 264 | 0) + 224 >> 3];
      d70 = +HEAPF64[i1 + 48 + (i54 << 8) + 224 >> 3];
      d73 = d67 - d70;
      d77 = d59 * d59 + d52 * d52 + 0.0 + (d60 * d60 + d66 * d66) + (d65 * d65 + d78 * d78) + (d64 * d64 + d73 * d73);
      if (d77 < 1.0e8) {
       i79 = ((HEAP32[i15 >> 2] | 0) + 4 | 0) % 4 | 0;
       d80 = d77;
      } else {
       i79 = -1;
       d80 = 1.0e8;
      }
      d77 = d63 - d72;
      d73 = d62 - d69;
      d64 = d75 - d68;
      d78 = d74 - d49;
      d65 = d76 - d61;
      d66 = d50 - d70;
      d60 = d51 - d71;
      d52 = d67 - d48;
      d59 = d77 * d77 + d73 * d73 + 0.0 + (d64 * d64 + d78 * d78) + (d65 * d65 + d66 * d66) + (d60 * d60 + d52 * d52);
      if (d59 < d80) {
       i81 = ((HEAP32[i15 >> 2] | 0) + 3 | 0) % 4 | 0;
       d82 = d59;
      } else {
       i81 = i79;
       d82 = d80;
      }
      d59 = d63 - d68;
      d52 = d62 - d49;
      d60 = d75 - d61;
      d66 = d74 - d70;
      d65 = d76 - d71;
      d78 = d50 - d48;
      d64 = d51 - d72;
      d73 = d67 - d69;
      d77 = d59 * d59 + d52 * d52 + 0.0 + (d60 * d60 + d66 * d66) + (d65 * d65 + d78 * d78) + (d64 * d64 + d73 * d73);
      if (d77 < d82) {
       i83 = ((HEAP32[i15 >> 2] | 0) + 2 | 0) % 4 | 0;
       d84 = d77;
      } else {
       i83 = i81;
       d84 = d82;
      }
      d77 = d63 - d61;
      d61 = d62 - d70;
      d70 = d75 - d71;
      d71 = d74 - d48;
      d48 = d76 - d72;
      d72 = d50 - d69;
      d69 = d51 - d68;
      d68 = d67 - d49;
      if (d77 * d77 + d61 * d61 + 0.0 + (d70 * d70 + d71 * d71) + (d48 * d48 + d72 * d72) + (d69 * d69 + d68 * d68) < d84) i85 = ((HEAP32[i15 >> 2] | 0) + 1 | 0) % 4 | 0; else i85 = i83;
      HEAP32[i1 + 48 + (i54 << 8) + 16 >> 2] = i85;
      if (i11 >>> 0 < 2) {
       HEAP32[i1 + 48 + (i54 << 8) + 8 >> 2] = i35;
       HEAPF64[i1 + 48 + (i54 << 8) + 40 >> 3] = d53;
       HEAP32[i1 + 48 + (i54 << 8) + 20 >> 2] = i85;
       i58 = i46;
       break;
      } else {
       HEAP32[i1 + 48 + (i54 << 8) + 12 >> 2] = i35;
       HEAPF64[i1 + 48 + (i54 << 8) + 48 >> 3] = d53;
       HEAP32[i1 + 48 + (i54 << 8) + 24 >> 2] = i85;
       i58 = i46;
       break;
      }
     } else i58 = i46;
    } else i58 = i46;
   } else i58 = i46; while (0);
   i2 = i2 + 1 | 0;
   if ((i2 | 0) >= (i58 | 0)) break L102; else i46 = i58;
  }
  STACKTOP = i3;
  return i8 | 0;
 } while (0);
 _confidenceCutoff(i1);
 i58 = HEAP32[i4 >> 2] | 0;
 if ((i58 | 0) > 0) {
  i85 = 0;
  i54 = 0;
  i83 = i58;
  while (1) {
   i58 = i1 + 4818304 + (i85 * 264 | 0) + 256 | 0;
   i81 = HEAP32[i58 >> 2] | 0;
   HEAP32[i58 >> 2] = i81 + 1;
   if ((i81 | 0) < 3) {
    if ((i85 | 0) == (i54 | 0)) i86 = i83; else {
     _memcpy(i1 + 4818304 + (i54 * 264 | 0) | 0, i1 + 4818304 + (i85 * 264 | 0) | 0, 264) | 0;
     i86 = HEAP32[i4 >> 2] | 0;
    }
    i87 = i54 + 1 | 0;
    i88 = i86;
   } else {
    i87 = i54;
    i88 = i83;
   }
   i85 = i85 + 1 | 0;
   if ((i85 | 0) >= (i88 | 0)) {
    i89 = i87;
    break;
   } else {
    i54 = i87;
    i83 = i88;
   }
  }
 } else i89 = 0;
 HEAP32[i4 >> 2] = i89;
 i89 = HEAP32[i9 >> 2] | 0;
 L153 : do if ((i89 | 0) > 0) {
  i88 = 0;
  i83 = i89;
  while (1) {
   i87 = i1 + 48 + (i88 << 8) | 0;
   i54 = HEAP32[i1 + 48 + (i88 << 8) + 4 >> 2] | 0;
   if ((i54 | 0) < 0) i90 = i83; else {
    i85 = HEAP32[i4 >> 2] | 0;
    L159 : do if ((i85 | 0) > 0) {
     i86 = 0;
     while (1) {
      if ((HEAP32[i1 + 4818304 + (i86 * 264 | 0) + 4 >> 2] | 0) == (i54 | 0)) {
       i91 = i86;
       break L159;
      }
      i81 = i86 + 1 | 0;
      if ((i81 | 0) < (i85 | 0)) i86 = i81; else {
       i91 = i81;
       break;
      }
     }
    } else i91 = 0; while (0);
    if ((i91 | 0) == (i85 | 0)) {
     if ((i85 | 0) == 60) {
      i92 = i83;
      break L153;
     }
     HEAP32[i4 >> 2] = i85 + 1;
    }
    _memcpy(i1 + 4818304 + (i91 * 264 | 0) | 0, i87 | 0, 256) | 0;
    HEAP32[i1 + 4818304 + (i91 * 264 | 0) + 256 >> 2] = 1;
    i90 = HEAP32[i9 >> 2] | 0;
   }
   i88 = i88 + 1 | 0;
   if ((i88 | 0) >= (i90 | 0)) {
    i92 = i90;
    break;
   } else i83 = i90;
  }
 } else i92 = i89; while (0);
 if ((HEAP32[i45 >> 2] | 0) == 2) {
  i8 = 0;
  STACKTOP = i3;
  return i8 | 0;
 }
 i45 = HEAP32[i4 >> 2] | 0;
 if ((i45 | 0) <= 0) {
  i8 = 0;
  STACKTOP = i3;
  return i8 | 0;
 }
 i89 = 0;
 i90 = i92;
 i92 = i45;
 while (1) {
  L179 : do if ((i90 | 0) > 0) {
   d84 = +(HEAP32[i1 + 4818304 + (i89 * 264 | 0) >> 2] | 0);
   i45 = i1 + 4818304 + (i89 * 264 | 0) + 56 | 0;
   i91 = i1 + 4818304 + (i89 * 264 | 0) + 64 | 0;
   i83 = 0;
   while (1) {
    d82 = +(HEAP32[i1 + 48 + (i83 << 8) >> 2] | 0);
    d80 = d84 / d82;
    if (!(d80 < .7 | d80 > 1.43) ? (d80 = +HEAPF64[i1 + 48 + (i83 << 8) + 56 >> 3] - +HEAPF64[i45 >> 3], d57 = +HEAPF64[i1 + 48 + (i83 << 8) + 64 >> 3] - +HEAPF64[i91 >> 3], (d80 * d80 + d57 * d57) / d82 < .5) : 0) {
     i93 = i83;
     break L179;
    }
    i88 = i83 + 1 | 0;
    if ((i88 | 0) < (i90 | 0)) i83 = i88; else {
     i93 = i88;
     break;
    }
   }
  } else i93 = 0; while (0);
  if ((i93 | 0) == (i90 | 0)) {
   _memcpy(i1 + 48 + (i90 << 8) | 0, i1 + 4818304 + (i89 * 264 | 0) | 0, 256) | 0;
   i83 = (HEAP32[i9 >> 2] | 0) + 1 | 0;
   HEAP32[i9 >> 2] = i83;
   i94 = HEAP32[i4 >> 2] | 0;
   i95 = i83;
  } else {
   i94 = i92;
   i95 = i90;
  }
  i89 = i89 + 1 | 0;
  if ((i89 | 0) >= (i94 | 0)) {
   i8 = 0;
   break;
  } else {
   i90 = i95;
   i92 = i94;
  }
 }
 STACKTOP = i3;
 return i8 | 0;
}

function __ZNSt3__212__next_primeEm(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i2 + 8 | 0;
 i5 = i2 + 4 | 0;
 HEAP32[i4 >> 2] = i1;
 do if (i1 >>> 0 >= 212) {
  i6 = (i1 >>> 0) / 210 | 0;
  i7 = i6 * 210 | 0;
  HEAP32[i5 >> 2] = i1 - i7;
  i8 = 0;
  i9 = i6;
  i6 = i7;
  i7 = (__ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(10544, 10736, i5, i3) | 0) - 10544 >> 2;
  L4 : while (1) {
   i10 = (HEAP32[10544 + (i7 << 2) >> 2] | 0) + i6 | 0;
   i11 = 5;
   while (1) {
    if (i11 >>> 0 >= 47) {
     i12 = 6;
     break;
    }
    i13 = HEAP32[10352 + (i11 << 2) >> 2] | 0;
    i14 = (i10 >>> 0) / (i13 >>> 0) | 0;
    if (i14 >>> 0 < i13 >>> 0) {
     i12 = 107;
     break L4;
    }
    if ((i10 | 0) == (Math_imul(i14, i13) | 0)) {
     i15 = i8;
     break;
    } else i11 = i11 + 1 | 0;
   }
   L10 : do if ((i12 | 0) == 6) {
    i12 = 0;
    i11 = 211;
    i13 = i8;
    L12 : while (1) {
     i14 = (i10 >>> 0) / (i11 >>> 0) | 0;
     do if (i14 >>> 0 >= i11 >>> 0) if ((i10 | 0) != (Math_imul(i14, i11) | 0)) {
      i16 = i11 + 10 | 0;
      i17 = (i10 >>> 0) / (i16 >>> 0) | 0;
      if (i17 >>> 0 >= i16 >>> 0) if ((i10 | 0) != (Math_imul(i17, i16) | 0)) {
       i17 = i11 + 12 | 0;
       i18 = (i10 >>> 0) / (i17 >>> 0) | 0;
       if (i18 >>> 0 >= i17 >>> 0) if ((i10 | 0) != (Math_imul(i18, i17) | 0)) {
        i18 = i11 + 16 | 0;
        i19 = (i10 >>> 0) / (i18 >>> 0) | 0;
        if (i19 >>> 0 >= i18 >>> 0) if ((i10 | 0) != (Math_imul(i19, i18) | 0)) {
         i19 = i11 + 18 | 0;
         i20 = (i10 >>> 0) / (i19 >>> 0) | 0;
         if (i20 >>> 0 >= i19 >>> 0) if ((i10 | 0) != (Math_imul(i20, i19) | 0)) {
          i20 = i11 + 22 | 0;
          i21 = (i10 >>> 0) / (i20 >>> 0) | 0;
          if (i21 >>> 0 >= i20 >>> 0) if ((i10 | 0) != (Math_imul(i21, i20) | 0)) {
           i21 = i11 + 28 | 0;
           i22 = (i10 >>> 0) / (i21 >>> 0) | 0;
           if (i22 >>> 0 >= i21 >>> 0) if ((i10 | 0) == (Math_imul(i22, i21) | 0)) {
            i23 = i21;
            i24 = 9;
            i25 = i13;
           } else {
            i22 = i11 + 30 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 36 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 40 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 42 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 46 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 52 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 58 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 60 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 66 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 70 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 72 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 78 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 82 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 88 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 96 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 100 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 102 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 106 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 108 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 112 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 120 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 126 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 130 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 136 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 138 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 142 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 148 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 150 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 156 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 162 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 166 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 168 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 172 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 178 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 180 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 186 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 190 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 192 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 196 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 198 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            if (i26 >>> 0 < i22 >>> 0) {
             i23 = i22;
             i24 = 1;
             i25 = i10;
             break;
            }
            if ((i10 | 0) == (Math_imul(i26, i22) | 0)) {
             i23 = i22;
             i24 = 9;
             i25 = i13;
             break;
            }
            i22 = i11 + 208 | 0;
            i26 = (i10 >>> 0) / (i22 >>> 0) | 0;
            i27 = i26 >>> 0 < i22 >>> 0;
            i28 = (i10 | 0) == (Math_imul(i26, i22) | 0);
            i23 = i27 | i28 ? i22 : i11 + 210 | 0;
            i24 = i27 ? 1 : i28 ? 9 : 0;
            i25 = i27 ? i10 : i13;
           } else {
            i23 = i21;
            i24 = 1;
            i25 = i10;
           }
          } else {
           i23 = i20;
           i24 = 9;
           i25 = i13;
          } else {
           i23 = i20;
           i24 = 1;
           i25 = i10;
          }
         } else {
          i23 = i19;
          i24 = 9;
          i25 = i13;
         } else {
          i23 = i19;
          i24 = 1;
          i25 = i10;
         }
        } else {
         i23 = i18;
         i24 = 9;
         i25 = i13;
        } else {
         i23 = i18;
         i24 = 1;
         i25 = i10;
        }
       } else {
        i23 = i17;
        i24 = 9;
        i25 = i13;
       } else {
        i23 = i17;
        i24 = 1;
        i25 = i10;
       }
      } else {
       i23 = i16;
       i24 = 9;
       i25 = i13;
      } else {
       i23 = i16;
       i24 = 1;
       i25 = i10;
      }
     } else {
      i23 = i11;
      i24 = 9;
      i25 = i13;
     } else {
      i23 = i11;
      i24 = 1;
      i25 = i10;
     } while (0);
     switch (i24 & 15) {
     case 9:
      {
       i15 = i25;
       break L10;
       break;
      }
     case 0:
      {
       i11 = i23;
       i13 = i25;
       break;
      }
     default:
      break L12;
     }
    }
    if (!i24) i15 = i25; else {
     i12 = 108;
     break L4;
    }
   } while (0);
   i13 = i7 + 1 | 0;
   i11 = (i13 | 0) == 48;
   i14 = i9 + (i11 & 1) | 0;
   i8 = i15;
   i9 = i14;
   i6 = i14 * 210 | 0;
   i7 = i11 ? 0 : i13;
  }
  if ((i12 | 0) == 107) {
   HEAP32[i4 >> 2] = i10;
   i29 = i10;
   break;
  } else if ((i12 | 0) == 108) {
   HEAP32[i4 >> 2] = i10;
   i29 = i25;
   break;
  }
 } else {
  i7 = __ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(10352, 10544, i4, i3) | 0;
  i29 = HEAP32[i7 >> 2] | 0;
 } while (0);
 STACKTOP = i2;
 return i29 | 0;
}

function _arGetTransMatMultiSquare2(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, d22 = 0.0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, d36 = 0.0, d37 = 0.0, d38 = 0.0, d39 = 0.0, d40 = 0.0, d41 = 0.0, d42 = 0.0, d43 = 0.0, d44 = 0.0, d45 = 0.0, d46 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i7 = i6 + 200 | 0;
 i8 = i6 + 192 | 0;
 i9 = i6 + 96 | 0;
 i10 = i6;
 i11 = i4 + 4 | 0;
 i12 = HEAP32[i11 >> 2] | 0;
 i13 = (i12 | 0) > 0;
 if (i13) {
  i14 = HEAP32[i4 >> 2] | 0;
  i15 = i4 + 112 | 0;
  i16 = i4 + 120 | 0;
  if ((i3 | 0) > 0) {
   i17 = 0;
   do {
    i18 = i14 + (i17 * 320 | 0) | 0;
    if (!(HEAP32[i14 + (i17 * 320 | 0) + 4 >> 2] | 0)) {
     i19 = HEAP32[i18 >> 2] | 0;
     i20 = 0;
     i21 = -1;
     while (1) {
      if ((HEAP32[i2 + (i20 << 8) + 8 >> 2] | 0) == (i19 | 0) ? (d22 = +HEAPF64[i2 + (i20 << 8) + 40 >> 3], !(d22 < +HEAPF64[i15 >> 3])) : 0) if ((i21 | 0) != -1 ? !(+HEAPF64[i2 + (i21 << 8) + 40 >> 3] < d22) : 0) i23 = i21; else i23 = i20; else i23 = i21;
      i20 = i20 + 1 | 0;
      if ((i20 | 0) == (i3 | 0)) break; else i21 = i23;
     }
     HEAP32[i14 + (i17 * 320 | 0) + 304 >> 2] = i23;
     if ((i23 | 0) > -1) HEAP32[i2 + (i23 << 8) + 16 >> 2] = HEAP32[i2 + (i23 << 8) + 20 >> 2];
    } else {
     i21 = i14 + (i17 * 320 | 0) + 312 | 0;
     i20 = 0;
     i19 = -1;
     while (1) {
      i24 = HEAP32[i2 + (i20 << 8) + 12 >> 2] | 0;
      if ((i24 | 0) == 0 ? (i25 = i2 + (i20 << 8) + 248 | 0, i26 = HEAP32[i25 >> 2] | 0, i27 = HEAP32[i25 + 4 >> 2] | 0, !((i26 | 0) == 0 & (i27 | 0) == 0)) : 0) {
       i25 = i21;
       if ((i26 | 0) == (HEAP32[i25 >> 2] | 0) ? (i27 | 0) == (HEAP32[i25 + 4 >> 2] | 0) : 0) i28 = 11; else i29 = i19;
      } else if ((i24 | 0) == (HEAP32[i18 >> 2] | 0)) i28 = 11; else i29 = i19;
      if ((i28 | 0) == 11) {
       i28 = 0;
       d22 = +HEAPF64[i2 + (i20 << 8) + 48 >> 3];
       if (!(d22 < +HEAPF64[i16 >> 3])) if ((i19 | 0) != -1 ? !(+HEAPF64[i2 + (i19 << 8) + 48 >> 3] < d22) : 0) i29 = i19; else i29 = i20; else i29 = i19;
      }
      i20 = i20 + 1 | 0;
      if ((i20 | 0) == (i3 | 0)) break; else i19 = i29;
     }
     HEAP32[i14 + (i17 * 320 | 0) + 304 >> 2] = i29;
     if ((i29 | 0) > -1) HEAP32[i2 + (i29 << 8) + 16 >> 2] = HEAP32[i2 + (i29 << 8) + 24 >> 2];
    }
    i17 = i17 + 1 | 0;
   } while ((i17 | 0) < (i12 | 0));
  } else {
   i17 = 0;
   do {
    HEAP32[i14 + (i17 * 320 | 0) + 304 >> 2] = -1;
    i17 = i17 + 1 | 0;
   } while ((i17 | 0) < (i12 | 0));
  }
  if (i13) {
   i13 = i9 + 32 | 0;
   i12 = i10 + 32 | 0;
   i17 = i9 + 64 | 0;
   i14 = i10 + 64 | 0;
   i29 = 0;
   i3 = 0;
   i16 = 0;
   i28 = 0;
   while (1) {
    i23 = HEAP32[i4 >> 2] | 0;
    i15 = HEAP32[i23 + (i28 * 320 | 0) + 304 >> 2] | 0;
    do if ((i15 | 0) < 0) {
     i30 = i29;
     i31 = i3;
     i32 = i16;
    } else {
     i19 = i2 + (i15 << 8) | 0;
     if (+_arGetTransMatSquare(i1, i19, +HEAPF64[i23 + (i28 * 320 | 0) + 8 >> 3], i10) > 4.0) {
      HEAP32[(HEAP32[i4 >> 2] | 0) + (i28 * 320 | 0) + 304 >> 2] = -1;
      i20 = i2 + (i15 << 8) + 236 | 0;
      if (HEAP32[i20 >> 2] | 0) {
       i30 = i29;
       i31 = i3;
       i32 = i16;
       break;
      }
      HEAP32[i20 >> 2] = 7;
      i30 = i29;
      i31 = i3;
      i32 = i16;
      break;
     }
     i20 = HEAP32[i19 >> 2] | 0;
     if ((i29 | 0) == 0 | (i3 | 0) < (i20 | 0)) {
      HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
      HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
      HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
      HEAP32[i9 + 12 >> 2] = HEAP32[i10 + 12 >> 2];
      HEAP32[i9 + 16 >> 2] = HEAP32[i10 + 16 >> 2];
      HEAP32[i9 + 20 >> 2] = HEAP32[i10 + 20 >> 2];
      HEAP32[i9 + 24 >> 2] = HEAP32[i10 + 24 >> 2];
      HEAP32[i9 + 28 >> 2] = HEAP32[i10 + 28 >> 2];
      HEAP32[i13 >> 2] = HEAP32[i12 >> 2];
      HEAP32[i13 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
      HEAP32[i13 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
      HEAP32[i13 + 12 >> 2] = HEAP32[i12 + 12 >> 2];
      HEAP32[i13 + 16 >> 2] = HEAP32[i12 + 16 >> 2];
      HEAP32[i13 + 20 >> 2] = HEAP32[i12 + 20 >> 2];
      HEAP32[i13 + 24 >> 2] = HEAP32[i12 + 24 >> 2];
      HEAP32[i13 + 28 >> 2] = HEAP32[i12 + 28 >> 2];
      HEAP32[i17 >> 2] = HEAP32[i14 >> 2];
      HEAP32[i17 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
      HEAP32[i17 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
      HEAP32[i17 + 12 >> 2] = HEAP32[i14 + 12 >> 2];
      HEAP32[i17 + 16 >> 2] = HEAP32[i14 + 16 >> 2];
      HEAP32[i17 + 20 >> 2] = HEAP32[i14 + 20 >> 2];
      HEAP32[i17 + 24 >> 2] = HEAP32[i14 + 24 >> 2];
      HEAP32[i17 + 28 >> 2] = HEAP32[i14 + 28 >> 2];
      i33 = i20;
      i34 = i28;
     } else {
      i33 = i3;
      i34 = i16;
     }
     i30 = i29 + 1 | 0;
     i31 = i33;
     i32 = i34;
    } while (0);
    i28 = i28 + 1 | 0;
    if ((i28 | 0) >= (HEAP32[i11 >> 2] | 0)) break; else {
     i29 = i30;
     i3 = i31;
     i16 = i32;
    }
   }
   if (i30 | 0 ? (i30 | 0) >= (HEAP32[i4 + 128 >> 2] | 0) : 0) {
    _arUtilMatMul(i9, (HEAP32[i4 >> 2] | 0) + (i32 * 320 | 0) + 112 | 0, i10) | 0;
    i32 = i30 << 2;
    i16 = _malloc(i30 << 6) | 0;
    if (!i16) {
     _arLog(0, 3, 20510, i8);
     _exit(1);
    }
    i8 = _malloc(i30 * 96 | 0) | 0;
    if (!i8) {
     _arLog(0, 3, 20510, i7);
     _exit(1);
    }
    i7 = HEAP32[i11 >> 2] | 0;
    if ((i7 | 0) > 0) {
     i30 = HEAP32[i4 >> 2] | 0;
     i31 = 0;
     i3 = 0;
     while (1) {
      i29 = HEAP32[i30 + (i31 * 320 | 0) + 304 >> 2] | 0;
      if ((i29 | 0) < 0) i35 = i3; else {
       i28 = HEAP32[i2 + (i29 << 8) + 16 >> 2] | 0;
       i34 = (4 - i28 | 0) % 4 | 0;
       i33 = i3 << 3;
       HEAPF64[i16 + (i33 << 3) >> 3] = +HEAPF64[i2 + (i29 << 8) + 168 + (i34 << 4) >> 3];
       HEAPF64[i16 + ((i33 | 1) << 3) >> 3] = +HEAPF64[i2 + (i29 << 8) + 168 + (i34 << 4) + 8 >> 3];
       i34 = (5 - i28 | 0) % 4 | 0;
       HEAPF64[i16 + ((i33 | 2) << 3) >> 3] = +HEAPF64[i2 + (i29 << 8) + 168 + (i34 << 4) >> 3];
       HEAPF64[i16 + ((i33 | 3) << 3) >> 3] = +HEAPF64[i2 + (i29 << 8) + 168 + (i34 << 4) + 8 >> 3];
       i34 = (6 - i28 | 0) % 4 | 0;
       HEAPF64[i16 + ((i33 | 4) << 3) >> 3] = +HEAPF64[i2 + (i29 << 8) + 168 + (i34 << 4) >> 3];
       HEAPF64[i16 + ((i33 | 5) << 3) >> 3] = +HEAPF64[i2 + (i29 << 8) + 168 + (i34 << 4) + 8 >> 3];
       i34 = (7 - i28 | 0) % 4 | 0;
       HEAPF64[i16 + ((i33 | 6) << 3) >> 3] = +HEAPF64[i2 + (i29 << 8) + 168 + (i34 << 4) >> 3];
       HEAPF64[i16 + ((i33 | 7) << 3) >> 3] = +HEAPF64[i2 + (i29 << 8) + 168 + (i34 << 4) + 8 >> 3];
       i34 = i3 * 12 | 0;
       HEAPF64[i8 + (i34 << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 208 >> 3];
       HEAPF64[i8 + ((i34 | 1) << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 216 >> 3];
       HEAPF64[i8 + ((i34 | 2) << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 224 >> 3];
       HEAPF64[i8 + ((i34 | 3) << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 232 >> 3];
       HEAPF64[i8 + (i34 + 4 << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 240 >> 3];
       HEAPF64[i8 + (i34 + 5 << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 248 >> 3];
       HEAPF64[i8 + (i34 + 6 << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 256 >> 3];
       HEAPF64[i8 + (i34 + 7 << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 264 >> 3];
       HEAPF64[i8 + (i34 + 8 << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 272 >> 3];
       HEAPF64[i8 + (i34 + 9 << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 280 >> 3];
       HEAPF64[i8 + (i34 + 10 << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 288 >> 3];
       HEAPF64[i8 + (i34 + 11 << 3) >> 3] = +HEAPF64[i30 + (i31 * 320 | 0) + 296 >> 3];
       i35 = i3 + 1 | 0;
      }
      i31 = i31 + 1 | 0;
      if ((i31 | 0) >= (i7 | 0)) break; else i3 = i35;
     }
    }
    i35 = i4 + 104 | 0;
    i3 = (i5 | 0) != 0;
    if (!(HEAP32[i35 >> 2] | 0)) {
     i5 = i4 + 8 | 0;
     d22 = +_arGetTransMat(i1, i10, i16, i8, i32, i5);
     if (i3 & d22 >= 20.0) {
      _icpSetInlierProbability(HEAP32[i1 >> 2] | 0, .8) | 0;
      d36 = +_arGetTransMatRobust(i1, i10, i16, i8, i32, i5);
      if (d36 >= 20.0) {
       _icpSetInlierProbability(HEAP32[i1 >> 2] | 0, .6) | 0;
       d37 = +_arGetTransMatRobust(i1, i10, i16, i8, i32, i5);
       if (d37 >= 20.0) {
        _icpSetInlierProbability(HEAP32[i1 >> 2] | 0, .4) | 0;
        d38 = +_arGetTransMatRobust(i1, i10, i16, i8, i32, i5);
        if (!(d38 >= 20.0)) d39 = d38; else {
         _icpSetInlierProbability(HEAP32[i1 >> 2] | 0, 0.0) | 0;
         d39 = +_arGetTransMatRobust(i1, i10, i16, i8, i32, i5);
        }
       } else d39 = d37;
      } else d39 = d36;
     } else d39 = d22;
     _free(i8);
     _free(i16);
     d40 = d39;
    } else {
     d39 = +_arGetTransMat(i1, i10, i16, i8, i32, i9);
     i5 = i4 + 8 | 0;
     d22 = +_arGetTransMat(i1, i5, i16, i8, i32, i5);
     i7 = d39 < d22;
     do if (i3) {
      if (i7) {
       i31 = i4 + 8 | 0;
       HEAP32[i31 >> 2] = HEAP32[i9 >> 2];
       HEAP32[i31 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
       HEAP32[i31 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
       HEAP32[i31 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
       HEAP32[i31 + 16 >> 2] = HEAP32[i9 + 16 >> 2];
       HEAP32[i31 + 20 >> 2] = HEAP32[i9 + 20 >> 2];
       HEAP32[i31 + 24 >> 2] = HEAP32[i9 + 24 >> 2];
       HEAP32[i31 + 28 >> 2] = HEAP32[i9 + 28 >> 2];
       i31 = i4 + 40 | 0;
       i30 = i9 + 32 | 0;
       HEAP32[i31 >> 2] = HEAP32[i30 >> 2];
       HEAP32[i31 + 4 >> 2] = HEAP32[i30 + 4 >> 2];
       HEAP32[i31 + 8 >> 2] = HEAP32[i30 + 8 >> 2];
       HEAP32[i31 + 12 >> 2] = HEAP32[i30 + 12 >> 2];
       HEAP32[i31 + 16 >> 2] = HEAP32[i30 + 16 >> 2];
       HEAP32[i31 + 20 >> 2] = HEAP32[i30 + 20 >> 2];
       HEAP32[i31 + 24 >> 2] = HEAP32[i30 + 24 >> 2];
       HEAP32[i31 + 28 >> 2] = HEAP32[i30 + 28 >> 2];
       i30 = i4 + 72 | 0;
       i31 = i9 + 64 | 0;
       HEAP32[i30 >> 2] = HEAP32[i31 >> 2];
       HEAP32[i30 + 4 >> 2] = HEAP32[i31 + 4 >> 2];
       HEAP32[i30 + 8 >> 2] = HEAP32[i31 + 8 >> 2];
       HEAP32[i30 + 12 >> 2] = HEAP32[i31 + 12 >> 2];
       HEAP32[i30 + 16 >> 2] = HEAP32[i31 + 16 >> 2];
       HEAP32[i30 + 20 >> 2] = HEAP32[i31 + 20 >> 2];
       HEAP32[i30 + 24 >> 2] = HEAP32[i31 + 24 >> 2];
       HEAP32[i30 + 28 >> 2] = HEAP32[i31 + 28 >> 2];
       d41 = d39;
      } else d41 = d22;
      if (d41 >= 20.0) {
       _icpSetInlierProbability(HEAP32[i1 >> 2] | 0, .8) | 0;
       d36 = +_arGetTransMatRobust(i1, i10, i16, i8, i32, i9);
       d37 = +_arGetTransMatRobust(i1, i5, i16, i8, i32, i5);
       if (d36 < d37) {
        i31 = i4 + 8 | 0;
        HEAP32[i31 >> 2] = HEAP32[i9 >> 2];
        HEAP32[i31 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
        HEAP32[i31 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
        HEAP32[i31 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
        HEAP32[i31 + 16 >> 2] = HEAP32[i9 + 16 >> 2];
        HEAP32[i31 + 20 >> 2] = HEAP32[i9 + 20 >> 2];
        HEAP32[i31 + 24 >> 2] = HEAP32[i9 + 24 >> 2];
        HEAP32[i31 + 28 >> 2] = HEAP32[i9 + 28 >> 2];
        i31 = i4 + 40 | 0;
        i30 = i9 + 32 | 0;
        HEAP32[i31 >> 2] = HEAP32[i30 >> 2];
        HEAP32[i31 + 4 >> 2] = HEAP32[i30 + 4 >> 2];
        HEAP32[i31 + 8 >> 2] = HEAP32[i30 + 8 >> 2];
        HEAP32[i31 + 12 >> 2] = HEAP32[i30 + 12 >> 2];
        HEAP32[i31 + 16 >> 2] = HEAP32[i30 + 16 >> 2];
        HEAP32[i31 + 20 >> 2] = HEAP32[i30 + 20 >> 2];
        HEAP32[i31 + 24 >> 2] = HEAP32[i30 + 24 >> 2];
        HEAP32[i31 + 28 >> 2] = HEAP32[i30 + 28 >> 2];
        i30 = i4 + 72 | 0;
        i31 = i9 + 64 | 0;
        HEAP32[i30 >> 2] = HEAP32[i31 >> 2];
        HEAP32[i30 + 4 >> 2] = HEAP32[i31 + 4 >> 2];
        HEAP32[i30 + 8 >> 2] = HEAP32[i31 + 8 >> 2];
        HEAP32[i30 + 12 >> 2] = HEAP32[i31 + 12 >> 2];
        HEAP32[i30 + 16 >> 2] = HEAP32[i31 + 16 >> 2];
        HEAP32[i30 + 20 >> 2] = HEAP32[i31 + 20 >> 2];
        HEAP32[i30 + 24 >> 2] = HEAP32[i31 + 24 >> 2];
        HEAP32[i30 + 28 >> 2] = HEAP32[i31 + 28 >> 2];
        d42 = d36;
       } else d42 = d37;
       if (d42 >= 20.0) {
        _icpSetInlierProbability(HEAP32[i1 >> 2] | 0, .6) | 0;
        d37 = +_arGetTransMatRobust(i1, i10, i16, i8, i32, i9);
        d36 = +_arGetTransMatRobust(i1, i5, i16, i8, i32, i5);
        if (d37 < d36) {
         i31 = i4 + 8 | 0;
         HEAP32[i31 >> 2] = HEAP32[i9 >> 2];
         HEAP32[i31 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
         HEAP32[i31 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
         HEAP32[i31 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
         HEAP32[i31 + 16 >> 2] = HEAP32[i9 + 16 >> 2];
         HEAP32[i31 + 20 >> 2] = HEAP32[i9 + 20 >> 2];
         HEAP32[i31 + 24 >> 2] = HEAP32[i9 + 24 >> 2];
         HEAP32[i31 + 28 >> 2] = HEAP32[i9 + 28 >> 2];
         i31 = i4 + 40 | 0;
         i30 = i9 + 32 | 0;
         HEAP32[i31 >> 2] = HEAP32[i30 >> 2];
         HEAP32[i31 + 4 >> 2] = HEAP32[i30 + 4 >> 2];
         HEAP32[i31 + 8 >> 2] = HEAP32[i30 + 8 >> 2];
         HEAP32[i31 + 12 >> 2] = HEAP32[i30 + 12 >> 2];
         HEAP32[i31 + 16 >> 2] = HEAP32[i30 + 16 >> 2];
         HEAP32[i31 + 20 >> 2] = HEAP32[i30 + 20 >> 2];
         HEAP32[i31 + 24 >> 2] = HEAP32[i30 + 24 >> 2];
         HEAP32[i31 + 28 >> 2] = HEAP32[i30 + 28 >> 2];
         i30 = i4 + 72 | 0;
         i31 = i9 + 64 | 0;
         HEAP32[i30 >> 2] = HEAP32[i31 >> 2];
         HEAP32[i30 + 4 >> 2] = HEAP32[i31 + 4 >> 2];
         HEAP32[i30 + 8 >> 2] = HEAP32[i31 + 8 >> 2];
         HEAP32[i30 + 12 >> 2] = HEAP32[i31 + 12 >> 2];
         HEAP32[i30 + 16 >> 2] = HEAP32[i31 + 16 >> 2];
         HEAP32[i30 + 20 >> 2] = HEAP32[i31 + 20 >> 2];
         HEAP32[i30 + 24 >> 2] = HEAP32[i31 + 24 >> 2];
         HEAP32[i30 + 28 >> 2] = HEAP32[i31 + 28 >> 2];
         d43 = d37;
        } else d43 = d36;
        if (!(d43 >= 20.0)) d44 = d43; else {
         _icpSetInlierProbability(HEAP32[i1 >> 2] | 0, .4) | 0;
         d36 = +_arGetTransMatRobust(i1, i10, i16, i8, i32, i9);
         d37 = +_arGetTransMatRobust(i1, i5, i16, i8, i32, i5);
         if (d36 < d37) {
          i31 = i4 + 8 | 0;
          HEAP32[i31 >> 2] = HEAP32[i9 >> 2];
          HEAP32[i31 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
          HEAP32[i31 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
          HEAP32[i31 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
          HEAP32[i31 + 16 >> 2] = HEAP32[i9 + 16 >> 2];
          HEAP32[i31 + 20 >> 2] = HEAP32[i9 + 20 >> 2];
          HEAP32[i31 + 24 >> 2] = HEAP32[i9 + 24 >> 2];
          HEAP32[i31 + 28 >> 2] = HEAP32[i9 + 28 >> 2];
          i31 = i4 + 40 | 0;
          i30 = i9 + 32 | 0;
          HEAP32[i31 >> 2] = HEAP32[i30 >> 2];
          HEAP32[i31 + 4 >> 2] = HEAP32[i30 + 4 >> 2];
          HEAP32[i31 + 8 >> 2] = HEAP32[i30 + 8 >> 2];
          HEAP32[i31 + 12 >> 2] = HEAP32[i30 + 12 >> 2];
          HEAP32[i31 + 16 >> 2] = HEAP32[i30 + 16 >> 2];
          HEAP32[i31 + 20 >> 2] = HEAP32[i30 + 20 >> 2];
          HEAP32[i31 + 24 >> 2] = HEAP32[i30 + 24 >> 2];
          HEAP32[i31 + 28 >> 2] = HEAP32[i30 + 28 >> 2];
          i30 = i4 + 72 | 0;
          i31 = i9 + 64 | 0;
          HEAP32[i30 >> 2] = HEAP32[i31 >> 2];
          HEAP32[i30 + 4 >> 2] = HEAP32[i31 + 4 >> 2];
          HEAP32[i30 + 8 >> 2] = HEAP32[i31 + 8 >> 2];
          HEAP32[i30 + 12 >> 2] = HEAP32[i31 + 12 >> 2];
          HEAP32[i30 + 16 >> 2] = HEAP32[i31 + 16 >> 2];
          HEAP32[i30 + 20 >> 2] = HEAP32[i31 + 20 >> 2];
          HEAP32[i30 + 24 >> 2] = HEAP32[i31 + 24 >> 2];
          HEAP32[i30 + 28 >> 2] = HEAP32[i31 + 28 >> 2];
          d45 = d36;
         } else d45 = d37;
         if (!(d45 >= 20.0)) {
          d44 = d45;
          break;
         }
         _icpSetInlierProbability(HEAP32[i1 >> 2] | 0, 0.0) | 0;
         d37 = +_arGetTransMatRobust(i1, i10, i16, i8, i32, i9);
         d36 = +_arGetTransMatRobust(i1, i5, i16, i8, i32, i5);
         if (!(d37 < d36)) {
          d44 = d36;
          break;
         }
         i31 = i4 + 8 | 0;
         HEAP32[i31 >> 2] = HEAP32[i9 >> 2];
         HEAP32[i31 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
         HEAP32[i31 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
         HEAP32[i31 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
         HEAP32[i31 + 16 >> 2] = HEAP32[i9 + 16 >> 2];
         HEAP32[i31 + 20 >> 2] = HEAP32[i9 + 20 >> 2];
         HEAP32[i31 + 24 >> 2] = HEAP32[i9 + 24 >> 2];
         HEAP32[i31 + 28 >> 2] = HEAP32[i9 + 28 >> 2];
         i31 = i4 + 40 | 0;
         i30 = i9 + 32 | 0;
         HEAP32[i31 >> 2] = HEAP32[i30 >> 2];
         HEAP32[i31 + 4 >> 2] = HEAP32[i30 + 4 >> 2];
         HEAP32[i31 + 8 >> 2] = HEAP32[i30 + 8 >> 2];
         HEAP32[i31 + 12 >> 2] = HEAP32[i30 + 12 >> 2];
         HEAP32[i31 + 16 >> 2] = HEAP32[i30 + 16 >> 2];
         HEAP32[i31 + 20 >> 2] = HEAP32[i30 + 20 >> 2];
         HEAP32[i31 + 24 >> 2] = HEAP32[i30 + 24 >> 2];
         HEAP32[i31 + 28 >> 2] = HEAP32[i30 + 28 >> 2];
         i30 = i4 + 72 | 0;
         i31 = i9 + 64 | 0;
         HEAP32[i30 >> 2] = HEAP32[i31 >> 2];
         HEAP32[i30 + 4 >> 2] = HEAP32[i31 + 4 >> 2];
         HEAP32[i30 + 8 >> 2] = HEAP32[i31 + 8 >> 2];
         HEAP32[i30 + 12 >> 2] = HEAP32[i31 + 12 >> 2];
         HEAP32[i30 + 16 >> 2] = HEAP32[i31 + 16 >> 2];
         HEAP32[i30 + 20 >> 2] = HEAP32[i31 + 20 >> 2];
         HEAP32[i30 + 24 >> 2] = HEAP32[i31 + 24 >> 2];
         HEAP32[i30 + 28 >> 2] = HEAP32[i31 + 28 >> 2];
         d44 = d37;
        }
       } else d44 = d42;
      } else d44 = d41;
     } else if (i7) {
      i31 = i4 + 8 | 0;
      HEAP32[i31 >> 2] = HEAP32[i9 >> 2];
      HEAP32[i31 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
      HEAP32[i31 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
      HEAP32[i31 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
      HEAP32[i31 + 16 >> 2] = HEAP32[i9 + 16 >> 2];
      HEAP32[i31 + 20 >> 2] = HEAP32[i9 + 20 >> 2];
      HEAP32[i31 + 24 >> 2] = HEAP32[i9 + 24 >> 2];
      HEAP32[i31 + 28 >> 2] = HEAP32[i9 + 28 >> 2];
      i31 = i4 + 40 | 0;
      i30 = i9 + 32 | 0;
      HEAP32[i31 >> 2] = HEAP32[i30 >> 2];
      HEAP32[i31 + 4 >> 2] = HEAP32[i30 + 4 >> 2];
      HEAP32[i31 + 8 >> 2] = HEAP32[i30 + 8 >> 2];
      HEAP32[i31 + 12 >> 2] = HEAP32[i30 + 12 >> 2];
      HEAP32[i31 + 16 >> 2] = HEAP32[i30 + 16 >> 2];
      HEAP32[i31 + 20 >> 2] = HEAP32[i30 + 20 >> 2];
      HEAP32[i31 + 24 >> 2] = HEAP32[i30 + 24 >> 2];
      HEAP32[i31 + 28 >> 2] = HEAP32[i30 + 28 >> 2];
      i30 = i4 + 72 | 0;
      i31 = i9 + 64 | 0;
      HEAP32[i30 >> 2] = HEAP32[i31 >> 2];
      HEAP32[i30 + 4 >> 2] = HEAP32[i31 + 4 >> 2];
      HEAP32[i30 + 8 >> 2] = HEAP32[i31 + 8 >> 2];
      HEAP32[i30 + 12 >> 2] = HEAP32[i31 + 12 >> 2];
      HEAP32[i30 + 16 >> 2] = HEAP32[i31 + 16 >> 2];
      HEAP32[i30 + 20 >> 2] = HEAP32[i31 + 20 >> 2];
      HEAP32[i30 + 24 >> 2] = HEAP32[i31 + 24 >> 2];
      HEAP32[i30 + 28 >> 2] = HEAP32[i31 + 28 >> 2];
      d44 = d39;
     } else d44 = d22; while (0);
     _free(i8);
     _free(i16);
     d40 = d44;
    }
    if (d40 < 20.0) {
     HEAP32[i35 >> 2] = 1;
     d46 = d40;
     STACKTOP = i6;
     return +d46;
    }
    HEAP32[i35 >> 2] = 0;
    i35 = HEAP32[i11 >> 2] | 0;
    if ((i35 | 0) <= 0) {
     d46 = d40;
     STACKTOP = i6;
     return +d46;
    }
    i11 = HEAP32[i4 >> 2] | 0;
    i16 = 0;
    do {
     i8 = HEAP32[i11 + (i16 * 320 | 0) + 304 >> 2] | 0;
     if ((i8 | 0) >= 0 ? (i9 = i2 + (i8 << 8) + 236 | 0, (HEAP32[i9 >> 2] | 0) == 0) : 0) HEAP32[i9 >> 2] = 8;
     i16 = i16 + 1 | 0;
    } while ((i16 | 0) < (i35 | 0));
    d46 = d40;
    STACKTOP = i6;
    return +d46;
   }
  }
 }
 HEAP32[i4 + 104 >> 2] = 0;
 d46 = -1.0;
 STACKTOP = i6;
 return +d46;
}

function _vfscanf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0, i89 = 0, i90 = 0, i91 = 0, i92 = 0, i93 = 0, i94 = 0, d95 = 0.0, i96 = 0, i97 = 0, i98 = 0, i99 = 0, i100 = 0, i101 = 0, i102 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i5 = i4 + 264 | 0;
 i6 = i4;
 i7 = i4 + 260 | 0;
 i8 = i4 + 272 | 0;
 if ((HEAP32[i1 + 76 >> 2] | 0) > -1) i9 = ___lockfile(i1) | 0; else i9 = 0;
 i10 = HEAP8[i2 >> 0] | 0;
 L4 : do if (i10 << 24 >> 24) {
  i11 = i1 + 4 | 0;
  i12 = i1 + 104 | 0;
  i13 = i1 + 120 | 0;
  i14 = i1 + 8 | 0;
  i15 = i6 + 10 | 0;
  i16 = i6 + 33 | 0;
  i17 = i6 + 46 | 0;
  i18 = i6 + 94 | 0;
  i19 = i5 + 4 | 0;
  i20 = i2;
  i21 = 0;
  i22 = 0;
  i23 = i10;
  i24 = 0;
  i25 = 0;
  i26 = 0;
  L6 : while (1) {
   L8 : do if (!(_isspace(i23 & 255) | 0)) {
    i27 = (HEAP8[i20 >> 0] | 0) == 37;
    L10 : do if (i27) {
     i28 = i20 + 1 | 0;
     i29 = HEAP8[i28 >> 0] | 0;
     L12 : do switch (i29 << 24 >> 24) {
     case 37:
      {
       break L10;
       break;
      }
     case 42:
      {
       i30 = 0;
       i31 = i20 + 2 | 0;
       break;
      }
     default:
      {
       if (_isdigit(i29 & 255) | 0 ? (HEAP8[i20 + 2 >> 0] | 0) == 36 : 0) {
        i30 = _arg_n_668(i3, (HEAPU8[i28 >> 0] | 0) + -48 | 0) | 0;
        i31 = i20 + 3 | 0;
        break L12;
       }
       i32 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
       i33 = HEAP32[i32 >> 2] | 0;
       HEAP32[i3 >> 2] = i32 + 4;
       i30 = i33;
       i31 = i28;
      }
     } while (0);
     if (!(_isdigit(HEAPU8[i31 >> 0] | 0) | 0)) {
      i34 = 0;
      i35 = i31;
     } else {
      i28 = 0;
      i29 = i31;
      while (1) {
       i33 = (i28 * 10 | 0) + -48 + (HEAPU8[i29 >> 0] | 0) | 0;
       i32 = i29 + 1 | 0;
       if (!(_isdigit(HEAPU8[i32 >> 0] | 0) | 0)) {
        i34 = i33;
        i35 = i32;
        break;
       } else {
        i28 = i33;
        i29 = i32;
       }
      }
     }
     i29 = HEAP8[i35 >> 0] | 0;
     i28 = i35 + 1 | 0;
     if (i29 << 24 >> 24 == 109) {
      i36 = (i30 | 0) != 0 & 1;
      i37 = 0;
      i38 = i28;
      i39 = i35 + 2 | 0;
      i40 = HEAP8[i28 >> 0] | 0;
      i41 = 0;
     } else {
      i36 = 0;
      i37 = i22;
      i38 = i35;
      i39 = i28;
      i40 = i29;
      i41 = i24;
     }
     switch (i40 << 24 >> 24) {
     case 104:
      {
       i29 = (HEAP8[i39 >> 0] | 0) == 104;
       i42 = i29 ? -2 : -1;
       i43 = i29 ? i38 + 2 | 0 : i39;
       break;
      }
     case 108:
      {
       i29 = (HEAP8[i39 >> 0] | 0) == 108;
       i42 = i29 ? 3 : 1;
       i43 = i29 ? i38 + 2 | 0 : i39;
       break;
      }
     case 106:
      {
       i42 = 3;
       i43 = i39;
       break;
      }
     case 116:
     case 122:
      {
       i42 = 1;
       i43 = i39;
       break;
      }
     case 76:
      {
       i42 = 2;
       i43 = i39;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       i42 = 0;
       i43 = i38;
       break;
      }
     default:
      {
       i44 = i37;
       i45 = i41;
       i46 = 143;
       break L6;
      }
     }
     i29 = HEAPU8[i43 >> 0] | 0;
     i28 = (i29 & 47 | 0) == 3;
     i32 = i28 ? i29 | 32 : i29;
     i29 = i28 ? 1 : i42;
     i28 = i32 & 255;
     switch (i28 << 24 >> 24) {
     case 99:
      {
       i47 = (i34 | 0) > 1 ? i34 : 1;
       i48 = i25;
       i49 = i26;
       break;
      }
     case 91:
      {
       i47 = i34;
       i48 = i25;
       i49 = i26;
       break;
      }
     case 110:
      {
       _store_int_669(i30, i29, i25, i26);
       i50 = i43;
       i51 = i21;
       i52 = i37;
       i53 = i41;
       i54 = i25;
       i55 = i26;
       break L8;
       break;
      }
     default:
      {
       ___shlim(i1, 0, 0);
       do {
        i33 = HEAP32[i11 >> 2] | 0;
        if (i33 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
         HEAP32[i11 >> 2] = i33 + 1;
         i56 = HEAPU8[i33 >> 0] | 0;
        } else i56 = ___shgetc(i1) | 0;
       } while ((_isspace(i56) | 0) != 0);
       if (!(HEAP32[i12 >> 2] | 0)) i57 = HEAP32[i11 >> 2] | 0; else {
        i33 = (HEAP32[i11 >> 2] | 0) + -1 | 0;
        HEAP32[i11 >> 2] = i33;
        i57 = i33;
       }
       i33 = i13;
       i58 = i57 - (HEAP32[i14 >> 2] | 0) | 0;
       i59 = _i64Add(HEAP32[i33 >> 2] | 0, HEAP32[i33 + 4 >> 2] | 0, i25 | 0, i26 | 0) | 0;
       i33 = _i64Add(i59 | 0, getTempRet0() | 0, i58 | 0, ((i58 | 0) < 0) << 31 >> 31 | 0) | 0;
       i47 = i34;
       i48 = i33;
       i49 = getTempRet0() | 0;
      }
     }
     i33 = ((i47 | 0) < 0) << 31 >> 31;
     ___shlim(i1, i47, i33);
     i58 = HEAP32[i11 >> 2] | 0;
     i59 = HEAP32[i12 >> 2] | 0;
     if (i58 >>> 0 < i59 >>> 0) {
      HEAP32[i11 >> 2] = i58 + 1;
      i60 = i59;
     } else {
      if ((___shgetc(i1) | 0) < 0) {
       i44 = i37;
       i45 = i41;
       i46 = 143;
       break L6;
      }
      i60 = HEAP32[i12 >> 2] | 0;
     }
     if (i60 | 0) HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + -1;
     L59 : do switch (i28 << 24 >> 24) {
     case 91:
     case 99:
     case 115:
      {
       i59 = (i32 | 0) == 99;
       L61 : do if ((i32 | 16 | 0) == 115) {
        _memset(i6 | 0, -1, 257) | 0;
        HEAP8[i6 >> 0] = 0;
        if ((i32 | 0) == 115) {
         HEAP8[i16 >> 0] = 0;
         HEAP16[i15 >> 1] = 0;
         HEAP16[i15 + 2 >> 1] = 0;
         HEAP8[i15 + 4 >> 0] = 0;
         i61 = i43;
        } else i61 = i43;
       } else {
        i58 = i43 + 1 | 0;
        i62 = (HEAP8[i58 >> 0] | 0) == 94;
        i63 = i62 & 1;
        i64 = i62 ? i43 + 2 | 0 : i58;
        _memset(i6 | 0, i63 | 0, 257) | 0;
        HEAP8[i6 >> 0] = 0;
        switch (HEAP8[i64 >> 0] | 0) {
        case 45:
         {
          i58 = (i63 ^ 1) & 255;
          HEAP8[i17 >> 0] = i58;
          i65 = i64 + 1 | 0;
          i66 = i58;
          break;
         }
        case 93:
         {
          i58 = (i63 ^ 1) & 255;
          HEAP8[i18 >> 0] = i58;
          i65 = i64 + 1 | 0;
          i66 = i58;
          break;
         }
        default:
         {
          i65 = i64;
          i66 = (i63 ^ 1) & 255;
         }
        }
        i63 = i65;
        while (1) {
         i64 = HEAP8[i63 >> 0] | 0;
         L72 : do switch (i64 << 24 >> 24) {
         case 0:
          {
           i44 = i37;
           i45 = i41;
           i46 = 143;
           break L6;
           break;
          }
         case 93:
          {
           i61 = i63;
           break L61;
           break;
          }
         case 45:
          {
           i58 = i63 + 1 | 0;
           i62 = HEAP8[i58 >> 0] | 0;
           switch (i62 << 24 >> 24) {
           case 93:
           case 0:
            {
             i67 = i63;
             i68 = 45;
             break L72;
             break;
            }
           default:
            {}
           }
           i69 = HEAP8[i63 + -1 >> 0] | 0;
           if ((i69 & 255) < (i62 & 255)) {
            i70 = i69 & 255;
            do {
             i70 = i70 + 1 | 0;
             HEAP8[i6 + i70 >> 0] = i66;
             i69 = HEAP8[i58 >> 0] | 0;
            } while (i70 >>> 0 < (i69 & 255) >>> 0);
            i67 = i58;
            i68 = i69;
           } else {
            i67 = i58;
            i68 = i62;
           }
           break;
          }
         default:
          {
           i67 = i63;
           i68 = i64;
          }
         } while (0);
         HEAP8[i6 + ((i68 & 255) + 1) >> 0] = i66;
         i63 = i67 + 1 | 0;
        }
       } while (0);
       i63 = i59 ? i47 + 1 | 0 : 31;
       i64 = (i29 | 0) == 1;
       i70 = (i36 | 0) != 0;
       L80 : do if (i64) {
        if (i70) {
         i69 = _malloc(i63 << 2) | 0;
         if (!i69) {
          i44 = 0;
          i45 = 0;
          i46 = 143;
          break L6;
         } else i71 = i69;
        } else i71 = i30;
        HEAP32[i5 >> 2] = 0;
        HEAP32[i19 >> 2] = 0;
        i69 = i63;
        i72 = 0;
        i73 = i71;
        L85 : while (1) {
         i74 = (i73 | 0) == 0;
         i75 = i72;
         while (1) {
          L89 : while (1) {
           i76 = HEAP32[i11 >> 2] | 0;
           if (i76 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
            HEAP32[i11 >> 2] = i76 + 1;
            i77 = HEAPU8[i76 >> 0] | 0;
           } else i77 = ___shgetc(i1) | 0;
           if (!(HEAP8[i6 + (i77 + 1) >> 0] | 0)) break L85;
           HEAP8[i8 >> 0] = i77;
           switch (_mbrtowc(i7, i8, 1, i5) | 0) {
           case -1:
            {
             i44 = 0;
             i45 = i73;
             i46 = 143;
             break L6;
             break;
            }
           case -2:
            break;
           default:
            break L89;
           }
          }
          if (i74) i78 = i75; else {
           HEAP32[i73 + (i75 << 2) >> 2] = HEAP32[i7 >> 2];
           i78 = i75 + 1 | 0;
          }
          if (i70 & (i78 | 0) == (i69 | 0)) break; else i75 = i78;
         }
         i69 = i69 << 1 | 1;
         i74 = _realloc(i73, i69 << 2) | 0;
         if (!i74) {
          i44 = 0;
          i45 = i73;
          i46 = 143;
          break L6;
         } else {
          i72 = i78;
          i73 = i74;
         }
        }
        if (!(_mbsinit(i5) | 0)) {
         i44 = 0;
         i45 = i73;
         i46 = 143;
         break L6;
        } else {
         i79 = i75;
         i80 = 0;
         i81 = i73;
         i82 = i73;
        }
       } else {
        if (i70) {
         i72 = _malloc(i63) | 0;
         if (!i72) {
          i44 = 0;
          i45 = 0;
          i46 = 143;
          break L6;
         }
         i69 = i63;
         i74 = 0;
         i62 = i72;
         while (1) {
          i72 = i74;
          do {
           i58 = HEAP32[i11 >> 2] | 0;
           if (i58 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
            HEAP32[i11 >> 2] = i58 + 1;
            i83 = HEAPU8[i58 >> 0] | 0;
           } else i83 = ___shgetc(i1) | 0;
           if (!(HEAP8[i6 + (i83 + 1) >> 0] | 0)) {
            i79 = i72;
            i80 = i62;
            i81 = 0;
            i82 = 0;
            break L80;
           }
           i58 = i72;
           i72 = i72 + 1 | 0;
           HEAP8[i62 + i58 >> 0] = i83;
          } while ((i72 | 0) != (i69 | 0));
          i69 = i69 << 1 | 1;
          i58 = _realloc(i62, i69) | 0;
          if (!i58) {
           i44 = i62;
           i45 = 0;
           i46 = 143;
           break L6;
          } else {
           i74 = i72;
           i62 = i58;
          }
         }
        }
        if (!i30) while (1) {
         i62 = HEAP32[i11 >> 2] | 0;
         if (i62 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
          HEAP32[i11 >> 2] = i62 + 1;
          i84 = HEAPU8[i62 >> 0] | 0;
         } else i84 = ___shgetc(i1) | 0;
         if (!(HEAP8[i6 + (i84 + 1) >> 0] | 0)) {
          i79 = 0;
          i80 = 0;
          i81 = 0;
          i82 = 0;
          break L80;
         }
        }
        i62 = 0;
        while (1) {
         i74 = HEAP32[i11 >> 2] | 0;
         if (i74 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
          HEAP32[i11 >> 2] = i74 + 1;
          i85 = HEAPU8[i74 >> 0] | 0;
         } else i85 = ___shgetc(i1) | 0;
         if (!(HEAP8[i6 + (i85 + 1) >> 0] | 0)) {
          i79 = i62;
          i80 = i30;
          i81 = 0;
          i82 = 0;
          break L80;
         }
         HEAP8[i30 + i62 >> 0] = i85;
         i62 = i62 + 1 | 0;
        }
       } while (0);
       if (!(HEAP32[i12 >> 2] | 0)) i86 = HEAP32[i11 >> 2] | 0; else {
        i63 = (HEAP32[i11 >> 2] | 0) + -1 | 0;
        HEAP32[i11 >> 2] = i63;
        i86 = i63;
       }
       i63 = i13;
       i62 = i86 - (HEAP32[i14 >> 2] | 0) | 0;
       i74 = _i64Add(HEAP32[i63 >> 2] | 0, HEAP32[i63 + 4 >> 2] | 0, i62 | 0, ((i62 | 0) < 0) << 31 >> 31 | 0) | 0;
       i62 = getTempRet0() | 0;
       if ((i74 | 0) == 0 & (i62 | 0) == 0) {
        i87 = i80;
        i88 = i36;
        i89 = i21;
        i90 = i82;
        break L6;
       }
       if (!((i74 | 0) == (i47 | 0) & (i62 | 0) == (i33 | 0) | i59 ^ 1)) {
        i87 = i80;
        i88 = i36;
        i89 = i21;
        i90 = i82;
        break L6;
       }
       do if (i70) if (i64) {
        HEAP32[i30 >> 2] = i81;
        break;
       } else {
        HEAP32[i30 >> 2] = i80;
        break;
       } while (0);
       if (i59) {
        i91 = i61;
        i92 = i80;
        i93 = i82;
       } else {
        if (i81 | 0) HEAP32[i81 + (i79 << 2) >> 2] = 0;
        if (!i80) {
         i91 = i61;
         i92 = 0;
         i93 = i82;
         break L59;
        }
        HEAP8[i80 + i79 >> 0] = 0;
        i91 = i61;
        i92 = i80;
        i93 = i82;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       i94 = 16;
       i46 = 131;
       break;
      }
     case 111:
      {
       i94 = 8;
       i46 = 131;
       break;
      }
     case 117:
     case 100:
      {
       i94 = 10;
       i46 = 131;
       break;
      }
     case 105:
      {
       i94 = 0;
       i46 = 131;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       d95 = +___floatscan(i1, i29, 0);
       i64 = i13;
       i70 = HEAP32[i64 >> 2] | 0;
       i62 = HEAP32[i64 + 4 >> 2] | 0;
       i64 = (HEAP32[i11 >> 2] | 0) - (HEAP32[i14 >> 2] | 0) | 0;
       i74 = _i64Subtract(0, 0, i64 | 0, ((i64 | 0) < 0) << 31 >> 31 | 0) | 0;
       if ((i70 | 0) == (i74 | 0) & (i62 | 0) == (getTempRet0() | 0)) {
        i87 = i37;
        i88 = i36;
        i89 = i21;
        i90 = i41;
        break L6;
       }
       if (!i30) {
        i91 = i43;
        i92 = i37;
        i93 = i41;
       } else switch (i29 | 0) {
       case 0:
        {
         HEAPF32[i30 >> 2] = d95;
         i91 = i43;
         i92 = i37;
         i93 = i41;
         break L59;
         break;
        }
       case 1:
        {
         HEAPF64[i30 >> 3] = d95;
         i91 = i43;
         i92 = i37;
         i93 = i41;
         break L59;
         break;
        }
       case 2:
        {
         HEAPF64[i30 >> 3] = d95;
         i91 = i43;
         i92 = i37;
         i93 = i41;
         break L59;
         break;
        }
       default:
        {
         i91 = i43;
         i92 = i37;
         i93 = i41;
         break L59;
        }
       }
       break;
      }
     default:
      {
       i91 = i43;
       i92 = i37;
       i93 = i41;
      }
     } while (0);
     do if ((i46 | 0) == 131) {
      i46 = 0;
      i33 = ___intscan(i1, i94, 0, -1, -1) | 0;
      i28 = getTempRet0() | 0;
      i62 = i13;
      i74 = HEAP32[i62 >> 2] | 0;
      i70 = HEAP32[i62 + 4 >> 2] | 0;
      i62 = (HEAP32[i11 >> 2] | 0) - (HEAP32[i14 >> 2] | 0) | 0;
      i64 = _i64Subtract(0, 0, i62 | 0, ((i62 | 0) < 0) << 31 >> 31 | 0) | 0;
      if ((i74 | 0) == (i64 | 0) & (i70 | 0) == (getTempRet0() | 0)) {
       i87 = i37;
       i88 = i36;
       i89 = i21;
       i90 = i41;
       break L6;
      }
      if ((i30 | 0) != 0 & (i32 | 0) == 112) {
       HEAP32[i30 >> 2] = i33;
       i91 = i43;
       i92 = i37;
       i93 = i41;
       break;
      } else {
       _store_int_669(i30, i29, i33, i28);
       i91 = i43;
       i92 = i37;
       i93 = i41;
       break;
      }
     } while (0);
     i29 = i13;
     i32 = (HEAP32[i11 >> 2] | 0) - (HEAP32[i14 >> 2] | 0) | 0;
     i28 = _i64Add(HEAP32[i29 >> 2] | 0, HEAP32[i29 + 4 >> 2] | 0, i48 | 0, i49 | 0) | 0;
     i29 = _i64Add(i28 | 0, getTempRet0() | 0, i32 | 0, ((i32 | 0) < 0) << 31 >> 31 | 0) | 0;
     i50 = i91;
     i51 = i21 + ((i30 | 0) != 0 & 1) | 0;
     i52 = i92;
     i53 = i93;
     i54 = i29;
     i55 = getTempRet0() | 0;
     break L8;
    } while (0);
    i29 = i20 + (i27 & 1) | 0;
    ___shlim(i1, 0, 0);
    i32 = HEAP32[i11 >> 2] | 0;
    if (i32 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
     HEAP32[i11 >> 2] = i32 + 1;
     i96 = HEAPU8[i32 >> 0] | 0;
    } else i96 = ___shgetc(i1) | 0;
    if ((i96 | 0) != (HEAPU8[i29 >> 0] | 0)) {
     i46 = 23;
     break L6;
    }
    i32 = _i64Add(i25 | 0, i26 | 0, 1, 0) | 0;
    i50 = i29;
    i51 = i21;
    i52 = i22;
    i53 = i24;
    i54 = i32;
    i55 = getTempRet0() | 0;
   } else {
    i32 = i20;
    while (1) {
     i29 = i32 + 1 | 0;
     if (!(_isspace(HEAPU8[i29 >> 0] | 0) | 0)) break; else i32 = i29;
    }
    ___shlim(i1, 0, 0);
    do {
     i27 = HEAP32[i11 >> 2] | 0;
     if (i27 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
      HEAP32[i11 >> 2] = i27 + 1;
      i97 = HEAPU8[i27 >> 0] | 0;
     } else i97 = ___shgetc(i1) | 0;
    } while ((_isspace(i97) | 0) != 0);
    if (!(HEAP32[i12 >> 2] | 0)) i98 = HEAP32[i11 >> 2] | 0; else {
     i27 = (HEAP32[i11 >> 2] | 0) + -1 | 0;
     HEAP32[i11 >> 2] = i27;
     i98 = i27;
    }
    i27 = i13;
    i29 = i98 - (HEAP32[i14 >> 2] | 0) | 0;
    i28 = _i64Add(HEAP32[i27 >> 2] | 0, HEAP32[i27 + 4 >> 2] | 0, i25 | 0, i26 | 0) | 0;
    i27 = _i64Add(i28 | 0, getTempRet0() | 0, i29 | 0, ((i29 | 0) < 0) << 31 >> 31 | 0) | 0;
    i50 = i32;
    i51 = i21;
    i52 = i22;
    i53 = i24;
    i54 = i27;
    i55 = getTempRet0() | 0;
   } while (0);
   i20 = i50 + 1 | 0;
   i23 = HEAP8[i20 >> 0] | 0;
   if (!(i23 << 24 >> 24)) {
    i99 = i51;
    break L4;
   } else {
    i21 = i51;
    i22 = i52;
    i24 = i53;
    i25 = i54;
    i26 = i55;
   }
  }
  if ((i46 | 0) == 23) {
   if (HEAP32[i12 >> 2] | 0) HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + -1;
   if ((i21 | 0) != 0 | (i96 | 0) > -1) {
    i99 = i21;
    break;
   } else {
    i100 = 0;
    i101 = i22;
    i102 = i24;
    i46 = 144;
   }
  } else if ((i46 | 0) == 143) if (!i21) {
   i100 = i36;
   i101 = i44;
   i102 = i45;
   i46 = 144;
  } else {
   i87 = i44;
   i88 = i36;
   i89 = i21;
   i90 = i45;
  }
  if ((i46 | 0) == 144) {
   i87 = i101;
   i88 = i100;
   i89 = -1;
   i90 = i102;
  }
  if (!i88) i99 = i89; else {
   _free(i87);
   _free(i90);
   i99 = i89;
  }
 } else i99 = 0; while (0);
 if (i9 | 0) ___unlockfile(i1);
 STACKTOP = i4;
 return i99 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4;
 L1 : do if ((i1 | 0) == (i2 | 0)) i6 = i1; else do switch (HEAP8[i1 >> 0] | 0) {
 case 118:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51682);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 119:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm8EEERAT__Kc(i5);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 98:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51687);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 99:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51456);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 97:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i5, 51461);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 104:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc(i5, 51473);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 115:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i5, 51487);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 116:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i5, 51493);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 105:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm4EEERAT__Kc(i5, 51692);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 106:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i5, 51696);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 108:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51709);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 109:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc(i5, 51714);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 120:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 51728);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 121:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm19EEERAT__Kc(i5);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 110:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc(i5, 51522);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 111:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc(i5, 51531);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 102:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i5, 51738);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 100:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm7EEERAT__Kc(i5);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 101:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i5, 51744);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 103:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 51756);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 122:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm4EEERAT__Kc(i5, 51767);
   i7 = i3 + 4 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i6 = i1 + 1 | 0;
   break L1;
   break;
  }
 case 117:
  {
   i7 = i1 + 1 | 0;
   i8 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0;
   i6 = (i8 | 0) == (i7 | 0) ? i1 : i8;
   break L1;
   break;
  }
 case 68:
  {
   i8 = i1 + 1 | 0;
   if ((i8 | 0) == (i2 | 0)) {
    i6 = i1;
    break L1;
   }
   switch (HEAP8[i8 >> 0] | 0) {
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 51771);
     i8 = i3 + 4 | 0;
     i7 = HEAP32[i8 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i6 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i5, 51781);
     i8 = i3 + 4 | 0;
     i7 = HEAP32[i8 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i6 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 102:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 51792);
     i8 = i3 + 4 | 0;
     i7 = HEAP32[i8 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i6 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 104:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i5, 51802);
     i8 = i3 + 4 | 0;
     i7 = HEAP32[i8 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i6 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc(i5, 51812);
     i8 = i3 + 4 | 0;
     i7 = HEAP32[i8 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i6 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc(i5, 51821);
     i8 = i3 + 4 | 0;
     i7 = HEAP32[i8 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i6 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51830);
     i8 = i3 + 4 | 0;
     i7 = HEAP32[i8 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i6 = i1 + 2 | 0;
     break L1;
     break;
    }
   case 110:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i5, 51835);
     i8 = i3 + 4 | 0;
     i7 = HEAP32[i8 >> 2] | 0;
     if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i5);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     i6 = i1 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     i6 = i1;
     break L1;
    }
   }
   break;
  }
 default:
  {
   i6 = i1;
   break L1;
  }
 } while (0); while (0);
 STACKTOP = i4;
 return i6 | 0;
}

function __ZN6vision36ComputeSubpixelHessianFineOctavePairEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, d54 = 0.0, d55 = 0.0, d56 = 0.0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i9 = i8 + 20 | 0;
 i10 = i8 + 16 | 0;
 i11 = i8 + 12 | 0;
 i12 = i8 + 8 | 0;
 i13 = i8 + 4 | 0;
 i14 = i8;
 if ((i6 | 0) <= 0) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22787, 57) | 0;
  i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i15, 22500, 128) | 0;
  i17 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i16, 33554, 6) | 0;
  i18 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i17, 413) | 0;
  i19 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i18, 33561, 2) | 0;
  i20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i19, 22845, 15) | 0;
  i21 = HEAP32[i20 >> 2] | 0;
  i22 = i21 + -12 | 0;
  i23 = HEAP32[i22 >> 2] | 0;
  i24 = i20 + i23 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i24);
  i25 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i26 = HEAP32[i25 >> 2] | 0;
  i27 = i26 + 28 | 0;
  i28 = HEAP32[i27 >> 2] | 0;
  i29 = FUNCTION_TABLE_iii[i28 & 63](i25, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
  _abort();
 }
 i30 = HEAP32[i4 + 4 >> 2] | 0;
 if ((i6 + 1 | 0) >>> 0 >= i30 >>> 0) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22787, 57) | 0;
  i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i15, 22500, 128) | 0;
  i17 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i16, 33554, 6) | 0;
  i18 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i17, 413) | 0;
  i19 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i18, 33561, 2) | 0;
  i20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i19, 22845, 15) | 0;
  i21 = HEAP32[i20 >> 2] | 0;
  i22 = i21 + -12 | 0;
  i23 = HEAP32[i22 >> 2] | 0;
  i24 = i20 + i23 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i24);
  i25 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i26 = HEAP32[i25 >> 2] | 0;
  i27 = i26 + 28 | 0;
  i28 = HEAP32[i27 >> 2] | 0;
  i29 = FUNCTION_TABLE_iii[i28 & 63](i25, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
  _abort();
 }
 if ((i7 | 0) <= 0) {
  i31 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22861, 58) | 0;
  i32 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i31, 22500, 128) | 0;
  i33 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i32, 33554, 6) | 0;
  i34 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i33, 414) | 0;
  i35 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i34, 33561, 2) | 0;
  i36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i35, 22920, 15) | 0;
  i37 = HEAP32[i36 >> 2] | 0;
  i38 = i37 + -12 | 0;
  i39 = HEAP32[i38 >> 2] | 0;
  i40 = i36 + i39 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i40);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i42 = HEAP32[i41 >> 2] | 0;
  i43 = i42 + 28 | 0;
  i44 = HEAP32[i43 >> 2] | 0;
  i45 = FUNCTION_TABLE_iii[i44 & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i36, i45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i36) | 0;
  _abort();
 }
 i20 = i7 + 1 | 0;
 i29 = HEAP32[i4 + 8 >> 2] | 0;
 if (i20 >>> 0 >= i29 >>> 0) {
  i31 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22861, 58) | 0;
  i32 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i31, 22500, 128) | 0;
  i33 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i32, 33554, 6) | 0;
  i34 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i33, 414) | 0;
  i35 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i34, 33561, 2) | 0;
  i36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i35, 22920, 15) | 0;
  i37 = HEAP32[i36 >> 2] | 0;
  i38 = i37 + -12 | 0;
  i39 = HEAP32[i38 >> 2] | 0;
  i40 = i36 + i39 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i40);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i42 = HEAP32[i41 >> 2] | 0;
  i43 = i42 + 28 | 0;
  i44 = HEAP32[i43 >> 2] | 0;
  i45 = FUNCTION_TABLE_iii[i44 & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i36, i45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i36) | 0;
  _abort();
 }
 if ((HEAP32[i3 + 4 >> 2] | 0) != (i30 | 0)) {
  i36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24097, 51) | 0, 22500, 128) | 0, 33554, 6) | 0, 415) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i36 + (HEAP32[(HEAP32[i36 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i45 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i41 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i45 >> 2] | 0) + 28 >> 2] & 63](i45, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i36, i41) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i36) | 0;
  _abort();
 }
 i36 = i5 + 4 | 0;
 if ((i30 >>> 1 | 0) != (HEAP32[i36 >> 2] | 0)) {
  i30 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23023, 56) | 0, 22500, 128) | 0, 33554, 6) | 0, 416) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i30 + (HEAP32[(HEAP32[i30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i41 >> 2] | 0) + 28 >> 2] & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i30, i45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i30) | 0;
  _abort();
 }
 if ((HEAP32[i3 + 8 >> 2] | 0) != (i29 | 0)) {
  i30 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24149, 53) | 0, 22500, 128) | 0, 33554, 6) | 0, 417) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i30 + (HEAP32[(HEAP32[i30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i45 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i41 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i45 >> 2] | 0) + 28 >> 2] & 63](i45, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i30, i41) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i30) | 0;
  _abort();
 }
 i30 = i5 + 8 | 0;
 if ((i29 >>> 1 | 0) != (HEAP32[i30 >> 2] | 0)) {
  i29 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23139, 58) | 0, 22500, 128) | 0, 33554, 6) | 0, 418) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i29 + (HEAP32[(HEAP32[i29 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i41 >> 2] | 0) + 28 >> 2] & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i29, i45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i29) | 0;
  _abort();
 }
 i29 = (__ZNK6vision5Image3getIfEEPKT_m(i3, i7 + -1 | 0) | 0) + (i6 << 2) | 0;
 i45 = (__ZNK6vision5Image3getIfEEPKT_m(i3, i7) | 0) + (i6 << 2) | 0;
 i41 = (__ZNK6vision5Image3getIfEEPKT_m(i3, i20) | 0) + (i6 << 2) | 0;
 i20 = (__ZNK6vision5Image3getIfEEPKT_m(i4, i7) | 0) + (i6 << 2) | 0;
 d46 = +(i6 | 0) * .5 + -.25;
 d47 = +(i7 | 0) * .5 + -.25;
 d48 = d46 + -.5;
 if (!(d48 >= 0.0)) {
  i3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24203, 40) | 0, 22500, 128) | 0, 33554, 6) | 0, 428) | 0, 33561, 2) | 0, 24244, 53) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i44 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i43 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i44 >> 2] | 0) + 28 >> 2] & 63](i44, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i43) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 }
 d49 = d47 + -.5;
 if (!(d49 >= 0.0)) {
  i3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24298, 40) | 0, 22500, 128) | 0, 33554, 6) | 0, 429) | 0, 33561, 2) | 0, 24339, 53) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i43 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i44 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i43 >> 2] | 0) + 28 >> 2] & 63](i43, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i44) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 }
 d50 = d46 + .5;
 if (!(d50 < +((HEAP32[i36 >> 2] | 0) >>> 0))) {
  i3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24393, 50) | 0, 22500, 128) | 0, 33554, 6) | 0, 430) | 0, 33561, 2) | 0, 24244, 53) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i44 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i43 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i44 >> 2] | 0) + 28 >> 2] & 63](i44, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i43) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 }
 d51 = d47 + .5;
 if (d51 < +((HEAP32[i30 >> 2] | 0) >>> 0)) {
  __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii(i10, i11, i12, i13, i14, i4, i6, i7);
  i7 = i5 + 24 | 0;
  i6 = i5 + 12 | 0;
  d52 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d46, d47);
  d53 = +HEAPF32[i45 >> 2];
  d54 = d52 + (d53 - +HEAPF32[i20 >> 2] * 2.0);
  d55 = +HEAPF32[i45 + -4 >> 2];
  d56 = d55 + +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d50, d47);
  d50 = +HEAPF32[i45 + 4 >> 2];
  d55 = (d56 - (d50 + +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d48, d47))) * .25;
  d47 = +HEAPF32[i29 >> 2];
  d48 = d47 + +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d46, d51);
  d51 = +HEAPF32[i41 >> 2];
  d47 = (d48 - (d51 + +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d46, d49))) * .25;
  HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
  i12 = HEAP32[i14 >> 2] | 0;
  HEAP32[i1 + 4 >> 2] = i12;
  HEAPF32[i1 + 8 >> 2] = d55;
  HEAP32[i1 + 12 >> 2] = i12;
  HEAP32[i1 + 16 >> 2] = HEAP32[i13 >> 2];
  HEAPF32[i1 + 20 >> 2] = d47;
  HEAPF32[i1 + 24 >> 2] = d55;
  HEAPF32[i1 + 28 >> 2] = d47;
  HEAPF32[i1 + 32 >> 2] = d54;
  HEAPF32[i2 >> 2] = -+HEAPF32[i10 >> 2];
  HEAPF32[i2 + 4 >> 2] = -+HEAPF32[i11 >> 2];
  HEAPF32[i2 + 8 >> 2] = -((d52 - d53) * .5);
  STACKTOP = i8;
  return;
 } else {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24444, 51) | 0, 22500, 128) | 0, 33554, 6) | 0, 431) | 0, 33561, 2) | 0, 24339, 53) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4 + 36 | 0;
 i6 = i4 + 24 | 0;
 i7 = i4 + 8 | 0;
 i8 = i4;
 L1 : do if ((i1 | 0) != (i2 | 0) ? (HEAP8[i1 >> 0] | 0) == 78 : 0) {
  i9 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1 + 1 | 0, i2, i5) | 0;
  L4 : do if ((i9 | 0) != (i2 | 0)) {
   i10 = i3 + 52 | 0;
   HEAP32[i10 >> 2] = 0;
   switch (HEAP8[i9 >> 0] | 0) {
   case 82:
    {
     i11 = 1;
     i12 = 6;
     break;
    }
   case 79:
    {
     i11 = 2;
     i12 = 6;
     break;
    }
   default:
    i13 = i9;
   }
   if ((i12 | 0) == 6) {
    HEAP32[i10 >> 2] = i11;
    i13 = i9 + 1 | 0;
   }
   i10 = i3 + 4 | 0;
   i14 = HEAP32[i10 >> 2] | 0;
   if (i14 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    HEAP32[i14 >> 2] = 0;
    HEAP32[i14 + 4 >> 2] = 0;
    HEAP32[i14 + 8 >> 2] = 0;
    HEAP32[i14 + 12 >> 2] = 0;
    HEAP32[i14 + 16 >> 2] = 0;
    HEAP32[i14 + 20 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i14);
    HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_(i3);
   if (((i2 - i13 | 0) > 1 ? (HEAP8[i13 >> 0] | 0) == 83 : 0) ? (HEAP8[i13 + 1 >> 0] | 0) == 116 : 0) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc((HEAP32[i10 >> 2] | 0) + -24 | 0, 51621);
    i15 = i13 + 2 | 0;
   } else i15 = i13;
   if ((i15 | 0) == (i2 | 0)) {
    i14 = HEAP32[i10 >> 2] | 0;
    i16 = 0;
    while (1) {
     if ((i16 | 0) == -1) break;
     i17 = i16 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14 + (i17 * 24 | 0) | 0);
     i16 = i17;
    }
    HEAP32[i10 >> 2] = i14 + -24;
    break;
   }
   i16 = i6 + 11 | 0;
   i17 = i6 + 4 | 0;
   i18 = i3 + 12 | 0;
   i19 = i3 + 20 | 0;
   i20 = i3 + 24 | 0;
   i21 = i7 + 11 | 0;
   i22 = i7 + 4 | 0;
   i23 = i7 + 11 | 0;
   i24 = i7 + 4 | 0;
   i25 = i7 + 12 | 0;
   i26 = i7 + 4 | 0;
   i27 = i7 + 8 | 0;
   i28 = i3 + 16 | 0;
   i29 = i7 + 12 | 0;
   i30 = i7 + 4 | 0;
   i31 = i7 + 8 | 0;
   i32 = i7 + 11 | 0;
   i33 = i7 + 4 | 0;
   i34 = i7 + 12 | 0;
   i35 = i7 + 4 | 0;
   i36 = i7 + 8 | 0;
   i37 = i7 + 11 | 0;
   i38 = i7 + 4 | 0;
   i39 = i7 + 12 | 0;
   i40 = i7 + 4 | 0;
   i41 = i7 + 8 | 0;
   i42 = i7 + 12 | 0;
   i43 = i7 + 4 | 0;
   i44 = i7 + 8 | 0;
   i45 = 0;
   i46 = i15;
   L27 : while (1) {
    i47 = i46;
    L29 : while (1) {
     i48 = HEAP8[i47 >> 0] | 0;
     if (i48 << 24 >> 24 == 69) break L27;
     switch (i48 << 24 >> 24 | 0) {
     case 83:
      {
       i12 = 23;
       break L29;
       break;
      }
     case 84:
      {
       i12 = 39;
       break L29;
       break;
      }
     case 68:
      {
       i12 = 53;
       break L29;
       break;
      }
     case 73:
      {
       i48 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i47, i2, i3) | 0;
       if ((i48 | 0) == (i47 | 0) | (i48 | 0) == (i2 | 0)) break L4;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i10 >> 2] | 0) + -24 | 0);
       i49 = HEAP32[i10 >> 2] | 0;
       i50 = 0;
       while (1) {
        if ((i50 | 0) == -1) break;
        i51 = i50 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i49 + (i51 * 24 | 0) | 0);
        i50 = i51;
       }
       HEAP32[i10 >> 2] = i49 + -24;
       i50 = HEAP8[i16 >> 0] | 0;
       i51 = i50 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i49 + -48 | 0, i51 ? HEAP32[i6 >> 2] | 0 : i6, i51 ? HEAP32[i17 >> 2] | 0 : i50 & 255) | 0;
       i50 = (HEAP32[i10 >> 2] | 0) + -24 | 0;
       HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i7, i50, i8);
       i50 = HEAP32[i19 >> 2] | 0;
       if (i50 >>> 0 < (HEAP32[i20 >> 2] | 0) >>> 0) {
        HEAP32[i50 >> 2] = 0;
        i51 = i50 + 4 | 0;
        HEAP32[i51 >> 2] = 0;
        i52 = i50 + 8 | 0;
        HEAP32[i52 >> 2] = 0;
        HEAP32[i50 + 12 >> 2] = HEAP32[i25 >> 2];
        HEAP32[i50 >> 2] = HEAP32[i7 >> 2];
        HEAP32[i51 >> 2] = HEAP32[i26 >> 2];
        HEAP32[i52 >> 2] = HEAP32[i27 >> 2];
        HEAP32[i27 >> 2] = 0;
        HEAP32[i26 >> 2] = 0;
        HEAP32[i7 >> 2] = 0;
        HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i28, i7);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i7);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
       i53 = i48;
       break;
      }
     case 76:
      {
       i52 = i47 + 1 | 0;
       if ((i52 | 0) == (i2 | 0)) break L4; else i53 = i52;
       break;
      }
     default:
      {
       i12 = 79;
       break L29;
      }
     }
     i47 = i53;
    }
    L45 : do if ((i12 | 0) == 23) {
     i12 = 0;
     i52 = i47 + 1 | 0;
     if ((i52 | 0) != (i2 | 0) ? (HEAP8[i52 >> 0] | 0) == 116 : 0) {
      i12 = 79;
      break;
     }
     i52 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i47, i2, i3) | 0;
     if ((i52 | 0) == (i47 | 0) | (i52 | 0) == (i2 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i10 >> 2] | 0) + -24 | 0);
     i51 = HEAP32[i10 >> 2] | 0;
     i50 = 0;
     while (1) {
      if ((i50 | 0) == -1) break;
      i54 = i50 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i51 + (i54 * 24 | 0) | 0);
      i50 = i54;
     }
     HEAP32[i10 >> 2] = i51 + -24;
     i50 = i51 + -48 | 0;
     i48 = HEAP8[i50 + 11 >> 0] | 0;
     if (i48 << 24 >> 24 < 0) i55 = HEAP32[i51 + -44 >> 2] | 0; else i55 = i48 & 255;
     if (!i55) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i50, i6); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i7, 50317, i6);
      i50 = HEAP8[i32 >> 0] | 0;
      i48 = i50 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i10 >> 2] | 0) + -24 | 0, i48 ? HEAP32[i7 >> 2] | 0 : i7, i48 ? HEAP32[i33 >> 2] | 0 : i50 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
      i50 = (HEAP32[i10 >> 2] | 0) + -24 | 0;
      HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i7, i50, i8);
      i50 = HEAP32[i19 >> 2] | 0;
      if (i50 >>> 0 < (HEAP32[i20 >> 2] | 0) >>> 0) {
       HEAP32[i50 >> 2] = 0;
       i48 = i50 + 4 | 0;
       HEAP32[i48 >> 2] = 0;
       i49 = i50 + 8 | 0;
       HEAP32[i49 >> 2] = 0;
       HEAP32[i50 + 12 >> 2] = HEAP32[i42 >> 2];
       HEAP32[i50 >> 2] = HEAP32[i7 >> 2];
       HEAP32[i48 >> 2] = HEAP32[i43 >> 2];
       HEAP32[i49 >> 2] = HEAP32[i44 >> 2];
       HEAP32[i44 >> 2] = 0;
       HEAP32[i43 >> 2] = 0;
       HEAP32[i7 >> 2] = 0;
       HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i28, i7);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i7);
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     i56 = i52;
    } else if ((i12 | 0) == 39) {
     i12 = 0;
     i49 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i47, i2, i3) | 0;
     if ((i49 | 0) == (i47 | 0) | (i49 | 0) == (i2 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i10 >> 2] | 0) + -24 | 0);
     i48 = HEAP32[i10 >> 2] | 0;
     i50 = 0;
     while (1) {
      if ((i50 | 0) == -1) break;
      i54 = i50 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i48 + (i54 * 24 | 0) | 0);
      i50 = i54;
     }
     HEAP32[i10 >> 2] = i48 + -24;
     i50 = i48 + -48 | 0;
     i52 = HEAP8[i50 + 11 >> 0] | 0;
     if (i52 << 24 >> 24 < 0) i57 = HEAP32[i48 + -44 >> 2] | 0; else i57 = i52 & 255;
     if (!i57) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i50, i6); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i7, 50317, i6);
      i50 = HEAP8[i23 >> 0] | 0;
      i52 = i50 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i10 >> 2] | 0) + -24 | 0, i52 ? HEAP32[i7 >> 2] | 0 : i7, i52 ? HEAP32[i24 >> 2] | 0 : i50 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
     }
     i50 = (HEAP32[i10 >> 2] | 0) + -24 | 0;
     HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i7, i50, i8);
     i50 = HEAP32[i19 >> 2] | 0;
     if (i50 >>> 0 < (HEAP32[i20 >> 2] | 0) >>> 0) {
      HEAP32[i50 >> 2] = 0;
      i52 = i50 + 4 | 0;
      HEAP32[i52 >> 2] = 0;
      i51 = i50 + 8 | 0;
      HEAP32[i51 >> 2] = 0;
      HEAP32[i50 + 12 >> 2] = HEAP32[i34 >> 2];
      HEAP32[i50 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i52 >> 2] = HEAP32[i35 >> 2];
      HEAP32[i51 >> 2] = HEAP32[i36 >> 2];
      HEAP32[i36 >> 2] = 0;
      HEAP32[i35 >> 2] = 0;
      HEAP32[i7 >> 2] = 0;
      HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i28, i7);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     i56 = i49;
    } else if ((i12 | 0) == 53) {
     i12 = 0;
     i51 = i47 + 1 | 0;
     if ((i51 | 0) != (i2 | 0)) switch (HEAP8[i51 >> 0] | 0) {
     case 84:
     case 116:
      break;
     default:
      {
       i12 = 79;
       break L45;
      }
     }
     i51 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i47, i2, i3) | 0;
     if ((i51 | 0) == (i47 | 0) | (i51 | 0) == (i2 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i10 >> 2] | 0) + -24 | 0);
     i52 = HEAP32[i10 >> 2] | 0;
     i50 = 0;
     while (1) {
      if ((i50 | 0) == -1) break;
      i54 = i50 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i52 + (i54 * 24 | 0) | 0);
      i50 = i54;
     }
     HEAP32[i10 >> 2] = i52 + -24;
     i50 = i52 + -48 | 0;
     i49 = HEAP8[i50 + 11 >> 0] | 0;
     if (i49 << 24 >> 24 < 0) i58 = HEAP32[i52 + -44 >> 2] | 0; else i58 = i49 & 255;
     if (!i58) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i50, i6); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i7, 50317, i6);
      i50 = HEAP8[i37 >> 0] | 0;
      i49 = i50 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i10 >> 2] | 0) + -24 | 0, i49 ? HEAP32[i7 >> 2] | 0 : i7, i49 ? HEAP32[i38 >> 2] | 0 : i50 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
     }
     i50 = (HEAP32[i10 >> 2] | 0) + -24 | 0;
     HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i7, i50, i8);
     i50 = HEAP32[i19 >> 2] | 0;
     if (i50 >>> 0 < (HEAP32[i20 >> 2] | 0) >>> 0) {
      HEAP32[i50 >> 2] = 0;
      i49 = i50 + 4 | 0;
      HEAP32[i49 >> 2] = 0;
      i48 = i50 + 8 | 0;
      HEAP32[i48 >> 2] = 0;
      HEAP32[i50 + 12 >> 2] = HEAP32[i39 >> 2];
      HEAP32[i50 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i49 >> 2] = HEAP32[i40 >> 2];
      HEAP32[i48 >> 2] = HEAP32[i41 >> 2];
      HEAP32[i41 >> 2] = 0;
      HEAP32[i40 >> 2] = 0;
      HEAP32[i7 >> 2] = 0;
      HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i28, i7);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     i56 = i51;
    } while (0);
    if ((i12 | 0) == 79) {
     i12 = 0;
     i48 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i47, i2, i3) | 0;
     if ((i48 | 0) == (i47 | 0) | (i48 | 0) == (i2 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i10 >> 2] | 0) + -24 | 0);
     i49 = HEAP32[i10 >> 2] | 0;
     i50 = 0;
     while (1) {
      if ((i50 | 0) == -1) break;
      i54 = i50 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i49 + (i54 * 24 | 0) | 0);
      i50 = i54;
     }
     HEAP32[i10 >> 2] = i49 + -24;
     i50 = i49 + -48 | 0;
     i54 = HEAP8[i50 + 11 >> 0] | 0;
     if (i54 << 24 >> 24 < 0) i59 = HEAP32[i49 + -44 >> 2] | 0; else i59 = i54 & 255;
     if (!i59) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i50, i6); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i7, 50317, i6);
      i50 = HEAP8[i21 >> 0] | 0;
      i54 = i50 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i10 >> 2] | 0) + -24 | 0, i54 ? HEAP32[i7 >> 2] | 0 : i7, i54 ? HEAP32[i22 >> 2] | 0 : i50 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
     }
     i50 = (HEAP32[i10 >> 2] | 0) + -24 | 0;
     HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i7, i50, i8);
     i50 = HEAP32[i19 >> 2] | 0;
     if (i50 >>> 0 < (HEAP32[i20 >> 2] | 0) >>> 0) {
      HEAP32[i50 >> 2] = 0;
      i54 = i50 + 4 | 0;
      HEAP32[i54 >> 2] = 0;
      i60 = i50 + 8 | 0;
      HEAP32[i60 >> 2] = 0;
      HEAP32[i50 + 12 >> 2] = HEAP32[i29 >> 2];
      HEAP32[i50 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i54 >> 2] = HEAP32[i30 >> 2];
      HEAP32[i60 >> 2] = HEAP32[i31 >> 2];
      HEAP32[i31 >> 2] = 0;
      HEAP32[i30 >> 2] = 0;
      HEAP32[i7 >> 2] = 0;
      HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i28, i7);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     i56 = i48;
    }
    i45 = 1;
    i46 = i56;
   }
   i46 = i47 + 1 | 0;
   HEAP32[i3 + 48 >> 2] = HEAP32[i5 >> 2];
   if (i45 ? (i28 = HEAP32[i19 >> 2] | 0, (HEAP32[i3 + 16 >> 2] | 0) != (i28 | 0)) : 0) {
    i30 = 0;
    while (1) {
     if ((i30 | 0) == -1) break;
     i31 = i30 + -1 | 0;
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i28 + (i31 << 4) | 0);
     i30 = i31;
    }
    HEAP32[i19 >> 2] = i28 + -16;
   }
   i61 = i46;
   break L1;
  } while (0);
  i61 = i1;
 } else i61 = i1; while (0);
 STACKTOP = i4;
 return i61 | 0;
}

function _fill_inverse_cmap(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 1408 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1408);
 i6 = i5 + 384 | 0;
 i7 = i5 + 128 | 0;
 i8 = i5;
 i9 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i10 = i2 >>> 2 << 5;
 i11 = i10 | 4;
 i12 = i3 >>> 3 << 5;
 i13 = i12 | 2;
 i14 = i4 >>> 2 << 5;
 i15 = i14 | 4;
 i16 = HEAP32[i1 + 132 >> 2] | 0;
 i17 = i10 | 28;
 i10 = i17 + i11 >> 1;
 i18 = i12 | 30;
 i12 = i18 + i13 >> 1;
 i19 = i14 | 28;
 i14 = i19 + i15 >> 1;
 if ((i16 | 0) > 0) {
  i20 = HEAP32[i1 + 136 >> 2] | 0;
  i21 = HEAP32[i20 >> 2] | 0;
  i22 = HEAP32[i20 + 4 >> 2] | 0;
  i23 = HEAP32[i20 + 8 >> 2] | 0;
  i20 = 2147483647;
  i24 = 0;
  do {
   i25 = HEAPU8[i21 + i24 >> 0] | 0;
   do if ((i11 | 0) <= (i25 | 0)) {
    if ((i17 | 0) < (i25 | 0)) {
     i26 = i25 - i17 << 1;
     i27 = i25 - i11 << 1;
     i28 = Math_imul(i27, i27) | 0;
     i29 = Math_imul(i26, i26) | 0;
     break;
    }
    if ((i10 | 0) < (i25 | 0)) {
     i26 = i25 - i11 << 1;
     i28 = Math_imul(i26, i26) | 0;
     i29 = 0;
     break;
    } else {
     i26 = i25 - i17 << 1;
     i28 = Math_imul(i26, i26) | 0;
     i29 = 0;
     break;
    }
   } else {
    i26 = i25 - i11 << 1;
    i27 = i25 - i17 << 1;
    i28 = Math_imul(i27, i27) | 0;
    i29 = Math_imul(i26, i26) | 0;
   } while (0);
   i25 = HEAPU8[i22 + i24 >> 0] | 0;
   do if ((i13 | 0) <= (i25 | 0)) {
    if ((i18 | 0) < (i25 | 0)) {
     i26 = (i25 - i18 | 0) * 3 | 0;
     i27 = (i25 - i13 | 0) * 3 | 0;
     i30 = (Math_imul(i26, i26) | 0) + i29 | 0;
     i31 = Math_imul(i27, i27) | 0;
     break;
    }
    if ((i12 | 0) < (i25 | 0)) {
     i27 = (i25 - i13 | 0) * 3 | 0;
     i30 = i29;
     i31 = Math_imul(i27, i27) | 0;
     break;
    } else {
     i27 = (i25 - i18 | 0) * 3 | 0;
     i30 = i29;
     i31 = Math_imul(i27, i27) | 0;
     break;
    }
   } else {
    i27 = (i25 - i13 | 0) * 3 | 0;
    i26 = (i25 - i18 | 0) * 3 | 0;
    i30 = (Math_imul(i27, i27) | 0) + i29 | 0;
    i31 = Math_imul(i26, i26) | 0;
   } while (0);
   i25 = i31 + i28 | 0;
   i26 = HEAPU8[i23 + i24 >> 0] | 0;
   do if ((i15 | 0) <= (i26 | 0)) {
    if ((i19 | 0) < (i26 | 0)) {
     i27 = i26 - i19 | 0;
     i32 = i26 - i15 | 0;
     i33 = (Math_imul(i27, i27) | 0) + i30 | 0;
     i34 = Math_imul(i32, i32) | 0;
     break;
    }
    if ((i14 | 0) < (i26 | 0)) {
     i32 = i26 - i15 | 0;
     i33 = i30;
     i34 = Math_imul(i32, i32) | 0;
     break;
    } else {
     i32 = i26 - i19 | 0;
     i33 = i30;
     i34 = Math_imul(i32, i32) | 0;
     break;
    }
   } else {
    i32 = i26 - i15 | 0;
    i27 = i26 - i19 | 0;
    i33 = (Math_imul(i32, i32) | 0) + i30 | 0;
    i34 = Math_imul(i27, i27) | 0;
   } while (0);
   i26 = i25 + i34 | 0;
   HEAP32[i6 + (i24 << 2) >> 2] = i33;
   i20 = (i26 | 0) < (i20 | 0) ? i26 : i20;
   i24 = i24 + 1 | 0;
  } while ((i24 | 0) != (i16 | 0));
  i24 = 0;
  i33 = 0;
  while (1) {
   if ((HEAP32[i6 + (i33 << 2) >> 2] | 0) > (i20 | 0)) i35 = i24; else {
    HEAP8[i7 + i24 >> 0] = i33;
    i35 = i24 + 1 | 0;
   }
   i33 = i33 + 1 | 0;
   if ((i33 | 0) == (i16 | 0)) {
    i36 = i35;
    break;
   } else i24 = i35;
  }
 } else i36 = 0;
 HEAP32[i6 >> 2] = 2147483647;
 HEAP32[i6 + 4 >> 2] = 2147483647;
 HEAP32[i6 + 8 >> 2] = 2147483647;
 HEAP32[i6 + 12 >> 2] = 2147483647;
 HEAP32[i6 + 16 >> 2] = 2147483647;
 HEAP32[i6 + 20 >> 2] = 2147483647;
 HEAP32[i6 + 24 >> 2] = 2147483647;
 HEAP32[i6 + 28 >> 2] = 2147483647;
 HEAP32[i6 + 32 >> 2] = 2147483647;
 HEAP32[i6 + 36 >> 2] = 2147483647;
 HEAP32[i6 + 40 >> 2] = 2147483647;
 HEAP32[i6 + 44 >> 2] = 2147483647;
 HEAP32[i6 + 48 >> 2] = 2147483647;
 HEAP32[i6 + 52 >> 2] = 2147483647;
 HEAP32[i6 + 56 >> 2] = 2147483647;
 HEAP32[i6 + 60 >> 2] = 2147483647;
 HEAP32[i6 + 64 >> 2] = 2147483647;
 HEAP32[i6 + 68 >> 2] = 2147483647;
 HEAP32[i6 + 72 >> 2] = 2147483647;
 HEAP32[i6 + 76 >> 2] = 2147483647;
 HEAP32[i6 + 80 >> 2] = 2147483647;
 HEAP32[i6 + 84 >> 2] = 2147483647;
 HEAP32[i6 + 88 >> 2] = 2147483647;
 HEAP32[i6 + 92 >> 2] = 2147483647;
 HEAP32[i6 + 96 >> 2] = 2147483647;
 HEAP32[i6 + 100 >> 2] = 2147483647;
 HEAP32[i6 + 104 >> 2] = 2147483647;
 HEAP32[i6 + 108 >> 2] = 2147483647;
 HEAP32[i6 + 112 >> 2] = 2147483647;
 HEAP32[i6 + 116 >> 2] = 2147483647;
 HEAP32[i6 + 120 >> 2] = 2147483647;
 HEAP32[i6 + 124 >> 2] = 2147483647;
 HEAP32[i6 + 128 >> 2] = 2147483647;
 HEAP32[i6 + 132 >> 2] = 2147483647;
 HEAP32[i6 + 136 >> 2] = 2147483647;
 HEAP32[i6 + 140 >> 2] = 2147483647;
 HEAP32[i6 + 144 >> 2] = 2147483647;
 HEAP32[i6 + 148 >> 2] = 2147483647;
 HEAP32[i6 + 152 >> 2] = 2147483647;
 HEAP32[i6 + 156 >> 2] = 2147483647;
 HEAP32[i6 + 160 >> 2] = 2147483647;
 HEAP32[i6 + 164 >> 2] = 2147483647;
 HEAP32[i6 + 168 >> 2] = 2147483647;
 HEAP32[i6 + 172 >> 2] = 2147483647;
 HEAP32[i6 + 176 >> 2] = 2147483647;
 HEAP32[i6 + 180 >> 2] = 2147483647;
 HEAP32[i6 + 184 >> 2] = 2147483647;
 HEAP32[i6 + 188 >> 2] = 2147483647;
 HEAP32[i6 + 192 >> 2] = 2147483647;
 HEAP32[i6 + 196 >> 2] = 2147483647;
 HEAP32[i6 + 200 >> 2] = 2147483647;
 HEAP32[i6 + 204 >> 2] = 2147483647;
 HEAP32[i6 + 208 >> 2] = 2147483647;
 HEAP32[i6 + 212 >> 2] = 2147483647;
 HEAP32[i6 + 216 >> 2] = 2147483647;
 HEAP32[i6 + 220 >> 2] = 2147483647;
 HEAP32[i6 + 224 >> 2] = 2147483647;
 HEAP32[i6 + 228 >> 2] = 2147483647;
 HEAP32[i6 + 232 >> 2] = 2147483647;
 HEAP32[i6 + 236 >> 2] = 2147483647;
 HEAP32[i6 + 240 >> 2] = 2147483647;
 HEAP32[i6 + 244 >> 2] = 2147483647;
 HEAP32[i6 + 248 >> 2] = 2147483647;
 HEAP32[i6 + 252 >> 2] = 2147483647;
 HEAP32[i6 + 256 >> 2] = 2147483647;
 HEAP32[i6 + 260 >> 2] = 2147483647;
 HEAP32[i6 + 264 >> 2] = 2147483647;
 HEAP32[i6 + 268 >> 2] = 2147483647;
 HEAP32[i6 + 272 >> 2] = 2147483647;
 HEAP32[i6 + 276 >> 2] = 2147483647;
 HEAP32[i6 + 280 >> 2] = 2147483647;
 HEAP32[i6 + 284 >> 2] = 2147483647;
 HEAP32[i6 + 288 >> 2] = 2147483647;
 HEAP32[i6 + 292 >> 2] = 2147483647;
 HEAP32[i6 + 296 >> 2] = 2147483647;
 HEAP32[i6 + 300 >> 2] = 2147483647;
 HEAP32[i6 + 304 >> 2] = 2147483647;
 HEAP32[i6 + 308 >> 2] = 2147483647;
 HEAP32[i6 + 312 >> 2] = 2147483647;
 HEAP32[i6 + 316 >> 2] = 2147483647;
 HEAP32[i6 + 320 >> 2] = 2147483647;
 HEAP32[i6 + 324 >> 2] = 2147483647;
 HEAP32[i6 + 328 >> 2] = 2147483647;
 HEAP32[i6 + 332 >> 2] = 2147483647;
 HEAP32[i6 + 336 >> 2] = 2147483647;
 HEAP32[i6 + 340 >> 2] = 2147483647;
 HEAP32[i6 + 344 >> 2] = 2147483647;
 HEAP32[i6 + 348 >> 2] = 2147483647;
 HEAP32[i6 + 352 >> 2] = 2147483647;
 HEAP32[i6 + 356 >> 2] = 2147483647;
 HEAP32[i6 + 360 >> 2] = 2147483647;
 HEAP32[i6 + 364 >> 2] = 2147483647;
 HEAP32[i6 + 368 >> 2] = 2147483647;
 HEAP32[i6 + 372 >> 2] = 2147483647;
 HEAP32[i6 + 376 >> 2] = 2147483647;
 HEAP32[i6 + 380 >> 2] = 2147483647;
 HEAP32[i6 + 384 >> 2] = 2147483647;
 HEAP32[i6 + 388 >> 2] = 2147483647;
 HEAP32[i6 + 392 >> 2] = 2147483647;
 HEAP32[i6 + 396 >> 2] = 2147483647;
 HEAP32[i6 + 400 >> 2] = 2147483647;
 HEAP32[i6 + 404 >> 2] = 2147483647;
 HEAP32[i6 + 408 >> 2] = 2147483647;
 HEAP32[i6 + 412 >> 2] = 2147483647;
 HEAP32[i6 + 416 >> 2] = 2147483647;
 HEAP32[i6 + 420 >> 2] = 2147483647;
 HEAP32[i6 + 424 >> 2] = 2147483647;
 HEAP32[i6 + 428 >> 2] = 2147483647;
 HEAP32[i6 + 432 >> 2] = 2147483647;
 HEAP32[i6 + 436 >> 2] = 2147483647;
 HEAP32[i6 + 440 >> 2] = 2147483647;
 HEAP32[i6 + 444 >> 2] = 2147483647;
 HEAP32[i6 + 448 >> 2] = 2147483647;
 HEAP32[i6 + 452 >> 2] = 2147483647;
 HEAP32[i6 + 456 >> 2] = 2147483647;
 HEAP32[i6 + 460 >> 2] = 2147483647;
 HEAP32[i6 + 464 >> 2] = 2147483647;
 HEAP32[i6 + 468 >> 2] = 2147483647;
 HEAP32[i6 + 472 >> 2] = 2147483647;
 HEAP32[i6 + 476 >> 2] = 2147483647;
 HEAP32[i6 + 480 >> 2] = 2147483647;
 HEAP32[i6 + 484 >> 2] = 2147483647;
 HEAP32[i6 + 488 >> 2] = 2147483647;
 HEAP32[i6 + 492 >> 2] = 2147483647;
 HEAP32[i6 + 496 >> 2] = 2147483647;
 HEAP32[i6 + 500 >> 2] = 2147483647;
 HEAP32[i6 + 504 >> 2] = 2147483647;
 HEAP32[i6 + 508 >> 2] = 2147483647;
 if ((i36 | 0) > 0) {
  i35 = i1 + 136 | 0;
  i1 = 0;
  do {
   i24 = HEAP8[i7 + i1 >> 0] | 0;
   i16 = i24 & 255;
   i33 = HEAP32[i35 >> 2] | 0;
   i20 = i11 - (HEAPU8[(HEAP32[i33 >> 2] | 0) + i16 >> 0] | 0) | 0;
   i34 = i20 << 1;
   i30 = Math_imul(i34, i34) | 0;
   i34 = i13 - (HEAPU8[(HEAP32[i33 + 4 >> 2] | 0) + i16 >> 0] | 0) | 0;
   i19 = i34 * 3 | 0;
   i14 = (Math_imul(i19, i19) | 0) + i30 | 0;
   i30 = i15 - (HEAPU8[(HEAP32[i33 + 8 >> 2] | 0) + i16 >> 0] | 0) | 0;
   i16 = i34 * 72 | 0;
   i34 = i16 + 144 | 0;
   i33 = i30 << 4;
   i19 = i33 + 64 | 0;
   i23 = i33 + 192 | 0;
   i28 = i33 + 320 | 0;
   i33 = i16 + 432 | 0;
   i31 = i16 + 720 | 0;
   i29 = i16 + 1008 | 0;
   i18 = i16 + 1296 | 0;
   i12 = i16 + 1584 | 0;
   i22 = i16 + 1872 | 0;
   i16 = 3;
   i17 = (i20 << 6) + 256 | 0;
   i20 = i14 + (Math_imul(i30, i30) | 0) | 0;
   i30 = i8;
   i14 = i6;
   while (1) {
    i10 = i14 + 16 | 0;
    if ((i20 | 0) < (HEAP32[i14 >> 2] | 0)) {
     HEAP32[i14 >> 2] = i20;
     HEAP8[i30 >> 0] = i24;
    }
    i21 = i20 + i19 | 0;
    i26 = i14 + 4 | 0;
    if ((i21 | 0) < (HEAP32[i26 >> 2] | 0)) {
     HEAP32[i26 >> 2] = i21;
     HEAP8[i30 + 1 >> 0] = i24;
    }
    i26 = i21 + i23 | 0;
    i21 = i14 + 8 | 0;
    if ((i26 | 0) < (HEAP32[i21 >> 2] | 0)) {
     HEAP32[i21 >> 2] = i26;
     HEAP8[i30 + 2 >> 0] = i24;
    }
    i21 = i26 + i28 | 0;
    i26 = i14 + 12 | 0;
    if ((i21 | 0) < (HEAP32[i26 >> 2] | 0)) {
     HEAP32[i26 >> 2] = i21;
     HEAP8[i30 + 3 >> 0] = i24;
    }
    i21 = i34 + i20 | 0;
    i26 = i14 + 32 | 0;
    if ((i21 | 0) < (HEAP32[i10 >> 2] | 0)) {
     HEAP32[i10 >> 2] = i21;
     HEAP8[i30 + 4 >> 0] = i24;
    }
    i10 = i21 + i19 | 0;
    i27 = i14 + 20 | 0;
    if ((i10 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i10;
     HEAP8[i30 + 5 >> 0] = i24;
    }
    i27 = i10 + i23 | 0;
    i10 = i14 + 24 | 0;
    if ((i27 | 0) < (HEAP32[i10 >> 2] | 0)) {
     HEAP32[i10 >> 2] = i27;
     HEAP8[i30 + 6 >> 0] = i24;
    }
    i10 = i27 + i28 | 0;
    i27 = i14 + 28 | 0;
    if ((i10 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i10;
     HEAP8[i30 + 7 >> 0] = i24;
    }
    i10 = i33 + i21 | 0;
    i21 = i14 + 48 | 0;
    if ((i10 | 0) < (HEAP32[i26 >> 2] | 0)) {
     HEAP32[i26 >> 2] = i10;
     HEAP8[i30 + 8 >> 0] = i24;
    }
    i26 = i10 + i19 | 0;
    i27 = i14 + 36 | 0;
    if ((i26 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i26;
     HEAP8[i30 + 9 >> 0] = i24;
    }
    i27 = i26 + i23 | 0;
    i26 = i14 + 40 | 0;
    if ((i27 | 0) < (HEAP32[i26 >> 2] | 0)) {
     HEAP32[i26 >> 2] = i27;
     HEAP8[i30 + 10 >> 0] = i24;
    }
    i26 = i27 + i28 | 0;
    i27 = i14 + 44 | 0;
    if ((i26 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i26;
     HEAP8[i30 + 11 >> 0] = i24;
    }
    i26 = i31 + i10 | 0;
    i10 = i14 + 64 | 0;
    if ((i26 | 0) < (HEAP32[i21 >> 2] | 0)) {
     HEAP32[i21 >> 2] = i26;
     HEAP8[i30 + 12 >> 0] = i24;
    }
    i21 = i26 + i19 | 0;
    i27 = i14 + 52 | 0;
    if ((i21 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i21;
     HEAP8[i30 + 13 >> 0] = i24;
    }
    i27 = i21 + i23 | 0;
    i21 = i14 + 56 | 0;
    if ((i27 | 0) < (HEAP32[i21 >> 2] | 0)) {
     HEAP32[i21 >> 2] = i27;
     HEAP8[i30 + 14 >> 0] = i24;
    }
    i21 = i27 + i28 | 0;
    i27 = i14 + 60 | 0;
    if ((i21 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i21;
     HEAP8[i30 + 15 >> 0] = i24;
    }
    i21 = i29 + i26 | 0;
    i26 = i14 + 80 | 0;
    if ((i21 | 0) < (HEAP32[i10 >> 2] | 0)) {
     HEAP32[i10 >> 2] = i21;
     HEAP8[i30 + 16 >> 0] = i24;
    }
    i10 = i21 + i19 | 0;
    i27 = i14 + 68 | 0;
    if ((i10 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i10;
     HEAP8[i30 + 17 >> 0] = i24;
    }
    i27 = i10 + i23 | 0;
    i10 = i14 + 72 | 0;
    if ((i27 | 0) < (HEAP32[i10 >> 2] | 0)) {
     HEAP32[i10 >> 2] = i27;
     HEAP8[i30 + 18 >> 0] = i24;
    }
    i10 = i27 + i28 | 0;
    i27 = i14 + 76 | 0;
    if ((i10 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i10;
     HEAP8[i30 + 19 >> 0] = i24;
    }
    i10 = i18 + i21 | 0;
    i21 = i14 + 96 | 0;
    if ((i10 | 0) < (HEAP32[i26 >> 2] | 0)) {
     HEAP32[i26 >> 2] = i10;
     HEAP8[i30 + 20 >> 0] = i24;
    }
    i26 = i10 + i19 | 0;
    i27 = i14 + 84 | 0;
    if ((i26 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i26;
     HEAP8[i30 + 21 >> 0] = i24;
    }
    i27 = i26 + i23 | 0;
    i26 = i14 + 88 | 0;
    if ((i27 | 0) < (HEAP32[i26 >> 2] | 0)) {
     HEAP32[i26 >> 2] = i27;
     HEAP8[i30 + 22 >> 0] = i24;
    }
    i26 = i27 + i28 | 0;
    i27 = i14 + 92 | 0;
    if ((i26 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i26;
     HEAP8[i30 + 23 >> 0] = i24;
    }
    i26 = i12 + i10 | 0;
    i10 = i14 + 112 | 0;
    if ((i26 | 0) < (HEAP32[i21 >> 2] | 0)) {
     HEAP32[i21 >> 2] = i26;
     HEAP8[i30 + 24 >> 0] = i24;
    }
    i21 = i26 + i19 | 0;
    i27 = i14 + 100 | 0;
    if ((i21 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i21;
     HEAP8[i30 + 25 >> 0] = i24;
    }
    i27 = i21 + i23 | 0;
    i21 = i14 + 104 | 0;
    if ((i27 | 0) < (HEAP32[i21 >> 2] | 0)) {
     HEAP32[i21 >> 2] = i27;
     HEAP8[i30 + 26 >> 0] = i24;
    }
    i21 = i27 + i28 | 0;
    i27 = i14 + 108 | 0;
    if ((i21 | 0) < (HEAP32[i27 >> 2] | 0)) {
     HEAP32[i27 >> 2] = i21;
     HEAP8[i30 + 27 >> 0] = i24;
    }
    i21 = i22 + i26 | 0;
    if ((i21 | 0) < (HEAP32[i10 >> 2] | 0)) {
     HEAP32[i10 >> 2] = i21;
     HEAP8[i30 + 28 >> 0] = i24;
    }
    i10 = i21 + i19 | 0;
    i21 = i14 + 116 | 0;
    if ((i10 | 0) < (HEAP32[i21 >> 2] | 0)) {
     HEAP32[i21 >> 2] = i10;
     HEAP8[i30 + 29 >> 0] = i24;
    }
    i21 = i10 + i23 | 0;
    i10 = i14 + 120 | 0;
    if ((i21 | 0) < (HEAP32[i10 >> 2] | 0)) {
     HEAP32[i10 >> 2] = i21;
     HEAP8[i30 + 30 >> 0] = i24;
    }
    i10 = i21 + i28 | 0;
    i21 = i14 + 124 | 0;
    if ((i10 | 0) < (HEAP32[i21 >> 2] | 0)) {
     HEAP32[i21 >> 2] = i10;
     HEAP8[i30 + 31 >> 0] = i24;
    }
    i20 = i20 + i17 | 0;
    if (!i16) break; else {
     i16 = i16 + -1 | 0;
     i17 = i17 + 512 | 0;
     i30 = i30 + 32 | 0;
     i14 = i14 + 128 | 0;
    }
   }
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != (i36 | 0));
 }
 i36 = i2 & -4;
 i2 = i3 & -8;
 i1 = i4 & -4;
 i4 = i2 | 1;
 i6 = i2 | 2;
 i15 = i2 | 3;
 i13 = i2 | 4;
 i11 = i2 | 5;
 i35 = i2 | 6;
 i7 = i3 | 7;
 i3 = i8;
 i8 = 0;
 while (1) {
  i14 = i9 + (i8 + i36 << 2) | 0;
  i30 = HEAP32[i14 >> 2] | 0;
  i17 = i30 + (i2 << 6) + (i1 << 1) | 0;
  HEAP16[i17 >> 1] = (HEAPU8[i3 >> 0] | 0) + 1;
  HEAP16[i17 + 2 >> 1] = (HEAPU8[i3 + 1 >> 0] | 0) + 1;
  HEAP16[i17 + 4 >> 1] = (HEAPU8[i3 + 2 >> 0] | 0) + 1;
  HEAP16[i17 + 6 >> 1] = (HEAPU8[i3 + 3 >> 0] | 0) + 1;
  i17 = i30 + (i4 << 6) + (i1 << 1) | 0;
  HEAP16[i17 >> 1] = (HEAPU8[i3 + 4 >> 0] | 0) + 1;
  HEAP16[i17 + 2 >> 1] = (HEAPU8[i3 + 5 >> 0] | 0) + 1;
  HEAP16[i17 + 4 >> 1] = (HEAPU8[i3 + 6 >> 0] | 0) + 1;
  HEAP16[i17 + 6 >> 1] = (HEAPU8[i3 + 7 >> 0] | 0) + 1;
  i17 = i30 + (i6 << 6) + (i1 << 1) | 0;
  HEAP16[i17 >> 1] = (HEAPU8[i3 + 8 >> 0] | 0) + 1;
  HEAP16[i17 + 2 >> 1] = (HEAPU8[i3 + 9 >> 0] | 0) + 1;
  HEAP16[i17 + 4 >> 1] = (HEAPU8[i3 + 10 >> 0] | 0) + 1;
  HEAP16[i17 + 6 >> 1] = (HEAPU8[i3 + 11 >> 0] | 0) + 1;
  i17 = i30 + (i15 << 6) + (i1 << 1) | 0;
  HEAP16[i17 >> 1] = (HEAPU8[i3 + 12 >> 0] | 0) + 1;
  HEAP16[i17 + 2 >> 1] = (HEAPU8[i3 + 13 >> 0] | 0) + 1;
  HEAP16[i17 + 4 >> 1] = (HEAPU8[i3 + 14 >> 0] | 0) + 1;
  HEAP16[i17 + 6 >> 1] = (HEAPU8[i3 + 15 >> 0] | 0) + 1;
  i17 = HEAP32[i14 >> 2] | 0;
  i14 = i17 + (i13 << 6) + (i1 << 1) | 0;
  HEAP16[i14 >> 1] = (HEAPU8[i3 + 16 >> 0] | 0) + 1;
  HEAP16[i14 + 2 >> 1] = (HEAPU8[i3 + 17 >> 0] | 0) + 1;
  HEAP16[i14 + 4 >> 1] = (HEAPU8[i3 + 18 >> 0] | 0) + 1;
  HEAP16[i14 + 6 >> 1] = (HEAPU8[i3 + 19 >> 0] | 0) + 1;
  i14 = i17 + (i11 << 6) + (i1 << 1) | 0;
  HEAP16[i14 >> 1] = (HEAPU8[i3 + 20 >> 0] | 0) + 1;
  HEAP16[i14 + 2 >> 1] = (HEAPU8[i3 + 21 >> 0] | 0) + 1;
  HEAP16[i14 + 4 >> 1] = (HEAPU8[i3 + 22 >> 0] | 0) + 1;
  HEAP16[i14 + 6 >> 1] = (HEAPU8[i3 + 23 >> 0] | 0) + 1;
  i14 = i17 + (i35 << 6) + (i1 << 1) | 0;
  HEAP16[i14 >> 1] = (HEAPU8[i3 + 24 >> 0] | 0) + 1;
  HEAP16[i14 + 2 >> 1] = (HEAPU8[i3 + 25 >> 0] | 0) + 1;
  HEAP16[i14 + 4 >> 1] = (HEAPU8[i3 + 26 >> 0] | 0) + 1;
  HEAP16[i14 + 6 >> 1] = (HEAPU8[i3 + 27 >> 0] | 0) + 1;
  i14 = i17 + (i7 << 6) + (i1 << 1) | 0;
  HEAP16[i14 >> 1] = (HEAPU8[i3 + 28 >> 0] | 0) + 1;
  HEAP16[i14 + 2 >> 1] = (HEAPU8[i3 + 29 >> 0] | 0) + 1;
  HEAP16[i14 + 4 >> 1] = (HEAPU8[i3 + 30 >> 0] | 0) + 1;
  HEAP16[i14 + 6 >> 1] = (HEAPU8[i3 + 31 >> 0] | 0) + 1;
  i8 = i8 + 1 | 0;
  if ((i8 | 0) == 4) break; else i3 = i3 + 32 | 0;
 }
 STACKTOP = i5;
 return;
}

function _arPattGetIDGlobal(i1, i2, i3, i4, i5, i6, i7, i8, i9, d10, i11, i12, i13, i14, i15, i16, i17, i18, i19) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 d10 = +d10;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 var i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, d70 = 0.0, i71 = 0, i72 = 0, i73 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 12432 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(12432);
 i21 = i20 + 12416 | 0;
 i22 = i20 + 12288 | 0;
 i23 = i20;
 L1 : do if ((i3 + -2 | 0) >>> 0 < 3) {
  if ((i17 | 0) != 2830) {
   i24 = i17 & 255;
   if ((_arPattGetImage2(i2, 2, i24, i24 * 3 | 0, i4, i5, i6, i7, i8, i9, d10, i23) | 0) < 0) {
    HEAP32[i14 >> 2] = -1;
    i25 = -6;
    break;
   }
   i26 = _get_matrix_code(i23, i24, i14, i15, i16, i17, i18) | 0;
   if (!i19) {
    i25 = i26;
    break;
   }
   i24 = i19;
   HEAP32[i24 >> 2] = 0;
   HEAP32[i24 + 4 >> 2] = 0;
   i25 = i26;
   break;
  }
  if ((_arPattGetImage2(i2, 2, 14, 42, i4, i5, i6, i7, i8, i9, .875, i23) | 0) < 0) {
   HEAP32[i14 >> 2] = -1;
   i25 = -6;
   break;
  }
  i26 = HEAP8[i23 >> 0] | 0;
  i24 = HEAP8[i23 + 182 >> 0] | 0;
  i27 = (i24 & 255) > (i26 & 255) ? i24 : i26;
  i28 = (i24 & 255) < (i26 & 255) ? i24 : i26;
  i29 = HEAP8[i23 + 195 >> 0] | 0;
  i30 = (i29 & 255) > (i27 & 255) ? i29 : i27;
  i27 = (i29 & 255) < (i28 & 255) ? i29 : i28;
  i28 = HEAP8[i23 + 13 >> 0] | 0;
  i31 = ((i28 & 255) > (i30 & 255) ? i28 : i30) & 255;
  i30 = ((i28 & 255) < (i27 & 255) ? i28 : i27) & 255;
  L13 : do if ((i31 - i30 | 0) >= 30) {
   i27 = (i31 + i30 | 0) >>> 1;
   i32 = i27 >>> 0 > (i26 & 255) >>> 0;
   i33 = i27 >>> 0 > (i24 & 255) >>> 0;
   i34 = i27 >>> 0 > (i29 & 255) >>> 0;
   i35 = i27 >>> 0 > (i28 & 255) >>> 0;
   if (i32) if (i33) if (i34 & i35) i36 = 69; else i37 = i34 & 1; else i36 = 65; else if (i33) if (i34) i37 = i35 ? 2 : 1; else i36 = 69; else i36 = 65;
   do if ((i36 | 0) == 65) {
    if (!i34) if (i33 | i35 & i32 ^ 1) {
     i36 = 69;
     break;
    } else {
     i37 = 3;
     break;
    }
    if (i35) i37 = i32 ? 3 : 2; else i36 = 69;
   } while (0);
   if ((i36 | 0) == 69) i37 = 4;
   L30 : do switch (i37 & 7) {
   case 4:
    {
     i38 = -3;
     i36 = 70;
     break L13;
     break;
    }
   case 0:
    {
     i32 = 0;
     i35 = 255;
     i33 = 119;
     while (1) {
      i34 = i32 + -3 | 0;
      i39 = i32 * 14 | 0;
      if ((i32 & 2147483646 | 0) == 12) {
       i40 = i35;
       i41 = i33;
       i42 = 0;
       while (1) {
        L39 : do if ((i42 + -3 | i34) >>> 0 >= 8 ? ((i42 | i32) & 2147483646 | 0) != 0 : 0) {
         switch (i42 & 2147483646 | 0) {
         case 0:
         case 12:
          {
           i43 = i41;
           i44 = i40;
           break L39;
           break;
          }
         default:
          {}
         }
         i45 = (HEAPU8[i23 + (i42 + i39) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + i41 >> 0] = i45 >>> 31;
         i46 = (i45 | 0) > -1 ? i45 : 0 - i45 | 0;
         i43 = i41 + -1 | 0;
         i44 = (i46 | 0) < (i40 | 0) ? i46 : i40;
        } else {
         i43 = i41;
         i44 = i40;
        } while (0);
        i42 = i42 + 1 | 0;
        if ((i42 | 0) == 14) {
         i47 = i43;
         i48 = i44;
         break;
        } else {
         i40 = i44;
         i41 = i43;
        }
       }
      } else {
       i41 = i35;
       i40 = i33;
       i42 = 0;
       while (1) {
        if ((i42 + -3 | i34) >>> 0 >= 8 ? ((i42 | i32) & 2147483646 | 0) != 0 : 0) {
         i46 = (HEAPU8[i23 + (i42 + i39) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + i40 >> 0] = i46 >>> 31;
         i45 = (i46 | 0) > -1 ? i46 : 0 - i46 | 0;
         i49 = i40 + -1 | 0;
         i50 = (i45 | 0) < (i41 | 0) ? i45 : i41;
        } else {
         i49 = i40;
         i50 = i41;
        }
        i42 = i42 + 1 | 0;
        if ((i42 | 0) == 14) {
         i47 = i49;
         i48 = i50;
         break;
        } else {
         i41 = i50;
         i40 = i49;
        }
       }
      }
      i32 = i32 + 1 | 0;
      if ((i32 | 0) == 14) {
       i51 = i48;
       i36 = 53;
       break;
      } else {
       i35 = i48;
       i33 = i47;
      }
     }
     break;
    }
   case 1:
    {
     i33 = 255;
     i35 = 119;
     i32 = 0;
     while (1) {
      i40 = i32 + -3 | 0;
      switch (i32 & 2147483646 | 0) {
      case 0:
       {
        i41 = 13;
        i42 = i33;
        i39 = i35;
        while (1) {
         if ((i41 & -2 | 0) == 12 | (i41 + -3 | i40) >>> 0 < 8) {
          i52 = i39;
          i53 = i42;
         } else {
          i34 = (HEAPU8[i23 + ((i41 * 14 | 0) + i32) >> 0] | 0) - i27 | 0;
          HEAP8[i22 + i39 >> 0] = i34 >>> 31;
          i45 = (i34 | 0) > -1 ? i34 : 0 - i34 | 0;
          i52 = i39 + -1 | 0;
          i53 = (i45 | 0) < (i42 | 0) ? i45 : i42;
         }
         if (!i41) {
          i54 = i52;
          i55 = i53;
          break;
         } else {
          i41 = i41 + -1 | 0;
          i42 = i53;
          i39 = i52;
         }
        }
        break;
       }
      case 12:
       {
        i39 = (HEAPU8[i23 + (i32 + 154) >> 0] | 0) - i27 | 0;
        i42 = i35 + -1 | 0;
        HEAP8[i22 + i35 >> 0] = i39 >>> 31;
        i41 = (i39 | 0) > -1 ? i39 : 0 - i39 | 0;
        i39 = (i41 | 0) < (i33 | 0) ? i41 : i33;
        if (i40 >>> 0 < 8) {
         i56 = i42;
         i57 = i39;
        } else {
         i41 = (HEAPU8[i23 + (i32 + 140) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + i42 >> 0] = i41 >>> 31;
         i42 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
         i41 = (i42 | 0) < (i39 | 0) ? i42 : i39;
         i39 = (HEAPU8[i23 + (i32 + 126) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -2) >> 0] = i39 >>> 31;
         i42 = (i39 | 0) > -1 ? i39 : 0 - i39 | 0;
         i39 = (i42 | 0) < (i41 | 0) ? i42 : i41;
         i41 = (HEAPU8[i23 + (i32 + 112) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -3) >> 0] = i41 >>> 31;
         i42 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
         i41 = (i42 | 0) < (i39 | 0) ? i42 : i39;
         i39 = (HEAPU8[i23 + (i32 + 98) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -4) >> 0] = i39 >>> 31;
         i42 = (i39 | 0) > -1 ? i39 : 0 - i39 | 0;
         i39 = (i42 | 0) < (i41 | 0) ? i42 : i41;
         i41 = (HEAPU8[i23 + (i32 + 84) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -5) >> 0] = i41 >>> 31;
         i42 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
         i41 = (i42 | 0) < (i39 | 0) ? i42 : i39;
         i39 = (HEAPU8[i23 + (i32 + 70) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -6) >> 0] = i39 >>> 31;
         i42 = (i39 | 0) > -1 ? i39 : 0 - i39 | 0;
         i39 = (i42 | 0) < (i41 | 0) ? i42 : i41;
         i41 = (HEAPU8[i23 + (i32 + 56) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -7) >> 0] = i41 >>> 31;
         i42 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
         i41 = (i42 | 0) < (i39 | 0) ? i42 : i39;
         i39 = (HEAPU8[i23 + (i32 + 42) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -8) >> 0] = i39 >>> 31;
         i42 = (i39 | 0) > -1 ? i39 : 0 - i39 | 0;
         i56 = i35 + -9 | 0;
         i57 = (i42 | 0) < (i41 | 0) ? i42 : i41;
        }
        i41 = (HEAPU8[i23 + (i32 + 28) >> 0] | 0) - i27 | 0;
        HEAP8[i22 + i56 >> 0] = i41 >>> 31;
        i42 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
        i54 = i56 + -1 | 0;
        i55 = (i42 | 0) < (i57 | 0) ? i42 : i57;
        break;
       }
      default:
       {
        i42 = (HEAPU8[i23 + (i32 + 182) >> 0] | 0) - i27 | 0;
        HEAP8[i22 + i35 >> 0] = i42 >>> 31;
        i41 = (i42 | 0) > -1 ? i42 : 0 - i42 | 0;
        i42 = (i41 | 0) < (i33 | 0) ? i41 : i33;
        i41 = (HEAPU8[i23 + (i32 + 168) >> 0] | 0) - i27 | 0;
        HEAP8[i22 + (i35 + -1) >> 0] = i41 >>> 31;
        i39 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
        i41 = (i39 | 0) < (i42 | 0) ? i39 : i42;
        i42 = (HEAPU8[i23 + (i32 + 154) >> 0] | 0) - i27 | 0;
        i39 = i35 + -3 | 0;
        HEAP8[i22 + (i35 + -2) >> 0] = i42 >>> 31;
        i45 = (i42 | 0) > -1 ? i42 : 0 - i42 | 0;
        i42 = (i45 | 0) < (i41 | 0) ? i45 : i41;
        if (i40 >>> 0 < 8) {
         i58 = i39;
         i59 = i42;
        } else {
         i41 = (HEAPU8[i23 + (i32 + 140) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + i39 >> 0] = i41 >>> 31;
         i39 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
         i41 = (i39 | 0) < (i42 | 0) ? i39 : i42;
         i42 = (HEAPU8[i23 + (i32 + 126) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -4) >> 0] = i42 >>> 31;
         i39 = (i42 | 0) > -1 ? i42 : 0 - i42 | 0;
         i42 = (i39 | 0) < (i41 | 0) ? i39 : i41;
         i41 = (HEAPU8[i23 + (i32 + 112) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -5) >> 0] = i41 >>> 31;
         i39 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
         i41 = (i39 | 0) < (i42 | 0) ? i39 : i42;
         i42 = (HEAPU8[i23 + (i32 + 98) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -6) >> 0] = i42 >>> 31;
         i39 = (i42 | 0) > -1 ? i42 : 0 - i42 | 0;
         i42 = (i39 | 0) < (i41 | 0) ? i39 : i41;
         i41 = (HEAPU8[i23 + (i32 + 84) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -7) >> 0] = i41 >>> 31;
         i39 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
         i41 = (i39 | 0) < (i42 | 0) ? i39 : i42;
         i42 = (HEAPU8[i23 + (i32 + 70) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -8) >> 0] = i42 >>> 31;
         i39 = (i42 | 0) > -1 ? i42 : 0 - i42 | 0;
         i42 = (i39 | 0) < (i41 | 0) ? i39 : i41;
         i41 = (HEAPU8[i23 + (i32 + 56) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -9) >> 0] = i41 >>> 31;
         i39 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
         i41 = (i39 | 0) < (i42 | 0) ? i39 : i42;
         i42 = (HEAPU8[i23 + (i32 + 42) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + (i35 + -10) >> 0] = i42 >>> 31;
         i39 = (i42 | 0) > -1 ? i42 : 0 - i42 | 0;
         i58 = i35 + -11 | 0;
         i59 = (i39 | 0) < (i41 | 0) ? i39 : i41;
        }
        i41 = (HEAPU8[i23 + (i32 + 28) >> 0] | 0) - i27 | 0;
        HEAP8[i22 + i58 >> 0] = i41 >>> 31;
        i39 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
        i41 = (i39 | 0) < (i59 | 0) ? i39 : i59;
        i39 = (HEAPU8[i23 + (i32 + 14) >> 0] | 0) - i27 | 0;
        HEAP8[i22 + (i58 + -1) >> 0] = i39 >>> 31;
        i42 = (i39 | 0) > -1 ? i39 : 0 - i39 | 0;
        i39 = (i42 | 0) < (i41 | 0) ? i42 : i41;
        i41 = (HEAPU8[i23 + i32 >> 0] | 0) - i27 | 0;
        HEAP8[i22 + (i58 + -2) >> 0] = i41 >>> 31;
        i42 = (i41 | 0) > -1 ? i41 : 0 - i41 | 0;
        i54 = i58 + -3 | 0;
        i55 = (i42 | 0) < (i39 | 0) ? i42 : i39;
       }
      }
      i32 = i32 + 1 | 0;
      if ((i32 | 0) == 14) {
       i51 = i55;
       i36 = 53;
       break L30;
      } else {
       i33 = i55;
       i35 = i54;
      }
     }
     break;
    }
   case 2:
    {
     i35 = 13;
     i33 = 255;
     i32 = 119;
     while (1) {
      i39 = i35 + -3 | 0;
      i42 = i35 >>> 0 < 2 | (i35 & -2 | 0) == 12;
      i41 = i35 * 14 | 0;
      i45 = 13;
      i34 = i33;
      i46 = i32;
      while (1) {
       if ((i45 + -3 | i39) >>> 0 >= 8 ? !((i45 | i35) >>> 0 < 2 | i42 & (i45 & -2 | 0) == 12) : 0) {
        i60 = (HEAPU8[i23 + (i45 + i41) >> 0] | 0) - i27 | 0;
        HEAP8[i22 + i46 >> 0] = i60 >>> 31;
        i61 = (i60 | 0) > -1 ? i60 : 0 - i60 | 0;
        i62 = i46 + -1 | 0;
        i63 = (i61 | 0) < (i34 | 0) ? i61 : i34;
       } else {
        i62 = i46;
        i63 = i34;
       }
       if (!i45) break; else {
        i45 = i45 + -1 | 0;
        i34 = i63;
        i46 = i62;
       }
      }
      if (!i35) {
       i51 = i63;
       i36 = 53;
       break;
      } else {
       i35 = i35 + -1 | 0;
       i33 = i63;
       i32 = i62;
      }
     }
     break;
    }
   case 3:
    {
     i32 = 13;
     i33 = 255;
     i35 = 119;
     while (1) {
      i46 = i32 + -3 | 0;
      i34 = i32 & -2;
      i45 = (i34 | 0) == 0;
      if ((i34 | 0) == 12) {
       i41 = i33;
       i42 = i35;
       i39 = 0;
       while (1) {
        if ((i39 + -3 | i46) >>> 0 >= 8 ? (i40 = i39 & 2147483646, !((i40 | 0) == 0 | i45 & (i40 | 0) == 12)) : 0) {
         i40 = (HEAPU8[i23 + ((i39 * 14 | 0) + i32) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + i42 >> 0] = i40 >>> 31;
         i61 = (i40 | 0) > -1 ? i40 : 0 - i40 | 0;
         i64 = i42 + -1 | 0;
         i65 = (i61 | 0) < (i41 | 0) ? i61 : i41;
        } else {
         i64 = i42;
         i65 = i41;
        }
        i39 = i39 + 1 | 0;
        if ((i39 | 0) == 14) {
         i66 = i64;
         i67 = i65;
         break;
        } else {
         i41 = i65;
         i42 = i64;
        }
       }
      } else {
       i42 = i33;
       i41 = i35;
       i39 = 0;
       while (1) {
        if ((i39 + -3 | i46) >>> 0 >= 8 ? (i61 = i39 & 2147483646, !((i61 | i34 | 0) == 0 | i45 & (i61 | 0) == 12)) : 0) {
         i61 = (HEAPU8[i23 + ((i39 * 14 | 0) + i32) >> 0] | 0) - i27 | 0;
         HEAP8[i22 + i41 >> 0] = i61 >>> 31;
         i40 = (i61 | 0) > -1 ? i61 : 0 - i61 | 0;
         i68 = i41 + -1 | 0;
         i69 = (i40 | 0) < (i42 | 0) ? i40 : i42;
        } else {
         i68 = i41;
         i69 = i42;
        }
        i39 = i39 + 1 | 0;
        if ((i39 | 0) == 14) {
         i66 = i68;
         i67 = i69;
         break;
        } else {
         i42 = i69;
         i41 = i68;
        }
       }
      }
      if (!i32) {
       i51 = i67;
       i36 = 53;
       break;
      } else {
       i32 = i32 + -1 | 0;
       i33 = i67;
       i35 = i66;
      }
     }
     break;
    }
   default:
    {
     HEAP32[i15 >> 2] = i37;
     d70 = 1.0;
    }
   } while (0);
   if ((i36 | 0) == 53) {
    HEAP32[i15 >> 2] = i37;
    d70 = (i51 | 0) > 30 ? 1.0 : +(i51 | 0) / 30.0;
   }
   HEAPF64[i16 >> 3] = d70;
   i27 = _decode_bch(2830, 0, 0, i22, i21) | 0;
   if ((i27 | 0) < 0) i71 = -4; else {
    if (i18 | 0) HEAP32[i18 >> 2] = i27;
    i27 = i21;
    i35 = HEAP32[i27 >> 2] | 0;
    i33 = HEAP32[i27 + 4 >> 2] | 0;
    if ((i35 | 0) == -1 & (i33 | 0) == -1) {
     HEAP32[i14 >> 2] = -1;
     i25 = -5;
     break L1;
    }
    HEAP32[i14 >> 2] = (i35 & -32768 | 0) == 0 & 0 == 0 ? i35 & 32767 : 0;
    if (!i19) {
     i25 = 0;
     break L1;
    }
    i27 = i19;
    HEAP32[i27 >> 2] = i35;
    HEAP32[i27 + 4 >> 2] = i33;
    i25 = 0;
    break L1;
   }
  } else {
   i38 = -2;
   i36 = 70;
  } while (0);
  if ((i36 | 0) == 70) {
   HEAP32[i15 >> 2] = 0;
   HEAPF64[i16 >> 3] = -1.0;
   i71 = i38;
  }
  HEAP32[i14 >> 2] = -1;
  i25 = i71;
 } else i25 = 1; while (0);
 L115 : do switch (i3 | 0) {
 case 0:
 case 1:
 case 3:
 case 4:
  {
   if (!i1) {
    HEAP32[i11 >> 2] = -1;
    i72 = -1;
    break L115;
   }
   i71 = i1 + 28 | 0;
   i14 = HEAP32[i71 >> 2] | 0;
   i38 = i14 << 2;
   switch (i3 | 0) {
   case 0:
   case 3:
    {
     if ((_arPattGetImage2(i2, 0, i14, i38, i4, i5, i6, i7, i8, i9, d10, i23) | 0) < 0) {
      HEAP32[i11 >> 2] = -1;
      i72 = -6;
      break L115;
     } else {
      i72 = _pattern_match(i1, 0, i23, HEAP32[i71 >> 2] | 0, i11, i12, i13) | 0;
      break L115;
     }
     break;
    }
   default:
    if ((_arPattGetImage2(i2, 1, i14, i38, i4, i5, i6, i7, i8, i9, d10, i23) | 0) < 0) {
     HEAP32[i11 >> 2] = -1;
     i72 = -6;
     break L115;
    } else {
     i72 = _pattern_match(i1, 1, i23, HEAP32[i71 >> 2] | 0, i11, i12, i13) | 0;
     break L115;
    }
   }
   break;
  }
 default:
  i72 = 1;
 } while (0);
 if ((i25 | 0) == 1) {
  i73 = i72;
  STACKTOP = i20;
  return i73 | 0;
 }
 i73 = (i72 | 0) == 1 ? i25 : (i72 & i25 | 0) < 0 ? i72 : 0;
 STACKTOP = i20;
 return i73 | 0;
}
function _ar2GetBestMatching(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i14 = i13 + 8 | 0;
 i15 = i13;
 i16 = i13 + 60 | 0;
 i17 = i13 + 48 | 0;
 i18 = i13 + 36 | 0;
 i19 = i13 + 32 | 0;
 i20 = i13 + 24 | 0;
 i21 = i13 + 16 | 0;
 i22 = i6 + 16 | 0;
 i23 = HEAP32[i22 >> 2] | 0;
 i24 = i6 + 20 | 0;
 i25 = HEAP32[i24 >> 2] | 0;
 i26 = i3 + -1 | 0;
 i27 = i4 + -1 | 0;
 i28 = HEAP32[i9 >> 2] | 0;
 if ((i28 | 0) >= 0) {
  i29 = i28 & -4 | 2;
  i28 = ((HEAP32[i9 + 4 >> 2] | 0) / 4 | 0) << 2 | 2;
  i30 = i29 - i7 | 0;
  i31 = (i30 | 0) > 0 ? i30 : 0;
  i30 = i29 + i7 | 0;
  i29 = (i30 | 0) < (i3 | 0) ? i30 : i26;
  i30 = i28 - i8 | 0;
  i32 = (i30 | 0) > 0 ? i30 : 0;
  i30 = i28 + i8 | 0;
  i28 = (i30 | 0) < (i4 | 0) ? i30 : i27;
  if (!((i32 | 0) > (i28 | 0) | (i31 | 0) > (i29 | 0))) {
   i30 = i31 + (Math_imul(i32, i3) | 0) | 0;
   i33 = i29 + 1 - i31 | 0;
   i31 = i32;
   i32 = 0;
   while (1) {
    _memset(i2 + (i30 + (Math_imul(i32, i3) | 0)) | 0, 0, i33 | 0) | 0;
    if ((i31 | 0) < (i28 | 0)) {
     i31 = i31 + 1 | 0;
     i32 = i32 + 1 | 0;
    } else break;
   }
  }
  i32 = HEAP32[i9 + 8 >> 2] | 0;
  if ((i32 | 0) >= 0) {
   i31 = i32 & -4 | 2;
   i32 = ((HEAP32[i9 + 12 >> 2] | 0) / 4 | 0) << 2 | 2;
   i28 = i31 - i7 | 0;
   i33 = (i28 | 0) > 0 ? i28 : 0;
   i28 = i31 + i7 | 0;
   i31 = (i28 | 0) < (i3 | 0) ? i28 : i26;
   i28 = i32 - i8 | 0;
   i30 = (i28 | 0) > 0 ? i28 : 0;
   i28 = i32 + i8 | 0;
   i32 = (i28 | 0) < (i4 | 0) ? i28 : i27;
   if (!((i30 | 0) > (i32 | 0) | (i33 | 0) > (i31 | 0))) {
    i28 = i33 + (Math_imul(i30, i3) | 0) | 0;
    i29 = i31 + 1 - i33 | 0;
    i33 = i30;
    i30 = 0;
    while (1) {
     _memset(i2 + (i28 + (Math_imul(i30, i3) | 0)) | 0, 0, i29 | 0) | 0;
     if ((i33 | 0) < (i32 | 0)) {
      i33 = i33 + 1 | 0;
      i30 = i30 + 1 | 0;
     } else break;
    }
   }
   i30 = HEAP32[i9 + 16 >> 2] | 0;
   if ((i30 | 0) >= 0 ? (i33 = i30 & -4 | 2, i30 = ((HEAP32[i9 + 20 >> 2] | 0) / 4 | 0) << 2 | 2, i32 = i33 - i7 | 0, i29 = (i32 | 0) > 0 ? i32 : 0, i32 = i33 + i7 | 0, i33 = (i32 | 0) < (i3 | 0) ? i32 : i26, i26 = i30 - i8 | 0, i32 = (i26 | 0) > 0 ? i26 : 0, i26 = i30 + i8 | 0, i30 = (i26 | 0) < (i4 | 0) ? i26 : i27, !((i32 | 0) > (i30 | 0) | (i29 | 0) > (i33 | 0))) : 0) {
    i27 = i29 + (Math_imul(i32, i3) | 0) | 0;
    i26 = i33 + 1 - i29 | 0;
    i29 = i32;
    i32 = 0;
    while (1) {
     _memset(i2 + (i27 + (Math_imul(i32, i3) | 0)) | 0, 0, i26 | 0) | 0;
     if ((i29 | 0) < (i30 | 0)) {
      i29 = i29 + 1 | 0;
      i32 = i32 + 1 | 0;
     } else break;
    }
   }
  }
 }
 i32 = i25 << 1;
 i25 = i23 << 1;
 i23 = i6 + 12 | 0;
 i29 = i6 + 8 | 0;
 i30 = 1;
 i26 = 0;
 i27 = 0;
 while (1) {
  i33 = HEAP32[i9 + (i27 << 3) >> 2] | 0;
  if ((i33 | 0) < 0) {
   i34 = 8;
   break;
  }
  i28 = i33 & -4 | 2;
  i33 = ((HEAP32[i9 + (i27 << 3) + 4 >> 2] | 0) / 4 | 0) << 2 | 2;
  i31 = i33 - i8 | 0;
  i35 = i33 + i8 | 0;
  L22 : do if ((i31 | 0) > (i35 | 0)) {
   i36 = i30;
   i37 = i26;
  } else {
   i33 = i28 - i7 | 0;
   i38 = i28 + i7 | 0;
   if ((i33 | 0) > (i38 | 0)) {
    i39 = i31;
    while (1) {
     if (!((i39 | 0) < (i25 | 0) | (i39 + i32 | 0) < (i4 | 0))) {
      i36 = i30;
      i37 = i26;
      break L22;
     }
     i39 = i39 + 4 | 0;
     if ((i39 | 0) > (i35 | 0)) {
      i36 = i30;
      i37 = i26;
      break L22;
     }
    }
   }
   i39 = i30;
   i40 = i31;
   i41 = i26;
   while (1) {
    L32 : do if ((i40 | 0) < (i25 | 0)) {
     i42 = i39;
     i43 = i41;
    } else {
     if ((i40 + i32 | 0) >= (i4 | 0)) {
      i36 = i39;
      i37 = i41;
      break L22;
     }
     i44 = Math_imul(i40, i3) | 0;
     i45 = i33;
     i46 = i39;
     i47 = i41;
     while (1) {
      do if ((i45 | 0) >= (HEAP32[i29 >> 2] << 1 | 0)) {
       if (((HEAP32[i23 >> 2] << 1) + i45 | 0) >= (i3 | 0)) {
        i42 = i46;
        i43 = i47;
        break L32;
       }
       i48 = i2 + (i45 + i44) | 0;
       if (!(HEAP8[i48 >> 0] | 0)) {
        HEAP8[i48 >> 0] = 1;
        _ar2GetBestMatchingSubFine(i1, i3, i5, i6, i45, i40, i19);
        i48 = HEAP32[i19 >> 2] | 0;
        if (!i47) {
         HEAP32[i16 >> 2] = i45;
         HEAP32[i17 >> 2] = i40;
         HEAP32[i18 >> 2] = i48;
         i49 = 0;
         i50 = 1;
         break;
        }
        L44 : do if ((i47 | 0) > 0) {
         i51 = 0;
         while (1) {
          if ((HEAP32[i18 + (i51 << 2) >> 2] | 0) < (i48 | 0)) {
           i52 = i51;
           break L44;
          }
          i53 = i51 + 1 | 0;
          if ((i53 | 0) < (i47 | 0)) i51 = i53; else {
           i52 = i53;
           break;
          }
         }
        } else i52 = 0; while (0);
        if ((i52 | 0) == (i47 | 0)) {
         if (i47 >>> 0 >= 3) {
          i49 = 0;
          i50 = i47;
          break;
         }
         HEAP32[i16 + (i47 << 2) >> 2] = i45;
         HEAP32[i17 + (i47 << 2) >> 2] = i40;
         HEAP32[i18 + (i47 << 2) >> 2] = i48;
         i49 = 0;
         i50 = i47 + 1 | 0;
         break;
        }
        i51 = (i47 | 0) == 3;
        i53 = i51 ? 3 : i47 + 1 | 0;
        i54 = i51 ? 2 : i47;
        if ((i54 | 0) > (i52 | 0)) {
         i51 = i54;
         do {
          i55 = i51;
          i51 = i51 + -1 | 0;
          HEAP32[i16 + (i55 << 2) >> 2] = HEAP32[i16 + (i51 << 2) >> 2];
          HEAP32[i17 + (i55 << 2) >> 2] = HEAP32[i17 + (i51 << 2) >> 2];
          HEAP32[i18 + (i55 << 2) >> 2] = HEAP32[i18 + (i51 << 2) >> 2];
         } while ((i51 | 0) > (i52 | 0));
         i56 = i52;
        } else i56 = i54;
        HEAP32[i16 + (i56 << 2) >> 2] = i45;
        HEAP32[i17 + (i56 << 2) >> 2] = i40;
        HEAP32[i18 + (i56 << 2) >> 2] = i48;
        i49 = 0;
        i50 = i53;
       } else {
        i49 = i46;
        i50 = i47;
       }
      } else {
       i49 = i46;
       i50 = i47;
      } while (0);
      i45 = i45 + 4 | 0;
      if ((i45 | 0) > (i38 | 0)) {
       i42 = i49;
       i43 = i50;
       break;
      } else {
       i46 = i49;
       i47 = i50;
      }
     }
    } while (0);
    i40 = i40 + 4 | 0;
    if ((i40 | 0) > (i35 | 0)) {
     i36 = i42;
     i37 = i43;
     break;
    } else {
     i39 = i42;
     i41 = i43;
    }
   }
  } while (0);
  i27 = i27 + 1 | 0;
  if (i27 >>> 0 >= 3) {
   i57 = i37;
   break;
  } else {
   i30 = i36;
   i26 = i37;
  }
 }
 if ((i34 | 0) == 8) if (!i30) i57 = i26; else {
  i58 = -1;
  STACKTOP = i13;
  return i58 | 0;
 }
 i26 = HEAP32[i6 >> 2] | 0;
 i30 = i6 + 4 | 0;
 i37 = HEAP32[i30 >> 2] | 0;
 i36 = Math_imul((i26 << 3) + 32 | 0, (i37 << 1) + 8 | 0) | 0;
 i27 = _malloc(i36) | 0;
 if (!i27) {
  _arLog(0, 3, 20510, i15);
  _exit(1);
 }
 i15 = _malloc(i36) | 0;
 if (!i15) {
  _arLog(0, 3, 20510, i14);
  _exit(1);
 }
 L72 : do if ((i57 | 0) > 0) {
  i14 = i6 + 36 | 0;
  i36 = i6 + 24 | 0;
  i43 = i3 << 1;
  i42 = i6 + 32 | 0;
  i50 = i6 + 28 | 0;
  i49 = i27 + 64 | 0;
  i56 = i15 + 64 | 0;
  i18 = i20 + 4 | 0;
  i52 = i21 + 4 | 0;
  i2 = i20 + 4 | 0;
  i32 = i21 + 4 | 0;
  i25 = 0;
  i7 = 0;
  i8 = -1;
  i9 = i26;
  i35 = i37;
  while (1) {
   L76 : do if ((HEAP32[i14 >> 2] | 0) == (Math_imul(i35, i9) | 0)) {
    switch (i5 | 0) {
    case 5:
    case 12:
    case 13:
    case 14:
     break;
    default:
     {
      i34 = 49;
      break L76;
     }
    }
    i31 = i17 + (i7 << 2) | 0;
    i28 = HEAP32[i31 >> 2] | 0;
    i41 = i28 + -3 - (HEAP32[i22 >> 2] << 1) | 0;
    if ((((i41 | 0) >= 0 ? (i28 + 3 + (HEAP32[i24 >> 2] << 1) | 0) < (i4 | 0) : 0) ? (i28 = i16 + (i7 << 2) | 0, i39 = HEAP32[i28 >> 2] | 0, i40 = i39 + -3 - (HEAP32[i29 >> 2] << 1) | 0, (i40 | 0) >= 0) : 0) ? (i39 + 3 + (HEAP32[i23 >> 2] << 1) | 0) < (i3 | 0) : 0) {
     i39 = i9 << 1;
     i38 = i35 << 1;
     i33 = i38 + 6 | 0;
     i47 = i39 + 6 | 0;
     i46 = (i9 << 2) + 16 | 0;
     if ((i46 | 0) > 0) {
      i45 = i9 << 4;
      i44 = i49 + i45 | 0;
      i51 = i56 + i45 | 0;
      i45 = i15;
      i55 = i27;
      i59 = 0;
      while (1) {
       HEAP32[i55 >> 2] = 0;
       HEAP32[i45 >> 2] = 0;
       i59 = i59 + 1 | 0;
       if ((i59 | 0) == (i46 | 0)) break; else {
        i45 = i45 + 4 | 0;
        i55 = i55 + 4 | 0;
       }
      }
      i60 = i51;
      i61 = i44;
     } else {
      i60 = i15;
      i61 = i27;
     }
     L89 : do if ((i38 | 0) > -6) {
      if ((i47 | 0) <= 0) {
       i55 = i60;
       i45 = i61;
       i46 = 0;
       while (1) {
        HEAP32[i45 >> 2] = 0;
        HEAP32[i55 >> 2] = 0;
        HEAP32[i20 >> 2] = 0;
        HEAP32[i21 >> 2] = 0;
        HEAP32[i45 + 4 >> 2] = 0;
        HEAP32[i55 + 4 >> 2] = 0;
        HEAP32[i2 >> 2] = 0;
        HEAP32[i32 >> 2] = 0;
        i46 = i46 + 1 | 0;
        if ((i46 | 0) >= (i33 | 0)) break L89; else {
         i55 = i55 + 8 | 0;
         i45 = i45 + 8 | 0;
        }
       }
      }
      i45 = i1 + (i40 + (Math_imul(i41, i3) | 0)) | 0;
      i55 = i15;
      i46 = i27;
      i59 = i60;
      i62 = i61;
      i63 = 0;
      while (1) {
       HEAP32[i62 >> 2] = 0;
       HEAP32[i59 >> 2] = 0;
       HEAP32[i20 >> 2] = 0;
       HEAP32[i21 >> 2] = 0;
       HEAP32[i62 + 4 >> 2] = 0;
       HEAP32[i59 + 4 >> 2] = 0;
       HEAP32[i18 >> 2] = 0;
       HEAP32[i52 >> 2] = 0;
       i64 = i46 + 32 | 0;
       i65 = i62 + 32 | 0;
       i66 = i55 + 32 | 0;
       i67 = i59 + 32 | 0;
       i68 = i55 + 8 | 0;
       i69 = i46 + 8 | 0;
       i70 = i45;
       i71 = i62 + 8 | 0;
       i72 = i59 + 8 | 0;
       i73 = 0;
       while (1) {
        i74 = i73 & 1;
        i75 = i20 + (i74 << 2) | 0;
        i76 = (HEAP32[i75 >> 2] | 0) + (HEAPU8[i70 >> 0] | 0) | 0;
        HEAP32[i75 >> 2] = i76;
        i75 = HEAPU8[i70 >> 0] | 0;
        i77 = Math_imul(i75, i75) | 0;
        i75 = i21 + (i74 << 2) | 0;
        i74 = i77 + (HEAP32[i75 >> 2] | 0) | 0;
        HEAP32[i75 >> 2] = i74;
        HEAP32[i71 >> 2] = (HEAP32[i69 >> 2] | 0) + i76;
        HEAP32[i72 >> 2] = (HEAP32[i68 >> 2] | 0) + i74;
        i73 = i73 + 1 | 0;
        if ((i73 | 0) == (i47 | 0)) break; else {
         i68 = i68 + 4 | 0;
         i69 = i69 + 4 | 0;
         i70 = i70 + 1 | 0;
         i71 = i71 + 4 | 0;
         i72 = i72 + 4 | 0;
        }
       }
       i63 = i63 + 1 | 0;
       if ((i63 | 0) >= (i33 | 0)) break; else {
        i45 = i45 + i3 | 0;
        i55 = i66 + (i39 << 2) | 0;
        i46 = i64 + (i39 << 2) | 0;
        i59 = i67 + (i39 << 2) | 0;
        i62 = i65 + (i39 << 2) | 0;
       }
      }
     } while (0);
     i39 = i8;
     i33 = 0;
     i47 = i25;
     while (1) {
      i38 = (Math_imul(i33 + i41 | 0, i3) | 0) + i40 | 0;
      i44 = i33 + -3 | 0;
      i51 = i39;
      i62 = 0;
      i59 = i47;
      while (1) {
       i46 = HEAP32[i30 >> 2] | 0;
       i55 = HEAP32[i6 >> 2] | 0;
       if ((i46 | 0) > 0 & (i55 | 0) > 0) {
        i45 = 0;
        i63 = HEAP32[i36 >> 2] | 0;
        i72 = i1 + (i38 + i62) | 0;
        i71 = 0;
        while (1) {
         i70 = 0;
         i69 = i63;
         i68 = i72;
         i73 = i71;
         while (1) {
          i73 = (Math_imul(HEAPU16[i69 >> 1] | 0, HEAPU8[i68 >> 0] | 0) | 0) + i73 | 0;
          i70 = i70 + 1 | 0;
          if ((i70 | 0) == (i55 | 0)) break; else {
           i69 = i69 + 2 | 0;
           i68 = i68 + 2 | 0;
          }
         }
         i45 = i45 + 1 | 0;
         if ((i45 | 0) == (i46 | 0)) {
          i78 = i73;
          break;
         } else {
          i63 = i63 + (i55 << 1) | 0;
          i72 = i72 + i43 | 0;
          i71 = i73;
         }
        }
       } else i78 = 0;
       i71 = i55 << 1;
       i72 = i71 + 8 | 0;
       i63 = i71 + i62 | 0;
       i71 = Math_imul(i72, (i46 << 1) + i33 | 0) | 0;
       i45 = Math_imul(i72, i33) | 0;
       i72 = i71 + i63 | 0;
       i65 = i45 + i62 | 0;
       i67 = i71 + i62 | 0;
       i71 = i45 + i63 | 0;
       i63 = (HEAP32[i27 + (i65 << 2) >> 2] | 0) + (HEAP32[i27 + (i72 << 2) >> 2] | 0) - (HEAP32[i27 + (i67 << 2) >> 2] | 0) - (HEAP32[i27 + (i71 << 2) >> 2] | 0) | 0;
       i45 = HEAP32[i14 >> 2] | 0;
       i64 = (HEAP32[i15 + (i65 << 2) >> 2] | 0) + (HEAP32[i15 + (i72 << 2) >> 2] | 0) - (HEAP32[i15 + (i67 << 2) >> 2] | 0) - (HEAP32[i15 + (i71 << 2) >> 2] | 0) - ((Math_imul(i63, i63) | 0) / (i45 | 0) | 0) | 0;
       if (!i64) i79 = 0; else {
        i71 = (i78 - ((Math_imul(HEAP32[i42 >> 2] | 0, i63) | 0) / (i45 | 0) | 0) | 0) * 100 | 0;
        i79 = (((i71 | 0) / (HEAP32[i50 >> 2] | 0) | 0) * 100 | 0) / (~~+Math_sqrt(+(+(i64 | 0))) | 0) | 0;
       }
       HEAP32[i19 >> 2] = i79;
       if ((i79 | 0) > (i59 | 0)) {
        HEAP32[i10 >> 2] = i62 + -3 + (HEAP32[i28 >> 2] | 0);
        HEAP32[i11 >> 2] = i44 + (HEAP32[i31 >> 2] | 0);
        HEAPF32[i12 >> 2] = +(i79 | 0) / 1.0e4;
        i80 = 0;
        i81 = i79;
       } else {
        i80 = i51;
        i81 = i59;
       }
       i62 = i62 + 1 | 0;
       if ((i62 | 0) == 7) break; else {
        i51 = i80;
        i59 = i81;
       }
      }
      i33 = i33 + 1 | 0;
      if ((i33 | 0) == 7) {
       i82 = i80;
       i83 = i81;
       break;
      } else {
       i39 = i80;
       i47 = i81;
      }
     }
    } else i34 = 49;
   } else i34 = 49; while (0);
   L121 : do if ((i34 | 0) == 49) {
    i34 = 0;
    i47 = HEAP32[i17 + (i7 << 2) >> 2] | 0;
    i39 = i47 + 3 | 0;
    i33 = i16 + (i7 << 2) | 0;
    i31 = i25;
    i28 = i47 + -3 | 0;
    i47 = i8;
    while (1) {
     L125 : do if ((i28 | 0) < (HEAP32[i22 >> 2] << 1 | 0)) {
      i84 = i47;
      i85 = i31;
     } else {
      if (((HEAP32[i24 >> 2] << 1) + i28 | 0) >= (i4 | 0)) {
       i82 = i47;
       i83 = i31;
       break L121;
      }
      i40 = HEAP32[i33 >> 2] | 0;
      i41 = i40 + 3 | 0;
      i59 = i31;
      i51 = i40 + -3 | 0;
      i40 = i47;
      while (1) {
       if ((i51 | 0) >= (HEAP32[i29 >> 2] << 1 | 0)) {
        if (((HEAP32[i23 >> 2] << 1) + i51 | 0) >= (i3 | 0)) {
         i84 = i40;
         i85 = i59;
         break L125;
        }
        _ar2GetBestMatchingSubFine(i1, i3, i5, i6, i51, i28, i19);
        i62 = HEAP32[i19 >> 2] | 0;
        if ((i62 | 0) > (i59 | 0)) {
         HEAP32[i10 >> 2] = i51;
         HEAP32[i11 >> 2] = i28;
         HEAPF32[i12 >> 2] = +(i62 | 0) / 1.0e4;
         i86 = i62;
         i87 = 0;
        } else {
         i86 = i59;
         i87 = i40;
        }
       } else {
        i86 = i59;
        i87 = i40;
       }
       if ((i51 | 0) < (i41 | 0)) {
        i59 = i86;
        i51 = i51 + 1 | 0;
        i40 = i87;
       } else {
        i84 = i87;
        i85 = i86;
        break;
       }
      }
     } while (0);
     if ((i28 | 0) < (i39 | 0)) {
      i31 = i85;
      i28 = i28 + 1 | 0;
      i47 = i84;
     } else {
      i82 = i84;
      i83 = i85;
      break;
     }
    }
   } while (0);
   i47 = i7 + 1 | 0;
   if ((i47 | 0) == (i57 | 0)) {
    i88 = i82;
    break L72;
   }
   i25 = i83;
   i7 = i47;
   i8 = i82;
   i9 = HEAP32[i6 >> 2] | 0;
   i35 = HEAP32[i30 >> 2] | 0;
  }
 } else i88 = -1; while (0);
 _free(i27);
 _free(i15);
 i58 = i88;
 STACKTOP = i13;
 return i58 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i5 = i4 + 64 | 0;
 i6 = i4 + 48 | 0;
 i7 = i4 + 36 | 0;
 i8 = i4 + 24 | 0;
 i9 = i4 + 12 | 0;
 i10 = i4;
 L1 : do if ((i2 - i1 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 76 : 0) {
  i11 = i1 + 1 | 0;
  do switch (HEAP8[i11 >> 0] | 0) {
  case 84:
   {
    i12 = i1;
    break L1;
    break;
   }
  case 119:
   {
    i13 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51437, __ZNSt3__211char_traitsIcE6lengthEPKc(51437) | 0);
    i14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i13, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i14 | 0) == (i13 | 0) ? i1 : i14;
    break L1;
    break;
   }
  case 98:
   {
    if ((HEAP8[i1 + 3 >> 0] | 0) != 69) {
     i12 = i1;
     break L1;
    }
    switch (HEAP8[i1 + 2 >> 0] | 0) {
    case 48:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i5, 51445);
      i14 = i3 + 4 | 0;
      i13 = HEAP32[i14 >> 2] | 0;
      if (i13 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i13, i5);
       HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
      i12 = i1 + 4 | 0;
      break L1;
      break;
     }
    case 49:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i5, 51451);
      i14 = i3 + 4 | 0;
      i13 = HEAP32[i14 >> 2] | 0;
      if (i13 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i13, i5);
       HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
      i12 = i1 + 4 | 0;
      break L1;
      break;
     }
    default:
     {
      i12 = i1;
      break L1;
     }
    }
    break;
   }
  case 99:
   {
    i14 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51456, __ZNSt3__211char_traitsIcE6lengthEPKc(51456) | 0);
    i13 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i14, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i13 | 0) == (i14 | 0) ? i1 : i13;
    break L1;
    break;
   }
  case 97:
   {
    i13 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51461, __ZNSt3__211char_traitsIcE6lengthEPKc(51461) | 0);
    i14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i13, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i14 | 0) == (i13 | 0) ? i1 : i14;
    break L1;
    break;
   }
  case 104:
   {
    i14 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51473, __ZNSt3__211char_traitsIcE6lengthEPKc(51473) | 0);
    i13 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i14, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i13 | 0) == (i14 | 0) ? i1 : i13;
    break L1;
    break;
   }
  case 115:
   {
    i13 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51487, __ZNSt3__211char_traitsIcE6lengthEPKc(51487) | 0);
    i14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i13, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i14 | 0) == (i13 | 0) ? i1 : i14;
    break L1;
    break;
   }
  case 116:
   {
    i14 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51493, __ZNSt3__211char_traitsIcE6lengthEPKc(51493) | 0);
    i13 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i14, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i13 | 0) == (i14 | 0) ? i1 : i13;
    break L1;
    break;
   }
  case 105:
   {
    i13 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 58932, __ZNSt3__211char_traitsIcE6lengthEPKc(58932) | 0);
    i14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i13, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i14 | 0) == (i13 | 0) ? i1 : i14;
    break L1;
    break;
   }
  case 106:
   {
    i14 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51508, __ZNSt3__211char_traitsIcE6lengthEPKc(51508) | 0);
    i13 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i14, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i13 | 0) == (i14 | 0) ? i1 : i13;
    break L1;
    break;
   }
  case 108:
   {
    i13 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51510, __ZNSt3__211char_traitsIcE6lengthEPKc(51510) | 0);
    i14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i13, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i14 | 0) == (i13 | 0) ? i1 : i14;
    break L1;
    break;
   }
  case 109:
   {
    i14 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51512, __ZNSt3__211char_traitsIcE6lengthEPKc(51512) | 0);
    i13 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i14, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i13 | 0) == (i14 | 0) ? i1 : i13;
    break L1;
    break;
   }
  case 120:
   {
    i13 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51515, __ZNSt3__211char_traitsIcE6lengthEPKc(51515) | 0);
    i14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i13, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i14 | 0) == (i13 | 0) ? i1 : i14;
    break L1;
    break;
   }
  case 121:
   {
    i14 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51518, __ZNSt3__211char_traitsIcE6lengthEPKc(51518) | 0);
    i13 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i14, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i13 | 0) == (i14 | 0) ? i1 : i13;
    break L1;
    break;
   }
  case 110:
   {
    i13 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51522, __ZNSt3__211char_traitsIcE6lengthEPKc(51522) | 0);
    i14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i13, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i14 | 0) == (i13 | 0) ? i1 : i14;
    break L1;
    break;
   }
  case 111:
   {
    i14 = i1 + 2 | 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
    HEAP32[i5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 51531, __ZNSt3__211char_traitsIcE6lengthEPKc(51531) | 0);
    i13 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i14, i2, i5, i3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i12 = (i13 | 0) == (i14 | 0) ? i1 : i13;
    break L1;
    break;
   }
  case 102:
   {
    i13 = i1 + 2 | 0;
    i14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_(i13, i2, i3) | 0;
    i12 = (i14 | 0) == (i13 | 0) ? i1 : i14;
    break L1;
    break;
   }
  case 100:
   {
    i14 = i1 + 2 | 0;
    i13 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_(i14, i2, i3) | 0;
    i12 = (i13 | 0) == (i14 | 0) ? i1 : i13;
    break L1;
    break;
   }
  case 101:
   {
    i13 = i1 + 2 | 0;
    i14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_(i13, i2, i3) | 0;
    i12 = (i14 | 0) == (i13 | 0) ? i1 : i14;
    break L1;
    break;
   }
  case 95:
   {
    if ((HEAP8[i1 + 2 >> 0] | 0) != 90) {
     i12 = i1;
     break L1;
    }
    i14 = i1 + 3 | 0;
    i13 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i14, i2, i3) | 0;
    if ((i13 | 0) == (i14 | 0) | (i13 | 0) == (i2 | 0)) {
     i12 = i1;
     break L1;
    }
    i12 = (HEAP8[i13 >> 0] | 0) == 69 ? i13 + 1 | 0 : i1;
    break L1;
    break;
   }
  default:
   {
    i13 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i11, i2, i3) | 0;
    if ((i13 | 0) == (i11 | 0) | (i13 | 0) == (i2 | 0)) {
     i12 = i1;
     break L1;
    }
    if ((HEAP8[i13 >> 0] | 0) == 69) {
     i12 = i13 + 1 | 0;
     break L1;
    }
    i14 = i13;
    while (1) {
     if ((i14 | 0) == (i2 | 0)) {
      i12 = i1;
      break L1;
     }
     i15 = HEAP8[i14 >> 0] | 0;
     if (((i15 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     i14 = i14 + 1 | 0;
    }
    if (!((i14 | 0) != (i13 | 0) & i15 << 24 >> 24 == 69)) {
     i12 = i1;
     break L1;
    }
    i16 = i3 + 4 | 0;
    i17 = HEAP32[i16 >> 2] | 0;
    if ((HEAP32[i3 >> 2] | 0) == (i17 | 0)) {
     i12 = i1;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, i17 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i9, 0, 50245) | 0;
    HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
    HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
    i17 = 0;
    while (1) {
     if ((i17 | 0) == 3) break;
     HEAP32[i9 + (i17 << 2) >> 2] = 0;
     i17 = i17 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50243) | 0;
    HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
    HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
    i17 = 0;
    while (1) {
     if ((i17 | 0) == 3) break;
     HEAP32[i8 + (i17 << 2) >> 2] = 0;
     i17 = i17 + 1 | 0;
    }
    HEAP32[i10 >> 2] = 0;
    HEAP32[i10 + 4 >> 2] = 0;
    HEAP32[i10 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i10, i13, i14);
    i17 = HEAP8[i10 + 11 >> 0] | 0;
    i18 = i17 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i7, i18 ? HEAP32[i10 >> 2] | 0 : i10, i18 ? HEAP32[i10 + 4 >> 2] | 0 : i17 & 255) | 0;
    HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
    i17 = 0;
    while (1) {
     if ((i17 | 0) == 3) break;
     HEAP32[i7 + (i17 << 2) >> 2] = 0;
     i17 = i17 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i16 >> 2] | 0) + -24 | 0, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    i12 = i14 + 1 | 0;
    break L1;
   }
  } while (0);
 } else i12 = i1; while (0);
 STACKTOP = i4;
 return i12 | 0;
}

function _decfloat(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, d75 = 0.0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0, i89 = 0, i90 = 0, i91 = 0, i92 = 0, i93 = 0, i94 = 0, i95 = 0, i96 = 0, i97 = 0, i98 = 0, i99 = 0, i100 = 0, i101 = 0, i102 = 0, i103 = 0, i104 = 0, i105 = 0, i106 = 0, d107 = 0.0, i108 = 0, d109 = 0.0, d110 = 0.0, d111 = 0.0, d112 = 0.0, d113 = 0.0, d114 = 0.0, d115 = 0.0, d116 = 0.0, d117 = 0.0, d118 = 0.0, i119 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 i8 = i7;
 i9 = i4 + i3 | 0;
 i10 = 0 - i9 | 0;
 i11 = i1 + 4 | 0;
 i12 = i1 + 104 | 0;
 i13 = i2;
 i2 = 0;
 L1 : while (1) {
  switch (i13 | 0) {
  case 46:
   {
    i14 = 7;
    break L1;
    break;
   }
  case 48:
   break;
  default:
   {
    i15 = 0;
    i16 = i13;
    i17 = i2;
    i18 = 0;
    i19 = 0;
    break L1;
   }
  }
  i20 = HEAP32[i11 >> 2] | 0;
  if (i20 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
   HEAP32[i11 >> 2] = i20 + 1;
   i21 = HEAPU8[i20 >> 0] | 0;
  } else i21 = ___shgetc(i1) | 0;
  i13 = i21;
  i2 = 1;
 }
 if ((i14 | 0) == 7) {
  i21 = HEAP32[i11 >> 2] | 0;
  if (i21 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
   HEAP32[i11 >> 2] = i21 + 1;
   i22 = HEAPU8[i21 >> 0] | 0;
  } else i22 = ___shgetc(i1) | 0;
  if ((i22 | 0) == 48) {
   i21 = 0;
   i13 = 0;
   while (1) {
    i20 = _i64Add(i21 | 0, i13 | 0, -1, -1) | 0;
    i23 = getTempRet0() | 0;
    i24 = HEAP32[i11 >> 2] | 0;
    if (i24 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
     HEAP32[i11 >> 2] = i24 + 1;
     i25 = HEAPU8[i24 >> 0] | 0;
    } else i25 = ___shgetc(i1) | 0;
    if ((i25 | 0) == 48) {
     i21 = i20;
     i13 = i23;
    } else {
     i15 = 1;
     i16 = i25;
     i17 = 1;
     i18 = i20;
     i19 = i23;
     break;
    }
   }
  } else {
   i15 = 1;
   i16 = i22;
   i17 = i2;
   i18 = 0;
   i19 = 0;
  }
 }
 HEAP32[i8 >> 2] = 0;
 i2 = i16 + -48 | 0;
 i22 = (i16 | 0) == 46;
 L22 : do if (i22 | i2 >>> 0 < 10) {
  i25 = i8 + 496 | 0;
  i13 = 0;
  i21 = 0;
  i23 = 0;
  i20 = i15;
  i24 = i17;
  i26 = i16;
  i27 = i22;
  i28 = i2;
  i29 = i18;
  i30 = i19;
  i31 = 0;
  i32 = 0;
  L24 : while (1) {
   do if (i27) if (!i20) {
    i33 = i13;
    i34 = i21;
    i35 = 1;
    i36 = i23;
    i37 = i24;
    i38 = i31;
    i39 = i32;
    i40 = i31;
    i41 = i32;
   } else break L24; else {
    i42 = _i64Add(i31 | 0, i32 | 0, 1, 0) | 0;
    i43 = getTempRet0() | 0;
    i44 = (i26 | 0) != 48;
    if ((i21 | 0) >= 125) {
     if (!i44) {
      i33 = i13;
      i34 = i21;
      i35 = i20;
      i36 = i23;
      i37 = i24;
      i38 = i29;
      i39 = i30;
      i40 = i42;
      i41 = i43;
      break;
     }
     HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 1;
     i33 = i13;
     i34 = i21;
     i35 = i20;
     i36 = i23;
     i37 = i24;
     i38 = i29;
     i39 = i30;
     i40 = i42;
     i41 = i43;
     break;
    }
    i45 = i8 + (i21 << 2) | 0;
    if (!i13) i46 = i28; else i46 = i26 + -48 + ((HEAP32[i45 >> 2] | 0) * 10 | 0) | 0;
    HEAP32[i45 >> 2] = i46;
    i45 = i13 + 1 | 0;
    i47 = (i45 | 0) == 9;
    i33 = i47 ? 0 : i45;
    i34 = i21 + (i47 & 1) | 0;
    i35 = i20;
    i36 = i44 ? i42 : i23;
    i37 = 1;
    i38 = i29;
    i39 = i30;
    i40 = i42;
    i41 = i43;
   } while (0);
   i43 = HEAP32[i11 >> 2] | 0;
   if (i43 >>> 0 < (HEAP32[i12 >> 2] | 0) >>> 0) {
    HEAP32[i11 >> 2] = i43 + 1;
    i48 = HEAPU8[i43 >> 0] | 0;
   } else i48 = ___shgetc(i1) | 0;
   i28 = i48 + -48 | 0;
   i27 = (i48 | 0) == 46;
   if (!(i27 | i28 >>> 0 < 10)) {
    i49 = i33;
    i50 = i34;
    i51 = i36;
    i52 = i35;
    i53 = i48;
    i54 = i37;
    i55 = i38;
    i56 = i40;
    i57 = i39;
    i58 = i41;
    i14 = 31;
    break L22;
   } else {
    i13 = i33;
    i21 = i34;
    i23 = i36;
    i20 = i35;
    i24 = i37;
    i26 = i48;
    i29 = i38;
    i30 = i39;
    i31 = i40;
    i32 = i41;
   }
  }
  i59 = i13;
  i60 = i21;
  i61 = i23;
  i62 = i31;
  i63 = i32;
  i64 = i29;
  i65 = i30;
  i66 = (i24 | 0) != 0;
  i14 = 39;
 } else {
  i49 = 0;
  i50 = 0;
  i51 = 0;
  i52 = i15;
  i53 = i16;
  i54 = i17;
  i55 = i18;
  i56 = 0;
  i57 = i19;
  i58 = 0;
  i14 = 31;
 } while (0);
 do if ((i14 | 0) == 31) {
  i19 = (i52 | 0) == 0;
  i18 = i19 ? i56 : i55;
  i17 = i19 ? i58 : i57;
  i19 = (i54 | 0) != 0;
  if (!(i19 & (i53 | 32 | 0) == 101)) if ((i53 | 0) > -1) {
   i59 = i49;
   i60 = i50;
   i61 = i51;
   i62 = i56;
   i63 = i58;
   i64 = i18;
   i65 = i17;
   i66 = i19;
   i14 = 39;
   break;
  } else {
   i67 = i49;
   i68 = i50;
   i69 = i51;
   i70 = i56;
   i71 = i58;
   i72 = i19;
   i73 = i18;
   i74 = i17;
   i14 = 41;
   break;
  }
  i19 = _scanexp(i1, i6) | 0;
  i16 = getTempRet0() | 0;
  if ((i19 | 0) == 0 & (i16 | 0) == -2147483648) {
   if (!i6) {
    ___shlim(i1, 0, 0);
    d75 = 0.0;
    break;
   }
   if (!(HEAP32[i12 >> 2] | 0)) {
    i76 = 0;
    i77 = 0;
   } else {
    HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + -1;
    i76 = 0;
    i77 = 0;
   }
  } else {
   i76 = i19;
   i77 = i16;
  }
  i16 = _i64Add(i76 | 0, i77 | 0, i18 | 0, i17 | 0) | 0;
  i78 = i49;
  i79 = i50;
  i80 = i51;
  i81 = i16;
  i82 = i56;
  i83 = getTempRet0() | 0;
  i84 = i58;
  i14 = 43;
 } while (0);
 if ((i14 | 0) == 39) if (HEAP32[i12 >> 2] | 0) {
  HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + -1;
  if (i66) {
   i78 = i59;
   i79 = i60;
   i80 = i61;
   i81 = i64;
   i82 = i62;
   i83 = i65;
   i84 = i63;
   i14 = 43;
  } else i14 = 42;
 } else {
  i67 = i59;
  i68 = i60;
  i69 = i61;
  i70 = i62;
  i71 = i63;
  i72 = i66;
  i73 = i64;
  i74 = i65;
  i14 = 41;
 }
 if ((i14 | 0) == 41) if (i72) {
  i78 = i67;
  i79 = i68;
  i80 = i69;
  i81 = i73;
  i82 = i70;
  i83 = i74;
  i84 = i71;
  i14 = 43;
 } else i14 = 42;
 do if ((i14 | 0) == 42) {
  i71 = ___errno_location() | 0;
  HEAP32[i71 >> 2] = 22;
  ___shlim(i1, 0, 0);
  d75 = 0.0;
 } else if ((i14 | 0) == 43) {
  i71 = HEAP32[i8 >> 2] | 0;
  if (!i71) {
   d75 = +(i5 | 0) * 0.0;
   break;
  }
  if (((i84 | 0) < 0 | (i84 | 0) == 0 & i82 >>> 0 < 10) & ((i81 | 0) == (i82 | 0) & (i83 | 0) == (i84 | 0)) ? (i3 | 0) > 30 | (i71 >>> i3 | 0) == 0 : 0) {
   d75 = +(i5 | 0) * +(i71 >>> 0);
   break;
  }
  i71 = (i4 | 0) / -2 | 0;
  i74 = ((i71 | 0) < 0) << 31 >> 31;
  if ((i83 | 0) > (i74 | 0) | (i83 | 0) == (i74 | 0) & i81 >>> 0 > i71 >>> 0) {
   i71 = ___errno_location() | 0;
   HEAP32[i71 >> 2] = 34;
   d75 = +(i5 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  i71 = i4 + -106 | 0;
  i74 = ((i71 | 0) < 0) << 31 >> 31;
  if ((i83 | 0) < (i74 | 0) | (i83 | 0) == (i74 | 0) & i81 >>> 0 < i71 >>> 0) {
   i71 = ___errno_location() | 0;
   HEAP32[i71 >> 2] = 34;
   d75 = +(i5 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if (!i78) i85 = i79; else {
   if ((i78 | 0) < 9) {
    i71 = i8 + (i79 << 2) | 0;
    i74 = i78;
    i70 = HEAP32[i71 >> 2] | 0;
    while (1) {
     i70 = i70 * 10 | 0;
     if ((i74 | 0) >= 8) break; else i74 = i74 + 1 | 0;
    }
    HEAP32[i71 >> 2] = i70;
   }
   i85 = i79 + 1 | 0;
  }
  if ((i80 | 0) < 9 ? (i80 | 0) <= (i81 | 0) & (i81 | 0) < 18 : 0) {
   if ((i81 | 0) == 9) {
    d75 = +(i5 | 0) * +((HEAP32[i8 >> 2] | 0) >>> 0);
    break;
   }
   if ((i81 | 0) < 9) {
    d75 = +(i5 | 0) * +((HEAP32[i8 >> 2] | 0) >>> 0) / +(HEAP32[4464 + (8 - i81 << 2) >> 2] | 0);
    break;
   }
   i74 = i3 + 27 + (Math_imul(i81, -3) | 0) | 0;
   i24 = HEAP32[i8 >> 2] | 0;
   if ((i74 | 0) > 30 | (i24 >>> i74 | 0) == 0) {
    d75 = +(i5 | 0) * +(i24 >>> 0) * +(HEAP32[4464 + (i81 + -10 << 2) >> 2] | 0);
    break;
   }
  }
  i24 = (i81 | 0) % 9 | 0;
  if (!i24) {
   i86 = i85;
   i87 = 0;
   i88 = i81;
  } else {
   i74 = (i81 | 0) > -1 ? i24 : i24 + 9 | 0;
   i24 = HEAP32[4464 + (8 - i74 << 2) >> 2] | 0;
   if (i85) {
    i30 = 1e9 / (i24 | 0) | 0;
    i29 = 0;
    i32 = 0;
    i31 = i81;
    i23 = 0;
    do {
     i21 = i8 + (i23 << 2) | 0;
     i13 = HEAP32[i21 >> 2] | 0;
     i73 = (i13 >>> 0) / (i24 >>> 0) | 0;
     i69 = i13 - (Math_imul(i73, i24) | 0) | 0;
     i13 = i73 + i29 | 0;
     HEAP32[i21 >> 2] = i13;
     i29 = Math_imul(i30, i69) | 0;
     i69 = (i23 | 0) == (i32 | 0) & (i13 | 0) == 0;
     i31 = i69 ? i31 + -9 | 0 : i31;
     i32 = i69 ? i32 + 1 & 127 : i32;
     i23 = i23 + 1 | 0;
    } while ((i23 | 0) != (i85 | 0));
    if (!i29) {
     i89 = i32;
     i90 = i85;
     i91 = i31;
    } else {
     HEAP32[i8 + (i85 << 2) >> 2] = i29;
     i89 = i32;
     i90 = i85 + 1 | 0;
     i91 = i31;
    }
   } else {
    i89 = 0;
    i90 = 0;
    i91 = i81;
   }
   i86 = i90;
   i87 = i89;
   i88 = 9 - i74 + i91 | 0;
  }
  i23 = 0;
  i30 = i86;
  i24 = i87;
  i70 = i88;
  L104 : while (1) {
   i71 = (i70 | 0) < 18;
   i69 = (i70 | 0) == 18;
   i13 = i8 + (i24 << 2) | 0;
   i92 = i23;
   i93 = i30;
   while (1) {
    if (!i71) {
     if (!i69) {
      i94 = i70;
      break L104;
     }
     if ((HEAP32[i13 >> 2] | 0) >>> 0 >= 9007199) {
      i94 = 18;
      break L104;
     }
    }
    i21 = 0;
    i95 = i93;
    i73 = i93 + 127 | 0;
    while (1) {
     i68 = i73 & 127;
     i67 = i8 + (i68 << 2) | 0;
     i72 = _bitshift64Shl(HEAP32[i67 >> 2] | 0, 0, 29) | 0;
     i65 = _i64Add(i72 | 0, getTempRet0() | 0, i21 | 0, 0) | 0;
     i72 = getTempRet0() | 0;
     if (i72 >>> 0 > 0 | (i72 | 0) == 0 & i65 >>> 0 > 1e9) {
      i64 = ___udivdi3(i65 | 0, i72 | 0, 1e9, 0) | 0;
      i66 = ___muldi3(i64 | 0, getTempRet0() | 0, 1e9, 0) | 0;
      i63 = _i64Subtract(i65 | 0, i72 | 0, i66 | 0, getTempRet0() | 0) | 0;
      getTempRet0() | 0;
      i96 = i64;
      i97 = i63;
     } else {
      i96 = 0;
      i97 = i65;
     }
     HEAP32[i67 >> 2] = i97;
     i67 = (i68 | 0) == (i24 | 0);
     i98 = (i68 | 0) != (i95 + 127 & 127 | 0) | i67 ? i95 : (i97 | 0) == 0 ? i68 : i95;
     if (i67) break; else {
      i21 = i96;
      i95 = i98;
      i73 = i68 + -1 | 0;
     }
    }
    i99 = i92 + -29 | 0;
    if (!i96) {
     i92 = i99;
     i93 = i95;
    } else break;
   }
   i13 = i24 + 127 & 127;
   i69 = i98 + 127 & 127;
   i71 = i8 + ((i98 + 126 & 127) << 2) | 0;
   if ((i13 | 0) == (i98 | 0)) {
    HEAP32[i71 >> 2] = HEAP32[i71 >> 2] | HEAP32[i8 + (i69 << 2) >> 2];
    i100 = i69;
   } else i100 = i95;
   HEAP32[i8 + (i13 << 2) >> 2] = i96;
   i23 = i99;
   i30 = i100;
   i24 = i13;
   i70 = i70 + 9 | 0;
  }
  i70 = i92;
  i30 = i24;
  i23 = i94;
  i74 = i93;
  L123 : while (1) {
   i31 = i74 + 1 & 127;
   i32 = i8 + ((i74 + 127 & 127) << 2) | 0;
   i29 = i70;
   i13 = i30;
   i69 = i23;
   while (1) {
    i71 = (i69 | 0) == 18;
    i73 = (i69 | 0) > 27 ? 9 : 1;
    i101 = i29;
    i102 = i13;
    while (1) {
     i21 = 0;
     while (1) {
      i68 = i21 + i102 & 127;
      if ((i68 | 0) == (i74 | 0)) {
       i14 = 92;
       break;
      }
      i67 = HEAP32[i8 + (i68 << 2) >> 2] | 0;
      i68 = HEAP32[14052 + (i21 << 2) >> 2] | 0;
      if (i67 >>> 0 < i68 >>> 0) {
       i14 = 92;
       break;
      }
      if (i67 >>> 0 > i68 >>> 0) break;
      if ((i21 + 1 | 0) >>> 0 < 2) i21 = 1; else {
       i14 = 92;
       break;
      }
     }
     if ((i14 | 0) == 92 ? (i14 = 0, i71) : 0) break L123;
     i103 = i73 + i101 | 0;
     if ((i102 | 0) == (i74 | 0)) {
      i101 = i103;
      i102 = i74;
     } else break;
    }
    i71 = (1 << i73) + -1 | 0;
    i21 = 1e9 >>> i73;
    i104 = 0;
    i105 = i102;
    i106 = i69;
    i68 = i102;
    do {
     i67 = i8 + (i68 << 2) | 0;
     i65 = HEAP32[i67 >> 2] | 0;
     i63 = (i65 >>> i73) + i104 | 0;
     HEAP32[i67 >> 2] = i63;
     i104 = Math_imul(i65 & i71, i21) | 0;
     i65 = (i68 | 0) == (i105 | 0) & (i63 | 0) == 0;
     i106 = i65 ? i106 + -9 | 0 : i106;
     i105 = i65 ? i105 + 1 & 127 : i105;
     i68 = i68 + 1 & 127;
    } while ((i68 | 0) != (i74 | 0));
    if (i104 | 0) {
     if ((i31 | 0) != (i105 | 0)) break;
     HEAP32[i32 >> 2] = HEAP32[i32 >> 2] | 1;
    }
    i29 = i103;
    i13 = i105;
    i69 = i106;
   }
   HEAP32[i8 + (i74 << 2) >> 2] = i104;
   i70 = i103;
   i30 = i105;
   i23 = i106;
   i74 = i31;
  }
  d107 = 0.0;
  i23 = i74;
  i30 = 0;
  while (1) {
   i70 = i30 + i102 & 127;
   i24 = i23 + 1 & 127;
   if ((i70 | 0) == (i23 | 0)) {
    HEAP32[i8 + (i24 + -1 << 2) >> 2] = 0;
    i108 = i24;
   } else i108 = i23;
   d107 = d107 * 1.0e9 + +((HEAP32[i8 + (i70 << 2) >> 2] | 0) >>> 0);
   i30 = i30 + 1 | 0;
   if ((i30 | 0) == 2) break; else i23 = i108;
  }
  d109 = +(i5 | 0);
  d110 = d107 * d109;
  i23 = i101 + 53 | 0;
  i30 = i23 - i4 | 0;
  i74 = (i30 | 0) < (i3 | 0);
  i70 = i74 ? ((i30 | 0) > 0 ? i30 : 0) : i3;
  if ((i70 | 0) < 53) {
   d111 = +_copysignl(+_scalbn(1.0, 105 - i70 | 0), d110);
   d112 = +_fmodl(d110, +_scalbn(1.0, 53 - i70 | 0));
   d113 = d111;
   d114 = d112;
   d115 = d111 + (d110 - d112);
  } else {
   d113 = 0.0;
   d114 = 0.0;
   d115 = d110;
  }
  i24 = i102 + 2 & 127;
  if ((i24 | 0) != (i108 | 0)) {
   i69 = HEAP32[i8 + (i24 << 2) >> 2] | 0;
   do if (i69 >>> 0 >= 5e8) {
    if ((i69 | 0) != 5e8) {
     d116 = d109 * .75 + d114;
     break;
    }
    if ((i102 + 3 & 127 | 0) == (i108 | 0)) {
     d116 = d109 * .5 + d114;
     break;
    } else {
     d116 = d109 * .75 + d114;
     break;
    }
   } else {
    if ((i69 | 0) == 0 ? (i102 + 3 & 127 | 0) == (i108 | 0) : 0) {
     d116 = d114;
     break;
    }
    d116 = d109 * .25 + d114;
   } while (0);
   if ((53 - i70 | 0) > 1 ? !(+_fmodl(d116, 1.0) != 0.0) : 0) d117 = d116 + 1.0; else d117 = d116;
  } else d117 = d114;
  d109 = d115 + d117 - d113;
  do if ((i23 & 2147483647 | 0) > (-2 - i9 | 0)) {
   i69 = !(+Math_abs(+d109) >= 9007199254740992.0);
   i24 = i101 + ((i69 ^ 1) & 1) | 0;
   d107 = i69 ? d109 : d109 * .5;
   if ((i24 + 50 | 0) <= (i10 | 0) ? !(d117 != 0.0 & (i74 & ((i70 | 0) != (i30 | 0) | i69))) : 0) {
    d118 = d107;
    i119 = i24;
    break;
   }
   i69 = ___errno_location() | 0;
   HEAP32[i69 >> 2] = 34;
   d118 = d107;
   i119 = i24;
  } else {
   d118 = d109;
   i119 = i101;
  } while (0);
  d75 = +_scalbnl(d118, i119);
 } while (0);
 STACKTOP = i7;
 return +d75;
}

function _fmt_fp(i1, d2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0, i17 = 0, d18 = 0.0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, d27 = 0.0, i28 = 0, i29 = 0, i30 = 0, d31 = 0.0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, d38 = 0.0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, d57 = 0.0, d58 = 0.0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 560 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(560);
 i8 = i7 + 32 | 0;
 i9 = i7 + 536 | 0;
 i10 = i7;
 i11 = i10;
 i12 = i7 + 540 | 0;
 HEAP32[i9 >> 2] = 0;
 i13 = i12 + 12 | 0;
 i14 = ___DOUBLE_BITS_737(d2) | 0;
 i15 = getTempRet0() | 0;
 if ((i15 | 0) < 0) {
  d16 = -d2;
  i17 = ___DOUBLE_BITS_737(d16) | 0;
  d18 = d16;
  i19 = 1;
  i20 = 46692;
  i21 = getTempRet0() | 0;
  i22 = i17;
 } else {
  d18 = d2;
  i19 = (i5 & 2049 | 0) != 0 & 1;
  i20 = (i5 & 2048 | 0) == 0 ? ((i5 & 1 | 0) == 0 ? 46693 : 46698) : 46695;
  i21 = i15;
  i22 = i14;
 }
 do if (0 == 0 & (i21 & 2146435072 | 0) == 2146435072) {
  i14 = (i6 & 32 | 0) != 0;
  i22 = i19 + 3 | 0;
  _pad_734(i1, 32, i3, i22, i5 & -65537);
  _out_728(i1, i20, i19);
  _out_728(i1, d18 != d18 | 0.0 != 0.0 ? (i14 ? 46732 : 46719) : i14 ? 46711 : 46715, 3);
  _pad_734(i1, 32, i3, i22, i5 ^ 8192);
  i23 = i22;
 } else {
  d2 = +_frexp(d18, i9) * 2.0;
  i22 = d2 != 0.0;
  if (i22) HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + -1;
  i14 = i6 | 32;
  if ((i14 | 0) == 97) {
   i15 = i6 & 32;
   i17 = (i15 | 0) == 0 ? i20 : i20 + 9 | 0;
   i24 = i19 | 2;
   i25 = 12 - i4 | 0;
   do if (!(i4 >>> 0 > 11 | (i25 | 0) == 0)) {
    d16 = 8.0;
    i26 = i25;
    do {
     i26 = i26 + -1 | 0;
     d16 = d16 * 16.0;
    } while ((i26 | 0) != 0);
    if ((HEAP8[i17 >> 0] | 0) == 45) {
     d27 = -(d16 + (-d2 - d16));
     break;
    } else {
     d27 = d2 + d16 - d16;
     break;
    }
   } else d27 = d2; while (0);
   i25 = HEAP32[i9 >> 2] | 0;
   i26 = (i25 | 0) < 0 ? 0 - i25 | 0 : i25;
   i28 = _fmt_u(i26, ((i26 | 0) < 0) << 31 >> 31, i13) | 0;
   if ((i28 | 0) == (i13 | 0)) {
    i26 = i12 + 11 | 0;
    HEAP8[i26 >> 0] = 48;
    i29 = i26;
   } else i29 = i28;
   HEAP8[i29 + -1 >> 0] = (i25 >> 31 & 2) + 43;
   i25 = i29 + -2 | 0;
   HEAP8[i25 >> 0] = i6 + 15;
   i28 = (i4 | 0) < 1;
   i26 = (i5 & 8 | 0) == 0;
   i30 = i10;
   d31 = d27;
   while (1) {
    i32 = ~~d31;
    i33 = i30 + 1 | 0;
    HEAP8[i30 >> 0] = i15 | HEAPU8[4448 + i32 >> 0];
    d31 = (d31 - +(i32 | 0)) * 16.0;
    if ((i33 - i11 | 0) == 1 ? !(i26 & (i28 & d31 == 0.0)) : 0) {
     HEAP8[i33 >> 0] = 46;
     i34 = i30 + 2 | 0;
    } else i34 = i33;
    if (!(d31 != 0.0)) break; else i30 = i34;
   }
   i30 = i34;
   if ((i4 | 0) != 0 ? (-2 - i11 + i30 | 0) < (i4 | 0) : 0) {
    i28 = i13;
    i26 = i25;
    i35 = i4 + 2 + i28 - i26 | 0;
    i36 = i28;
    i37 = i26;
   } else {
    i26 = i13;
    i28 = i25;
    i35 = i26 - i11 - i28 + i30 | 0;
    i36 = i26;
    i37 = i28;
   }
   i28 = i35 + i24 | 0;
   _pad_734(i1, 32, i3, i28, i5);
   _out_728(i1, i17, i24);
   _pad_734(i1, 48, i3, i28, i5 ^ 65536);
   i26 = i30 - i11 | 0;
   _out_728(i1, i10, i26);
   i30 = i36 - i37 | 0;
   _pad_734(i1, 48, i35 - (i26 + i30) | 0, 0, 0);
   _out_728(i1, i25, i30);
   _pad_734(i1, 32, i3, i28, i5 ^ 8192);
   i23 = i28;
   break;
  }
  i28 = (i4 | 0) < 0 ? 6 : i4;
  if (i22) {
   i30 = (HEAP32[i9 >> 2] | 0) + -28 | 0;
   HEAP32[i9 >> 2] = i30;
   d38 = d2 * 268435456.0;
   i39 = i30;
  } else {
   d38 = d2;
   i39 = HEAP32[i9 >> 2] | 0;
  }
  i30 = (i39 | 0) < 0 ? i8 : i8 + 288 | 0;
  i26 = i30;
  d31 = d38;
  do {
   i15 = ~~d31 >>> 0;
   HEAP32[i26 >> 2] = i15;
   i26 = i26 + 4 | 0;
   d31 = (d31 - +(i15 >>> 0)) * 1.0e9;
  } while (d31 != 0.0);
  i22 = i30;
  if ((i39 | 0) > 0) {
   i25 = i30;
   i24 = i26;
   i17 = i39;
   while (1) {
    i15 = (i17 | 0) < 29 ? i17 : 29;
    i33 = i24 + -4 | 0;
    if (i33 >>> 0 >= i25 >>> 0) {
     i32 = i33;
     i33 = 0;
     do {
      i40 = _bitshift64Shl(HEAP32[i32 >> 2] | 0, 0, i15 | 0) | 0;
      i41 = _i64Add(i40 | 0, getTempRet0() | 0, i33 | 0, 0) | 0;
      i40 = getTempRet0() | 0;
      i33 = ___udivdi3(i41 | 0, i40 | 0, 1e9, 0) | 0;
      i42 = ___muldi3(i33 | 0, getTempRet0() | 0, 1e9, 0) | 0;
      i43 = _i64Subtract(i41 | 0, i40 | 0, i42 | 0, getTempRet0() | 0) | 0;
      getTempRet0() | 0;
      HEAP32[i32 >> 2] = i43;
      i32 = i32 + -4 | 0;
     } while (i32 >>> 0 >= i25 >>> 0);
     if (i33) {
      i32 = i25 + -4 | 0;
      HEAP32[i32 >> 2] = i33;
      i44 = i32;
     } else i44 = i25;
    } else i44 = i25;
    L57 : do if (i24 >>> 0 > i44 >>> 0) {
     i32 = i24;
     while (1) {
      i43 = i32 + -4 | 0;
      if (HEAP32[i43 >> 2] | 0) {
       i45 = i32;
       break L57;
      }
      if (i43 >>> 0 > i44 >>> 0) i32 = i43; else {
       i45 = i43;
       break;
      }
     }
    } else i45 = i24; while (0);
    i33 = (HEAP32[i9 >> 2] | 0) - i15 | 0;
    HEAP32[i9 >> 2] = i33;
    if ((i33 | 0) > 0) {
     i25 = i44;
     i24 = i45;
     i17 = i33;
    } else {
     i46 = i44;
     i47 = i45;
     i48 = i33;
     break;
    }
   }
  } else {
   i46 = i30;
   i47 = i26;
   i48 = i39;
  }
  if ((i48 | 0) < 0) {
   i17 = ((i28 + 25 | 0) / 9 | 0) + 1 | 0;
   i24 = (i14 | 0) == 102;
   i25 = i46;
   i33 = i47;
   i32 = i48;
   while (1) {
    i43 = 0 - i32 | 0;
    i42 = (i43 | 0) < 9 ? i43 : 9;
    if (i25 >>> 0 < i33 >>> 0) {
     i43 = (1 << i42) + -1 | 0;
     i40 = 1e9 >>> i42;
     i41 = 0;
     i49 = i25;
     do {
      i50 = HEAP32[i49 >> 2] | 0;
      HEAP32[i49 >> 2] = (i50 >>> i42) + i41;
      i41 = Math_imul(i50 & i43, i40) | 0;
      i49 = i49 + 4 | 0;
     } while (i49 >>> 0 < i33 >>> 0);
     i49 = (HEAP32[i25 >> 2] | 0) == 0 ? i25 + 4 | 0 : i25;
     if (!i41) {
      i51 = i33;
      i52 = i49;
     } else {
      HEAP32[i33 >> 2] = i41;
      i51 = i33 + 4 | 0;
      i52 = i49;
     }
    } else {
     i51 = i33;
     i52 = (HEAP32[i25 >> 2] | 0) == 0 ? i25 + 4 | 0 : i25;
    }
    i49 = i24 ? i30 : i52;
    i40 = (i51 - i49 >> 2 | 0) > (i17 | 0) ? i49 + (i17 << 2) | 0 : i51;
    i32 = (HEAP32[i9 >> 2] | 0) + i42 | 0;
    HEAP32[i9 >> 2] = i32;
    if ((i32 | 0) >= 0) {
     i53 = i52;
     i54 = i40;
     break;
    } else {
     i25 = i52;
     i33 = i40;
    }
   }
  } else {
   i53 = i46;
   i54 = i47;
  }
  if (i53 >>> 0 < i54 >>> 0) {
   i33 = (i22 - i53 >> 2) * 9 | 0;
   i25 = HEAP32[i53 >> 2] | 0;
   if (i25 >>> 0 < 10) i55 = i33; else {
    i32 = i33;
    i33 = 10;
    while (1) {
     i33 = i33 * 10 | 0;
     i17 = i32 + 1 | 0;
     if (i25 >>> 0 < i33 >>> 0) {
      i55 = i17;
      break;
     } else i32 = i17;
    }
   }
  } else i55 = 0;
  i32 = (i14 | 0) == 103;
  i33 = (i28 | 0) != 0;
  i25 = i28 - ((i14 | 0) == 102 ? 0 : i55) + ((i33 & i32) << 31 >> 31) | 0;
  if ((i25 | 0) < (((i54 - i22 >> 2) * 9 | 0) + -9 | 0)) {
   i17 = i25 + 9216 | 0;
   i25 = (i17 | 0) / 9 | 0;
   i24 = i30 + 4 + (i25 + -1024 << 2) | 0;
   i26 = i17 - (i25 * 9 | 0) | 0;
   if ((i26 | 0) < 8) {
    i25 = i26;
    i26 = 10;
    while (1) {
     i17 = i26 * 10 | 0;
     if ((i25 | 0) < 7) {
      i25 = i25 + 1 | 0;
      i26 = i17;
     } else {
      i56 = i17;
      break;
     }
    }
   } else i56 = 10;
   i26 = HEAP32[i24 >> 2] | 0;
   i25 = (i26 >>> 0) / (i56 >>> 0) | 0;
   i14 = i26 - (Math_imul(i25, i56) | 0) | 0;
   i17 = (i24 + 4 | 0) == (i54 | 0);
   if (!(i17 & (i14 | 0) == 0)) {
    d16 = (i25 & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
    i25 = i56 >>> 1;
    d31 = i14 >>> 0 < i25 >>> 0 ? .5 : i17 & (i14 | 0) == (i25 | 0) ? 1.0 : 1.5;
    if (!i19) {
     d57 = d31;
     d58 = d16;
    } else {
     i25 = (HEAP8[i20 >> 0] | 0) == 45;
     d57 = i25 ? -d31 : d31;
     d58 = i25 ? -d16 : d16;
    }
    i25 = i26 - i14 | 0;
    HEAP32[i24 >> 2] = i25;
    if (d58 + d57 != d58) {
     i14 = i25 + i56 | 0;
     HEAP32[i24 >> 2] = i14;
     if (i14 >>> 0 > 999999999) {
      i14 = i24;
      i25 = i53;
      while (1) {
       i26 = i14 + -4 | 0;
       HEAP32[i14 >> 2] = 0;
       if (i26 >>> 0 < i25 >>> 0) {
        i17 = i25 + -4 | 0;
        HEAP32[i17 >> 2] = 0;
        i59 = i17;
       } else i59 = i25;
       i17 = (HEAP32[i26 >> 2] | 0) + 1 | 0;
       HEAP32[i26 >> 2] = i17;
       if (i17 >>> 0 > 999999999) {
        i14 = i26;
        i25 = i59;
       } else {
        i60 = i26;
        i61 = i59;
        break;
       }
      }
     } else {
      i60 = i24;
      i61 = i53;
     }
     i25 = (i22 - i61 >> 2) * 9 | 0;
     i14 = HEAP32[i61 >> 2] | 0;
     if (i14 >>> 0 < 10) {
      i62 = i60;
      i63 = i25;
      i64 = i61;
     } else {
      i26 = i25;
      i25 = 10;
      while (1) {
       i25 = i25 * 10 | 0;
       i17 = i26 + 1 | 0;
       if (i14 >>> 0 < i25 >>> 0) {
        i62 = i60;
        i63 = i17;
        i64 = i61;
        break;
       } else i26 = i17;
      }
     }
    } else {
     i62 = i24;
     i63 = i55;
     i64 = i53;
    }
   } else {
    i62 = i24;
    i63 = i55;
    i64 = i53;
   }
   i26 = i62 + 4 | 0;
   i65 = i63;
   i66 = i54 >>> 0 > i26 >>> 0 ? i26 : i54;
   i67 = i64;
  } else {
   i65 = i55;
   i66 = i54;
   i67 = i53;
  }
  i26 = 0 - i65 | 0;
  L109 : do if (i66 >>> 0 > i67 >>> 0) {
   i25 = i66;
   while (1) {
    i14 = i25 + -4 | 0;
    if (HEAP32[i14 >> 2] | 0) {
     i68 = i25;
     i69 = 1;
     break L109;
    }
    if (i14 >>> 0 > i67 >>> 0) i25 = i14; else {
     i68 = i14;
     i69 = 0;
     break;
    }
   }
  } else {
   i68 = i66;
   i69 = 0;
  } while (0);
  do if (i32) {
   i24 = i28 + ((i33 ^ 1) & 1) | 0;
   if ((i24 | 0) > (i65 | 0) & (i65 | 0) > -5) {
    i70 = i6 + -1 | 0;
    i71 = i24 + -1 - i65 | 0;
   } else {
    i70 = i6 + -2 | 0;
    i71 = i24 + -1 | 0;
   }
   if (!(i5 & 8)) {
    if (i69 ? (i24 = HEAP32[i68 + -4 >> 2] | 0, (i24 | 0) != 0) : 0) if (!((i24 >>> 0) % 10 | 0)) {
     i25 = 0;
     i42 = 10;
     while (1) {
      i42 = i42 * 10 | 0;
      i41 = i25 + 1 | 0;
      if ((i24 >>> 0) % (i42 >>> 0) | 0 | 0) {
       i72 = i41;
       break;
      } else i25 = i41;
     }
    } else i72 = 0; else i72 = 9;
    i25 = ((i68 - i22 >> 2) * 9 | 0) + -9 | 0;
    if ((i70 | 32 | 0) == 102) {
     i42 = i25 - i72 | 0;
     i24 = (i42 | 0) > 0 ? i42 : 0;
     i73 = i70;
     i74 = (i71 | 0) < (i24 | 0) ? i71 : i24;
     break;
    } else {
     i24 = i25 + i65 - i72 | 0;
     i25 = (i24 | 0) > 0 ? i24 : 0;
     i73 = i70;
     i74 = (i71 | 0) < (i25 | 0) ? i71 : i25;
     break;
    }
   } else {
    i73 = i70;
    i74 = i71;
   }
  } else {
   i73 = i6;
   i74 = i28;
  } while (0);
  i28 = (i74 | 0) != 0;
  i22 = i28 ? 1 : i5 >>> 3 & 1;
  i33 = (i73 | 32 | 0) == 102;
  if (i33) {
   i75 = 0;
   i76 = (i65 | 0) > 0 ? i65 : 0;
  } else {
   i32 = (i65 | 0) < 0 ? i26 : i65;
   i25 = _fmt_u(i32, ((i32 | 0) < 0) << 31 >> 31, i13) | 0;
   i32 = i13;
   if ((i32 - i25 | 0) < 2) {
    i24 = i25;
    while (1) {
     i42 = i24 + -1 | 0;
     HEAP8[i42 >> 0] = 48;
     if ((i32 - i42 | 0) < 2) i24 = i42; else {
      i77 = i42;
      break;
     }
    }
   } else i77 = i25;
   HEAP8[i77 + -1 >> 0] = (i65 >> 31 & 2) + 43;
   i24 = i77 + -2 | 0;
   HEAP8[i24 >> 0] = i73;
   i75 = i24;
   i76 = i32 - i24 | 0;
  }
  i24 = i19 + 1 + i74 + i22 + i76 | 0;
  _pad_734(i1, 32, i3, i24, i5);
  _out_728(i1, i20, i19);
  _pad_734(i1, 48, i3, i24, i5 ^ 65536);
  if (i33) {
   i26 = i67 >>> 0 > i30 >>> 0 ? i30 : i67;
   i42 = i10 + 9 | 0;
   i41 = i42;
   i14 = i10 + 8 | 0;
   i17 = i26;
   do {
    i40 = _fmt_u(HEAP32[i17 >> 2] | 0, 0, i42) | 0;
    if ((i17 | 0) == (i26 | 0)) if ((i40 | 0) == (i42 | 0)) {
     HEAP8[i14 >> 0] = 48;
     i78 = i14;
    } else i78 = i40; else if (i40 >>> 0 > i10 >>> 0) {
     _memset(i10 | 0, 48, i40 - i11 | 0) | 0;
     i49 = i40;
     while (1) {
      i43 = i49 + -1 | 0;
      if (i43 >>> 0 > i10 >>> 0) i49 = i43; else {
       i78 = i43;
       break;
      }
     }
    } else i78 = i40;
    _out_728(i1, i78, i41 - i78 | 0);
    i17 = i17 + 4 | 0;
   } while (i17 >>> 0 <= i30 >>> 0);
   if (!((i5 & 8 | 0) == 0 & (i28 ^ 1))) _out_728(i1, 50534, 1);
   if (i17 >>> 0 < i68 >>> 0 & (i74 | 0) > 0) {
    i30 = i74;
    i41 = i17;
    while (1) {
     i14 = _fmt_u(HEAP32[i41 >> 2] | 0, 0, i42) | 0;
     if (i14 >>> 0 > i10 >>> 0) {
      _memset(i10 | 0, 48, i14 - i11 | 0) | 0;
      i26 = i14;
      while (1) {
       i33 = i26 + -1 | 0;
       if (i33 >>> 0 > i10 >>> 0) i26 = i33; else {
        i79 = i33;
        break;
       }
      }
     } else i79 = i14;
     _out_728(i1, i79, (i30 | 0) < 9 ? i30 : 9);
     i41 = i41 + 4 | 0;
     i26 = i30 + -9 | 0;
     if (!(i41 >>> 0 < i68 >>> 0 & (i30 | 0) > 9)) {
      i80 = i26;
      break;
     } else i30 = i26;
    }
   } else i80 = i74;
   _pad_734(i1, 48, i80 + 9 | 0, 9, 0);
  } else {
   i30 = i69 ? i68 : i67 + 4 | 0;
   if (i67 >>> 0 < i30 >>> 0 & (i74 | 0) > -1) {
    i41 = i10 + 9 | 0;
    i42 = (i5 & 8 | 0) == 0;
    i17 = i41;
    i28 = 0 - i11 | 0;
    i26 = i10 + 8 | 0;
    i40 = i74;
    i33 = i67;
    while (1) {
     i22 = _fmt_u(HEAP32[i33 >> 2] | 0, 0, i41) | 0;
     if ((i22 | 0) == (i41 | 0)) {
      HEAP8[i26 >> 0] = 48;
      i81 = i26;
     } else i81 = i22;
     do if ((i33 | 0) == (i67 | 0)) {
      i22 = i81 + 1 | 0;
      _out_728(i1, i81, 1);
      if (i42 & (i40 | 0) < 1) {
       i82 = i22;
       break;
      }
      _out_728(i1, 50534, 1);
      i82 = i22;
     } else {
      if (i81 >>> 0 <= i10 >>> 0) {
       i82 = i81;
       break;
      }
      _memset(i10 | 0, 48, i81 + i28 | 0) | 0;
      i22 = i81;
      while (1) {
       i32 = i22 + -1 | 0;
       if (i32 >>> 0 > i10 >>> 0) i22 = i32; else {
        i82 = i32;
        break;
       }
      }
     } while (0);
     i14 = i17 - i82 | 0;
     _out_728(i1, i82, (i40 | 0) > (i14 | 0) ? i14 : i40);
     i22 = i40 - i14 | 0;
     i33 = i33 + 4 | 0;
     if (!(i33 >>> 0 < i30 >>> 0 & (i22 | 0) > -1)) {
      i83 = i22;
      break;
     } else i40 = i22;
    }
   } else i83 = i74;
   _pad_734(i1, 48, i83 + 18 | 0, 18, 0);
   _out_728(i1, i75, i13 - i75 | 0);
  }
  _pad_734(i1, 32, i3, i24, i5 ^ 8192);
  i23 = i24;
 } while (0);
 STACKTOP = i7;
 return ((i23 | 0) < (i3 | 0) ? i3 : i23) | 0;
}

function _PCA(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, d27 = 0.0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, d32 = 0.0, d33 = 0.0, i34 = 0, d35 = 0.0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, d40 = 0.0, d41 = 0.0, d42 = 0.0, i43 = 0, i44 = 0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, d53 = 0.0, i54 = 0, i55 = 0, d56 = 0.0, i57 = 0, d58 = 0.0, d59 = 0.0, d60 = 0.0, d61 = 0.0, d62 = 0.0, d63 = 0.0, d64 = 0.0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = i1 + 8 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = (i9 | 0) < (i7 | 0) ? i9 : i7;
 if ((i7 | 0) < 2 | (i9 | 0) < 2) {
  i11 = -1;
  STACKTOP = i4;
  return i11 | 0;
 }
 i12 = i2 + 8 | 0;
 if ((HEAP32[i12 >> 2] | 0) != (i9 | 0)) {
  i11 = -1;
  STACKTOP = i4;
  return i11 | 0;
 }
 i13 = i2 + 4 | 0;
 if ((HEAP32[i13 >> 2] | 0) != (i10 | 0)) {
  i11 = -1;
  STACKTOP = i4;
  return i11 | 0;
 }
 i14 = i3 + 4 | 0;
 if ((HEAP32[i14 >> 2] | 0) != (i10 | 0)) {
  i11 = -1;
  STACKTOP = i4;
  return i11 | 0;
 }
 i15 = _arMatrixAlloc(i10, i10) | 0;
 i16 = i15 + 4 | 0;
 if ((HEAP32[i16 >> 2] | 0) == (i10 | 0) ? (i17 = i15 + 8 | 0, (HEAP32[i17 >> 2] | 0) == (i10 | 0)) : 0) {
  i18 = (i7 | 0) < (i9 | 0);
  i19 = HEAP32[i6 >> 2] | 0;
  i20 = HEAP32[i8 >> 2] | 0;
  L16 : do if (i18) {
   if ((i10 | 0) != (i19 | 0)) {
    _arMatrixFree(i15) | 0;
    i11 = -1;
    STACKTOP = i4;
    return i11 | 0;
   }
   i21 = HEAP32[i15 >> 2] | 0;
   if ((i10 | 0) > 0) {
    if ((i20 | 0) <= 0) {
     i22 = 0;
     i23 = i21;
     while (1) {
      i24 = 0;
      i25 = i23;
      while (1) {
       if (i24 >>> 0 < i22 >>> 0) {
        i26 = i21 + ((Math_imul(i24, i10) | 0) + i22 << 3) | 0;
        d27 = +HEAPF64[i26 >> 3];
       } else d27 = 0.0;
       HEAPF64[i25 >> 3] = d27;
       i24 = i24 + 1 | 0;
       if ((i24 | 0) == (i10 | 0)) break; else i25 = i25 + 8 | 0;
      }
      i22 = i22 + 1 | 0;
      if ((i22 | 0) == (i10 | 0)) {
       i28 = 46;
       break L16;
      } else i23 = i23 + (i10 << 3) | 0;
     }
    }
    i23 = 0;
    i22 = i21;
    while (1) {
     i25 = Math_imul(i23, i20) | 0;
     i24 = 0;
     i26 = i22;
     while (1) {
      if (i24 >>> 0 < i23 >>> 0) {
       i29 = i21 + ((Math_imul(i24, i10) | 0) + i23 << 3) | 0;
       HEAPF64[i26 >> 3] = +HEAPF64[i29 >> 3];
      } else {
       i29 = HEAP32[i1 >> 2] | 0;
       i30 = i29 + ((Math_imul(i24, i20) | 0) << 3) | 0;
       HEAPF64[i26 >> 3] = 0.0;
       i31 = i29 + (i25 << 3) | 0;
       i29 = i30;
       i30 = 0;
       d32 = 0.0;
       while (1) {
        d32 = d32 + +HEAPF64[i31 >> 3] * +HEAPF64[i29 >> 3];
        HEAPF64[i26 >> 3] = d32;
        i30 = i30 + 1 | 0;
        if ((i30 | 0) == (i20 | 0)) break; else {
         i31 = i31 + 8 | 0;
         i29 = i29 + 8 | 0;
        }
       }
      }
      i24 = i24 + 1 | 0;
      if ((i24 | 0) == (i10 | 0)) break; else i26 = i26 + 8 | 0;
     }
     i23 = i23 + 1 | 0;
     if ((i23 | 0) == (i10 | 0)) {
      i28 = 46;
      break;
     } else i22 = i22 + (i10 << 3) | 0;
    }
   } else i28 = 45;
  } else {
   if ((i10 | 0) != (i20 | 0)) {
    _arMatrixFree(i15) | 0;
    i11 = -1;
    STACKTOP = i4;
    return i11 | 0;
   }
   i22 = HEAP32[i15 >> 2] | 0;
   if ((i10 | 0) > 0) {
    if ((i19 | 0) <= 0) {
     i23 = 0;
     i21 = i22;
     while (1) {
      i26 = 0;
      i24 = i21;
      while (1) {
       if (i26 >>> 0 < i23 >>> 0) {
        i25 = i22 + ((Math_imul(i26, i10) | 0) + i23 << 3) | 0;
        d33 = +HEAPF64[i25 >> 3];
       } else d33 = 0.0;
       HEAPF64[i24 >> 3] = d33;
       i26 = i26 + 1 | 0;
       if ((i26 | 0) == (i10 | 0)) break; else i24 = i24 + 8 | 0;
      }
      i23 = i23 + 1 | 0;
      if ((i23 | 0) == (i10 | 0)) {
       i28 = 46;
       break L16;
      } else i21 = i21 + (i10 << 3) | 0;
     }
    }
    i21 = 0;
    i23 = i22;
    while (1) {
     i24 = 0;
     i26 = i23;
     while (1) {
      if (i24 >>> 0 < i21 >>> 0) {
       i25 = i22 + ((Math_imul(i24, i10) | 0) + i21 << 3) | 0;
       HEAPF64[i26 >> 3] = +HEAPF64[i25 >> 3];
      } else {
       i25 = HEAP32[i1 >> 2] | 0;
       HEAPF64[i26 >> 3] = 0.0;
       i29 = i25 + (i21 << 3) | 0;
       i31 = i25 + (i24 << 3) | 0;
       i25 = 0;
       d32 = 0.0;
       while (1) {
        d32 = d32 + +HEAPF64[i29 >> 3] * +HEAPF64[i31 >> 3];
        HEAPF64[i26 >> 3] = d32;
        i25 = i25 + 1 | 0;
        if ((i25 | 0) == (i19 | 0)) break; else {
         i29 = i29 + (i10 << 3) | 0;
         i31 = i31 + (i10 << 3) | 0;
        }
       }
      }
      i24 = i24 + 1 | 0;
      if ((i24 | 0) == (i10 | 0)) break; else i26 = i26 + 8 | 0;
     }
     i21 = i21 + 1 | 0;
     if ((i21 | 0) == (i10 | 0)) {
      i28 = 46;
      break;
     } else i23 = i23 + (i10 << 3) | 0;
    }
   } else i28 = 45;
  } while (0);
  do if ((i28 | 0) == 45) i34 = i5; else if ((i28 | 0) == 46) if (((i10 | 0) >= 2 ? (HEAP32[i14 >> 2] | 0) == (i10 | 0) : 0) ? (i19 = _arVecAlloc(i10) | 0, (i19 | 0) != 0) : 0) {
   i20 = i10 + -1 | 0;
   HEAP32[i5 + 4 >> 2] = i20;
   HEAP32[i5 >> 2] = (HEAP32[i19 >> 2] | 0) + 8;
   if ((_arVecTridiagonalize(i15, i3, i5) | 0) < 0) {
    _arVecFree(i19) | 0;
    i34 = i5;
    break;
   }
   i23 = HEAP32[i19 >> 2] | 0;
   HEAPF64[i23 >> 3] = 0.0;
   i21 = i20;
   while (1) {
    L84 : do if ((i21 | 0) > 0) {
     i22 = HEAP32[i3 >> 2] | 0;
     i26 = i22 + (i21 << 3) | 0;
     d33 = +HEAPF64[i26 >> 3];
     i24 = i21;
     d27 = d33;
     while (1) {
      d32 = +Math_abs(+(+HEAPF64[i23 + (i24 << 3) >> 3]));
      i31 = i24 + -1 | 0;
      d35 = d27;
      d27 = +HEAPF64[i22 + (i31 << 3) >> 3];
      if (!(d32 > (+Math_abs(+d35) + +Math_abs(+d27)) * 1.0e-06)) {
       i36 = i24;
       break;
      }
      if ((i24 | 0) <= 1) {
       i36 = i31;
       break;
      } else i24 = i31;
     }
     if ((i36 | 0) != (i21 | 0)) {
      i24 = i21 + -1 | 0;
      i31 = i23 + (i21 << 3) | 0;
      i29 = i23 + (i36 + 1 << 3) | 0;
      i25 = (i36 | 0) < (i21 | 0);
      i30 = i22 + (i24 << 3) | 0;
      i37 = i22 + (i36 << 3) | 0;
      i38 = 0;
      d27 = d33;
      while (1) {
       if (i38 >>> 0 > 99) {
        i39 = i24;
        break L84;
       }
       i38 = i38 + 1 | 0;
       d35 = +HEAPF64[i30 >> 3];
       d32 = (d35 - d27) * .5;
       d40 = +HEAPF64[i31 >> 3];
       d41 = d40 * d40;
       d42 = +Math_sqrt(+(d41 + d32 * d32));
       if (i25) {
        i43 = HEAP32[i15 >> 2] | 0;
        i44 = i36;
        d45 = +HEAPF64[i29 >> 3];
        d46 = d41 / (d32 + (d32 < 0.0 ? -d42 : d42)) + (+HEAPF64[i37 >> 3] - d27);
        while (1) {
         d42 = +Math_abs(+d46);
         do if (!(d42 >= +Math_abs(+d45))) {
          d32 = -d46 / d45;
          d41 = 1.0 / +Math_sqrt(+(d32 * d32 + 1.0));
          d47 = d32 * d41;
          d48 = d41;
         } else {
          if (!(d42 > 1.0e-16)) {
           d47 = 1.0;
           d48 = 0.0;
           break;
          }
          d41 = -d45 / d46;
          d32 = 1.0 / +Math_sqrt(+(d41 * d41 + 1.0));
          d47 = d32;
          d48 = d41 * d32;
         } while (0);
         i49 = i22 + (i44 << 3) | 0;
         d42 = +HEAPF64[i49 >> 3];
         i50 = i44;
         i44 = i44 + 1 | 0;
         i51 = i22 + (i44 << 3) | 0;
         d32 = +HEAPF64[i51 >> 3];
         d41 = d42 - d32;
         i52 = i23 + (i44 << 3) | 0;
         d53 = d48 * (d48 * d41 + d47 * 2.0 * +HEAPF64[i52 >> 3]);
         HEAPF64[i49 >> 3] = d42 - d53;
         HEAPF64[i51 >> 3] = d32 + d53;
         i51 = i23 + (i50 << 3) | 0;
         if ((i50 | 0) > (i36 | 0)) HEAPF64[i51 >> 3] = d47 * +HEAPF64[i51 >> 3] - d45 * d48;
         d53 = +HEAPF64[i52 >> 3];
         HEAPF64[i52 >> 3] = d53 + d48 * (d47 * d41 - d48 * 2.0 * d53);
         i51 = Math_imul(i50, i10) | 0;
         i49 = Math_imul(i44, i10) | 0;
         i54 = 0;
         do {
          i55 = i43 + (i54 + i51 << 3) | 0;
          d56 = +HEAPF64[i55 >> 3];
          i57 = i43 + (i54 + i49 << 3) | 0;
          d58 = +HEAPF64[i57 >> 3];
          HEAPF64[i55 >> 3] = d47 * d56 - d48 * d58;
          HEAPF64[i57 >> 3] = d48 * d56 + d47 * d58;
          i54 = i54 + 1 | 0;
         } while ((i54 | 0) != (i10 | 0));
         if ((i50 | 0) < (i24 | 0)) {
          d53 = +HEAPF64[i52 >> 3];
          i54 = i23 + (i50 + 2 << 3) | 0;
          d41 = +HEAPF64[i54 >> 3];
          HEAPF64[i54 >> 3] = d47 * d41;
          d59 = -(d48 * d41);
          d60 = d53;
         } else {
          d59 = d58;
          d60 = d56;
         }
         if ((i44 | 0) == (i21 | 0)) break; else {
          d45 = d59;
          d46 = d60;
         }
        }
        d61 = +HEAPF64[i31 >> 3];
        d62 = +HEAPF64[i30 >> 3];
        d63 = +HEAPF64[i26 >> 3];
       } else {
        d61 = d40;
        d62 = d35;
        d63 = d27;
       }
       if (!(+Math_abs(+d61) > (+Math_abs(+d63) + +Math_abs(+d62)) * 1.0e-06)) {
        i39 = i24;
        break;
       } else d27 = d63;
      }
     } else i28 = 57;
    } else i28 = 57; while (0);
    if ((i28 | 0) == 57) {
     i28 = 0;
     i39 = i21 + -1 | 0;
    }
    if ((i21 | 0) > 1) i21 = i39; else break;
   }
   i21 = HEAP32[i3 >> 2] | 0;
   i23 = HEAP32[i15 >> 2] | 0;
   i24 = 0;
   do {
    i26 = i21 + (i24 << 3) | 0;
    d27 = +HEAPF64[i26 >> 3];
    i30 = i24;
    i24 = i24 + 1 | 0;
    if ((i24 | 0) < (i10 | 0)) {
     d33 = d27;
     i31 = i24;
     i22 = i30;
     do {
      d46 = +HEAPF64[i21 + (i31 << 3) >> 3];
      i37 = d46 > d33;
      d33 = i37 ? d46 : d33;
      i22 = i37 ? i31 : i22;
      i31 = i31 + 1 | 0;
     } while ((i31 | 0) != (i10 | 0));
     d64 = d33;
     i65 = i22;
     i66 = i21 + (i22 << 3) | 0;
    } else {
     d64 = d27;
     i65 = i30;
     i66 = i26;
    }
    HEAPF64[i66 >> 3] = d27;
    HEAPF64[i26 >> 3] = d64;
    i31 = i23 + ((Math_imul(i30, i10) | 0) << 3) | 0;
    i37 = i23 + ((Math_imul(i65, i10) | 0) << 3) | 0;
    i29 = 0;
    while (1) {
     d46 = +HEAPF64[i37 >> 3];
     HEAPF64[i37 >> 3] = +HEAPF64[i31 >> 3];
     HEAPF64[i31 >> 3] = d46;
     i29 = i29 + 1 | 0;
     if ((i29 | 0) == (i10 | 0)) break; else {
      i31 = i31 + 8 | 0;
      i37 = i37 + 8 | 0;
     }
    }
   } while ((i24 | 0) != (i20 | 0));
   _arVecFree(i19) | 0;
   L130 : do if (!i18) {
    i20 = HEAP32[i2 >> 2] | 0;
    i24 = (i10 | 0) > 0;
    L158 : do if (i24) {
     i23 = HEAP32[i3 >> 2] | 0;
     i21 = 0;
     i37 = HEAP32[i15 >> 2] | 0;
     i31 = i20;
     while (1) {
      if (+HEAPF64[i23 + (i21 << 3) >> 3] < 1.0e-16) {
       i67 = i21;
       i68 = i31;
       break L158;
      }
      i29 = 0;
      i30 = i37;
      i26 = i31;
      do {
       i22 = i30;
       i30 = i30 + 8 | 0;
       i25 = i26;
       i26 = i26 + 8 | 0;
       HEAPF64[i25 >> 3] = +HEAPF64[i22 >> 3];
       i29 = i29 + 1 | 0;
      } while ((i29 | 0) < (i10 | 0));
      i29 = i21 + 1 | 0;
      if ((i29 | 0) < (i10 | 0)) {
       i21 = i29;
       i37 = i30;
       i31 = i26;
      } else {
       i67 = i29;
       i68 = i26;
       break;
      }
     }
    } else {
     i67 = 0;
     i68 = i20;
    } while (0);
    if ((i67 | 0) < (i10 | 0)) {
     i20 = HEAP32[i3 >> 2] | 0;
     if (!i24) {
      _memset(i20 + (i67 << 3) | 0, 0, (i67 ^ 536870911) - (((i7 | 0) > (i9 | 0) ? i9 : i7) ^ 536870911) << 3 | 0) | 0;
      break;
     }
     i31 = -8 - (((i7 | 0) > (i9 | 0) ? i9 : i7) << 3 ^ -8) | 0;
     i37 = i67;
     i21 = i68;
     while (1) {
      HEAPF64[i20 + (i37 << 3) >> 3] = 0.0;
      _memset(i21 | 0, 0, i31 | 0) | 0;
      i23 = 0;
      i29 = i21;
      do {
       i29 = i29 + 8 | 0;
       i23 = i23 + 1 | 0;
      } while ((i23 | 0) < (i10 | 0));
      i37 = i37 + 1 | 0;
      if ((i37 | 0) >= (i10 | 0)) break; else i21 = i29;
     }
    }
   } else {
    i21 = HEAP32[i6 >> 2] | 0;
    i37 = HEAP32[i8 >> 2] | 0;
    do if (((!((i21 | 0) < 1 | (i37 | 0) < 1) ? (HEAP32[i16 >> 2] | 0) == (i21 | 0) : 0) ? (HEAP32[i17 >> 2] | 0) == (i21 | 0) : 0) ? (HEAP32[i13 >> 2] | 0) == (i21 | 0) : 0) {
     if ((HEAP32[i12 >> 2] | 0) != (i37 | 0)) break;
     if ((HEAP32[i14 >> 2] | 0) != (i21 | 0)) break;
     i31 = HEAP32[i3 >> 2] | 0;
     i20 = 0;
     i24 = HEAP32[i2 >> 2] | 0;
     while (1) {
      d35 = +HEAPF64[i31 + (i20 << 3) >> 3];
      if (d35 < 1.0e-16) {
       i69 = i20;
       i70 = i24;
       break;
      }
      d40 = 1.0 / +Math_sqrt(+(+Math_abs(+d35)));
      i23 = (HEAP32[i15 >> 2] | 0) + ((Math_imul(i20, i21) | 0) << 3) | 0;
      i22 = HEAP32[i1 >> 2] | 0;
      i25 = 0;
      i38 = i24;
      while (1) {
       i44 = i23;
       d35 = 0.0;
       i43 = i22 + (i25 << 3) | 0;
       i54 = 0;
       while (1) {
        d35 = d35 + +HEAPF64[i44 >> 3] * +HEAPF64[i43 >> 3];
        i54 = i54 + 1 | 0;
        if ((i54 | 0) == (i21 | 0)) break; else {
         i44 = i44 + 8 | 0;
         i43 = i43 + (i37 << 3) | 0;
        }
       }
       HEAPF64[i38 >> 3] = d40 * d35;
       i25 = i25 + 1 | 0;
       if ((i25 | 0) == (i37 | 0)) break; else i38 = i38 + 8 | 0;
      }
      i38 = i24 + (i37 << 3) | 0;
      i25 = i20 + 1 | 0;
      if ((i25 | 0) < (i21 | 0)) {
       i20 = i25;
       i24 = i38;
      } else {
       i69 = i25;
       i70 = i38;
       break;
      }
     }
     if ((i21 | 0) <= (i69 | 0)) break L130;
     if ((i37 | 0) <= 0) {
      _memset(i31 + (i69 << 3) | 0, 0, i21 - i69 << 3 | 0) | 0;
      break L130;
     }
     i24 = i37 << 3;
     i20 = i21 - i69 | 0;
     i29 = i69;
     i38 = 0;
     while (1) {
      i25 = i70 + ((Math_imul(i38, i37) | 0) << 3) | 0;
      HEAPF64[i31 + (i29 << 3) >> 3] = 0.0;
      _memset(i25 | 0, 0, i24 | 0) | 0;
      i38 = i38 + 1 | 0;
      if ((i38 | 0) == (i20 | 0)) break L130; else i29 = i29 + 1 | 0;
     }
    } while (0);
    _arMatrixFree(i15) | 0;
    i11 = -1;
    STACKTOP = i4;
    return i11 | 0;
   } while (0);
   _arMatrixFree(i15) | 0;
   i11 = 0;
   STACKTOP = i4;
   return i11 | 0;
  } else i34 = i5; while (0);
  _arMatrixFree(i15) | 0;
  i11 = -1;
  STACKTOP = i4;
  return i11 | 0;
 }
 _arMatrixFree(i15) | 0;
 i11 = -1;
 STACKTOP = i4;
 return i11 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4 + 12 | 0;
 i6 = i4;
 i7 = i2;
 L1 : do if ((i7 - i1 | 0) > 2) {
  if ((HEAP8[i1 >> 0] | 0) == 103) {
   i8 = (HEAP8[i1 + 1 >> 0] | 0) == 115;
   i9 = i8;
   i10 = i8 ? i1 + 2 | 0 : i1;
  } else {
   i9 = 0;
   i10 = i1;
  }
  i8 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i10, i2, i3) | 0;
  if ((i8 | 0) != (i10 | 0)) {
   if (!i9) {
    i11 = i8;
    break;
   }
   i12 = HEAP32[i3 + 4 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i12 | 0)) {
    i11 = i1;
    break;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12 + -24 | 0, 0, 50317) | 0;
   i11 = i8;
   break;
  }
  if (((i7 - i10 | 0) > 2 ? (HEAP8[i10 >> 0] | 0) == 115 : 0) ? (HEAP8[i10 + 1 >> 0] | 0) == 114 : 0) {
   i8 = i10 + 2 | 0;
   if ((HEAP8[i8 >> 0] | 0) == 78) {
    i12 = i10 + 3 | 0;
    i13 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
    if ((i13 | 0) == (i12 | 0) | (i13 | 0) == (i2 | 0)) {
     i11 = i1;
     break;
    }
    i12 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i13, i2, i3) | 0;
    i14 = i3 + 4 | 0;
    do if ((i12 | 0) == (i13 | 0)) {
     i15 = i13;
     i16 = i3;
    } else {
     i17 = HEAP32[i14 >> 2] | 0;
     if (((i17 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i11 = i1;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i17 + -24 | 0);
     i17 = HEAP32[i14 >> 2] | 0;
     i18 = 0;
     while (1) {
      if ((i18 | 0) == -1) break;
      i19 = i18 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17 + (i19 * 24 | 0) | 0);
      i18 = i19;
     }
     HEAP32[i14 >> 2] = i17 + -24;
     i18 = HEAP8[i5 + 11 >> 0] | 0;
     i19 = i18 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i17 + -48 | 0, i19 ? HEAP32[i5 >> 2] | 0 : i5, i19 ? HEAP32[i5 + 4 >> 2] | 0 : i18 & 255) | 0;
     if ((i12 | 0) != (i2 | 0)) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i15 = i12;
      i16 = i3;
      break;
     }
     i18 = HEAP32[i14 >> 2] | 0;
     i19 = 0;
     while (1) {
      if ((i19 | 0) == -1) break;
      i20 = i19 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i18 + (i20 * 24 | 0) | 0);
      i19 = i20;
     }
     HEAP32[i14 >> 2] = i18 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i11 = i1;
     break L1;
    } while (0);
    i12 = i6 + 11 | 0;
    i13 = i6 + 4 | 0;
    i19 = i15;
    while (1) {
     if ((HEAP8[i19 >> 0] | 0) == 69) break;
     i17 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_(i19, i2, i3) | 0;
     if ((i17 | 0) == (i19 | 0) | (i17 | 0) == (i2 | 0)) {
      i11 = i1;
      break L1;
     }
     i20 = HEAP32[i14 >> 2] | 0;
     if (((i20 - (HEAP32[i16 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i11 = i1;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i20 + -24 | 0);
     i20 = HEAP32[i14 >> 2] | 0;
     i21 = 0;
     while (1) {
      if ((i21 | 0) == -1) break;
      i22 = i21 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20 + (i22 * 24 | 0) | 0);
      i21 = i22;
     }
     HEAP32[i14 >> 2] = i20 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i5, 0, 50317) | 0;
     HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
     HEAP32[i6 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
     HEAP32[i6 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
     i21 = 0;
     while (1) {
      if ((i21 | 0) == 3) break;
      HEAP32[i5 + (i21 << 2) >> 2] = 0;
      i21 = i21 + 1 | 0;
     }
     i21 = HEAP8[i12 >> 0] | 0;
     i20 = i21 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i14 >> 2] | 0) + -24 | 0, i20 ? HEAP32[i6 >> 2] | 0 : i6, i20 ? HEAP32[i13 >> 2] | 0 : i21 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i19 = i17;
    }
    i13 = i19 + 1 | 0;
    i12 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i13, i2, i3) | 0;
    if ((i12 | 0) == (i13 | 0)) {
     i13 = HEAP32[i14 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i13 | 0)) {
      i11 = i1;
      break;
     }
     i21 = 0;
     while (1) {
      if ((i21 | 0) == -1) break;
      i20 = i21 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13 + (i20 * 24 | 0) | 0);
      i21 = i20;
     }
     HEAP32[i14 >> 2] = i13 + -24;
     i11 = i1;
     break;
    }
    i21 = HEAP32[i14 >> 2] | 0;
    if (((i21 - (HEAP32[i16 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i11 = i1;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i21 + -24 | 0);
    i21 = HEAP32[i14 >> 2] | 0;
    i19 = 0;
    while (1) {
     if ((i19 | 0) == -1) break;
     i20 = i19 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i21 + (i20 * 24 | 0) | 0);
     i19 = i20;
    }
    HEAP32[i14 >> 2] = i21 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i5, 0, 50317) | 0;
    HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
    i19 = 0;
    while (1) {
     if ((i19 | 0) == 3) break;
     HEAP32[i5 + (i19 << 2) >> 2] = 0;
     i19 = i19 + 1 | 0;
    }
    i19 = HEAP8[i6 + 11 >> 0] | 0;
    i21 = i19 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i14 >> 2] | 0) + -24 | 0, i21 ? HEAP32[i6 >> 2] | 0 : i6, i21 ? HEAP32[i6 + 4 >> 2] | 0 : i19 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i11 = i12;
    break;
   }
   i19 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i8, i2, i3) | 0;
   if ((i19 | 0) != (i8 | 0)) {
    i21 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i19, i2, i3) | 0;
    if ((i21 | 0) == (i19 | 0)) i23 = i19; else {
     i19 = i3 + 4 | 0;
     i13 = HEAP32[i19 >> 2] | 0;
     if (((i13 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i11 = i1;
      break;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i13 + -24 | 0);
     i13 = HEAP32[i19 >> 2] | 0;
     i20 = 0;
     while (1) {
      if ((i20 | 0) == -1) break;
      i18 = i20 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13 + (i18 * 24 | 0) | 0);
      i20 = i18;
     }
     HEAP32[i19 >> 2] = i13 + -24;
     i20 = HEAP8[i5 + 11 >> 0] | 0;
     i12 = i20 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i13 + -48 | 0, i12 ? HEAP32[i5 >> 2] | 0 : i5, i12 ? HEAP32[i5 + 4 >> 2] | 0 : i20 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i23 = i21;
    }
    i20 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i23, i2, i3) | 0;
    if ((i20 | 0) == (i23 | 0)) {
     i12 = i3 + 4 | 0;
     i14 = HEAP32[i12 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i14 | 0)) {
      i11 = i1;
      break;
     }
     i18 = 0;
     while (1) {
      if ((i18 | 0) == -1) break;
      i22 = i18 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14 + (i22 * 24 | 0) | 0);
      i18 = i22;
     }
     HEAP32[i12 >> 2] = i14 + -24;
     i11 = i1;
     break;
    }
    i18 = i3 + 4 | 0;
    i21 = HEAP32[i18 >> 2] | 0;
    if (((i21 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i11 = i1;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i21 + -24 | 0);
    i21 = HEAP32[i18 >> 2] | 0;
    i13 = 0;
    while (1) {
     if ((i13 | 0) == -1) break;
     i19 = i13 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i21 + (i19 * 24 | 0) | 0);
     i13 = i19;
    }
    HEAP32[i18 >> 2] = i21 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i5, 0, 50317) | 0;
    HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
    i13 = 0;
    while (1) {
     if ((i13 | 0) == 3) break;
     HEAP32[i5 + (i13 << 2) >> 2] = 0;
     i13 = i13 + 1 | 0;
    }
    i13 = HEAP8[i6 + 11 >> 0] | 0;
    i21 = i13 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i18 >> 2] | 0) + -24 | 0, i21 ? HEAP32[i6 >> 2] | 0 : i6, i21 ? HEAP32[i6 + 4 >> 2] | 0 : i13 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i11 = i20;
    break;
   }
   i13 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_(i8, i2, i3) | 0;
   if (!((i13 | 0) == (i8 | 0) | (i13 | 0) == (i2 | 0))) {
    if (i9) {
     i21 = i3 + 4 | 0;
     i14 = HEAP32[i21 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i14 | 0)) {
      i11 = i1;
      break;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i14 + -24 | 0, 0, 50317) | 0;
     i24 = i21;
    } else i24 = i3 + 4 | 0;
    i21 = i6 + 11 | 0;
    i14 = i6 + 4 | 0;
    i12 = i13;
    while (1) {
     if ((HEAP8[i12 >> 0] | 0) == 69) break;
     i13 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
     if ((i13 | 0) == (i12 | 0) | (i13 | 0) == (i2 | 0)) {
      i11 = i1;
      break L1;
     }
     i19 = HEAP32[i24 >> 2] | 0;
     if (((i19 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i11 = i1;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i19 + -24 | 0);
     i19 = HEAP32[i24 >> 2] | 0;
     i22 = 0;
     while (1) {
      if ((i22 | 0) == -1) break;
      i25 = i22 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i19 + (i25 * 24 | 0) | 0);
      i22 = i25;
     }
     HEAP32[i24 >> 2] = i19 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i5, 0, 50317) | 0;
     HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
     HEAP32[i6 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
     HEAP32[i6 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
     i22 = 0;
     while (1) {
      if ((i22 | 0) == 3) break;
      HEAP32[i5 + (i22 << 2) >> 2] = 0;
      i22 = i22 + 1 | 0;
     }
     i22 = HEAP8[i21 >> 0] | 0;
     i19 = i22 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i24 >> 2] | 0) + -24 | 0, i19 ? HEAP32[i6 >> 2] | 0 : i6, i19 ? HEAP32[i14 >> 2] | 0 : i22 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i12 = i13;
    }
    i14 = i12 + 1 | 0;
    i21 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i14, i2, i3) | 0;
    if ((i21 | 0) == (i14 | 0)) {
     i14 = HEAP32[i24 >> 2] | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i14 | 0)) {
      i11 = i1;
      break;
     }
     i8 = 0;
     while (1) {
      if ((i8 | 0) == -1) break;
      i20 = i8 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14 + (i20 * 24 | 0) | 0);
      i8 = i20;
     }
     HEAP32[i24 >> 2] = i14 + -24;
     i11 = i1;
     break;
    }
    i8 = HEAP32[i24 >> 2] | 0;
    if (((i8 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i8 + -24 | 0);
     i8 = HEAP32[i24 >> 2] | 0;
     i12 = 0;
     while (1) {
      if ((i12 | 0) == -1) break;
      i20 = i12 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8 + (i20 * 24 | 0) | 0);
      i12 = i20;
     }
     HEAP32[i24 >> 2] = i8 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i5, 0, 50317) | 0;
     HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
     HEAP32[i6 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
     HEAP32[i6 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
     i12 = 0;
     while (1) {
      if ((i12 | 0) == 3) break;
      HEAP32[i5 + (i12 << 2) >> 2] = 0;
      i12 = i12 + 1 | 0;
     }
     i12 = HEAP8[i6 + 11 >> 0] | 0;
     i8 = i12 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i24 >> 2] | 0) + -24 | 0, i8 ? HEAP32[i6 >> 2] | 0 : i6, i8 ? HEAP32[i6 + 4 >> 2] | 0 : i12 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i11 = i21;
    } else i11 = i1;
   } else i11 = i1;
  } else i11 = i1;
 } else i11 = i1; while (0);
 STACKTOP = i4;
 return i11 | 0;
}

function _printf_core(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i9 = i8 + 56 | 0;
 i10 = i8 + 40 | 0;
 i11 = i8;
 i12 = i8 + 48 | 0;
 i13 = i8 + 60 | 0;
 HEAP32[i9 >> 2] = i2;
 i2 = (i1 | 0) != 0;
 i14 = i11 + 40 | 0;
 i15 = i14;
 i16 = i11 + 39 | 0;
 i11 = i12 + 4 | 0;
 i17 = 0;
 i18 = 0;
 i19 = 0;
 L1 : while (1) {
  i20 = i17;
  i21 = i18;
  while (1) {
   do if ((i21 | 0) > -1) if ((i20 | 0) > (2147483647 - i21 | 0)) {
    i22 = ___errno_location() | 0;
    HEAP32[i22 >> 2] = 75;
    i23 = -1;
    break;
   } else {
    i23 = i20 + i21 | 0;
    break;
   } else i23 = i21; while (0);
   i24 = HEAP32[i9 >> 2] | 0;
   i22 = HEAP8[i24 >> 0] | 0;
   if (!(i22 << 24 >> 24)) {
    i25 = 92;
    break L1;
   }
   i26 = i22;
   i22 = i24;
   L12 : while (1) {
    switch (i26 << 24 >> 24) {
    case 37:
     {
      i25 = 10;
      break L12;
      break;
     }
    case 0:
     {
      i27 = i22;
      break L12;
      break;
     }
    default:
     {}
    }
    i28 = i22 + 1 | 0;
    HEAP32[i9 >> 2] = i28;
    i26 = HEAP8[i28 >> 0] | 0;
    i22 = i28;
   }
   L15 : do if ((i25 | 0) == 10) {
    i25 = 0;
    i26 = i22;
    i28 = i22;
    while (1) {
     if ((HEAP8[i28 + 1 >> 0] | 0) != 37) {
      i27 = i26;
      break L15;
     }
     i29 = i26 + 1 | 0;
     i28 = i28 + 2 | 0;
     HEAP32[i9 >> 2] = i28;
     if ((HEAP8[i28 >> 0] | 0) != 37) {
      i27 = i29;
      break;
     } else i26 = i29;
    }
   } while (0);
   i20 = i27 - i24 | 0;
   if (i2) _out_728(i1, i24, i20);
   if (!i20) break; else i21 = i23;
  }
  i21 = (_isdigit(HEAP8[(HEAP32[i9 >> 2] | 0) + 1 >> 0] | 0) | 0) == 0;
  i20 = HEAP32[i9 >> 2] | 0;
  if (!i21 ? (HEAP8[i20 + 2 >> 0] | 0) == 36 : 0) {
   i30 = (HEAP8[i20 + 1 >> 0] | 0) + -48 | 0;
   i31 = 1;
   i32 = 3;
  } else {
   i30 = -1;
   i31 = i19;
   i32 = 1;
  }
  i21 = i20 + i32 | 0;
  HEAP32[i9 >> 2] = i21;
  i20 = HEAP8[i21 >> 0] | 0;
  i22 = (i20 << 24 >> 24) + -32 | 0;
  if (i22 >>> 0 > 31 | (1 << i22 & 75913 | 0) == 0) {
   i33 = 0;
   i34 = i20;
   i35 = i21;
  } else {
   i20 = 0;
   i26 = i22;
   i22 = i21;
   while (1) {
    i21 = 1 << i26 | i20;
    i28 = i22 + 1 | 0;
    HEAP32[i9 >> 2] = i28;
    i29 = HEAP8[i28 >> 0] | 0;
    i26 = (i29 << 24 >> 24) + -32 | 0;
    if (i26 >>> 0 > 31 | (1 << i26 & 75913 | 0) == 0) {
     i33 = i21;
     i34 = i29;
     i35 = i28;
     break;
    } else {
     i20 = i21;
     i22 = i28;
    }
   }
  }
  if (i34 << 24 >> 24 == 42) {
   if ((_isdigit(HEAP8[i35 + 1 >> 0] | 0) | 0) != 0 ? (i22 = HEAP32[i9 >> 2] | 0, (HEAP8[i22 + 2 >> 0] | 0) == 36) : 0) {
    i20 = i22 + 1 | 0;
    HEAP32[i5 + ((HEAP8[i20 >> 0] | 0) + -48 << 2) >> 2] = 10;
    i36 = HEAP32[i4 + ((HEAP8[i20 >> 0] | 0) + -48 << 3) >> 2] | 0;
    i37 = 1;
    i38 = i22 + 3 | 0;
   } else {
    if (i31 | 0) {
     i39 = -1;
     break;
    }
    if (i2) {
     i22 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     i20 = HEAP32[i22 >> 2] | 0;
     HEAP32[i3 >> 2] = i22 + 4;
     i40 = i20;
    } else i40 = 0;
    i36 = i40;
    i37 = 0;
    i38 = (HEAP32[i9 >> 2] | 0) + 1 | 0;
   }
   HEAP32[i9 >> 2] = i38;
   i20 = (i36 | 0) < 0;
   i41 = i20 ? 0 - i36 | 0 : i36;
   i42 = i20 ? i33 | 8192 : i33;
   i43 = i37;
   i44 = i38;
  } else {
   i20 = _getint_729(i9) | 0;
   if ((i20 | 0) < 0) {
    i39 = -1;
    break;
   }
   i41 = i20;
   i42 = i33;
   i43 = i31;
   i44 = HEAP32[i9 >> 2] | 0;
  }
  do if ((HEAP8[i44 >> 0] | 0) == 46) {
   i20 = i44 + 1 | 0;
   if ((HEAP8[i20 >> 0] | 0) != 42) {
    HEAP32[i9 >> 2] = i20;
    i20 = _getint_729(i9) | 0;
    i45 = i20;
    i46 = HEAP32[i9 >> 2] | 0;
    break;
   }
   if (_isdigit(HEAP8[i44 + 2 >> 0] | 0) | 0 ? (i20 = HEAP32[i9 >> 2] | 0, (HEAP8[i20 + 3 >> 0] | 0) == 36) : 0) {
    i22 = i20 + 2 | 0;
    HEAP32[i5 + ((HEAP8[i22 >> 0] | 0) + -48 << 2) >> 2] = 10;
    i26 = HEAP32[i4 + ((HEAP8[i22 >> 0] | 0) + -48 << 3) >> 2] | 0;
    i22 = i20 + 4 | 0;
    HEAP32[i9 >> 2] = i22;
    i45 = i26;
    i46 = i22;
    break;
   }
   if (i43 | 0) {
    i39 = -1;
    break L1;
   }
   if (i2) {
    i22 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i26 = HEAP32[i22 >> 2] | 0;
    HEAP32[i3 >> 2] = i22 + 4;
    i47 = i26;
   } else i47 = 0;
   i26 = (HEAP32[i9 >> 2] | 0) + 2 | 0;
   HEAP32[i9 >> 2] = i26;
   i45 = i47;
   i46 = i26;
  } else {
   i45 = -1;
   i46 = i44;
  } while (0);
  i26 = 0;
  i22 = i46;
  while (1) {
   if (((HEAP8[i22 >> 0] | 0) + -65 | 0) >>> 0 > 57) {
    i39 = -1;
    break L1;
   }
   i20 = i22;
   i22 = i22 + 1 | 0;
   HEAP32[i9 >> 2] = i22;
   i48 = HEAP8[(HEAP8[i20 >> 0] | 0) + -65 + (3984 + (i26 * 58 | 0)) >> 0] | 0;
   i49 = i48 & 255;
   if ((i49 + -1 | 0) >>> 0 >= 8) break; else i26 = i49;
  }
  if (!(i48 << 24 >> 24)) {
   i39 = -1;
   break;
  }
  i20 = (i30 | 0) > -1;
  do if (i48 << 24 >> 24 == 19) if (i20) {
   i39 = -1;
   break L1;
  } else i25 = 54; else {
   if (i20) {
    HEAP32[i5 + (i30 << 2) >> 2] = i49;
    i28 = i4 + (i30 << 3) | 0;
    i21 = HEAP32[i28 + 4 >> 2] | 0;
    i29 = i10;
    HEAP32[i29 >> 2] = HEAP32[i28 >> 2];
    HEAP32[i29 + 4 >> 2] = i21;
    i25 = 54;
    break;
   }
   if (!i2) {
    i39 = 0;
    break L1;
   }
   _pop_arg_731(i10, i49, i3, i7);
   i50 = HEAP32[i9 >> 2] | 0;
   i25 = 55;
  } while (0);
  if ((i25 | 0) == 54) {
   i25 = 0;
   if (i2) {
    i50 = i22;
    i25 = 55;
   } else i51 = 0;
  }
  L77 : do if ((i25 | 0) == 55) {
   i25 = 0;
   i20 = HEAP8[i50 + -1 >> 0] | 0;
   i21 = (i26 | 0) != 0 & (i20 & 15 | 0) == 3 ? i20 & -33 : i20;
   i20 = i42 & -65537;
   i29 = (i42 & 8192 | 0) == 0 ? i42 : i20;
   L79 : do switch (i21 | 0) {
   case 110:
    {
     switch ((i26 & 255) << 24 >> 24) {
     case 0:
      {
       HEAP32[HEAP32[i10 >> 2] >> 2] = i23;
       i51 = 0;
       break L77;
       break;
      }
     case 1:
      {
       HEAP32[HEAP32[i10 >> 2] >> 2] = i23;
       i51 = 0;
       break L77;
       break;
      }
     case 2:
      {
       i28 = HEAP32[i10 >> 2] | 0;
       HEAP32[i28 >> 2] = i23;
       HEAP32[i28 + 4 >> 2] = ((i23 | 0) < 0) << 31 >> 31;
       i51 = 0;
       break L77;
       break;
      }
     case 3:
      {
       HEAP16[HEAP32[i10 >> 2] >> 1] = i23;
       i51 = 0;
       break L77;
       break;
      }
     case 4:
      {
       HEAP8[HEAP32[i10 >> 2] >> 0] = i23;
       i51 = 0;
       break L77;
       break;
      }
     case 6:
      {
       HEAP32[HEAP32[i10 >> 2] >> 2] = i23;
       i51 = 0;
       break L77;
       break;
      }
     case 7:
      {
       i28 = HEAP32[i10 >> 2] | 0;
       HEAP32[i28 >> 2] = i23;
       HEAP32[i28 + 4 >> 2] = ((i23 | 0) < 0) << 31 >> 31;
       i51 = 0;
       break L77;
       break;
      }
     default:
      {
       i51 = 0;
       break L77;
      }
     }
     break;
    }
   case 112:
    {
     i52 = 120;
     i53 = i45 >>> 0 > 8 ? i45 : 8;
     i54 = i29 | 8;
     i25 = 67;
     break;
    }
   case 88:
   case 120:
    {
     i52 = i21;
     i53 = i45;
     i54 = i29;
     i25 = 67;
     break;
    }
   case 111:
    {
     i28 = i10;
     i55 = _fmt_o(HEAP32[i28 >> 2] | 0, HEAP32[i28 + 4 >> 2] | 0, i14) | 0;
     i28 = i15 - i55 | 0;
     i56 = i55;
     i57 = 0;
     i58 = 46675;
     i59 = (i29 & 8 | 0) == 0 | (i45 | 0) > (i28 | 0) ? i45 : i28 + 1 | 0;
     i60 = i29;
     i25 = 73;
     break;
    }
   case 105:
   case 100:
    {
     i28 = i10;
     i55 = HEAP32[i28 >> 2] | 0;
     i61 = HEAP32[i28 + 4 >> 2] | 0;
     if ((i61 | 0) < 0) {
      i28 = _i64Subtract(0, 0, i55 | 0, i61 | 0) | 0;
      i62 = getTempRet0() | 0;
      i63 = i10;
      HEAP32[i63 >> 2] = i28;
      HEAP32[i63 + 4 >> 2] = i62;
      i64 = 1;
      i65 = 46675;
      i66 = i28;
      i67 = i62;
      i25 = 72;
      break L79;
     } else {
      i64 = (i29 & 2049 | 0) != 0 & 1;
      i65 = (i29 & 2048 | 0) == 0 ? ((i29 & 1 | 0) == 0 ? 46675 : 46677) : 46676;
      i66 = i55;
      i67 = i61;
      i25 = 72;
      break L79;
     }
     break;
    }
   case 117:
    {
     i61 = i10;
     i64 = 0;
     i65 = 46675;
     i66 = HEAP32[i61 >> 2] | 0;
     i67 = HEAP32[i61 + 4 >> 2] | 0;
     i25 = 72;
     break;
    }
   case 99:
    {
     HEAP8[i16 >> 0] = HEAP32[i10 >> 2];
     i68 = i16;
     i69 = 0;
     i70 = 46675;
     i71 = 1;
     i72 = i20;
     i73 = i15;
     break;
    }
   case 115:
    {
     i61 = HEAP32[i10 >> 2] | 0;
     i55 = (i61 | 0) == 0 ? 46685 : i61;
     i61 = _memchr(i55, 0, i45) | 0;
     i62 = (i61 | 0) == 0;
     i68 = i55;
     i69 = 0;
     i70 = 46675;
     i71 = i62 ? i45 : i61 - i55 | 0;
     i72 = i20;
     i73 = i62 ? i55 + i45 | 0 : i61;
     break;
    }
   case 67:
    {
     HEAP32[i12 >> 2] = HEAP32[i10 >> 2];
     HEAP32[i11 >> 2] = 0;
     HEAP32[i10 >> 2] = i12;
     i74 = -1;
     i25 = 79;
     break;
    }
   case 83:
    {
     if (!i45) {
      _pad_734(i1, 32, i41, 0, i29);
      i75 = 0;
      i25 = 89;
     } else {
      i74 = i45;
      i25 = 79;
     }
     break;
    }
   case 65:
   case 71:
   case 70:
   case 69:
   case 97:
   case 103:
   case 102:
   case 101:
    {
     i51 = FUNCTION_TABLE_iidiiii[i6 & 1](i1, +HEAPF64[i10 >> 3], i41, i45, i29, i21) | 0;
     break L77;
     break;
    }
   default:
    {
     i68 = i24;
     i69 = 0;
     i70 = 46675;
     i71 = i45;
     i72 = i29;
     i73 = i15;
    }
   } while (0);
   L102 : do if ((i25 | 0) == 67) {
    i25 = 0;
    i21 = i10;
    i20 = _fmt_x(HEAP32[i21 >> 2] | 0, HEAP32[i21 + 4 >> 2] | 0, i14, i52 & 32) | 0;
    i21 = i10;
    i61 = (i54 & 8 | 0) == 0 | (HEAP32[i21 >> 2] | 0) == 0 & (HEAP32[i21 + 4 >> 2] | 0) == 0;
    i56 = i20;
    i57 = i61 ? 0 : 2;
    i58 = i61 ? 46675 : 46675 + (i52 >>> 4) | 0;
    i59 = i53;
    i60 = i54;
    i25 = 73;
   } else if ((i25 | 0) == 72) {
    i25 = 0;
    i56 = _fmt_u(i66, i67, i14) | 0;
    i57 = i64;
    i58 = i65;
    i59 = i45;
    i60 = i29;
    i25 = 73;
   } else if ((i25 | 0) == 79) {
    i25 = 0;
    i61 = HEAP32[i10 >> 2] | 0;
    i20 = 0;
    while (1) {
     i21 = HEAP32[i61 >> 2] | 0;
     if (!i21) {
      i76 = i20;
      break;
     }
     i55 = _wctomb(i13, i21) | 0;
     i77 = (i55 | 0) < 0;
     if (i77 | i55 >>> 0 > (i74 - i20 | 0) >>> 0) {
      i25 = 83;
      break;
     }
     i21 = i55 + i20 | 0;
     if (i74 >>> 0 > i21 >>> 0) {
      i61 = i61 + 4 | 0;
      i20 = i21;
     } else {
      i76 = i21;
      break;
     }
    }
    if ((i25 | 0) == 83) {
     i25 = 0;
     if (i77) {
      i39 = -1;
      break L1;
     } else i76 = i20;
    }
    _pad_734(i1, 32, i41, i76, i29);
    if (!i76) {
     i75 = 0;
     i25 = 89;
    } else {
     i61 = HEAP32[i10 >> 2] | 0;
     i21 = 0;
     while (1) {
      i55 = HEAP32[i61 >> 2] | 0;
      if (!i55) {
       i75 = i76;
       i25 = 89;
       break L102;
      }
      i62 = _wctomb(i13, i55) | 0;
      i21 = i62 + i21 | 0;
      if ((i21 | 0) > (i76 | 0)) {
       i75 = i76;
       i25 = 89;
       break L102;
      }
      _out_728(i1, i13, i62);
      if (i21 >>> 0 >= i76 >>> 0) {
       i75 = i76;
       i25 = 89;
       break;
      } else i61 = i61 + 4 | 0;
     }
    }
   } while (0);
   if ((i25 | 0) == 73) {
    i25 = 0;
    i61 = i10;
    i21 = (HEAP32[i61 >> 2] | 0) != 0 | (HEAP32[i61 + 4 >> 2] | 0) != 0;
    i61 = (i59 | 0) != 0 | i21;
    i20 = i15 - i56 + ((i21 ^ 1) & 1) | 0;
    i68 = i61 ? i56 : i14;
    i69 = i57;
    i70 = i58;
    i71 = i61 ? ((i59 | 0) > (i20 | 0) ? i59 : i20) : 0;
    i72 = (i59 | 0) > -1 ? i60 & -65537 : i60;
    i73 = i15;
   } else if ((i25 | 0) == 89) {
    i25 = 0;
    _pad_734(i1, 32, i41, i75, i29 ^ 8192);
    i51 = (i41 | 0) > (i75 | 0) ? i41 : i75;
    break;
   }
   i20 = i73 - i68 | 0;
   i61 = (i71 | 0) < (i20 | 0) ? i20 : i71;
   i21 = i61 + i69 | 0;
   i62 = (i41 | 0) < (i21 | 0) ? i21 : i41;
   _pad_734(i1, 32, i62, i21, i72);
   _out_728(i1, i70, i69);
   _pad_734(i1, 48, i62, i21, i72 ^ 65536);
   _pad_734(i1, 48, i61, i20, 0);
   _out_728(i1, i68, i20);
   _pad_734(i1, 32, i62, i21, i72 ^ 8192);
   i51 = i62;
  } while (0);
  i17 = i51;
  i18 = i23;
  i19 = i43;
 }
 L123 : do if ((i25 | 0) == 92) if (!i1) if (!i19) i39 = 0; else {
  i43 = 1;
  while (1) {
   i18 = HEAP32[i5 + (i43 << 2) >> 2] | 0;
   if (!i18) break;
   _pop_arg_731(i4 + (i43 << 3) | 0, i18, i3, i7);
   i18 = i43 + 1 | 0;
   if (i18 >>> 0 < 10) i43 = i18; else {
    i39 = 1;
    break L123;
   }
  }
  i18 = i43;
  while (1) {
   if (HEAP32[i5 + (i18 << 2) >> 2] | 0) {
    i39 = -1;
    break L123;
   }
   i18 = i18 + 1 | 0;
   if (i18 >>> 0 >= 10) {
    i39 = 1;
    break;
   }
  }
 } else i39 = i23; while (0);
 STACKTOP = i8;
 return i39 | 0;
}

function __ZN6vision21HoughSimilarityVoting4voteEffff(i1, d2, d3, d4, d5) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 var i6 = 0, i7 = 0, d8 = 0.0, i9 = 0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0, i16 = 0, i17 = 0, d18 = 0.0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 d8 = +HEAPF32[i1 + 20 >> 2];
 if (d8 > d2) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 d10 = +HEAPF32[i1 + 24 >> 2];
 if (d10 <= d2) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 d11 = +HEAPF32[i1 + 28 >> 2];
 if (d11 > d3) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 d12 = +HEAPF32[i1 + 32 >> 2];
 if (d12 <= d3) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 d13 = d4;
 if (d13 <= -3.141592653589793 | d13 > 3.141592653589793) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 d4 = +HEAPF32[i1 + 36 >> 2];
 if (d4 > d5) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 d14 = +HEAPF32[i1 + 40 >> 2];
 if (d14 <= d5) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 if (!(d8 <= d2)) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30360, 33) | 0, 30394, 122) | 0, 33554, 6) | 0, 360) | 0, 33561, 2) | 0, 30517, 14) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i17) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if (!(d10 > d2)) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30532, 32) | 0, 30394, 122) | 0, 33554, 6) | 0, 361) | 0, 33561, 2) | 0, 30517, 14) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if (!(d11 <= d3)) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30565, 33) | 0, 30394, 122) | 0, 33554, 6) | 0, 362) | 0, 33561, 2) | 0, 30599, 14) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i17) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if (!(d12 > d3)) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30614, 32) | 0, 30394, 122) | 0, 33554, 6) | 0, 363) | 0, 33561, 2) | 0, 30599, 14) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if (!(d13 > -3.141592653589793)) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30647, 34) | 0, 30394, 122) | 0, 33554, 6) | 0, 364) | 0, 33561, 2) | 0, 30682, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i17) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if (!(d13 <= 3.141592653589793)) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30701, 34) | 0, 30394, 122) | 0, 33554, 6) | 0, 365) | 0, 33561, 2) | 0, 30682, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if (!(d4 <= d5)) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30736, 41) | 0, 30394, 122) | 0, 33554, 6) | 0, 366) | 0, 33561, 2) | 0, 30778, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i17) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if (!(d14 > d5)) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30797, 40) | 0, 30394, 122) | 0, 33554, 6) | 0, 367) | 0, 33561, 2) | 0, 30778, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 i15 = HEAP32[i1 + 52 >> 2] | 0;
 d18 = d10 - d8;
 d10 = (d2 - d8) / (d18 == 0.0 ? 1.0 : d18) * +(i15 | 0);
 HEAPF32[i1 + 68 >> 2] = d10;
 i16 = HEAP32[i1 + 56 >> 2] | 0;
 d18 = d12 - d11;
 d12 = (d3 - d11) / (d18 == 0.0 ? 1.0 : d18) * +(i16 | 0);
 HEAPF32[i1 + 72 >> 2] = d12;
 i7 = HEAP32[i1 + 60 >> 2] | 0;
 d18 = (d13 + 3.141592653589793) * .15915494309189535 * +(i7 | 0);
 HEAPF32[i1 + 76 >> 2] = d18;
 i17 = HEAP32[i1 + 64 >> 2] | 0;
 d13 = d14 - d4;
 d14 = (d5 - d4) / (d13 == 0.0 ? 1.0 : d13) * +(i17 | 0);
 HEAPF32[i1 + 80 >> 2] = d14;
 i19 = ~~+Math_floor(+(d10 + -.5));
 i20 = ~~+Math_floor(+(d12 + -.5));
 i21 = ~~+Math_floor(+(d14 + -.5));
 i22 = (i7 + ~~+Math_floor(+(d18 + -.5)) | 0) % (i7 | 0) | 0;
 if ((i19 | 0) < 0) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 i23 = i19 + 1 | 0;
 if ((i23 | 0) >= (i15 | 0) | (i20 | 0) < 0) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 i15 = i20 + 1 | 0;
 if ((i15 | 0) >= (i16 | 0) | (i21 | 0) < 0) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 i16 = i21 + 1 | 0;
 if ((i16 | 0) >= (i17 | 0)) {
  i9 = 0;
  STACKTOP = i6;
  return i9 | 0;
 }
 i17 = (i22 + 1 | 0) % (i7 | 0) | 0;
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i19, i20, i22, i21) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i23, i20, i22, i21) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i23, i15, i22, i21) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i23, i15, i17, i21) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i23, i15, i17, i16) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i23, i15, i22, i16) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i23, i20, i17, i21) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i23, i20, i17, i16) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i23, i20, i22, i16) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i19, i15, i22, i21) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i19, i15, i17, i21) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i19, i15, i17, i16) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i19, i15, i22, i16) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i19, i20, i17, i21) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i19, i20, i17, i16) | 0, 1);
 __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i19, i20, i22, i16) | 0, 1);
 i9 = 1;
 STACKTOP = i6;
 return i9 | 0;
}

function __ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(i1, i2, i3, i4, d5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7;
 i9 = ~~+Math_floor(+d5);
 if ((i9 | 0) != (~~d5 | 0)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23198, 51) | 0, 23250, 111) | 0, 33554, 6) | 0, 69) | 0, 33561, 2) | 0, 23362, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 i10 = ~~+Math_floor(+d6);
 if ((i10 | 0) != (~~d6 | 0)) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23392, 51) | 0, 23250, 111) | 0, 33554, 6) | 0, 70) | 0, 33561, 2) | 0, 23362, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 i12 = i9 + 1 | 0;
 i13 = i10 + 1 | 0;
 if (!((i10 | 0) > -1 & i10 >>> 0 < i3 >>> 0)) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23444, 45) | 0, 23250, 111) | 0, 33554, 6) | 0, 79) | 0, 33561, 2) | 0, 23490, 16) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 if (i13 >>> 0 >= i3 >>> 0) {
  i3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23507, 59) | 0, 23250, 111) | 0, 33554, 6) | 0, 80) | 0, 33561, 2) | 0, 23567, 23) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 }
 if (!((i9 | 0) > -1 & i9 >>> 0 < i2 >>> 0)) {
  i3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23591, 44) | 0, 23250, 111) | 0, 33554, 6) | 0, 81) | 0, 33561, 2) | 0, 23636, 16) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 }
 if (i12 >>> 0 >= i2 >>> 0) {
  i2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23653, 58) | 0, 23250, 111) | 0, 33554, 6) | 0, 82) | 0, 33561, 2) | 0, 23712, 23) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i2, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i2) | 0;
  _abort();
 }
 i2 = i1 + (Math_imul(i10, i4) | 0) | 0;
 i1 = i2 + i4 | 0;
 d16 = +(i12 | 0) - d5;
 d17 = +(i13 | 0) - d6;
 d18 = d16 * d17;
 d19 = d5 - +(i9 | 0);
 d5 = d19 * d17;
 d17 = d6 - +(i10 | 0);
 d6 = d16 * d17;
 d16 = d19 * d17;
 if (!(d18 >= 0.0) | !(d18 <= 1.0001)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23736, 46) | 0, 23250, 111) | 0, 33554, 6) | 0, 94) | 0, 33561, 2) | 0, 23783, 12) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if (!(d5 >= 0.0) | !(d5 <= 1.0001)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23796, 46) | 0, 23250, 111) | 0, 33554, 6) | 0, 95) | 0, 33561, 2) | 0, 23783, 12) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if (!(d6 >= 0.0) | !(d6 <= 1.0001)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23843, 46) | 0, 23250, 111) | 0, 33554, 6) | 0, 96) | 0, 33561, 2) | 0, 23783, 12) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if (!(d16 >= 0.0) | !(d16 <= 1.0001)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23890, 46) | 0, 23250, 111) | 0, 33554, 6) | 0, 97) | 0, 33561, 2) | 0, 23783, 12) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if (!(d16 + (d6 + (d18 + d5)) <= 1.0001)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23937, 46) | 0, 23250, 111) | 0, 33554, 6) | 0, 98) | 0, 33561, 2) | 0, 23783, 12) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 } else {
  STACKTOP = i7;
  return +(d18 * +HEAPF32[i2 + (i9 << 2) >> 2] + d5 * +HEAPF32[i2 + (i12 << 2) >> 2] + d6 * +HEAPF32[i1 + (i9 << 2) >> 2] + d16 * +HEAPF32[i1 + (i12 << 2) >> 2]);
 }
 return +(0.0);
}

function __ZN6vision27OrthogonalizePivot8x9Basis1IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, d15 = 0.0, i16 = 0, d17 = 0.0, i18 = 0, d19 = 0.0, i20 = 0, d21 = 0.0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, i26 = 0, d27 = 0.0, i28 = 0, d29 = 0.0, i30 = 0, d31 = 0.0, i32 = 0, d33 = 0.0, i34 = 0, d35 = 0.0, i36 = 0, d37 = 0.0, i38 = 0, d39 = 0.0, i40 = 0, d41 = 0.0, i42 = 0, d43 = 0.0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, d54 = 0.0, d55 = 0.0, d56 = 0.0, d57 = 0.0, d58 = 0.0, d59 = 0.0, d60 = 0.0, d61 = 0.0, d62 = 0.0, d63 = 0.0, d64 = 0.0, d65 = 0.0, d66 = 0.0, d67 = 0.0, d68 = 0.0, d69 = 0.0, d70 = 0.0, d71 = 0.0, d72 = 0.0, d73 = 0.0, d74 = 0.0, d75 = 0.0, d76 = 0.0, d77 = 0.0, d78 = 0.0, d79 = 0.0, d80 = 0.0, d81 = 0.0, d82 = 0.0, d83 = 0.0, d84 = 0.0, d85 = 0.0, d86 = 0.0, d87 = 0.0, d88 = 0.0, i89 = 0, i90 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = i1 + 36 | 0;
 i6 = i2 + 36 | 0;
 d7 = +HEAPF32[i1 >> 2];
 i8 = i2 + 40 | 0;
 d9 = +HEAPF32[i1 + 4 >> 2];
 i10 = i2 + 44 | 0;
 d11 = +HEAPF32[i1 + 8 >> 2];
 i12 = i2 + 48 | 0;
 d13 = +HEAPF32[i1 + 12 >> 2];
 i14 = i2 + 52 | 0;
 d15 = +HEAPF32[i1 + 16 >> 2];
 i16 = i2 + 56 | 0;
 d17 = +HEAPF32[i1 + 20 >> 2];
 i18 = i2 + 60 | 0;
 d19 = +HEAPF32[i1 + 24 >> 2];
 i20 = i2 + 64 | 0;
 d21 = +HEAPF32[i1 + 28 >> 2];
 i22 = i2 + 68 | 0;
 d23 = +HEAPF32[i1 + 32 >> 2];
 d24 = +HEAPF32[i6 >> 2] * d7 + +HEAPF32[i8 >> 2] * d9 + +HEAPF32[i10 >> 2] * d11 + +HEAPF32[i12 >> 2] * d13 + +HEAPF32[i14 >> 2] * d15 + +HEAPF32[i16 >> 2] * d17 + +HEAPF32[i18 >> 2] * d19 + +HEAPF32[i20 >> 2] * d21 + +HEAPF32[i22 >> 2] * d23;
 d25 = +HEAPF32[i5 >> 2] - d7 * d24;
 HEAPF32[i5 >> 2] = d25;
 i26 = i1 + 40 | 0;
 d27 = +HEAPF32[i26 >> 2] - d9 * d24;
 HEAPF32[i26 >> 2] = d27;
 i28 = i1 + 44 | 0;
 d29 = +HEAPF32[i28 >> 2] - d11 * d24;
 HEAPF32[i28 >> 2] = d29;
 i30 = i1 + 48 | 0;
 d31 = +HEAPF32[i30 >> 2] - d13 * d24;
 HEAPF32[i30 >> 2] = d31;
 i32 = i1 + 52 | 0;
 d33 = +HEAPF32[i32 >> 2] - d15 * d24;
 HEAPF32[i32 >> 2] = d33;
 i34 = i1 + 56 | 0;
 d35 = +HEAPF32[i34 >> 2] - d17 * d24;
 HEAPF32[i34 >> 2] = d35;
 i36 = i1 + 60 | 0;
 d37 = +HEAPF32[i36 >> 2] - d19 * d24;
 HEAPF32[i36 >> 2] = d37;
 i38 = i1 + 64 | 0;
 d39 = +HEAPF32[i38 >> 2] - d21 * d24;
 HEAPF32[i38 >> 2] = d39;
 i40 = i1 + 68 | 0;
 d41 = +HEAPF32[i40 >> 2] - d23 * d24;
 HEAPF32[i40 >> 2] = d41;
 i42 = i1 + 72 | 0;
 d24 = d7 * +HEAPF32[i2 + 72 >> 2] + d9 * +HEAPF32[i2 + 76 >> 2] + d11 * +HEAPF32[i2 + 80 >> 2] + d13 * +HEAPF32[i2 + 84 >> 2] + d15 * +HEAPF32[i2 + 88 >> 2] + d17 * +HEAPF32[i2 + 92 >> 2] + d19 * +HEAPF32[i2 + 96 >> 2] + d21 * +HEAPF32[i2 + 100 >> 2] + d23 * +HEAPF32[i2 + 104 >> 2];
 d43 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d43;
 i42 = i1 + 76 | 0;
 d44 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d44;
 i42 = i1 + 80 | 0;
 d45 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d45;
 i42 = i1 + 84 | 0;
 d46 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d46;
 i42 = i1 + 88 | 0;
 d47 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d47;
 i42 = i1 + 92 | 0;
 d48 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d48;
 i42 = i1 + 96 | 0;
 d49 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d49;
 i42 = i1 + 100 | 0;
 d50 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d50;
 i42 = i1 + 104 | 0;
 d51 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d51;
 i42 = i1 + 108 | 0;
 d24 = d7 * +HEAPF32[i2 + 108 >> 2] + d9 * +HEAPF32[i2 + 112 >> 2] + d11 * +HEAPF32[i2 + 116 >> 2] + d13 * +HEAPF32[i2 + 120 >> 2] + d15 * +HEAPF32[i2 + 124 >> 2] + d17 * +HEAPF32[i2 + 128 >> 2] + d19 * +HEAPF32[i2 + 132 >> 2] + d21 * +HEAPF32[i2 + 136 >> 2] + d23 * +HEAPF32[i2 + 140 >> 2];
 d52 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d52;
 i42 = i1 + 112 | 0;
 d53 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d53;
 i42 = i1 + 116 | 0;
 d54 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d54;
 i42 = i1 + 120 | 0;
 d55 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d55;
 i42 = i1 + 124 | 0;
 d56 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d56;
 i42 = i1 + 128 | 0;
 d57 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d57;
 i42 = i1 + 132 | 0;
 d58 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d58;
 i42 = i1 + 136 | 0;
 d59 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d59;
 i42 = i1 + 140 | 0;
 d60 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d60;
 i42 = i1 + 144 | 0;
 d24 = d7 * +HEAPF32[i2 + 144 >> 2] + d9 * +HEAPF32[i2 + 148 >> 2] + d11 * +HEAPF32[i2 + 152 >> 2] + d13 * +HEAPF32[i2 + 156 >> 2] + d15 * +HEAPF32[i2 + 160 >> 2] + d17 * +HEAPF32[i2 + 164 >> 2] + d19 * +HEAPF32[i2 + 168 >> 2] + d21 * +HEAPF32[i2 + 172 >> 2] + d23 * +HEAPF32[i2 + 176 >> 2];
 d61 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d61;
 i42 = i1 + 148 | 0;
 d62 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d62;
 i42 = i1 + 152 | 0;
 d63 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d63;
 i42 = i1 + 156 | 0;
 d64 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d64;
 i42 = i1 + 160 | 0;
 d65 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d65;
 i42 = i1 + 164 | 0;
 d66 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d66;
 i42 = i1 + 168 | 0;
 d67 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d67;
 i42 = i1 + 172 | 0;
 d68 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d68;
 i42 = i1 + 176 | 0;
 d69 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d69;
 i42 = i1 + 180 | 0;
 d24 = d7 * +HEAPF32[i2 + 180 >> 2] + d9 * +HEAPF32[i2 + 184 >> 2] + d11 * +HEAPF32[i2 + 188 >> 2] + d13 * +HEAPF32[i2 + 192 >> 2] + d15 * +HEAPF32[i2 + 196 >> 2] + d17 * +HEAPF32[i2 + 200 >> 2] + d19 * +HEAPF32[i2 + 204 >> 2] + d21 * +HEAPF32[i2 + 208 >> 2] + d23 * +HEAPF32[i2 + 212 >> 2];
 d70 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d70;
 i42 = i1 + 184 | 0;
 d71 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d71;
 i42 = i1 + 188 | 0;
 d72 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d72;
 i42 = i1 + 192 | 0;
 d73 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d73;
 i42 = i1 + 196 | 0;
 d74 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d74;
 i42 = i1 + 200 | 0;
 d75 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d75;
 i42 = i1 + 204 | 0;
 d76 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d76;
 i42 = i1 + 208 | 0;
 d77 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d77;
 i42 = i1 + 212 | 0;
 d78 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d78;
 i42 = i1 + 216 | 0;
 d24 = d7 * +HEAPF32[i2 + 216 >> 2] + d9 * +HEAPF32[i2 + 220 >> 2] + d11 * +HEAPF32[i2 + 224 >> 2] + d13 * +HEAPF32[i2 + 228 >> 2] + d15 * +HEAPF32[i2 + 232 >> 2] + d17 * +HEAPF32[i2 + 236 >> 2] + d19 * +HEAPF32[i2 + 240 >> 2] + d21 * +HEAPF32[i2 + 244 >> 2] + d23 * +HEAPF32[i2 + 248 >> 2];
 d79 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d79;
 i42 = i1 + 220 | 0;
 d80 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d80;
 i42 = i1 + 224 | 0;
 d81 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d81;
 i42 = i1 + 228 | 0;
 d82 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d82;
 i42 = i1 + 232 | 0;
 d83 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d83;
 i42 = i1 + 236 | 0;
 d84 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d84;
 i42 = i1 + 240 | 0;
 d85 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d85;
 i42 = i1 + 244 | 0;
 d86 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d86;
 i42 = i1 + 248 | 0;
 d87 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d87;
 i42 = i1 + 252 | 0;
 d24 = d7 * +HEAPF32[i2 + 252 >> 2] + d9 * +HEAPF32[i2 + 256 >> 2] + d11 * +HEAPF32[i2 + 260 >> 2] + d13 * +HEAPF32[i2 + 264 >> 2] + d15 * +HEAPF32[i2 + 268 >> 2] + d17 * +HEAPF32[i2 + 272 >> 2] + d19 * +HEAPF32[i2 + 276 >> 2] + d21 * +HEAPF32[i2 + 280 >> 2] + d23 * +HEAPF32[i2 + 284 >> 2];
 d88 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d88;
 i42 = i1 + 256 | 0;
 d7 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d7;
 i42 = i1 + 260 | 0;
 d9 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d9;
 i42 = i1 + 264 | 0;
 d11 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d11;
 i42 = i1 + 268 | 0;
 d13 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d13;
 i42 = i1 + 272 | 0;
 d15 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d15;
 i42 = i1 + 276 | 0;
 d17 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d17;
 i42 = i1 + 280 | 0;
 d19 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d19;
 i42 = i1 + 284 | 0;
 d21 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d21;
 d24 = d25 * d25 + d27 * d27 + d29 * d29 + d31 * d31 + d33 * d33 + d35 * d35 + d37 * d37 + d39 * d39 + d41 * d41;
 HEAPF32[i4 >> 2] = d24;
 d41 = d43 * d43 + d44 * d44 + d45 * d45 + d46 * d46 + d47 * d47 + d48 * d48 + d49 * d49 + d50 * d50 + d51 * d51;
 HEAPF32[i4 + 4 >> 2] = d41;
 d51 = d52 * d52 + d53 * d53 + d54 * d54 + d55 * d55 + d56 * d56 + d57 * d57 + d58 * d58 + d59 * d59 + d60 * d60;
 HEAPF32[i4 + 8 >> 2] = d51;
 d60 = d61 * d61 + d62 * d62 + d63 * d63 + d64 * d64 + d65 * d65 + d66 * d66 + d67 * d67 + d68 * d68 + d69 * d69;
 HEAPF32[i4 + 12 >> 2] = d60;
 d69 = d70 * d70 + d71 * d71 + d72 * d72 + d73 * d73 + d74 * d74 + d75 * d75 + d76 * d76 + d77 * d77 + d78 * d78;
 HEAPF32[i4 + 16 >> 2] = d69;
 d78 = d79 * d79 + d80 * d80 + d81 * d81 + d82 * d82 + d83 * d83 + d84 * d84 + d85 * d85 + d86 * d86 + d87 * d87;
 HEAPF32[i4 + 20 >> 2] = d78;
 d87 = d88 * d88 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 HEAPF32[i4 + 24 >> 2] = d87;
 i42 = d41 > d24 & 1;
 i1 = d51 > +HEAPF32[i4 + (i42 << 2) >> 2] ? 2 : i42;
 i42 = d60 > +HEAPF32[i4 + (i1 << 2) >> 2] ? 3 : i1;
 i1 = d69 > +HEAPF32[i4 + (i42 << 2) >> 2] ? 4 : i42;
 i42 = d78 > +HEAPF32[i4 + (i1 << 2) >> 2] ? 5 : i1;
 i1 = d87 > +HEAPF32[i4 + (i42 << 2) >> 2] ? 6 : i42;
 d87 = +HEAPF32[i4 + (i1 << 2) >> 2];
 if (d87 == 0.0) {
  i89 = 0;
  STACKTOP = i3;
  return i89 | 0;
 }
 i4 = i1 * 9 | 0;
 i1 = i5 + (i4 << 2) | 0;
 i42 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 i2 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = i42;
 i42 = HEAP32[i26 >> 2] | 0;
 HEAP32[i26 >> 2] = HEAP32[i2 >> 2];
 i90 = i1 + 8 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i28 >> 2] | 0;
 HEAP32[i28 >> 2] = HEAP32[i90 >> 2];
 i2 = i1 + 12 | 0;
 HEAP32[i90 >> 2] = i42;
 i42 = HEAP32[i30 >> 2] | 0;
 HEAP32[i30 >> 2] = HEAP32[i2 >> 2];
 i90 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i32 >> 2] | 0;
 HEAP32[i32 >> 2] = HEAP32[i90 >> 2];
 i2 = i1 + 20 | 0;
 HEAP32[i90 >> 2] = i42;
 i42 = HEAP32[i34 >> 2] | 0;
 HEAP32[i34 >> 2] = HEAP32[i2 >> 2];
 i90 = i1 + 24 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i36 >> 2] | 0;
 HEAP32[i36 >> 2] = HEAP32[i90 >> 2];
 i2 = i1 + 28 | 0;
 HEAP32[i90 >> 2] = i42;
 i42 = HEAP32[i38 >> 2] | 0;
 HEAP32[i38 >> 2] = HEAP32[i2 >> 2];
 i90 = i1 + 32 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i40 >> 2] | 0;
 HEAP32[i40 >> 2] = HEAP32[i90 >> 2];
 HEAP32[i90 >> 2] = i42;
 i42 = i6 + (i4 << 2) | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i42 >> 2];
 i6 = i42 + 4 | 0;
 HEAP32[i42 >> 2] = i4;
 i4 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
 i8 = i42 + 8 | 0;
 HEAP32[i6 >> 2] = i4;
 i4 = HEAP32[i10 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
 i10 = i42 + 12 | 0;
 HEAP32[i8 >> 2] = i4;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i10 >> 2];
 i12 = i42 + 16 | 0;
 HEAP32[i10 >> 2] = i4;
 i4 = HEAP32[i14 >> 2] | 0;
 HEAP32[i14 >> 2] = HEAP32[i12 >> 2];
 i14 = i42 + 20 | 0;
 HEAP32[i12 >> 2] = i4;
 i4 = HEAP32[i16 >> 2] | 0;
 HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
 i16 = i42 + 24 | 0;
 HEAP32[i14 >> 2] = i4;
 i4 = HEAP32[i18 >> 2] | 0;
 HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
 i18 = i42 + 28 | 0;
 HEAP32[i16 >> 2] = i4;
 i4 = HEAP32[i20 >> 2] | 0;
 HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
 i20 = i42 + 32 | 0;
 HEAP32[i18 >> 2] = i4;
 i4 = HEAP32[i22 >> 2] | 0;
 HEAP32[i22 >> 2] = HEAP32[i20 >> 2];
 HEAP32[i20 >> 2] = i4;
 d78 = 1.0 / +Math_sqrt(+d87);
 HEAPF32[i5 >> 2] = d78 * +HEAPF32[i5 >> 2];
 HEAPF32[i26 >> 2] = d78 * +HEAPF32[i26 >> 2];
 HEAPF32[i28 >> 2] = d78 * +HEAPF32[i28 >> 2];
 HEAPF32[i30 >> 2] = d78 * +HEAPF32[i30 >> 2];
 HEAPF32[i32 >> 2] = d78 * +HEAPF32[i32 >> 2];
 HEAPF32[i34 >> 2] = d78 * +HEAPF32[i34 >> 2];
 HEAPF32[i36 >> 2] = d78 * +HEAPF32[i36 >> 2];
 HEAPF32[i38 >> 2] = d78 * +HEAPF32[i38 >> 2];
 HEAPF32[i40 >> 2] = d78 * +HEAPF32[i40 >> 2];
 i89 = 1;
 STACKTOP = i3;
 return i89 | 0;
}

function __ZN6vision38ComputeSubpixelHessianCoarseOctavePairEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i9 = i8 + 20 | 0;
 i10 = i8 + 16 | 0;
 i11 = i8 + 12 | 0;
 i12 = i8 + 8 | 0;
 i13 = i8 + 4 | 0;
 i14 = i8;
 if ((i6 | 0) <= 0) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22787, 57) | 0;
  i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i15, 22500, 128) | 0;
  i17 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i16, 33554, 6) | 0;
  i18 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i17, 359) | 0;
  i19 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i18, 33561, 2) | 0;
  i20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i19, 22845, 15) | 0;
  i21 = HEAP32[i20 >> 2] | 0;
  i22 = i21 + -12 | 0;
  i23 = HEAP32[i22 >> 2] | 0;
  i24 = i20 + i23 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i24);
  i25 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i26 = HEAP32[i25 >> 2] | 0;
  i27 = i26 + 28 | 0;
  i28 = HEAP32[i27 >> 2] | 0;
  i29 = FUNCTION_TABLE_iii[i28 & 63](i25, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
  _abort();
 }
 i30 = HEAP32[i4 + 4 >> 2] | 0;
 if ((i6 + 1 | 0) >>> 0 >= i30 >>> 0) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22787, 57) | 0;
  i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i15, 22500, 128) | 0;
  i17 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i16, 33554, 6) | 0;
  i18 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i17, 359) | 0;
  i19 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i18, 33561, 2) | 0;
  i20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i19, 22845, 15) | 0;
  i21 = HEAP32[i20 >> 2] | 0;
  i22 = i21 + -12 | 0;
  i23 = HEAP32[i22 >> 2] | 0;
  i24 = i20 + i23 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i24);
  i25 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i26 = HEAP32[i25 >> 2] | 0;
  i27 = i26 + 28 | 0;
  i28 = HEAP32[i27 >> 2] | 0;
  i29 = FUNCTION_TABLE_iii[i28 & 63](i25, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
  _abort();
 }
 if ((i7 | 0) <= 0) {
  i31 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22861, 58) | 0;
  i32 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i31, 22500, 128) | 0;
  i33 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i32, 33554, 6) | 0;
  i34 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i33, 360) | 0;
  i35 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i34, 33561, 2) | 0;
  i36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i35, 22920, 15) | 0;
  i37 = HEAP32[i36 >> 2] | 0;
  i38 = i37 + -12 | 0;
  i39 = HEAP32[i38 >> 2] | 0;
  i40 = i36 + i39 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i40);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i42 = HEAP32[i41 >> 2] | 0;
  i43 = i42 + 28 | 0;
  i44 = HEAP32[i43 >> 2] | 0;
  i45 = FUNCTION_TABLE_iii[i44 & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i36, i45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i36) | 0;
  _abort();
 }
 i20 = i7 + 1 | 0;
 i29 = HEAP32[i4 + 8 >> 2] | 0;
 if (i20 >>> 0 >= i29 >>> 0) {
  i31 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22861, 58) | 0;
  i32 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i31, 22500, 128) | 0;
  i33 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i32, 33554, 6) | 0;
  i34 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i33, 360) | 0;
  i35 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i34, 33561, 2) | 0;
  i36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i35, 22920, 15) | 0;
  i37 = HEAP32[i36 >> 2] | 0;
  i38 = i37 + -12 | 0;
  i39 = HEAP32[i38 >> 2] | 0;
  i40 = i36 + i39 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i40);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i42 = HEAP32[i41 >> 2] | 0;
  i43 = i42 + 28 | 0;
  i44 = HEAP32[i43 >> 2] | 0;
  i45 = FUNCTION_TABLE_iii[i44 & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i36, i45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i36) | 0;
  _abort();
 }
 i36 = i3 + 4 | 0;
 if (((HEAP32[i36 >> 2] | 0) >>> 1 | 0) != (i30 | 0)) {
  i45 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22936, 56) | 0, 22500, 128) | 0, 33554, 6) | 0, 361) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i45 + (HEAP32[(HEAP32[i45 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i44 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i41 >> 2] | 0) + 28 >> 2] & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i45, i44) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i45) | 0;
  _abort();
 }
 if ((i30 | 0) != (HEAP32[i5 + 4 >> 2] | 0)) {
  i30 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23023, 56) | 0, 22500, 128) | 0, 33554, 6) | 0, 362) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i30 + (HEAP32[(HEAP32[i30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i45 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i44 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i45 >> 2] | 0) + 28 >> 2] & 63](i45, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i30, i44) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i30) | 0;
  _abort();
 }
 i30 = i3 + 8 | 0;
 if (((HEAP32[i30 >> 2] | 0) >>> 1 | 0) != (i29 | 0)) {
  i44 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23080, 58) | 0, 22500, 128) | 0, 33554, 6) | 0, 363) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i44 + (HEAP32[(HEAP32[i44 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i45 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i41 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i45 >> 2] | 0) + 28 >> 2] & 63](i45, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i44, i41) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i44) | 0;
  _abort();
 }
 if ((i29 | 0) == (HEAP32[i5 + 8 >> 2] | 0)) {
  i29 = (__ZNK6vision5Image3getIfEEPKT_m(i4, i7) | 0) + (i6 << 2) | 0;
  i44 = (__ZNK6vision5Image3getIfEEPKT_m(i5, i7 + -1 | 0) | 0) + (i6 << 2) | 0;
  i41 = (__ZNK6vision5Image3getIfEEPKT_m(i5, i7) | 0) + (i6 << 2) | 0;
  i45 = (__ZNK6vision5Image3getIfEEPKT_m(i5, i20) | 0) + (i6 << 2) | 0;
  d46 = +_ldexp(1.0, 0) + -.5;
  d47 = +(i6 | 0) * 2.0 + d46;
  d48 = +(i7 | 0) * 2.0 + d46;
  __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii(i10, i11, i12, i13, i14, i4, i6, i7);
  i7 = i3 + 24 | 0;
  i6 = i3 + 12 | 0;
  d46 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d47, d48);
  d49 = +HEAPF32[i41 >> 2];
  d50 = d49 + (d46 - +HEAPF32[i29 >> 2] * 2.0);
  d51 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d47 + -2.0, d48);
  d52 = d51 + +HEAPF32[i41 + 4 >> 2];
  d51 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d47 + 2.0, d48);
  d53 = (d52 - (d51 + +HEAPF32[i41 + -4 >> 2])) * .25;
  d51 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d47, d48 + -2.0);
  d52 = d51 + +HEAPF32[i45 >> 2];
  d51 = +__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff(HEAP32[i7 >> 2] | 0, HEAP32[i36 >> 2] | 0, HEAP32[i30 >> 2] | 0, HEAP32[i6 >> 2] | 0, d47, d48 + 2.0);
  d48 = (d52 - (d51 + +HEAPF32[i44 >> 2])) * .25;
  HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
  i12 = HEAP32[i14 >> 2] | 0;
  HEAP32[i1 + 4 >> 2] = i12;
  HEAPF32[i1 + 8 >> 2] = d53;
  HEAP32[i1 + 12 >> 2] = i12;
  HEAP32[i1 + 16 >> 2] = HEAP32[i13 >> 2];
  HEAPF32[i1 + 20 >> 2] = d48;
  HEAPF32[i1 + 24 >> 2] = d53;
  HEAPF32[i1 + 28 >> 2] = d48;
  HEAPF32[i1 + 32 >> 2] = d50;
  HEAPF32[i2 >> 2] = -+HEAPF32[i10 >> 2];
  HEAPF32[i2 + 4 >> 2] = -+HEAPF32[i11 >> 2];
  HEAPF32[i2 + 8 >> 2] = -((d49 - d46) * .5);
  STACKTOP = i8;
  return;
 } else {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23139, 58) | 0, 22500, 128) | 0, 33554, 6) | 0, 364) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 48 | 0;
 i6 = i4 + 40 | 0;
 i7 = i4 + 32 | 0;
 i8 = i4 + 24 | 0;
 i9 = i4 + 12 | 0;
 i10 = i4;
 if ((i1 | 0) != (i2 | 0)) {
  i11 = i3 + 56 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj(i6, i11);
  HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
  i12 = i3 + 61 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb(i7, i12);
  if ((HEAP32[i11 >> 2] | 0) >>> 0 > 1) HEAP8[i12 >> 0] = 1;
  L6 : do switch (HEAP8[i1 >> 0] | 0) {
  case 84:
  case 71:
   {
    i13 = __ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
    i14 = 1;
    break;
   }
  default:
   {
    i11 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
    i15 = HEAP32[i3 + 48 >> 2] | 0;
    i16 = HEAP32[i3 + 52 >> 2] | 0;
    L8 : do if ((i11 | 0) != (i1 | 0)) if ((i11 | 0) != (i2 | 0)) {
     switch (HEAP8[i11 >> 0] | 0) {
     case 46:
     case 69:
      {
       i17 = i11;
       break L8;
       break;
      }
     default:
      {}
     }
     __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb(i8, i12);
     HEAP8[i12 >> 0] = 0;
     HEAP32[i9 >> 2] = 0;
     HEAP32[i9 + 4 >> 2] = 0;
     HEAP32[i9 + 8 >> 2] = 0;
     i18 = 0;
     while (1) {
      if ((i18 | 0) == 3) break;
      HEAP32[i9 + (i18 << 2) >> 2] = 0;
      i18 = i18 + 1 | 0;
     }
     i18 = i3 + 4 | 0;
     i19 = HEAP32[i18 >> 2] | 0;
     L16 : do if ((HEAP32[i3 >> 2] | 0) != (i19 | 0)) {
      i20 = i19 + -24 | 0;
      i21 = HEAP8[i20 + 11 >> 0] | 0;
      i22 = i21 << 24 >> 24 < 0;
      if (i22) i23 = HEAP32[i19 + -20 >> 2] | 0; else i23 = i21 & 255;
      if (i23) {
       if (!(HEAP8[i3 + 60 >> 0] | 0)) {
        if (i22) {
         i24 = HEAP32[i20 >> 2] | 0;
         i25 = HEAP32[i19 + -20 >> 2] | 0;
        } else {
         i24 = i20;
         i25 = i21 & 255;
        }
        if ((HEAP8[i24 + i25 + -1 >> 0] | 0) == 62) {
         if (i22) {
          i26 = HEAP32[i19 + -20 >> 2] | 0;
          i27 = HEAP32[i20 >> 2] | 0;
         } else {
          i26 = i21 & 255;
          i27 = i20;
         }
         if ((HEAP8[i27 + (i26 + -2) >> 0] | 0) != 45) {
          if (i22) {
           i28 = HEAP32[i19 + -20 >> 2] | 0;
           i29 = HEAP32[i20 >> 2] | 0;
          } else {
           i28 = i21 & 255;
           i29 = i20;
          }
          if ((HEAP8[i29 + (i28 + -2) >> 0] | 0) != 62) {
           i21 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i11, i2, i3) | 0;
           if ((i21 | 0) == (i11 | 0)) {
            i30 = i1;
            i31 = 0;
            break;
           }
           i22 = HEAP32[i18 >> 2] | 0;
           i32 = i22;
           if (((i22 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
            i30 = i1;
            i31 = 0;
            break;
           }
           i22 = i32 + -24 | 0;
           HEAP32[i10 >> 2] = HEAP32[i22 >> 2];
           HEAP32[i10 + 4 >> 2] = HEAP32[i22 + 4 >> 2];
           HEAP32[i10 + 8 >> 2] = HEAP32[i22 + 8 >> 2];
           i33 = 0;
           while (1) {
            if ((i33 | 0) == 3) break;
            HEAP32[i22 + (i33 << 2) >> 2] = 0;
            i33 = i33 + 1 | 0;
           }
           i33 = i32 + -12 | 0;
           i22 = i9 + 11 | 0;
           if ((HEAP8[i22 >> 0] | 0) < 0) {
            i34 = HEAP32[i9 >> 2] | 0;
            HEAP8[i5 >> 0] = 0;
            __ZNSt3__211char_traitsIcE6assignERcRKc(i34, i5);
            HEAP32[i9 + 4 >> 2] = 0;
           } else {
            HEAP8[i5 >> 0] = 0;
            __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i5);
            HEAP8[i22 >> 0] = 0;
           }
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i9);
           HEAP32[i9 >> 2] = HEAP32[i33 >> 2];
           HEAP32[i9 + 4 >> 2] = HEAP32[i33 + 4 >> 2];
           HEAP32[i9 + 8 >> 2] = HEAP32[i33 + 8 >> 2];
           i34 = 0;
           while (1) {
            if ((i34 | 0) == 3) break;
            HEAP32[i33 + (i34 << 2) >> 2] = 0;
            i34 = i34 + 1 | 0;
           }
           i34 = HEAP8[i22 >> 0] | 0;
           if (!((i34 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i34 & 255) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i10, 32);
           i34 = HEAP32[i18 >> 2] | 0;
           i33 = 0;
           while (1) {
            if ((i33 | 0) == -1) break;
            i32 = i33 + -1 | 0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i34 + (i32 * 24 | 0) | 0);
            i33 = i32;
           }
           HEAP32[i18 >> 2] = i34 + -24;
           i33 = HEAP8[i10 + 11 >> 0] | 0;
           i22 = i33 << 24 >> 24 < 0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm(i34 + -48 | 0, 0, i22 ? HEAP32[i10 >> 2] | 0 : i10, i22 ? HEAP32[i10 + 4 >> 2] | 0 : i33 & 255) | 0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
           i35 = i21;
           i36 = (HEAP32[i18 >> 2] | 0) + -24 | 0;
          } else {
           i35 = i11;
           i36 = i20;
          }
         } else {
          i35 = i11;
          i36 = i20;
         }
        } else {
         i35 = i11;
         i36 = i20;
        }
       } else {
        i35 = i11;
        i36 = i20;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i36, 40);
       if ((i35 | 0) != (i2 | 0) ? (HEAP8[i35 >> 0] | 0) == 118 : 0) {
        i37 = i35 + 1 | 0;
        i38 = HEAP32[i3 >> 2] | 0;
        i39 = HEAP32[i18 >> 2] | 0;
       } else i40 = 50;
       do if ((i40 | 0) == 50) {
        i33 = i5 + 11 | 0;
        i22 = i5 + 4 | 0;
        i32 = i10 + 11 | 0;
        i41 = i10 + 4 | 0;
        i42 = 1;
        i43 = i35;
        L67 : while (1) {
         i44 = i43;
         while (1) {
          i45 = ((HEAP32[i18 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
          i46 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i44, i2, i3) | 0;
          i47 = HEAP32[i18 >> 2] | 0;
          i48 = HEAP32[i3 >> 2] | 0;
          i49 = (i47 - i48 | 0) / 24 | 0;
          if ((i46 | 0) == (i44 | 0)) {
           i40 = 74;
           break L67;
          }
          if (i49 >>> 0 > i45 >>> 0) break; else i44 = i46;
         }
         HEAP32[i5 >> 2] = 0;
         HEAP32[i5 + 4 >> 2] = 0;
         HEAP32[i5 + 8 >> 2] = 0;
         i50 = 0;
         while (1) {
          if ((i50 | 0) == 3) break;
          HEAP32[i5 + (i50 << 2) >> 2] = 0;
          i50 = i50 + 1 | 0;
         }
         i50 = i45;
         while (1) {
          if (i50 >>> 0 >= i49 >>> 0) break;
          i51 = HEAP8[i33 >> 0] | 0;
          if ((i51 << 24 >> 24 < 0 ? HEAP32[i22 >> 2] | 0 : i51 & 255) | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5, 50467) | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i10, (HEAP32[i3 >> 2] | 0) + (i50 * 24 | 0) | 0);
          i51 = HEAP8[i32 >> 0] | 0;
          i52 = i51 << 24 >> 24 < 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i5, i52 ? HEAP32[i10 >> 2] | 0 : i10, i52 ? HEAP32[i41 >> 2] | 0 : i51 & 255) | 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
          i50 = i50 + 1 | 0;
         }
         i50 = i45;
         while (1) {
          if (i50 >>> 0 >= i49 >>> 0) break;
          i51 = HEAP32[i18 >> 2] | 0;
          i52 = 0;
          while (1) {
           if ((i52 | 0) == -1) break;
           i53 = i52 + -1 | 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i51 + (i53 * 24 | 0) | 0);
           i52 = i53;
          }
          HEAP32[i18 >> 2] = i51 + -24;
          i50 = i50 + 1 | 0;
         }
         i50 = HEAP8[i33 >> 0] | 0;
         i52 = HEAP32[i22 >> 2] | 0;
         i53 = i50 & 255;
         if (!((i50 << 24 >> 24 < 0 ? i52 : i53) | 0)) i54 = i42; else {
          i55 = HEAP32[i18 >> 2] | 0;
          if ((HEAP32[i3 >> 2] | 0) == (i55 | 0)) {
           i40 = 86;
           break;
          }
          if (i42) {
           i56 = i53;
           i57 = i55;
           i58 = i50;
           i59 = i52;
          } else {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i55 + -24 | 0, 50467) | 0;
           i55 = HEAP8[i33 >> 0] | 0;
           i56 = i55 & 255;
           i57 = HEAP32[i18 >> 2] | 0;
           i58 = i55;
           i59 = HEAP32[i22 >> 2] | 0;
          }
          i55 = i58 << 24 >> 24 < 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i57 + -24 | 0, i55 ? HEAP32[i5 >> 2] | 0 : i5, i55 ? i59 : i56) | 0;
          i54 = 0;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
         i42 = i54;
         i43 = i46;
        }
        if ((i40 | 0) == 74) {
         i37 = i44;
         i38 = i48;
         i39 = i47;
         break;
        } else if ((i40 | 0) == 86) {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
         i30 = i1;
         i31 = 0;
         break L16;
        }
       } while (0);
       if ((i38 | 0) != (i39 | 0)) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i39 + -24 | 0, 41);
        if (i15 & 1 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i18 >> 2] | 0) + -24 | 0, 50190) | 0;
        if (i15 & 2 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i18 >> 2] | 0) + -24 | 0, 50197) | 0;
        if (i15 & 4 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i18 >> 2] | 0) + -24 | 0, 50207) | 0;
        switch (i16 | 0) {
        case 1:
         {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i18 >> 2] | 0) + -24 | 0, 51671) | 0;
          break;
         }
        case 2:
         {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i18 >> 2] | 0) + -24 | 0, 51674) | 0;
          break;
         }
        default:
         {}
        }
        i20 = HEAP8[i9 + 11 >> 0] | 0;
        i21 = i20 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i18 >> 2] | 0) + -24 | 0, i21 ? HEAP32[i9 >> 2] | 0 : i9, i21 ? HEAP32[i9 + 4 >> 2] | 0 : i20 & 255) | 0;
        i30 = i37;
        i31 = 1;
       } else {
        i30 = i1;
        i31 = 0;
       }
      } else {
       i30 = i1;
       i31 = 0;
      }
     } else {
      i30 = i1;
      i31 = 0;
     } while (0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
     __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev(i8);
     if (i31) i17 = i30; else {
      i13 = i30;
      i14 = 0;
      break L6;
     }
    } else i17 = i2; else i17 = i1; while (0);
    i13 = i17;
    i14 = 1;
   }
  } while (0);
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev(i7);
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev(i6);
  if (i14) {
   i60 = i13;
   i40 = 90;
  } else i61 = i1;
 } else {
  i60 = i1;
  i40 = 90;
 }
 if ((i40 | 0) == 90) i61 = i60;
 STACKTOP = i4;
 return i61 | 0;
}

function __ZNSt3__213__nth_elementIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_S9_T_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, d31 = 0.0, d32 = 0.0, i33 = 0, i34 = 0, i35 = 0, d36 = 0.0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, d41 = 0.0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, d49 = 0.0, i50 = 0, i51 = 0, d52 = 0.0, i53 = 0, d54 = 0.0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, d61 = 0.0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i6 = i5 + 32 | 0;
 i7 = i5 + 28 | 0;
 i8 = i5 + 24 | 0;
 i9 = i5 + 20 | 0;
 i10 = i5 + 16 | 0;
 i11 = i5 + 12 | 0;
 i12 = i5 + 8 | 0;
 i13 = i5 + 4 | 0;
 i14 = i5;
 i15 = HEAP32[i2 >> 2] | 0;
 i16 = HEAP32[i3 >> 2] | 0;
 if ((i15 | 0) == (i16 | 0)) {
  STACKTOP = i5;
  return;
 }
 i17 = HEAP32[i2 >> 2] | 0;
 i2 = i16;
 i16 = HEAP32[i1 >> 2] | 0;
 i18 = i15;
 L4 : while (1) {
  i15 = i2;
  i19 = i2 + -8 | 0;
  i20 = i19;
  i21 = i2 + -16 | 0;
  i22 = i2 + -4 | 0;
  i23 = (i18 | 0) == (i2 | 0);
  i24 = i16;
  L6 : while (1) {
   i25 = i24;
   i26 = i15 - i24 | 0;
   i27 = i26 >> 3;
   switch (i27 | 0) {
   case 2:
    {
     i28 = 5;
     break L4;
     break;
    }
   case 3:
    {
     i28 = 10;
     break L4;
     break;
    }
   case 1:
   case 0:
    {
     i28 = 108;
     break L4;
     break;
    }
   default:
    {}
   }
   if ((i26 | 0) < 64) {
    i28 = 12;
    break L4;
   }
   i26 = i27 >>> 1;
   i29 = i25 + (i26 << 3) | 0;
   HEAP32[i12 >> 2] = i24;
   HEAP32[i13 >> 2] = i29;
   HEAP32[i14 >> 2] = i20;
   HEAP32[i8 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i7 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i6 >> 2] = HEAP32[i14 >> 2];
   i30 = __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_(i8, i7, i6, i4) | 0;
   i27 = i24;
   d31 = +HEAPF32[i29 >> 2];
   d32 = +HEAPF32[i27 >> 2];
   if (d31 < d32) {
    i28 = 65;
    break;
   }
   if (!(d32 < d31) ? (HEAP32[i25 + (i26 << 3) + 4 >> 2] | 0) >>> 0 < (HEAP32[i27 + 4 >> 2] | 0) >>> 0 : 0) {
    i28 = 65;
    break;
   }
   if ((i21 | 0) != (i27 | 0)) {
    i33 = i25 + (i26 << 3) + 4 | 0;
    i34 = i19;
    i35 = i21;
    while (1) {
     d36 = +HEAPF32[i35 >> 2];
     if (d31 < d36) {
      i28 = 59;
      break L6;
     }
     if (!(d36 < d31) ? (i37 = HEAP32[i34 + -4 >> 2] | 0, (HEAP32[i33 >> 2] | 0) >>> 0 < i37 >>> 0) : 0) {
      i28 = 62;
      break L6;
     }
     i26 = i35 + -8 | 0;
     if ((i26 | 0) == (i27 | 0)) break; else {
      i38 = i35;
      i35 = i26;
      i34 = i38;
     }
    }
   }
   i33 = i27 + 8 | 0;
   i38 = i33;
   d31 = +HEAPF32[i19 >> 2];
   d32 = +HEAPF32[i25 >> 2];
   do if (d31 < d32) i39 = i38; else {
    if (!(d32 < d31) ? (HEAP32[i22 >> 2] | 0) >>> 0 < (HEAP32[i25 + 4 >> 2] | 0) >>> 0 : 0) {
     i39 = i38;
     break;
    }
    if ((i33 | 0) == (i19 | 0)) {
     i28 = 108;
     break L4;
    }
    i26 = i25 + 4 | 0;
    i40 = i33;
    while (1) {
     d41 = +HEAPF32[i40 >> 2];
     if (d41 < d32) {
      i28 = 36;
      break;
     }
     if (!(d32 < d41) ? (i42 = HEAP32[i40 + 4 >> 2] | 0, i42 >>> 0 < (HEAP32[i26 >> 2] | 0) >>> 0) : 0) {
      i28 = 39;
      break;
     }
     i43 = i40 + 8 | 0;
     if ((i43 | 0) == (i19 | 0)) {
      i28 = 108;
      break L4;
     } else i40 = i43;
    }
    if ((i28 | 0) == 36) {
     i28 = 0;
     i26 = i40 + 4 | 0;
     i44 = i26;
     i45 = HEAP32[i26 >> 2] | 0;
    } else if ((i28 | 0) == 39) {
     i28 = 0;
     i44 = i40 + 4 | 0;
     i45 = i42;
    }
    HEAPF32[i40 >> 2] = d31;
    HEAPF32[i19 >> 2] = d41;
    HEAP32[i44 >> 2] = HEAP32[i22 >> 2];
    HEAP32[i22 >> 2] = i45;
    i39 = i40 + 8 | 0;
   } while (0);
   if ((i19 | 0) == (i39 | 0)) {
    i28 = 108;
    break L4;
   }
   i33 = i25 + 4 | 0;
   i38 = i20;
   i27 = i39;
   while (1) {
    i26 = i38;
    i43 = i27;
    d31 = +HEAPF32[i43 >> 2];
    d32 = +HEAPF32[i25 >> 2];
    L43 : do if (d31 < d32) {
     i46 = i43;
     i47 = i27;
    } else {
     i48 = i27;
     d49 = d31;
     i50 = i43;
     while (1) {
      if (!(d32 < d49) ? (HEAP32[i50 + 4 >> 2] | 0) >>> 0 < (HEAP32[i33 >> 2] | 0) >>> 0 : 0) {
       i46 = i50;
       i47 = i48;
       break L43;
      }
      i51 = i50 + 8 | 0;
      d52 = +HEAPF32[i51 >> 2];
      if (d52 < d32) break; else {
       i48 = i51;
       d49 = d52;
       i50 = i51;
      }
     }
     i46 = i51;
     i47 = i51;
    } while (0);
    i43 = i26;
    while (1) {
     i53 = i43 + -8 | 0;
     d54 = +HEAPF32[i53 >> 2];
     if (!(d54 < d32)) {
      if (d32 < d54) break;
      if ((HEAP32[i43 + -4 >> 2] | 0) >>> 0 >= (HEAP32[i33 >> 2] | 0) >>> 0) break;
     }
     i43 = i53;
    }
    if (i53 >>> 0 <= i46 >>> 0) break;
    i26 = HEAP32[i47 >> 2] | 0;
    HEAPF32[i47 >> 2] = d54;
    HEAP32[i53 >> 2] = i26;
    i26 = i46 + 4 | 0;
    i40 = i43 + -4 | 0;
    i50 = HEAP32[i26 >> 2] | 0;
    HEAP32[i26 >> 2] = HEAP32[i40 >> 2];
    HEAP32[i40 >> 2] = i50;
    i38 = i53;
    i27 = i46 + 8 | 0;
   }
   if (i18 >>> 0 < i46 >>> 0) {
    i28 = 108;
    break L4;
   }
   HEAP32[i1 >> 2] = i47;
   if (i23) {
    i28 = 108;
    break L4;
   } else i24 = i47;
  }
  if ((i28 | 0) == 59) {
   i28 = 0;
   i23 = i34 + -4 | 0;
   i55 = i23;
   i56 = HEAP32[i23 >> 2] | 0;
   i28 = 63;
  } else if ((i28 | 0) == 62) {
   i28 = 0;
   i55 = i34 + -4 | 0;
   i56 = i37;
   i28 = 63;
  } else if ((i28 | 0) == 65) {
   i28 = 0;
   i57 = i30;
   i58 = i19;
   i59 = i24;
  }
  if ((i28 | 0) == 63) {
   i28 = 0;
   i23 = i24;
   i20 = HEAP32[i24 >> 2] | 0;
   HEAPF32[i24 >> 2] = d36;
   HEAP32[i35 >> 2] = i20;
   i20 = i23 + 4 | 0;
   i22 = HEAP32[i20 >> 2] | 0;
   HEAP32[i20 >> 2] = i56;
   HEAP32[i55 >> 2] = i22;
   i57 = i30 + 1 | 0;
   i58 = i35;
   i59 = i23;
  }
  i23 = i59 + 8 | 0;
  if (i23 >>> 0 < i58 >>> 0) {
   i22 = i57;
   i20 = i58;
   i21 = i29;
   i15 = 1;
   while (1) {
    i27 = i21;
    i38 = i27 + 4 | 0;
    d32 = +HEAPF32[i27 >> 2];
    i60 = i15;
    while (1) {
     d61 = +HEAPF32[i59 + (i60 << 3) >> 2];
     if (!(d32 < d61)) {
      if (d61 < d32) break;
      if ((HEAP32[i38 >> 2] | 0) >>> 0 >= (HEAP32[i59 + (i60 << 3) + 4 >> 2] | 0) >>> 0) break;
     }
     i60 = i60 + 1 | 0;
    }
    i62 = i59 + (i60 << 3) | 0;
    i33 = i20 + -8 | 0;
    i25 = i33;
    d31 = +HEAPF32[i33 >> 2];
    L80 : do if (d32 < d31) {
     i63 = i25;
     i64 = i33;
     i65 = i20;
    } else {
     i50 = i20;
     d49 = d31;
     i40 = i33;
     i26 = i25;
     while (1) {
      if (!(d49 < d32) ? (HEAP32[i38 >> 2] | 0) >>> 0 < (HEAP32[i50 + -4 >> 2] | 0) >>> 0 : 0) {
       i63 = i26;
       i64 = i40;
       i65 = i50;
       break L80;
      }
      i66 = i40 + -8 | 0;
      d49 = +HEAPF32[i66 >> 2];
      if (d32 < d49) break; else {
       i48 = i40;
       i40 = i66;
       i26 = i66;
       i50 = i48;
      }
     }
     i63 = i66;
     i64 = i66;
     i65 = i40;
    } while (0);
    if (i64 >>> 0 <= i62 >>> 0) break;
    HEAP32[i62 >> 2] = HEAP32[i64 >> 2];
    HEAPF32[i64 >> 2] = d61;
    i38 = i59 + (i60 << 3) + 4 | 0;
    i25 = i65 + -4 | 0;
    i33 = HEAP32[i38 >> 2] | 0;
    HEAP32[i38 >> 2] = HEAP32[i25 >> 2];
    HEAP32[i25 >> 2] = i33;
    i22 = i22 + 1 | 0;
    i20 = i63;
    i21 = (i62 | 0) == (i27 | 0) ? i63 : i21;
    i15 = i60 + 1 | 0;
   }
   i67 = i22;
   i68 = i21;
   i69 = i60;
   i70 = i62;
  } else {
   i67 = i57;
   i68 = i29;
   i69 = 1;
   i70 = i23;
  }
  i15 = i70;
  do if ((i68 | 0) == (i70 | 0)) i71 = i67; else {
   d32 = +HEAPF32[i70 >> 2];
   d31 = +HEAPF32[i68 >> 2];
   if (!(d32 < d31)) {
    if (d31 < d32) {
     i71 = i67;
     break;
    }
    i20 = i59 + (i69 << 3) + 4 | 0;
    i33 = HEAP32[i20 >> 2] | 0;
    i25 = i68 + 4 | 0;
    i38 = HEAP32[i25 >> 2] | 0;
    if (i33 >>> 0 < i38 >>> 0) {
     i72 = i25;
     i73 = i20;
     i74 = i38;
     i75 = i33;
    } else {
     i71 = i67;
     break;
    }
   } else {
    i33 = i59 + (i69 << 3) + 4 | 0;
    i38 = i68 + 4 | 0;
    i72 = i38;
    i73 = i33;
    i74 = HEAP32[i38 >> 2] | 0;
    i75 = HEAP32[i33 >> 2] | 0;
   }
   HEAPF32[i70 >> 2] = d31;
   HEAPF32[i68 >> 2] = d32;
   HEAP32[i73 >> 2] = i74;
   HEAP32[i72 >> 2] = i75;
   i71 = i67 + 1 | 0;
  } while (0);
  if ((i18 | 0) == (i70 | 0)) {
   i28 = 108;
   break;
  }
  L101 : do if (!i71) if (i18 >>> 0 < i70 >>> 0) {
   if ((i69 | 0) == 1) {
    i28 = 108;
    break L4;
   }
   i21 = i23;
   i22 = i59;
   while (1) {
    d32 = +HEAPF32[i22 >> 2];
    d31 = +HEAPF32[i22 + 8 >> 2];
    if (d32 < d31) break L101;
    if (!(d31 < d32) ? (HEAP32[i22 + 4 >> 2] | 0) >>> 0 < (HEAP32[i22 + 12 >> 2] | 0) >>> 0 : 0) break L101;
    i33 = i21 + 8 | 0;
    if ((i33 | 0) == (i70 | 0)) {
     i28 = 108;
     break L4;
    } else {
     i38 = i21;
     i21 = i33;
     i22 = i38;
    }
   }
  } else {
   i22 = i70 + 8 | 0;
   if ((i22 | 0) == (i2 | 0)) {
    i28 = 108;
    break L4;
   }
   i21 = i22;
   i22 = i70;
   while (1) {
    d32 = +HEAPF32[i22 >> 2];
    d31 = +HEAPF32[i22 + 8 >> 2];
    if (d32 < d31) break L101;
    if (!(d31 < d32) ? (HEAP32[i22 + 4 >> 2] | 0) >>> 0 < (HEAP32[i22 + 12 >> 2] | 0) >>> 0 : 0) break L101;
    i27 = i21 + 8 | 0;
    if ((i27 | 0) == (i2 | 0)) {
     i28 = 108;
     break L4;
    } else {
     i38 = i21;
     i21 = i27;
     i22 = i38;
    }
   }
  } while (0);
  if (i18 >>> 0 < i70 >>> 0) {
   HEAP32[i3 >> 2] = i15;
   i76 = i24;
  } else {
   i23 = i70 + 8 | 0;
   HEAP32[i1 >> 2] = i23;
   i76 = i23;
  }
  i23 = HEAP32[i3 >> 2] | 0;
  if ((i17 | 0) == (i23 | 0)) {
   i28 = 108;
   break;
  } else {
   i2 = i23;
   i16 = i76;
   i18 = i17;
  }
 }
 if ((i28 | 0) == 5) {
  i17 = i24;
  i18 = i2 + -8 | 0;
  HEAP32[i3 >> 2] = i18;
  d61 = +HEAPF32[i17 >> 2];
  d36 = +HEAPF32[i18 >> 2];
  if (!(d61 < d36)) {
   if (d36 < d61) {
    STACKTOP = i5;
    return;
   }
   i76 = i17 + 4 | 0;
   i16 = HEAP32[i76 >> 2] | 0;
   i1 = i2 + -4 | 0;
   i70 = HEAP32[i1 >> 2] | 0;
   if (i16 >>> 0 < i70 >>> 0) {
    i77 = i76;
    i78 = i1;
    i79 = i70;
    i80 = i16;
   } else {
    STACKTOP = i5;
    return;
   }
  } else {
   i16 = i17 + 4 | 0;
   i70 = i2 + -4 | 0;
   i77 = i16;
   i78 = i70;
   i79 = HEAP32[i70 >> 2] | 0;
   i80 = HEAP32[i16 >> 2] | 0;
  }
  HEAPF32[i17 >> 2] = d36;
  HEAPF32[i18 >> 2] = d61;
  HEAP32[i77 >> 2] = i79;
  HEAP32[i78 >> 2] = i80;
  STACKTOP = i5;
  return;
 } else if ((i28 | 0) == 10) {
  HEAP32[i9 >> 2] = i24;
  HEAP32[i10 >> 2] = i24 + 8;
  i80 = i2 + -8 | 0;
  HEAP32[i3 >> 2] = i80;
  HEAP32[i11 >> 2] = i80;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i7 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i6 >> 2] = HEAP32[i11 >> 2];
  __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_(i8, i7, i6, i4) | 0;
  STACKTOP = i5;
  return;
 } else if ((i28 | 0) == 12) {
  i4 = i24;
  if ((i19 | 0) == (i4 | 0)) {
   STACKTOP = i5;
   return;
  }
  i24 = i4;
  do {
   if ((i24 | 0) != (i2 | 0)) {
    i4 = i24 + 8 | 0;
    if ((i4 | 0) != (i2 | 0)) {
     i6 = i24;
     i7 = i24;
     i8 = i24;
     i11 = i4;
     while (1) {
      d61 = +HEAPF32[i8 >> 2];
      d36 = +HEAPF32[i11 >> 2];
      if (!(d61 < d36)) if (!(d36 < d61) ? (HEAP32[i8 + 4 >> 2] | 0) >>> 0 < (HEAP32[i7 + 12 >> 2] | 0) >>> 0 : 0) i28 = 20; else {
       i81 = i6;
       i82 = i8;
      } else i28 = 20;
      if ((i28 | 0) == 20) {
       i28 = 0;
       i81 = i11;
       i82 = i11;
      }
      i4 = i11 + 8 | 0;
      if ((i4 | 0) == (i2 | 0)) {
       i83 = i81;
       i28 = 22;
       break;
      } else {
       i10 = i11;
       i6 = i81;
       i8 = i82;
       i11 = i4;
       i7 = i10;
      }
     }
    }
   } else {
    i83 = i2;
    i28 = 22;
   }
   if ((i28 | 0) == 22 ? (i28 = 0, (i83 | 0) != (i24 | 0)) : 0) {
    i7 = HEAP32[i24 >> 2] | 0;
    HEAP32[i24 >> 2] = HEAP32[i83 >> 2];
    HEAP32[i83 >> 2] = i7;
    i7 = i24 + 4 | 0;
    i11 = i83 + 4 | 0;
    i8 = HEAP32[i7 >> 2] | 0;
    HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i11 >> 2] = i8;
   }
   i24 = i24 + 8 | 0;
  } while ((i24 | 0) != (i19 | 0));
  STACKTOP = i5;
  return;
 } else if ((i28 | 0) == 108) {
  STACKTOP = i5;
  return;
 }
}

function __ZN6vision26PreemptiveRobustHomographyIfEEbPT_PKS1_S4_iS4_iRNSt3__26vectorIS1_NS5_9allocatorIS1_EEEERNS6_IiNS7_IiEEEERNS6_INS5_4pairIS1_iEENS7_ISF_EEEES1_iii(i1, i2, i3, i4, i5, i6, i7, i8, i9, d10, i11, i12, i13) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 d10 = +d10;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, d20 = 0.0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, d35 = 0.0, d36 = 0.0, d37 = 0.0, d38 = 0.0, d39 = 0.0, i40 = 0, i41 = 0, i42 = 0, d43 = 0.0, i44 = 0, i45 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i15 = i14;
 if ((HEAP32[i7 + 4 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) >> 2 >>> 0 < (i11 * 9 | 0) >>> 0) {
  i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29663, 57) | 0, 29721, 129) | 0, 33554, 6) | 0, 119) | 0, 33561, 2) | 0, 29851, 49) | 0;
  __ZNKSt3__28ios_base6getlocEv(i15, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58484) | 0;
  i18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
  __ZNSt3__26localeD2Ev(i15);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i18) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 i16 = HEAP32[i8 >> 2] | 0;
 i18 = i16;
 if ((HEAP32[i8 + 4 >> 2] | 0) - i16 >> 2 >>> 0 < i4 >>> 0) {
  i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29901, 49) | 0, 29721, 129) | 0, 33554, 6) | 0, 120) | 0, 33561, 2) | 0, 29951, 41) | 0;
  __ZNKSt3__28ios_base6getlocEv(i15, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58484) | 0;
  i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i15);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i17) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if ((HEAP32[i9 + 4 >> 2] | 0) - (HEAP32[i9 >> 2] | 0) >> 3 >>> 0 < i11 >>> 0) {
  i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29993, 61) | 0, 29721, 129) | 0, 33554, 6) | 0, 121) | 0, 33561, 2) | 0, 30055, 53) | 0;
  __ZNKSt3__28ios_base6getlocEv(i15, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
  __ZNSt3__26localeD2Ev(i15);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
  _abort();
 }
 if ((i4 | 0) < 4) {
  i19 = 0;
  STACKTOP = i14;
  return i19 | 0;
 }
 d20 = d10 * d10;
 i16 = (i13 | 0) < (i4 | 0);
 HEAP32[i18 >> 2] = 0;
 i8 = i4 + -1 | 0;
 i17 = 1;
 i21 = 0;
 while (1) {
  i21 = i21 + 1 | 0;
  HEAP32[i18 + (i17 << 2) >> 2] = i21;
  if ((i21 | 0) == (i8 | 0)) break; else i17 = i17 + 1 | 0;
 }
 d10 = 1.0 / d20;
 i17 = i16 ? i13 : i4;
 i13 = (i4 | 0) > 0;
 if (i13) {
  i16 = 0;
  i8 = 1234;
  while (1) {
   i21 = (i8 * 214013 | 0) + 2531011 | 0;
   i22 = i18 + (i16 << 2) | 0;
   i23 = i18 + (((i21 >>> 16 & 32767 | 0) % (i4 | 0) | 0) << 2) | 0;
   i24 = HEAP32[i22 >> 2] | 0;
   HEAP32[i22 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i23 >> 2] = i24;
   i16 = i16 + 1 | 0;
   if ((i16 | 0) == (i4 | 0)) {
    i25 = i21;
    break;
   } else i8 = i21;
  }
 } else i25 = 1234;
 if (!((i11 | 0) > 0 & (i12 | 0) > 0)) {
  i19 = 0;
  STACKTOP = i14;
  return i19 | 0;
 }
 i8 = i18 + 4 | 0;
 i16 = i18 + 8 | 0;
 i21 = i18 + 12 | 0;
 if ((i6 | 0) > 0) {
  i24 = 0;
  i23 = 0;
  i22 = i25;
  while (1) {
   i26 = (i22 * 214013 | 0) + 2531011 | 0;
   i27 = i18 + (((i26 >>> 16 & 32767 | 0) % (i4 | 0) | 0) << 2) | 0;
   i28 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = HEAP32[i27 >> 2];
   HEAP32[i27 >> 2] = i28;
   i28 = (i26 * 214013 | 0) + 2531011 | 0;
   i26 = i18 + (((i28 >>> 16 & 32767 | 0) % (i4 | 0) | 0) << 2) | 0;
   i27 = HEAP32[i8 >> 2] | 0;
   HEAP32[i8 >> 2] = HEAP32[i26 >> 2];
   HEAP32[i26 >> 2] = i27;
   i27 = (i28 * 214013 | 0) + 2531011 | 0;
   i28 = i18 + (((i27 >>> 16 & 32767 | 0) % (i4 | 0) | 0) << 2) | 0;
   i26 = HEAP32[i16 >> 2] | 0;
   HEAP32[i16 >> 2] = HEAP32[i28 >> 2];
   HEAP32[i28 >> 2] = i26;
   i22 = (i27 * 214013 | 0) + 2531011 | 0;
   i27 = i18 + (((i22 >>> 16 & 32767 | 0) % (i4 | 0) | 0) << 2) | 0;
   i26 = HEAP32[i21 >> 2] | 0;
   HEAP32[i21 >> 2] = HEAP32[i27 >> 2];
   HEAP32[i27 >> 2] = i26;
   i26 = HEAP32[i18 >> 2] << 1;
   i27 = HEAP32[i8 >> 2] << 1;
   i28 = HEAP32[i16 >> 2] << 1;
   i29 = HEAP32[i21 >> 2] << 1;
   if (__ZN6vision40Homography4PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_S3_S3_(i2 + (i26 << 2) | 0, i2 + (i27 << 2) | 0, i2 + (i28 << 2) | 0, i2 + (i29 << 2) | 0, i3 + (i26 << 2) | 0, i3 + (i27 << 2) | 0, i3 + (i28 << 2) | 0, i3 + (i29 << 2) | 0) | 0 ? (i29 = i23 * 9 | 0, i28 = HEAP32[i18 >> 2] << 1, i27 = HEAP32[i8 >> 2] << 1, i26 = HEAP32[i16 >> 2] << 1, i30 = HEAP32[i21 >> 2] << 1, __ZN6vision22SolveHomography4PointsIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_((HEAP32[i7 >> 2] | 0) + (i29 << 2) | 0, i2 + (i28 << 2) | 0, i2 + (i27 << 2) | 0, i2 + (i26 << 2) | 0, i2 + (i30 << 2) | 0, i3 + (i28 << 2) | 0, i3 + (i27 << 2) | 0, i3 + (i26 << 2) | 0, i3 + (i30 << 2) | 0) | 0) : 0) i31 = i23 + ((__ZN6vision39HomographyPointsGeometricallyConsistentIfEEbPKT_S3_i((HEAP32[i7 >> 2] | 0) + (i29 << 2) | 0, i5, i6) | 0) & 1) | 0; else i31 = i23;
   i24 = i24 + 1 | 0;
   if (!((i31 | 0) < (i11 | 0) & (i24 | 0) < (i12 | 0))) {
    i32 = i31;
    break;
   } else i23 = i31;
  }
 } else {
  i31 = 0;
  i23 = 0;
  i24 = i25;
  while (1) {
   i25 = (i24 * 214013 | 0) + 2531011 | 0;
   i6 = i18 + (((i25 >>> 16 & 32767 | 0) % (i4 | 0) | 0) << 2) | 0;
   i5 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i6 >> 2] = i5;
   i5 = (i25 * 214013 | 0) + 2531011 | 0;
   i25 = i18 + (((i5 >>> 16 & 32767 | 0) % (i4 | 0) | 0) << 2) | 0;
   i6 = HEAP32[i8 >> 2] | 0;
   HEAP32[i8 >> 2] = HEAP32[i25 >> 2];
   HEAP32[i25 >> 2] = i6;
   i6 = (i5 * 214013 | 0) + 2531011 | 0;
   i5 = i18 + (((i6 >>> 16 & 32767 | 0) % (i4 | 0) | 0) << 2) | 0;
   i25 = HEAP32[i16 >> 2] | 0;
   HEAP32[i16 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i5 >> 2] = i25;
   i24 = (i6 * 214013 | 0) + 2531011 | 0;
   i6 = i18 + (((i24 >>> 16 & 32767 | 0) % (i4 | 0) | 0) << 2) | 0;
   i25 = HEAP32[i21 >> 2] | 0;
   HEAP32[i21 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i6 >> 2] = i25;
   i25 = HEAP32[i18 >> 2] << 1;
   i6 = HEAP32[i8 >> 2] << 1;
   i5 = HEAP32[i16 >> 2] << 1;
   i22 = HEAP32[i21 >> 2] << 1;
   if (__ZN6vision40Homography4PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_S3_S3_(i2 + (i25 << 2) | 0, i2 + (i6 << 2) | 0, i2 + (i5 << 2) | 0, i2 + (i22 << 2) | 0, i3 + (i25 << 2) | 0, i3 + (i6 << 2) | 0, i3 + (i5 << 2) | 0, i3 + (i22 << 2) | 0) | 0) {
    i22 = HEAP32[i18 >> 2] << 1;
    i5 = HEAP32[i8 >> 2] << 1;
    i6 = HEAP32[i16 >> 2] << 1;
    i25 = HEAP32[i21 >> 2] << 1;
    i33 = i23 + ((__ZN6vision22SolveHomography4PointsIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_((HEAP32[i7 >> 2] | 0) + (i23 * 9 << 2) | 0, i2 + (i22 << 2) | 0, i2 + (i5 << 2) | 0, i2 + (i6 << 2) | 0, i2 + (i25 << 2) | 0, i3 + (i22 << 2) | 0, i3 + (i5 << 2) | 0, i3 + (i6 << 2) | 0, i3 + (i25 << 2) | 0) | 0) & 1) | 0;
   } else i33 = i23;
   i31 = i31 + 1 | 0;
   if (!((i33 | 0) < (i11 | 0) & (i31 | 0) < (i12 | 0))) {
    i32 = i33;
    break;
   } else i23 = i33;
  }
 }
 if (!i32) {
  i19 = 0;
  STACKTOP = i14;
  return i19 | 0;
 }
 if ((i32 | 0) > 0) {
  i33 = HEAP32[i9 >> 2] | 0;
  i23 = 0;
  do {
   HEAPF32[i33 + (i23 << 3) >> 2] = 0.0;
   HEAP32[i33 + (i23 << 3) + 4 >> 2] = i23;
   i23 = i23 + 1 | 0;
  } while ((i23 | 0) != (i32 | 0));
  if ((i32 | 0) > 2 & i13) {
   i13 = 0;
   i23 = i32;
   while (1) {
    i33 = i4 - i13 | 0;
    i12 = (i17 | 0) < (i33 | 0) ? i17 : i33;
    i33 = i13;
    i13 = i12 + i13 | 0;
    i31 = HEAP32[i9 >> 2] | 0;
    if ((i23 | 0) > 0 ? (i11 = HEAP32[i7 >> 2] | 0, (i12 | 0) > 0) : 0) {
     i12 = 0;
     do {
      i21 = i11 + ((HEAP32[i31 + (i12 << 3) + 4 >> 2] | 0) * 9 << 2) | 0;
      i16 = i21 + 24 | 0;
      i8 = i21 + 28 | 0;
      i24 = i21 + 32 | 0;
      i25 = i21 + 4 | 0;
      i6 = i21 + 8 | 0;
      i5 = i21 + 12 | 0;
      i22 = i21 + 16 | 0;
      i29 = i21 + 20 | 0;
      i30 = i31 + (i12 << 3) | 0;
      i26 = i33;
      d20 = +HEAPF32[i30 >> 2];
      do {
       i27 = HEAP32[i18 + (i26 << 2) >> 2] << 1;
       i28 = i2 + (i27 << 2) | 0;
       i34 = i3 + (i27 << 2) | 0;
       d35 = +HEAPF32[i28 >> 2];
       d36 = +HEAPF32[i28 + 4 >> 2];
       d37 = +HEAPF32[i24 >> 2] + (d35 * +HEAPF32[i16 >> 2] + d36 * +HEAPF32[i8 >> 2]);
       d38 = (+HEAPF32[i6 >> 2] + (d35 * +HEAPF32[i21 >> 2] + d36 * +HEAPF32[i25 >> 2])) / d37 - +HEAPF32[i34 >> 2];
       d39 = (+HEAPF32[i29 >> 2] + (d35 * +HEAPF32[i5 >> 2] + d36 * +HEAPF32[i22 >> 2])) / d37 - +HEAPF32[i34 + 4 >> 2];
       d20 = d20 + +Math_log(+(d10 * (d38 * d38 + d39 * d39) + 1.0));
       HEAPF32[i30 >> 2] = d20;
       i26 = i26 + 1 | 0;
      } while ((i26 | 0) < (i13 | 0));
      i12 = i12 + 1 | 0;
     } while ((i12 | 0) != (i23 | 0));
    }
    __ZN6vision11PartialSortIfiEENSt3__24pairIT_T0_EEPS5_ii(i15, i31, i23, (i23 & 1) + -1 + ((i23 | 0) / 2 | 0) | 0);
    i12 = i23 >> 1;
    if (!((i23 | 0) > 5 & (i13 | 0) < (i4 | 0))) {
     i40 = i12;
     i41 = i9;
     break;
    } else i23 = i12;
   }
  } else i42 = 28;
 } else i42 = 28;
 if ((i42 | 0) == 28) {
  i40 = i32;
  i41 = i9;
 }
 i9 = HEAP32[i41 >> 2] | 0;
 i41 = HEAP32[i9 + 4 >> 2] | 0;
 if ((i40 | 0) > 1) {
  d10 = +HEAPF32[i9 >> 2];
  i32 = i41;
  i42 = 1;
  while (1) {
   d20 = +HEAPF32[i9 + (i42 << 3) >> 2];
   if (d20 < d10) {
    d43 = d20;
    i44 = HEAP32[i9 + (i42 << 3) + 4 >> 2] | 0;
   } else {
    d43 = d10;
    i44 = i32;
   }
   i42 = i42 + 1 | 0;
   if ((i42 | 0) == (i40 | 0)) {
    i45 = i44;
    break;
   } else {
    d10 = d43;
    i32 = i44;
   }
  }
 } else i45 = i41;
 i41 = i1;
 i44 = (HEAP32[i7 >> 2] | 0) + (i45 * 9 << 2) | 0;
 i45 = i41 + 36 | 0;
 do {
  HEAP32[i41 >> 2] = HEAP32[i44 >> 2];
  i41 = i41 + 4 | 0;
  i44 = i44 + 4 | 0;
 } while ((i41 | 0) < (i45 | 0));
 i44 = i1 + 32 | 0;
 d43 = 1.0 / +HEAPF32[i44 >> 2];
 HEAPF32[i1 >> 2] = +HEAPF32[i1 >> 2] * d43;
 i41 = i1 + 4 | 0;
 HEAPF32[i41 >> 2] = d43 * +HEAPF32[i41 >> 2];
 i41 = i1 + 8 | 0;
 HEAPF32[i41 >> 2] = d43 * +HEAPF32[i41 >> 2];
 i41 = i1 + 12 | 0;
 HEAPF32[i41 >> 2] = d43 * +HEAPF32[i41 >> 2];
 i41 = i1 + 16 | 0;
 HEAPF32[i41 >> 2] = d43 * +HEAPF32[i41 >> 2];
 i41 = i1 + 20 | 0;
 HEAPF32[i41 >> 2] = d43 * +HEAPF32[i41 >> 2];
 i41 = i1 + 24 | 0;
 HEAPF32[i41 >> 2] = d43 * +HEAPF32[i41 >> 2];
 i41 = i1 + 28 | 0;
 HEAPF32[i41 >> 2] = d43 * +HEAPF32[i41 >> 2];
 HEAPF32[i44 >> 2] = 1.0;
 i19 = 1;
 STACKTOP = i14;
 return i19 | 0;
}

function __ZN6vision21OrientationAssignment7computeEPfRiiifff(i1, i2, i3, i4, i5, d6, d7, d8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0, d18 = 0.0, i19 = 0, d20 = 0.0, i21 = 0, d22 = 0.0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, d31 = 0.0, d32 = 0.0, i33 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i9;
 if (!(d6 >= 0.0)) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25998, 29) | 0, 25832, 124) | 0, 33554, 6) | 0, 119) | 0, 33561, 2) | 0, 26028, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 i11 = (Math_imul(HEAP32[i1 + 4 >> 2] | 0, i4) | 0) + i5 | 0;
 i5 = HEAP32[i1 + 40 >> 2] | 0;
 i4 = i5 + (i11 << 5) | 0;
 i13 = HEAP32[i5 + (i11 << 5) + 4 >> 2] | 0;
 if (!(+(i13 >>> 0) > d6)) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26047, 79) | 0, 25832, 124) | 0, 33554, 6) | 0, 120) | 0, 33561, 2) | 0, 26127, 35) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if (!(d7 >= 0.0)) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26163, 29) | 0, 25832, 124) | 0, 33554, 6) | 0, 121) | 0, 33561, 2) | 0, 26193, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
  i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i14) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 i12 = HEAP32[i5 + (i11 << 5) + 8 >> 2] | 0;
 if (!(+(i12 >>> 0) > d7)) {
  i14 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26212, 80) | 0, 25832, 124) | 0, 33554, 6) | 0, 122) | 0, 33561, 2) | 0, 26293, 36) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i14, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i14) | 0;
  _abort();
 }
 if ((HEAP32[i5 + (i11 << 5) + 16 >> 2] | 0) != 2) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26330, 40) | 0, 25832, 124) | 0, 33554, 6) | 0, 126) | 0, 33561, 2) | 0, 26371, 30) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
  i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i14) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 HEAP32[i3 >> 2] = 0;
 i11 = ~~(d6 + .5);
 i14 = ~~(d7 + .5);
 if ((i11 | 0) < 0) {
  STACKTOP = i9;
  return;
 }
 if (!((i14 | 0) > -1 & i13 >>> 0 > i11 >>> 0 & i12 >>> 0 > i14 >>> 0)) {
  STACKTOP = i9;
  return;
 }
 d17 = +HEAPF32[i1 + 12 >> 2] * d8;
 d8 = d17 < 1.0 ? 1.0 : d17;
 d17 = -1.0 / (d8 * d8 * 2.0);
 d18 = +HEAPF32[i1 + 16 >> 2] * d8;
 d8 = +Math_ceil(+(d18 * d18));
 i5 = ~~(d18 + .5);
 i16 = i11 - i5 | 0;
 i15 = i5 + i11 | 0;
 i11 = i14 - i5 | 0;
 i19 = i5 + i14 | 0;
 i14 = (i16 | 0) > 0 ? i16 : 0;
 i16 = i13 + -1 | 0;
 i13 = (i15 | 0) < (i16 | 0) ? i15 : i16;
 i16 = (i11 | 0) > 0 ? i11 : 0;
 i11 = i12 + -1 | 0;
 i12 = (i19 | 0) < (i11 | 0) ? i19 : i11;
 i11 = i1 + 28 | 0;
 i19 = HEAP32[i11 >> 2] | 0;
 _memset(i19 | 0, 0, (HEAP32[i1 + 32 >> 2] | 0) - i19 | 0) | 0;
 L22 : do if ((i16 | 0) <= (i12 | 0)) {
  i19 = i1 + 8 | 0;
  if ((i14 | 0) > (i13 | 0)) {
   i15 = i16;
   while (1) {
    __ZNK6vision5Image3getIfEEPKT_m(i4, i15) | 0;
    if ((i15 | 0) < (i12 | 0)) i15 = i15 + 1 | 0; else break L22;
   }
  }
  i15 = i16;
  while (1) {
   d18 = +(i15 | 0) - d7;
   d20 = d18 * d18;
   i5 = __ZNK6vision5Image3getIfEEPKT_m(i4, i15) | 0;
   i21 = i14;
   while (1) {
    d18 = +(i21 | 0) - d6;
    d22 = d20 + d18 * d18;
    if (!(d22 > d8)) {
     i23 = i5 + (i21 << 1 << 2) | 0;
     d18 = d17 * d22;
     i24 = HEAP32[i19 >> 2] | 0;
     __ZN6vision25bilinear_histogram_updateEPfffi(HEAP32[i11 >> 2] | 0, +HEAPF32[i23 >> 2] * +(i24 | 0) * .159154943091895, +HEAPF32[i23 + 4 >> 2] * ((d18 * (d18 * (d18 * (d18 * (d18 * (d18 + 6.0) + 30.0) + 120.0) + 360.0) + 720.0) + 720.0) * .0013888888), i24);
    }
    if ((i21 | 0) < (i13 | 0)) i21 = i21 + 1 | 0; else break;
   }
   if ((i15 | 0) < (i12 | 0)) i15 = i15 + 1 | 0; else break;
  }
 } while (0);
 i12 = HEAP32[i1 + 20 >> 2] | 0;
 if ((i12 | 0) > 0) {
  i13 = HEAP32[i11 >> 2] | 0;
  i14 = i1 + 8 | 0;
  i4 = HEAP32[i14 >> 2] | 0;
  i16 = i4 + -1 | 0;
  i15 = i13 + (i16 << 2) | 0;
  i19 = i13 + 4 | 0;
  switch (i4 | 0) {
  case 1:
   {
    i21 = 0;
    d17 = +HEAPF32[i15 >> 2];
    do {
     d17 = +HEAPF32[i13 >> 2] * .2740686237812042 + (d17 * .45186275243759155 + d17 * .2740686237812042);
     HEAPF32[i15 >> 2] = d17;
     i21 = i21 + 1 | 0;
    } while ((i21 | 0) < (i12 | 0));
    i25 = i14;
    i26 = i4;
    break;
   }
  case 2:
   {
    i21 = 0;
    d17 = +HEAPF32[i15 >> 2];
    do {
     d8 = +HEAPF32[i13 >> 2];
     HEAPF32[i13 >> 2] = d8 * .45186275243759155 + d17 * .2740686237812042 + +HEAPF32[i19 >> 2] * .2740686237812042;
     d6 = d8 * .2740686237812042;
     d17 = d6 + (+HEAPF32[i15 >> 2] * .45186275243759155 + d6);
     HEAPF32[i15 >> 2] = d17;
     i21 = i21 + 1 | 0;
    } while ((i21 | 0) < (i12 | 0));
    i25 = i14;
    i26 = i4;
    break;
   }
  default:
   {
    i21 = 0;
    d17 = +HEAPF32[i15 >> 2];
    do {
     d6 = +HEAPF32[i13 >> 2];
     d8 = +HEAPF32[i19 >> 2];
     HEAPF32[i13 >> 2] = d6 * .45186275243759155 + d17 * .2740686237812042 + d8 * .2740686237812042;
     d7 = d8;
     d8 = d6;
     i5 = 1;
     while (1) {
      i24 = i5;
      i5 = i5 + 1 | 0;
      d20 = +HEAPF32[i13 + (i5 << 2) >> 2];
      HEAPF32[i13 + (i24 << 2) >> 2] = d7 * .45186275243759155 + d8 * .2740686237812042 + d20 * .2740686237812042;
      if ((i5 | 0) == (i16 | 0)) break; else {
       d18 = d7;
       d7 = d20;
       d8 = d18;
      }
     }
     d17 = d6 * .2740686237812042 + (+HEAPF32[i15 >> 2] * .45186275243759155 + d7 * .2740686237812042);
     HEAPF32[i15 >> 2] = d17;
     i21 = i21 + 1 | 0;
    } while ((i21 | 0) < (i12 | 0));
    i25 = i14;
    i26 = i4;
   }
  }
 } else {
  i4 = i1 + 8 | 0;
  i25 = i4;
  i26 = HEAP32[i4 >> 2] | 0;
 }
 i4 = (i26 | 0) > 0;
 if (!i4) {
  STACKTOP = i9;
  return;
 }
 i14 = HEAP32[i11 >> 2] | 0;
 i12 = 0;
 d17 = 0.0;
 do {
  d8 = +HEAPF32[i14 + (i12 << 2) >> 2];
  d17 = d8 > d17 ? d8 : d17;
  i12 = i12 + 1 | 0;
 } while ((i12 | 0) < (i26 | 0));
 if (d17 == 0.0) {
  STACKTOP = i9;
  return;
 }
 if (!(d17 > 0.0)) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26402, 37) | 0, 25832, 124) | 0, 33554, 6) | 0, 218) | 0, 33561, 2) | 0, 26440, 30) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
  i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if (!i4) {
  STACKTOP = i9;
  return;
 }
 i4 = HEAP32[i11 >> 2] | 0;
 i11 = i1 + 24 | 0;
 i1 = 0;
 i12 = i26;
 while (1) {
  d8 = +(i1 | 0);
  i26 = i1 + -1 | 0;
  d18 = +(i26 | 0);
  i21 = i1;
  i1 = i1 + 1 | 0;
  d20 = +(i1 | 0);
  d22 = +HEAPF32[i4 + (((i1 + i12 | 0) % (i12 | 0) | 0) << 2) >> 2];
  d27 = +HEAPF32[i4 + (i21 << 2) >> 2];
  if (d27 > d17 * +HEAPF32[i11 >> 2] ? (d28 = +HEAPF32[i4 + (((i26 + i12 | 0) % (i12 | 0) | 0) << 2) >> 2], d27 > d28 & d27 > d22) : 0) {
   d29 = d20 - d18;
   d30 = (d20 - d8) * d29;
   d20 = d18 - d8;
   d31 = d20 * d29;
   if (!(d20 == 0.0 | (d30 == 0.0 | d31 == 0.0)) ? (d29 = d28 - d27, d28 = (d22 - d27) / d30 - d29 / d31, !(d28 == 0.0)) : 0) d32 = -((d29 + (d8 * d8 - d18 * d18) * d28) / d20) / (d28 * 2.0); else d32 = d8;
   d8 = +(i12 | 0);
   i26 = HEAP32[i3 >> 2] | 0;
   HEAPF32[i2 + (i26 << 2) >> 2] = (d32 + .5 + d8) / d8 * 6.283185307179586 % 6.283185307179586;
   HEAP32[i3 >> 2] = i26 + 1;
   i33 = HEAP32[i25 >> 2] | 0;
  } else i33 = i12;
  if ((i1 | 0) >= (i33 | 0)) break; else i12 = i33;
 }
 STACKTOP = i9;
 return;
}

function _arLabelingSubEWZ(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, d44 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = HEAP32[i5 >> 2] | 0;
 i9 = i3 + -1 | 0;
 if ((i2 | 0) > 0) {
  i10 = i8;
  i11 = 0;
  i12 = i8 + ((Math_imul(i9, i2) | 0) << 1) | 0;
  while (1) {
   HEAP16[i12 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i2 | 0)) break; else {
    i10 = i10 + 2 | 0;
    i12 = i12 + 2 | 0;
   }
  }
 }
 i12 = i2 + -1 | 0;
 if ((i3 | 0) > 0) {
  i10 = i8;
  i11 = 0;
  i13 = i8 + (i12 << 1) | 0;
  while (1) {
   HEAP16[i13 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i3 | 0)) break; else {
    i10 = i10 + (i2 << 1) | 0;
    i13 = i13 + (i2 << 1) | 0;
   }
  }
  i13 = i5 + 1179664 | 0;
  i10 = i2 + 1 | 0;
  if ((i3 | 0) > 2) {
   i11 = (i2 | 0) > 2;
   i14 = 0 - i2 | 0;
   i15 = i1 + i10 | 0;
   i1 = i4 + i10 | 0;
   i4 = 1;
   i16 = 0;
   i17 = (HEAP32[i5 + 4 >> 2] | 0) + i10 | 0;
   i18 = i8 + (i10 << 1) | 0;
   L12 : while (1) {
    if (i11) {
     i10 = i1;
     i8 = i16;
     i19 = i17;
     i20 = i15;
     i21 = 1;
     i22 = i18;
     while (1) {
      do if ((HEAPU8[i20 >> 0] | 0) > (HEAPU8[i10 >> 0] | 0)) {
       HEAP8[i19 >> 0] = -1;
       i23 = i22 + (i14 << 1) | 0;
       i24 = HEAP16[i23 >> 1] | 0;
       if (i24 << 16 >> 16 > 0) {
        HEAP16[i22 >> 1] = i24;
        i25 = (i24 << 16 >> 16) * 7 | 0;
        i24 = i5 + 1310736 + (i25 + -7 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 1;
        i24 = i5 + 1310736 + (i25 + -6 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i21;
        i24 = i5 + 1310736 + (i25 + -5 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i4;
        HEAP32[i5 + 1310736 + (i25 + -1 << 2) >> 2] = i4;
        i26 = i8;
        break;
       }
       i25 = HEAP16[i23 + 2 >> 1] | 0;
       i24 = i25 << 16 >> 16;
       i27 = HEAP16[i23 + -2 >> 1] | 0;
       i23 = i27 << 16 >> 16;
       i28 = i27 << 16 >> 16 > 0;
       if (i25 << 16 >> 16 <= 0) {
        if (i28) {
         HEAP16[i22 >> 1] = i27;
         i27 = i23 * 7 | 0;
         i29 = i5 + 1310736 + (i27 + -7 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
         i29 = i5 + 1310736 + (i27 + -6 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i21;
         i29 = i5 + 1310736 + (i27 + -5 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i4;
         i29 = i5 + 1310736 + (i27 + -3 << 2) | 0;
         if ((HEAP32[i29 >> 2] | 0) < (i21 | 0)) HEAP32[i29 >> 2] = i21;
         HEAP32[i5 + 1310736 + (i27 + -1 << 2) >> 2] = i4;
         i26 = i8;
         break;
        }
        i27 = HEAP16[i22 + -2 >> 1] | 0;
        if (i27 << 16 >> 16 > 0) {
         HEAP16[i22 >> 1] = i27;
         i29 = (i27 << 16 >> 16) * 7 | 0;
         i27 = i5 + 1310736 + (i29 + -7 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
         i27 = i5 + 1310736 + (i29 + -6 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i21;
         i27 = i5 + 1310736 + (i29 + -5 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i4;
         i27 = i5 + 1310736 + (i29 + -3 << 2) | 0;
         if ((HEAP32[i27 >> 2] | 0) >= (i21 | 0)) {
          i26 = i8;
          break;
         }
         HEAP32[i27 >> 2] = i21;
         i26 = i8;
         break;
        } else {
         i27 = i8 + 1 | 0;
         if ((i8 | 0) > 32767) {
          i30 = 52;
          break L12;
         }
         HEAP16[i22 >> 1] = i27;
         HEAP32[i5 + 1179664 + (i8 << 2) >> 2] = i27 << 16 >> 16;
         i29 = i8 * 7 | 0;
         HEAP32[i5 + 1310736 + (i29 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i29 + 1 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 2 << 2) >> 2] = i4;
         HEAP32[i5 + 1310736 + (i29 + 3 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 4 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 5 << 2) >> 2] = i4;
         HEAP32[i5 + 1310736 + (i29 + 6 << 2) >> 2] = i4;
         i26 = i27;
         break;
        }
       }
       if (i28) {
        i28 = HEAP32[i5 + 1179664 + (i24 + -1 << 2) >> 2] | 0;
        i27 = HEAP32[i5 + 1179664 + (i23 + -1 << 2) >> 2] | 0;
        if ((i28 | 0) > (i27 | 0)) {
         HEAP16[i22 >> 1] = i27;
         if ((i8 | 0) > 0) {
          i23 = i13;
          i29 = 0;
          while (1) {
           if ((HEAP32[i23 >> 2] | 0) == (i28 | 0)) HEAP32[i23 >> 2] = i27;
           i29 = i29 + 1 | 0;
           if ((i29 | 0) == (i8 | 0)) {
            i31 = i27;
            break;
           } else i23 = i23 + 4 | 0;
          }
         } else i31 = i27;
        } else {
         HEAP16[i22 >> 1] = i28;
         if ((i28 | 0) < (i27 | 0) & (i8 | 0) > 0) {
          i23 = i13;
          i29 = 0;
          while (1) {
           if ((HEAP32[i23 >> 2] | 0) == (i27 | 0)) HEAP32[i23 >> 2] = i28;
           i29 = i29 + 1 | 0;
           if ((i29 | 0) == (i8 | 0)) {
            i31 = i28;
            break;
           } else i23 = i23 + 4 | 0;
          }
         } else i31 = i28;
        }
        i23 = (i31 << 16 >> 16) * 7 | 0;
        i29 = i5 + 1310736 + (i23 + -7 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
        i29 = i5 + 1310736 + (i23 + -6 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i21;
        i29 = i5 + 1310736 + (i23 + -5 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i4;
        HEAP32[i5 + 1310736 + (i23 + -1 << 2) >> 2] = i4;
        i26 = i8;
        break;
       }
       i23 = HEAP16[i22 + -2 >> 1] | 0;
       if (i23 << 16 >> 16 <= 0) {
        HEAP16[i22 >> 1] = i25;
        i29 = i24 * 7 | 0;
        i27 = i5 + 1310736 + (i29 + -7 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
        i27 = i5 + 1310736 + (i29 + -6 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i21;
        i27 = i5 + 1310736 + (i29 + -5 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i4;
        i27 = i5 + 1310736 + (i29 + -4 << 2) | 0;
        if ((HEAP32[i27 >> 2] | 0) > (i21 | 0)) HEAP32[i27 >> 2] = i21;
        HEAP32[i5 + 1310736 + (i29 + -1 << 2) >> 2] = i4;
        i26 = i8;
        break;
       }
       i29 = HEAP32[i5 + 1179664 + (i24 + -1 << 2) >> 2] | 0;
       i27 = HEAP32[i5 + 1179664 + ((i23 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i29 | 0) > (i27 | 0)) {
        HEAP16[i22 >> 1] = i27;
        if ((i8 | 0) > 0) {
         i23 = 0;
         i32 = i13;
         while (1) {
          if ((HEAP32[i32 >> 2] | 0) == (i29 | 0)) HEAP32[i32 >> 2] = i27;
          i23 = i23 + 1 | 0;
          if ((i23 | 0) == (i8 | 0)) {
           i33 = i27;
           break;
          } else i32 = i32 + 4 | 0;
         }
        } else i33 = i27;
       } else {
        HEAP16[i22 >> 1] = i29;
        if ((i29 | 0) < (i27 | 0) & (i8 | 0) > 0) {
         i32 = 0;
         i23 = i13;
         while (1) {
          if ((HEAP32[i23 >> 2] | 0) == (i27 | 0)) HEAP32[i23 >> 2] = i29;
          i32 = i32 + 1 | 0;
          if ((i32 | 0) == (i8 | 0)) {
           i33 = i29;
           break;
          } else i23 = i23 + 4 | 0;
         }
        } else i33 = i29;
       }
       i23 = (i33 << 16 >> 16) * 7 | 0;
       i32 = i5 + 1310736 + (i23 + -7 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + 1;
       i32 = i5 + 1310736 + (i23 + -6 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + i21;
       i32 = i5 + 1310736 + (i23 + -5 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + i4;
       i26 = i8;
      } else {
       HEAP16[i22 >> 1] = 0;
       HEAP8[i19 >> 0] = 0;
       i26 = i8;
      } while (0);
      i21 = i21 + 1 | 0;
      i32 = i20 + 1 | 0;
      i23 = i10 + 1 | 0;
      i27 = i22 + 2 | 0;
      i24 = i19 + 1 | 0;
      if ((i21 | 0) >= (i12 | 0)) {
       i34 = i32;
       i35 = i23;
       i36 = i26;
       i37 = i24;
       i38 = i27;
       break;
      } else {
       i10 = i23;
       i8 = i26;
       i19 = i24;
       i20 = i32;
       i22 = i27;
      }
     }
    } else {
     i34 = i15;
     i35 = i1;
     i36 = i16;
     i37 = i17;
     i38 = i18;
    }
    i4 = i4 + 1 | 0;
    if ((i4 | 0) >= (i9 | 0)) break; else {
     i15 = i34 + 2 | 0;
     i1 = i35 + 2 | 0;
     i16 = i36;
     i17 = i37 + 2 | 0;
     i18 = i38 + 4 | 0;
    }
   }
   if ((i30 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i39 = -1;
    STACKTOP = i6;
    return i39 | 0;
   }
   i7 = i5 + 8 | 0;
   i38 = i5 + 12 | 0;
   i18 = i5 + 655376 | 0;
   if ((i36 | 0) < 1) i40 = i7; else {
    i37 = 1;
    i17 = 1;
    i16 = i13;
    while (1) {
     i13 = HEAP32[i16 >> 2] | 0;
     if ((i13 | 0) == (i17 | 0)) {
      i41 = i37 + 1 | 0;
      i42 = i37;
     } else {
      i41 = i37;
      i42 = HEAP32[i5 + 1179664 + (i13 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i16 >> 2] = i42;
     if ((i17 | 0) == (i36 | 0)) break; else {
      i37 = i41;
      i17 = i17 + 1 | 0;
      i16 = i16 + 4 | 0;
     }
    }
    i16 = i41 + -1 | 0;
    HEAP32[i7 >> 2] = i16;
    if (!i16) {
     i39 = 0;
     STACKTOP = i6;
     return i39 | 0;
    }
    _memset(i38 | 0, 0, i16 << 2 | 0) | 0;
    _memset(i18 | 0, 0, i16 << 4 | 0) | 0;
    if ((i41 | 0) > 1) {
     i41 = 0;
     do {
      i18 = i41 << 2;
      HEAP32[i5 + 131084 + (i18 << 2) >> 2] = i2;
      HEAP32[i5 + 131084 + ((i18 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i18 | 2) << 2) >> 2] = i3;
      HEAP32[i5 + 131084 + ((i18 | 3) << 2) >> 2] = 0;
      i41 = i41 + 1 | 0;
     } while ((i41 | 0) != (i16 | 0));
    }
    if ((i36 | 0) > 0) {
     i41 = 0;
     do {
      i3 = (HEAP32[i5 + 1179664 + (i41 << 2) >> 2] | 0) + -1 | 0;
      i2 = i41 * 7 | 0;
      i18 = i5 + 12 + (i3 << 2) | 0;
      HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i2 << 2) >> 2] | 0);
      i18 = i3 << 1;
      i38 = i5 + 655376 + (i18 << 3) | 0;
      HEAPF64[i38 >> 3] = +HEAPF64[i38 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 1 << 2) >> 2] | 0);
      i38 = i5 + 655376 + ((i18 | 1) << 3) | 0;
      HEAPF64[i38 >> 3] = +HEAPF64[i38 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 2 << 2) >> 2] | 0);
      i38 = i3 << 2;
      i3 = i5 + 131084 + (i38 << 2) | 0;
      i18 = HEAP32[i5 + 1310736 + (i2 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i18 | 0)) HEAP32[i3 >> 2] = i18;
      i18 = i5 + 131084 + ((i38 | 1) << 2) | 0;
      i3 = HEAP32[i5 + 1310736 + (i2 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i18 >> 2] | 0) < (i3 | 0)) HEAP32[i18 >> 2] = i3;
      i3 = i5 + 131084 + ((i38 | 2) << 2) | 0;
      i18 = HEAP32[i5 + 1310736 + (i2 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i18 | 0)) HEAP32[i3 >> 2] = i18;
      i18 = i5 + 131084 + ((i38 | 3) << 2) | 0;
      i38 = HEAP32[i5 + 1310736 + (i2 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i18 >> 2] | 0) < (i38 | 0)) HEAP32[i18 >> 2] = i38;
      i41 = i41 + 1 | 0;
     } while ((i41 | 0) != (i36 | 0));
     i43 = HEAP32[i7 >> 2] | 0;
    } else i43 = i16;
    if ((i43 | 0) <= 0) {
     i39 = 0;
     STACKTOP = i6;
     return i39 | 0;
    }
    i16 = 0;
    do {
     d44 = +(HEAP32[i5 + 12 + (i16 << 2) >> 2] | 0);
     i7 = i16 << 1;
     i36 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i36 >> 3] = +HEAPF64[i36 >> 3] / d44;
     i36 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i36 >> 3] = +HEAPF64[i36 >> 3] / d44;
     i16 = i16 + 1 | 0;
    } while ((i16 | 0) < (i43 | 0));
    i39 = 0;
    STACKTOP = i6;
    return i39 | 0;
   }
  } else i30 = 57;
 } else i30 = 57;
 if ((i30 | 0) == 57) i40 = i5 + 8 | 0;
 HEAP32[i40 >> 2] = 0;
 i39 = 0;
 STACKTOP = i6;
 return i39 | 0;
}

function _arLabelingSubEBZ(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, d44 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = HEAP32[i5 >> 2] | 0;
 i9 = i3 + -1 | 0;
 if ((i2 | 0) > 0) {
  i10 = i8;
  i11 = 0;
  i12 = i8 + ((Math_imul(i9, i2) | 0) << 1) | 0;
  while (1) {
   HEAP16[i12 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i2 | 0)) break; else {
    i10 = i10 + 2 | 0;
    i12 = i12 + 2 | 0;
   }
  }
 }
 i12 = i2 + -1 | 0;
 if ((i3 | 0) > 0) {
  i10 = i8;
  i11 = 0;
  i13 = i8 + (i12 << 1) | 0;
  while (1) {
   HEAP16[i13 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i3 | 0)) break; else {
    i10 = i10 + (i2 << 1) | 0;
    i13 = i13 + (i2 << 1) | 0;
   }
  }
  i13 = i5 + 1179664 | 0;
  i10 = i2 + 1 | 0;
  if ((i3 | 0) > 2) {
   i11 = (i2 | 0) > 2;
   i14 = 0 - i2 | 0;
   i15 = i1 + i10 | 0;
   i1 = i4 + i10 | 0;
   i4 = 1;
   i16 = 0;
   i17 = (HEAP32[i5 + 4 >> 2] | 0) + i10 | 0;
   i18 = i8 + (i10 << 1) | 0;
   L12 : while (1) {
    if (i11) {
     i10 = i1;
     i8 = i16;
     i19 = i17;
     i20 = i15;
     i21 = 1;
     i22 = i18;
     while (1) {
      do if ((HEAPU8[i20 >> 0] | 0) > (HEAPU8[i10 >> 0] | 0)) {
       HEAP16[i22 >> 1] = 0;
       HEAP8[i19 >> 0] = 0;
       i23 = i8;
      } else {
       HEAP8[i19 >> 0] = -1;
       i24 = i22 + (i14 << 1) | 0;
       i25 = HEAP16[i24 >> 1] | 0;
       if (i25 << 16 >> 16 > 0) {
        HEAP16[i22 >> 1] = i25;
        i26 = (i25 << 16 >> 16) * 7 | 0;
        i25 = i5 + 1310736 + (i26 + -7 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
        i25 = i5 + 1310736 + (i26 + -6 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i21;
        i25 = i5 + 1310736 + (i26 + -5 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i4;
        HEAP32[i5 + 1310736 + (i26 + -1 << 2) >> 2] = i4;
        i23 = i8;
        break;
       }
       i26 = HEAP16[i24 + 2 >> 1] | 0;
       i25 = i26 << 16 >> 16;
       i27 = HEAP16[i24 + -2 >> 1] | 0;
       i24 = i27 << 16 >> 16;
       i28 = i27 << 16 >> 16 > 0;
       if (i26 << 16 >> 16 <= 0) {
        if (i28) {
         HEAP16[i22 >> 1] = i27;
         i27 = i24 * 7 | 0;
         i29 = i5 + 1310736 + (i27 + -7 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
         i29 = i5 + 1310736 + (i27 + -6 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i21;
         i29 = i5 + 1310736 + (i27 + -5 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i4;
         i29 = i5 + 1310736 + (i27 + -3 << 2) | 0;
         if ((HEAP32[i29 >> 2] | 0) < (i21 | 0)) HEAP32[i29 >> 2] = i21;
         HEAP32[i5 + 1310736 + (i27 + -1 << 2) >> 2] = i4;
         i23 = i8;
         break;
        }
        i27 = HEAP16[i22 + -2 >> 1] | 0;
        if (i27 << 16 >> 16 > 0) {
         HEAP16[i22 >> 1] = i27;
         i29 = (i27 << 16 >> 16) * 7 | 0;
         i27 = i5 + 1310736 + (i29 + -7 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
         i27 = i5 + 1310736 + (i29 + -6 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i21;
         i27 = i5 + 1310736 + (i29 + -5 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i4;
         i27 = i5 + 1310736 + (i29 + -3 << 2) | 0;
         if ((HEAP32[i27 >> 2] | 0) >= (i21 | 0)) {
          i23 = i8;
          break;
         }
         HEAP32[i27 >> 2] = i21;
         i23 = i8;
         break;
        } else {
         i27 = i8 + 1 | 0;
         if ((i8 | 0) > 32767) {
          i30 = 52;
          break L12;
         }
         HEAP16[i22 >> 1] = i27;
         HEAP32[i5 + 1179664 + (i8 << 2) >> 2] = i27 << 16 >> 16;
         i29 = i8 * 7 | 0;
         HEAP32[i5 + 1310736 + (i29 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i29 + 1 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 2 << 2) >> 2] = i4;
         HEAP32[i5 + 1310736 + (i29 + 3 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 4 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 5 << 2) >> 2] = i4;
         HEAP32[i5 + 1310736 + (i29 + 6 << 2) >> 2] = i4;
         i23 = i27;
         break;
        }
       }
       if (i28) {
        i28 = HEAP32[i5 + 1179664 + (i25 + -1 << 2) >> 2] | 0;
        i27 = HEAP32[i5 + 1179664 + (i24 + -1 << 2) >> 2] | 0;
        if ((i28 | 0) > (i27 | 0)) {
         HEAP16[i22 >> 1] = i27;
         if ((i8 | 0) > 0) {
          i24 = i13;
          i29 = 0;
          while (1) {
           if ((HEAP32[i24 >> 2] | 0) == (i28 | 0)) HEAP32[i24 >> 2] = i27;
           i29 = i29 + 1 | 0;
           if ((i29 | 0) == (i8 | 0)) {
            i31 = i27;
            break;
           } else i24 = i24 + 4 | 0;
          }
         } else i31 = i27;
        } else {
         HEAP16[i22 >> 1] = i28;
         if ((i28 | 0) < (i27 | 0) & (i8 | 0) > 0) {
          i24 = i13;
          i29 = 0;
          while (1) {
           if ((HEAP32[i24 >> 2] | 0) == (i27 | 0)) HEAP32[i24 >> 2] = i28;
           i29 = i29 + 1 | 0;
           if ((i29 | 0) == (i8 | 0)) {
            i31 = i28;
            break;
           } else i24 = i24 + 4 | 0;
          }
         } else i31 = i28;
        }
        i24 = (i31 << 16 >> 16) * 7 | 0;
        i29 = i5 + 1310736 + (i24 + -7 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
        i29 = i5 + 1310736 + (i24 + -6 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i21;
        i29 = i5 + 1310736 + (i24 + -5 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i4;
        HEAP32[i5 + 1310736 + (i24 + -1 << 2) >> 2] = i4;
        i23 = i8;
        break;
       }
       i24 = HEAP16[i22 + -2 >> 1] | 0;
       if (i24 << 16 >> 16 <= 0) {
        HEAP16[i22 >> 1] = i26;
        i29 = i25 * 7 | 0;
        i27 = i5 + 1310736 + (i29 + -7 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
        i27 = i5 + 1310736 + (i29 + -6 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i21;
        i27 = i5 + 1310736 + (i29 + -5 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i4;
        i27 = i5 + 1310736 + (i29 + -4 << 2) | 0;
        if ((HEAP32[i27 >> 2] | 0) > (i21 | 0)) HEAP32[i27 >> 2] = i21;
        HEAP32[i5 + 1310736 + (i29 + -1 << 2) >> 2] = i4;
        i23 = i8;
        break;
       }
       i29 = HEAP32[i5 + 1179664 + (i25 + -1 << 2) >> 2] | 0;
       i27 = HEAP32[i5 + 1179664 + ((i24 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i29 | 0) > (i27 | 0)) {
        HEAP16[i22 >> 1] = i27;
        if ((i8 | 0) > 0) {
         i24 = 0;
         i32 = i13;
         while (1) {
          if ((HEAP32[i32 >> 2] | 0) == (i29 | 0)) HEAP32[i32 >> 2] = i27;
          i24 = i24 + 1 | 0;
          if ((i24 | 0) == (i8 | 0)) {
           i33 = i27;
           break;
          } else i32 = i32 + 4 | 0;
         }
        } else i33 = i27;
       } else {
        HEAP16[i22 >> 1] = i29;
        if ((i29 | 0) < (i27 | 0) & (i8 | 0) > 0) {
         i32 = 0;
         i24 = i13;
         while (1) {
          if ((HEAP32[i24 >> 2] | 0) == (i27 | 0)) HEAP32[i24 >> 2] = i29;
          i32 = i32 + 1 | 0;
          if ((i32 | 0) == (i8 | 0)) {
           i33 = i29;
           break;
          } else i24 = i24 + 4 | 0;
         }
        } else i33 = i29;
       }
       i24 = (i33 << 16 >> 16) * 7 | 0;
       i32 = i5 + 1310736 + (i24 + -7 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + 1;
       i32 = i5 + 1310736 + (i24 + -6 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + i21;
       i32 = i5 + 1310736 + (i24 + -5 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + i4;
       i23 = i8;
      } while (0);
      i21 = i21 + 1 | 0;
      i32 = i20 + 1 | 0;
      i24 = i10 + 1 | 0;
      i27 = i22 + 2 | 0;
      i25 = i19 + 1 | 0;
      if ((i21 | 0) >= (i12 | 0)) {
       i34 = i32;
       i35 = i24;
       i36 = i23;
       i37 = i25;
       i38 = i27;
       break;
      } else {
       i10 = i24;
       i8 = i23;
       i19 = i25;
       i20 = i32;
       i22 = i27;
      }
     }
    } else {
     i34 = i15;
     i35 = i1;
     i36 = i16;
     i37 = i17;
     i38 = i18;
    }
    i4 = i4 + 1 | 0;
    if ((i4 | 0) >= (i9 | 0)) break; else {
     i15 = i34 + 2 | 0;
     i1 = i35 + 2 | 0;
     i16 = i36;
     i17 = i37 + 2 | 0;
     i18 = i38 + 4 | 0;
    }
   }
   if ((i30 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i39 = -1;
    STACKTOP = i6;
    return i39 | 0;
   }
   i7 = i5 + 8 | 0;
   i38 = i5 + 12 | 0;
   i18 = i5 + 655376 | 0;
   if ((i36 | 0) < 1) i40 = i7; else {
    i37 = 1;
    i17 = 1;
    i16 = i13;
    while (1) {
     i13 = HEAP32[i16 >> 2] | 0;
     if ((i13 | 0) == (i17 | 0)) {
      i41 = i37 + 1 | 0;
      i42 = i37;
     } else {
      i41 = i37;
      i42 = HEAP32[i5 + 1179664 + (i13 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i16 >> 2] = i42;
     if ((i17 | 0) == (i36 | 0)) break; else {
      i37 = i41;
      i17 = i17 + 1 | 0;
      i16 = i16 + 4 | 0;
     }
    }
    i16 = i41 + -1 | 0;
    HEAP32[i7 >> 2] = i16;
    if (!i16) {
     i39 = 0;
     STACKTOP = i6;
     return i39 | 0;
    }
    _memset(i38 | 0, 0, i16 << 2 | 0) | 0;
    _memset(i18 | 0, 0, i16 << 4 | 0) | 0;
    if ((i41 | 0) > 1) {
     i41 = 0;
     do {
      i18 = i41 << 2;
      HEAP32[i5 + 131084 + (i18 << 2) >> 2] = i2;
      HEAP32[i5 + 131084 + ((i18 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i18 | 2) << 2) >> 2] = i3;
      HEAP32[i5 + 131084 + ((i18 | 3) << 2) >> 2] = 0;
      i41 = i41 + 1 | 0;
     } while ((i41 | 0) != (i16 | 0));
    }
    if ((i36 | 0) > 0) {
     i41 = 0;
     do {
      i3 = (HEAP32[i5 + 1179664 + (i41 << 2) >> 2] | 0) + -1 | 0;
      i2 = i41 * 7 | 0;
      i18 = i5 + 12 + (i3 << 2) | 0;
      HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i2 << 2) >> 2] | 0);
      i18 = i3 << 1;
      i38 = i5 + 655376 + (i18 << 3) | 0;
      HEAPF64[i38 >> 3] = +HEAPF64[i38 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 1 << 2) >> 2] | 0);
      i38 = i5 + 655376 + ((i18 | 1) << 3) | 0;
      HEAPF64[i38 >> 3] = +HEAPF64[i38 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 2 << 2) >> 2] | 0);
      i38 = i3 << 2;
      i3 = i5 + 131084 + (i38 << 2) | 0;
      i18 = HEAP32[i5 + 1310736 + (i2 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i18 | 0)) HEAP32[i3 >> 2] = i18;
      i18 = i5 + 131084 + ((i38 | 1) << 2) | 0;
      i3 = HEAP32[i5 + 1310736 + (i2 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i18 >> 2] | 0) < (i3 | 0)) HEAP32[i18 >> 2] = i3;
      i3 = i5 + 131084 + ((i38 | 2) << 2) | 0;
      i18 = HEAP32[i5 + 1310736 + (i2 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i18 | 0)) HEAP32[i3 >> 2] = i18;
      i18 = i5 + 131084 + ((i38 | 3) << 2) | 0;
      i38 = HEAP32[i5 + 1310736 + (i2 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i18 >> 2] | 0) < (i38 | 0)) HEAP32[i18 >> 2] = i38;
      i41 = i41 + 1 | 0;
     } while ((i41 | 0) != (i36 | 0));
     i43 = HEAP32[i7 >> 2] | 0;
    } else i43 = i16;
    if ((i43 | 0) <= 0) {
     i39 = 0;
     STACKTOP = i6;
     return i39 | 0;
    }
    i16 = 0;
    do {
     d44 = +(HEAP32[i5 + 12 + (i16 << 2) >> 2] | 0);
     i7 = i16 << 1;
     i36 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i36 >> 3] = +HEAPF64[i36 >> 3] / d44;
     i36 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i36 >> 3] = +HEAPF64[i36 >> 3] / d44;
     i16 = i16 + 1 | 0;
    } while ((i16 | 0) < (i43 | 0));
    i39 = 0;
    STACKTOP = i6;
    return i39 | 0;
   }
  } else i30 = 57;
 } else i30 = 57;
 if ((i30 | 0) == 57) i40 = i5 + 8 | 0;
 HEAP32[i40 >> 2] = 0;
 i39 = 0;
 STACKTOP = i6;
 return i39 | 0;
}

function __ZN6vision10DoGPyramid25difference_image_binomialERNS_5ImageERKS1_S4_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i1;
 if ((HEAP32[i2 >> 2] | 0) != 2) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21046, 44) | 0, 20576, 130) | 0, 33554, 6) | 0, 86) | 0, 33561, 2) | 0, 21091, 25) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if ((HEAP32[i3 >> 2] | 0) != 2) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21117, 46) | 0, 20576, 130) | 0, 33554, 6) | 0, 87) | 0, 33561, 2) | 0, 21091, 25) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if ((HEAP32[i4 >> 2] | 0) != 2) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21164, 46) | 0, 20576, 130) | 0, 33554, 6) | 0, 88) | 0, 33561, 2) | 0, 21091, 25) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if ((HEAP32[i2 + 16 >> 2] | 0) != 1) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21211, 40) | 0, 20576, 130) | 0, 33554, 6) | 0, 89) | 0, 33561, 2) | 0, 21252, 36) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if ((HEAP32[i3 + 16 >> 2] | 0) != 1) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21289, 42) | 0, 20576, 130) | 0, 33554, 6) | 0, 90) | 0, 33561, 2) | 0, 21252, 36) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if ((HEAP32[i4 + 16 >> 2] | 0) != 1) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21332, 42) | 0, 20576, 130) | 0, 33554, 6) | 0, 91) | 0, 33561, 2) | 0, 21252, 36) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 if ((i6 | 0) != (HEAP32[i4 + 4 >> 2] | 0)) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21375, 47) | 0, 20576, 130) | 0, 33554, 6) | 0, 92) | 0, 33561, 2) | 0, 21423, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 i7 = HEAP32[i2 + 8 >> 2] | 0;
 if ((i7 | 0) != (HEAP32[i4 + 8 >> 2] | 0)) {
  i9 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21455, 49) | 0, 20576, 130) | 0, 33554, 6) | 0, 93) | 0, 33561, 2) | 0, 21505, 32) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i9 = i3 + 4 | 0;
 if ((HEAP32[i9 >> 2] | 0) != (i6 | 0)) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21538, 49) | 0, 20576, 130) | 0, 33554, 6) | 0, 94) | 0, 33561, 2) | 0, 21423, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 i6 = i3 + 8 | 0;
 if ((HEAP32[i6 >> 2] | 0) != (i7 | 0)) {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21588, 51) | 0, 20576, 130) | 0, 33554, 6) | 0, 95) | 0, 33561, 2) | 0, 21505, 32) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 if (!i7) {
  STACKTOP = i1;
  return;
 }
 i7 = 0;
 do {
  i8 = __ZN6vision5Image3getIfEEPT_m(i2, i7) | 0;
  i11 = __ZNK6vision5Image3getIfEEPKT_m(i3, i7) | 0;
  i5 = __ZNK6vision5Image3getIfEEPKT_m(i4, i7) | 0;
  i10 = HEAP32[i9 >> 2] | 0;
  if (i10 | 0) {
   i12 = 0;
   do {
    HEAPF32[i8 + (i12 << 2) >> 2] = +HEAPF32[i11 + (i12 << 2) >> 2] - +HEAPF32[i5 + (i12 << 2) >> 2];
    i12 = i12 + 1 | 0;
   } while (i12 >>> 0 < i10 >>> 0);
  }
  i7 = i7 + 1 | 0;
 } while (i7 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0);
 STACKTOP = i1;
 return;
}

function _arLabelingSubEWIC(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, d43 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = (i2 | 0) / 2 | 0;
 i9 = (i3 | 0) / 2 | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 i11 = i9 + -1 | 0;
 if ((i2 | 0) > 1) {
  i12 = i10;
  i13 = i10 + ((Math_imul(i11, i8) | 0) << 1) | 0;
  i14 = 0;
  while (1) {
   HEAP16[i13 >> 1] = 0;
   HEAP16[i12 >> 1] = 0;
   i14 = i14 + 1 | 0;
   if ((i14 | 0) == (i8 | 0)) break; else {
    i12 = i12 + 2 | 0;
    i13 = i13 + 2 | 0;
   }
  }
 }
 i13 = i8 + -1 | 0;
 if ((i3 | 0) > 1) {
  i12 = i10;
  i14 = i10 + (i13 << 1) | 0;
  i15 = 0;
  while (1) {
   HEAP16[i14 >> 1] = 0;
   HEAP16[i12 >> 1] = 0;
   i15 = i15 + 1 | 0;
   if ((i15 | 0) == (i9 | 0)) break; else {
    i12 = i12 + (i8 << 1) | 0;
    i14 = i14 + (i8 << 1) | 0;
   }
  }
  i14 = i5 + 1179664 | 0;
  i12 = i8 + 1 | 0;
  if ((i3 | 0) > 5) {
   i3 = (i2 | 0) > 5;
   i15 = 0 - i8 | 0;
   i16 = i1 + ((i2 << 1) + 2) | 0;
   i1 = 1;
   i17 = 0;
   i18 = (HEAP32[i5 + 4 >> 2] | 0) + i12 | 0;
   i19 = i10 + (i12 << 1) | 0;
   L12 : while (1) {
    if (i3) {
     i12 = i17;
     i10 = i18;
     i20 = i16;
     i21 = 1;
     i22 = i19;
     while (1) {
      do if ((HEAPU8[i20 >> 0] | 0 | 0) > (i4 | 0)) {
       HEAP8[i10 >> 0] = -1;
       i23 = i22 + (i15 << 1) | 0;
       i24 = HEAP16[i23 >> 1] | 0;
       if (i24 << 16 >> 16 > 0) {
        HEAP16[i22 >> 1] = i24;
        i25 = (i24 << 16 >> 16) * 7 | 0;
        i24 = i5 + 1310736 + (i25 + -7 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 1;
        i24 = i5 + 1310736 + (i25 + -6 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i21;
        i24 = i5 + 1310736 + (i25 + -5 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i25 + -1 << 2) >> 2] = i1;
        i26 = i12;
        break;
       }
       i25 = HEAP16[i23 + 2 >> 1] | 0;
       i24 = i25 << 16 >> 16;
       i27 = HEAP16[i23 + -2 >> 1] | 0;
       i23 = i27 << 16 >> 16;
       i28 = i27 << 16 >> 16 > 0;
       if (i25 << 16 >> 16 <= 0) {
        if (i28) {
         HEAP16[i22 >> 1] = i27;
         i27 = i23 * 7 | 0;
         i29 = i5 + 1310736 + (i27 + -7 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
         i29 = i5 + 1310736 + (i27 + -6 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i21;
         i29 = i5 + 1310736 + (i27 + -5 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i1;
         i29 = i5 + 1310736 + (i27 + -3 << 2) | 0;
         if ((HEAP32[i29 >> 2] | 0) < (i21 | 0)) HEAP32[i29 >> 2] = i21;
         HEAP32[i5 + 1310736 + (i27 + -1 << 2) >> 2] = i1;
         i26 = i12;
         break;
        }
        i27 = HEAP16[i22 + -2 >> 1] | 0;
        if (i27 << 16 >> 16 > 0) {
         HEAP16[i22 >> 1] = i27;
         i29 = (i27 << 16 >> 16) * 7 | 0;
         i27 = i5 + 1310736 + (i29 + -7 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
         i27 = i5 + 1310736 + (i29 + -6 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i21;
         i27 = i5 + 1310736 + (i29 + -5 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i1;
         i27 = i5 + 1310736 + (i29 + -3 << 2) | 0;
         if ((HEAP32[i27 >> 2] | 0) >= (i21 | 0)) {
          i26 = i12;
          break;
         }
         HEAP32[i27 >> 2] = i21;
         i26 = i12;
         break;
        } else {
         i27 = i12 + 1 | 0;
         if ((i12 | 0) > 32767) {
          i30 = 52;
          break L12;
         }
         HEAP16[i22 >> 1] = i27;
         HEAP32[i5 + 1179664 + (i12 << 2) >> 2] = i27 << 16 >> 16;
         i29 = i12 * 7 | 0;
         HEAP32[i5 + 1310736 + (i29 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i29 + 1 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 2 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i29 + 3 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 4 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 5 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i29 + 6 << 2) >> 2] = i1;
         i26 = i27;
         break;
        }
       }
       if (i28) {
        i28 = HEAP32[i5 + 1179664 + (i24 + -1 << 2) >> 2] | 0;
        i27 = HEAP32[i5 + 1179664 + (i23 + -1 << 2) >> 2] | 0;
        if ((i28 | 0) > (i27 | 0)) {
         HEAP16[i22 >> 1] = i27;
         if ((i12 | 0) > 0) {
          i23 = i14;
          i29 = 0;
          while (1) {
           if ((HEAP32[i23 >> 2] | 0) == (i28 | 0)) HEAP32[i23 >> 2] = i27;
           i29 = i29 + 1 | 0;
           if ((i29 | 0) == (i12 | 0)) {
            i31 = i27;
            break;
           } else i23 = i23 + 4 | 0;
          }
         } else i31 = i27;
        } else {
         HEAP16[i22 >> 1] = i28;
         if ((i28 | 0) < (i27 | 0) & (i12 | 0) > 0) {
          i23 = i14;
          i29 = 0;
          while (1) {
           if ((HEAP32[i23 >> 2] | 0) == (i27 | 0)) HEAP32[i23 >> 2] = i28;
           i29 = i29 + 1 | 0;
           if ((i29 | 0) == (i12 | 0)) {
            i31 = i28;
            break;
           } else i23 = i23 + 4 | 0;
          }
         } else i31 = i28;
        }
        i23 = (i31 << 16 >> 16) * 7 | 0;
        i29 = i5 + 1310736 + (i23 + -7 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
        i29 = i5 + 1310736 + (i23 + -6 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i21;
        i29 = i5 + 1310736 + (i23 + -5 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i23 + -1 << 2) >> 2] = i1;
        i26 = i12;
        break;
       }
       i23 = HEAP16[i22 + -2 >> 1] | 0;
       if (i23 << 16 >> 16 <= 0) {
        HEAP16[i22 >> 1] = i25;
        i29 = i24 * 7 | 0;
        i27 = i5 + 1310736 + (i29 + -7 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
        i27 = i5 + 1310736 + (i29 + -6 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i21;
        i27 = i5 + 1310736 + (i29 + -5 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i1;
        i27 = i5 + 1310736 + (i29 + -4 << 2) | 0;
        if ((HEAP32[i27 >> 2] | 0) > (i21 | 0)) HEAP32[i27 >> 2] = i21;
        HEAP32[i5 + 1310736 + (i29 + -1 << 2) >> 2] = i1;
        i26 = i12;
        break;
       }
       i29 = HEAP32[i5 + 1179664 + (i24 + -1 << 2) >> 2] | 0;
       i27 = HEAP32[i5 + 1179664 + ((i23 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i29 | 0) > (i27 | 0)) {
        HEAP16[i22 >> 1] = i27;
        if ((i12 | 0) > 0) {
         i23 = i14;
         i32 = 0;
         while (1) {
          if ((HEAP32[i23 >> 2] | 0) == (i29 | 0)) HEAP32[i23 >> 2] = i27;
          i32 = i32 + 1 | 0;
          if ((i32 | 0) == (i12 | 0)) {
           i33 = i27;
           break;
          } else i23 = i23 + 4 | 0;
         }
        } else i33 = i27;
       } else {
        HEAP16[i22 >> 1] = i29;
        if ((i29 | 0) < (i27 | 0) & (i12 | 0) > 0) {
         i23 = i14;
         i32 = 0;
         while (1) {
          if ((HEAP32[i23 >> 2] | 0) == (i27 | 0)) HEAP32[i23 >> 2] = i29;
          i32 = i32 + 1 | 0;
          if ((i32 | 0) == (i12 | 0)) {
           i33 = i29;
           break;
          } else i23 = i23 + 4 | 0;
         }
        } else i33 = i29;
       }
       i23 = (i33 << 16 >> 16) * 7 | 0;
       i32 = i5 + 1310736 + (i23 + -7 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + 1;
       i32 = i5 + 1310736 + (i23 + -6 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + i21;
       i32 = i5 + 1310736 + (i23 + -5 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + i1;
       i26 = i12;
      } else {
       HEAP16[i22 >> 1] = 0;
       HEAP8[i10 >> 0] = 0;
       i26 = i12;
      } while (0);
      i21 = i21 + 1 | 0;
      i32 = i20 + 2 | 0;
      i23 = i22 + 2 | 0;
      i27 = i10 + 1 | 0;
      if ((i21 | 0) >= (i13 | 0)) {
       i34 = i32;
       i35 = i26;
       i36 = i27;
       i37 = i23;
       break;
      } else {
       i12 = i26;
       i10 = i27;
       i20 = i32;
       i22 = i23;
      }
     }
    } else {
     i34 = i16;
     i35 = i17;
     i36 = i18;
     i37 = i19;
    }
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= (i11 | 0)) break; else {
     i16 = i34 + i2 + 4 | 0;
     i17 = i35;
     i18 = i36 + 2 | 0;
     i19 = i37 + 4 | 0;
    }
   }
   if ((i30 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i38 = -1;
    STACKTOP = i6;
    return i38 | 0;
   }
   i7 = i5 + 8 | 0;
   i37 = i5 + 12 | 0;
   i19 = i5 + 655376 | 0;
   if ((i35 | 0) < 1) i39 = i7; else {
    i36 = 1;
    i18 = 1;
    i17 = i14;
    while (1) {
     i14 = HEAP32[i17 >> 2] | 0;
     if ((i14 | 0) == (i18 | 0)) {
      i40 = i36 + 1 | 0;
      i41 = i36;
     } else {
      i40 = i36;
      i41 = HEAP32[i5 + 1179664 + (i14 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i17 >> 2] = i41;
     if ((i18 | 0) == (i35 | 0)) break; else {
      i36 = i40;
      i18 = i18 + 1 | 0;
      i17 = i17 + 4 | 0;
     }
    }
    i17 = i40 + -1 | 0;
    HEAP32[i7 >> 2] = i17;
    if (!i17) {
     i38 = 0;
     STACKTOP = i6;
     return i38 | 0;
    }
    _memset(i37 | 0, 0, i17 << 2 | 0) | 0;
    _memset(i19 | 0, 0, i17 << 4 | 0) | 0;
    if ((i40 | 0) > 1) {
     i40 = 0;
     do {
      i19 = i40 << 2;
      HEAP32[i5 + 131084 + (i19 << 2) >> 2] = i8;
      HEAP32[i5 + 131084 + ((i19 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i19 | 2) << 2) >> 2] = i9;
      HEAP32[i5 + 131084 + ((i19 | 3) << 2) >> 2] = 0;
      i40 = i40 + 1 | 0;
     } while ((i40 | 0) != (i17 | 0));
    }
    if ((i35 | 0) > 0) {
     i40 = 0;
     do {
      i9 = (HEAP32[i5 + 1179664 + (i40 << 2) >> 2] | 0) + -1 | 0;
      i8 = i40 * 7 | 0;
      i19 = i5 + 12 + (i9 << 2) | 0;
      HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i8 << 2) >> 2] | 0);
      i19 = i9 << 1;
      i37 = i5 + 655376 + (i19 << 3) | 0;
      HEAPF64[i37 >> 3] = +HEAPF64[i37 >> 3] + +(HEAP32[i5 + 1310736 + (i8 + 1 << 2) >> 2] | 0);
      i37 = i5 + 655376 + ((i19 | 1) << 3) | 0;
      HEAPF64[i37 >> 3] = +HEAPF64[i37 >> 3] + +(HEAP32[i5 + 1310736 + (i8 + 2 << 2) >> 2] | 0);
      i37 = i9 << 2;
      i9 = i5 + 131084 + (i37 << 2) | 0;
      i19 = HEAP32[i5 + 1310736 + (i8 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i9 >> 2] | 0) > (i19 | 0)) HEAP32[i9 >> 2] = i19;
      i19 = i5 + 131084 + ((i37 | 1) << 2) | 0;
      i9 = HEAP32[i5 + 1310736 + (i8 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i19 >> 2] | 0) < (i9 | 0)) HEAP32[i19 >> 2] = i9;
      i9 = i5 + 131084 + ((i37 | 2) << 2) | 0;
      i19 = HEAP32[i5 + 1310736 + (i8 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i9 >> 2] | 0) > (i19 | 0)) HEAP32[i9 >> 2] = i19;
      i19 = i5 + 131084 + ((i37 | 3) << 2) | 0;
      i37 = HEAP32[i5 + 1310736 + (i8 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i19 >> 2] | 0) < (i37 | 0)) HEAP32[i19 >> 2] = i37;
      i40 = i40 + 1 | 0;
     } while ((i40 | 0) != (i35 | 0));
     i42 = HEAP32[i7 >> 2] | 0;
    } else i42 = i17;
    if ((i42 | 0) <= 0) {
     i38 = 0;
     STACKTOP = i6;
     return i38 | 0;
    }
    i17 = 0;
    do {
     d43 = +(HEAP32[i5 + 12 + (i17 << 2) >> 2] | 0);
     i7 = i17 << 1;
     i35 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i35 >> 3] = +HEAPF64[i35 >> 3] / d43;
     i35 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i35 >> 3] = +HEAPF64[i35 >> 3] / d43;
     i17 = i17 + 1 | 0;
    } while ((i17 | 0) < (i42 | 0));
    i38 = 0;
    STACKTOP = i6;
    return i38 | 0;
   }
  } else i30 = 57;
 } else i30 = 57;
 if ((i30 | 0) == 57) i39 = i5 + 8 | 0;
 HEAP32[i39 >> 2] = 0;
 i38 = 0;
 STACKTOP = i6;
 return i38 | 0;
}

function _arLabelingSubEBIC(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, d43 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = (i2 | 0) / 2 | 0;
 i9 = (i3 | 0) / 2 | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 i11 = i9 + -1 | 0;
 if ((i2 | 0) > 1) {
  i12 = i10;
  i13 = i10 + ((Math_imul(i11, i8) | 0) << 1) | 0;
  i14 = 0;
  while (1) {
   HEAP16[i13 >> 1] = 0;
   HEAP16[i12 >> 1] = 0;
   i14 = i14 + 1 | 0;
   if ((i14 | 0) == (i8 | 0)) break; else {
    i12 = i12 + 2 | 0;
    i13 = i13 + 2 | 0;
   }
  }
 }
 i13 = i8 + -1 | 0;
 if ((i3 | 0) > 1) {
  i12 = i10;
  i14 = i10 + (i13 << 1) | 0;
  i15 = 0;
  while (1) {
   HEAP16[i14 >> 1] = 0;
   HEAP16[i12 >> 1] = 0;
   i15 = i15 + 1 | 0;
   if ((i15 | 0) == (i9 | 0)) break; else {
    i12 = i12 + (i8 << 1) | 0;
    i14 = i14 + (i8 << 1) | 0;
   }
  }
  i14 = i5 + 1179664 | 0;
  i12 = i8 + 1 | 0;
  if ((i3 | 0) > 5) {
   i3 = (i2 | 0) > 5;
   i15 = 0 - i8 | 0;
   i16 = i1 + ((i2 << 1) + 2) | 0;
   i1 = 1;
   i17 = 0;
   i18 = (HEAP32[i5 + 4 >> 2] | 0) + i12 | 0;
   i19 = i10 + (i12 << 1) | 0;
   L12 : while (1) {
    if (i3) {
     i12 = i17;
     i10 = i18;
     i20 = i16;
     i21 = 1;
     i22 = i19;
     while (1) {
      do if ((HEAPU8[i20 >> 0] | 0 | 0) > (i4 | 0)) {
       HEAP16[i22 >> 1] = 0;
       HEAP8[i10 >> 0] = 0;
       i23 = i12;
      } else {
       HEAP8[i10 >> 0] = -1;
       i24 = i22 + (i15 << 1) | 0;
       i25 = HEAP16[i24 >> 1] | 0;
       if (i25 << 16 >> 16 > 0) {
        HEAP16[i22 >> 1] = i25;
        i26 = (i25 << 16 >> 16) * 7 | 0;
        i25 = i5 + 1310736 + (i26 + -7 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
        i25 = i5 + 1310736 + (i26 + -6 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i21;
        i25 = i5 + 1310736 + (i26 + -5 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i26 + -1 << 2) >> 2] = i1;
        i23 = i12;
        break;
       }
       i26 = HEAP16[i24 + 2 >> 1] | 0;
       i25 = i26 << 16 >> 16;
       i27 = HEAP16[i24 + -2 >> 1] | 0;
       i24 = i27 << 16 >> 16;
       i28 = i27 << 16 >> 16 > 0;
       if (i26 << 16 >> 16 <= 0) {
        if (i28) {
         HEAP16[i22 >> 1] = i27;
         i27 = i24 * 7 | 0;
         i29 = i5 + 1310736 + (i27 + -7 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
         i29 = i5 + 1310736 + (i27 + -6 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i21;
         i29 = i5 + 1310736 + (i27 + -5 << 2) | 0;
         HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i1;
         i29 = i5 + 1310736 + (i27 + -3 << 2) | 0;
         if ((HEAP32[i29 >> 2] | 0) < (i21 | 0)) HEAP32[i29 >> 2] = i21;
         HEAP32[i5 + 1310736 + (i27 + -1 << 2) >> 2] = i1;
         i23 = i12;
         break;
        }
        i27 = HEAP16[i22 + -2 >> 1] | 0;
        if (i27 << 16 >> 16 > 0) {
         HEAP16[i22 >> 1] = i27;
         i29 = (i27 << 16 >> 16) * 7 | 0;
         i27 = i5 + 1310736 + (i29 + -7 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
         i27 = i5 + 1310736 + (i29 + -6 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i21;
         i27 = i5 + 1310736 + (i29 + -5 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i1;
         i27 = i5 + 1310736 + (i29 + -3 << 2) | 0;
         if ((HEAP32[i27 >> 2] | 0) >= (i21 | 0)) {
          i23 = i12;
          break;
         }
         HEAP32[i27 >> 2] = i21;
         i23 = i12;
         break;
        } else {
         i27 = i12 + 1 | 0;
         if ((i12 | 0) > 32767) {
          i30 = 52;
          break L12;
         }
         HEAP16[i22 >> 1] = i27;
         HEAP32[i5 + 1179664 + (i12 << 2) >> 2] = i27 << 16 >> 16;
         i29 = i12 * 7 | 0;
         HEAP32[i5 + 1310736 + (i29 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i29 + 1 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 2 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i29 + 3 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 4 << 2) >> 2] = i21;
         HEAP32[i5 + 1310736 + (i29 + 5 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i29 + 6 << 2) >> 2] = i1;
         i23 = i27;
         break;
        }
       }
       if (i28) {
        i28 = HEAP32[i5 + 1179664 + (i25 + -1 << 2) >> 2] | 0;
        i27 = HEAP32[i5 + 1179664 + (i24 + -1 << 2) >> 2] | 0;
        if ((i28 | 0) > (i27 | 0)) {
         HEAP16[i22 >> 1] = i27;
         if ((i12 | 0) > 0) {
          i24 = i14;
          i29 = 0;
          while (1) {
           if ((HEAP32[i24 >> 2] | 0) == (i28 | 0)) HEAP32[i24 >> 2] = i27;
           i29 = i29 + 1 | 0;
           if ((i29 | 0) == (i12 | 0)) {
            i31 = i27;
            break;
           } else i24 = i24 + 4 | 0;
          }
         } else i31 = i27;
        } else {
         HEAP16[i22 >> 1] = i28;
         if ((i28 | 0) < (i27 | 0) & (i12 | 0) > 0) {
          i24 = i14;
          i29 = 0;
          while (1) {
           if ((HEAP32[i24 >> 2] | 0) == (i27 | 0)) HEAP32[i24 >> 2] = i28;
           i29 = i29 + 1 | 0;
           if ((i29 | 0) == (i12 | 0)) {
            i31 = i28;
            break;
           } else i24 = i24 + 4 | 0;
          }
         } else i31 = i28;
        }
        i24 = (i31 << 16 >> 16) * 7 | 0;
        i29 = i5 + 1310736 + (i24 + -7 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
        i29 = i5 + 1310736 + (i24 + -6 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i21;
        i29 = i5 + 1310736 + (i24 + -5 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i24 + -1 << 2) >> 2] = i1;
        i23 = i12;
        break;
       }
       i24 = HEAP16[i22 + -2 >> 1] | 0;
       if (i24 << 16 >> 16 <= 0) {
        HEAP16[i22 >> 1] = i26;
        i29 = i25 * 7 | 0;
        i27 = i5 + 1310736 + (i29 + -7 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
        i27 = i5 + 1310736 + (i29 + -6 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i21;
        i27 = i5 + 1310736 + (i29 + -5 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i1;
        i27 = i5 + 1310736 + (i29 + -4 << 2) | 0;
        if ((HEAP32[i27 >> 2] | 0) > (i21 | 0)) HEAP32[i27 >> 2] = i21;
        HEAP32[i5 + 1310736 + (i29 + -1 << 2) >> 2] = i1;
        i23 = i12;
        break;
       }
       i29 = HEAP32[i5 + 1179664 + (i25 + -1 << 2) >> 2] | 0;
       i27 = HEAP32[i5 + 1179664 + ((i24 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i29 | 0) > (i27 | 0)) {
        HEAP16[i22 >> 1] = i27;
        if ((i12 | 0) > 0) {
         i24 = i14;
         i32 = 0;
         while (1) {
          if ((HEAP32[i24 >> 2] | 0) == (i29 | 0)) HEAP32[i24 >> 2] = i27;
          i32 = i32 + 1 | 0;
          if ((i32 | 0) == (i12 | 0)) {
           i33 = i27;
           break;
          } else i24 = i24 + 4 | 0;
         }
        } else i33 = i27;
       } else {
        HEAP16[i22 >> 1] = i29;
        if ((i29 | 0) < (i27 | 0) & (i12 | 0) > 0) {
         i24 = i14;
         i32 = 0;
         while (1) {
          if ((HEAP32[i24 >> 2] | 0) == (i27 | 0)) HEAP32[i24 >> 2] = i29;
          i32 = i32 + 1 | 0;
          if ((i32 | 0) == (i12 | 0)) {
           i33 = i29;
           break;
          } else i24 = i24 + 4 | 0;
         }
        } else i33 = i29;
       }
       i24 = (i33 << 16 >> 16) * 7 | 0;
       i32 = i5 + 1310736 + (i24 + -7 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + 1;
       i32 = i5 + 1310736 + (i24 + -6 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + i21;
       i32 = i5 + 1310736 + (i24 + -5 << 2) | 0;
       HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + i1;
       i23 = i12;
      } while (0);
      i21 = i21 + 1 | 0;
      i32 = i20 + 2 | 0;
      i24 = i22 + 2 | 0;
      i27 = i10 + 1 | 0;
      if ((i21 | 0) >= (i13 | 0)) {
       i34 = i32;
       i35 = i23;
       i36 = i27;
       i37 = i24;
       break;
      } else {
       i12 = i23;
       i10 = i27;
       i20 = i32;
       i22 = i24;
      }
     }
    } else {
     i34 = i16;
     i35 = i17;
     i36 = i18;
     i37 = i19;
    }
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= (i11 | 0)) break; else {
     i16 = i34 + i2 + 4 | 0;
     i17 = i35;
     i18 = i36 + 2 | 0;
     i19 = i37 + 4 | 0;
    }
   }
   if ((i30 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i38 = -1;
    STACKTOP = i6;
    return i38 | 0;
   }
   i7 = i5 + 8 | 0;
   i37 = i5 + 12 | 0;
   i19 = i5 + 655376 | 0;
   if ((i35 | 0) < 1) i39 = i7; else {
    i36 = 1;
    i18 = 1;
    i17 = i14;
    while (1) {
     i14 = HEAP32[i17 >> 2] | 0;
     if ((i14 | 0) == (i18 | 0)) {
      i40 = i36 + 1 | 0;
      i41 = i36;
     } else {
      i40 = i36;
      i41 = HEAP32[i5 + 1179664 + (i14 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i17 >> 2] = i41;
     if ((i18 | 0) == (i35 | 0)) break; else {
      i36 = i40;
      i18 = i18 + 1 | 0;
      i17 = i17 + 4 | 0;
     }
    }
    i17 = i40 + -1 | 0;
    HEAP32[i7 >> 2] = i17;
    if (!i17) {
     i38 = 0;
     STACKTOP = i6;
     return i38 | 0;
    }
    _memset(i37 | 0, 0, i17 << 2 | 0) | 0;
    _memset(i19 | 0, 0, i17 << 4 | 0) | 0;
    if ((i40 | 0) > 1) {
     i40 = 0;
     do {
      i19 = i40 << 2;
      HEAP32[i5 + 131084 + (i19 << 2) >> 2] = i8;
      HEAP32[i5 + 131084 + ((i19 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i19 | 2) << 2) >> 2] = i9;
      HEAP32[i5 + 131084 + ((i19 | 3) << 2) >> 2] = 0;
      i40 = i40 + 1 | 0;
     } while ((i40 | 0) != (i17 | 0));
    }
    if ((i35 | 0) > 0) {
     i40 = 0;
     do {
      i9 = (HEAP32[i5 + 1179664 + (i40 << 2) >> 2] | 0) + -1 | 0;
      i8 = i40 * 7 | 0;
      i19 = i5 + 12 + (i9 << 2) | 0;
      HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i8 << 2) >> 2] | 0);
      i19 = i9 << 1;
      i37 = i5 + 655376 + (i19 << 3) | 0;
      HEAPF64[i37 >> 3] = +HEAPF64[i37 >> 3] + +(HEAP32[i5 + 1310736 + (i8 + 1 << 2) >> 2] | 0);
      i37 = i5 + 655376 + ((i19 | 1) << 3) | 0;
      HEAPF64[i37 >> 3] = +HEAPF64[i37 >> 3] + +(HEAP32[i5 + 1310736 + (i8 + 2 << 2) >> 2] | 0);
      i37 = i9 << 2;
      i9 = i5 + 131084 + (i37 << 2) | 0;
      i19 = HEAP32[i5 + 1310736 + (i8 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i9 >> 2] | 0) > (i19 | 0)) HEAP32[i9 >> 2] = i19;
      i19 = i5 + 131084 + ((i37 | 1) << 2) | 0;
      i9 = HEAP32[i5 + 1310736 + (i8 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i19 >> 2] | 0) < (i9 | 0)) HEAP32[i19 >> 2] = i9;
      i9 = i5 + 131084 + ((i37 | 2) << 2) | 0;
      i19 = HEAP32[i5 + 1310736 + (i8 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i9 >> 2] | 0) > (i19 | 0)) HEAP32[i9 >> 2] = i19;
      i19 = i5 + 131084 + ((i37 | 3) << 2) | 0;
      i37 = HEAP32[i5 + 1310736 + (i8 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i19 >> 2] | 0) < (i37 | 0)) HEAP32[i19 >> 2] = i37;
      i40 = i40 + 1 | 0;
     } while ((i40 | 0) != (i35 | 0));
     i42 = HEAP32[i7 >> 2] | 0;
    } else i42 = i17;
    if ((i42 | 0) <= 0) {
     i38 = 0;
     STACKTOP = i6;
     return i38 | 0;
    }
    i17 = 0;
    do {
     d43 = +(HEAP32[i5 + 12 + (i17 << 2) >> 2] | 0);
     i7 = i17 << 1;
     i35 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i35 >> 3] = +HEAPF64[i35 >> 3] / d43;
     i35 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i35 >> 3] = +HEAPF64[i35 >> 3] / d43;
     i17 = i17 + 1 | 0;
    } while ((i17 | 0) < (i42 | 0));
    i38 = 0;
    STACKTOP = i6;
    return i38 | 0;
   }
  } else i30 = 57;
 } else i30 = 57;
 if ((i30 | 0) == 57) i39 = i5 + 8 | 0;
 HEAP32[i39 >> 2] = 0;
 i38 = 0;
 STACKTOP = i6;
 return i38 | 0;
}

function _icpGetInitXw2Xc_from_PlanarData(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, d31 = 0.0, d32 = 0.0, d33 = 0.0, d34 = 0.0, d35 = 0.0, d36 = 0.0, d37 = 0.0, d38 = 0.0, d39 = 0.0, d40 = 0.0, d41 = 0.0, d42 = 0.0, d43 = 0.0, i44 = 0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, d54 = 0.0, d55 = 0.0, d56 = 0.0, d57 = 0.0, d58 = 0.0, d59 = 0.0, d60 = 0.0, d61 = 0.0, d62 = 0.0, d63 = 0.0, d64 = 0.0, d65 = 0.0, d66 = 0.0, d67 = 0.0, d68 = 0.0, d69 = 0.0, d70 = 0.0, d71 = 0.0, d72 = 0.0, d73 = 0.0, i74 = 0, d75 = 0.0, d76 = 0.0, d77 = 0.0, d78 = 0.0, d79 = 0.0, d80 = 0.0, d81 = 0.0, d82 = 0.0, d83 = 0.0, d84 = 0.0, d85 = 0.0, d86 = 0.0, d87 = 0.0, d88 = 0.0, d89 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i7 = i6 + 48 | 0;
 i8 = i6 + 40 | 0;
 i9 = i6 + 32 | 0;
 i10 = i6 + 24 | 0;
 i11 = i6 + 16 | 0;
 i12 = i6 + 8 | 0;
 i13 = i6;
 if ((i4 | 0) < 4) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 i15 = 0;
 do {
  if (+HEAPF64[i3 + (i15 * 24 | 0) + 16 >> 3] != 0.0) {
   i14 = -1;
   i16 = 58;
   break;
  }
  i15 = i15 + 1 | 0;
 } while ((i15 | 0) < (i4 | 0));
 if ((i16 | 0) == 58) {
  STACKTOP = i6;
  return i14 | 0;
 }
 if (+HEAPF64[i1 >> 3] == 0.0) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 if (+HEAPF64[i1 + 32 >> 3] != 0.0) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 i16 = i1 + 40 | 0;
 if (+HEAPF64[i16 >> 3] == 0.0) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 if (+HEAPF64[i1 + 64 >> 3] != 0.0) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 if (+HEAPF64[i1 + 72 >> 3] != 0.0) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 if (+HEAPF64[i1 + 80 >> 3] != 1.0) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 if (+HEAPF64[i1 + 24 >> 3] != 0.0) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 if (+HEAPF64[i1 + 56 >> 3] != 0.0) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 if (+HEAPF64[i1 + 88 >> 3] != 0.0) {
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 i15 = i4 << 1;
 i17 = _arMatrixAlloc(i15, 8) | 0;
 if (!i17) {
  _arLog(0, 3, 18488, i13);
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 i13 = _arMatrixAlloc(i15, 1) | 0;
 if (!i13) {
  _arMatrixFree(i17) | 0;
  _arLog(0, 3, 18514, i12);
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 if ((i4 | 0) > 0) {
  i12 = HEAP32[i17 >> 2] | 0;
  i15 = HEAP32[i13 >> 2] | 0;
  i18 = 0;
  do {
   i19 = i3 + (i18 * 24 | 0) | 0;
   i20 = i18 << 4;
   HEAPF64[i12 + (i20 << 3) >> 3] = +HEAPF64[i19 >> 3];
   i21 = i3 + (i18 * 24 | 0) + 8 | 0;
   HEAPF64[i12 + ((i20 | 1) << 3) >> 3] = +HEAPF64[i21 >> 3];
   HEAPF64[i12 + ((i20 | 2) << 3) >> 3] = 1.0;
   HEAPF64[i12 + ((i20 | 3) << 3) >> 3] = 0.0;
   HEAPF64[i12 + ((i20 | 4) << 3) >> 3] = 0.0;
   HEAPF64[i12 + ((i20 | 5) << 3) >> 3] = 0.0;
   i22 = i2 + (i18 << 4) | 0;
   HEAPF64[i12 + ((i20 | 6) << 3) >> 3] = -(+HEAPF64[i19 >> 3] * +HEAPF64[i22 >> 3]);
   HEAPF64[i12 + ((i20 | 7) << 3) >> 3] = -(+HEAPF64[i21 >> 3] * +HEAPF64[i22 >> 3]);
   HEAPF64[i12 + ((i20 | 8) << 3) >> 3] = 0.0;
   HEAPF64[i12 + ((i20 | 9) << 3) >> 3] = 0.0;
   HEAPF64[i12 + ((i20 | 10) << 3) >> 3] = 0.0;
   HEAPF64[i12 + ((i20 | 11) << 3) >> 3] = +HEAPF64[i19 >> 3];
   HEAPF64[i12 + ((i20 | 12) << 3) >> 3] = +HEAPF64[i21 >> 3];
   HEAPF64[i12 + ((i20 | 13) << 3) >> 3] = 1.0;
   i23 = i2 + (i18 << 4) + 8 | 0;
   HEAPF64[i12 + ((i20 | 14) << 3) >> 3] = -(+HEAPF64[i19 >> 3] * +HEAPF64[i23 >> 3]);
   HEAPF64[i12 + ((i20 | 15) << 3) >> 3] = -(+HEAPF64[i21 >> 3] * +HEAPF64[i23 >> 3]);
   i21 = i18 << 1;
   HEAPF64[i15 + (i21 << 3) >> 3] = +HEAPF64[i22 >> 3];
   HEAPF64[i15 + ((i21 | 1) << 3) >> 3] = +HEAPF64[i23 >> 3];
   i18 = i18 + 1 | 0;
  } while ((i18 | 0) != (i4 | 0));
 }
 i4 = _arMatrixAllocTrans(i17) | 0;
 if (!i4) {
  _arMatrixFree(i17) | 0;
  _arMatrixFree(i13) | 0;
  _arLog(0, 3, 18540, i11);
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 i11 = _arMatrixAllocMul(i4, i17) | 0;
 if (!i11) {
  _arMatrixFree(i17) | 0;
  _arMatrixFree(i13) | 0;
  _arMatrixFree(i4) | 0;
  _arLog(0, 3, 18566, i10);
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 i10 = _arMatrixAllocMul(i4, i13) | 0;
 if (!i10) {
  _arMatrixFree(i17) | 0;
  _arMatrixFree(i13) | 0;
  _arMatrixFree(i4) | 0;
  _arMatrixFree(i11) | 0;
  _arLog(0, 3, 18592, i9);
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 if ((_arMatrixSelfInv(i11) | 0) < 0) {
  _arMatrixFree(i17) | 0;
  _arMatrixFree(i13) | 0;
  _arMatrixFree(i4) | 0;
  _arMatrixFree(i11) | 0;
  _arMatrixFree(i10) | 0;
  _arLog(0, 3, 18618, i8);
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 i8 = _arMatrixAllocMul(i11, i10) | 0;
 if (!i8) {
  _arMatrixFree(i17) | 0;
  _arMatrixFree(i13) | 0;
  _arMatrixFree(i4) | 0;
  _arMatrixFree(i11) | 0;
  _arMatrixFree(i10) | 0;
  _arLog(0, 3, 18644, i7);
  i14 = -1;
  STACKTOP = i6;
  return i14 | 0;
 }
 i7 = HEAP32[i8 >> 2] | 0;
 d24 = +HEAPF64[i7 + 48 >> 3];
 d25 = +HEAPF64[i1 + 48 >> 3];
 d26 = +HEAPF64[i16 >> 3];
 d27 = (+HEAPF64[i7 + 24 >> 3] - d24 * d25) / d26;
 d28 = +HEAPF64[i1 + 16 >> 3];
 d29 = +HEAPF64[i1 + 8 >> 3];
 d30 = +HEAPF64[i1 >> 3];
 d31 = (+HEAPF64[i7 >> 3] - d24 * d28 - d27 * d29) / d30;
 d32 = +HEAPF64[i7 + 56 >> 3];
 d33 = (+HEAPF64[i7 + 32 >> 3] - d25 * d32) / d26;
 d34 = (+HEAPF64[i7 + 8 >> 3] - d28 * d32 - d29 * d33) / d30;
 d35 = (+HEAPF64[i7 + 40 >> 3] - d25) / d26;
 d26 = +HEAPF64[i7 + 16 >> 3];
 _arMatrixFree(i17) | 0;
 _arMatrixFree(i13) | 0;
 _arMatrixFree(i4) | 0;
 _arMatrixFree(i11) | 0;
 _arMatrixFree(i10) | 0;
 _arMatrixFree(i8) | 0;
 d25 = +Math_sqrt(+(d24 * d24 + (d27 * d27 + d31 * d31)));
 d36 = +Math_sqrt(+(d32 * d32 + (d33 * d33 + d34 * d34)));
 d37 = d31 / d25;
 d31 = d27 / d25;
 d27 = d24 / d25;
 d24 = d34 / d36;
 d34 = d33 / d36;
 d33 = d32 / d36;
 d32 = (d25 + d36) * .5;
 d36 = 1.0 / d32;
 d25 = d35 / d32;
 d38 = (d26 - d28 - d29 * d35) / d30 / d32;
 d32 = d31 * d33 - d27 * d34;
 d30 = d27 * d24 - d37 * d33;
 d35 = d37 * d34 - d31 * d24;
 d29 = +Math_sqrt(+(d35 * d35 + (d32 * d32 + d30 * d30)));
 do if (!(d29 == 0.0)) {
  d28 = d32 / d29;
  d26 = d30 / d29;
  d39 = d35 / d29;
  d40 = d27 * d33 + (d37 * d24 + d31 * d34);
  d41 = d40 < 0.0 ? -d40 : d40;
  d40 = (+Math_sqrt(+(d41 + 1.0)) + +Math_sqrt(+(1.0 - d41))) * .5;
  d41 = d37 * d26;
  d42 = d31 * d28;
  d43 = d41 - d42;
  if (d43 != 0.0) {
   i44 = 0;
   d45 = d41;
   d46 = d42;
   d47 = d43;
   d48 = d28;
   d49 = d37;
   d50 = d31;
   d51 = d26;
   d52 = d27;
   d53 = d39;
  } else {
   i8 = d37 * d39 - d27 * d28 != 0.0;
   d43 = i8 ? d27 : d31;
   d42 = i8 ? d37 : d27;
   d41 = i8 ? d39 : d26;
   d54 = i8 ? d28 : d39;
   d39 = d42 * d41;
   d55 = d43 * d54;
   i44 = i8 ? 1 : 2;
   d45 = d39;
   d46 = d55;
   d47 = d39 - d55;
   d48 = d54;
   d49 = d42;
   d50 = d43;
   d51 = d41;
   d52 = i8 ? d31 : d37;
   d53 = i8 ? d26 : d28;
  }
  if (d47 == 0.0) {
   d56 = d37;
   d57 = d31;
   d58 = d27;
   d59 = d24;
   d60 = d34;
   d61 = d33;
   break;
  }
  d28 = (d50 * d53 - d52 * d51) / d47;
  d26 = d40 * d51 / d47;
  d41 = d46 - d45;
  d43 = (d49 * d53 - d52 * d48) / d41;
  d42 = d40 * d48 / d41;
  d41 = d28 * d28 + d43 * d43 + 1.0;
  d54 = d26 * d28 + d42 * d43;
  d55 = d54 * d54 - (d26 * d26 + d42 * d42 + -1.0) * d41;
  if (d55 < 0.0) {
   d56 = d37;
   d57 = d31;
   d58 = d27;
   d59 = d24;
   d60 = d34;
   d61 = d33;
   break;
  }
  d39 = +Math_sqrt(+d55);
  d55 = (d39 - d54) / d41;
  d62 = d26 + d28 * d55;
  d63 = d42 + d43 * d55;
  d64 = (-d54 - d39) / d41;
  d41 = d26 + d28 * d64;
  d28 = d42 + d43 * d64;
  switch (i44 & 3) {
  case 1:
   {
    d65 = d28;
    d66 = d64;
    d67 = d41;
    d68 = d63;
    d69 = d55;
    d70 = d62;
    d71 = d48;
    d72 = d53;
    d73 = d51;
    break;
   }
  case 2:
   {
    d65 = d41;
    d66 = d28;
    d67 = d64;
    d68 = d62;
    d69 = d63;
    d70 = d55;
    d71 = d53;
    d72 = d51;
    d73 = d48;
    break;
   }
  default:
   {
    d65 = d64;
    d66 = d28;
    d67 = d41;
    d68 = d55;
    d69 = d63;
    d70 = d62;
    d71 = d48;
    d72 = d51;
    d73 = d53;
   }
  }
  d62 = d24 * d72;
  d63 = d34 * d71;
  d55 = d62 - d63;
  if (d55 != 0.0) {
   i74 = 0;
   d75 = d62;
   d76 = d63;
   d77 = d55;
   d78 = d71;
   d79 = d24;
   d80 = d34;
   d81 = d72;
   d82 = d33;
   d83 = d73;
  } else {
   i8 = d24 * d73 - d33 * d71 != 0.0;
   d55 = i8 ? d33 : d34;
   d63 = i8 ? d24 : d33;
   d62 = i8 ? d73 : d72;
   d41 = i8 ? d71 : d73;
   d28 = d63 * d62;
   d64 = d55 * d41;
   i74 = i8 ? 1 : 2;
   d75 = d28;
   d76 = d64;
   d77 = d28 - d64;
   d78 = d41;
   d79 = d63;
   d80 = d55;
   d81 = d62;
   d82 = i8 ? d34 : d24;
   d83 = i8 ? d72 : d71;
  }
  if (d77 == 0.0) {
   d56 = d37;
   d57 = d31;
   d58 = d27;
   d59 = d24;
   d60 = d34;
   d61 = d33;
   break;
  }
  d62 = (d80 * d83 - d82 * d81) / d77;
  d55 = d40 * d81 / d77;
  d63 = d76 - d75;
  d41 = (d79 * d83 - d82 * d78) / d63;
  d64 = d40 * d78 / d63;
  d63 = d62 * d62 + d41 * d41 + 1.0;
  d40 = d55 * d62 + d64 * d41;
  d28 = d40 * d40 - (d55 * d55 + d64 * d64 + -1.0) * d63;
  if (d28 < 0.0) {
   d56 = d37;
   d57 = d31;
   d58 = d27;
   d59 = d24;
   d60 = d34;
   d61 = d33;
   break;
  }
  d43 = +Math_sqrt(+d28);
  d28 = (d43 - d40) / d63;
  d42 = d55 + d62 * d28;
  d26 = d64 + d41 * d28;
  d39 = (-d40 - d43) / d63;
  d63 = d55 + d62 * d39;
  d62 = d64 + d41 * d39;
  switch (i74 & 3) {
  case 1:
   {
    d84 = d62;
    d85 = d39;
    d86 = d63;
    d87 = d26;
    d88 = d28;
    d89 = d42;
    break;
   }
  case 2:
   {
    d84 = d63;
    d85 = d62;
    d86 = d39;
    d87 = d42;
    d88 = d26;
    d89 = d28;
    break;
   }
  default:
   {
    d84 = d39;
    d85 = d62;
    d86 = d63;
    d87 = d28;
    d88 = d26;
    d89 = d42;
   }
  }
  d42 = d70 * d89 + d69 * d88 + d68 * d87;
  d26 = d42 < 0.0 ? -d42 : d42;
  d42 = d70 * d86 + d69 * d85 + d68 * d84;
  d28 = d42 < 0.0 ? -d42 : d42;
  d42 = d67 * d89 + d66 * d88 + d65 * d87;
  d63 = d42 < 0.0 ? -d42 : d42;
  d42 = d67 * d86 + d66 * d85 + d65 * d84;
  d62 = d42 < 0.0 ? -d42 : d42;
  if (d26 < d28) if (d26 < d63) {
   if (d26 < d62) {
    d56 = d70;
    d57 = d69;
    d58 = d68;
    d59 = d89;
    d60 = d88;
    d61 = d87;
    break;
   }
   d56 = d67;
   d57 = d66;
   d58 = d65;
   d59 = d86;
   d60 = d85;
   d61 = d84;
   break;
  } else {
   if (d63 < d62) {
    d56 = d67;
    d57 = d66;
    d58 = d65;
    d59 = d89;
    d60 = d88;
    d61 = d87;
    break;
   }
   d56 = d67;
   d57 = d66;
   d58 = d65;
   d59 = d86;
   d60 = d85;
   d61 = d84;
   break;
  } else if (d28 < d63) {
   if (d28 < d62) {
    d56 = d70;
    d57 = d69;
    d58 = d68;
    d59 = d86;
    d60 = d85;
    d61 = d84;
    break;
   }
   d56 = d67;
   d57 = d66;
   d58 = d65;
   d59 = d86;
   d60 = d85;
   d61 = d84;
   break;
  } else {
   if (d63 < d62) {
    d56 = d67;
    d57 = d66;
    d58 = d65;
    d59 = d89;
    d60 = d88;
    d61 = d87;
    break;
   }
   d56 = d67;
   d57 = d66;
   d58 = d65;
   d59 = d86;
   d60 = d85;
   d61 = d84;
   break;
  }
 } else {
  d56 = d37;
  d57 = d31;
  d58 = d27;
  d59 = d24;
  d60 = d34;
  d61 = d33;
 } while (0);
 d33 = d61 * d57 - d60 * d58;
 d34 = d59 * d58 - d61 * d56;
 d24 = d60 * d56 - d59 * d57;
 d27 = +Math_sqrt(+(d24 * d24 + (d33 * d33 + d34 * d34)));
 HEAPF64[i5 >> 3] = d56;
 HEAPF64[i5 + 32 >> 3] = d57;
 HEAPF64[i5 + 64 >> 3] = d58;
 HEAPF64[i5 + 8 >> 3] = d59;
 HEAPF64[i5 + 40 >> 3] = d60;
 HEAPF64[i5 + 72 >> 3] = d61;
 HEAPF64[i5 + 16 >> 3] = d33 / d27;
 HEAPF64[i5 + 48 >> 3] = d34 / d27;
 HEAPF64[i5 + 80 >> 3] = d24 / d27;
 HEAPF64[i5 + 24 >> 3] = d38;
 HEAPF64[i5 + 56 >> 3] = d25;
 HEAPF64[i5 + 88 >> 3] = d36;
 i14 = 0;
 STACKTOP = i6;
 return i14 | 0;
}

function _arLabelingSubEWRC(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, d42 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = HEAP32[i5 >> 2] | 0;
 i9 = i3 + -1 | 0;
 if ((i2 | 0) > 0) {
  i10 = i8;
  i11 = i8 + ((Math_imul(i9, i2) | 0) << 1) | 0;
  i12 = 0;
  while (1) {
   HEAP16[i11 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i12 = i12 + 1 | 0;
   if ((i12 | 0) == (i2 | 0)) break; else {
    i10 = i10 + 2 | 0;
    i11 = i11 + 2 | 0;
   }
  }
 }
 i11 = i2 + -1 | 0;
 if ((i3 | 0) > 0) {
  i10 = i8;
  i12 = i8 + (i11 << 1) | 0;
  i13 = 0;
  while (1) {
   HEAP16[i12 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i13 = i13 + 1 | 0;
   if ((i13 | 0) == (i3 | 0)) break; else {
    i10 = i10 + (i2 << 1) | 0;
    i12 = i12 + (i2 << 1) | 0;
   }
  }
  i12 = i5 + 1179664 | 0;
  i10 = i2 + 1 | 0;
  if ((i3 | 0) > 2) {
   i13 = (i2 | 0) > 2;
   i14 = 0 - i2 | 0;
   i15 = i1 + i10 | 0;
   i1 = 1;
   i16 = 0;
   i17 = (HEAP32[i5 + 4 >> 2] | 0) + i10 | 0;
   i18 = i8 + (i10 << 1) | 0;
   L12 : while (1) {
    if (i13) {
     i10 = i16;
     i8 = i17;
     i19 = i15;
     i20 = 1;
     i21 = i18;
     while (1) {
      do if ((HEAPU8[i19 >> 0] | 0 | 0) > (i4 | 0)) {
       HEAP8[i8 >> 0] = -1;
       i22 = i21 + (i14 << 1) | 0;
       i23 = HEAP16[i22 >> 1] | 0;
       if (i23 << 16 >> 16 > 0) {
        HEAP16[i21 >> 1] = i23;
        i24 = (i23 << 16 >> 16) * 7 | 0;
        i23 = i5 + 1310736 + (i24 + -7 << 2) | 0;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + 1;
        i23 = i5 + 1310736 + (i24 + -6 << 2) | 0;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + i20;
        i23 = i5 + 1310736 + (i24 + -5 << 2) | 0;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i24 + -1 << 2) >> 2] = i1;
        i25 = i10;
        break;
       }
       i24 = HEAP16[i22 + 2 >> 1] | 0;
       i23 = i24 << 16 >> 16;
       i26 = HEAP16[i22 + -2 >> 1] | 0;
       i22 = i26 << 16 >> 16;
       i27 = i26 << 16 >> 16 > 0;
       if (i24 << 16 >> 16 <= 0) {
        if (i27) {
         HEAP16[i21 >> 1] = i26;
         i26 = i22 * 7 | 0;
         i28 = i5 + 1310736 + (i26 + -7 << 2) | 0;
         HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + 1;
         i28 = i5 + 1310736 + (i26 + -6 << 2) | 0;
         HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + i20;
         i28 = i5 + 1310736 + (i26 + -5 << 2) | 0;
         HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + i1;
         i28 = i5 + 1310736 + (i26 + -3 << 2) | 0;
         if ((HEAP32[i28 >> 2] | 0) < (i20 | 0)) HEAP32[i28 >> 2] = i20;
         HEAP32[i5 + 1310736 + (i26 + -1 << 2) >> 2] = i1;
         i25 = i10;
         break;
        }
        i26 = HEAP16[i21 + -2 >> 1] | 0;
        if (i26 << 16 >> 16 > 0) {
         HEAP16[i21 >> 1] = i26;
         i28 = (i26 << 16 >> 16) * 7 | 0;
         i26 = i5 + 1310736 + (i28 + -7 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + 1;
         i26 = i5 + 1310736 + (i28 + -6 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i20;
         i26 = i5 + 1310736 + (i28 + -5 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i1;
         i26 = i5 + 1310736 + (i28 + -3 << 2) | 0;
         if ((HEAP32[i26 >> 2] | 0) >= (i20 | 0)) {
          i25 = i10;
          break;
         }
         HEAP32[i26 >> 2] = i20;
         i25 = i10;
         break;
        } else {
         i26 = i10 + 1 | 0;
         if ((i10 | 0) > 32767) {
          i29 = 52;
          break L12;
         }
         HEAP16[i21 >> 1] = i26;
         HEAP32[i5 + 1179664 + (i10 << 2) >> 2] = i26 << 16 >> 16;
         i28 = i10 * 7 | 0;
         HEAP32[i5 + 1310736 + (i28 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i28 + 1 << 2) >> 2] = i20;
         HEAP32[i5 + 1310736 + (i28 + 2 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i28 + 3 << 2) >> 2] = i20;
         HEAP32[i5 + 1310736 + (i28 + 4 << 2) >> 2] = i20;
         HEAP32[i5 + 1310736 + (i28 + 5 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i28 + 6 << 2) >> 2] = i1;
         i25 = i26;
         break;
        }
       }
       if (i27) {
        i27 = HEAP32[i5 + 1179664 + (i23 + -1 << 2) >> 2] | 0;
        i26 = HEAP32[i5 + 1179664 + (i22 + -1 << 2) >> 2] | 0;
        if ((i27 | 0) > (i26 | 0)) {
         HEAP16[i21 >> 1] = i26;
         if ((i10 | 0) > 0) {
          i22 = i12;
          i28 = 0;
          while (1) {
           if ((HEAP32[i22 >> 2] | 0) == (i27 | 0)) HEAP32[i22 >> 2] = i26;
           i28 = i28 + 1 | 0;
           if ((i28 | 0) == (i10 | 0)) {
            i30 = i26;
            break;
           } else i22 = i22 + 4 | 0;
          }
         } else i30 = i26;
        } else {
         HEAP16[i21 >> 1] = i27;
         if ((i27 | 0) < (i26 | 0) & (i10 | 0) > 0) {
          i22 = i12;
          i28 = 0;
          while (1) {
           if ((HEAP32[i22 >> 2] | 0) == (i26 | 0)) HEAP32[i22 >> 2] = i27;
           i28 = i28 + 1 | 0;
           if ((i28 | 0) == (i10 | 0)) {
            i30 = i27;
            break;
           } else i22 = i22 + 4 | 0;
          }
         } else i30 = i27;
        }
        i22 = (i30 << 16 >> 16) * 7 | 0;
        i28 = i5 + 1310736 + (i22 + -7 << 2) | 0;
        HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + 1;
        i28 = i5 + 1310736 + (i22 + -6 << 2) | 0;
        HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + i20;
        i28 = i5 + 1310736 + (i22 + -5 << 2) | 0;
        HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i22 + -1 << 2) >> 2] = i1;
        i25 = i10;
        break;
       }
       i22 = HEAP16[i21 + -2 >> 1] | 0;
       if (i22 << 16 >> 16 <= 0) {
        HEAP16[i21 >> 1] = i24;
        i28 = i23 * 7 | 0;
        i26 = i5 + 1310736 + (i28 + -7 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + 1;
        i26 = i5 + 1310736 + (i28 + -6 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i20;
        i26 = i5 + 1310736 + (i28 + -5 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i1;
        i26 = i5 + 1310736 + (i28 + -4 << 2) | 0;
        if ((HEAP32[i26 >> 2] | 0) > (i20 | 0)) HEAP32[i26 >> 2] = i20;
        HEAP32[i5 + 1310736 + (i28 + -1 << 2) >> 2] = i1;
        i25 = i10;
        break;
       }
       i28 = HEAP32[i5 + 1179664 + (i23 + -1 << 2) >> 2] | 0;
       i26 = HEAP32[i5 + 1179664 + ((i22 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i28 | 0) > (i26 | 0)) {
        HEAP16[i21 >> 1] = i26;
        if ((i10 | 0) > 0) {
         i22 = i12;
         i31 = 0;
         while (1) {
          if ((HEAP32[i22 >> 2] | 0) == (i28 | 0)) HEAP32[i22 >> 2] = i26;
          i31 = i31 + 1 | 0;
          if ((i31 | 0) == (i10 | 0)) {
           i32 = i26;
           break;
          } else i22 = i22 + 4 | 0;
         }
        } else i32 = i26;
       } else {
        HEAP16[i21 >> 1] = i28;
        if ((i28 | 0) < (i26 | 0) & (i10 | 0) > 0) {
         i22 = i12;
         i31 = 0;
         while (1) {
          if ((HEAP32[i22 >> 2] | 0) == (i26 | 0)) HEAP32[i22 >> 2] = i28;
          i31 = i31 + 1 | 0;
          if ((i31 | 0) == (i10 | 0)) {
           i32 = i28;
           break;
          } else i22 = i22 + 4 | 0;
         }
        } else i32 = i28;
       }
       i22 = (i32 << 16 >> 16) * 7 | 0;
       i31 = i5 + 1310736 + (i22 + -7 << 2) | 0;
       HEAP32[i31 >> 2] = (HEAP32[i31 >> 2] | 0) + 1;
       i31 = i5 + 1310736 + (i22 + -6 << 2) | 0;
       HEAP32[i31 >> 2] = (HEAP32[i31 >> 2] | 0) + i20;
       i31 = i5 + 1310736 + (i22 + -5 << 2) | 0;
       HEAP32[i31 >> 2] = (HEAP32[i31 >> 2] | 0) + i1;
       i25 = i10;
      } else {
       HEAP16[i21 >> 1] = 0;
       HEAP8[i8 >> 0] = 0;
       i25 = i10;
      } while (0);
      i20 = i20 + 1 | 0;
      i31 = i19 + 1 | 0;
      i22 = i21 + 2 | 0;
      i26 = i8 + 1 | 0;
      if ((i20 | 0) >= (i11 | 0)) {
       i33 = i31;
       i34 = i25;
       i35 = i26;
       i36 = i22;
       break;
      } else {
       i10 = i25;
       i8 = i26;
       i19 = i31;
       i21 = i22;
      }
     }
    } else {
     i33 = i15;
     i34 = i16;
     i35 = i17;
     i36 = i18;
    }
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= (i9 | 0)) break; else {
     i15 = i33 + 2 | 0;
     i16 = i34;
     i17 = i35 + 2 | 0;
     i18 = i36 + 4 | 0;
    }
   }
   if ((i29 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i37 = -1;
    STACKTOP = i6;
    return i37 | 0;
   }
   i7 = i5 + 8 | 0;
   i36 = i5 + 12 | 0;
   i18 = i5 + 655376 | 0;
   if ((i34 | 0) < 1) i38 = i7; else {
    i35 = 1;
    i17 = 1;
    i16 = i12;
    while (1) {
     i12 = HEAP32[i16 >> 2] | 0;
     if ((i12 | 0) == (i17 | 0)) {
      i39 = i35 + 1 | 0;
      i40 = i35;
     } else {
      i39 = i35;
      i40 = HEAP32[i5 + 1179664 + (i12 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i16 >> 2] = i40;
     if ((i17 | 0) == (i34 | 0)) break; else {
      i35 = i39;
      i17 = i17 + 1 | 0;
      i16 = i16 + 4 | 0;
     }
    }
    i16 = i39 + -1 | 0;
    HEAP32[i7 >> 2] = i16;
    if (!i16) {
     i37 = 0;
     STACKTOP = i6;
     return i37 | 0;
    }
    _memset(i36 | 0, 0, i16 << 2 | 0) | 0;
    _memset(i18 | 0, 0, i16 << 4 | 0) | 0;
    if ((i39 | 0) > 1) {
     i39 = 0;
     do {
      i18 = i39 << 2;
      HEAP32[i5 + 131084 + (i18 << 2) >> 2] = i2;
      HEAP32[i5 + 131084 + ((i18 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i18 | 2) << 2) >> 2] = i3;
      HEAP32[i5 + 131084 + ((i18 | 3) << 2) >> 2] = 0;
      i39 = i39 + 1 | 0;
     } while ((i39 | 0) != (i16 | 0));
    }
    if ((i34 | 0) > 0) {
     i39 = 0;
     do {
      i3 = (HEAP32[i5 + 1179664 + (i39 << 2) >> 2] | 0) + -1 | 0;
      i2 = i39 * 7 | 0;
      i18 = i5 + 12 + (i3 << 2) | 0;
      HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i2 << 2) >> 2] | 0);
      i18 = i3 << 1;
      i36 = i5 + 655376 + (i18 << 3) | 0;
      HEAPF64[i36 >> 3] = +HEAPF64[i36 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 1 << 2) >> 2] | 0);
      i36 = i5 + 655376 + ((i18 | 1) << 3) | 0;
      HEAPF64[i36 >> 3] = +HEAPF64[i36 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 2 << 2) >> 2] | 0);
      i36 = i3 << 2;
      i3 = i5 + 131084 + (i36 << 2) | 0;
      i18 = HEAP32[i5 + 1310736 + (i2 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i18 | 0)) HEAP32[i3 >> 2] = i18;
      i18 = i5 + 131084 + ((i36 | 1) << 2) | 0;
      i3 = HEAP32[i5 + 1310736 + (i2 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i18 >> 2] | 0) < (i3 | 0)) HEAP32[i18 >> 2] = i3;
      i3 = i5 + 131084 + ((i36 | 2) << 2) | 0;
      i18 = HEAP32[i5 + 1310736 + (i2 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i18 | 0)) HEAP32[i3 >> 2] = i18;
      i18 = i5 + 131084 + ((i36 | 3) << 2) | 0;
      i36 = HEAP32[i5 + 1310736 + (i2 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i18 >> 2] | 0) < (i36 | 0)) HEAP32[i18 >> 2] = i36;
      i39 = i39 + 1 | 0;
     } while ((i39 | 0) != (i34 | 0));
     i41 = HEAP32[i7 >> 2] | 0;
    } else i41 = i16;
    if ((i41 | 0) <= 0) {
     i37 = 0;
     STACKTOP = i6;
     return i37 | 0;
    }
    i16 = 0;
    do {
     d42 = +(HEAP32[i5 + 12 + (i16 << 2) >> 2] | 0);
     i7 = i16 << 1;
     i34 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] / d42;
     i34 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] / d42;
     i16 = i16 + 1 | 0;
    } while ((i16 | 0) < (i41 | 0));
    i37 = 0;
    STACKTOP = i6;
    return i37 | 0;
   }
  } else i29 = 57;
 } else i29 = 57;
 if ((i29 | 0) == 57) i38 = i5 + 8 | 0;
 HEAP32[i38 >> 2] = 0;
 i37 = 0;
 STACKTOP = i6;
 return i37 | 0;
}

function _arLabelingSubEBRC(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, d42 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = HEAP32[i5 >> 2] | 0;
 i9 = i3 + -1 | 0;
 if ((i2 | 0) > 0) {
  i10 = i8;
  i11 = i8 + ((Math_imul(i9, i2) | 0) << 1) | 0;
  i12 = 0;
  while (1) {
   HEAP16[i11 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i12 = i12 + 1 | 0;
   if ((i12 | 0) == (i2 | 0)) break; else {
    i10 = i10 + 2 | 0;
    i11 = i11 + 2 | 0;
   }
  }
 }
 i11 = i2 + -1 | 0;
 if ((i3 | 0) > 0) {
  i10 = i8;
  i12 = i8 + (i11 << 1) | 0;
  i13 = 0;
  while (1) {
   HEAP16[i12 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i13 = i13 + 1 | 0;
   if ((i13 | 0) == (i3 | 0)) break; else {
    i10 = i10 + (i2 << 1) | 0;
    i12 = i12 + (i2 << 1) | 0;
   }
  }
  i12 = i5 + 1179664 | 0;
  i10 = i2 + 1 | 0;
  if ((i3 | 0) > 2) {
   i13 = (i2 | 0) > 2;
   i14 = 0 - i2 | 0;
   i15 = i1 + i10 | 0;
   i1 = 1;
   i16 = 0;
   i17 = (HEAP32[i5 + 4 >> 2] | 0) + i10 | 0;
   i18 = i8 + (i10 << 1) | 0;
   L12 : while (1) {
    if (i13) {
     i10 = i16;
     i8 = i17;
     i19 = i15;
     i20 = 1;
     i21 = i18;
     while (1) {
      do if ((HEAPU8[i19 >> 0] | 0 | 0) > (i4 | 0)) {
       HEAP16[i21 >> 1] = 0;
       HEAP8[i8 >> 0] = 0;
       i22 = i10;
      } else {
       HEAP8[i8 >> 0] = -1;
       i23 = i21 + (i14 << 1) | 0;
       i24 = HEAP16[i23 >> 1] | 0;
       if (i24 << 16 >> 16 > 0) {
        HEAP16[i21 >> 1] = i24;
        i25 = (i24 << 16 >> 16) * 7 | 0;
        i24 = i5 + 1310736 + (i25 + -7 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 1;
        i24 = i5 + 1310736 + (i25 + -6 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i20;
        i24 = i5 + 1310736 + (i25 + -5 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i25 + -1 << 2) >> 2] = i1;
        i22 = i10;
        break;
       }
       i25 = HEAP16[i23 + 2 >> 1] | 0;
       i24 = i25 << 16 >> 16;
       i26 = HEAP16[i23 + -2 >> 1] | 0;
       i23 = i26 << 16 >> 16;
       i27 = i26 << 16 >> 16 > 0;
       if (i25 << 16 >> 16 <= 0) {
        if (i27) {
         HEAP16[i21 >> 1] = i26;
         i26 = i23 * 7 | 0;
         i28 = i5 + 1310736 + (i26 + -7 << 2) | 0;
         HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + 1;
         i28 = i5 + 1310736 + (i26 + -6 << 2) | 0;
         HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + i20;
         i28 = i5 + 1310736 + (i26 + -5 << 2) | 0;
         HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + i1;
         i28 = i5 + 1310736 + (i26 + -3 << 2) | 0;
         if ((HEAP32[i28 >> 2] | 0) < (i20 | 0)) HEAP32[i28 >> 2] = i20;
         HEAP32[i5 + 1310736 + (i26 + -1 << 2) >> 2] = i1;
         i22 = i10;
         break;
        }
        i26 = HEAP16[i21 + -2 >> 1] | 0;
        if (i26 << 16 >> 16 > 0) {
         HEAP16[i21 >> 1] = i26;
         i28 = (i26 << 16 >> 16) * 7 | 0;
         i26 = i5 + 1310736 + (i28 + -7 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + 1;
         i26 = i5 + 1310736 + (i28 + -6 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i20;
         i26 = i5 + 1310736 + (i28 + -5 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i1;
         i26 = i5 + 1310736 + (i28 + -3 << 2) | 0;
         if ((HEAP32[i26 >> 2] | 0) >= (i20 | 0)) {
          i22 = i10;
          break;
         }
         HEAP32[i26 >> 2] = i20;
         i22 = i10;
         break;
        } else {
         i26 = i10 + 1 | 0;
         if ((i10 | 0) > 32767) {
          i29 = 52;
          break L12;
         }
         HEAP16[i21 >> 1] = i26;
         HEAP32[i5 + 1179664 + (i10 << 2) >> 2] = i26 << 16 >> 16;
         i28 = i10 * 7 | 0;
         HEAP32[i5 + 1310736 + (i28 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i28 + 1 << 2) >> 2] = i20;
         HEAP32[i5 + 1310736 + (i28 + 2 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i28 + 3 << 2) >> 2] = i20;
         HEAP32[i5 + 1310736 + (i28 + 4 << 2) >> 2] = i20;
         HEAP32[i5 + 1310736 + (i28 + 5 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i28 + 6 << 2) >> 2] = i1;
         i22 = i26;
         break;
        }
       }
       if (i27) {
        i27 = HEAP32[i5 + 1179664 + (i24 + -1 << 2) >> 2] | 0;
        i26 = HEAP32[i5 + 1179664 + (i23 + -1 << 2) >> 2] | 0;
        if ((i27 | 0) > (i26 | 0)) {
         HEAP16[i21 >> 1] = i26;
         if ((i10 | 0) > 0) {
          i23 = i12;
          i28 = 0;
          while (1) {
           if ((HEAP32[i23 >> 2] | 0) == (i27 | 0)) HEAP32[i23 >> 2] = i26;
           i28 = i28 + 1 | 0;
           if ((i28 | 0) == (i10 | 0)) {
            i30 = i26;
            break;
           } else i23 = i23 + 4 | 0;
          }
         } else i30 = i26;
        } else {
         HEAP16[i21 >> 1] = i27;
         if ((i27 | 0) < (i26 | 0) & (i10 | 0) > 0) {
          i23 = i12;
          i28 = 0;
          while (1) {
           if ((HEAP32[i23 >> 2] | 0) == (i26 | 0)) HEAP32[i23 >> 2] = i27;
           i28 = i28 + 1 | 0;
           if ((i28 | 0) == (i10 | 0)) {
            i30 = i27;
            break;
           } else i23 = i23 + 4 | 0;
          }
         } else i30 = i27;
        }
        i23 = (i30 << 16 >> 16) * 7 | 0;
        i28 = i5 + 1310736 + (i23 + -7 << 2) | 0;
        HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + 1;
        i28 = i5 + 1310736 + (i23 + -6 << 2) | 0;
        HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + i20;
        i28 = i5 + 1310736 + (i23 + -5 << 2) | 0;
        HEAP32[i28 >> 2] = (HEAP32[i28 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i23 + -1 << 2) >> 2] = i1;
        i22 = i10;
        break;
       }
       i23 = HEAP16[i21 + -2 >> 1] | 0;
       if (i23 << 16 >> 16 <= 0) {
        HEAP16[i21 >> 1] = i25;
        i28 = i24 * 7 | 0;
        i26 = i5 + 1310736 + (i28 + -7 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + 1;
        i26 = i5 + 1310736 + (i28 + -6 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i20;
        i26 = i5 + 1310736 + (i28 + -5 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i1;
        i26 = i5 + 1310736 + (i28 + -4 << 2) | 0;
        if ((HEAP32[i26 >> 2] | 0) > (i20 | 0)) HEAP32[i26 >> 2] = i20;
        HEAP32[i5 + 1310736 + (i28 + -1 << 2) >> 2] = i1;
        i22 = i10;
        break;
       }
       i28 = HEAP32[i5 + 1179664 + (i24 + -1 << 2) >> 2] | 0;
       i26 = HEAP32[i5 + 1179664 + ((i23 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i28 | 0) > (i26 | 0)) {
        HEAP16[i21 >> 1] = i26;
        if ((i10 | 0) > 0) {
         i23 = i12;
         i31 = 0;
         while (1) {
          if ((HEAP32[i23 >> 2] | 0) == (i28 | 0)) HEAP32[i23 >> 2] = i26;
          i31 = i31 + 1 | 0;
          if ((i31 | 0) == (i10 | 0)) {
           i32 = i26;
           break;
          } else i23 = i23 + 4 | 0;
         }
        } else i32 = i26;
       } else {
        HEAP16[i21 >> 1] = i28;
        if ((i28 | 0) < (i26 | 0) & (i10 | 0) > 0) {
         i23 = i12;
         i31 = 0;
         while (1) {
          if ((HEAP32[i23 >> 2] | 0) == (i26 | 0)) HEAP32[i23 >> 2] = i28;
          i31 = i31 + 1 | 0;
          if ((i31 | 0) == (i10 | 0)) {
           i32 = i28;
           break;
          } else i23 = i23 + 4 | 0;
         }
        } else i32 = i28;
       }
       i23 = (i32 << 16 >> 16) * 7 | 0;
       i31 = i5 + 1310736 + (i23 + -7 << 2) | 0;
       HEAP32[i31 >> 2] = (HEAP32[i31 >> 2] | 0) + 1;
       i31 = i5 + 1310736 + (i23 + -6 << 2) | 0;
       HEAP32[i31 >> 2] = (HEAP32[i31 >> 2] | 0) + i20;
       i31 = i5 + 1310736 + (i23 + -5 << 2) | 0;
       HEAP32[i31 >> 2] = (HEAP32[i31 >> 2] | 0) + i1;
       i22 = i10;
      } while (0);
      i20 = i20 + 1 | 0;
      i31 = i19 + 1 | 0;
      i23 = i21 + 2 | 0;
      i26 = i8 + 1 | 0;
      if ((i20 | 0) >= (i11 | 0)) {
       i33 = i31;
       i34 = i22;
       i35 = i26;
       i36 = i23;
       break;
      } else {
       i10 = i22;
       i8 = i26;
       i19 = i31;
       i21 = i23;
      }
     }
    } else {
     i33 = i15;
     i34 = i16;
     i35 = i17;
     i36 = i18;
    }
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= (i9 | 0)) break; else {
     i15 = i33 + 2 | 0;
     i16 = i34;
     i17 = i35 + 2 | 0;
     i18 = i36 + 4 | 0;
    }
   }
   if ((i29 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i37 = -1;
    STACKTOP = i6;
    return i37 | 0;
   }
   i7 = i5 + 8 | 0;
   i36 = i5 + 12 | 0;
   i18 = i5 + 655376 | 0;
   if ((i34 | 0) < 1) i38 = i7; else {
    i35 = 1;
    i17 = 1;
    i16 = i12;
    while (1) {
     i12 = HEAP32[i16 >> 2] | 0;
     if ((i12 | 0) == (i17 | 0)) {
      i39 = i35 + 1 | 0;
      i40 = i35;
     } else {
      i39 = i35;
      i40 = HEAP32[i5 + 1179664 + (i12 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i16 >> 2] = i40;
     if ((i17 | 0) == (i34 | 0)) break; else {
      i35 = i39;
      i17 = i17 + 1 | 0;
      i16 = i16 + 4 | 0;
     }
    }
    i16 = i39 + -1 | 0;
    HEAP32[i7 >> 2] = i16;
    if (!i16) {
     i37 = 0;
     STACKTOP = i6;
     return i37 | 0;
    }
    _memset(i36 | 0, 0, i16 << 2 | 0) | 0;
    _memset(i18 | 0, 0, i16 << 4 | 0) | 0;
    if ((i39 | 0) > 1) {
     i39 = 0;
     do {
      i18 = i39 << 2;
      HEAP32[i5 + 131084 + (i18 << 2) >> 2] = i2;
      HEAP32[i5 + 131084 + ((i18 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i18 | 2) << 2) >> 2] = i3;
      HEAP32[i5 + 131084 + ((i18 | 3) << 2) >> 2] = 0;
      i39 = i39 + 1 | 0;
     } while ((i39 | 0) != (i16 | 0));
    }
    if ((i34 | 0) > 0) {
     i39 = 0;
     do {
      i3 = (HEAP32[i5 + 1179664 + (i39 << 2) >> 2] | 0) + -1 | 0;
      i2 = i39 * 7 | 0;
      i18 = i5 + 12 + (i3 << 2) | 0;
      HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i2 << 2) >> 2] | 0);
      i18 = i3 << 1;
      i36 = i5 + 655376 + (i18 << 3) | 0;
      HEAPF64[i36 >> 3] = +HEAPF64[i36 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 1 << 2) >> 2] | 0);
      i36 = i5 + 655376 + ((i18 | 1) << 3) | 0;
      HEAPF64[i36 >> 3] = +HEAPF64[i36 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 2 << 2) >> 2] | 0);
      i36 = i3 << 2;
      i3 = i5 + 131084 + (i36 << 2) | 0;
      i18 = HEAP32[i5 + 1310736 + (i2 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i18 | 0)) HEAP32[i3 >> 2] = i18;
      i18 = i5 + 131084 + ((i36 | 1) << 2) | 0;
      i3 = HEAP32[i5 + 1310736 + (i2 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i18 >> 2] | 0) < (i3 | 0)) HEAP32[i18 >> 2] = i3;
      i3 = i5 + 131084 + ((i36 | 2) << 2) | 0;
      i18 = HEAP32[i5 + 1310736 + (i2 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i18 | 0)) HEAP32[i3 >> 2] = i18;
      i18 = i5 + 131084 + ((i36 | 3) << 2) | 0;
      i36 = HEAP32[i5 + 1310736 + (i2 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i18 >> 2] | 0) < (i36 | 0)) HEAP32[i18 >> 2] = i36;
      i39 = i39 + 1 | 0;
     } while ((i39 | 0) != (i34 | 0));
     i41 = HEAP32[i7 >> 2] | 0;
    } else i41 = i16;
    if ((i41 | 0) <= 0) {
     i37 = 0;
     STACKTOP = i6;
     return i37 | 0;
    }
    i16 = 0;
    do {
     d42 = +(HEAP32[i5 + 12 + (i16 << 2) >> 2] | 0);
     i7 = i16 << 1;
     i34 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] / d42;
     i34 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] / d42;
     i16 = i16 + 1 | 0;
    } while ((i16 | 0) < (i41 | 0));
    i37 = 0;
    STACKTOP = i6;
    return i37 | 0;
   }
  } else i29 = 57;
 } else i29 = 57;
 if ((i29 | 0) == 57) i38 = i5 + 8 | 0;
 HEAP32[i38 >> 2] = 0;
 i37 = 0;
 STACKTOP = i6;
 return i37 | 0;
}

function __ZN6vision32ComputeSubpixelHessianSameOctaveEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i9 = i8 + 20 | 0;
 i10 = i8 + 16 | 0;
 i11 = i8 + 12 | 0;
 i12 = i8 + 8 | 0;
 i13 = i8 + 4 | 0;
 i14 = i8;
 if ((i6 | 0) <= 0) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22787, 57) | 0;
  i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i15, 22500, 128) | 0;
  i17 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i16, 33554, 6) | 0;
  i18 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i17, 309) | 0;
  i19 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i18, 33561, 2) | 0;
  i20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i19, 22845, 15) | 0;
  i21 = HEAP32[i20 >> 2] | 0;
  i22 = i21 + -12 | 0;
  i23 = HEAP32[i22 >> 2] | 0;
  i24 = i20 + i23 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i24);
  i25 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i26 = HEAP32[i25 >> 2] | 0;
  i27 = i26 + 28 | 0;
  i28 = HEAP32[i27 >> 2] | 0;
  i29 = FUNCTION_TABLE_iii[i28 & 63](i25, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
  _abort();
 }
 i30 = HEAP32[i4 + 4 >> 2] | 0;
 if ((i6 + 1 | 0) >>> 0 >= i30 >>> 0) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22787, 57) | 0;
  i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i15, 22500, 128) | 0;
  i17 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i16, 33554, 6) | 0;
  i18 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i17, 309) | 0;
  i19 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i18, 33561, 2) | 0;
  i20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i19, 22845, 15) | 0;
  i21 = HEAP32[i20 >> 2] | 0;
  i22 = i21 + -12 | 0;
  i23 = HEAP32[i22 >> 2] | 0;
  i24 = i20 + i23 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i24);
  i25 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i26 = HEAP32[i25 >> 2] | 0;
  i27 = i26 + 28 | 0;
  i28 = HEAP32[i27 >> 2] | 0;
  i29 = FUNCTION_TABLE_iii[i28 & 63](i25, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
  _abort();
 }
 i20 = i7 + -1 | 0;
 if ((i7 | 0) <= 0) {
  i31 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22861, 58) | 0;
  i32 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i31, 22500, 128) | 0;
  i33 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i32, 33554, 6) | 0;
  i34 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i33, 310) | 0;
  i35 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i34, 33561, 2) | 0;
  i36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i35, 22920, 15) | 0;
  i37 = HEAP32[i36 >> 2] | 0;
  i38 = i37 + -12 | 0;
  i39 = HEAP32[i38 >> 2] | 0;
  i40 = i36 + i39 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i40);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i42 = HEAP32[i41 >> 2] | 0;
  i43 = i42 + 28 | 0;
  i44 = HEAP32[i43 >> 2] | 0;
  i45 = FUNCTION_TABLE_iii[i44 & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i36, i45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i36) | 0;
  _abort();
 }
 i29 = i7 + 1 | 0;
 i25 = HEAP32[i4 + 8 >> 2] | 0;
 if (i29 >>> 0 >= i25 >>> 0) {
  i31 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22861, 58) | 0;
  i32 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i31, 22500, 128) | 0;
  i33 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i32, 33554, 6) | 0;
  i34 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i33, 310) | 0;
  i35 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i34, 33561, 2) | 0;
  i36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i35, 22920, 15) | 0;
  i37 = HEAP32[i36 >> 2] | 0;
  i38 = i37 + -12 | 0;
  i39 = HEAP32[i38 >> 2] | 0;
  i40 = i36 + i39 | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i40);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i42 = HEAP32[i41 >> 2] | 0;
  i43 = i42 + 28 | 0;
  i44 = HEAP32[i43 >> 2] | 0;
  i45 = FUNCTION_TABLE_iii[i44 & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i36, i45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i36) | 0;
  _abort();
 }
 if ((HEAP32[i3 + 4 >> 2] | 0) != (i30 | 0)) {
  i36 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24097, 51) | 0, 22500, 128) | 0, 33554, 6) | 0, 311) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i36 + (HEAP32[(HEAP32[i36 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i45 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i41 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i45 >> 2] | 0) + 28 >> 2] & 63](i45, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i36, i41) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i36) | 0;
  _abort();
 }
 if ((i30 | 0) != (HEAP32[i5 + 4 >> 2] | 0)) {
  i30 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24496, 51) | 0, 22500, 128) | 0, 33554, 6) | 0, 312) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i30 + (HEAP32[(HEAP32[i30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i36 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i41 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i36 >> 2] | 0) + 28 >> 2] & 63](i36, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i30, i41) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i30) | 0;
  _abort();
 }
 if ((HEAP32[i3 + 8 >> 2] | 0) != (i25 | 0)) {
  i30 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24149, 53) | 0, 22500, 128) | 0, 33554, 6) | 0, 313) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i30 + (HEAP32[(HEAP32[i30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i41 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i41 >> 2] | 0) + 28 >> 2] & 63](i41, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i30, i36) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i30) | 0;
  _abort();
 }
 if ((i25 | 0) == (HEAP32[i5 + 8 >> 2] | 0)) {
  i25 = (__ZNK6vision5Image3getIfEEPKT_m(i3, i20) | 0) + (i6 << 2) | 0;
  i30 = (__ZNK6vision5Image3getIfEEPKT_m(i3, i7) | 0) + (i6 << 2) | 0;
  i36 = (__ZNK6vision5Image3getIfEEPKT_m(i3, i29) | 0) + (i6 << 2) | 0;
  i3 = (__ZNK6vision5Image3getIfEEPKT_m(i4, i7) | 0) + (i6 << 2) | 0;
  i41 = (__ZNK6vision5Image3getIfEEPKT_m(i5, i20) | 0) + (i6 << 2) | 0;
  i20 = (__ZNK6vision5Image3getIfEEPKT_m(i5, i7) | 0) + (i6 << 2) | 0;
  i45 = (__ZNK6vision5Image3getIfEEPKT_m(i5, i29) | 0) + (i6 << 2) | 0;
  __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii(i10, i11, i12, i13, i14, i4, i6, i7);
  d46 = +HEAPF32[i20 >> 2];
  d47 = +HEAPF32[i30 >> 2];
  d48 = d46 + (d47 - +HEAPF32[i3 >> 2] * 2.0);
  d49 = (+HEAPF32[i30 + -4 >> 2] - +HEAPF32[i30 + 4 >> 2] + (+HEAPF32[i20 + 4 >> 2] - +HEAPF32[i20 + -4 >> 2])) * .25;
  d50 = (+HEAPF32[i25 >> 2] - +HEAPF32[i36 >> 2] + (+HEAPF32[i45 >> 2] - +HEAPF32[i41 >> 2])) * .25;
  HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
  i12 = HEAP32[i14 >> 2] | 0;
  HEAP32[i1 + 4 >> 2] = i12;
  HEAPF32[i1 + 8 >> 2] = d49;
  HEAP32[i1 + 12 >> 2] = i12;
  HEAP32[i1 + 16 >> 2] = HEAP32[i13 >> 2];
  HEAPF32[i1 + 20 >> 2] = d50;
  HEAPF32[i1 + 24 >> 2] = d49;
  HEAPF32[i1 + 28 >> 2] = d50;
  HEAPF32[i1 + 32 >> 2] = d48;
  HEAPF32[i2 >> 2] = -+HEAPF32[i10 >> 2];
  HEAPF32[i2 + 4 >> 2] = -+HEAPF32[i11 >> 2];
  HEAPF32[i2 + 8 >> 2] = -((d46 - d47) * .5);
  STACKTOP = i8;
  return;
 } else {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24548, 53) | 0, 22500, 128) | 0, 33554, 6) | 0, 314) | 0, 33561, 2) | 0, 22993, 29) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
}

function _arLabelingSubDWZ(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, d41 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = HEAP32[i5 >> 2] | 0;
 i9 = i3 + -1 | 0;
 if ((i2 | 0) > 0) {
  i10 = i8;
  i11 = 0;
  i12 = i8 + ((Math_imul(i9, i2) | 0) << 1) | 0;
  while (1) {
   HEAP16[i12 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i2 | 0)) break; else {
    i10 = i10 + 2 | 0;
    i12 = i12 + 2 | 0;
   }
  }
 }
 i12 = i2 + -1 | 0;
 if ((i3 | 0) > 0) {
  i10 = i8;
  i11 = 0;
  i13 = i8 + (i12 << 1) | 0;
  while (1) {
   HEAP16[i13 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i3 | 0)) break; else {
    i10 = i10 + (i2 << 1) | 0;
    i13 = i13 + (i2 << 1) | 0;
   }
  }
  i13 = i5 + 1179664 | 0;
  i10 = i2 + 1 | 0;
  if ((i3 | 0) > 2) {
   i11 = (i2 | 0) > 2;
   i14 = 0 - i2 | 0;
   i15 = i1 + i10 | 0;
   i1 = i4 + i10 | 0;
   i4 = 1;
   i16 = 0;
   i17 = i8 + (i10 << 1) | 0;
   L12 : while (1) {
    if (i11) {
     i10 = i1;
     i8 = i16;
     i18 = i15;
     i19 = 1;
     i20 = i17;
     while (1) {
      do if ((HEAPU8[i18 >> 0] | 0) > (HEAPU8[i10 >> 0] | 0)) {
       i21 = i20 + (i14 << 1) | 0;
       i22 = HEAP16[i21 >> 1] | 0;
       if (i22 << 16 >> 16 > 0) {
        HEAP16[i20 >> 1] = i22;
        i23 = (i22 << 16 >> 16) * 7 | 0;
        i22 = i5 + 1310736 + (i23 + -7 << 2) | 0;
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + 1;
        i22 = i5 + 1310736 + (i23 + -6 << 2) | 0;
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + i19;
        i22 = i5 + 1310736 + (i23 + -5 << 2) | 0;
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + i4;
        HEAP32[i5 + 1310736 + (i23 + -1 << 2) >> 2] = i4;
        i24 = i8;
        break;
       }
       i23 = HEAP16[i21 + 2 >> 1] | 0;
       i22 = i23 << 16 >> 16;
       i25 = HEAP16[i21 + -2 >> 1] | 0;
       i21 = i25 << 16 >> 16;
       i26 = i25 << 16 >> 16 > 0;
       if (i23 << 16 >> 16 <= 0) {
        if (i26) {
         HEAP16[i20 >> 1] = i25;
         i25 = i21 * 7 | 0;
         i27 = i5 + 1310736 + (i25 + -7 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
         i27 = i5 + 1310736 + (i25 + -6 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i19;
         i27 = i5 + 1310736 + (i25 + -5 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i4;
         i27 = i5 + 1310736 + (i25 + -3 << 2) | 0;
         if ((HEAP32[i27 >> 2] | 0) < (i19 | 0)) HEAP32[i27 >> 2] = i19;
         HEAP32[i5 + 1310736 + (i25 + -1 << 2) >> 2] = i4;
         i24 = i8;
         break;
        }
        i25 = HEAP16[i20 + -2 >> 1] | 0;
        if (i25 << 16 >> 16 > 0) {
         HEAP16[i20 >> 1] = i25;
         i27 = (i25 << 16 >> 16) * 7 | 0;
         i25 = i5 + 1310736 + (i27 + -7 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
         i25 = i5 + 1310736 + (i27 + -6 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i19;
         i25 = i5 + 1310736 + (i27 + -5 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i4;
         i25 = i5 + 1310736 + (i27 + -3 << 2) | 0;
         if ((HEAP32[i25 >> 2] | 0) >= (i19 | 0)) {
          i24 = i8;
          break;
         }
         HEAP32[i25 >> 2] = i19;
         i24 = i8;
         break;
        } else {
         i25 = i8 + 1 | 0;
         if ((i8 | 0) > 32767) {
          i28 = 52;
          break L12;
         }
         HEAP16[i20 >> 1] = i25;
         HEAP32[i5 + 1179664 + (i8 << 2) >> 2] = i25 << 16 >> 16;
         i27 = i8 * 7 | 0;
         HEAP32[i5 + 1310736 + (i27 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i27 + 1 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 2 << 2) >> 2] = i4;
         HEAP32[i5 + 1310736 + (i27 + 3 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 4 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 5 << 2) >> 2] = i4;
         HEAP32[i5 + 1310736 + (i27 + 6 << 2) >> 2] = i4;
         i24 = i25;
         break;
        }
       }
       if (i26) {
        i26 = HEAP32[i5 + 1179664 + (i22 + -1 << 2) >> 2] | 0;
        i25 = HEAP32[i5 + 1179664 + (i21 + -1 << 2) >> 2] | 0;
        if ((i26 | 0) > (i25 | 0)) {
         HEAP16[i20 >> 1] = i25;
         if ((i8 | 0) > 0) {
          i21 = i13;
          i27 = 0;
          while (1) {
           if ((HEAP32[i21 >> 2] | 0) == (i26 | 0)) HEAP32[i21 >> 2] = i25;
           i27 = i27 + 1 | 0;
           if ((i27 | 0) == (i8 | 0)) {
            i29 = i25;
            break;
           } else i21 = i21 + 4 | 0;
          }
         } else i29 = i25;
        } else {
         HEAP16[i20 >> 1] = i26;
         if ((i26 | 0) < (i25 | 0) & (i8 | 0) > 0) {
          i21 = i13;
          i27 = 0;
          while (1) {
           if ((HEAP32[i21 >> 2] | 0) == (i25 | 0)) HEAP32[i21 >> 2] = i26;
           i27 = i27 + 1 | 0;
           if ((i27 | 0) == (i8 | 0)) {
            i29 = i26;
            break;
           } else i21 = i21 + 4 | 0;
          }
         } else i29 = i26;
        }
        i21 = (i29 << 16 >> 16) * 7 | 0;
        i27 = i5 + 1310736 + (i21 + -7 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
        i27 = i5 + 1310736 + (i21 + -6 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i19;
        i27 = i5 + 1310736 + (i21 + -5 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i4;
        HEAP32[i5 + 1310736 + (i21 + -1 << 2) >> 2] = i4;
        i24 = i8;
        break;
       }
       i21 = HEAP16[i20 + -2 >> 1] | 0;
       if (i21 << 16 >> 16 <= 0) {
        HEAP16[i20 >> 1] = i23;
        i27 = i22 * 7 | 0;
        i25 = i5 + 1310736 + (i27 + -7 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
        i25 = i5 + 1310736 + (i27 + -6 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i19;
        i25 = i5 + 1310736 + (i27 + -5 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i4;
        i25 = i5 + 1310736 + (i27 + -4 << 2) | 0;
        if ((HEAP32[i25 >> 2] | 0) > (i19 | 0)) HEAP32[i25 >> 2] = i19;
        HEAP32[i5 + 1310736 + (i27 + -1 << 2) >> 2] = i4;
        i24 = i8;
        break;
       }
       i27 = HEAP32[i5 + 1179664 + (i22 + -1 << 2) >> 2] | 0;
       i25 = HEAP32[i5 + 1179664 + ((i21 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i27 | 0) > (i25 | 0)) {
        HEAP16[i20 >> 1] = i25;
        if ((i8 | 0) > 0) {
         i21 = 0;
         i30 = i13;
         while (1) {
          if ((HEAP32[i30 >> 2] | 0) == (i27 | 0)) HEAP32[i30 >> 2] = i25;
          i21 = i21 + 1 | 0;
          if ((i21 | 0) == (i8 | 0)) {
           i31 = i25;
           break;
          } else i30 = i30 + 4 | 0;
         }
        } else i31 = i25;
       } else {
        HEAP16[i20 >> 1] = i27;
        if ((i27 | 0) < (i25 | 0) & (i8 | 0) > 0) {
         i30 = 0;
         i21 = i13;
         while (1) {
          if ((HEAP32[i21 >> 2] | 0) == (i25 | 0)) HEAP32[i21 >> 2] = i27;
          i30 = i30 + 1 | 0;
          if ((i30 | 0) == (i8 | 0)) {
           i31 = i27;
           break;
          } else i21 = i21 + 4 | 0;
         }
        } else i31 = i27;
       }
       i21 = (i31 << 16 >> 16) * 7 | 0;
       i30 = i5 + 1310736 + (i21 + -7 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + 1;
       i30 = i5 + 1310736 + (i21 + -6 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + i19;
       i30 = i5 + 1310736 + (i21 + -5 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + i4;
       i24 = i8;
      } else {
       HEAP16[i20 >> 1] = 0;
       i24 = i8;
      } while (0);
      i19 = i19 + 1 | 0;
      i30 = i18 + 1 | 0;
      i21 = i10 + 1 | 0;
      i25 = i20 + 2 | 0;
      if ((i19 | 0) >= (i12 | 0)) {
       i32 = i30;
       i33 = i21;
       i34 = i24;
       i35 = i25;
       break;
      } else {
       i10 = i21;
       i8 = i24;
       i18 = i30;
       i20 = i25;
      }
     }
    } else {
     i32 = i15;
     i33 = i1;
     i34 = i16;
     i35 = i17;
    }
    i4 = i4 + 1 | 0;
    if ((i4 | 0) >= (i9 | 0)) break; else {
     i15 = i32 + 2 | 0;
     i1 = i33 + 2 | 0;
     i16 = i34;
     i17 = i35 + 4 | 0;
    }
   }
   if ((i28 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i36 = -1;
    STACKTOP = i6;
    return i36 | 0;
   }
   i7 = i5 + 8 | 0;
   i35 = i5 + 12 | 0;
   i17 = i5 + 655376 | 0;
   if ((i34 | 0) < 1) i37 = i7; else {
    i16 = 1;
    i33 = 1;
    i1 = i13;
    while (1) {
     i13 = HEAP32[i1 >> 2] | 0;
     if ((i13 | 0) == (i33 | 0)) {
      i38 = i16 + 1 | 0;
      i39 = i16;
     } else {
      i38 = i16;
      i39 = HEAP32[i5 + 1179664 + (i13 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i1 >> 2] = i39;
     if ((i33 | 0) == (i34 | 0)) break; else {
      i16 = i38;
      i33 = i33 + 1 | 0;
      i1 = i1 + 4 | 0;
     }
    }
    i1 = i38 + -1 | 0;
    HEAP32[i7 >> 2] = i1;
    if (!i1) {
     i36 = 0;
     STACKTOP = i6;
     return i36 | 0;
    }
    _memset(i35 | 0, 0, i1 << 2 | 0) | 0;
    _memset(i17 | 0, 0, i1 << 4 | 0) | 0;
    if ((i38 | 0) > 1) {
     i38 = 0;
     do {
      i17 = i38 << 2;
      HEAP32[i5 + 131084 + (i17 << 2) >> 2] = i2;
      HEAP32[i5 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i17 | 2) << 2) >> 2] = i3;
      HEAP32[i5 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
      i38 = i38 + 1 | 0;
     } while ((i38 | 0) != (i1 | 0));
    }
    if ((i34 | 0) > 0) {
     i38 = 0;
     do {
      i3 = (HEAP32[i5 + 1179664 + (i38 << 2) >> 2] | 0) + -1 | 0;
      i2 = i38 * 7 | 0;
      i17 = i5 + 12 + (i3 << 2) | 0;
      HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i2 << 2) >> 2] | 0);
      i17 = i3 << 1;
      i35 = i5 + 655376 + (i17 << 3) | 0;
      HEAPF64[i35 >> 3] = +HEAPF64[i35 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 1 << 2) >> 2] | 0);
      i35 = i5 + 655376 + ((i17 | 1) << 3) | 0;
      HEAPF64[i35 >> 3] = +HEAPF64[i35 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 2 << 2) >> 2] | 0);
      i35 = i3 << 2;
      i3 = i5 + 131084 + (i35 << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i2 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i17 | 0)) HEAP32[i3 >> 2] = i17;
      i17 = i5 + 131084 + ((i35 | 1) << 2) | 0;
      i3 = HEAP32[i5 + 1310736 + (i2 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i3 | 0)) HEAP32[i17 >> 2] = i3;
      i3 = i5 + 131084 + ((i35 | 2) << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i2 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i17 | 0)) HEAP32[i3 >> 2] = i17;
      i17 = i5 + 131084 + ((i35 | 3) << 2) | 0;
      i35 = HEAP32[i5 + 1310736 + (i2 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i35 | 0)) HEAP32[i17 >> 2] = i35;
      i38 = i38 + 1 | 0;
     } while ((i38 | 0) != (i34 | 0));
     i40 = HEAP32[i7 >> 2] | 0;
    } else i40 = i1;
    if ((i40 | 0) <= 0) {
     i36 = 0;
     STACKTOP = i6;
     return i36 | 0;
    }
    i1 = 0;
    do {
     d41 = +(HEAP32[i5 + 12 + (i1 << 2) >> 2] | 0);
     i7 = i1 << 1;
     i34 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] / d41;
     i34 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] / d41;
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) < (i40 | 0));
    i36 = 0;
    STACKTOP = i6;
    return i36 | 0;
   }
  } else i28 = 57;
 } else i28 = 57;
 if ((i28 | 0) == 57) i37 = i5 + 8 | 0;
 HEAP32[i37 >> 2] = 0;
 i36 = 0;
 STACKTOP = i6;
 return i36 | 0;
}

function _arLabelingSubDBZ(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, d41 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = HEAP32[i5 >> 2] | 0;
 i9 = i3 + -1 | 0;
 if ((i2 | 0) > 0) {
  i10 = i8;
  i11 = 0;
  i12 = i8 + ((Math_imul(i9, i2) | 0) << 1) | 0;
  while (1) {
   HEAP16[i12 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i2 | 0)) break; else {
    i10 = i10 + 2 | 0;
    i12 = i12 + 2 | 0;
   }
  }
 }
 i12 = i2 + -1 | 0;
 if ((i3 | 0) > 0) {
  i10 = i8;
  i11 = 0;
  i13 = i8 + (i12 << 1) | 0;
  while (1) {
   HEAP16[i13 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i3 | 0)) break; else {
    i10 = i10 + (i2 << 1) | 0;
    i13 = i13 + (i2 << 1) | 0;
   }
  }
  i13 = i5 + 1179664 | 0;
  i10 = i2 + 1 | 0;
  if ((i3 | 0) > 2) {
   i11 = (i2 | 0) > 2;
   i14 = 0 - i2 | 0;
   i15 = i1 + i10 | 0;
   i1 = i4 + i10 | 0;
   i4 = 1;
   i16 = 0;
   i17 = i8 + (i10 << 1) | 0;
   L12 : while (1) {
    if (i11) {
     i10 = i1;
     i8 = i16;
     i18 = i15;
     i19 = 1;
     i20 = i17;
     while (1) {
      do if ((HEAPU8[i18 >> 0] | 0) > (HEAPU8[i10 >> 0] | 0)) {
       HEAP16[i20 >> 1] = 0;
       i21 = i8;
      } else {
       i22 = i20 + (i14 << 1) | 0;
       i23 = HEAP16[i22 >> 1] | 0;
       if (i23 << 16 >> 16 > 0) {
        HEAP16[i20 >> 1] = i23;
        i24 = (i23 << 16 >> 16) * 7 | 0;
        i23 = i5 + 1310736 + (i24 + -7 << 2) | 0;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + 1;
        i23 = i5 + 1310736 + (i24 + -6 << 2) | 0;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + i19;
        i23 = i5 + 1310736 + (i24 + -5 << 2) | 0;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + i4;
        HEAP32[i5 + 1310736 + (i24 + -1 << 2) >> 2] = i4;
        i21 = i8;
        break;
       }
       i24 = HEAP16[i22 + 2 >> 1] | 0;
       i23 = i24 << 16 >> 16;
       i25 = HEAP16[i22 + -2 >> 1] | 0;
       i22 = i25 << 16 >> 16;
       i26 = i25 << 16 >> 16 > 0;
       if (i24 << 16 >> 16 <= 0) {
        if (i26) {
         HEAP16[i20 >> 1] = i25;
         i25 = i22 * 7 | 0;
         i27 = i5 + 1310736 + (i25 + -7 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
         i27 = i5 + 1310736 + (i25 + -6 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i19;
         i27 = i5 + 1310736 + (i25 + -5 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i4;
         i27 = i5 + 1310736 + (i25 + -3 << 2) | 0;
         if ((HEAP32[i27 >> 2] | 0) < (i19 | 0)) HEAP32[i27 >> 2] = i19;
         HEAP32[i5 + 1310736 + (i25 + -1 << 2) >> 2] = i4;
         i21 = i8;
         break;
        }
        i25 = HEAP16[i20 + -2 >> 1] | 0;
        if (i25 << 16 >> 16 > 0) {
         HEAP16[i20 >> 1] = i25;
         i27 = (i25 << 16 >> 16) * 7 | 0;
         i25 = i5 + 1310736 + (i27 + -7 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
         i25 = i5 + 1310736 + (i27 + -6 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i19;
         i25 = i5 + 1310736 + (i27 + -5 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i4;
         i25 = i5 + 1310736 + (i27 + -3 << 2) | 0;
         if ((HEAP32[i25 >> 2] | 0) >= (i19 | 0)) {
          i21 = i8;
          break;
         }
         HEAP32[i25 >> 2] = i19;
         i21 = i8;
         break;
        } else {
         i25 = i8 + 1 | 0;
         if ((i8 | 0) > 32767) {
          i28 = 52;
          break L12;
         }
         HEAP16[i20 >> 1] = i25;
         HEAP32[i5 + 1179664 + (i8 << 2) >> 2] = i25 << 16 >> 16;
         i27 = i8 * 7 | 0;
         HEAP32[i5 + 1310736 + (i27 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i27 + 1 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 2 << 2) >> 2] = i4;
         HEAP32[i5 + 1310736 + (i27 + 3 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 4 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 5 << 2) >> 2] = i4;
         HEAP32[i5 + 1310736 + (i27 + 6 << 2) >> 2] = i4;
         i21 = i25;
         break;
        }
       }
       if (i26) {
        i26 = HEAP32[i5 + 1179664 + (i23 + -1 << 2) >> 2] | 0;
        i25 = HEAP32[i5 + 1179664 + (i22 + -1 << 2) >> 2] | 0;
        if ((i26 | 0) > (i25 | 0)) {
         HEAP16[i20 >> 1] = i25;
         if ((i8 | 0) > 0) {
          i22 = i13;
          i27 = 0;
          while (1) {
           if ((HEAP32[i22 >> 2] | 0) == (i26 | 0)) HEAP32[i22 >> 2] = i25;
           i27 = i27 + 1 | 0;
           if ((i27 | 0) == (i8 | 0)) {
            i29 = i25;
            break;
           } else i22 = i22 + 4 | 0;
          }
         } else i29 = i25;
        } else {
         HEAP16[i20 >> 1] = i26;
         if ((i26 | 0) < (i25 | 0) & (i8 | 0) > 0) {
          i22 = i13;
          i27 = 0;
          while (1) {
           if ((HEAP32[i22 >> 2] | 0) == (i25 | 0)) HEAP32[i22 >> 2] = i26;
           i27 = i27 + 1 | 0;
           if ((i27 | 0) == (i8 | 0)) {
            i29 = i26;
            break;
           } else i22 = i22 + 4 | 0;
          }
         } else i29 = i26;
        }
        i22 = (i29 << 16 >> 16) * 7 | 0;
        i27 = i5 + 1310736 + (i22 + -7 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
        i27 = i5 + 1310736 + (i22 + -6 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i19;
        i27 = i5 + 1310736 + (i22 + -5 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i4;
        HEAP32[i5 + 1310736 + (i22 + -1 << 2) >> 2] = i4;
        i21 = i8;
        break;
       }
       i22 = HEAP16[i20 + -2 >> 1] | 0;
       if (i22 << 16 >> 16 <= 0) {
        HEAP16[i20 >> 1] = i24;
        i27 = i23 * 7 | 0;
        i25 = i5 + 1310736 + (i27 + -7 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
        i25 = i5 + 1310736 + (i27 + -6 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i19;
        i25 = i5 + 1310736 + (i27 + -5 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i4;
        i25 = i5 + 1310736 + (i27 + -4 << 2) | 0;
        if ((HEAP32[i25 >> 2] | 0) > (i19 | 0)) HEAP32[i25 >> 2] = i19;
        HEAP32[i5 + 1310736 + (i27 + -1 << 2) >> 2] = i4;
        i21 = i8;
        break;
       }
       i27 = HEAP32[i5 + 1179664 + (i23 + -1 << 2) >> 2] | 0;
       i25 = HEAP32[i5 + 1179664 + ((i22 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i27 | 0) > (i25 | 0)) {
        HEAP16[i20 >> 1] = i25;
        if ((i8 | 0) > 0) {
         i22 = 0;
         i30 = i13;
         while (1) {
          if ((HEAP32[i30 >> 2] | 0) == (i27 | 0)) HEAP32[i30 >> 2] = i25;
          i22 = i22 + 1 | 0;
          if ((i22 | 0) == (i8 | 0)) {
           i31 = i25;
           break;
          } else i30 = i30 + 4 | 0;
         }
        } else i31 = i25;
       } else {
        HEAP16[i20 >> 1] = i27;
        if ((i27 | 0) < (i25 | 0) & (i8 | 0) > 0) {
         i30 = 0;
         i22 = i13;
         while (1) {
          if ((HEAP32[i22 >> 2] | 0) == (i25 | 0)) HEAP32[i22 >> 2] = i27;
          i30 = i30 + 1 | 0;
          if ((i30 | 0) == (i8 | 0)) {
           i31 = i27;
           break;
          } else i22 = i22 + 4 | 0;
         }
        } else i31 = i27;
       }
       i22 = (i31 << 16 >> 16) * 7 | 0;
       i30 = i5 + 1310736 + (i22 + -7 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + 1;
       i30 = i5 + 1310736 + (i22 + -6 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + i19;
       i30 = i5 + 1310736 + (i22 + -5 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + i4;
       i21 = i8;
      } while (0);
      i19 = i19 + 1 | 0;
      i30 = i18 + 1 | 0;
      i22 = i10 + 1 | 0;
      i25 = i20 + 2 | 0;
      if ((i19 | 0) >= (i12 | 0)) {
       i32 = i30;
       i33 = i22;
       i34 = i21;
       i35 = i25;
       break;
      } else {
       i10 = i22;
       i8 = i21;
       i18 = i30;
       i20 = i25;
      }
     }
    } else {
     i32 = i15;
     i33 = i1;
     i34 = i16;
     i35 = i17;
    }
    i4 = i4 + 1 | 0;
    if ((i4 | 0) >= (i9 | 0)) break; else {
     i15 = i32 + 2 | 0;
     i1 = i33 + 2 | 0;
     i16 = i34;
     i17 = i35 + 4 | 0;
    }
   }
   if ((i28 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i36 = -1;
    STACKTOP = i6;
    return i36 | 0;
   }
   i7 = i5 + 8 | 0;
   i35 = i5 + 12 | 0;
   i17 = i5 + 655376 | 0;
   if ((i34 | 0) < 1) i37 = i7; else {
    i16 = 1;
    i33 = 1;
    i1 = i13;
    while (1) {
     i13 = HEAP32[i1 >> 2] | 0;
     if ((i13 | 0) == (i33 | 0)) {
      i38 = i16 + 1 | 0;
      i39 = i16;
     } else {
      i38 = i16;
      i39 = HEAP32[i5 + 1179664 + (i13 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i1 >> 2] = i39;
     if ((i33 | 0) == (i34 | 0)) break; else {
      i16 = i38;
      i33 = i33 + 1 | 0;
      i1 = i1 + 4 | 0;
     }
    }
    i1 = i38 + -1 | 0;
    HEAP32[i7 >> 2] = i1;
    if (!i1) {
     i36 = 0;
     STACKTOP = i6;
     return i36 | 0;
    }
    _memset(i35 | 0, 0, i1 << 2 | 0) | 0;
    _memset(i17 | 0, 0, i1 << 4 | 0) | 0;
    if ((i38 | 0) > 1) {
     i38 = 0;
     do {
      i17 = i38 << 2;
      HEAP32[i5 + 131084 + (i17 << 2) >> 2] = i2;
      HEAP32[i5 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i17 | 2) << 2) >> 2] = i3;
      HEAP32[i5 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
      i38 = i38 + 1 | 0;
     } while ((i38 | 0) != (i1 | 0));
    }
    if ((i34 | 0) > 0) {
     i38 = 0;
     do {
      i3 = (HEAP32[i5 + 1179664 + (i38 << 2) >> 2] | 0) + -1 | 0;
      i2 = i38 * 7 | 0;
      i17 = i5 + 12 + (i3 << 2) | 0;
      HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i2 << 2) >> 2] | 0);
      i17 = i3 << 1;
      i35 = i5 + 655376 + (i17 << 3) | 0;
      HEAPF64[i35 >> 3] = +HEAPF64[i35 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 1 << 2) >> 2] | 0);
      i35 = i5 + 655376 + ((i17 | 1) << 3) | 0;
      HEAPF64[i35 >> 3] = +HEAPF64[i35 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 2 << 2) >> 2] | 0);
      i35 = i3 << 2;
      i3 = i5 + 131084 + (i35 << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i2 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i17 | 0)) HEAP32[i3 >> 2] = i17;
      i17 = i5 + 131084 + ((i35 | 1) << 2) | 0;
      i3 = HEAP32[i5 + 1310736 + (i2 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i3 | 0)) HEAP32[i17 >> 2] = i3;
      i3 = i5 + 131084 + ((i35 | 2) << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i2 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i17 | 0)) HEAP32[i3 >> 2] = i17;
      i17 = i5 + 131084 + ((i35 | 3) << 2) | 0;
      i35 = HEAP32[i5 + 1310736 + (i2 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i35 | 0)) HEAP32[i17 >> 2] = i35;
      i38 = i38 + 1 | 0;
     } while ((i38 | 0) != (i34 | 0));
     i40 = HEAP32[i7 >> 2] | 0;
    } else i40 = i1;
    if ((i40 | 0) <= 0) {
     i36 = 0;
     STACKTOP = i6;
     return i36 | 0;
    }
    i1 = 0;
    do {
     d41 = +(HEAP32[i5 + 12 + (i1 << 2) >> 2] | 0);
     i7 = i1 << 1;
     i34 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] / d41;
     i34 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] / d41;
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) < (i40 | 0));
    i36 = 0;
    STACKTOP = i6;
    return i36 | 0;
   }
  } else i28 = 57;
 } else i28 = 57;
 if ((i28 | 0) == 57) i37 = i5 + 8 | 0;
 HEAP32[i37 >> 2] = 0;
 i36 = 0;
 STACKTOP = i6;
 return i36 | 0;
}

function _pattern_match(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0, d18 = 0.0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, d25 = 0.0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, d30 = 0.0, i31 = 0, d32 = 0.0, i33 = 0, d34 = 0.0, i35 = 0, d36 = 0.0, i37 = 0, i38 = 0, i39 = 0, d40 = 0.0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, d51 = 0.0, i52 = 0, d53 = 0.0, i54 = 0, i55 = 0, d56 = 0.0, i57 = 0, i58 = 0, i59 = 0, d60 = 0.0, i61 = 0, i62 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8 + 8 | 0;
 if ((i1 | 0) == 0 | (i4 | 0) < 1) {
  HEAP32[i5 >> 2] = 0;
  HEAP32[i6 >> 2] = 0;
  HEAPF64[i7 >> 3] = -1.0;
  i10 = -1;
  STACKTOP = i8;
  return i10 | 0;
 }
 switch (i2 | 0) {
 case 0:
  {
   i2 = Math_imul(i4, i4) | 0;
   i11 = i2 * 3 | 0;
   i12 = _malloc(i2 * 12 | 0) | 0;
   if (!i12) {
    _arLog(0, 3, 20510, i8);
    _exit(1);
   }
   i13 = (i2 | 0) == 0;
   if (!i13) {
    i2 = 0;
    i14 = 0;
    do {
     i14 = i14 + (~HEAP8[i3 + i2 >> 0] & 255) | 0;
     i2 = i2 + 1 | 0;
    } while (i2 >>> 0 < i11 >>> 0);
    i2 = (i14 >>> 0) / (i11 >>> 0) | 0;
    if (!i13) {
     i14 = 0;
     i15 = 0;
     do {
      i16 = (~HEAP8[i3 + i15 >> 0] & 255) - i2 | 0;
      HEAP32[i12 + (i15 << 2) >> 2] = i16;
      i14 = (Math_imul(i16, i16) | 0) + i14 | 0;
      i15 = i15 + 1 | 0;
     } while (i15 >>> 0 < i11 >>> 0);
     d17 = +(i14 | 0);
    } else d17 = 0.0;
   } else d17 = 0.0;
   d18 = +Math_sqrt(+d17);
   if (d18 / (+(i4 | 0) * 1.7320508) < 15.0) {
    HEAP32[i5 >> 2] = 0;
    HEAP32[i6 >> 2] = 0;
    HEAPF64[i7 >> 3] = -1.0;
    _free(i12);
    i10 = -2;
    STACKTOP = i8;
    return i10 | 0;
   }
   i14 = HEAP32[i1 >> 2] | 0;
   L24 : do if ((i14 | 0) > 0) {
    i15 = HEAP32[i1 + 8 >> 2] | 0;
    i2 = i1 + 16 | 0;
    i16 = i1 + 12 | 0;
    if (i13) {
     d17 = 0.0;
     i19 = 0;
     i20 = -1;
     i21 = -1;
     i22 = -1;
     while (1) {
      i23 = i20;
      L30 : while (1) {
       i24 = i23 + 1 | 0;
       switch (HEAP32[i15 + (i24 << 2) >> 2] | 0) {
       case 0:
        {
         i23 = i24;
         break;
        }
       case 2:
        {
         d25 = d17;
         i26 = i21;
         i27 = i22;
         break L30;
         break;
        }
       default:
        {
         i28 = 27;
         break L30;
        }
       }
      }
      if ((i28 | 0) == 27) {
       i28 = 0;
       i23 = HEAP32[i2 >> 2] | 0;
       i29 = i24 << 2;
       d30 = 0.0 / +HEAPF64[i23 + (i29 << 3) >> 3] / d18;
       i31 = d30 > d17;
       d32 = i31 ? d30 : d17;
       d30 = 0.0 / +HEAPF64[i23 + ((i29 | 1) << 3) >> 3] / d18;
       i33 = d30 > d32;
       d34 = i33 ? d30 : d32;
       d32 = 0.0 / +HEAPF64[i23 + ((i29 | 2) << 3) >> 3] / d18;
       i35 = d32 > d34;
       d30 = i35 ? d32 : d34;
       d34 = 0.0 / +HEAPF64[i23 + ((i29 | 3) << 3) >> 3] / d18;
       i29 = d34 > d30;
       d25 = i29 ? d34 : d30;
       i26 = i29 | (i35 | (i33 | i31)) ? i24 : i21;
       i27 = i29 ? 3 : i35 ? 2 : i33 ? 1 : i31 ? 0 : i22;
      }
      i31 = i19 + 1 | 0;
      if ((i31 | 0) < (i14 | 0)) {
       d17 = d25;
       i19 = i31;
       i20 = i24;
       i21 = i26;
       i22 = i27;
      } else {
       d36 = d25;
       i37 = i26;
       i38 = i27;
       break L24;
      }
     }
    }
    d17 = 0.0;
    i22 = 0;
    i21 = -1;
    i20 = -1;
    i19 = -1;
    while (1) {
     i31 = i21;
     L38 : while (1) {
      i39 = i31 + 1 | 0;
      switch (HEAP32[i15 + (i39 << 2) >> 2] | 0) {
      case 0:
       {
        i31 = i39;
        break;
       }
      case 2:
       {
        d40 = d17;
        i41 = i20;
        i42 = i19;
        break L38;
        break;
       }
      default:
       {
        i28 = 21;
        break L38;
       }
      }
     }
     if ((i28 | 0) == 21) {
      i28 = 0;
      i31 = HEAP32[i2 >> 2] | 0;
      i33 = i39 << 2;
      i35 = HEAP32[i16 >> 2] | 0;
      i29 = HEAP32[i35 + (i33 << 2) >> 2] | 0;
      i23 = 0;
      i43 = 0;
      do {
       i23 = (Math_imul(HEAP32[i29 + (i43 << 2) >> 2] | 0, HEAP32[i12 + (i43 << 2) >> 2] | 0) | 0) + i23 | 0;
       i43 = i43 + 1 | 0;
      } while (i43 >>> 0 < i11 >>> 0);
      d30 = +(i23 | 0) / +HEAPF64[i31 + (i33 << 3) >> 3] / d18;
      i43 = d30 > d17;
      i29 = i43 ? 0 : i19;
      d34 = i43 ? d30 : d17;
      i44 = i33 | 1;
      i45 = HEAP32[i35 + (i44 << 2) >> 2] | 0;
      i46 = 0;
      i47 = 0;
      do {
       i46 = (Math_imul(HEAP32[i45 + (i47 << 2) >> 2] | 0, HEAP32[i12 + (i47 << 2) >> 2] | 0) | 0) + i46 | 0;
       i47 = i47 + 1 | 0;
      } while (i47 >>> 0 < i11 >>> 0);
      d30 = +(i46 | 0) / +HEAPF64[i31 + (i44 << 3) >> 3] / d18;
      i47 = d30 > d34;
      i45 = i47 ? 1 : i29;
      i23 = i47 | i43;
      d32 = i47 ? d30 : d34;
      i47 = i33 | 2;
      i48 = HEAP32[i35 + (i47 << 2) >> 2] | 0;
      i49 = 0;
      i50 = 0;
      do {
       i49 = (Math_imul(HEAP32[i48 + (i50 << 2) >> 2] | 0, HEAP32[i12 + (i50 << 2) >> 2] | 0) | 0) + i49 | 0;
       i50 = i50 + 1 | 0;
      } while (i50 >>> 0 < i11 >>> 0);
      d34 = +(i49 | 0) / +HEAPF64[i31 + (i47 << 3) >> 3] / d18;
      i50 = d34 > d32;
      i48 = i50 ? 2 : i45;
      i43 = i50 | i23;
      d30 = i50 ? d34 : d32;
      i50 = i33 | 3;
      i29 = HEAP32[i35 + (i50 << 2) >> 2] | 0;
      i44 = 0;
      i46 = 0;
      do {
       i44 = (Math_imul(HEAP32[i29 + (i46 << 2) >> 2] | 0, HEAP32[i12 + (i46 << 2) >> 2] | 0) | 0) + i44 | 0;
       i46 = i46 + 1 | 0;
      } while (i46 >>> 0 < i11 >>> 0);
      d32 = +(i44 | 0) / +HEAPF64[i31 + (i50 << 3) >> 3] / d18;
      i46 = d32 > d30;
      d40 = i46 ? d32 : d30;
      i41 = i46 | i43 ? i39 : i20;
      i42 = i46 ? 3 : i48;
     }
     i46 = i22 + 1 | 0;
     if ((i46 | 0) < (i14 | 0)) {
      d17 = d40;
      i22 = i46;
      i21 = i39;
      i20 = i41;
      i19 = i42;
     } else {
      d36 = d40;
      i37 = i41;
      i38 = i42;
      break;
     }
    }
   } else {
    d36 = 0.0;
    i37 = -1;
    i38 = -1;
   } while (0);
   HEAP32[i6 >> 2] = i38;
   HEAP32[i5 >> 2] = i37;
   HEAPF64[i7 >> 3] = d36;
   _free(i12);
   i10 = 0;
   STACKTOP = i8;
   return i10 | 0;
  }
 case 1:
  {
   i12 = Math_imul(i4, i4) | 0;
   i37 = _malloc(i12 << 2) | 0;
   if (!i37) {
    _arLog(0, 3, 20510, i9);
    _exit(1);
   }
   i9 = (i12 | 0) == 0;
   if (!i9) {
    i38 = 0;
    i42 = 0;
    do {
     i38 = i38 + (~HEAP8[i3 + i42 >> 0] & 255) | 0;
     i42 = i42 + 1 | 0;
    } while ((i42 | 0) != (i12 | 0));
    i42 = (i38 >>> 0) / (i12 >>> 0) | 0;
    if (!i9) {
     i38 = 0;
     i41 = 0;
     do {
      i39 = (~HEAP8[i3 + i41 >> 0] & 255) - i42 | 0;
      HEAP32[i37 + (i41 << 2) >> 2] = i39;
      i38 = (Math_imul(i39, i39) | 0) + i38 | 0;
      i41 = i41 + 1 | 0;
     } while ((i41 | 0) != (i12 | 0));
     d51 = +(i38 | 0);
    } else d51 = 0.0;
   } else d51 = 0.0;
   d36 = +Math_sqrt(+d51);
   if (d36 / +(i4 | 0) < 15.0) {
    HEAP32[i5 >> 2] = 0;
    HEAP32[i6 >> 2] = 0;
    HEAPF64[i7 >> 3] = -1.0;
    _free(i37);
    i10 = -2;
    STACKTOP = i8;
    return i10 | 0;
   }
   i4 = HEAP32[i1 >> 2] | 0;
   L75 : do if ((i4 | 0) > 0) {
    i38 = HEAP32[i1 + 8 >> 2] | 0;
    i41 = i1 + 24 | 0;
    i42 = i1 + 20 | 0;
    if (i9) {
     i3 = 0;
     i39 = -1;
     i14 = -1;
     i11 = -1;
     d51 = 0.0;
     while (1) {
      i27 = i39;
      L81 : while (1) {
       i52 = i27 + 1 | 0;
       switch (HEAP32[i38 + (i52 << 2) >> 2] | 0) {
       case 0:
        {
         i27 = i52;
         break;
        }
       case 2:
        {
         d53 = d51;
         i54 = i14;
         i55 = i11;
         break L81;
         break;
        }
       default:
        {
         i28 = 53;
         break L81;
        }
       }
      }
      if ((i28 | 0) == 53) {
       i28 = 0;
       i27 = HEAP32[i41 >> 2] | 0;
       i48 = i52 << 2;
       d30 = 0.0 / +HEAPF64[i27 + (i48 << 3) >> 3] / d36;
       i43 = d30 > d51;
       d40 = i43 ? d30 : d51;
       d30 = 0.0 / +HEAPF64[i27 + ((i48 | 1) << 3) >> 3] / d36;
       i50 = d30 > d40;
       d18 = i50 ? d30 : d40;
       d40 = 0.0 / +HEAPF64[i27 + ((i48 | 2) << 3) >> 3] / d36;
       i31 = d40 > d18;
       d30 = i31 ? d40 : d18;
       d18 = 0.0 / +HEAPF64[i27 + ((i48 | 3) << 3) >> 3] / d36;
       i48 = d18 > d30;
       d53 = i48 ? d18 : d30;
       i54 = i48 | (i31 | (i50 | i43)) ? i52 : i14;
       i55 = i48 ? 3 : i31 ? 2 : i50 ? 1 : i43 ? 0 : i11;
      }
      i43 = i3 + 1 | 0;
      if ((i43 | 0) < (i4 | 0)) {
       i3 = i43;
       i39 = i52;
       i14 = i54;
       i11 = i55;
       d51 = d53;
      } else {
       d56 = d53;
       i57 = i54;
       i58 = i55;
       break L75;
      }
     }
    }
    i11 = 0;
    i14 = -1;
    i39 = -1;
    i3 = -1;
    d51 = 0.0;
    while (1) {
     i43 = i14;
     L89 : while (1) {
      i59 = i43 + 1 | 0;
      switch (HEAP32[i38 + (i59 << 2) >> 2] | 0) {
      case 0:
       {
        i43 = i59;
        break;
       }
      case 2:
       {
        d60 = d51;
        i61 = i39;
        i62 = i3;
        break L89;
        break;
       }
      default:
       {
        i28 = 47;
        break L89;
       }
      }
     }
     if ((i28 | 0) == 47) {
      i28 = 0;
      i43 = HEAP32[i41 >> 2] | 0;
      i50 = i59 << 2;
      i31 = HEAP32[i42 >> 2] | 0;
      i48 = HEAP32[i31 + (i50 << 2) >> 2] | 0;
      i27 = 0;
      i44 = 0;
      do {
       i27 = (Math_imul(HEAP32[i48 + (i44 << 2) >> 2] | 0, HEAP32[i37 + (i44 << 2) >> 2] | 0) | 0) + i27 | 0;
       i44 = i44 + 1 | 0;
      } while ((i44 | 0) != (i12 | 0));
      d30 = +(i27 | 0) / +HEAPF64[i43 + (i50 << 3) >> 3] / d36;
      i44 = d30 > d51;
      i48 = i44 ? 0 : i3;
      d18 = i44 ? d30 : d51;
      i26 = i50 | 1;
      i24 = HEAP32[i31 + (i26 << 2) >> 2] | 0;
      i13 = 0;
      i19 = 0;
      do {
       i13 = (Math_imul(HEAP32[i24 + (i19 << 2) >> 2] | 0, HEAP32[i37 + (i19 << 2) >> 2] | 0) | 0) + i13 | 0;
       i19 = i19 + 1 | 0;
      } while ((i19 | 0) != (i12 | 0));
      d30 = +(i13 | 0) / +HEAPF64[i43 + (i26 << 3) >> 3] / d36;
      i19 = d30 > d18;
      i24 = i19 ? 1 : i48;
      i27 = i19 | i44;
      d40 = i19 ? d30 : d18;
      i19 = i50 | 2;
      i20 = HEAP32[i31 + (i19 << 2) >> 2] | 0;
      i21 = 0;
      i22 = 0;
      do {
       i21 = (Math_imul(HEAP32[i20 + (i22 << 2) >> 2] | 0, HEAP32[i37 + (i22 << 2) >> 2] | 0) | 0) + i21 | 0;
       i22 = i22 + 1 | 0;
      } while ((i22 | 0) != (i12 | 0));
      d18 = +(i21 | 0) / +HEAPF64[i43 + (i19 << 3) >> 3] / d36;
      i22 = d18 > d40;
      i20 = i22 ? 2 : i24;
      i44 = i22 | i27;
      d30 = i22 ? d18 : d40;
      i22 = i50 | 3;
      i48 = HEAP32[i31 + (i22 << 2) >> 2] | 0;
      i26 = 0;
      i13 = 0;
      do {
       i26 = (Math_imul(HEAP32[i48 + (i13 << 2) >> 2] | 0, HEAP32[i37 + (i13 << 2) >> 2] | 0) | 0) + i26 | 0;
       i13 = i13 + 1 | 0;
      } while ((i13 | 0) != (i12 | 0));
      d40 = +(i26 | 0) / +HEAPF64[i43 + (i22 << 3) >> 3] / d36;
      i13 = d40 > d30;
      d60 = i13 ? d40 : d30;
      i61 = i13 | i44 ? i59 : i39;
      i62 = i13 ? 3 : i20;
     }
     i13 = i11 + 1 | 0;
     if ((i13 | 0) < (i4 | 0)) {
      i11 = i13;
      i14 = i59;
      i39 = i61;
      i3 = i62;
      d51 = d60;
     } else {
      d56 = d60;
      i57 = i61;
      i58 = i62;
      break;
     }
    }
   } else {
    d56 = 0.0;
    i57 = -1;
    i58 = -1;
   } while (0);
   HEAP32[i6 >> 2] = i58;
   HEAP32[i5 >> 2] = i57;
   HEAPF64[i7 >> 3] = d56;
   _free(i37);
   i10 = 0;
   STACKTOP = i8;
   return i10 | 0;
  }
 default:
  {
   i10 = -1;
   STACKTOP = i8;
   return i10 | 0;
  }
 }
 return 0;
}

function _arLabelingSubDWIC(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, d40 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = (i2 | 0) / 2 | 0;
 i9 = (i3 | 0) / 2 | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 i11 = i9 + -1 | 0;
 if ((i2 | 0) > 1) {
  i12 = i10;
  i13 = i10 + ((Math_imul(i11, i8) | 0) << 1) | 0;
  i14 = 0;
  while (1) {
   HEAP16[i13 >> 1] = 0;
   HEAP16[i12 >> 1] = 0;
   i14 = i14 + 1 | 0;
   if ((i14 | 0) == (i8 | 0)) break; else {
    i12 = i12 + 2 | 0;
    i13 = i13 + 2 | 0;
   }
  }
 }
 i13 = i8 + -1 | 0;
 if ((i3 | 0) > 1) {
  i12 = i10;
  i14 = i10 + (i13 << 1) | 0;
  i15 = 0;
  while (1) {
   HEAP16[i14 >> 1] = 0;
   HEAP16[i12 >> 1] = 0;
   i15 = i15 + 1 | 0;
   if ((i15 | 0) == (i9 | 0)) break; else {
    i12 = i12 + (i8 << 1) | 0;
    i14 = i14 + (i8 << 1) | 0;
   }
  }
  i14 = i5 + 1179664 | 0;
  if ((i3 | 0) > 5) {
   i3 = (i2 | 0) > 5;
   i12 = 0 - i8 | 0;
   i15 = i1 + ((i2 << 1) + 2) | 0;
   i1 = 1;
   i16 = 0;
   i17 = i10 + (i8 + 1 << 1) | 0;
   L12 : while (1) {
    if (i3) {
     i10 = i16;
     i18 = i15;
     i19 = 1;
     i20 = i17;
     while (1) {
      do if ((HEAPU8[i18 >> 0] | 0 | 0) > (i4 | 0)) {
       i21 = i20 + (i12 << 1) | 0;
       i22 = HEAP16[i21 >> 1] | 0;
       if (i22 << 16 >> 16 > 0) {
        HEAP16[i20 >> 1] = i22;
        i23 = (i22 << 16 >> 16) * 7 | 0;
        i22 = i5 + 1310736 + (i23 + -7 << 2) | 0;
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + 1;
        i22 = i5 + 1310736 + (i23 + -6 << 2) | 0;
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + i19;
        i22 = i5 + 1310736 + (i23 + -5 << 2) | 0;
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i23 + -1 << 2) >> 2] = i1;
        i24 = i10;
        break;
       }
       i23 = HEAP16[i21 + 2 >> 1] | 0;
       i22 = i23 << 16 >> 16;
       i25 = HEAP16[i21 + -2 >> 1] | 0;
       i21 = i25 << 16 >> 16;
       i26 = i25 << 16 >> 16 > 0;
       if (i23 << 16 >> 16 <= 0) {
        if (i26) {
         HEAP16[i20 >> 1] = i25;
         i25 = i21 * 7 | 0;
         i27 = i5 + 1310736 + (i25 + -7 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
         i27 = i5 + 1310736 + (i25 + -6 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i19;
         i27 = i5 + 1310736 + (i25 + -5 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i1;
         i27 = i5 + 1310736 + (i25 + -3 << 2) | 0;
         if ((HEAP32[i27 >> 2] | 0) < (i19 | 0)) HEAP32[i27 >> 2] = i19;
         HEAP32[i5 + 1310736 + (i25 + -1 << 2) >> 2] = i1;
         i24 = i10;
         break;
        }
        i25 = HEAP16[i20 + -2 >> 1] | 0;
        if (i25 << 16 >> 16 > 0) {
         HEAP16[i20 >> 1] = i25;
         i27 = (i25 << 16 >> 16) * 7 | 0;
         i25 = i5 + 1310736 + (i27 + -7 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
         i25 = i5 + 1310736 + (i27 + -6 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i19;
         i25 = i5 + 1310736 + (i27 + -5 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i1;
         i25 = i5 + 1310736 + (i27 + -3 << 2) | 0;
         if ((HEAP32[i25 >> 2] | 0) >= (i19 | 0)) {
          i24 = i10;
          break;
         }
         HEAP32[i25 >> 2] = i19;
         i24 = i10;
         break;
        } else {
         i25 = i10 + 1 | 0;
         if ((i10 | 0) > 32767) {
          i28 = 52;
          break L12;
         }
         HEAP16[i20 >> 1] = i25;
         HEAP32[i5 + 1179664 + (i10 << 2) >> 2] = i25 << 16 >> 16;
         i27 = i10 * 7 | 0;
         HEAP32[i5 + 1310736 + (i27 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i27 + 1 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 2 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i27 + 3 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 4 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 5 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i27 + 6 << 2) >> 2] = i1;
         i24 = i25;
         break;
        }
       }
       if (i26) {
        i26 = HEAP32[i5 + 1179664 + (i22 + -1 << 2) >> 2] | 0;
        i25 = HEAP32[i5 + 1179664 + (i21 + -1 << 2) >> 2] | 0;
        if ((i26 | 0) > (i25 | 0)) {
         HEAP16[i20 >> 1] = i25;
         if ((i10 | 0) > 0) {
          i21 = i14;
          i27 = 0;
          while (1) {
           if ((HEAP32[i21 >> 2] | 0) == (i26 | 0)) HEAP32[i21 >> 2] = i25;
           i27 = i27 + 1 | 0;
           if ((i27 | 0) == (i10 | 0)) {
            i29 = i25;
            break;
           } else i21 = i21 + 4 | 0;
          }
         } else i29 = i25;
        } else {
         HEAP16[i20 >> 1] = i26;
         if ((i26 | 0) < (i25 | 0) & (i10 | 0) > 0) {
          i21 = i14;
          i27 = 0;
          while (1) {
           if ((HEAP32[i21 >> 2] | 0) == (i25 | 0)) HEAP32[i21 >> 2] = i26;
           i27 = i27 + 1 | 0;
           if ((i27 | 0) == (i10 | 0)) {
            i29 = i26;
            break;
           } else i21 = i21 + 4 | 0;
          }
         } else i29 = i26;
        }
        i21 = (i29 << 16 >> 16) * 7 | 0;
        i27 = i5 + 1310736 + (i21 + -7 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
        i27 = i5 + 1310736 + (i21 + -6 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i19;
        i27 = i5 + 1310736 + (i21 + -5 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i21 + -1 << 2) >> 2] = i1;
        i24 = i10;
        break;
       }
       i21 = HEAP16[i20 + -2 >> 1] | 0;
       if (i21 << 16 >> 16 <= 0) {
        HEAP16[i20 >> 1] = i23;
        i27 = i22 * 7 | 0;
        i25 = i5 + 1310736 + (i27 + -7 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
        i25 = i5 + 1310736 + (i27 + -6 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i19;
        i25 = i5 + 1310736 + (i27 + -5 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i1;
        i25 = i5 + 1310736 + (i27 + -4 << 2) | 0;
        if ((HEAP32[i25 >> 2] | 0) > (i19 | 0)) HEAP32[i25 >> 2] = i19;
        HEAP32[i5 + 1310736 + (i27 + -1 << 2) >> 2] = i1;
        i24 = i10;
        break;
       }
       i27 = HEAP32[i5 + 1179664 + (i22 + -1 << 2) >> 2] | 0;
       i25 = HEAP32[i5 + 1179664 + ((i21 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i27 | 0) > (i25 | 0)) {
        HEAP16[i20 >> 1] = i25;
        if ((i10 | 0) > 0) {
         i21 = i14;
         i30 = 0;
         while (1) {
          if ((HEAP32[i21 >> 2] | 0) == (i27 | 0)) HEAP32[i21 >> 2] = i25;
          i30 = i30 + 1 | 0;
          if ((i30 | 0) == (i10 | 0)) {
           i31 = i25;
           break;
          } else i21 = i21 + 4 | 0;
         }
        } else i31 = i25;
       } else {
        HEAP16[i20 >> 1] = i27;
        if ((i27 | 0) < (i25 | 0) & (i10 | 0) > 0) {
         i21 = i14;
         i30 = 0;
         while (1) {
          if ((HEAP32[i21 >> 2] | 0) == (i25 | 0)) HEAP32[i21 >> 2] = i27;
          i30 = i30 + 1 | 0;
          if ((i30 | 0) == (i10 | 0)) {
           i31 = i27;
           break;
          } else i21 = i21 + 4 | 0;
         }
        } else i31 = i27;
       }
       i21 = (i31 << 16 >> 16) * 7 | 0;
       i30 = i5 + 1310736 + (i21 + -7 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + 1;
       i30 = i5 + 1310736 + (i21 + -6 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + i19;
       i30 = i5 + 1310736 + (i21 + -5 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + i1;
       i24 = i10;
      } else {
       HEAP16[i20 >> 1] = 0;
       i24 = i10;
      } while (0);
      i19 = i19 + 1 | 0;
      i30 = i18 + 2 | 0;
      i21 = i20 + 2 | 0;
      if ((i19 | 0) >= (i13 | 0)) {
       i32 = i30;
       i33 = i24;
       i34 = i21;
       break;
      } else {
       i10 = i24;
       i18 = i30;
       i20 = i21;
      }
     }
    } else {
     i32 = i15;
     i33 = i16;
     i34 = i17;
    }
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= (i11 | 0)) break; else {
     i15 = i32 + i2 + 4 | 0;
     i16 = i33;
     i17 = i34 + 4 | 0;
    }
   }
   if ((i28 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i35 = -1;
    STACKTOP = i6;
    return i35 | 0;
   }
   i7 = i5 + 8 | 0;
   i34 = i5 + 12 | 0;
   i17 = i5 + 655376 | 0;
   if ((i33 | 0) < 1) i36 = i7; else {
    i16 = 1;
    i2 = 1;
    i32 = i14;
    while (1) {
     i14 = HEAP32[i32 >> 2] | 0;
     if ((i14 | 0) == (i2 | 0)) {
      i37 = i16 + 1 | 0;
      i38 = i16;
     } else {
      i37 = i16;
      i38 = HEAP32[i5 + 1179664 + (i14 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i32 >> 2] = i38;
     if ((i2 | 0) == (i33 | 0)) break; else {
      i16 = i37;
      i2 = i2 + 1 | 0;
      i32 = i32 + 4 | 0;
     }
    }
    i32 = i37 + -1 | 0;
    HEAP32[i7 >> 2] = i32;
    if (!i32) {
     i35 = 0;
     STACKTOP = i6;
     return i35 | 0;
    }
    _memset(i34 | 0, 0, i32 << 2 | 0) | 0;
    _memset(i17 | 0, 0, i32 << 4 | 0) | 0;
    if ((i37 | 0) > 1) {
     i37 = 0;
     do {
      i17 = i37 << 2;
      HEAP32[i5 + 131084 + (i17 << 2) >> 2] = i8;
      HEAP32[i5 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i17 | 2) << 2) >> 2] = i9;
      HEAP32[i5 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
      i37 = i37 + 1 | 0;
     } while ((i37 | 0) != (i32 | 0));
    }
    if ((i33 | 0) > 0) {
     i37 = 0;
     do {
      i9 = (HEAP32[i5 + 1179664 + (i37 << 2) >> 2] | 0) + -1 | 0;
      i8 = i37 * 7 | 0;
      i17 = i5 + 12 + (i9 << 2) | 0;
      HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i8 << 2) >> 2] | 0);
      i17 = i9 << 1;
      i34 = i5 + 655376 + (i17 << 3) | 0;
      HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] + +(HEAP32[i5 + 1310736 + (i8 + 1 << 2) >> 2] | 0);
      i34 = i5 + 655376 + ((i17 | 1) << 3) | 0;
      HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] + +(HEAP32[i5 + 1310736 + (i8 + 2 << 2) >> 2] | 0);
      i34 = i9 << 2;
      i9 = i5 + 131084 + (i34 << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i8 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i9 >> 2] | 0) > (i17 | 0)) HEAP32[i9 >> 2] = i17;
      i17 = i5 + 131084 + ((i34 | 1) << 2) | 0;
      i9 = HEAP32[i5 + 1310736 + (i8 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i9 | 0)) HEAP32[i17 >> 2] = i9;
      i9 = i5 + 131084 + ((i34 | 2) << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i8 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i9 >> 2] | 0) > (i17 | 0)) HEAP32[i9 >> 2] = i17;
      i17 = i5 + 131084 + ((i34 | 3) << 2) | 0;
      i34 = HEAP32[i5 + 1310736 + (i8 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i34 | 0)) HEAP32[i17 >> 2] = i34;
      i37 = i37 + 1 | 0;
     } while ((i37 | 0) != (i33 | 0));
     i39 = HEAP32[i7 >> 2] | 0;
    } else i39 = i32;
    if ((i39 | 0) <= 0) {
     i35 = 0;
     STACKTOP = i6;
     return i35 | 0;
    }
    i32 = 0;
    do {
     d40 = +(HEAP32[i5 + 12 + (i32 << 2) >> 2] | 0);
     i7 = i32 << 1;
     i33 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i33 >> 3] = +HEAPF64[i33 >> 3] / d40;
     i33 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i33 >> 3] = +HEAPF64[i33 >> 3] / d40;
     i32 = i32 + 1 | 0;
    } while ((i32 | 0) < (i39 | 0));
    i35 = 0;
    STACKTOP = i6;
    return i35 | 0;
   }
  } else i28 = 57;
 } else i28 = 57;
 if ((i28 | 0) == 57) i36 = i5 + 8 | 0;
 HEAP32[i36 >> 2] = 0;
 i35 = 0;
 STACKTOP = i6;
 return i35 | 0;
}

function _arLabelingSubDBIC(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, d40 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = (i2 | 0) / 2 | 0;
 i9 = (i3 | 0) / 2 | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 i11 = i9 + -1 | 0;
 if ((i2 | 0) > 1) {
  i12 = i10;
  i13 = i10 + ((Math_imul(i11, i8) | 0) << 1) | 0;
  i14 = 0;
  while (1) {
   HEAP16[i13 >> 1] = 0;
   HEAP16[i12 >> 1] = 0;
   i14 = i14 + 1 | 0;
   if ((i14 | 0) == (i8 | 0)) break; else {
    i12 = i12 + 2 | 0;
    i13 = i13 + 2 | 0;
   }
  }
 }
 i13 = i8 + -1 | 0;
 if ((i3 | 0) > 1) {
  i12 = i10;
  i14 = i10 + (i13 << 1) | 0;
  i15 = 0;
  while (1) {
   HEAP16[i14 >> 1] = 0;
   HEAP16[i12 >> 1] = 0;
   i15 = i15 + 1 | 0;
   if ((i15 | 0) == (i9 | 0)) break; else {
    i12 = i12 + (i8 << 1) | 0;
    i14 = i14 + (i8 << 1) | 0;
   }
  }
  i14 = i5 + 1179664 | 0;
  if ((i3 | 0) > 5) {
   i3 = (i2 | 0) > 5;
   i12 = 0 - i8 | 0;
   i15 = i1 + ((i2 << 1) + 2) | 0;
   i1 = 1;
   i16 = 0;
   i17 = i10 + (i8 + 1 << 1) | 0;
   L12 : while (1) {
    if (i3) {
     i10 = i16;
     i18 = i15;
     i19 = 1;
     i20 = i17;
     while (1) {
      do if ((HEAPU8[i18 >> 0] | 0 | 0) > (i4 | 0)) {
       HEAP16[i20 >> 1] = 0;
       i21 = i10;
      } else {
       i22 = i20 + (i12 << 1) | 0;
       i23 = HEAP16[i22 >> 1] | 0;
       if (i23 << 16 >> 16 > 0) {
        HEAP16[i20 >> 1] = i23;
        i24 = (i23 << 16 >> 16) * 7 | 0;
        i23 = i5 + 1310736 + (i24 + -7 << 2) | 0;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + 1;
        i23 = i5 + 1310736 + (i24 + -6 << 2) | 0;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + i19;
        i23 = i5 + 1310736 + (i24 + -5 << 2) | 0;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i24 + -1 << 2) >> 2] = i1;
        i21 = i10;
        break;
       }
       i24 = HEAP16[i22 + 2 >> 1] | 0;
       i23 = i24 << 16 >> 16;
       i25 = HEAP16[i22 + -2 >> 1] | 0;
       i22 = i25 << 16 >> 16;
       i26 = i25 << 16 >> 16 > 0;
       if (i24 << 16 >> 16 <= 0) {
        if (i26) {
         HEAP16[i20 >> 1] = i25;
         i25 = i22 * 7 | 0;
         i27 = i5 + 1310736 + (i25 + -7 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
         i27 = i5 + 1310736 + (i25 + -6 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i19;
         i27 = i5 + 1310736 + (i25 + -5 << 2) | 0;
         HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i1;
         i27 = i5 + 1310736 + (i25 + -3 << 2) | 0;
         if ((HEAP32[i27 >> 2] | 0) < (i19 | 0)) HEAP32[i27 >> 2] = i19;
         HEAP32[i5 + 1310736 + (i25 + -1 << 2) >> 2] = i1;
         i21 = i10;
         break;
        }
        i25 = HEAP16[i20 + -2 >> 1] | 0;
        if (i25 << 16 >> 16 > 0) {
         HEAP16[i20 >> 1] = i25;
         i27 = (i25 << 16 >> 16) * 7 | 0;
         i25 = i5 + 1310736 + (i27 + -7 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
         i25 = i5 + 1310736 + (i27 + -6 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i19;
         i25 = i5 + 1310736 + (i27 + -5 << 2) | 0;
         HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i1;
         i25 = i5 + 1310736 + (i27 + -3 << 2) | 0;
         if ((HEAP32[i25 >> 2] | 0) >= (i19 | 0)) {
          i21 = i10;
          break;
         }
         HEAP32[i25 >> 2] = i19;
         i21 = i10;
         break;
        } else {
         i25 = i10 + 1 | 0;
         if ((i10 | 0) > 32767) {
          i28 = 52;
          break L12;
         }
         HEAP16[i20 >> 1] = i25;
         HEAP32[i5 + 1179664 + (i10 << 2) >> 2] = i25 << 16 >> 16;
         i27 = i10 * 7 | 0;
         HEAP32[i5 + 1310736 + (i27 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i27 + 1 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 2 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i27 + 3 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 4 << 2) >> 2] = i19;
         HEAP32[i5 + 1310736 + (i27 + 5 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i27 + 6 << 2) >> 2] = i1;
         i21 = i25;
         break;
        }
       }
       if (i26) {
        i26 = HEAP32[i5 + 1179664 + (i23 + -1 << 2) >> 2] | 0;
        i25 = HEAP32[i5 + 1179664 + (i22 + -1 << 2) >> 2] | 0;
        if ((i26 | 0) > (i25 | 0)) {
         HEAP16[i20 >> 1] = i25;
         if ((i10 | 0) > 0) {
          i22 = i14;
          i27 = 0;
          while (1) {
           if ((HEAP32[i22 >> 2] | 0) == (i26 | 0)) HEAP32[i22 >> 2] = i25;
           i27 = i27 + 1 | 0;
           if ((i27 | 0) == (i10 | 0)) {
            i29 = i25;
            break;
           } else i22 = i22 + 4 | 0;
          }
         } else i29 = i25;
        } else {
         HEAP16[i20 >> 1] = i26;
         if ((i26 | 0) < (i25 | 0) & (i10 | 0) > 0) {
          i22 = i14;
          i27 = 0;
          while (1) {
           if ((HEAP32[i22 >> 2] | 0) == (i25 | 0)) HEAP32[i22 >> 2] = i26;
           i27 = i27 + 1 | 0;
           if ((i27 | 0) == (i10 | 0)) {
            i29 = i26;
            break;
           } else i22 = i22 + 4 | 0;
          }
         } else i29 = i26;
        }
        i22 = (i29 << 16 >> 16) * 7 | 0;
        i27 = i5 + 1310736 + (i22 + -7 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + 1;
        i27 = i5 + 1310736 + (i22 + -6 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i19;
        i27 = i5 + 1310736 + (i22 + -5 << 2) | 0;
        HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i22 + -1 << 2) >> 2] = i1;
        i21 = i10;
        break;
       }
       i22 = HEAP16[i20 + -2 >> 1] | 0;
       if (i22 << 16 >> 16 <= 0) {
        HEAP16[i20 >> 1] = i24;
        i27 = i23 * 7 | 0;
        i25 = i5 + 1310736 + (i27 + -7 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + 1;
        i25 = i5 + 1310736 + (i27 + -6 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i19;
        i25 = i5 + 1310736 + (i27 + -5 << 2) | 0;
        HEAP32[i25 >> 2] = (HEAP32[i25 >> 2] | 0) + i1;
        i25 = i5 + 1310736 + (i27 + -4 << 2) | 0;
        if ((HEAP32[i25 >> 2] | 0) > (i19 | 0)) HEAP32[i25 >> 2] = i19;
        HEAP32[i5 + 1310736 + (i27 + -1 << 2) >> 2] = i1;
        i21 = i10;
        break;
       }
       i27 = HEAP32[i5 + 1179664 + (i23 + -1 << 2) >> 2] | 0;
       i25 = HEAP32[i5 + 1179664 + ((i22 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i27 | 0) > (i25 | 0)) {
        HEAP16[i20 >> 1] = i25;
        if ((i10 | 0) > 0) {
         i22 = i14;
         i30 = 0;
         while (1) {
          if ((HEAP32[i22 >> 2] | 0) == (i27 | 0)) HEAP32[i22 >> 2] = i25;
          i30 = i30 + 1 | 0;
          if ((i30 | 0) == (i10 | 0)) {
           i31 = i25;
           break;
          } else i22 = i22 + 4 | 0;
         }
        } else i31 = i25;
       } else {
        HEAP16[i20 >> 1] = i27;
        if ((i27 | 0) < (i25 | 0) & (i10 | 0) > 0) {
         i22 = i14;
         i30 = 0;
         while (1) {
          if ((HEAP32[i22 >> 2] | 0) == (i25 | 0)) HEAP32[i22 >> 2] = i27;
          i30 = i30 + 1 | 0;
          if ((i30 | 0) == (i10 | 0)) {
           i31 = i27;
           break;
          } else i22 = i22 + 4 | 0;
         }
        } else i31 = i27;
       }
       i22 = (i31 << 16 >> 16) * 7 | 0;
       i30 = i5 + 1310736 + (i22 + -7 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + 1;
       i30 = i5 + 1310736 + (i22 + -6 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + i19;
       i30 = i5 + 1310736 + (i22 + -5 << 2) | 0;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + i1;
       i21 = i10;
      } while (0);
      i19 = i19 + 1 | 0;
      i30 = i18 + 2 | 0;
      i22 = i20 + 2 | 0;
      if ((i19 | 0) >= (i13 | 0)) {
       i32 = i30;
       i33 = i21;
       i34 = i22;
       break;
      } else {
       i10 = i21;
       i18 = i30;
       i20 = i22;
      }
     }
    } else {
     i32 = i15;
     i33 = i16;
     i34 = i17;
    }
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= (i11 | 0)) break; else {
     i15 = i32 + i2 + 4 | 0;
     i16 = i33;
     i17 = i34 + 4 | 0;
    }
   }
   if ((i28 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i35 = -1;
    STACKTOP = i6;
    return i35 | 0;
   }
   i7 = i5 + 8 | 0;
   i34 = i5 + 12 | 0;
   i17 = i5 + 655376 | 0;
   if ((i33 | 0) < 1) i36 = i7; else {
    i16 = 1;
    i2 = 1;
    i32 = i14;
    while (1) {
     i14 = HEAP32[i32 >> 2] | 0;
     if ((i14 | 0) == (i2 | 0)) {
      i37 = i16 + 1 | 0;
      i38 = i16;
     } else {
      i37 = i16;
      i38 = HEAP32[i5 + 1179664 + (i14 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i32 >> 2] = i38;
     if ((i2 | 0) == (i33 | 0)) break; else {
      i16 = i37;
      i2 = i2 + 1 | 0;
      i32 = i32 + 4 | 0;
     }
    }
    i32 = i37 + -1 | 0;
    HEAP32[i7 >> 2] = i32;
    if (!i32) {
     i35 = 0;
     STACKTOP = i6;
     return i35 | 0;
    }
    _memset(i34 | 0, 0, i32 << 2 | 0) | 0;
    _memset(i17 | 0, 0, i32 << 4 | 0) | 0;
    if ((i37 | 0) > 1) {
     i37 = 0;
     do {
      i17 = i37 << 2;
      HEAP32[i5 + 131084 + (i17 << 2) >> 2] = i8;
      HEAP32[i5 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i17 | 2) << 2) >> 2] = i9;
      HEAP32[i5 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
      i37 = i37 + 1 | 0;
     } while ((i37 | 0) != (i32 | 0));
    }
    if ((i33 | 0) > 0) {
     i37 = 0;
     do {
      i9 = (HEAP32[i5 + 1179664 + (i37 << 2) >> 2] | 0) + -1 | 0;
      i8 = i37 * 7 | 0;
      i17 = i5 + 12 + (i9 << 2) | 0;
      HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i8 << 2) >> 2] | 0);
      i17 = i9 << 1;
      i34 = i5 + 655376 + (i17 << 3) | 0;
      HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] + +(HEAP32[i5 + 1310736 + (i8 + 1 << 2) >> 2] | 0);
      i34 = i5 + 655376 + ((i17 | 1) << 3) | 0;
      HEAPF64[i34 >> 3] = +HEAPF64[i34 >> 3] + +(HEAP32[i5 + 1310736 + (i8 + 2 << 2) >> 2] | 0);
      i34 = i9 << 2;
      i9 = i5 + 131084 + (i34 << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i8 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i9 >> 2] | 0) > (i17 | 0)) HEAP32[i9 >> 2] = i17;
      i17 = i5 + 131084 + ((i34 | 1) << 2) | 0;
      i9 = HEAP32[i5 + 1310736 + (i8 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i9 | 0)) HEAP32[i17 >> 2] = i9;
      i9 = i5 + 131084 + ((i34 | 2) << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i8 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i9 >> 2] | 0) > (i17 | 0)) HEAP32[i9 >> 2] = i17;
      i17 = i5 + 131084 + ((i34 | 3) << 2) | 0;
      i34 = HEAP32[i5 + 1310736 + (i8 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i34 | 0)) HEAP32[i17 >> 2] = i34;
      i37 = i37 + 1 | 0;
     } while ((i37 | 0) != (i33 | 0));
     i39 = HEAP32[i7 >> 2] | 0;
    } else i39 = i32;
    if ((i39 | 0) <= 0) {
     i35 = 0;
     STACKTOP = i6;
     return i35 | 0;
    }
    i32 = 0;
    do {
     d40 = +(HEAP32[i5 + 12 + (i32 << 2) >> 2] | 0);
     i7 = i32 << 1;
     i33 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i33 >> 3] = +HEAPF64[i33 >> 3] / d40;
     i33 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i33 >> 3] = +HEAPF64[i33 >> 3] / d40;
     i32 = i32 + 1 | 0;
    } while ((i32 | 0) < (i39 | 0));
    i35 = 0;
    STACKTOP = i6;
    return i35 | 0;
   }
  } else i28 = 57;
 } else i28 = 57;
 if ((i28 | 0) == 57) i36 = i5 + 8 | 0;
 HEAP32[i36 >> 2] = 0;
 i35 = 0;
 STACKTOP = i6;
 return i35 | 0;
}

function _arLabelingSubDWRC(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, d39 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = HEAP32[i5 >> 2] | 0;
 i9 = i3 + -1 | 0;
 if ((i2 | 0) > 0) {
  i10 = i8;
  i11 = i8 + ((Math_imul(i9, i2) | 0) << 1) | 0;
  i12 = 0;
  while (1) {
   HEAP16[i11 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i12 = i12 + 1 | 0;
   if ((i12 | 0) == (i2 | 0)) break; else {
    i10 = i10 + 2 | 0;
    i11 = i11 + 2 | 0;
   }
  }
 }
 i11 = i2 + -1 | 0;
 if ((i3 | 0) > 0) {
  i10 = i8;
  i12 = i8 + (i11 << 1) | 0;
  i13 = 0;
  while (1) {
   HEAP16[i12 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i13 = i13 + 1 | 0;
   if ((i13 | 0) == (i3 | 0)) break; else {
    i10 = i10 + (i2 << 1) | 0;
    i12 = i12 + (i2 << 1) | 0;
   }
  }
  i12 = i5 + 1179664 | 0;
  i10 = i2 + 1 | 0;
  if ((i3 | 0) > 2) {
   i13 = (i2 | 0) > 2;
   i14 = 0 - i2 | 0;
   i15 = i1 + i10 | 0;
   i1 = 1;
   i16 = 0;
   i17 = i8 + (i10 << 1) | 0;
   L12 : while (1) {
    if (i13) {
     i10 = i16;
     i8 = i15;
     i18 = 1;
     i19 = i17;
     while (1) {
      do if ((HEAPU8[i8 >> 0] | 0 | 0) > (i4 | 0)) {
       i20 = i19 + (i14 << 1) | 0;
       i21 = HEAP16[i20 >> 1] | 0;
       if (i21 << 16 >> 16 > 0) {
        HEAP16[i19 >> 1] = i21;
        i22 = (i21 << 16 >> 16) * 7 | 0;
        i21 = i5 + 1310736 + (i22 + -7 << 2) | 0;
        HEAP32[i21 >> 2] = (HEAP32[i21 >> 2] | 0) + 1;
        i21 = i5 + 1310736 + (i22 + -6 << 2) | 0;
        HEAP32[i21 >> 2] = (HEAP32[i21 >> 2] | 0) + i18;
        i21 = i5 + 1310736 + (i22 + -5 << 2) | 0;
        HEAP32[i21 >> 2] = (HEAP32[i21 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i22 + -1 << 2) >> 2] = i1;
        i23 = i10;
        break;
       }
       i22 = HEAP16[i20 + 2 >> 1] | 0;
       i21 = i22 << 16 >> 16;
       i24 = HEAP16[i20 + -2 >> 1] | 0;
       i20 = i24 << 16 >> 16;
       i25 = i24 << 16 >> 16 > 0;
       if (i22 << 16 >> 16 <= 0) {
        if (i25) {
         HEAP16[i19 >> 1] = i24;
         i24 = i20 * 7 | 0;
         i26 = i5 + 1310736 + (i24 + -7 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + 1;
         i26 = i5 + 1310736 + (i24 + -6 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i18;
         i26 = i5 + 1310736 + (i24 + -5 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i1;
         i26 = i5 + 1310736 + (i24 + -3 << 2) | 0;
         if ((HEAP32[i26 >> 2] | 0) < (i18 | 0)) HEAP32[i26 >> 2] = i18;
         HEAP32[i5 + 1310736 + (i24 + -1 << 2) >> 2] = i1;
         i23 = i10;
         break;
        }
        i24 = HEAP16[i19 + -2 >> 1] | 0;
        if (i24 << 16 >> 16 > 0) {
         HEAP16[i19 >> 1] = i24;
         i26 = (i24 << 16 >> 16) * 7 | 0;
         i24 = i5 + 1310736 + (i26 + -7 << 2) | 0;
         HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 1;
         i24 = i5 + 1310736 + (i26 + -6 << 2) | 0;
         HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i18;
         i24 = i5 + 1310736 + (i26 + -5 << 2) | 0;
         HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i1;
         i24 = i5 + 1310736 + (i26 + -3 << 2) | 0;
         if ((HEAP32[i24 >> 2] | 0) >= (i18 | 0)) {
          i23 = i10;
          break;
         }
         HEAP32[i24 >> 2] = i18;
         i23 = i10;
         break;
        } else {
         i24 = i10 + 1 | 0;
         if ((i10 | 0) > 32767) {
          i27 = 52;
          break L12;
         }
         HEAP16[i19 >> 1] = i24;
         HEAP32[i5 + 1179664 + (i10 << 2) >> 2] = i24 << 16 >> 16;
         i26 = i10 * 7 | 0;
         HEAP32[i5 + 1310736 + (i26 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i26 + 1 << 2) >> 2] = i18;
         HEAP32[i5 + 1310736 + (i26 + 2 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i26 + 3 << 2) >> 2] = i18;
         HEAP32[i5 + 1310736 + (i26 + 4 << 2) >> 2] = i18;
         HEAP32[i5 + 1310736 + (i26 + 5 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i26 + 6 << 2) >> 2] = i1;
         i23 = i24;
         break;
        }
       }
       if (i25) {
        i25 = HEAP32[i5 + 1179664 + (i21 + -1 << 2) >> 2] | 0;
        i24 = HEAP32[i5 + 1179664 + (i20 + -1 << 2) >> 2] | 0;
        if ((i25 | 0) > (i24 | 0)) {
         HEAP16[i19 >> 1] = i24;
         if ((i10 | 0) > 0) {
          i20 = i12;
          i26 = 0;
          while (1) {
           if ((HEAP32[i20 >> 2] | 0) == (i25 | 0)) HEAP32[i20 >> 2] = i24;
           i26 = i26 + 1 | 0;
           if ((i26 | 0) == (i10 | 0)) {
            i28 = i24;
            break;
           } else i20 = i20 + 4 | 0;
          }
         } else i28 = i24;
        } else {
         HEAP16[i19 >> 1] = i25;
         if ((i25 | 0) < (i24 | 0) & (i10 | 0) > 0) {
          i20 = i12;
          i26 = 0;
          while (1) {
           if ((HEAP32[i20 >> 2] | 0) == (i24 | 0)) HEAP32[i20 >> 2] = i25;
           i26 = i26 + 1 | 0;
           if ((i26 | 0) == (i10 | 0)) {
            i28 = i25;
            break;
           } else i20 = i20 + 4 | 0;
          }
         } else i28 = i25;
        }
        i20 = (i28 << 16 >> 16) * 7 | 0;
        i26 = i5 + 1310736 + (i20 + -7 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + 1;
        i26 = i5 + 1310736 + (i20 + -6 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i18;
        i26 = i5 + 1310736 + (i20 + -5 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i20 + -1 << 2) >> 2] = i1;
        i23 = i10;
        break;
       }
       i20 = HEAP16[i19 + -2 >> 1] | 0;
       if (i20 << 16 >> 16 <= 0) {
        HEAP16[i19 >> 1] = i22;
        i26 = i21 * 7 | 0;
        i24 = i5 + 1310736 + (i26 + -7 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 1;
        i24 = i5 + 1310736 + (i26 + -6 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i18;
        i24 = i5 + 1310736 + (i26 + -5 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i1;
        i24 = i5 + 1310736 + (i26 + -4 << 2) | 0;
        if ((HEAP32[i24 >> 2] | 0) > (i18 | 0)) HEAP32[i24 >> 2] = i18;
        HEAP32[i5 + 1310736 + (i26 + -1 << 2) >> 2] = i1;
        i23 = i10;
        break;
       }
       i26 = HEAP32[i5 + 1179664 + (i21 + -1 << 2) >> 2] | 0;
       i24 = HEAP32[i5 + 1179664 + ((i20 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i26 | 0) > (i24 | 0)) {
        HEAP16[i19 >> 1] = i24;
        if ((i10 | 0) > 0) {
         i20 = i12;
         i29 = 0;
         while (1) {
          if ((HEAP32[i20 >> 2] | 0) == (i26 | 0)) HEAP32[i20 >> 2] = i24;
          i29 = i29 + 1 | 0;
          if ((i29 | 0) == (i10 | 0)) {
           i30 = i24;
           break;
          } else i20 = i20 + 4 | 0;
         }
        } else i30 = i24;
       } else {
        HEAP16[i19 >> 1] = i26;
        if ((i26 | 0) < (i24 | 0) & (i10 | 0) > 0) {
         i20 = i12;
         i29 = 0;
         while (1) {
          if ((HEAP32[i20 >> 2] | 0) == (i24 | 0)) HEAP32[i20 >> 2] = i26;
          i29 = i29 + 1 | 0;
          if ((i29 | 0) == (i10 | 0)) {
           i30 = i26;
           break;
          } else i20 = i20 + 4 | 0;
         }
        } else i30 = i26;
       }
       i20 = (i30 << 16 >> 16) * 7 | 0;
       i29 = i5 + 1310736 + (i20 + -7 << 2) | 0;
       HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
       i29 = i5 + 1310736 + (i20 + -6 << 2) | 0;
       HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i18;
       i29 = i5 + 1310736 + (i20 + -5 << 2) | 0;
       HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i1;
       i23 = i10;
      } else {
       HEAP16[i19 >> 1] = 0;
       i23 = i10;
      } while (0);
      i18 = i18 + 1 | 0;
      i29 = i8 + 1 | 0;
      i20 = i19 + 2 | 0;
      if ((i18 | 0) >= (i11 | 0)) {
       i31 = i29;
       i32 = i23;
       i33 = i20;
       break;
      } else {
       i10 = i23;
       i8 = i29;
       i19 = i20;
      }
     }
    } else {
     i31 = i15;
     i32 = i16;
     i33 = i17;
    }
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= (i9 | 0)) break; else {
     i15 = i31 + 2 | 0;
     i16 = i32;
     i17 = i33 + 4 | 0;
    }
   }
   if ((i27 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i34 = -1;
    STACKTOP = i6;
    return i34 | 0;
   }
   i7 = i5 + 8 | 0;
   i33 = i5 + 12 | 0;
   i17 = i5 + 655376 | 0;
   if ((i32 | 0) < 1) i35 = i7; else {
    i16 = 1;
    i31 = 1;
    i15 = i12;
    while (1) {
     i12 = HEAP32[i15 >> 2] | 0;
     if ((i12 | 0) == (i31 | 0)) {
      i36 = i16 + 1 | 0;
      i37 = i16;
     } else {
      i36 = i16;
      i37 = HEAP32[i5 + 1179664 + (i12 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i15 >> 2] = i37;
     if ((i31 | 0) == (i32 | 0)) break; else {
      i16 = i36;
      i31 = i31 + 1 | 0;
      i15 = i15 + 4 | 0;
     }
    }
    i15 = i36 + -1 | 0;
    HEAP32[i7 >> 2] = i15;
    if (!i15) {
     i34 = 0;
     STACKTOP = i6;
     return i34 | 0;
    }
    _memset(i33 | 0, 0, i15 << 2 | 0) | 0;
    _memset(i17 | 0, 0, i15 << 4 | 0) | 0;
    if ((i36 | 0) > 1) {
     i36 = 0;
     do {
      i17 = i36 << 2;
      HEAP32[i5 + 131084 + (i17 << 2) >> 2] = i2;
      HEAP32[i5 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i17 | 2) << 2) >> 2] = i3;
      HEAP32[i5 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
      i36 = i36 + 1 | 0;
     } while ((i36 | 0) != (i15 | 0));
    }
    if ((i32 | 0) > 0) {
     i36 = 0;
     do {
      i3 = (HEAP32[i5 + 1179664 + (i36 << 2) >> 2] | 0) + -1 | 0;
      i2 = i36 * 7 | 0;
      i17 = i5 + 12 + (i3 << 2) | 0;
      HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i2 << 2) >> 2] | 0);
      i17 = i3 << 1;
      i33 = i5 + 655376 + (i17 << 3) | 0;
      HEAPF64[i33 >> 3] = +HEAPF64[i33 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 1 << 2) >> 2] | 0);
      i33 = i5 + 655376 + ((i17 | 1) << 3) | 0;
      HEAPF64[i33 >> 3] = +HEAPF64[i33 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 2 << 2) >> 2] | 0);
      i33 = i3 << 2;
      i3 = i5 + 131084 + (i33 << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i2 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i17 | 0)) HEAP32[i3 >> 2] = i17;
      i17 = i5 + 131084 + ((i33 | 1) << 2) | 0;
      i3 = HEAP32[i5 + 1310736 + (i2 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i3 | 0)) HEAP32[i17 >> 2] = i3;
      i3 = i5 + 131084 + ((i33 | 2) << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i2 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i17 | 0)) HEAP32[i3 >> 2] = i17;
      i17 = i5 + 131084 + ((i33 | 3) << 2) | 0;
      i33 = HEAP32[i5 + 1310736 + (i2 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i33 | 0)) HEAP32[i17 >> 2] = i33;
      i36 = i36 + 1 | 0;
     } while ((i36 | 0) != (i32 | 0));
     i38 = HEAP32[i7 >> 2] | 0;
    } else i38 = i15;
    if ((i38 | 0) <= 0) {
     i34 = 0;
     STACKTOP = i6;
     return i34 | 0;
    }
    i15 = 0;
    do {
     d39 = +(HEAP32[i5 + 12 + (i15 << 2) >> 2] | 0);
     i7 = i15 << 1;
     i32 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i32 >> 3] = +HEAPF64[i32 >> 3] / d39;
     i32 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i32 >> 3] = +HEAPF64[i32 >> 3] / d39;
     i15 = i15 + 1 | 0;
    } while ((i15 | 0) < (i38 | 0));
    i34 = 0;
    STACKTOP = i6;
    return i34 | 0;
   }
  } else i27 = 57;
 } else i27 = 57;
 if ((i27 | 0) == 57) i35 = i5 + 8 | 0;
 HEAP32[i35 >> 2] = 0;
 i34 = 0;
 STACKTOP = i6;
 return i34 | 0;
}

function _arLabelingSubDBRC(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, d39 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = HEAP32[i5 >> 2] | 0;
 i9 = i3 + -1 | 0;
 if ((i2 | 0) > 0) {
  i10 = i8;
  i11 = i8 + ((Math_imul(i9, i2) | 0) << 1) | 0;
  i12 = 0;
  while (1) {
   HEAP16[i11 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i12 = i12 + 1 | 0;
   if ((i12 | 0) == (i2 | 0)) break; else {
    i10 = i10 + 2 | 0;
    i11 = i11 + 2 | 0;
   }
  }
 }
 i11 = i2 + -1 | 0;
 if ((i3 | 0) > 0) {
  i10 = i8;
  i12 = i8 + (i11 << 1) | 0;
  i13 = 0;
  while (1) {
   HEAP16[i12 >> 1] = 0;
   HEAP16[i10 >> 1] = 0;
   i13 = i13 + 1 | 0;
   if ((i13 | 0) == (i3 | 0)) break; else {
    i10 = i10 + (i2 << 1) | 0;
    i12 = i12 + (i2 << 1) | 0;
   }
  }
  i12 = i5 + 1179664 | 0;
  i10 = i2 + 1 | 0;
  if ((i3 | 0) > 2) {
   i13 = (i2 | 0) > 2;
   i14 = 0 - i2 | 0;
   i15 = i1 + i10 | 0;
   i1 = 1;
   i16 = 0;
   i17 = i8 + (i10 << 1) | 0;
   L12 : while (1) {
    if (i13) {
     i10 = i16;
     i8 = i15;
     i18 = 1;
     i19 = i17;
     while (1) {
      do if ((HEAPU8[i8 >> 0] | 0 | 0) > (i4 | 0)) {
       HEAP16[i19 >> 1] = 0;
       i20 = i10;
      } else {
       i21 = i19 + (i14 << 1) | 0;
       i22 = HEAP16[i21 >> 1] | 0;
       if (i22 << 16 >> 16 > 0) {
        HEAP16[i19 >> 1] = i22;
        i23 = (i22 << 16 >> 16) * 7 | 0;
        i22 = i5 + 1310736 + (i23 + -7 << 2) | 0;
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + 1;
        i22 = i5 + 1310736 + (i23 + -6 << 2) | 0;
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + i18;
        i22 = i5 + 1310736 + (i23 + -5 << 2) | 0;
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i23 + -1 << 2) >> 2] = i1;
        i20 = i10;
        break;
       }
       i23 = HEAP16[i21 + 2 >> 1] | 0;
       i22 = i23 << 16 >> 16;
       i24 = HEAP16[i21 + -2 >> 1] | 0;
       i21 = i24 << 16 >> 16;
       i25 = i24 << 16 >> 16 > 0;
       if (i23 << 16 >> 16 <= 0) {
        if (i25) {
         HEAP16[i19 >> 1] = i24;
         i24 = i21 * 7 | 0;
         i26 = i5 + 1310736 + (i24 + -7 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + 1;
         i26 = i5 + 1310736 + (i24 + -6 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i18;
         i26 = i5 + 1310736 + (i24 + -5 << 2) | 0;
         HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i1;
         i26 = i5 + 1310736 + (i24 + -3 << 2) | 0;
         if ((HEAP32[i26 >> 2] | 0) < (i18 | 0)) HEAP32[i26 >> 2] = i18;
         HEAP32[i5 + 1310736 + (i24 + -1 << 2) >> 2] = i1;
         i20 = i10;
         break;
        }
        i24 = HEAP16[i19 + -2 >> 1] | 0;
        if (i24 << 16 >> 16 > 0) {
         HEAP16[i19 >> 1] = i24;
         i26 = (i24 << 16 >> 16) * 7 | 0;
         i24 = i5 + 1310736 + (i26 + -7 << 2) | 0;
         HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 1;
         i24 = i5 + 1310736 + (i26 + -6 << 2) | 0;
         HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i18;
         i24 = i5 + 1310736 + (i26 + -5 << 2) | 0;
         HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i1;
         i24 = i5 + 1310736 + (i26 + -3 << 2) | 0;
         if ((HEAP32[i24 >> 2] | 0) >= (i18 | 0)) {
          i20 = i10;
          break;
         }
         HEAP32[i24 >> 2] = i18;
         i20 = i10;
         break;
        } else {
         i24 = i10 + 1 | 0;
         if ((i10 | 0) > 32767) {
          i27 = 52;
          break L12;
         }
         HEAP16[i19 >> 1] = i24;
         HEAP32[i5 + 1179664 + (i10 << 2) >> 2] = i24 << 16 >> 16;
         i26 = i10 * 7 | 0;
         HEAP32[i5 + 1310736 + (i26 << 2) >> 2] = 1;
         HEAP32[i5 + 1310736 + (i26 + 1 << 2) >> 2] = i18;
         HEAP32[i5 + 1310736 + (i26 + 2 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i26 + 3 << 2) >> 2] = i18;
         HEAP32[i5 + 1310736 + (i26 + 4 << 2) >> 2] = i18;
         HEAP32[i5 + 1310736 + (i26 + 5 << 2) >> 2] = i1;
         HEAP32[i5 + 1310736 + (i26 + 6 << 2) >> 2] = i1;
         i20 = i24;
         break;
        }
       }
       if (i25) {
        i25 = HEAP32[i5 + 1179664 + (i22 + -1 << 2) >> 2] | 0;
        i24 = HEAP32[i5 + 1179664 + (i21 + -1 << 2) >> 2] | 0;
        if ((i25 | 0) > (i24 | 0)) {
         HEAP16[i19 >> 1] = i24;
         if ((i10 | 0) > 0) {
          i21 = i12;
          i26 = 0;
          while (1) {
           if ((HEAP32[i21 >> 2] | 0) == (i25 | 0)) HEAP32[i21 >> 2] = i24;
           i26 = i26 + 1 | 0;
           if ((i26 | 0) == (i10 | 0)) {
            i28 = i24;
            break;
           } else i21 = i21 + 4 | 0;
          }
         } else i28 = i24;
        } else {
         HEAP16[i19 >> 1] = i25;
         if ((i25 | 0) < (i24 | 0) & (i10 | 0) > 0) {
          i21 = i12;
          i26 = 0;
          while (1) {
           if ((HEAP32[i21 >> 2] | 0) == (i24 | 0)) HEAP32[i21 >> 2] = i25;
           i26 = i26 + 1 | 0;
           if ((i26 | 0) == (i10 | 0)) {
            i28 = i25;
            break;
           } else i21 = i21 + 4 | 0;
          }
         } else i28 = i25;
        }
        i21 = (i28 << 16 >> 16) * 7 | 0;
        i26 = i5 + 1310736 + (i21 + -7 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + 1;
        i26 = i5 + 1310736 + (i21 + -6 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i18;
        i26 = i5 + 1310736 + (i21 + -5 << 2) | 0;
        HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + i1;
        HEAP32[i5 + 1310736 + (i21 + -1 << 2) >> 2] = i1;
        i20 = i10;
        break;
       }
       i21 = HEAP16[i19 + -2 >> 1] | 0;
       if (i21 << 16 >> 16 <= 0) {
        HEAP16[i19 >> 1] = i23;
        i26 = i22 * 7 | 0;
        i24 = i5 + 1310736 + (i26 + -7 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 1;
        i24 = i5 + 1310736 + (i26 + -6 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i18;
        i24 = i5 + 1310736 + (i26 + -5 << 2) | 0;
        HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + i1;
        i24 = i5 + 1310736 + (i26 + -4 << 2) | 0;
        if ((HEAP32[i24 >> 2] | 0) > (i18 | 0)) HEAP32[i24 >> 2] = i18;
        HEAP32[i5 + 1310736 + (i26 + -1 << 2) >> 2] = i1;
        i20 = i10;
        break;
       }
       i26 = HEAP32[i5 + 1179664 + (i22 + -1 << 2) >> 2] | 0;
       i24 = HEAP32[i5 + 1179664 + ((i21 << 16 >> 16) + -1 << 2) >> 2] | 0;
       if ((i26 | 0) > (i24 | 0)) {
        HEAP16[i19 >> 1] = i24;
        if ((i10 | 0) > 0) {
         i21 = i12;
         i29 = 0;
         while (1) {
          if ((HEAP32[i21 >> 2] | 0) == (i26 | 0)) HEAP32[i21 >> 2] = i24;
          i29 = i29 + 1 | 0;
          if ((i29 | 0) == (i10 | 0)) {
           i30 = i24;
           break;
          } else i21 = i21 + 4 | 0;
         }
        } else i30 = i24;
       } else {
        HEAP16[i19 >> 1] = i26;
        if ((i26 | 0) < (i24 | 0) & (i10 | 0) > 0) {
         i21 = i12;
         i29 = 0;
         while (1) {
          if ((HEAP32[i21 >> 2] | 0) == (i24 | 0)) HEAP32[i21 >> 2] = i26;
          i29 = i29 + 1 | 0;
          if ((i29 | 0) == (i10 | 0)) {
           i30 = i26;
           break;
          } else i21 = i21 + 4 | 0;
         }
        } else i30 = i26;
       }
       i21 = (i30 << 16 >> 16) * 7 | 0;
       i29 = i5 + 1310736 + (i21 + -7 << 2) | 0;
       HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 1;
       i29 = i5 + 1310736 + (i21 + -6 << 2) | 0;
       HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i18;
       i29 = i5 + 1310736 + (i21 + -5 << 2) | 0;
       HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i1;
       i20 = i10;
      } while (0);
      i18 = i18 + 1 | 0;
      i29 = i8 + 1 | 0;
      i21 = i19 + 2 | 0;
      if ((i18 | 0) >= (i11 | 0)) {
       i31 = i29;
       i32 = i20;
       i33 = i21;
       break;
      } else {
       i10 = i20;
       i8 = i29;
       i19 = i21;
      }
     }
    } else {
     i31 = i15;
     i32 = i16;
     i33 = i17;
    }
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= (i9 | 0)) break; else {
     i15 = i31 + 2 | 0;
     i16 = i32;
     i17 = i33 + 4 | 0;
    }
   }
   if ((i27 | 0) == 52) {
    _arLog(0, 3, 17500, i7);
    i34 = -1;
    STACKTOP = i6;
    return i34 | 0;
   }
   i7 = i5 + 8 | 0;
   i33 = i5 + 12 | 0;
   i17 = i5 + 655376 | 0;
   if ((i32 | 0) < 1) i35 = i7; else {
    i16 = 1;
    i31 = 1;
    i15 = i12;
    while (1) {
     i12 = HEAP32[i15 >> 2] | 0;
     if ((i12 | 0) == (i31 | 0)) {
      i36 = i16 + 1 | 0;
      i37 = i16;
     } else {
      i36 = i16;
      i37 = HEAP32[i5 + 1179664 + (i12 + -1 << 2) >> 2] | 0;
     }
     HEAP32[i15 >> 2] = i37;
     if ((i31 | 0) == (i32 | 0)) break; else {
      i16 = i36;
      i31 = i31 + 1 | 0;
      i15 = i15 + 4 | 0;
     }
    }
    i15 = i36 + -1 | 0;
    HEAP32[i7 >> 2] = i15;
    if (!i15) {
     i34 = 0;
     STACKTOP = i6;
     return i34 | 0;
    }
    _memset(i33 | 0, 0, i15 << 2 | 0) | 0;
    _memset(i17 | 0, 0, i15 << 4 | 0) | 0;
    if ((i36 | 0) > 1) {
     i36 = 0;
     do {
      i17 = i36 << 2;
      HEAP32[i5 + 131084 + (i17 << 2) >> 2] = i2;
      HEAP32[i5 + 131084 + ((i17 | 1) << 2) >> 2] = 0;
      HEAP32[i5 + 131084 + ((i17 | 2) << 2) >> 2] = i3;
      HEAP32[i5 + 131084 + ((i17 | 3) << 2) >> 2] = 0;
      i36 = i36 + 1 | 0;
     } while ((i36 | 0) != (i15 | 0));
    }
    if ((i32 | 0) > 0) {
     i36 = 0;
     do {
      i3 = (HEAP32[i5 + 1179664 + (i36 << 2) >> 2] | 0) + -1 | 0;
      i2 = i36 * 7 | 0;
      i17 = i5 + 12 + (i3 << 2) | 0;
      HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + (HEAP32[i5 + 1310736 + (i2 << 2) >> 2] | 0);
      i17 = i3 << 1;
      i33 = i5 + 655376 + (i17 << 3) | 0;
      HEAPF64[i33 >> 3] = +HEAPF64[i33 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 1 << 2) >> 2] | 0);
      i33 = i5 + 655376 + ((i17 | 1) << 3) | 0;
      HEAPF64[i33 >> 3] = +HEAPF64[i33 >> 3] + +(HEAP32[i5 + 1310736 + (i2 + 2 << 2) >> 2] | 0);
      i33 = i3 << 2;
      i3 = i5 + 131084 + (i33 << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i2 + 3 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i17 | 0)) HEAP32[i3 >> 2] = i17;
      i17 = i5 + 131084 + ((i33 | 1) << 2) | 0;
      i3 = HEAP32[i5 + 1310736 + (i2 + 4 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i3 | 0)) HEAP32[i17 >> 2] = i3;
      i3 = i5 + 131084 + ((i33 | 2) << 2) | 0;
      i17 = HEAP32[i5 + 1310736 + (i2 + 5 << 2) >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) > (i17 | 0)) HEAP32[i3 >> 2] = i17;
      i17 = i5 + 131084 + ((i33 | 3) << 2) | 0;
      i33 = HEAP32[i5 + 1310736 + (i2 + 6 << 2) >> 2] | 0;
      if ((HEAP32[i17 >> 2] | 0) < (i33 | 0)) HEAP32[i17 >> 2] = i33;
      i36 = i36 + 1 | 0;
     } while ((i36 | 0) != (i32 | 0));
     i38 = HEAP32[i7 >> 2] | 0;
    } else i38 = i15;
    if ((i38 | 0) <= 0) {
     i34 = 0;
     STACKTOP = i6;
     return i34 | 0;
    }
    i15 = 0;
    do {
     d39 = +(HEAP32[i5 + 12 + (i15 << 2) >> 2] | 0);
     i7 = i15 << 1;
     i32 = i5 + 655376 + (i7 << 3) | 0;
     HEAPF64[i32 >> 3] = +HEAPF64[i32 >> 3] / d39;
     i32 = i5 + 655376 + ((i7 | 1) << 3) | 0;
     HEAPF64[i32 >> 3] = +HEAPF64[i32 >> 3] / d39;
     i15 = i15 + 1 | 0;
    } while ((i15 | 0) < (i38 | 0));
    i34 = 0;
    STACKTOP = i6;
    return i34 | 0;
   }
  } else i27 = 57;
 } else i27 = 57;
 if ((i27 | 0) == 57) i35 = i5 + 8 | 0;
 HEAP32[i35 >> 2] = 0;
 i34 = 0;
 STACKTOP = i6;
 return i34 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis2IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, d15 = 0.0, i16 = 0, d17 = 0.0, i18 = 0, d19 = 0.0, i20 = 0, d21 = 0.0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, i26 = 0, d27 = 0.0, i28 = 0, d29 = 0.0, i30 = 0, d31 = 0.0, i32 = 0, d33 = 0.0, i34 = 0, d35 = 0.0, i36 = 0, d37 = 0.0, i38 = 0, d39 = 0.0, i40 = 0, d41 = 0.0, i42 = 0, d43 = 0.0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, d54 = 0.0, d55 = 0.0, d56 = 0.0, d57 = 0.0, d58 = 0.0, d59 = 0.0, d60 = 0.0, d61 = 0.0, d62 = 0.0, d63 = 0.0, d64 = 0.0, d65 = 0.0, d66 = 0.0, d67 = 0.0, d68 = 0.0, d69 = 0.0, d70 = 0.0, d71 = 0.0, d72 = 0.0, d73 = 0.0, d74 = 0.0, d75 = 0.0, d76 = 0.0, d77 = 0.0, d78 = 0.0, d79 = 0.0, i80 = 0, i81 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = i1 + 72 | 0;
 i6 = i2 + 72 | 0;
 d7 = +HEAPF32[i1 + 36 >> 2];
 i8 = i2 + 76 | 0;
 d9 = +HEAPF32[i1 + 40 >> 2];
 i10 = i2 + 80 | 0;
 d11 = +HEAPF32[i1 + 44 >> 2];
 i12 = i2 + 84 | 0;
 d13 = +HEAPF32[i1 + 48 >> 2];
 i14 = i2 + 88 | 0;
 d15 = +HEAPF32[i1 + 52 >> 2];
 i16 = i2 + 92 | 0;
 d17 = +HEAPF32[i1 + 56 >> 2];
 i18 = i2 + 96 | 0;
 d19 = +HEAPF32[i1 + 60 >> 2];
 i20 = i2 + 100 | 0;
 d21 = +HEAPF32[i1 + 64 >> 2];
 i22 = i2 + 104 | 0;
 d23 = +HEAPF32[i1 + 68 >> 2];
 d24 = +HEAPF32[i6 >> 2] * d7 + +HEAPF32[i8 >> 2] * d9 + +HEAPF32[i10 >> 2] * d11 + +HEAPF32[i12 >> 2] * d13 + +HEAPF32[i14 >> 2] * d15 + +HEAPF32[i16 >> 2] * d17 + +HEAPF32[i18 >> 2] * d19 + +HEAPF32[i20 >> 2] * d21 + +HEAPF32[i22 >> 2] * d23;
 d25 = +HEAPF32[i5 >> 2] - d7 * d24;
 HEAPF32[i5 >> 2] = d25;
 i26 = i1 + 76 | 0;
 d27 = +HEAPF32[i26 >> 2] - d9 * d24;
 HEAPF32[i26 >> 2] = d27;
 i28 = i1 + 80 | 0;
 d29 = +HEAPF32[i28 >> 2] - d11 * d24;
 HEAPF32[i28 >> 2] = d29;
 i30 = i1 + 84 | 0;
 d31 = +HEAPF32[i30 >> 2] - d13 * d24;
 HEAPF32[i30 >> 2] = d31;
 i32 = i1 + 88 | 0;
 d33 = +HEAPF32[i32 >> 2] - d15 * d24;
 HEAPF32[i32 >> 2] = d33;
 i34 = i1 + 92 | 0;
 d35 = +HEAPF32[i34 >> 2] - d17 * d24;
 HEAPF32[i34 >> 2] = d35;
 i36 = i1 + 96 | 0;
 d37 = +HEAPF32[i36 >> 2] - d19 * d24;
 HEAPF32[i36 >> 2] = d37;
 i38 = i1 + 100 | 0;
 d39 = +HEAPF32[i38 >> 2] - d21 * d24;
 HEAPF32[i38 >> 2] = d39;
 i40 = i1 + 104 | 0;
 d41 = +HEAPF32[i40 >> 2] - d23 * d24;
 HEAPF32[i40 >> 2] = d41;
 i42 = i1 + 108 | 0;
 d24 = d7 * +HEAPF32[i2 + 108 >> 2] + d9 * +HEAPF32[i2 + 112 >> 2] + d11 * +HEAPF32[i2 + 116 >> 2] + d13 * +HEAPF32[i2 + 120 >> 2] + d15 * +HEAPF32[i2 + 124 >> 2] + d17 * +HEAPF32[i2 + 128 >> 2] + d19 * +HEAPF32[i2 + 132 >> 2] + d21 * +HEAPF32[i2 + 136 >> 2] + d23 * +HEAPF32[i2 + 140 >> 2];
 d43 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d43;
 i42 = i1 + 112 | 0;
 d44 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d44;
 i42 = i1 + 116 | 0;
 d45 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d45;
 i42 = i1 + 120 | 0;
 d46 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d46;
 i42 = i1 + 124 | 0;
 d47 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d47;
 i42 = i1 + 128 | 0;
 d48 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d48;
 i42 = i1 + 132 | 0;
 d49 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d49;
 i42 = i1 + 136 | 0;
 d50 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d50;
 i42 = i1 + 140 | 0;
 d51 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d51;
 i42 = i1 + 144 | 0;
 d24 = d7 * +HEAPF32[i2 + 144 >> 2] + d9 * +HEAPF32[i2 + 148 >> 2] + d11 * +HEAPF32[i2 + 152 >> 2] + d13 * +HEAPF32[i2 + 156 >> 2] + d15 * +HEAPF32[i2 + 160 >> 2] + d17 * +HEAPF32[i2 + 164 >> 2] + d19 * +HEAPF32[i2 + 168 >> 2] + d21 * +HEAPF32[i2 + 172 >> 2] + d23 * +HEAPF32[i2 + 176 >> 2];
 d52 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d52;
 i42 = i1 + 148 | 0;
 d53 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d53;
 i42 = i1 + 152 | 0;
 d54 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d54;
 i42 = i1 + 156 | 0;
 d55 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d55;
 i42 = i1 + 160 | 0;
 d56 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d56;
 i42 = i1 + 164 | 0;
 d57 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d57;
 i42 = i1 + 168 | 0;
 d58 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d58;
 i42 = i1 + 172 | 0;
 d59 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d59;
 i42 = i1 + 176 | 0;
 d60 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d60;
 i42 = i1 + 180 | 0;
 d24 = d7 * +HEAPF32[i2 + 180 >> 2] + d9 * +HEAPF32[i2 + 184 >> 2] + d11 * +HEAPF32[i2 + 188 >> 2] + d13 * +HEAPF32[i2 + 192 >> 2] + d15 * +HEAPF32[i2 + 196 >> 2] + d17 * +HEAPF32[i2 + 200 >> 2] + d19 * +HEAPF32[i2 + 204 >> 2] + d21 * +HEAPF32[i2 + 208 >> 2] + d23 * +HEAPF32[i2 + 212 >> 2];
 d61 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d61;
 i42 = i1 + 184 | 0;
 d62 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d62;
 i42 = i1 + 188 | 0;
 d63 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d63;
 i42 = i1 + 192 | 0;
 d64 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d64;
 i42 = i1 + 196 | 0;
 d65 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d65;
 i42 = i1 + 200 | 0;
 d66 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d66;
 i42 = i1 + 204 | 0;
 d67 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d67;
 i42 = i1 + 208 | 0;
 d68 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d68;
 i42 = i1 + 212 | 0;
 d69 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d69;
 i42 = i1 + 216 | 0;
 d24 = d7 * +HEAPF32[i2 + 216 >> 2] + d9 * +HEAPF32[i2 + 220 >> 2] + d11 * +HEAPF32[i2 + 224 >> 2] + d13 * +HEAPF32[i2 + 228 >> 2] + d15 * +HEAPF32[i2 + 232 >> 2] + d17 * +HEAPF32[i2 + 236 >> 2] + d19 * +HEAPF32[i2 + 240 >> 2] + d21 * +HEAPF32[i2 + 244 >> 2] + d23 * +HEAPF32[i2 + 248 >> 2];
 d70 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d70;
 i42 = i1 + 220 | 0;
 d71 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d71;
 i42 = i1 + 224 | 0;
 d72 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d72;
 i42 = i1 + 228 | 0;
 d73 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d73;
 i42 = i1 + 232 | 0;
 d74 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d74;
 i42 = i1 + 236 | 0;
 d75 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d75;
 i42 = i1 + 240 | 0;
 d76 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d76;
 i42 = i1 + 244 | 0;
 d77 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d77;
 i42 = i1 + 248 | 0;
 d78 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d78;
 i42 = i1 + 252 | 0;
 d24 = d7 * +HEAPF32[i2 + 252 >> 2] + d9 * +HEAPF32[i2 + 256 >> 2] + d11 * +HEAPF32[i2 + 260 >> 2] + d13 * +HEAPF32[i2 + 264 >> 2] + d15 * +HEAPF32[i2 + 268 >> 2] + d17 * +HEAPF32[i2 + 272 >> 2] + d19 * +HEAPF32[i2 + 276 >> 2] + d21 * +HEAPF32[i2 + 280 >> 2] + d23 * +HEAPF32[i2 + 284 >> 2];
 d79 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d79;
 i42 = i1 + 256 | 0;
 d7 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d7;
 i42 = i1 + 260 | 0;
 d9 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d9;
 i42 = i1 + 264 | 0;
 d11 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d11;
 i42 = i1 + 268 | 0;
 d13 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d13;
 i42 = i1 + 272 | 0;
 d15 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d15;
 i42 = i1 + 276 | 0;
 d17 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d17;
 i42 = i1 + 280 | 0;
 d19 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d19;
 i42 = i1 + 284 | 0;
 d21 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d21;
 d24 = d25 * d25 + d27 * d27 + d29 * d29 + d31 * d31 + d33 * d33 + d35 * d35 + d37 * d37 + d39 * d39 + d41 * d41;
 HEAPF32[i4 >> 2] = d24;
 d41 = d43 * d43 + d44 * d44 + d45 * d45 + d46 * d46 + d47 * d47 + d48 * d48 + d49 * d49 + d50 * d50 + d51 * d51;
 HEAPF32[i4 + 4 >> 2] = d41;
 d51 = d52 * d52 + d53 * d53 + d54 * d54 + d55 * d55 + d56 * d56 + d57 * d57 + d58 * d58 + d59 * d59 + d60 * d60;
 HEAPF32[i4 + 8 >> 2] = d51;
 d60 = d61 * d61 + d62 * d62 + d63 * d63 + d64 * d64 + d65 * d65 + d66 * d66 + d67 * d67 + d68 * d68 + d69 * d69;
 HEAPF32[i4 + 12 >> 2] = d60;
 d69 = d70 * d70 + d71 * d71 + d72 * d72 + d73 * d73 + d74 * d74 + d75 * d75 + d76 * d76 + d77 * d77 + d78 * d78;
 HEAPF32[i4 + 16 >> 2] = d69;
 d78 = d79 * d79 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 HEAPF32[i4 + 20 >> 2] = d78;
 i42 = d41 > d24 & 1;
 i1 = d51 > +HEAPF32[i4 + (i42 << 2) >> 2] ? 2 : i42;
 i42 = d60 > +HEAPF32[i4 + (i1 << 2) >> 2] ? 3 : i1;
 i1 = d69 > +HEAPF32[i4 + (i42 << 2) >> 2] ? 4 : i42;
 i42 = d78 > +HEAPF32[i4 + (i1 << 2) >> 2] ? 5 : i1;
 d78 = +HEAPF32[i4 + (i42 << 2) >> 2];
 if (d78 == 0.0) {
  i80 = 0;
  STACKTOP = i3;
  return i80 | 0;
 }
 i4 = i42 * 9 | 0;
 i42 = i5 + (i4 << 2) | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i42 >> 2];
 i2 = i42 + 4 | 0;
 HEAP32[i42 >> 2] = i1;
 i1 = HEAP32[i26 >> 2] | 0;
 HEAP32[i26 >> 2] = HEAP32[i2 >> 2];
 i81 = i42 + 8 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i28 >> 2] | 0;
 HEAP32[i28 >> 2] = HEAP32[i81 >> 2];
 i2 = i42 + 12 | 0;
 HEAP32[i81 >> 2] = i1;
 i1 = HEAP32[i30 >> 2] | 0;
 HEAP32[i30 >> 2] = HEAP32[i2 >> 2];
 i81 = i42 + 16 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i32 >> 2] | 0;
 HEAP32[i32 >> 2] = HEAP32[i81 >> 2];
 i2 = i42 + 20 | 0;
 HEAP32[i81 >> 2] = i1;
 i1 = HEAP32[i34 >> 2] | 0;
 HEAP32[i34 >> 2] = HEAP32[i2 >> 2];
 i81 = i42 + 24 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i36 >> 2] | 0;
 HEAP32[i36 >> 2] = HEAP32[i81 >> 2];
 i2 = i42 + 28 | 0;
 HEAP32[i81 >> 2] = i1;
 i1 = HEAP32[i38 >> 2] | 0;
 HEAP32[i38 >> 2] = HEAP32[i2 >> 2];
 i81 = i42 + 32 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i40 >> 2] | 0;
 HEAP32[i40 >> 2] = HEAP32[i81 >> 2];
 HEAP32[i81 >> 2] = i1;
 i1 = i6 + (i4 << 2) | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 i6 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = i4;
 i4 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
 i8 = i1 + 8 | 0;
 HEAP32[i6 >> 2] = i4;
 i4 = HEAP32[i10 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
 i10 = i1 + 12 | 0;
 HEAP32[i8 >> 2] = i4;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i10 >> 2];
 i12 = i1 + 16 | 0;
 HEAP32[i10 >> 2] = i4;
 i4 = HEAP32[i14 >> 2] | 0;
 HEAP32[i14 >> 2] = HEAP32[i12 >> 2];
 i14 = i1 + 20 | 0;
 HEAP32[i12 >> 2] = i4;
 i4 = HEAP32[i16 >> 2] | 0;
 HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
 i16 = i1 + 24 | 0;
 HEAP32[i14 >> 2] = i4;
 i4 = HEAP32[i18 >> 2] | 0;
 HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
 i18 = i1 + 28 | 0;
 HEAP32[i16 >> 2] = i4;
 i4 = HEAP32[i20 >> 2] | 0;
 HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
 i20 = i1 + 32 | 0;
 HEAP32[i18 >> 2] = i4;
 i4 = HEAP32[i22 >> 2] | 0;
 HEAP32[i22 >> 2] = HEAP32[i20 >> 2];
 HEAP32[i20 >> 2] = i4;
 d69 = 1.0 / +Math_sqrt(+d78);
 HEAPF32[i5 >> 2] = d69 * +HEAPF32[i5 >> 2];
 HEAPF32[i26 >> 2] = d69 * +HEAPF32[i26 >> 2];
 HEAPF32[i28 >> 2] = d69 * +HEAPF32[i28 >> 2];
 HEAPF32[i30 >> 2] = d69 * +HEAPF32[i30 >> 2];
 HEAPF32[i32 >> 2] = d69 * +HEAPF32[i32 >> 2];
 HEAPF32[i34 >> 2] = d69 * +HEAPF32[i34 >> 2];
 HEAPF32[i36 >> 2] = d69 * +HEAPF32[i36 >> 2];
 HEAPF32[i38 >> 2] = d69 * +HEAPF32[i38 >> 2];
 HEAPF32[i40 >> 2] = d69 * +HEAPF32[i40 >> 2];
 i80 = 1;
 STACKTOP = i3;
 return i80 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i5 = i4 + 88 | 0;
 i6 = i4 + 76 | 0;
 i7 = i4 + 64 | 0;
 i8 = i4 + 40 | 0;
 i9 = i4 + 16 | 0;
 i10 = i4;
 i11 = i4 + 52 | 0;
 i12 = i2;
 L1 : do if ((i12 - i1 | 0) > 3) {
  i13 = HEAP8[i1 >> 0] | 0;
  if (i13 << 24 >> 24 == 103) {
   i14 = (HEAP8[i1 + 1 >> 0] | 0) == 115;
   i15 = i14 ? i1 + 2 | 0 : i1;
   i16 = i14;
   i17 = i15;
   i18 = HEAP8[i15 >> 0] | 0;
  } else {
   i16 = 0;
   i17 = i1;
   i18 = i13;
  }
  if (i18 << 24 >> 24 == 110) {
   i13 = HEAP8[i17 + 1 >> 0] | 0;
   switch (i13 << 24 >> 24) {
   case 97:
   case 119:
    break;
   default:
    {
     i19 = i1;
     break L1;
    }
   }
   i15 = i13 << 24 >> 24 == 97;
   i13 = i17 + 2 | 0;
   L8 : do if ((i13 | 0) != (i2 | 0)) {
    i14 = 0;
    i20 = i13;
    while (1) {
     if ((HEAP8[i20 >> 0] | 0) == 95) break;
     i21 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i20, i2, i3) | 0;
     if ((i21 | 0) == (i20 | 0) | (i21 | 0) == (i2 | 0)) break L8; else {
      i14 = 1;
      i20 = i21;
     }
    }
    i21 = i20 + 1 | 0;
    i22 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i21, i2, i3) | 0;
    if (!((i22 | 0) == (i21 | 0) | (i22 | 0) == (i2 | 0))) {
     i21 = HEAP8[i22 >> 0] | 0;
     L15 : do if (!((i12 - i22 | 0) > 2 & i21 << 24 >> 24 == 112)) if (i21 << 24 >> 24 == 69) {
      i23 = 0;
      i24 = i22;
     } else break L8; else {
      if ((HEAP8[i22 + 1 >> 0] | 0) != 105) break L8;
      i25 = i22 + 2 | 0;
      while (1) {
       if ((HEAP8[i25 >> 0] | 0) == 69) {
        i23 = 1;
        i24 = i25;
        break L15;
       }
       i26 = i25;
       i25 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i25, i2, i3) | 0;
       if ((i25 | 0) == (i26 | 0) | (i25 | 0) == (i2 | 0)) break L8;
      }
     } while (0);
     HEAP32[i6 >> 2] = 0;
     HEAP32[i6 + 4 >> 2] = 0;
     HEAP32[i6 + 8 >> 2] = 0;
     i22 = 0;
     while (1) {
      if ((i22 | 0) == 3) break;
      HEAP32[i6 + (i22 << 2) >> 2] = 0;
      i22 = i22 + 1 | 0;
     }
     if (i23) {
      i22 = i3 + 4 | 0;
      i21 = HEAP32[i22 >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) == (i21 | 0)) {
       i27 = i1;
       i28 = 1;
      } else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i21 + -24 | 0);
       i21 = i6 + 11 | 0;
       if ((HEAP8[i21 >> 0] | 0) < 0) {
        i20 = HEAP32[i6 >> 2] | 0;
        HEAP8[i5 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc(i20, i5);
        HEAP32[i6 + 4 >> 2] = 0;
       } else {
        HEAP8[i5 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i5);
        HEAP8[i21 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i6);
       HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
       HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
       HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
       i21 = 0;
       while (1) {
        if ((i21 | 0) == 3) break;
        HEAP32[i7 + (i21 << 2) >> 2] = 0;
        i21 = i21 + 1 | 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
       i21 = HEAP32[i22 >> 2] | 0;
       i20 = 0;
       while (1) {
        if ((i20 | 0) == -1) break;
        i25 = i20 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i21 + (i25 * 24 | 0) | 0);
        i20 = i25;
       }
       i20 = i21 + -24 | 0;
       HEAP32[i22 >> 2] = i20;
       i29 = i22;
       i30 = i3;
       i31 = i20;
       i32 = 33;
      }
     } else {
      i20 = i3 + 4 | 0;
      i29 = i20;
      i30 = i3;
      i31 = HEAP32[i20 >> 2] | 0;
      i32 = 33;
     }
     if ((i32 | 0) == 33) if ((HEAP32[i30 >> 2] | 0) == (i31 | 0)) {
      i27 = i1;
      i28 = 1;
     } else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i31 + -24 | 0);
      i20 = HEAP32[i29 >> 2] | 0;
      i25 = 0;
      while (1) {
       if ((i25 | 0) == -1) break;
       i26 = i25 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20 + (i26 * 24 | 0) | 0);
       i25 = i26;
      }
      i25 = i20 + -24 | 0;
      HEAP32[i29 >> 2] = i25;
      HEAP32[i8 >> 2] = 0;
      HEAP32[i8 + 4 >> 2] = 0;
      HEAP32[i8 + 8 >> 2] = 0;
      i22 = 0;
      while (1) {
       if ((i22 | 0) == 3) break;
       HEAP32[i8 + (i22 << 2) >> 2] = 0;
       i22 = i22 + 1 | 0;
      }
      if (i14) if ((HEAP32[i30 >> 2] | 0) == (i25 | 0)) {
       i33 = i1;
       i34 = 1;
      } else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, i20 + -48 | 0);
       i22 = i8 + 11 | 0;
       if ((HEAP8[i22 >> 0] | 0) < 0) {
        i21 = HEAP32[i8 >> 2] | 0;
        HEAP8[i5 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc(i21, i5);
        HEAP32[i8 + 4 >> 2] = 0;
       } else {
        HEAP8[i5 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i5);
        HEAP8[i22 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i8);
       HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
       HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
       HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
       i22 = 0;
       while (1) {
        if ((i22 | 0) == 3) break;
        HEAP32[i9 + (i22 << 2) >> 2] = 0;
        i22 = i22 + 1 | 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
       i22 = HEAP32[i29 >> 2] | 0;
       i20 = 0;
       while (1) {
        if ((i20 | 0) == -1) break;
        i25 = i20 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i22 + (i25 * 24 | 0) | 0);
        i20 = i25;
       }
       HEAP32[i29 >> 2] = i22 + -24;
       i32 = 52;
      } else i32 = 52;
      if ((i32 | 0) == 52) {
       HEAP32[i5 >> 2] = 0;
       HEAP32[i5 + 4 >> 2] = 0;
       HEAP32[i5 + 8 >> 2] = 0;
       i20 = 0;
       while (1) {
        if ((i20 | 0) == 3) break;
        HEAP32[i5 + (i20 << 2) >> 2] = 0;
        i20 = i20 + 1 | 0;
       }
       if (i16) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i5, 50317);
       if (i15) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5, 50527) | 0; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5, 50277) | 0;
       if (i14) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i10, 50245, i8);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50531) | 0;
        HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
        HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
        HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
        i20 = 0;
        while (1) {
         if ((i20 | 0) == 3) break;
         HEAP32[i10 + (i20 << 2) >> 2] = 0;
         i20 = i20 + 1 | 0;
        }
        i20 = HEAP8[i9 + 11 >> 0] | 0;
        i14 = i20 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i5, i14 ? HEAP32[i9 >> 2] | 0 : i9, i14 ? HEAP32[i9 + 4 >> 2] | 0 : i20 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
       }
       i20 = HEAP8[i7 + 11 >> 0] | 0;
       i14 = i20 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i5, i14 ? HEAP32[i7 >> 2] | 0 : i7, i14 ? HEAP32[i7 + 4 >> 2] | 0 : i20 & 255) | 0;
       if (i23) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i10, 50240, i6);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50243) | 0;
        HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
        HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
        HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
        i20 = 0;
        while (1) {
         if ((i20 | 0) == 3) break;
         HEAP32[i10 + (i20 << 2) >> 2] = 0;
         i20 = i20 + 1 | 0;
        }
        i20 = HEAP8[i9 + 11 >> 0] | 0;
        i14 = i20 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i5, i14 ? HEAP32[i9 >> 2] | 0 : i9, i14 ? HEAP32[i9 + 4 >> 2] | 0 : i20 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
       };
       HEAP32[i11 >> 2] = HEAP32[i5 >> 2];
       HEAP32[i11 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
       HEAP32[i11 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
       i20 = 0;
       while (1) {
        if ((i20 | 0) == 3) break;
        HEAP32[i5 + (i20 << 2) >> 2] = 0;
        i20 = i20 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i9, i11);
       i20 = HEAP32[i29 >> 2] | 0;
       if (i20 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i20, i9);
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 24;
       } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i9);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
       i33 = i24 + 1 | 0;
       i34 = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
      i27 = i33;
      i28 = i34;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     if (!i28) {
      i19 = i27;
      break L1;
     }
    }
   } while (0);
   i19 = i1;
  } else i19 = i1;
 } else i19 = i1; while (0);
 STACKTOP = i4;
 return i19 | 0;
}

function __ZN6vision25bilinear_histogram_updateEPfffi(i1, d2, d3, i4) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, d25 = 0.0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 if (!i1) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26471, 35) | 0, 26507, 122) | 0, 33554, 6) | 0, 139) | 0, 33561, 2) | 0, 26630, 25) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 if (!(d2 + .5 > 0.0)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26656, 64) | 0;
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i10, 26507, 122) | 0;
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i11, 33554, 6) | 0;
  i13 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i12, 140) | 0;
  i14 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i13, 33561, 2) | 0;
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i14, 26721, 39) | 0;
  i16 = HEAP32[i15 >> 2] | 0;
  i17 = i16 + -12 | 0;
  i18 = HEAP32[i17 >> 2] | 0;
  i19 = i15 + i18 | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i19);
  i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i21 = HEAP32[i20 >> 2] | 0;
  i22 = i21 + 28 | 0;
  i23 = HEAP32[i22 >> 2] | 0;
  i24 = FUNCTION_TABLE_iii[i23 & 63](i20, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i24) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 d25 = d2 + -.5;
 if (!(d25 < +(i4 | 0))) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26656, 64) | 0;
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i10, 26507, 122) | 0;
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i11, 33554, 6) | 0;
  i13 = __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i12, 140) | 0;
  i14 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i13, 33561, 2) | 0;
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i14, 26721, 39) | 0;
  i16 = HEAP32[i15 >> 2] | 0;
  i17 = i16 + -12 | 0;
  i18 = HEAP32[i17 >> 2] | 0;
  i19 = i15 + i18 | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i19);
  i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i21 = HEAP32[i20 >> 2] | 0;
  i22 = i21 + 28 | 0;
  i23 = HEAP32[i22 >> 2] | 0;
  i24 = FUNCTION_TABLE_iii[i23 & 63](i20, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i24) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if (!(d3 >= 0.0)) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26761, 37) | 0, 26507, 122) | 0, 33554, 6) | 0, 141) | 0, 33561, 2) | 0, 26799, 28) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i24 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i24 >> 2] | 0) + 28 >> 2] & 63](i24, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 if ((i4 | 0) <= -1) {
  i15 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26828, 36) | 0, 26507, 122) | 0, 33554, 6) | 0, 142) | 0, 33561, 2) | 0, 26865, 28) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i15 + (HEAP32[(HEAP32[i15 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 28 >> 2] & 63](i20, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i15, i24) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i15) | 0;
  _abort();
 }
 i15 = ~~+Math_floor(+d25);
 d25 = d2 - +(i15 | 0) + -.5;
 d2 = 1.0 - d25;
 i24 = (i15 + i4 | 0) % (i4 | 0) | 0;
 i20 = (i15 + 1 | 0) % (i4 | 0) | 0;
 if (!(d2 >= 0.0)) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26894, 30) | 0, 26507, 122) | 0, 33554, 6) | 0, 150) | 0, 33561, 2) | 0, 26925, 19) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 if (!(d25 >= 0.0)) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26945, 30) | 0, 26507, 122) | 0, 33554, 6) | 0, 151) | 0, 33561, 2) | 0, 26976, 19) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i23 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i23 >> 2] | 0) + 28 >> 2] & 63](i23, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 if ((i24 | 0) <= -1) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 26996, 47) | 0, 26507, 122) | 0, 33554, 6) | 0, 152) | 0, 33561, 2) | 0, 27044, 25) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 if ((i20 | 0) > -1) {
  i4 = i1 + (i24 << 2) | 0;
  HEAPF32[i4 >> 2] = d2 * d3 + +HEAPF32[i4 >> 2];
  i4 = i1 + (i20 << 2) | 0;
  HEAPF32[i4 >> 2] = d25 * d3 + +HEAPF32[i4 >> 2];
  STACKTOP = i5;
  return;
 } else {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27070, 47) | 0, 26507, 122) | 0, 33554, 6) | 0, 153) | 0, 33561, 2) | 0, 27118, 25) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
}

function _kpmSetRefDataSet(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i4 = i3 + 48 | 0;
 i5 = i3 + 40 | 0;
 i6 = i3 + 32 | 0;
 i7 = i3 + 24 | 0;
 i8 = i3 + 16 | 0;
 i9 = i3 + 96 | 0;
 i10 = i3 + 84 | 0;
 i11 = i3 + 72 | 0;
 i12 = i3 + 52 | 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  _arLog(0, 3, 20334, i3);
  i13 = -1;
  STACKTOP = i3;
  return i13 | 0;
 }
 i14 = i2 + 4 | 0;
 i15 = HEAP32[i14 >> 2] | 0;
 if (!i15) {
  _arLog(0, 3, 20382, i3 + 8 | 0);
  i13 = -1;
  STACKTOP = i3;
  return i13 | 0;
 }
 i16 = i1 + 28 | 0;
 i17 = HEAP32[i16 >> 2] | 0;
 if (i17) {
  _free(i17);
  i17 = HEAP32[i14 >> 2] | 0;
  if (!i17) {
   HEAP32[i16 >> 2] = 0;
   i18 = 0;
  } else {
   i19 = i17;
   i20 = 7;
  }
 } else {
  i19 = i15;
  i20 = 7;
 }
 if ((i20 | 0) == 7) {
  i15 = _malloc(i19 * 132 | 0) | 0;
  HEAP32[i16 >> 2] = i15;
  if (!i15) {
   _arLog(0, 3, 20510, i8);
   _exit(1);
  }
  if ((i19 | 0) > 0) {
   _memcpy(i15 | 0, HEAP32[i2 >> 2] | 0, 132) | 0;
   i15 = HEAP32[i14 >> 2] | 0;
   if ((i15 | 0) > 1) {
    i8 = 1;
    do {
     _memcpy((HEAP32[i16 >> 2] | 0) + (i8 * 132 | 0) | 0, (HEAP32[i2 >> 2] | 0) + (i8 * 132 | 0) | 0, 132) | 0;
     i8 = i8 + 1 | 0;
     i17 = HEAP32[i14 >> 2] | 0;
    } while ((i8 | 0) < (i17 | 0));
    i18 = i17;
   } else i18 = i15;
  } else i18 = i19;
 }
 i19 = i1 + 32 | 0;
 HEAP32[i19 >> 2] = i18;
 i18 = i1 + 36 | 0;
 i15 = HEAP32[i18 >> 2] | 0;
 if (i15 | 0) {
  i8 = i1 + 40 | 0;
  i14 = HEAP32[i8 >> 2] | 0;
  if ((i14 | 0) > 0) {
   i17 = 0;
   i21 = i14;
   i14 = i15;
   while (1) {
    i22 = HEAP32[i14 + (i17 * 12 | 0) >> 2] | 0;
    if (!i22) {
     i23 = i14;
     i24 = i21;
    } else {
     _free(i22);
     i23 = HEAP32[i18 >> 2] | 0;
     i24 = HEAP32[i8 >> 2] | 0;
    }
    i17 = i17 + 1 | 0;
    if ((i17 | 0) >= (i24 | 0)) {
     i25 = i23;
     break;
    } else {
     i21 = i24;
     i14 = i23;
    }
   }
  } else i25 = i15;
  _free(i25);
 }
 i25 = i2 + 12 | 0;
 i15 = HEAP32[i25 >> 2] | 0;
 L33 : do if (i15) {
  i23 = _malloc(i15 * 12 | 0) | 0;
  HEAP32[i18 >> 2] = i23;
  if (!i23) {
   _arLog(0, 3, 20510, i7);
   _exit(1);
  }
  if ((i15 | 0) > 0) {
   i14 = i2 + 8 | 0;
   i24 = 0;
   i21 = i15;
   i17 = HEAP32[i14 >> 2] | 0;
   i8 = i23;
   while (1) {
    HEAP32[i8 + (i24 * 12 | 0) + 8 >> 2] = HEAP32[i17 + (i24 * 12 | 0) + 8 >> 2];
    i23 = i17 + (i24 * 12 | 0) + 4 | 0;
    HEAP32[i8 + (i24 * 12 | 0) + 4 >> 2] = HEAP32[i23 >> 2];
    i22 = HEAP32[i23 >> 2] | 0;
    if (i22) {
     i26 = _malloc(i22 * 12 | 0) | 0;
     HEAP32[i8 + (i24 * 12 | 0) >> 2] = i26;
     if (!i26) break;
     if ((HEAP32[i23 >> 2] | 0) > 0) {
      i23 = HEAP32[i17 + (i24 * 12 | 0) >> 2] | 0;
      i26 = HEAP32[i8 + (i24 * 12 | 0) >> 2] | 0;
      HEAP32[i26 >> 2] = HEAP32[i23 >> 2];
      HEAP32[i26 + 4 >> 2] = HEAP32[i23 + 4 >> 2];
      HEAP32[i26 + 8 >> 2] = HEAP32[i23 + 8 >> 2];
      i23 = HEAP32[i14 >> 2] | 0;
      if ((HEAP32[i23 + (i24 * 12 | 0) + 4 >> 2] | 0) > 1) {
       i26 = i23;
       i22 = 1;
       while (1) {
        i27 = (HEAP32[i26 + (i24 * 12 | 0) >> 2] | 0) + (i22 * 12 | 0) | 0;
        i28 = (HEAP32[(HEAP32[i18 >> 2] | 0) + (i24 * 12 | 0) >> 2] | 0) + (i22 * 12 | 0) | 0;
        HEAP32[i28 >> 2] = HEAP32[i27 >> 2];
        HEAP32[i28 + 4 >> 2] = HEAP32[i27 + 4 >> 2];
        HEAP32[i28 + 8 >> 2] = HEAP32[i27 + 8 >> 2];
        i22 = i22 + 1 | 0;
        i27 = HEAP32[i14 >> 2] | 0;
        if ((i22 | 0) >= (HEAP32[i27 + (i24 * 12 | 0) + 4 >> 2] | 0)) {
         i29 = i27;
         break;
        } else i26 = i27;
       }
      } else i29 = i23;
      i30 = i29;
      i31 = HEAP32[i25 >> 2] | 0;
     } else {
      i30 = i17;
      i31 = i21;
     }
    } else {
     HEAP32[i17 + (i24 * 12 | 0) >> 2] = 0;
     i30 = i17;
     i31 = i21;
    }
    i26 = i24 + 1 | 0;
    if ((i26 | 0) >= (i31 | 0)) {
     i32 = i31;
     break L33;
    }
    i24 = i26;
    i21 = i31;
    i17 = i30;
    i8 = HEAP32[i18 >> 2] | 0;
   }
   _arLog(0, 3, 20510, i6);
   _exit(1);
  } else i32 = i15;
 } else {
  HEAP32[i18 >> 2] = 0;
  i32 = 0;
 } while (0);
 i15 = i1 + 40 | 0;
 HEAP32[i15 >> 2] = i32;
 i32 = i1 + 52 | 0;
 i6 = HEAP32[i32 >> 2] | 0;
 if (i6 | 0) {
  _free(i6);
  HEAP32[i32 >> 2] = 0;
  HEAP32[i1 + 56 >> 2] = 0;
 }
 i6 = HEAP32[i25 >> 2] | 0;
 if ((i6 | 0) > 0) {
  HEAP32[i1 + 56 >> 2] = i6;
  i25 = _malloc(i6 * 68 | 0) | 0;
  HEAP32[i32 >> 2] = i25;
  if (!i25) {
   _arLog(0, 3, 20510, i5);
   _exit(1);
  }
  i5 = 0;
  do {
   HEAP32[i25 + (i5 * 68 | 0) + 64 >> 2] = 0;
   i5 = i5 + 1 | 0;
  } while ((i5 | 0) != (i6 | 0));
 }
 i6 = HEAP32[i19 >> 2] | 0;
 if (!i6) {
  i13 = 0;
  STACKTOP = i3;
  return i13 | 0;
 }
 i19 = HEAP32[i15 >> 2] | 0;
 if ((i19 | 0) <= 0) {
  i13 = 0;
  STACKTOP = i3;
  return i13 | 0;
 }
 i5 = i9 + 4 | 0;
 i25 = i9 + 8 | 0;
 i32 = i10 + 4 | 0;
 i30 = i10 + 8 | 0;
 i31 = i11 + 4 | 0;
 i29 = i11 + 8 | 0;
 i2 = (i6 | 0) > 0;
 i7 = i12 + 4 | 0;
 i8 = i12 + 8 | 0;
 i17 = i12 + 12 | 0;
 i21 = i12 + 16 | 0;
 i24 = i12 + 4 | 0;
 i14 = i12 + 8 | 0;
 i26 = 0;
 i22 = 0;
 i27 = HEAP32[i18 >> 2] | 0;
 i28 = i19;
 L73 : while (1) {
  if ((HEAP32[i27 + (i26 * 12 | 0) + 4 >> 2] | 0) > 0) {
   i19 = 0;
   i33 = i22;
   i34 = i27;
   do {
    HEAP32[i9 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i25 >> 2] = 0;
    HEAP32[i10 >> 2] = 0;
    HEAP32[i32 >> 2] = 0;
    HEAP32[i30 >> 2] = 0;
    HEAP32[i11 >> 2] = 0;
    HEAP32[i31 >> 2] = 0;
    HEAP32[i29 >> 2] = 0;
    if (i2) {
     i35 = 0;
     i36 = i34;
     while (1) {
      i37 = HEAP32[i16 >> 2] | 0;
      if ((HEAP32[i37 + (i35 * 132 | 0) + 128 >> 2] | 0) == (HEAP32[(HEAP32[i36 + (i26 * 12 | 0) >> 2] | 0) + (i19 * 12 | 0) + 8 >> 2] | 0) ? (HEAP32[i37 + (i35 * 132 | 0) + 124 >> 2] | 0) == (HEAP32[i36 + (i26 * 12 | 0) + 8 >> 2] | 0) : 0) {
       i38 = HEAP32[i37 + (i35 * 132 | 0) + 4 >> 2] | 0;
       i39 = HEAP32[i37 + (i35 * 132 | 0) + 112 >> 2] | 0;
       i40 = HEAP32[i37 + (i35 * 132 | 0) + 116 >> 2] | 0;
       i41 = (HEAP32[i37 + (i35 * 132 | 0) + 120 >> 2] | 0) != 0 & 1;
       HEAP32[i12 >> 2] = HEAP32[i37 + (i35 * 132 | 0) >> 2];
       HEAP32[i7 >> 2] = i38;
       HEAP32[i8 >> 2] = i39;
       HEAP32[i17 >> 2] = i40;
       HEAP8[i21 >> 0] = i41;
       i41 = HEAP32[i5 >> 2] | 0;
       if (i41 >>> 0 < (HEAP32[i25 >> 2] | 0) >>> 0) {
        HEAP32[i41 >> 2] = HEAP32[i12 >> 2];
        HEAP32[i41 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
        HEAP32[i41 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
        HEAP32[i41 + 12 >> 2] = HEAP32[i12 + 12 >> 2];
        HEAP32[i41 + 16 >> 2] = HEAP32[i12 + 16 >> 2];
        HEAP32[i5 >> 2] = i41 + 20;
       } else __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i9, i12);
       i41 = HEAP32[i16 >> 2] | 0;
       i40 = HEAP32[i41 + (i35 * 132 | 0) + 12 >> 2] | 0;
       HEAP32[i12 >> 2] = HEAP32[i41 + (i35 * 132 | 0) + 8 >> 2];
       HEAP32[i24 >> 2] = i40;
       HEAPF32[i14 >> 2] = 0.0;
       i40 = HEAP32[i32 >> 2] | 0;
       if (i40 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
        HEAP32[i40 >> 2] = HEAP32[i12 >> 2];
        HEAP32[i40 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
        HEAP32[i40 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
        HEAP32[i32 >> 2] = (HEAP32[i32 >> 2] | 0) + 12;
       } else __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i10, i12);
       i40 = 0;
       do {
        i41 = (HEAP32[i16 >> 2] | 0) + (i35 * 132 | 0) + 16 + i40 | 0;
        i39 = HEAP32[i31 >> 2] | 0;
        i38 = HEAP32[i29 >> 2] | 0;
        i37 = i38;
        do if ((i39 | 0) == (i38 | 0)) {
         i42 = HEAP32[i11 >> 2] | 0;
         i43 = i39 - i42 | 0;
         i44 = i43 + 1 | 0;
         i45 = i42;
         if ((i44 | 0) < 0) {
          i20 = 68;
          break L73;
         }
         i46 = i37 - i42 | 0;
         i47 = i46 << 1;
         i48 = i46 >>> 0 < 1073741823 ? (i47 >>> 0 < i44 >>> 0 ? i44 : i47) : 2147483647;
         if (!i48) i49 = 0; else i49 = __Znwm(i48) | 0;
         i47 = i49 + i43 | 0;
         HEAP8[i47 >> 0] = HEAP8[i41 >> 0] | 0;
         if ((i43 | 0) > 0) _memcpy(i49 | 0, i45 | 0, i43 | 0) | 0;
         HEAP32[i11 >> 2] = i49;
         HEAP32[i31 >> 2] = i47 + 1;
         HEAP32[i29 >> 2] = i49 + i48;
         if (!i42) break;
         __ZdlPv(i45);
        } else {
         HEAP8[i39 >> 0] = HEAP8[i41 >> 0] | 0;
         HEAP32[i31 >> 2] = (HEAP32[i31 >> 2] | 0) + 1;
        } while (0);
        i40 = i40 + 1 | 0;
       } while (i40 >>> 0 < 96);
      }
      i40 = i35 + 1 | 0;
      if ((i40 | 0) >= (i6 | 0)) break;
      i35 = i40;
      i36 = HEAP32[i18 >> 2] | 0;
     }
     i50 = HEAP32[i9 >> 2] | 0;
     i51 = HEAP32[i5 >> 2] | 0;
    } else {
     i50 = 0;
     i51 = 0;
    }
    HEAP32[i4 >> 2] = (i51 - i50 | 0) / 20 | 0;
    _arLog(0, 1, 20415, i4);
    i36 = HEAP32[i18 >> 2] | 0;
    HEAP32[i1 + 60 + (i33 << 2) >> 2] = HEAP32[i36 + (i26 * 12 | 0) + 8 >> 2];
    i35 = HEAP32[i36 + (i26 * 12 | 0) >> 2] | 0;
    __ZN6vision20VisualDatabaseFacade30addFreakFeaturesAndDescriptorsERKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEERKNS2_IhNS4_IhEEEERKNS2_INS_7Point3dIfEENS4_ISE_EEEEmmi(HEAP32[i1 >> 2] | 0, i9, i11, i10, HEAP32[i35 + (i19 * 12 | 0) >> 2] | 0, HEAP32[i35 + (i19 * 12 | 0) + 4 >> 2] | 0, i33);
    i33 = i33 + 1 | 0;
    i35 = HEAP32[i11 >> 2] | 0;
    if (i35 | 0) {
     HEAP32[i31 >> 2] = i35;
     __ZdlPv(i35);
    }
    i35 = HEAP32[i10 >> 2] | 0;
    if (i35 | 0) {
     HEAP32[i32 >> 2] = i35;
     __ZdlPv(i35);
    }
    i35 = HEAP32[i9 >> 2] | 0;
    if (i35 | 0) {
     HEAP32[i5 >> 2] = i35;
     __ZdlPv(i35);
    }
    i19 = i19 + 1 | 0;
    i34 = HEAP32[i18 >> 2] | 0;
   } while ((i19 | 0) < (HEAP32[i34 + (i26 * 12 | 0) + 4 >> 2] | 0));
   i52 = i33;
   i53 = HEAP32[i15 >> 2] | 0;
   i54 = i34;
  } else {
   i52 = i22;
   i53 = i28;
   i54 = i27;
  }
  i26 = i26 + 1 | 0;
  if ((i26 | 0) >= (i53 | 0)) {
   i13 = 0;
   i20 = 84;
   break;
  } else {
   i22 = i52;
   i27 = i54;
   i28 = i53;
  }
 }
 if ((i20 | 0) == 68) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i11); else if ((i20 | 0) == 84) {
  STACKTOP = i3;
  return i13 | 0;
 }
 return 0;
}

function __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 if ((i2 | 0) <= -1) {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30891, 32) | 0, 30394, 122) | 0, 33554, 6) | 0, 165) | 0, 33561, 2) | 0, 30924, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 i8 = HEAP32[i1 + 52 >> 2] | 0;
 if ((i8 | 0) <= (i2 | 0)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30942, 39) | 0, 30394, 122) | 0, 33554, 6) | 0, 166) | 0, 33561, 2) | 0, 30924, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if ((i3 | 0) <= -1) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30982, 32) | 0, 30394, 122) | 0, 33554, 6) | 0, 167) | 0, 33561, 2) | 0, 31015, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 i10 = HEAP32[i1 + 56 >> 2] | 0;
 if ((i10 | 0) <= (i3 | 0)) {
  i9 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31033, 39) | 0, 30394, 122) | 0, 33554, 6) | 0, 168) | 0, 33561, 2) | 0, 31015, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 if ((i4 | 0) <= -1) {
  i9 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31073, 36) | 0, 30394, 122) | 0, 33554, 6) | 0, 169) | 0, 33561, 2) | 0, 31110, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i9 = HEAP32[i1 + 60 >> 2] | 0;
 if ((i9 | 0) <= (i4 | 0)) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31132, 47) | 0, 30394, 122) | 0, 33554, 6) | 0, 170) | 0, 33561, 2) | 0, 31110, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 if ((i5 | 0) <= -1) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31180, 36) | 0, 30394, 122) | 0, 33554, 6) | 0, 171) | 0, 33561, 2) | 0, 31217, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 if ((HEAP32[i1 + 64 >> 2] | 0) <= (i5 | 0)) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31239, 47) | 0, 30394, 122) | 0, 33554, 6) | 0, 172) | 0, 33561, 2) | 0, 31217, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 i11 = (Math_imul(i8, i3) | 0) + i2 | 0;
 i2 = (Math_imul(HEAP32[i1 + 84 >> 2] | 0, i4) | 0) + i11 | 0;
 i3 = i2 + (Math_imul(HEAP32[i1 + 88 >> 2] | 0, i5) | 0) | 0;
 if ((i3 | 0) > ((Math_imul(Math_imul(i10, i8) | 0, (Math_imul(i9, i5) | 0) + i4 | 0) | 0) + i11 | 0)) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31287, 131) | 0, 30394, 122) | 0, 33554, 6) | 0, 176) | 0, 33561, 2) | 0, 30872, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i5) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 } else {
  STACKTOP = i6;
  return i3 | 0;
 }
 return 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i8 = i7 + 20 | 0;
 i9 = i7;
 i10 = HEAP32[i1 + 16 >> 2] | 0;
 i11 = HEAP32[i1 + 108 >> 2] | 0;
 if ((((i10 | 0) > (i11 | 0) ? i10 : i11) | 0) >= (i6 | 0)) {
  HEAP8[i2 + 100 >> 0] = 1;
  i11 = i2 + 116 | 0;
  i10 = i2 + 120 | 0;
  i12 = HEAP32[i11 >> 2] | 0;
  i13 = (HEAP32[i10 >> 2] | 0) - i12 >> 2;
  if (i13 >>> 0 >= i6 >>> 0) {
   if (i13 >>> 0 > i6 >>> 0) HEAP32[i10 >> 2] = i12 + (i6 << 2);
  } else __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i11, i6 - i13 | 0);
  if ((i6 | 0) <= 0) {
   STACKTOP = i7;
   return;
  }
  i13 = HEAP32[i11 >> 2] | 0;
  i11 = 0;
  do {
   HEAP32[i13 + (i11 << 2) >> 2] = HEAP32[i5 + (i11 << 2) >> 2];
   i11 = i11 + 1 | 0;
  } while ((i11 | 0) != (i6 | 0));
  STACKTOP = i7;
  return;
 }
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAP32[i9 + 12 >> 2] = 0;
 HEAP32[i9 + 16 >> 2] = 1065353216;
 __ZN6vision14BinarykMedoidsILi96EE6assignEPKhiPKii(i1 + 12 | 0, i3, i4, i5, i6);
 i11 = i1 + 36 | 0;
 i13 = i1 + 40 | 0;
 i12 = HEAP32[i13 >> 2] | 0;
 i10 = HEAP32[i11 >> 2] | 0;
 if ((i12 - i10 >> 2 | 0) != (i6 | 0)) {
  i14 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27193, 55) | 0, 27249, 129) | 0, 33554, 6) | 0, 363) | 0, 33561, 2) | 0, 27379, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i14, i16) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i14) | 0;
  _abort();
 }
 L18 : do if ((i12 | 0) != (i10 | 0)) {
  i14 = 0;
  i16 = i10;
  while (1) {
   i15 = HEAP32[i16 + (i14 << 2) >> 2] | 0;
   if ((i15 | 0) == -1) {
    i17 = 16;
    break;
   }
   if ((i15 | 0) >= (i6 | 0)) {
    i17 = 18;
    break;
   }
   i18 = i5 + (i15 << 2) | 0;
   if ((HEAP32[i18 >> 2] | 0) >= (i4 | 0)) {
    i17 = 20;
    break;
   }
   i15 = __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEEixERSA_(i9, i18) | 0;
   i18 = i5 + (i14 << 2) | 0;
   i19 = i15 + 4 | 0;
   i20 = HEAP32[i19 >> 2] | 0;
   if ((i20 | 0) == (HEAP32[i15 + 8 >> 2] | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_(i15, i18); else {
    HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
    HEAP32[i19 >> 2] = i20 + 4;
   }
   i14 = i14 + 1 | 0;
   i16 = HEAP32[i11 >> 2] | 0;
   if (i14 >>> 0 >= (HEAP32[i13 >> 2] | 0) - i16 >> 2 >>> 0) break L18;
  }
  if ((i17 | 0) == 16) {
   i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27401, 42) | 0, 27249, 129) | 0, 33554, 6) | 0, 365) | 0, 33561, 2) | 0, 27444, 21) | 0;
   __ZNKSt3__28ios_base6getlocEv(i8, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
   i20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, 10) | 0;
   __ZNSt3__26localeD2Ev(i8);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i20) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
   _abort();
  } else if ((i17 | 0) == 18) {
   i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27466, 50) | 0, 27249, 129) | 0, 33554, 6) | 0, 366) | 0, 33561, 2) | 0, 27517, 23) | 0;
   __ZNKSt3__28ios_base6getlocEv(i8, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
   i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 28 >> 2] & 63](i20, 10) | 0;
   __ZNSt3__26localeD2Ev(i8);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i14) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
   _abort();
  } else if ((i17 | 0) == 20) {
   i16 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27541, 60) | 0, 27249, 129) | 0, 33554, 6) | 0, 367) | 0, 33561, 2) | 0, 27517, 23) | 0;
   __ZNKSt3__28ios_base6getlocEv(i8, i16 + (HEAP32[(HEAP32[i16 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
   i20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, 10) | 0;
   __ZNSt3__26localeD2Ev(i8);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i16, i20) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i16) | 0;
   _abort();
  }
 } while (0);
 i17 = HEAP32[i9 + 12 >> 2] | 0;
 L34 : do if ((i17 | 0) == 1) {
  HEAP8[i2 + 100 >> 0] = 1;
  i13 = i2 + 116 | 0;
  i11 = i2 + 120 | 0;
  i10 = HEAP32[i13 >> 2] | 0;
  i12 = (HEAP32[i11 >> 2] | 0) - i10 >> 2;
  if (i12 >>> 0 >= i6 >>> 0) {
   if (i12 >>> 0 > i6 >>> 0) HEAP32[i11 >> 2] = i10 + (i6 << 2);
  } else __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i13, i6 - i12 | 0);
  if ((i6 | 0) > 0) {
   i12 = HEAP32[i13 >> 2] | 0;
   i13 = 0;
   do {
    HEAP32[i12 + (i13 << 2) >> 2] = HEAP32[i5 + (i13 << 2) >> 2];
    i13 = i13 + 1 | 0;
   } while ((i13 | 0) != (i6 | 0));
  }
 } else {
  i13 = i2 + 104 | 0;
  __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE7reserveEm(i13, i17);
  i12 = HEAP32[i9 + 8 >> 2] | 0;
  if (i12 | 0) {
   i10 = i1 + 4 | 0;
   i11 = i2 + 108 | 0;
   i16 = i2 + 112 | 0;
   i20 = i12;
   while (1) {
    i12 = i20;
    i14 = i12 + 12 | 0;
    i19 = i12 + 16 | 0;
    if ((HEAP32[i19 >> 2] | 0) == (HEAP32[i14 >> 2] | 0)) break;
    i18 = __Znwm(128) | 0;
    i15 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i15 + 1;
    i21 = i3 + ((HEAP32[i12 + 8 >> 2] | 0) * 96 | 0) | 0;
    HEAP32[i18 >> 2] = i15;
    i15 = i18 + 100 | 0;
    i12 = i18 + 104 | 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    HEAP32[i12 + 8 >> 2] = 0;
    HEAP32[i12 + 12 >> 2] = 0;
    HEAP32[i12 + 16 >> 2] = 0;
    HEAP32[i12 + 20 >> 2] = 0;
    i12 = i18 + 4 | 0;
    i22 = i21;
    i21 = i12 + 96 | 0;
    do {
     HEAP8[i12 >> 0] = HEAP8[i22 >> 0] | 0;
     i12 = i12 + 1 | 0;
     i22 = i22 + 1 | 0;
    } while ((i12 | 0) < (i21 | 0));
    HEAP32[i8 >> 2] = i18;
    HEAP8[i15 >> 0] = 0;
    i22 = HEAP32[i11 >> 2] | 0;
    if ((i22 | 0) == (HEAP32[i16 >> 2] | 0)) __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(i13, i8); else {
     HEAP32[i22 >> 2] = i18;
     HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 4;
    }
    i22 = HEAP32[i14 >> 2] | 0;
    __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii(i1, HEAP32[i8 >> 2] | 0, i3, i4, i22, (HEAP32[i19 >> 2] | 0) - i22 >> 2);
    i20 = HEAP32[i20 >> 2] | 0;
    if (!i20) break L34;
   }
   i20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27602, 45) | 0, 27249, 129) | 0, 33554, 6) | 0, 387) | 0, 33561, 2) | 0, 27648, 36) | 0;
   __ZNKSt3__28ios_base6getlocEv(i8, i20 + (HEAP32[(HEAP32[i20 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
   i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
   __ZNSt3__26localeD2Ev(i8);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i13) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
   _abort();
  }
 } while (0);
 i8 = HEAP32[i9 + 8 >> 2] | 0;
 if (i8 | 0) {
  i4 = i8;
  do {
   i8 = i4;
   i4 = HEAP32[i4 >> 2] | 0;
   i3 = HEAP32[i8 + 12 >> 2] | 0;
   if (i3 | 0) {
    HEAP32[i8 + 16 >> 2] = i3;
    __ZdlPv(i3);
   }
   __ZdlPv(i8);
  } while ((i4 | 0) != 0);
 }
 i4 = HEAP32[i9 >> 2] | 0;
 HEAP32[i9 >> 2] = 0;
 if (!i4) {
  STACKTOP = i7;
  return;
 }
 __ZdlPv(i4);
 STACKTOP = i7;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 60 | 0;
 i6 = i4 + 48 | 0;
 i7 = i4 + 36 | 0;
 i8 = i4 + 24 | 0;
 i9 = i4 + 12 | 0;
 i10 = i4;
 L1 : do if ((i2 - i1 | 0) > 2) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 84:
   break;
  case 71:
   {
    switch (HEAP8[i1 + 1 >> 0] | 0) {
    case 86:
     {
      i11 = i1 + 2 | 0;
      i12 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i11, i2, i3) | 0;
      if ((i12 | 0) == (i11 | 0)) {
       i13 = i1;
       i14 = 60;
       break L1;
      }
      i11 = HEAP32[i3 + 4 >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) == (i11 | 0)) {
       i15 = i1;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11 + -24 | 0, 0, 52075) | 0;
      i13 = i12;
      i14 = 60;
      break L1;
      break;
     }
    case 82:
     {
      i12 = i1 + 2 | 0;
      i11 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
      if ((i11 | 0) == (i12 | 0)) {
       i13 = i1;
       i14 = 60;
       break L1;
      }
      i12 = HEAP32[i3 + 4 >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) == (i12 | 0)) {
       i15 = i1;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12 + -24 | 0, 0, 52095) | 0;
      i13 = i11;
      i14 = 60;
      break L1;
      break;
     }
    default:
     {
      i13 = i1;
      i14 = 60;
      break L1;
     }
    }
    break;
   }
  default:
   {
    i13 = i1;
    i14 = 60;
    break L1;
   }
  }
  i11 = i1 + 1 | 0;
  switch (HEAP8[i11 >> 0] | 0) {
  case 86:
   {
    i12 = i1 + 2 | 0;
    i16 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
    if ((i16 | 0) == (i12 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i12 = HEAP32[i3 + 4 >> 2] | 0;
    if ((HEAP32[i3 >> 2] | 0) == (i12 | 0)) {
     i15 = i1;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12 + -24 | 0, 0, 51924) | 0;
    i13 = i16;
    i14 = 60;
    break L1;
    break;
   }
  case 84:
   {
    i16 = i1 + 2 | 0;
    i12 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i3) | 0;
    if ((i12 | 0) == (i16 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i16 = HEAP32[i3 + 4 >> 2] | 0;
    if ((HEAP32[i3 >> 2] | 0) == (i16 | 0)) {
     i15 = i1;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i16 + -24 | 0, 0, 51936) | 0;
    i13 = i12;
    i14 = 60;
    break L1;
    break;
   }
  case 73:
   {
    i12 = i1 + 2 | 0;
    i16 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
    if ((i16 | 0) == (i12 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i12 = HEAP32[i3 + 4 >> 2] | 0;
    if ((HEAP32[i3 >> 2] | 0) == (i12 | 0)) {
     i15 = i1;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12 + -24 | 0, 0, 51945) | 0;
    i13 = i16;
    i14 = 60;
    break L1;
    break;
   }
  case 83:
   {
    i16 = i1 + 2 | 0;
    i12 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i3) | 0;
    if ((i12 | 0) == (i16 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i16 = HEAP32[i3 + 4 >> 2] | 0;
    if ((HEAP32[i3 >> 2] | 0) == (i16 | 0)) {
     i15 = i1;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i16 + -24 | 0, 0, 51959) | 0;
    i13 = i12;
    i14 = 60;
    break L1;
    break;
   }
  case 99:
   {
    i12 = i1 + 2 | 0;
    i16 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i12, i2) | 0;
    if ((i16 | 0) == (i12 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i12 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i16, i2) | 0;
    if ((i12 | 0) == (i16 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i16 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
    if ((i16 | 0) == (i12 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i12 = HEAP32[i3 + 4 >> 2] | 0;
    if ((HEAP32[i3 >> 2] | 0) == (i12 | 0)) {
     i15 = i1;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i12 + -24 | 0, 0, 51978) | 0;
    i13 = i16;
    i14 = 60;
    break L1;
    break;
   }
  case 67:
   {
    i16 = i1 + 2 | 0;
    i12 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i2, i3) | 0;
    if ((i12 | 0) == (i16 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i16 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i12, i2) | 0;
    if ((i16 | 0) == (i12 | 0) | (i16 | 0) == (i2 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    if ((HEAP8[i16 >> 0] | 0) != 95) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i12 = i16 + 1 | 0;
    i16 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
    if ((i16 | 0) == (i12 | 0)) {
     i13 = i1;
     i14 = 60;
     break L1;
    }
    i12 = i3 + 4 | 0;
    i17 = HEAP32[i12 >> 2] | 0;
    if (((i17 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i15 = i1;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, i17 + -24 | 0);
    i17 = HEAP32[i12 >> 2] | 0;
    i18 = 0;
    while (1) {
     if ((i18 | 0) == -1) break;
     i19 = i18 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17 + (i19 * 24 | 0) | 0);
     i18 = i19;
    }
    HEAP32[i12 >> 2] = i17 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i6, 0, 52005) | 0;
    HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i9 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
    HEAP32[i9 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
    i18 = 0;
    while (1) {
     if ((i18 | 0) == 3) break;
     HEAP32[i6 + (i18 << 2) >> 2] = 0;
     i18 = i18 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 52030) | 0;
    HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
    HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
    i18 = 0;
    while (1) {
     if ((i18 | 0) == 3) break;
     HEAP32[i9 + (i18 << 2) >> 2] = 0;
     i18 = i18 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i10, (HEAP32[i12 >> 2] | 0) + -24 | 0);
    i18 = HEAP8[i10 + 11 >> 0] | 0;
    i17 = i18 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i8, i17 ? HEAP32[i10 >> 2] | 0 : i10, i17 ? HEAP32[i10 + 4 >> 2] | 0 : i18 & 255) | 0;
    HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
    HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
    i18 = 0;
    while (1) {
     if ((i18 | 0) == 3) break;
     HEAP32[i8 + (i18 << 2) >> 2] = 0;
     i18 = i18 + 1 | 0;
    }
    i18 = HEAP32[i12 >> 2] | 0;
    i17 = i18 + -24 | 0;
    i19 = i17 + 11 | 0;
    if ((HEAP8[i19 >> 0] | 0) < 0) {
     i20 = HEAP32[i17 >> 2] | 0;
     HEAP8[i5 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i20, i5);
     HEAP32[i18 + -20 >> 2] = 0;
    } else {
     HEAP8[i5 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i17, i5);
     HEAP8[i19 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i17);
    HEAP32[i17 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i17 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i17 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
    i17 = 0;
    while (1) {
     if ((i17 | 0) == 3) break;
     HEAP32[i7 + (i17 << 2) >> 2] = 0;
     i17 = i17 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    i13 = i16;
    i14 = 60;
    break L1;
    break;
   }
  default:
   {
    i17 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i11, i2) | 0;
    do if ((i17 | 0) != (i11 | 0)) {
     i12 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i17, i2, i3) | 0;
     if ((i12 | 0) != (i17 | 0)) {
      i19 = HEAP32[i3 + 4 >> 2] | 0;
      if ((HEAP32[i3 >> 2] | 0) != (i19 | 0)) {
       i18 = i19 + -24 | 0;
       if ((HEAP8[i1 + 2 >> 0] | 0) == 118) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i18, 0, 52035) | 0;
        i21 = 0;
        i22 = i12;
        break;
       } else {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i18, 0, 52053) | 0;
        i21 = 0;
        i22 = i12;
        break;
       }
      } else {
       i21 = 1;
       i22 = i1;
      }
     } else {
      i21 = 0;
      i22 = i1;
     }
    } else {
     i21 = 3;
     i22 = i1;
    } while (0);
    switch (i21 & 3) {
    case 3:
    case 0:
     {
      i13 = i22;
      i14 = 60;
      break L1;
      break;
     }
    default:
     {}
    }
    if (!i21) {
     i13 = i22;
     i14 = 60;
     break L1;
    } else {
     i15 = i1;
     break L1;
    }
   }
  }
 } else {
  i13 = i1;
  i14 = 60;
 } while (0);
 if ((i14 | 0) == 60) i15 = i13;
 STACKTOP = i4;
 return i15 | 0;
}

function _kpmMergeRefDataSet(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i3 + 40 | 0;
 i5 = i3 + 32 | 0;
 i6 = i3 + 24 | 0;
 i7 = i3 + 16 | 0;
 i8 = i3 + 8 | 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  _arLog(0, 3, 20015, i3);
  i9 = -1;
  STACKTOP = i3;
  return i9 | 0;
 }
 i10 = HEAP32[i1 >> 2] | 0;
 do if (!i10) {
  i11 = _malloc(16) | 0;
  HEAP32[i1 >> 2] = i11;
  if (!i11) {
   _arLog(0, 3, 20510, i8);
   _exit(1);
  } else {
   HEAP32[i11 + 4 >> 2] = 0;
   HEAP32[i11 >> 2] = 0;
   HEAP32[i11 + 12 >> 2] = 0;
   HEAP32[i11 + 8 >> 2] = 0;
   i12 = i11;
   i13 = i11;
   break;
  }
 } else {
  i12 = i10;
  i13 = i10;
 } while (0);
 i10 = HEAP32[i2 >> 2] | 0;
 if (!i10) {
  i9 = 0;
  STACKTOP = i3;
  return i9 | 0;
 }
 i8 = HEAP32[i12 + 4 >> 2] | 0;
 i11 = HEAP32[i10 + 4 >> 2] | 0;
 i14 = i11 + i8 | 0;
 i15 = _malloc(i14 * 132 | 0) | 0;
 if (!i15) {
  _arLog(0, 3, 20510, i7);
  _exit(1);
 }
 if ((i8 | 0) > 0) {
  i7 = 0;
  do {
   _memcpy(i15 + (i7 * 132 | 0) | 0, (HEAP32[i12 >> 2] | 0) + (i7 * 132 | 0) | 0, 132) | 0;
   i7 = i7 + 1 | 0;
  } while ((i7 | 0) != (i8 | 0));
 }
 if ((i11 | 0) > 0) {
  i7 = 0;
  do {
   _memcpy(i15 + ((i7 + i8 | 0) * 132 | 0) | 0, (HEAP32[i10 >> 2] | 0) + (i7 * 132 | 0) | 0, 132) | 0;
   i7 = i7 + 1 | 0;
  } while ((i7 | 0) != (i11 | 0));
 }
 i11 = HEAP32[i12 >> 2] | 0;
 if (!i11) i16 = i13; else {
  _free(i11);
  i16 = HEAP32[i1 >> 2] | 0;
 }
 HEAP32[i16 >> 2] = i15;
 i15 = HEAP32[i1 >> 2] | 0;
 HEAP32[i15 + 4 >> 2] = i14;
 i14 = HEAP32[i15 + 12 >> 2] | 0;
 i16 = HEAP32[i2 >> 2] | 0;
 i11 = HEAP32[i16 + 12 >> 2] | 0;
 i13 = (i11 | 0) > 0;
 if (i13 & (i14 | 0) > 0) {
  i12 = HEAP32[i16 + 8 >> 2] | 0;
  i7 = HEAP32[i15 + 8 >> 2] | 0;
  i10 = 0;
  i8 = 0;
  while (1) {
   i17 = HEAP32[i12 + (i8 * 12 | 0) + 8 >> 2] | 0;
   i18 = 0;
   while (1) {
    if ((i17 | 0) == (HEAP32[i7 + (i18 * 12 | 0) + 8 >> 2] | 0)) {
     i19 = 23;
     break;
    }
    i18 = i18 + 1 | 0;
    if ((i18 | 0) >= (i14 | 0)) {
     i20 = i10;
     break;
    }
   }
   if ((i19 | 0) == 23) {
    i19 = 0;
    i20 = i10 + 1 | 0;
   }
   i8 = i8 + 1 | 0;
   if ((i8 | 0) == (i11 | 0)) {
    i21 = i20;
    break;
   } else i10 = i20;
  }
 } else i21 = 0;
 i20 = i11 + i14 - i21 | 0;
 i21 = _malloc(i20 * 12 | 0) | 0;
 if (!i21) {
  _arLog(0, 3, 20510, i6);
  _exit(1);
 }
 i6 = (i14 | 0) > 0;
 L44 : do if (i6) {
  if (!i13) {
   i10 = i15 + 8 | 0;
   i8 = HEAP32[i10 >> 2] | 0;
   HEAP32[i21 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i7 = HEAP32[i8 + 4 >> 2] | 0;
   i8 = _malloc(i7 * 12 | 0) | 0;
   HEAP32[i21 >> 2] = i8;
   if (!i8) {
    _arLog(0, 3, 20510, i5);
    _exit(1);
   }
   i12 = 0;
   i18 = i8;
   i8 = i10;
   i10 = i21;
   i17 = i7;
   do {
    i7 = HEAP32[i8 >> 2] | 0;
    i22 = HEAP32[i7 + (i12 * 12 | 0) + 4 >> 2] | 0;
    if ((i22 | 0) > 0 ? (i23 = HEAP32[i7 + (i12 * 12 | 0) >> 2] | 0, HEAP32[i18 >> 2] = HEAP32[i23 >> 2], HEAP32[i18 + 4 >> 2] = HEAP32[i23 + 4 >> 2], HEAP32[i18 + 8 >> 2] = HEAP32[i23 + 8 >> 2], (i22 | 0) != 1) : 0) {
     i23 = 1;
     do {
      i7 = (HEAP32[(HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0) + (i12 * 12 | 0) >> 2] | 0) + (i23 * 12 | 0) | 0;
      i24 = (HEAP32[i10 >> 2] | 0) + (i23 * 12 | 0) | 0;
      HEAP32[i24 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i24 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
      HEAP32[i24 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
      i23 = i23 + 1 | 0;
     } while ((i23 | 0) != (i22 | 0));
    }
    HEAP32[i21 + (i12 * 12 | 0) + 4 >> 2] = i17;
    i12 = i12 + 1 | 0;
    if ((i12 | 0) >= (i14 | 0)) break L44;
    i8 = (HEAP32[i1 >> 2] | 0) + 8 | 0;
    i22 = HEAP32[i8 >> 2] | 0;
    i10 = i21 + (i12 * 12 | 0) | 0;
    HEAP32[i21 + (i12 * 12 | 0) + 8 >> 2] = HEAP32[i22 + (i12 * 12 | 0) + 8 >> 2];
    i17 = HEAP32[i22 + (i12 * 12 | 0) + 4 >> 2] | 0;
    i18 = _malloc(i17 * 12 | 0) | 0;
    HEAP32[i10 >> 2] = i18;
   } while ((i18 | 0) != 0);
   _arLog(0, 3, 20510, i5);
   _exit(1);
  }
  i18 = 0;
  i10 = i15;
  i17 = i16;
  while (1) {
   i12 = i10 + 8 | 0;
   i8 = HEAP32[i12 >> 2] | 0;
   i22 = i8 + (i18 * 12 | 0) + 8 | 0;
   HEAP32[i21 + (i18 * 12 | 0) + 8 >> 2] = HEAP32[i22 >> 2];
   i23 = HEAP32[i17 + 8 >> 2] | 0;
   i7 = HEAP32[i22 >> 2] | 0;
   i22 = HEAP32[i8 + (i18 * 12 | 0) + 4 >> 2] | 0;
   i8 = 0;
   while (1) {
    if ((HEAP32[i23 + (i8 * 12 | 0) + 8 >> 2] | 0) == (i7 | 0)) i25 = (HEAP32[i23 + (i8 * 12 | 0) + 4 >> 2] | 0) + i22 | 0; else i25 = i22;
    i8 = i8 + 1 | 0;
    if ((i8 | 0) == (i11 | 0)) break; else i22 = i25;
   }
   i22 = i21 + (i18 * 12 | 0) | 0;
   i8 = _malloc(i25 * 12 | 0) | 0;
   HEAP32[i22 >> 2] = i8;
   if (!i8) break;
   i23 = HEAP32[i12 >> 2] | 0;
   i7 = HEAP32[i23 + (i18 * 12 | 0) + 4 >> 2] | 0;
   if ((i7 | 0) > 0 ? (i24 = HEAP32[i23 + (i18 * 12 | 0) >> 2] | 0, HEAP32[i8 >> 2] = HEAP32[i24 >> 2], HEAP32[i8 + 4 >> 2] = HEAP32[i24 + 4 >> 2], HEAP32[i8 + 8 >> 2] = HEAP32[i24 + 8 >> 2], (i7 | 0) != 1) : 0) {
    i24 = 1;
    do {
     i8 = (HEAP32[(HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0) + (i18 * 12 | 0) >> 2] | 0) + (i24 * 12 | 0) | 0;
     i23 = (HEAP32[i22 >> 2] | 0) + (i24 * 12 | 0) | 0;
     HEAP32[i23 >> 2] = HEAP32[i8 >> 2];
     HEAP32[i23 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
     HEAP32[i23 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
     i24 = i24 + 1 | 0;
    } while ((i24 | 0) != (i7 | 0));
   }
   i24 = HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] | 0;
   i12 = HEAP32[(HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0) + (i18 * 12 | 0) + 8 >> 2] | 0;
   i8 = 0;
   while (1) {
    if ((HEAP32[i24 + (i8 * 12 | 0) + 8 >> 2] | 0) == (i12 | 0)) {
     i19 = 34;
     break;
    }
    i23 = i8 + 1 | 0;
    if ((i23 | 0) < (i11 | 0)) i8 = i23; else break;
   }
   if ((i19 | 0) == 34 ? (i19 = 0, (HEAP32[i24 + (i8 * 12 | 0) + 4 >> 2] | 0) > 0) : 0) {
    i12 = 0;
    i23 = i24;
    do {
     i26 = (HEAP32[i23 + (i8 * 12 | 0) >> 2] | 0) + (i12 * 12 | 0) | 0;
     i27 = (HEAP32[i22 >> 2] | 0) + ((i12 + i7 | 0) * 12 | 0) | 0;
     HEAP32[i27 >> 2] = HEAP32[i26 >> 2];
     HEAP32[i27 + 4 >> 2] = HEAP32[i26 + 4 >> 2];
     HEAP32[i27 + 8 >> 2] = HEAP32[i26 + 8 >> 2];
     i12 = i12 + 1 | 0;
     i23 = HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] | 0;
    } while ((i12 | 0) < (HEAP32[i23 + (i8 * 12 | 0) + 4 >> 2] | 0));
   }
   HEAP32[i21 + (i18 * 12 | 0) + 4 >> 2] = i25;
   i8 = i18 + 1 | 0;
   if ((i8 | 0) >= (i14 | 0)) break L44;
   i18 = i8;
   i10 = HEAP32[i1 >> 2] | 0;
   i17 = HEAP32[i2 >> 2] | 0;
  }
  _arLog(0, 3, 20510, i5);
  _exit(1);
 } while (0);
 L89 : do if (i13) {
  if (!i6) {
   i5 = 0;
   while (1) {
    i25 = HEAP32[i2 >> 2] | 0;
    i16 = HEAP32[i25 + 8 >> 2] | 0;
    i15 = i5 + i14 | 0;
    i17 = i21 + (i15 * 12 | 0) | 0;
    HEAP32[i21 + (i15 * 12 | 0) + 8 >> 2] = HEAP32[i16 + (i5 * 12 | 0) + 8 >> 2];
    i10 = HEAP32[i16 + (i5 * 12 | 0) + 4 >> 2] | 0;
    i16 = _malloc(i10 * 12 | 0) | 0;
    HEAP32[i17 >> 2] = i16;
    if (!i16) break;
    if ((i10 | 0) > 0 ? (i18 = HEAP32[(HEAP32[i25 + 8 >> 2] | 0) + (i5 * 12 | 0) >> 2] | 0, HEAP32[i16 >> 2] = HEAP32[i18 >> 2], HEAP32[i16 + 4 >> 2] = HEAP32[i18 + 4 >> 2], HEAP32[i16 + 8 >> 2] = HEAP32[i18 + 8 >> 2], (i10 | 0) != 1) : 0) {
     i18 = 1;
     do {
      i16 = (HEAP32[(HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] | 0) + (i5 * 12 | 0) >> 2] | 0) + (i18 * 12 | 0) | 0;
      i25 = (HEAP32[i17 >> 2] | 0) + (i18 * 12 | 0) | 0;
      HEAP32[i25 >> 2] = HEAP32[i16 >> 2];
      HEAP32[i25 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
      HEAP32[i25 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
      i18 = i18 + 1 | 0;
     } while ((i18 | 0) != (i10 | 0));
    }
    HEAP32[i21 + (i15 * 12 | 0) + 4 >> 2] = i10;
    i5 = i5 + 1 | 0;
    if ((i5 | 0) >= (i11 | 0)) break L89;
   }
   _arLog(0, 3, 20510, i4);
   _exit(1);
  }
  i5 = 0;
  i18 = 0;
  while (1) {
   i17 = HEAP32[i2 >> 2] | 0;
   i16 = HEAP32[i17 + 8 >> 2] | 0;
   i25 = HEAP32[i16 + (i18 * 12 | 0) + 8 >> 2] | 0;
   i8 = HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0;
   i23 = 0;
   while (1) {
    if ((i25 | 0) == (HEAP32[i8 + (i23 * 12 | 0) + 8 >> 2] | 0)) {
     i19 = 66;
     break;
    }
    i23 = i23 + 1 | 0;
    if ((i23 | 0) >= (i14 | 0)) {
     i19 = 68;
     break;
    }
   }
   if ((i19 | 0) == 66) {
    i19 = 0;
    i28 = i5 + 1 | 0;
   } else if ((i19 | 0) == 68) {
    i19 = 0;
    i23 = i18 + i14 - i5 | 0;
    i8 = i21 + (i23 * 12 | 0) | 0;
    HEAP32[i21 + (i23 * 12 | 0) + 8 >> 2] = i25;
    i10 = HEAP32[i16 + (i18 * 12 | 0) + 4 >> 2] | 0;
    i15 = _malloc(i10 * 12 | 0) | 0;
    HEAP32[i8 >> 2] = i15;
    if (!i15) break;
    if ((i10 | 0) > 0 ? (i12 = HEAP32[(HEAP32[i17 + 8 >> 2] | 0) + (i18 * 12 | 0) >> 2] | 0, HEAP32[i15 >> 2] = HEAP32[i12 >> 2], HEAP32[i15 + 4 >> 2] = HEAP32[i12 + 4 >> 2], HEAP32[i15 + 8 >> 2] = HEAP32[i12 + 8 >> 2], (i10 | 0) != 1) : 0) {
     i12 = 1;
     do {
      i15 = (HEAP32[(HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] | 0) + (i18 * 12 | 0) >> 2] | 0) + (i12 * 12 | 0) | 0;
      i7 = (HEAP32[i8 >> 2] | 0) + (i12 * 12 | 0) | 0;
      HEAP32[i7 >> 2] = HEAP32[i15 >> 2];
      HEAP32[i7 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
      HEAP32[i7 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
      i12 = i12 + 1 | 0;
     } while ((i12 | 0) != (i10 | 0));
    }
    HEAP32[i21 + (i23 * 12 | 0) + 4 >> 2] = i10;
    i28 = i5;
   }
   i18 = i18 + 1 | 0;
   if ((i18 | 0) >= (i11 | 0)) break L89; else i5 = i28;
  }
  _arLog(0, 3, 20510, i4);
  _exit(1);
 } while (0);
 i4 = HEAP32[i1 >> 2] | 0;
 i28 = i4 + 8 | 0;
 i11 = HEAP32[i28 >> 2] | 0;
 if (!i11) i29 = i28; else {
  if ((HEAP32[i4 + 12 >> 2] | 0) > 0) {
   i4 = 0;
   i28 = i11;
   while (1) {
    _free(HEAP32[i28 + (i4 * 12 | 0) >> 2] | 0);
    i4 = i4 + 1 | 0;
    i14 = HEAP32[i1 >> 2] | 0;
    i19 = HEAP32[i14 + 8 >> 2] | 0;
    if ((i4 | 0) >= (HEAP32[i14 + 12 >> 2] | 0)) {
     i30 = i19;
     break;
    } else i28 = i19;
   }
  } else i30 = i11;
  _free(i30);
  i29 = (HEAP32[i1 >> 2] | 0) + 8 | 0;
 }
 HEAP32[i29 >> 2] = i21;
 HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] = i20;
 _kpmDeleteRefDataSet(i2) | 0;
 i9 = 0;
 STACKTOP = i3;
 return i9 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i5 = i4 + 96 | 0;
 i6 = i4 + 72 | 0;
 i7 = i4 + 48 | 0;
 i8 = i4 + 36 | 0;
 i9 = i4 + 24 | 0;
 i10 = i4 + 12 | 0;
 i11 = i4;
 do if (((i1 | 0) != (i2 | 0) ? (HEAP8[i1 >> 0] | 0) == 65 : 0) ? (i12 = i1 + 1 | 0, (i12 | 0) != (i2 | 0)) : 0) {
  i13 = HEAP8[i12 >> 0] | 0;
  if (i13 << 24 >> 24 == 95) {
   i14 = i1 + 2 | 0;
   i15 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i14, i2, i3) | 0;
   if ((i15 | 0) == (i14 | 0)) {
    i16 = i1;
    break;
   }
   i14 = i3 + 4 | 0;
   i17 = HEAP32[i14 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i17 | 0)) {
    i16 = i1;
    break;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i5, i17 + -12 | 0, 2);
   i17 = __ZNSt3__211char_traitsIcE6lengthEPKc(50237) | 0;
   i18 = HEAP8[i5 + 11 >> 0] | 0;
   if ((i17 | 0) == ((i18 << 24 >> 24 < 0 ? HEAP32[i5 + 4 >> 2] | 0 : i18 & 255) | 0)) {
    i18 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i5, 50237, i17) | 0) == 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    if (i18) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm((HEAP32[i14 >> 2] | 0) + -12 | 0);
   } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[i14 >> 2] | 0) + -12 | 0, 0, 51678) | 0;
   i16 = i15;
   break;
  }
  if ((i13 + -49 & 255) < 9) {
   i13 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i12, i2) | 0;
   if ((i13 | 0) == (i2 | 0)) {
    i16 = i1;
    break;
   }
   if ((HEAP8[i13 >> 0] | 0) != 95) {
    i16 = i1;
    break;
   }
   i15 = i13 + 1 | 0;
   i14 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i15, i2, i3) | 0;
   if ((i14 | 0) == (i15 | 0)) {
    i16 = i1;
    break;
   }
   i15 = i3 + 4 | 0;
   i18 = HEAP32[i15 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i18 | 0)) {
    i16 = i1;
    break;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i5, i18 + -12 | 0, 2);
   i18 = __ZNSt3__211char_traitsIcE6lengthEPKc(50237) | 0;
   i17 = HEAP8[i5 + 11 >> 0] | 0;
   if ((i18 | 0) == ((i17 << 24 >> 24 < 0 ? HEAP32[i5 + 4 >> 2] | 0 : i17 & 255) | 0)) {
    i17 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i5, 50237, i18) | 0) == 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    if (i17) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm((HEAP32[i15 >> 2] | 0) + -12 | 0);
   } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   i17 = (HEAP32[i15 >> 2] | 0) + -12 | 0;
   HEAP32[i7 >> 2] = 0;
   HEAP32[i7 + 4 >> 2] = 0;
   HEAP32[i7 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i7, i12, i13);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 50237) | 0;
   HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   i13 = 0;
   while (1) {
    if ((i13 | 0) == 3) break;
    HEAP32[i7 + (i13 << 2) >> 2] = 0;
    i13 = i13 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50292) | 0;
   HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   i13 = 0;
   while (1) {
    if ((i13 | 0) == 3) break;
    HEAP32[i6 + (i13 << 2) >> 2] = 0;
    i13 = i13 + 1 | 0;
   }
   i13 = HEAP8[i5 + 11 >> 0] | 0;
   i15 = i13 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm(i17, 0, i15 ? HEAP32[i5 >> 2] | 0 : i5, i15 ? HEAP32[i5 + 4 >> 2] | 0 : i13 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   i16 = i14;
   break;
  }
  i13 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
  if (((!((i13 | 0) == (i12 | 0) | (i13 | 0) == (i2 | 0)) ? (HEAP8[i13 >> 0] | 0) == 95 : 0) ? (i15 = i13 + 1 | 0, i13 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i15, i2, i3) | 0, (i13 | 0) != (i15 | 0)) : 0) ? (i15 = i3 + 4 | 0, i18 = HEAP32[i15 >> 2] | 0, ((i18 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i6, i18 + -24 | 0);
   i18 = HEAP32[i15 >> 2] | 0;
   i19 = 0;
   while (1) {
    if ((i19 | 0) == -1) break;
    i20 = i19 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i18 + (i20 * 24 | 0) | 0);
    i19 = i20;
   }
   HEAP32[i15 >> 2] = i18 + -24;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i18 + -48 | 0);
   i19 = HEAP32[i15 >> 2] | 0;
   i12 = i19 + -24 | 0;
   i14 = i12 + 11 | 0;
   if ((HEAP8[i14 >> 0] | 0) < 0) {
    i17 = HEAP32[i12 >> 2] | 0;
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i17, i5);
    HEAP32[i19 + -20 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i12, i5);
    HEAP8[i14 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i12);
   HEAP32[i12 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i12 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i12 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i6 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   i12 = i6 + 12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i5, i12, 2);
   i18 = __ZNSt3__211char_traitsIcE6lengthEPKc(50237) | 0;
   i14 = HEAP8[i5 + 11 >> 0] | 0;
   if ((i18 | 0) == ((i14 << 24 >> 24 < 0 ? HEAP32[i5 + 4 >> 2] | 0 : i14 & 255) | 0)) {
    i14 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i5, 50237, i18) | 0) == 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    if (i14) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm(i12);
   } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 50237) | 0;
   HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i14 = 0;
   while (1) {
    if ((i14 | 0) == 3) break;
    HEAP32[i11 + (i14 << 2) >> 2] = 0;
    i14 = i14 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50292) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i14 = 0;
   while (1) {
    if ((i14 | 0) == 3) break;
    HEAP32[i10 + (i14 << 2) >> 2] = 0;
    i14 = i14 + 1 | 0;
   }
   i14 = HEAP8[i12 + 11 >> 0] | 0;
   i18 = i14 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i18 ? HEAP32[i12 >> 2] | 0 : i12, i18 ? HEAP32[i6 + 16 >> 2] | 0 : i14 & 255) | 0;
   HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i14 = 0;
   while (1) {
    if ((i14 | 0) == 3) break;
    HEAP32[i9 + (i14 << 2) >> 2] = 0;
    i14 = i14 + 1 | 0;
   }
   i14 = HEAP32[i15 >> 2] | 0;
   i12 = i14 + -12 | 0;
   i18 = i12 + 11 | 0;
   if ((HEAP8[i18 >> 0] | 0) < 0) {
    i19 = HEAP32[i12 >> 2] | 0;
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i19, i5);
    HEAP32[i14 + -8 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i12, i5);
    HEAP8[i18 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i12);
   HEAP32[i12 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i12 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i12 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i8 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
   i16 = i13;
  } else i16 = i1;
 } else i16 = i1; while (0);
 STACKTOP = i4;
 return i16 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis3IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, d15 = 0.0, i16 = 0, d17 = 0.0, i18 = 0, d19 = 0.0, i20 = 0, d21 = 0.0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, i26 = 0, d27 = 0.0, i28 = 0, d29 = 0.0, i30 = 0, d31 = 0.0, i32 = 0, d33 = 0.0, i34 = 0, d35 = 0.0, i36 = 0, d37 = 0.0, i38 = 0, d39 = 0.0, i40 = 0, d41 = 0.0, i42 = 0, d43 = 0.0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, d54 = 0.0, d55 = 0.0, d56 = 0.0, d57 = 0.0, d58 = 0.0, d59 = 0.0, d60 = 0.0, d61 = 0.0, d62 = 0.0, d63 = 0.0, d64 = 0.0, d65 = 0.0, d66 = 0.0, d67 = 0.0, d68 = 0.0, d69 = 0.0, d70 = 0.0, i71 = 0, i72 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = i1 + 108 | 0;
 i6 = i2 + 108 | 0;
 d7 = +HEAPF32[i1 + 72 >> 2];
 i8 = i2 + 112 | 0;
 d9 = +HEAPF32[i1 + 76 >> 2];
 i10 = i2 + 116 | 0;
 d11 = +HEAPF32[i1 + 80 >> 2];
 i12 = i2 + 120 | 0;
 d13 = +HEAPF32[i1 + 84 >> 2];
 i14 = i2 + 124 | 0;
 d15 = +HEAPF32[i1 + 88 >> 2];
 i16 = i2 + 128 | 0;
 d17 = +HEAPF32[i1 + 92 >> 2];
 i18 = i2 + 132 | 0;
 d19 = +HEAPF32[i1 + 96 >> 2];
 i20 = i2 + 136 | 0;
 d21 = +HEAPF32[i1 + 100 >> 2];
 i22 = i2 + 140 | 0;
 d23 = +HEAPF32[i1 + 104 >> 2];
 d24 = +HEAPF32[i6 >> 2] * d7 + +HEAPF32[i8 >> 2] * d9 + +HEAPF32[i10 >> 2] * d11 + +HEAPF32[i12 >> 2] * d13 + +HEAPF32[i14 >> 2] * d15 + +HEAPF32[i16 >> 2] * d17 + +HEAPF32[i18 >> 2] * d19 + +HEAPF32[i20 >> 2] * d21 + +HEAPF32[i22 >> 2] * d23;
 d25 = +HEAPF32[i5 >> 2] - d7 * d24;
 HEAPF32[i5 >> 2] = d25;
 i26 = i1 + 112 | 0;
 d27 = +HEAPF32[i26 >> 2] - d9 * d24;
 HEAPF32[i26 >> 2] = d27;
 i28 = i1 + 116 | 0;
 d29 = +HEAPF32[i28 >> 2] - d11 * d24;
 HEAPF32[i28 >> 2] = d29;
 i30 = i1 + 120 | 0;
 d31 = +HEAPF32[i30 >> 2] - d13 * d24;
 HEAPF32[i30 >> 2] = d31;
 i32 = i1 + 124 | 0;
 d33 = +HEAPF32[i32 >> 2] - d15 * d24;
 HEAPF32[i32 >> 2] = d33;
 i34 = i1 + 128 | 0;
 d35 = +HEAPF32[i34 >> 2] - d17 * d24;
 HEAPF32[i34 >> 2] = d35;
 i36 = i1 + 132 | 0;
 d37 = +HEAPF32[i36 >> 2] - d19 * d24;
 HEAPF32[i36 >> 2] = d37;
 i38 = i1 + 136 | 0;
 d39 = +HEAPF32[i38 >> 2] - d21 * d24;
 HEAPF32[i38 >> 2] = d39;
 i40 = i1 + 140 | 0;
 d41 = +HEAPF32[i40 >> 2] - d23 * d24;
 HEAPF32[i40 >> 2] = d41;
 i42 = i1 + 144 | 0;
 d24 = d7 * +HEAPF32[i2 + 144 >> 2] + d9 * +HEAPF32[i2 + 148 >> 2] + d11 * +HEAPF32[i2 + 152 >> 2] + d13 * +HEAPF32[i2 + 156 >> 2] + d15 * +HEAPF32[i2 + 160 >> 2] + d17 * +HEAPF32[i2 + 164 >> 2] + d19 * +HEAPF32[i2 + 168 >> 2] + d21 * +HEAPF32[i2 + 172 >> 2] + d23 * +HEAPF32[i2 + 176 >> 2];
 d43 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d43;
 i42 = i1 + 148 | 0;
 d44 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d44;
 i42 = i1 + 152 | 0;
 d45 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d45;
 i42 = i1 + 156 | 0;
 d46 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d46;
 i42 = i1 + 160 | 0;
 d47 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d47;
 i42 = i1 + 164 | 0;
 d48 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d48;
 i42 = i1 + 168 | 0;
 d49 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d49;
 i42 = i1 + 172 | 0;
 d50 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d50;
 i42 = i1 + 176 | 0;
 d51 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d51;
 i42 = i1 + 180 | 0;
 d24 = d7 * +HEAPF32[i2 + 180 >> 2] + d9 * +HEAPF32[i2 + 184 >> 2] + d11 * +HEAPF32[i2 + 188 >> 2] + d13 * +HEAPF32[i2 + 192 >> 2] + d15 * +HEAPF32[i2 + 196 >> 2] + d17 * +HEAPF32[i2 + 200 >> 2] + d19 * +HEAPF32[i2 + 204 >> 2] + d21 * +HEAPF32[i2 + 208 >> 2] + d23 * +HEAPF32[i2 + 212 >> 2];
 d52 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d52;
 i42 = i1 + 184 | 0;
 d53 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d53;
 i42 = i1 + 188 | 0;
 d54 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d54;
 i42 = i1 + 192 | 0;
 d55 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d55;
 i42 = i1 + 196 | 0;
 d56 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d56;
 i42 = i1 + 200 | 0;
 d57 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d57;
 i42 = i1 + 204 | 0;
 d58 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d58;
 i42 = i1 + 208 | 0;
 d59 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d59;
 i42 = i1 + 212 | 0;
 d60 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d60;
 i42 = i1 + 216 | 0;
 d24 = d7 * +HEAPF32[i2 + 216 >> 2] + d9 * +HEAPF32[i2 + 220 >> 2] + d11 * +HEAPF32[i2 + 224 >> 2] + d13 * +HEAPF32[i2 + 228 >> 2] + d15 * +HEAPF32[i2 + 232 >> 2] + d17 * +HEAPF32[i2 + 236 >> 2] + d19 * +HEAPF32[i2 + 240 >> 2] + d21 * +HEAPF32[i2 + 244 >> 2] + d23 * +HEAPF32[i2 + 248 >> 2];
 d61 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d61;
 i42 = i1 + 220 | 0;
 d62 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d62;
 i42 = i1 + 224 | 0;
 d63 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d63;
 i42 = i1 + 228 | 0;
 d64 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d64;
 i42 = i1 + 232 | 0;
 d65 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d65;
 i42 = i1 + 236 | 0;
 d66 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d66;
 i42 = i1 + 240 | 0;
 d67 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d67;
 i42 = i1 + 244 | 0;
 d68 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d68;
 i42 = i1 + 248 | 0;
 d69 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d69;
 i42 = i1 + 252 | 0;
 d24 = d7 * +HEAPF32[i2 + 252 >> 2] + d9 * +HEAPF32[i2 + 256 >> 2] + d11 * +HEAPF32[i2 + 260 >> 2] + d13 * +HEAPF32[i2 + 264 >> 2] + d15 * +HEAPF32[i2 + 268 >> 2] + d17 * +HEAPF32[i2 + 272 >> 2] + d19 * +HEAPF32[i2 + 276 >> 2] + d21 * +HEAPF32[i2 + 280 >> 2] + d23 * +HEAPF32[i2 + 284 >> 2];
 d70 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d70;
 i42 = i1 + 256 | 0;
 d7 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d7;
 i42 = i1 + 260 | 0;
 d9 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d9;
 i42 = i1 + 264 | 0;
 d11 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d11;
 i42 = i1 + 268 | 0;
 d13 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d13;
 i42 = i1 + 272 | 0;
 d15 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d15;
 i42 = i1 + 276 | 0;
 d17 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d17;
 i42 = i1 + 280 | 0;
 d19 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d19;
 i42 = i1 + 284 | 0;
 d21 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d21;
 d24 = d25 * d25 + d27 * d27 + d29 * d29 + d31 * d31 + d33 * d33 + d35 * d35 + d37 * d37 + d39 * d39 + d41 * d41;
 HEAPF32[i4 >> 2] = d24;
 d41 = d43 * d43 + d44 * d44 + d45 * d45 + d46 * d46 + d47 * d47 + d48 * d48 + d49 * d49 + d50 * d50 + d51 * d51;
 HEAPF32[i4 + 4 >> 2] = d41;
 d51 = d52 * d52 + d53 * d53 + d54 * d54 + d55 * d55 + d56 * d56 + d57 * d57 + d58 * d58 + d59 * d59 + d60 * d60;
 HEAPF32[i4 + 8 >> 2] = d51;
 d60 = d61 * d61 + d62 * d62 + d63 * d63 + d64 * d64 + d65 * d65 + d66 * d66 + d67 * d67 + d68 * d68 + d69 * d69;
 HEAPF32[i4 + 12 >> 2] = d60;
 d69 = d70 * d70 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 HEAPF32[i4 + 16 >> 2] = d69;
 i42 = d41 > d24 & 1;
 i1 = d51 > +HEAPF32[i4 + (i42 << 2) >> 2] ? 2 : i42;
 i42 = d60 > +HEAPF32[i4 + (i1 << 2) >> 2] ? 3 : i1;
 i1 = d69 > +HEAPF32[i4 + (i42 << 2) >> 2] ? 4 : i42;
 d69 = +HEAPF32[i4 + (i1 << 2) >> 2];
 if (d69 == 0.0) {
  i71 = 0;
  STACKTOP = i3;
  return i71 | 0;
 }
 i4 = i1 * 9 | 0;
 i1 = i5 + (i4 << 2) | 0;
 i42 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 i2 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = i42;
 i42 = HEAP32[i26 >> 2] | 0;
 HEAP32[i26 >> 2] = HEAP32[i2 >> 2];
 i72 = i1 + 8 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i28 >> 2] | 0;
 HEAP32[i28 >> 2] = HEAP32[i72 >> 2];
 i2 = i1 + 12 | 0;
 HEAP32[i72 >> 2] = i42;
 i42 = HEAP32[i30 >> 2] | 0;
 HEAP32[i30 >> 2] = HEAP32[i2 >> 2];
 i72 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i32 >> 2] | 0;
 HEAP32[i32 >> 2] = HEAP32[i72 >> 2];
 i2 = i1 + 20 | 0;
 HEAP32[i72 >> 2] = i42;
 i42 = HEAP32[i34 >> 2] | 0;
 HEAP32[i34 >> 2] = HEAP32[i2 >> 2];
 i72 = i1 + 24 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i36 >> 2] | 0;
 HEAP32[i36 >> 2] = HEAP32[i72 >> 2];
 i2 = i1 + 28 | 0;
 HEAP32[i72 >> 2] = i42;
 i42 = HEAP32[i38 >> 2] | 0;
 HEAP32[i38 >> 2] = HEAP32[i2 >> 2];
 i72 = i1 + 32 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i40 >> 2] | 0;
 HEAP32[i40 >> 2] = HEAP32[i72 >> 2];
 HEAP32[i72 >> 2] = i42;
 i42 = i6 + (i4 << 2) | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i42 >> 2];
 i6 = i42 + 4 | 0;
 HEAP32[i42 >> 2] = i4;
 i4 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
 i8 = i42 + 8 | 0;
 HEAP32[i6 >> 2] = i4;
 i4 = HEAP32[i10 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
 i10 = i42 + 12 | 0;
 HEAP32[i8 >> 2] = i4;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i10 >> 2];
 i12 = i42 + 16 | 0;
 HEAP32[i10 >> 2] = i4;
 i4 = HEAP32[i14 >> 2] | 0;
 HEAP32[i14 >> 2] = HEAP32[i12 >> 2];
 i14 = i42 + 20 | 0;
 HEAP32[i12 >> 2] = i4;
 i4 = HEAP32[i16 >> 2] | 0;
 HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
 i16 = i42 + 24 | 0;
 HEAP32[i14 >> 2] = i4;
 i4 = HEAP32[i18 >> 2] | 0;
 HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
 i18 = i42 + 28 | 0;
 HEAP32[i16 >> 2] = i4;
 i4 = HEAP32[i20 >> 2] | 0;
 HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
 i20 = i42 + 32 | 0;
 HEAP32[i18 >> 2] = i4;
 i4 = HEAP32[i22 >> 2] | 0;
 HEAP32[i22 >> 2] = HEAP32[i20 >> 2];
 HEAP32[i20 >> 2] = i4;
 d60 = 1.0 / +Math_sqrt(+d69);
 HEAPF32[i5 >> 2] = d60 * +HEAPF32[i5 >> 2];
 HEAPF32[i26 >> 2] = d60 * +HEAPF32[i26 >> 2];
 HEAPF32[i28 >> 2] = d60 * +HEAPF32[i28 >> 2];
 HEAPF32[i30 >> 2] = d60 * +HEAPF32[i30 >> 2];
 HEAPF32[i32 >> 2] = d60 * +HEAPF32[i32 >> 2];
 HEAPF32[i34 >> 2] = d60 * +HEAPF32[i34 >> 2];
 HEAPF32[i36 >> 2] = d60 * +HEAPF32[i36 >> 2];
 HEAPF32[i38 >> 2] = d60 * +HEAPF32[i38 >> 2];
 HEAPF32[i40 >> 2] = d60 * +HEAPF32[i40 >> 2];
 i71 = 1;
 STACKTOP = i3;
 return i71 | 0;
}

function __ZNK6vision21HoughSimilarityVoting16getBinsFromIndexERiS1_S1_S1_i(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7;
 i9 = i1 + 88 | 0;
 i10 = i1 + 84 | 0;
 i11 = i1 + 52 | 0;
 i12 = (((i6 | 0) % (HEAP32[i9 >> 2] | 0) | 0 | 0) % (HEAP32[i10 >> 2] | 0) | 0 | 0) % (HEAP32[i11 >> 2] | 0) | 0;
 HEAP32[i2 >> 2] = i12;
 i13 = (((i6 - i12 | 0) % (HEAP32[i9 >> 2] | 0) | 0 | 0) % (HEAP32[i10 >> 2] | 0) | 0 | 0) / (HEAP32[i11 >> 2] | 0) | 0;
 HEAP32[i3 >> 2] = i13;
 i12 = i6 - (HEAP32[i2 >> 2] | 0) - (Math_imul(HEAP32[i11 >> 2] | 0, i13) | 0) | 0;
 i13 = ((i12 | 0) % (HEAP32[i9 >> 2] | 0) | 0 | 0) / (HEAP32[i10 >> 2] | 0) | 0;
 HEAP32[i4 >> 2] = i13;
 i12 = Math_imul(HEAP32[i11 >> 2] | 0, HEAP32[i3 >> 2] | 0) | 0;
 i14 = i6 - (HEAP32[i2 >> 2] | 0) - ((Math_imul(HEAP32[i10 >> 2] | 0, i13) | 0) + i12) | 0;
 i12 = (i14 | 0) / (HEAP32[i9 >> 2] | 0) | 0;
 HEAP32[i5 >> 2] = i12;
 i5 = HEAP32[i2 >> 2] | 0;
 if ((i5 | 0) <= -1) {
  i2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30891, 32) | 0, 30394, 122) | 0, 33554, 6) | 0, 190) | 0, 33561, 2) | 0, 30924, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i2, i14) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i2) | 0;
  _abort();
 }
 if ((i5 | 0) >= (HEAP32[i11 >> 2] | 0)) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30942, 39) | 0, 30394, 122) | 0, 33554, 6) | 0, 191) | 0, 33561, 2) | 0, 30924, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 i11 = HEAP32[i3 >> 2] | 0;
 if ((i11 | 0) <= -1) {
  i3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30982, 32) | 0, 30394, 122) | 0, 33554, 6) | 0, 192) | 0, 33561, 2) | 0, 31015, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i5) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 }
 if ((i11 | 0) >= (HEAP32[i1 + 56 >> 2] | 0)) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31033, 39) | 0, 30394, 122) | 0, 33554, 6) | 0, 193) | 0, 33561, 2) | 0, 31015, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i5) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 i11 = HEAP32[i4 >> 2] | 0;
 if ((i11 | 0) <= -1) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31073, 36) | 0, 30394, 122) | 0, 33554, 6) | 0, 194) | 0, 33561, 2) | 0, 31110, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i3) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 if ((i11 | 0) >= (HEAP32[i1 + 60 >> 2] | 0)) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31132, 47) | 0, 30394, 122) | 0, 33554, 6) | 0, 195) | 0, 33561, 2) | 0, 31110, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i3) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 if ((i12 | 0) <= -1) {
  i11 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31180, 36) | 0, 30394, 122) | 0, 33554, 6) | 0, 196) | 0, 33561, 2) | 0, 31217, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i11, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i11) | 0;
  _abort();
 }
 if ((i12 | 0) < (HEAP32[i1 + 64 >> 2] | 0)) {
  STACKTOP = i7;
  return;
 } else {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31239, 47) | 0, 30394, 122) | 0, 33554, 6) | 0, 197) | 0, 33561, 2) | 0, 31217, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
}

function _ar2GetBestMatchingSubFine(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0;
 i8 = HEAP32[i4 + 24 >> 2] | 0;
 L1 : do switch (i3 | 0) {
 case 5:
 case 12:
 case 13:
 case 14:
  {
   i9 = 0 - (HEAP32[i4 + 8 >> 2] | 0) | 0;
   i10 = HEAP32[i4 + 12 >> 2] | 0;
   i11 = 0 - (HEAP32[i4 + 16 >> 2] | 0) | 0;
   i12 = HEAP32[i4 + 20 >> 2] | 0;
   if ((i12 | 0) >= (i11 | 0) ? (i13 = i2 << 1, (i10 | 0) >= (i9 | 0)) : 0) {
    i14 = i8;
    i15 = i1 + ((i9 << 1) + i5 + (Math_imul((i11 << 1) + i6 | 0, i2) | 0)) | 0;
    i16 = 0;
    i17 = i11;
    i11 = 0;
    i18 = 0;
    while (1) {
     i19 = i9;
     i20 = i14;
     i21 = i15;
     i22 = i16;
     i23 = i11;
     i24 = i18;
     while (1) {
      i25 = HEAP16[i20 >> 1] | 0;
      if (i25 << 16 >> 16 == 4096) {
       i26 = i22;
       i27 = i23;
       i28 = i24;
      } else {
       i29 = HEAPU8[i21 >> 0] | 0;
       i26 = i22 + i29 | 0;
       i27 = (Math_imul(i29, i29) | 0) + i23 | 0;
       i28 = (Math_imul(i29, i25 & 65535) | 0) + i24 | 0;
      }
      i20 = i20 + 2 | 0;
      if ((i19 | 0) >= (i10 | 0)) break; else {
       i19 = i19 + 1 | 0;
       i21 = i21 + 2 | 0;
       i22 = i26;
       i23 = i27;
       i24 = i28;
      }
     }
     if ((i17 | 0) < (i12 | 0)) {
      i14 = i20;
      i15 = i15 + i13 | 0;
      i16 = i26;
      i17 = i17 + 1 | 0;
      i11 = i27;
      i18 = i28;
     } else {
      i30 = i26;
      i31 = i27;
      i32 = i28;
      break;
     }
    }
   } else {
    i30 = 0;
    i31 = 0;
    i32 = 0;
   }
   break;
  }
 default:
  {
   if (i3 >>> 0 < 2) {
    i18 = 0 - (HEAP32[i4 + 16 >> 2] | 0) | 0;
    i11 = HEAP32[i4 + 20 >> 2] | 0;
    if ((i11 | 0) < (i18 | 0)) {
     i30 = 0;
     i31 = 0;
     i32 = 0;
     break L1;
    }
    i17 = HEAP32[i4 + 8 >> 2] | 0;
    i16 = i17 << 1;
    i13 = 0 - i17 | 0;
    i17 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i17 | 0) < (i13 | 0)) {
     i30 = 0;
     i31 = 0;
     i32 = 0;
     break L1;
    }
    i15 = i18;
    i18 = i8;
    i14 = 0;
    i12 = 0;
    i10 = 0;
    while (1) {
     i9 = i13;
     i24 = i1 + (((Math_imul((i15 << 1) + i6 | 0, i2) | 0) + i5 - i16 | 0) * 3 | 0) | 0;
     i23 = i18;
     i22 = i14;
     i21 = i12;
     i19 = i10;
     while (1) {
      i25 = HEAP16[i23 >> 1] | 0;
      if (i25 << 16 >> 16 == 4096) {
       i33 = i22;
       i34 = i21;
       i35 = i19;
      } else {
       i29 = (((HEAPU8[i24 + 1 >> 0] | 0) + (HEAPU8[i24 >> 0] | 0) + (HEAPU8[i24 + 2 >> 0] | 0) | 0) >>> 0) / 3 | 0;
       i33 = i29 + i22 | 0;
       i34 = (Math_imul(i29, i29) | 0) + i21 | 0;
       i35 = (Math_imul(i29, i25 & 65535) | 0) + i19 | 0;
      }
      i23 = i23 + 2 | 0;
      if ((i9 | 0) >= (i17 | 0)) break; else {
       i9 = i9 + 1 | 0;
       i24 = i24 + 6 | 0;
       i22 = i33;
       i21 = i34;
       i19 = i35;
      }
     }
     if ((i15 | 0) < (i11 | 0)) {
      i15 = i15 + 1 | 0;
      i18 = i23;
      i14 = i33;
      i12 = i34;
      i10 = i35;
     } else {
      i30 = i33;
      i31 = i34;
      i32 = i35;
      break L1;
     }
    }
   }
   if ((i3 | 1 | 0) == 3) {
    i10 = 0 - (HEAP32[i4 + 16 >> 2] | 0) | 0;
    i12 = HEAP32[i4 + 20 >> 2] | 0;
    if ((i12 | 0) < (i10 | 0)) {
     i30 = 0;
     i31 = 0;
     i32 = 0;
     break L1;
    }
    i14 = HEAP32[i4 + 8 >> 2] | 0;
    i18 = i14 << 1;
    i15 = 0 - i14 | 0;
    i14 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i14 | 0) < (i15 | 0)) {
     i30 = 0;
     i31 = 0;
     i32 = 0;
     break L1;
    }
    i11 = i10;
    i10 = i8;
    i17 = 0;
    i16 = 0;
    i13 = 0;
    while (1) {
     i19 = i15;
     i21 = i1 + ((Math_imul((i11 << 1) + i6 | 0, i2) | 0) + i5 - i18 << 2) | 0;
     i22 = i10;
     i24 = i17;
     i9 = i16;
     i20 = i13;
     while (1) {
      i25 = HEAP16[i22 >> 1] | 0;
      if (i25 << 16 >> 16 == 4096) {
       i36 = i24;
       i37 = i9;
       i38 = i20;
      } else {
       i29 = (((HEAPU8[i21 + 1 >> 0] | 0) + (HEAPU8[i21 >> 0] | 0) + (HEAPU8[i21 + 2 >> 0] | 0) | 0) >>> 0) / 3 | 0;
       i36 = i29 + i24 | 0;
       i37 = (Math_imul(i29, i29) | 0) + i9 | 0;
       i38 = (Math_imul(i29, i25 & 65535) | 0) + i20 | 0;
      }
      i22 = i22 + 2 | 0;
      if ((i19 | 0) >= (i14 | 0)) break; else {
       i19 = i19 + 1 | 0;
       i21 = i21 + 8 | 0;
       i24 = i36;
       i9 = i37;
       i20 = i38;
      }
     }
     if ((i11 | 0) < (i12 | 0)) {
      i11 = i11 + 1 | 0;
      i10 = i22;
      i17 = i36;
      i16 = i37;
      i13 = i38;
     } else {
      i30 = i36;
      i31 = i37;
      i32 = i38;
      break L1;
     }
    }
   }
   if ((i3 | 2 | 0) == 6) {
    i13 = 0 - (HEAP32[i4 + 16 >> 2] | 0) | 0;
    i16 = HEAP32[i4 + 20 >> 2] | 0;
    if ((i16 | 0) < (i13 | 0)) {
     i30 = 0;
     i31 = 0;
     i32 = 0;
     break L1;
    }
    i17 = HEAP32[i4 + 8 >> 2] | 0;
    i10 = i17 << 1;
    i11 = 0 - i17 | 0;
    i17 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i17 | 0) < (i11 | 0)) {
     i30 = 0;
     i31 = 0;
     i32 = 0;
     break L1;
    }
    i12 = i13;
    i13 = i8;
    i14 = 0;
    i18 = 0;
    i15 = 0;
    while (1) {
     i20 = i14;
     i9 = i18;
     i24 = i15;
     i21 = i11;
     i19 = i1 + ((Math_imul((i12 << 1) + i6 | 0, i2) | 0) + i5 - i10 << 2) | 0;
     i23 = i13;
     while (1) {
      i25 = HEAP16[i23 >> 1] | 0;
      if (i25 << 16 >> 16 == 4096) {
       i39 = i20;
       i40 = i9;
       i41 = i24;
      } else {
       i29 = (((HEAPU8[i19 + 2 >> 0] | 0) + (HEAPU8[i19 + 1 >> 0] | 0) + (HEAPU8[i19 + 3 >> 0] | 0) | 0) >>> 0) / 3 | 0;
       i39 = i29 + i20 | 0;
       i40 = (Math_imul(i29, i29) | 0) + i9 | 0;
       i41 = (Math_imul(i29, i25 & 65535) | 0) + i24 | 0;
      }
      i23 = i23 + 2 | 0;
      if ((i21 | 0) >= (i17 | 0)) break; else {
       i20 = i39;
       i9 = i40;
       i24 = i41;
       i21 = i21 + 1 | 0;
       i19 = i19 + 8 | 0;
      }
     }
     if ((i12 | 0) < (i16 | 0)) {
      i12 = i12 + 1 | 0;
      i13 = i23;
      i14 = i39;
      i18 = i40;
      i15 = i41;
     } else {
      i30 = i39;
      i31 = i40;
      i32 = i41;
      break L1;
     }
    }
   }
   switch (i3 | 0) {
   case 7:
    {
     i15 = 0 - (HEAP32[i4 + 16 >> 2] | 0) | 0;
     i18 = HEAP32[i4 + 20 >> 2] | 0;
     if ((i18 | 0) < (i15 | 0)) {
      i30 = 0;
      i31 = 0;
      i32 = 0;
      break L1;
     }
     i14 = HEAP32[i4 + 8 >> 2] | 0;
     i13 = i14 << 1;
     i12 = 0 - i14 | 0;
     i14 = HEAP32[i4 + 12 >> 2] | 0;
     if ((i14 | 0) < (i12 | 0)) {
      i30 = 0;
      i31 = 0;
      i32 = 0;
      break L1;
     }
     i16 = 0;
     i17 = 0;
     i10 = 0;
     i11 = i15;
     i15 = i8;
     while (1) {
      i19 = i16;
      i21 = i17;
      i24 = i10;
      i9 = i12;
      i20 = i1 + ((Math_imul((i11 << 1) + i6 | 0, i2) | 0) + i5 - i13 << 1) | 0;
      i22 = i15;
      while (1) {
       i25 = HEAP16[i22 >> 1] | 0;
       if (i25 << 16 >> 16 == 4096) {
        i42 = i24;
        i43 = i19;
        i44 = i21;
       } else {
        i29 = HEAPU8[i20 + 1 >> 0] | 0;
        i42 = i24 + i29 | 0;
        i43 = (Math_imul(i29, i29) | 0) + i19 | 0;
        i44 = (Math_imul(i29, i25 & 65535) | 0) + i21 | 0;
       }
       i22 = i22 + 2 | 0;
       if ((i9 | 0) >= (i14 | 0)) break; else {
        i19 = i43;
        i21 = i44;
        i24 = i42;
        i9 = i9 + 1 | 0;
        i20 = i20 + 4 | 0;
       }
      }
      if ((i11 | 0) < (i18 | 0)) {
       i16 = i43;
       i17 = i44;
       i10 = i42;
       i11 = i11 + 1 | 0;
       i15 = i22;
      } else {
       i30 = i42;
       i31 = i43;
       i32 = i44;
       break;
      }
     }
     break;
    }
   case 8:
    {
     i15 = 0 - (HEAP32[i4 + 16 >> 2] | 0) | 0;
     i11 = HEAP32[i4 + 20 >> 2] | 0;
     if ((i11 | 0) < (i15 | 0)) {
      i30 = 0;
      i31 = 0;
      i32 = 0;
      break L1;
     }
     i10 = HEAP32[i4 + 8 >> 2] | 0;
     i17 = i10 << 1;
     i16 = 0 - i10 | 0;
     i10 = HEAP32[i4 + 12 >> 2] | 0;
     if ((i10 | 0) < (i16 | 0)) {
      i30 = 0;
      i31 = 0;
      i32 = 0;
      break L1;
     }
     i18 = i8;
     i14 = 0;
     i13 = 0;
     i12 = 0;
     i20 = i15;
     while (1) {
      i15 = i18;
      i9 = i14;
      i24 = i13;
      i21 = i12;
      i19 = i16;
      i23 = i1 + ((Math_imul((i20 << 1) + i6 | 0, i2) | 0) + i5 - i17 << 1) | 0;
      while (1) {
       i25 = HEAP16[i15 >> 1] | 0;
       if (i25 << 16 >> 16 == 4096) {
        i45 = i9;
        i46 = i24;
        i47 = i21;
       } else {
        i29 = HEAPU8[i23 >> 0] | 0;
        i45 = i9 + i29 | 0;
        i46 = (Math_imul(i29, i29) | 0) + i24 | 0;
        i47 = (Math_imul(i29, i25 & 65535) | 0) + i21 | 0;
       }
       i15 = i15 + 2 | 0;
       if ((i19 | 0) >= (i10 | 0)) break; else {
        i9 = i45;
        i24 = i46;
        i21 = i47;
        i19 = i19 + 1 | 0;
        i23 = i23 + 4 | 0;
       }
      }
      if ((i20 | 0) < (i11 | 0)) {
       i18 = i15;
       i14 = i45;
       i13 = i46;
       i12 = i47;
       i20 = i20 + 1 | 0;
      } else {
       i30 = i45;
       i31 = i46;
       i32 = i47;
       break;
      }
     }
     break;
    }
   default:
    {
     i30 = 0;
     i31 = 0;
     i32 = 0;
     break L1;
    }
   }
  }
 } while (0);
 i47 = HEAP32[i4 + 36 >> 2] | 0;
 i46 = i31 - ((Math_imul(i30, i30) | 0) / (i47 | 0) | 0) | 0;
 if (!i46) {
  i48 = 0;
  HEAP32[i7 >> 2] = i48;
  return;
 }
 i31 = (i32 - ((Math_imul(HEAP32[i4 + 32 >> 2] | 0, i30) | 0) / (i47 | 0) | 0) | 0) * 100 | 0;
 i48 = (((i31 | 0) / (HEAP32[i4 + 28 >> 2] | 0) | 0) * 100 | 0) / (~~+Math_sqrt(+(+(i46 | 0))) | 0) | 0;
 HEAP32[i7 >> 2] = i48;
 return;
}

function _get_matrix_code(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8;
 if ((i2 + -3 | 0) >>> 0 > 5) {
  HEAP32[i3 >> 2] = -1;
  HEAP32[i4 >> 2] = 0;
  HEAPF64[i5 >> 3] = -1.0;
  i10 = -1;
  STACKTOP = i8;
  return i10 | 0;
 }
 i11 = i2 + -1 | 0;
 i12 = Math_imul(i11, i2) | 0;
 i13 = Math_imul(i2, i2) | 0;
 i14 = HEAP8[i1 >> 0] | 0;
 i15 = HEAP8[i1 + i12 >> 0] | 0;
 i12 = (i15 & 255) > (i14 & 255) ? i15 : i14;
 i16 = (i15 & 255) < (i14 & 255) ? i15 : i14;
 i17 = HEAP8[i1 + (i13 + -1) >> 0] | 0;
 i18 = (i17 & 255) > (i12 & 255) ? i17 : i12;
 i12 = (i17 & 255) < (i16 & 255) ? i17 : i16;
 i16 = HEAP8[i1 + i11 >> 0] | 0;
 i19 = ((i16 & 255) > (i18 & 255) ? i16 : i18) & 255;
 i18 = ((i16 & 255) < (i12 & 255) ? i16 : i12) & 255;
 if ((i19 - i18 | 0) < 30) {
  HEAP32[i3 >> 2] = -1;
  HEAP32[i4 >> 2] = 0;
  HEAPF64[i5 >> 3] = -1.0;
  i10 = -2;
  STACKTOP = i8;
  return i10 | 0;
 }
 i12 = (i19 + i18 | 0) >>> 1;
 i18 = i12 >>> 0 > (i14 & 255) >>> 0;
 i14 = i12 >>> 0 > (i15 & 255) >>> 0;
 i15 = i12 >>> 0 > (i17 & 255) >>> 0;
 i17 = i12 >>> 0 > (i16 & 255) >>> 0;
 if (i18) if (i14) {
  i16 = i15 & i17;
  i19 = i16 & i18;
  if (i19 & i14) i20 = 9; else i21 = i19 ? 3 : i16 ? 2 : i15 & 1;
 } else i20 = 78; else if (i14) if (i15) {
  i16 = i17 & i18;
  if (i16 & i14) i20 = 9; else i21 = i16 ? 3 : i17 ? 2 : 1;
 } else i20 = 81; else i20 = 78;
 if ((i20 | 0) == 78) if (i15) if (i17 ? !(i18 & i14) : 0) i21 = i18 ? 3 : 2; else i20 = 9; else i20 = 81;
 if ((i20 | 0) == 81) if (i14 | i17 & i18 ^ 1) i20 = 9; else i21 = 3;
 if ((i20 | 0) == 9) {
  HEAP32[i3 >> 2] = -1;
  HEAP32[i4 >> 2] = 0;
  HEAPF64[i5 >> 3] = -1.0;
  i10 = -3;
  STACKTOP = i8;
  return i10 | 0;
 }
 HEAP32[i4 >> 2] = i21;
 if (!i13) {
  i22 = 255;
  i23 = i21;
 } else {
  i21 = 255;
  i20 = 0;
  do {
   i18 = i1 + i20 | 0;
   i17 = HEAPU8[i18 >> 0] | 0;
   i14 = i17 - i12 | 0;
   i15 = (i14 | 0) < 0 ? 0 - i14 | 0 : i14;
   i21 = (i15 | 0) < (i21 | 0) ? i15 : i21;
   HEAP8[i18 >> 0] = i12 >>> 0 > i17 >>> 0 & 1;
   i20 = i20 + 1 | 0;
  } while ((i20 | 0) != (i13 | 0));
  i22 = i21;
  i23 = HEAP32[i4 >> 2] | 0;
 }
 switch (i23 | 0) {
 case 0:
  {
   if ((i2 | 0) > 0) {
    i23 = 0;
    i4 = 0;
    i21 = 0;
    while (1) {
     i13 = (i23 | 0) == (i11 | 0);
     i20 = Math_imul(i23, i2) | 0;
     i12 = 0;
     i17 = i4;
     i18 = i21;
     while (1) {
      if ((i12 | i23 | 0) != 0 ? !(i13 & ((i12 | 0) == 0 | (i12 | 0) == (i11 | 0))) : 0) {
       i15 = _bitshift64Shl(i17 | 0, i18 | 0, 1) | 0;
       i14 = getTempRet0() | 0;
       i24 = i15 | (HEAP8[i1 + (i12 + i20) >> 0] | 0) != 0;
       i25 = i14;
      } else {
       i24 = i17;
       i25 = i18;
      }
      i12 = i12 + 1 | 0;
      if ((i12 | 0) == (i2 | 0)) break; else {
       i17 = i24;
       i18 = i25;
      }
     }
     i23 = i23 + 1 | 0;
     if ((i23 | 0) == (i2 | 0)) {
      i26 = i24;
      i27 = i25;
      break;
     } else {
      i4 = i24;
      i21 = i25;
     }
    }
   } else {
    i26 = 0;
    i27 = 0;
   }
   break;
  }
 case 1:
  {
   if ((i2 | 0) > 0) {
    i25 = 0;
    i21 = 0;
    i24 = 0;
    while (1) {
     i4 = (i25 | 0) == (i11 | 0);
     L47 : do if (!i25) if (i4) {
      i23 = i11;
      i18 = i21;
      i17 = i24;
      while (1) {
       if ((i23 | 0) == (i11 | 0) | (i23 | 0) == 0) {
        i28 = i18;
        i29 = i17;
       } else {
        i12 = _bitshift64Shl(i18 | 0, i17 | 0, 1) | 0;
        i20 = getTempRet0() | 0;
        i13 = i1 + (Math_imul(i23, i2) | 0) | 0;
        i28 = i12 | (HEAP8[i13 >> 0] | 0) != 0;
        i29 = i20;
       }
       if ((i23 | 0) > 0) {
        i23 = i23 + -1 | 0;
        i18 = i28;
        i17 = i29;
       } else {
        i30 = i28;
        i31 = i29;
        break;
       }
      }
     } else {
      i17 = i11;
      i18 = i21;
      i23 = i24;
      while (1) {
       if ((i17 | 0) == (i11 | 0)) {
        i32 = i18;
        i33 = i23;
       } else {
        i20 = _bitshift64Shl(i18 | 0, i23 | 0, 1) | 0;
        i13 = getTempRet0() | 0;
        i12 = i1 + (Math_imul(i17, i2) | 0) | 0;
        i32 = i20 | (HEAP8[i12 >> 0] | 0) != 0;
        i33 = i13;
       }
       if ((i17 | 0) > 0) {
        i17 = i17 + -1 | 0;
        i18 = i32;
        i23 = i33;
       } else {
        i30 = i32;
        i31 = i33;
        break;
       }
      }
     } else {
      if (!i4) {
       i23 = i11;
       i18 = i21;
       i17 = i24;
       while (1) {
        i13 = _bitshift64Shl(i18 | 0, i17 | 0, 1) | 0;
        i12 = getTempRet0() | 0;
        i20 = i1 + ((Math_imul(i23, i2) | 0) + i25) | 0;
        i14 = i13 | (HEAP8[i20 >> 0] | 0) != 0;
        if ((i23 | 0) > 0) {
         i23 = i23 + -1 | 0;
         i18 = i14;
         i17 = i12;
        } else {
         i30 = i14;
         i31 = i12;
         break L47;
        }
       }
      }
      i17 = i11;
      i18 = i21;
      i23 = i24;
      while (1) {
       if ((i17 | 0) == (i11 | 0) | (i17 | 0) == 0) {
        i34 = i18;
        i35 = i23;
       } else {
        i12 = _bitshift64Shl(i18 | 0, i23 | 0, 1) | 0;
        i14 = getTempRet0() | 0;
        i20 = i1 + ((Math_imul(i17, i2) | 0) + i11) | 0;
        i34 = i12 | (HEAP8[i20 >> 0] | 0) != 0;
        i35 = i14;
       }
       if ((i17 | 0) > 0) {
        i17 = i17 + -1 | 0;
        i18 = i34;
        i23 = i35;
       } else {
        i30 = i34;
        i31 = i35;
        break;
       }
      }
     } while (0);
     i25 = i25 + 1 | 0;
     if ((i25 | 0) == (i2 | 0)) {
      i26 = i30;
      i27 = i31;
      break;
     } else {
      i21 = i30;
      i24 = i31;
     }
    }
   } else {
    i26 = 0;
    i27 = 0;
   }
   break;
  }
 case 2:
  {
   if ((i2 | 0) > 0) {
    i31 = i11;
    i24 = 0;
    i30 = 0;
    while (1) {
     i21 = (i31 | 0) == (i11 | 0) | (i31 | 0) == 0;
     i25 = Math_imul(i31, i2) | 0;
     i35 = i11;
     i34 = i24;
     i33 = i30;
     while (1) {
      if (i21 & (i35 | 0) == (i11 | 0) | (i35 | i31 | 0) == 0) {
       i36 = i34;
       i37 = i33;
      } else {
       i32 = _bitshift64Shl(i34 | 0, i33 | 0, 1) | 0;
       i29 = getTempRet0() | 0;
       i36 = i32 | (HEAP8[i1 + (i35 + i25) >> 0] | 0) != 0;
       i37 = i29;
      }
      if ((i35 | 0) > 0) {
       i35 = i35 + -1 | 0;
       i34 = i36;
       i33 = i37;
      } else break;
     }
     if ((i31 | 0) > 0) {
      i31 = i31 + -1 | 0;
      i24 = i36;
      i30 = i37;
     } else {
      i26 = i36;
      i27 = i37;
      break;
     }
    }
   } else {
    i26 = 0;
    i27 = 0;
   }
   break;
  }
 case 3:
  {
   if ((i2 | 0) > 0) {
    i37 = i11;
    i36 = 0;
    i30 = 0;
    while (1) {
     i24 = (i37 | 0) == (i11 | 0);
     if (!i37) {
      i31 = 0;
      i33 = i36;
      i34 = i30;
      while (1) {
       if ((i31 | 0) == 0 | (i31 | 0) == (i11 | 0)) {
        i38 = i33;
        i39 = i34;
       } else {
        i35 = _bitshift64Shl(i33 | 0, i34 | 0, 1) | 0;
        i25 = getTempRet0() | 0;
        i21 = i1 + (Math_imul(i31, i2) | 0) | 0;
        i38 = i35 | (HEAP8[i21 >> 0] | 0) != 0;
        i39 = i25;
       }
       i31 = i31 + 1 | 0;
       if ((i31 | 0) == (i2 | 0)) {
        i40 = i38;
        i41 = i39;
        break;
       } else {
        i33 = i38;
        i34 = i39;
       }
      }
     } else {
      i34 = 0;
      i33 = i36;
      i31 = i30;
      while (1) {
       if (i24 & (i34 | 0) == 0 | (i34 | i37 | 0) == 0) {
        i42 = i33;
        i43 = i31;
       } else {
        i25 = _bitshift64Shl(i33 | 0, i31 | 0, 1) | 0;
        i21 = getTempRet0() | 0;
        i35 = i1 + ((Math_imul(i34, i2) | 0) + i37) | 0;
        i42 = i25 | (HEAP8[i35 >> 0] | 0) != 0;
        i43 = i21;
       }
       i34 = i34 + 1 | 0;
       if ((i34 | 0) == (i2 | 0)) {
        i40 = i42;
        i41 = i43;
        break;
       } else {
        i33 = i42;
        i31 = i43;
       }
      }
     }
     if ((i37 | 0) > 0) {
      i37 = i37 + -1 | 0;
      i36 = i40;
      i30 = i41;
     } else {
      i26 = i40;
      i27 = i41;
      break;
     }
    }
   } else {
    i26 = 0;
    i27 = 0;
   }
   break;
  }
 default:
  {
   i26 = 0;
   i27 = 0;
  }
 }
 HEAPF64[i5 >> 3] = (i22 | 0) > 30 ? 1.0 : +(i22 | 0) / 30.0;
 L103 : do switch (i6 | 0) {
 case 259:
  {
   i22 = HEAP8[240 + i26 >> 0] | 0;
   i41 = i22 << 24 >> 24;
   i40 = i9;
   HEAP32[i40 >> 2] = i41;
   HEAP32[i40 + 4 >> 2] = ((i41 | 0) < 0) << 31 >> 31;
   if (i22 << 24 >> 24 < 0) {
    HEAP32[i3 >> 2] = -1;
    HEAPF64[i5 >> 3] = -1.0;
    i10 = -4;
    STACKTOP = i8;
    return i10 | 0;
   }
   break;
  }
 case 515:
  {
   i22 = HEAP8[112 + i26 >> 0] | 0;
   i41 = i22 << 24 >> 24;
   i40 = i9;
   HEAP32[i40 >> 2] = i41;
   HEAP32[i40 + 4 >> 2] = ((i41 | 0) < 0) << 31 >> 31;
   if (i7 | 0) HEAP32[i7 >> 2] = HEAPU8[176 + i26 >> 0];
   if (i22 << 24 >> 24 < 0) {
    HEAP32[i3 >> 2] = -1;
    HEAPF64[i5 >> 3] = -1.0;
    i10 = -4;
    STACKTOP = i8;
    return i10 | 0;
   }
   break;
  }
 case 772:
 case 1028:
 case 1029:
 case 1285:
  {
   i22 = _decode_bch(i6, i26, i27, 0, i9) | 0;
   if ((i22 | 0) < 0) {
    HEAP32[i3 >> 2] = -1;
    HEAPF64[i5 >> 3] = -1.0;
    i10 = -4;
    STACKTOP = i8;
    return i10 | 0;
   } else {
    if (!((i7 | 0) != 0 & (i22 | 0) != 0)) break L103;
    HEAP32[i7 >> 2] = i22;
    break L103;
   }
   break;
  }
 default:
  {
   i22 = i9;
   HEAP32[i22 >> 2] = i26;
   HEAP32[i22 + 4 >> 2] = i27;
  }
 } while (0);
 HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
 i10 = 0;
 STACKTOP = i8;
 return i10 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i5 = i4 + 56 | 0;
 i6 = i4 + 40 | 0;
 i7 = i4 + 28 | 0;
 i8 = i4 + 12 | 0;
 i9 = i4;
 i10 = i4 + 24 | 0;
 L1 : do if ((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 85 : 0) {
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 116:
   {
    HEAP32[i6 >> 2] = 0;
    HEAP32[i6 + 4 >> 2] = 0;
    HEAP32[i6 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i6, 51046, __ZNSt3__211char_traitsIcE6lengthEPKc(51046) | 0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
    i11 = i3 + 4 | 0;
    i12 = HEAP32[i11 >> 2] | 0;
    if (i12 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i12, i5);
     HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    i12 = i1 + 2 | 0;
    if ((i12 | 0) == (i2 | 0)) {
     i13 = HEAP32[i11 >> 2] | 0;
     i14 = 0;
     while (1) {
      if ((i14 | 0) == -1) break;
      i15 = i14 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13 + (i15 * 24 | 0) | 0);
      i14 = i15;
     }
     HEAP32[i11 >> 2] = i13 + -24;
     i16 = i1;
     break L1;
    }
    if (((HEAP8[i12 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
     i14 = i1 + 3 | 0;
     while (1) {
      if ((i14 | 0) == (i2 | 0)) {
       i17 = i2;
       break;
      }
      if (((HEAP8[i14 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
       i17 = i14;
       break;
      }
      i14 = i14 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_((HEAP32[i11 >> 2] | 0) + -24 | 0, i12, i17);
     i18 = i17;
    } else i18 = i12;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[i11 >> 2] | 0) + -24 | 0, 39);
    if ((i18 | 0) != (i2 | 0) ? (HEAP8[i18 >> 0] | 0) == 95 : 0) {
     i16 = i18 + 1 | 0;
     break L1;
    }
    i14 = HEAP32[i11 >> 2] | 0;
    i13 = 0;
    while (1) {
     if ((i13 | 0) == -1) break;
     i15 = i13 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14 + (i15 * 24 | 0) | 0);
     i13 = i15;
    }
    HEAP32[i11 >> 2] = i14 + -24;
    i16 = i1;
    break L1;
    break;
   }
  case 108:
   break;
  default:
   {
    i16 = i1;
    break L1;
   }
  }
  HEAP32[i7 >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  HEAP32[i7 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i7, 51055, __ZNSt3__211char_traitsIcE6lengthEPKc(51055) | 0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i7);
  i13 = i3 + 4 | 0;
  i12 = HEAP32[i13 >> 2] | 0;
  if (i12 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i12, i5);
   HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  i12 = i1 + 2 | 0;
  do if ((HEAP8[i12 >> 0] | 0) != 118) {
   i15 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
   if ((i15 | 0) == (i12 | 0)) {
    i19 = HEAP32[i13 >> 2] | 0;
    i20 = 0;
    while (1) {
     if ((i20 | 0) == -1) break;
     i21 = i20 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i19 + (i21 * 24 | 0) | 0);
     i20 = i21;
    }
    HEAP32[i13 >> 2] = i19 + -24;
    i16 = i1;
    break L1;
   }
   i20 = HEAP32[i13 >> 2] | 0;
   if (((i20 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
    i16 = i1;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i20 + -24 | 0);
   i20 = HEAP32[i13 >> 2] | 0;
   i21 = 0;
   while (1) {
    if ((i21 | 0) == -1) break;
    i22 = i21 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20 + (i22 * 24 | 0) | 0);
    i21 = i22;
   }
   HEAP32[i13 >> 2] = i20 + -24;
   i21 = i8 + 11 | 0;
   i19 = HEAP8[i21 >> 0] | 0;
   i22 = i19 << 24 >> 24 < 0;
   i23 = i8 + 4 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i20 + -48 | 0, i22 ? HEAP32[i8 >> 2] | 0 : i8, i22 ? HEAP32[i23 >> 2] | 0 : i19 & 255) | 0;
   i19 = i15;
   while (1) {
    i22 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i19, i2, i3) | 0;
    if ((i22 | 0) == (i19 | 0)) {
     i24 = 54;
     break;
    }
    i25 = HEAP32[i13 >> 2] | 0;
    if (((i25 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i24 = 82;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, i25 + -24 | 0);
    if ((HEAP8[i21 >> 0] | 0) < 0) {
     i25 = HEAP32[i8 >> 2] | 0;
     HEAP8[i5 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i25, i5);
     HEAP32[i23 >> 2] = 0;
    } else {
     HEAP8[i5 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i5);
     HEAP8[i21 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i8);
    HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
    HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
    i25 = 0;
    while (1) {
     if ((i25 | 0) == 3) break;
     HEAP32[i9 + (i25 << 2) >> 2] = 0;
     i25 = i25 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    i25 = HEAP32[i13 >> 2] | 0;
    i26 = 0;
    while (1) {
     if ((i26 | 0) == -1) break;
     i27 = i26 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i25 + (i27 * 24 | 0) | 0);
     i26 = i27;
    }
    HEAP32[i13 >> 2] = i25 + -24;
    i26 = HEAP8[i21 >> 0] | 0;
    if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 >> 2] | 0 : i26 & 255) | 0) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i25 + -48 | 0, 50467) | 0;
     i26 = HEAP8[i21 >> 0] | 0;
     i27 = i26 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i13 >> 2] | 0) + -24 | 0, i27 ? HEAP32[i8 >> 2] | 0 : i8, i27 ? HEAP32[i23 >> 2] | 0 : i26 & 255) | 0;
    }
    i19 = i22;
   }
   if ((i24 | 0) == 54) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i13 >> 2] | 0) + -24 | 0, 50243) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    i28 = i19;
    break;
   } else if ((i24 | 0) == 82) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    i16 = i1;
    break L1;
   }
  } else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[i13 >> 2] | 0) + -24 | 0, 41);
   i28 = i1 + 3 | 0;
  } while (0);
  if ((i28 | 0) != (i2 | 0) ? (HEAP8[i28 >> 0] | 0) == 69 : 0) {
   i12 = i28 + 1 | 0;
   if ((i12 | 0) == (i2 | 0)) {
    i14 = HEAP32[i13 >> 2] | 0;
    i11 = 0;
    while (1) {
     if ((i11 | 0) == -1) break;
     i23 = i11 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14 + (i23 * 24 | 0) | 0);
     i11 = i23;
    }
    HEAP32[i13 >> 2] = i14 + -24;
    i16 = i1;
    break;
   }
   if (((HEAP8[i12 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
    i11 = i28 + 2 | 0;
    while (1) {
     if ((i11 | 0) == (i2 | 0)) {
      i29 = i2;
      break;
     }
     if (((HEAP8[i11 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
      i29 = i11;
      break;
     }
     i11 = i11 + 1 | 0;
    }
    i11 = (HEAP32[i13 >> 2] | 0) + -24 | 0;
    if ((HEAP8[i11 + 11 >> 0] | 0) < 0) i30 = HEAP32[i11 >> 2] | 0; else i30 = i11;
    HEAP32[i10 >> 2] = i30 + 7;
    HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_(i11, i5, i12, i29) | 0;
    i31 = i29;
   } else i31 = i12;
   if ((i31 | 0) != (i2 | 0) ? (HEAP8[i31 >> 0] | 0) == 95 : 0) {
    i16 = i31 + 1 | 0;
    break;
   }
   i11 = HEAP32[i13 >> 2] | 0;
   i14 = 0;
   while (1) {
    if ((i14 | 0) == -1) break;
    i23 = i14 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11 + (i23 * 24 | 0) | 0);
    i14 = i23;
   }
   HEAP32[i13 >> 2] = i11 + -24;
   i16 = i1;
   break;
  }
  i14 = HEAP32[i13 >> 2] | 0;
  i12 = 0;
  while (1) {
   if ((i12 | 0) == -1) break;
   i23 = i12 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14 + (i23 * 24 | 0) | 0);
   i12 = i23;
  }
  HEAP32[i13 >> 2] = i14 + -24;
  i16 = i1;
 } else i16 = i1; while (0);
 STACKTOP = i4;
 return i16 | 0;
}

function _jpgread(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 800 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(800);
 i7 = i6 + 504 | 0;
 i8 = i6 + 496 | 0;
 i9 = i6 + 488 | 0;
 i10 = 4;
 i11 = _malloc(40) | 0;
 HEAP32[i11 >> 2] = 0;
 i12 = i6 + 24 | 0;
 i13 = i6 + 512 | 0;
 i14 = i6;
 _memset(i12 | 0, 0, 464) | 0;
 __THREW__ = 0;
 i15 = invoke_ii(63, i13 | 0) | 0;
 i16 = __THREW__;
 __THREW__ = 0;
 if ((i16 | 0) != 0 & (threwValue | 0) != 0) {
  i17 = _testSetjmp(HEAP32[i16 >> 2] | 0, i11 | 0, i10 | 0) | 0;
  if (!i17) _longjmp(i16 | 0, threwValue | 0);
  setTempRet0(threwValue | 0);
 } else i17 = -1;
 i16 = getTempRet0() | 0;
 if ((i17 | 0) != 1) {
  HEAP32[i12 >> 2] = i15;
  HEAP32[i13 >> 2] = 112;
  i11 = _saveSetjmp(i13 + 132 | 0, 1, i11 | 0, i10 | 0) | 0;
  i10 = getTempRet0() | 0;
  __THREW__ = 0;
  i13 = __THREW__;
  __THREW__ = 0;
  if ((i13 | 0) != 0 & (threwValue | 0) != 0) {
   i18 = _testSetjmp(HEAP32[i13 >> 2] | 0, i11 | 0, i10 | 0) | 0;
   if (!i18) _longjmp(i13 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i18 = -1;
  i13 = getTempRet0() | 0;
  if ((i18 | 0) == 1) i19 = i13; else i19 = 0;
 } else i19 = i16;
 L4 : while (1) {
  if (i19 | 0) {
   __THREW__ = 0;
   invoke_vi(113, i12 | 0);
   i16 = __THREW__;
   __THREW__ = 0;
   if ((i16 | 0) != 0 & (threwValue | 0) != 0) {
    i20 = _testSetjmp(HEAP32[i16 >> 2] | 0, i11 | 0, i10 | 0) | 0;
    if (!i20) _longjmp(i16 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i20 = -1;
   i16 = getTempRet0() | 0;
   if ((i20 | 0) == 1) {
    i19 = i16;
    continue;
   }
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 19585, i9 | 0);
   i16 = __THREW__;
   __THREW__ = 0;
   if ((i16 | 0) != 0 & (threwValue | 0) != 0) {
    i21 = _testSetjmp(HEAP32[i16 >> 2] | 0, i11 | 0, i10 | 0) | 0;
    if (!i21) _longjmp(i16 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i21 = -1;
   i16 = getTempRet0() | 0;
   if ((i21 | 0) == 1) {
    i19 = i16;
    continue;
   } else {
    i22 = 7;
    break;
   }
  }
  __THREW__ = 0;
  invoke_viii(1, i12 | 0, 62, 464);
  i16 = __THREW__;
  __THREW__ = 0;
  if ((i16 | 0) != 0 & (threwValue | 0) != 0) {
   i23 = _testSetjmp(HEAP32[i16 >> 2] | 0, i11 | 0, i10 | 0) | 0;
   if (!i23) _longjmp(i16 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i23 = -1;
  i16 = getTempRet0() | 0;
  if ((i23 | 0) == 1) {
   i19 = i16;
   continue;
  }
  __THREW__ = 0;
  invoke_vii(39, i12 | 0, i1 | 0);
  i16 = __THREW__;
  __THREW__ = 0;
  if ((i16 | 0) != 0 & (threwValue | 0) != 0) {
   i24 = _testSetjmp(HEAP32[i16 >> 2] | 0, i11 | 0, i10 | 0) | 0;
   if (!i24) _longjmp(i16 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i24 = -1;
  i16 = getTempRet0() | 0;
  if ((i24 | 0) == 1) {
   i19 = i16;
   continue;
  }
  __THREW__ = 0;
  i16 = invoke_iii(19, i12 | 0, 1) | 0;
  i13 = __THREW__;
  __THREW__ = 0;
  if ((i13 | 0) != 0 & (threwValue | 0) != 0) {
   i25 = _testSetjmp(HEAP32[i13 >> 2] | 0, i11 | 0, i10 | 0) | 0;
   if (!i25) _longjmp(i13 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i25 = -1;
  i13 = getTempRet0() | 0;
  if ((i25 | 0) == 1) {
   i19 = i13;
   continue;
  }
  if ((i16 | 0) != 1) {
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 19611, i8 | 0);
   i16 = __THREW__;
   __THREW__ = 0;
   if ((i16 | 0) != 0 & (threwValue | 0) != 0) {
    i26 = _testSetjmp(HEAP32[i16 >> 2] | 0, i11 | 0, i10 | 0) | 0;
    if (!i26) _longjmp(i16 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i26 = -1;
   i16 = getTempRet0() | 0;
   if ((i26 | 0) == 1) {
    i19 = i16;
    continue;
   }
   __THREW__ = 0;
   invoke_vi(113, i12 | 0);
   i16 = __THREW__;
   __THREW__ = 0;
   if ((i16 | 0) != 0 & (threwValue | 0) != 0) {
    i27 = _testSetjmp(HEAP32[i16 >> 2] | 0, i11 | 0, i10 | 0) | 0;
    if (!i27) _longjmp(i16 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i27 = -1;
   i16 = getTempRet0() | 0;
   if ((i27 | 0) == 1) {
    i19 = i16;
    continue;
   } else {
    i22 = 14;
    break;
   }
  }
  __THREW__ = 0;
  invoke_ii(64, i12 | 0) | 0;
  i16 = __THREW__;
  __THREW__ = 0;
  if ((i16 | 0) != 0 & (threwValue | 0) != 0) {
   i28 = _testSetjmp(HEAP32[i16 >> 2] | 0, i11 | 0, i10 | 0) | 0;
   if (!i28) _longjmp(i16 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i28 = -1;
  i16 = getTempRet0() | 0;
  if ((i28 | 0) == 1) {
   i19 = i16;
   continue;
  }
  i29 = i12 + 36 | 0;
  i30 = i12 + 28 | 0;
  i16 = Math_imul(HEAP32[i30 >> 2] | 0, HEAP32[i29 >> 2] | 0) | 0;
  i31 = i12 + 32 | 0;
  i13 = Math_imul(i16, HEAP32[i31 >> 2] | 0) | 0;
  __THREW__ = 0;
  i32 = invoke_ii(65, i13 | 0) | 0;
  i13 = __THREW__;
  __THREW__ = 0;
  if ((i13 | 0) != 0 & (threwValue | 0) != 0) {
   i33 = _testSetjmp(HEAP32[i13 >> 2] | 0, i11 | 0, i10 | 0) | 0;
   if (!i33) _longjmp(i13 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i33 = -1;
  i13 = getTempRet0() | 0;
  if ((i33 | 0) == 1) {
   i19 = i13;
   continue;
  }
  if (!i32) {
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 20510, i7 | 0);
   i13 = __THREW__;
   __THREW__ = 0;
   if ((i13 | 0) != 0 & (threwValue | 0) != 0) {
    i34 = _testSetjmp(HEAP32[i13 >> 2] | 0, i11 | 0, i10 | 0) | 0;
    if (!i34) _longjmp(i13 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i34 = -1;
   i13 = getTempRet0() | 0;
   if ((i34 | 0) == 1) {
    i19 = i13;
    continue;
   }
   __THREW__ = 0;
   invoke_vi(113, i12 | 0);
   i13 = __THREW__;
   __THREW__ = 0;
   if ((i13 | 0) != 0 & (threwValue | 0) != 0) {
    i35 = _testSetjmp(HEAP32[i13 >> 2] | 0, i11 | 0, i10 | 0) | 0;
    if (!i35) _longjmp(i13 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else i35 = -1;
   i13 = getTempRet0() | 0;
   if ((i35 | 0) == 1) {
    i19 = i13;
    continue;
   } else {
    i22 = 20;
    break;
   }
  }
  i13 = i12 + 140 | 0;
  i18 = i12 + 116 | 0;
  if ((HEAP32[i13 >> 2] | 0) >>> 0 < (HEAP32[i18 >> 2] | 0) >>> 0) {
   i15 = i14 + 4 | 0;
   i17 = i14 + 8 | 0;
   i36 = i14 + 12 | 0;
   i37 = i14 + 16 | 0;
   i38 = 0;
   while (1) {
    i39 = i32 + (Math_imul(i38, i16) | 0) | 0;
    HEAP32[i14 >> 2] = i39;
    i39 = i32 + (Math_imul(i38 + 1 | 0, i16) | 0) | 0;
    HEAP32[i15 >> 2] = i39;
    i39 = i32 + (Math_imul(i38 + 2 | 0, i16) | 0) | 0;
    HEAP32[i17 >> 2] = i39;
    i39 = i32 + (Math_imul(i38 + 3 | 0, i16) | 0) | 0;
    HEAP32[i36 >> 2] = i39;
    i39 = i32 + (Math_imul(i38 + 4 | 0, i16) | 0) | 0;
    HEAP32[i37 >> 2] = i39;
    __THREW__ = 0;
    i39 = invoke_iiii(26, i12 | 0, i14 | 0, 5) | 0;
    i40 = __THREW__;
    __THREW__ = 0;
    if ((i40 | 0) != 0 & (threwValue | 0) != 0) {
     i41 = _testSetjmp(HEAP32[i40 >> 2] | 0, i11 | 0, i10 | 0) | 0;
     if (!i41) _longjmp(i40 | 0, threwValue | 0);
     setTempRet0(threwValue | 0);
    } else i41 = -1;
    i40 = getTempRet0() | 0;
    if ((i41 | 0) == 1) {
     i19 = i40;
     continue L4;
    }
    if ((HEAP32[i13 >> 2] | 0) >>> 0 < (HEAP32[i18 >> 2] | 0) >>> 0) i38 = i39 + i38 | 0; else break;
   }
  }
  __THREW__ = 0;
  invoke_ii(66, i12 | 0) | 0;
  i38 = __THREW__;
  __THREW__ = 0;
  if ((i38 | 0) != 0 & (threwValue | 0) != 0) {
   i42 = _testSetjmp(HEAP32[i38 >> 2] | 0, i11 | 0, i10 | 0) | 0;
   if (!i42) _longjmp(i38 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i42 = -1;
  i38 = getTempRet0() | 0;
  if ((i42 | 0) == 1) {
   i19 = i38;
   continue;
  }
  __THREW__ = 0;
  invoke_vi(113, i12 | 0);
  i38 = __THREW__;
  __THREW__ = 0;
  if ((i38 | 0) != 0 & (threwValue | 0) != 0) {
   i43 = _testSetjmp(HEAP32[i38 >> 2] | 0, i11 | 0, i10 | 0) | 0;
   if (!i43) _longjmp(i38 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else i43 = -1;
  i19 = getTempRet0() | 0;
  if ((i43 | 0) != 1) {
   i22 = 27;
   break;
  }
 }
 if ((i22 | 0) == 7) {
  i44 = 0;
  _free(i11 | 0);
  STACKTOP = i6;
  return i44 | 0;
 } else if ((i22 | 0) == 14) {
  i44 = 0;
  _free(i11 | 0);
  STACKTOP = i6;
  return i44 | 0;
 } else if ((i22 | 0) == 20) {
  i44 = 0;
  _free(i11 | 0);
  STACKTOP = i6;
  return i44 | 0;
 } else if ((i22 | 0) == 27) {
  if (i2 | 0) HEAP32[i2 >> 2] = HEAP32[i30 >> 2];
  if (i3 | 0) HEAP32[i3 >> 2] = HEAP32[i31 >> 2];
  if (i4 | 0) HEAP32[i4 >> 2] = HEAP32[i29 >> 2];
  if (!i5) {
   i44 = i32;
   _free(i11 | 0);
   STACKTOP = i6;
   return i44 | 0;
  }
  i29 = HEAP8[i12 + 286 >> 0] | 0;
  switch (i29 << 24 >> 24) {
  case 1:
   {
    i4 = HEAP16[i12 + 288 >> 1] | 0;
    if (i4 << 16 >> 16 == (HEAP16[i12 + 290 >> 1] | 0)) {
     HEAPF32[i5 >> 2] = +(i4 & 65535);
     i44 = i32;
     _free(i11 | 0);
     STACKTOP = i6;
     return i44 | 0;
    }
    break;
   }
  case 2:
   {
    i4 = HEAP16[i12 + 288 >> 1] | 0;
    if (i4 << 16 >> 16 == (HEAP16[i12 + 290 >> 1] | 0)) {
     HEAPF32[i5 >> 2] = +(i4 & 65535) * 2.5399999618530273;
     i44 = i32;
     _free(i11 | 0);
     STACKTOP = i6;
     return i44 | 0;
    }
    break;
   }
  default:
   if (((i29 & 255) > 2 ? (HEAP16[i12 + 288 >> 1] | 0) == 0 : 0) ? (HEAP16[i12 + 290 >> 1] | 0) == 0 : 0) {
    HEAPF32[i5 >> 2] = +(i29 & 255);
    i44 = i32;
    _free(i11 | 0);
    STACKTOP = i6;
    return i44 | 0;
   }
  }
  HEAPF32[i5 >> 2] = 0.0;
  i44 = i32;
  _free(i11 | 0);
  STACKTOP = i6;
  return i44 | 0;
 }
 return 0;
}

function _arMultiReadConfigFile(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, d42 = 0.0, d43 = 0.0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, d54 = 0.0, d55 = 0.0, d56 = 0.0, d57 = 0.0, d58 = 0.0, d59 = 0.0, i60 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 2464 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2464);
 i4 = i3 + 2448 | 0;
 i5 = i3 + 2440 | 0;
 i6 = i3 + 2424 | 0;
 i7 = i3 + 2416 | 0;
 i8 = i3 + 2408 | 0;
 i9 = i3 + 2392 | 0;
 i10 = i3 + 2384 | 0;
 i11 = i3 + 2376 | 0;
 i12 = i3 + 2368 | 0;
 i13 = i3 + 2360 | 0;
 i14 = i3 + 2352 | 0;
 i15 = i3 + 2344 | 0;
 i16 = i3 + 2336 | 0;
 i17 = i3 + 2328 | 0;
 i18 = i3 + 2320 | 0;
 i19 = i3 + 2312 | 0;
 i20 = i3 + 2304 | 0;
 i21 = i3 + 2048 | 0;
 i22 = i3;
 i23 = i3 + 2460 | 0;
 i24 = i3 + 2456 | 0;
 i25 = i3 + 2452 | 0;
 i26 = _fopen(i1, 19682) | 0;
 if (!i26) {
  HEAP32[i20 >> 2] = i1;
  _arLog(0, 3, 18670, i20);
  i20 = ___errno_location() | 0;
  i27 = _strerror(HEAP32[i20 >> 2] | 0) | 0;
  HEAP32[i19 >> 2] = 58932;
  HEAP32[i19 + 4 >> 2] = i27;
  _arLog(0, 3, 19710, i19);
  i28 = 0;
  STACKTOP = i3;
  return i28 | 0;
 }
 L5 : do if (_fgets(i21, 256, i26) | 0) while (1) {
  i19 = _strlen(i21) | 0;
  L9 : do if (i19 | 0) {
   i27 = i19;
   while (1) {
    i27 = i27 + -1 | 0;
    i20 = i21 + i27 | 0;
    switch (HEAP8[i20 >> 0] | 0) {
    case 13:
    case 10:
     break;
    default:
     break L9;
    }
    HEAP8[i20 >> 0] = 0;
    if (!i27) break L9;
   }
  } while (0);
  switch (HEAP8[i21 >> 0] | 0) {
  case 0:
  case 35:
   break;
  default:
   break L5;
  }
  if (!(_fgets(i21, 256, i26) | 0)) break L5;
 } while (0);
 HEAP32[i18 >> 2] = i24;
 if ((_sscanf(i21, 19716, i18) | 0) != 1) {
  HEAP32[i17 >> 2] = i1;
  _arLog(0, 3, 18723, i17);
  _fclose(i26) | 0;
  i28 = 0;
  STACKTOP = i3;
  return i28 | 0;
 }
 i17 = HEAP32[i24 >> 2] | 0;
 i19 = _malloc(i17 * 320 | 0) | 0;
 if (!i19) {
  _arLog(0, 3, 20510, i16);
  _exit(1);
 }
 L24 : do if ((i17 | 0) > 0) {
  i16 = (i2 | 0) == 0;
  i27 = 0;
  i20 = 0;
  L26 : while (1) {
   L28 : do if (_fgets(i21, 256, i26) | 0) while (1) {
    i29 = _strlen(i21) | 0;
    L32 : do if (i29 | 0) {
     i30 = i29;
     while (1) {
      i30 = i30 + -1 | 0;
      i31 = i21 + i30 | 0;
      switch (HEAP8[i31 >> 0] | 0) {
      case 13:
      case 10:
       break;
      default:
       break L32;
      }
      HEAP8[i31 >> 0] = 0;
      if (!i30) break L32;
     }
    } while (0);
    switch (HEAP8[i21 >> 0] | 0) {
    case 0:
    case 35:
     break;
    default:
     break L28;
    }
    if (!(_fgets(i21, 256, i26) | 0)) break L28;
   } while (0);
   i29 = i19 + (i27 * 320 | 0) | 0;
   i30 = i19 + (i27 * 320 | 0) + 312 | 0;
   HEAP32[i15 >> 2] = i30;
   HEAP32[i15 + 4 >> 2] = i23;
   if ((_sscanf(i21, 18824, i15) | 0) != 1) {
    if (i16) {
     i32 = 27;
     break;
    }
    if (!(_arUtilGetDirectoryNameFromPath(i22, i1, 2048, 1) | 0)) {
     i32 = 29;
     break;
    }
    _strncat(i22, i21, 2047 - (_strlen(i22) | 0) | 0) | 0;
    i31 = _arPattLoad(i2, i22) | 0;
    HEAP32[i29 >> 2] = i31;
    if ((i31 | 0) < 0) {
     i32 = 31;
     break;
    } else {
     i33 = 1;
     i34 = 0;
    }
   } else {
    i31 = HEAP32[i30 >> 2] | 0;
    HEAP32[i29 >> 2] = (i31 & -32768 | 0) == 0 & 0 == 0 ? i31 & 32767 : 0;
    i33 = 2;
    i34 = 1;
   }
   HEAP32[i19 + (i27 * 320 | 0) + 4 >> 2] = i34;
   i31 = i20 | i33;
   L46 : do if (_fgets(i21, 256, i26) | 0) while (1) {
    i29 = _strlen(i21) | 0;
    L50 : do if (i29 | 0) {
     i30 = i29;
     while (1) {
      i30 = i30 + -1 | 0;
      i35 = i21 + i30 | 0;
      switch (HEAP8[i35 >> 0] | 0) {
      case 13:
      case 10:
       break;
      default:
       break L50;
      }
      HEAP8[i35 >> 0] = 0;
      if (!i30) break L50;
     }
    } while (0);
    switch (HEAP8[i21 >> 0] | 0) {
    case 0:
    case 35:
     break;
    default:
     break L46;
    }
    if (!(_fgets(i21, 256, i26) | 0)) break L46;
   } while (0);
   i29 = i19 + (i27 * 320 | 0) + 8 | 0;
   HEAP32[i11 >> 2] = i29;
   if ((_sscanf(i21, 19120, i11) | 0) != 1) {
    i32 = 42;
    break;
   }
   L59 : do if (_fgets(i21, 256, i26) | 0) while (1) {
    i30 = _strlen(i21) | 0;
    L63 : do if (i30 | 0) {
     i35 = i30;
     while (1) {
      i35 = i35 + -1 | 0;
      i36 = i21 + i35 | 0;
      switch (HEAP8[i36 >> 0] | 0) {
      case 13:
      case 10:
       break;
      default:
       break L63;
      }
      HEAP8[i36 >> 0] = 0;
      if (!i35) break L63;
     }
    } while (0);
    switch (HEAP8[i21 >> 0] | 0) {
    case 0:
    case 35:
     break;
    default:
     break L59;
    }
    if (!(_fgets(i21, 256, i26) | 0)) break L59;
   } while (0);
   i30 = i19 + (i27 * 320 | 0) + 16 | 0;
   i35 = i19 + (i27 * 320 | 0) + 24 | 0;
   i36 = i19 + (i27 * 320 | 0) + 40 | 0;
   HEAP32[i9 >> 2] = i30;
   HEAP32[i9 + 4 >> 2] = i35;
   HEAP32[i9 + 8 >> 2] = i19 + (i27 * 320 | 0) + 32;
   HEAP32[i9 + 12 >> 2] = i36;
   if ((_sscanf(i21, 19229, i9) | 0) == 4) i37 = 1; else {
    HEAP32[i8 >> 2] = i18;
    HEAP32[i8 + 4 >> 2] = i25;
    if ((_sscanf(i21, 19245, i8) | 0) != 2) {
     i32 = 55;
     break;
    }
    i37 = 0;
   }
   i38 = i37;
   do {
    L77 : do if (_fgets(i21, 256, i26) | 0) while (1) {
     i39 = _strlen(i21) | 0;
     L81 : do if (i39 | 0) {
      i40 = i39;
      while (1) {
       i40 = i40 + -1 | 0;
       i41 = i21 + i40 | 0;
       switch (HEAP8[i41 >> 0] | 0) {
       case 13:
       case 10:
        break;
       default:
        break L81;
       }
       HEAP8[i41 >> 0] = 0;
       if (!i40) break L81;
      }
     } while (0);
     switch (HEAP8[i21 >> 0] | 0) {
     case 0:
     case 35:
      break;
     default:
      break L77;
     }
     if (!(_fgets(i21, 256, i26) | 0)) break L77;
    } while (0);
    HEAP32[i6 >> 2] = i19 + (i27 * 320 | 0) + 16 + (i38 << 5);
    HEAP32[i6 + 4 >> 2] = i19 + (i27 * 320 | 0) + 16 + (i38 << 5) + 8;
    HEAP32[i6 + 8 >> 2] = i19 + (i27 * 320 | 0) + 16 + (i38 << 5) + 16;
    HEAP32[i6 + 12 >> 2] = i19 + (i27 * 320 | 0) + 16 + (i38 << 5) + 24;
    if ((_sscanf(i21, 19229, i6) | 0) != 4) {
     i32 = 65;
     break L26;
    }
    i38 = i38 + 1 | 0;
   } while (i38 >>> 0 < 3);
   _arUtilMatInv(i30, i19 + (i27 * 320 | 0) + 112 | 0) | 0;
   d42 = +HEAPF64[i29 >> 3];
   d43 = d42 * -.5;
   d44 = d42 * .5;
   d42 = +HEAPF64[i30 >> 3];
   d45 = d42 * d43;
   d46 = +HEAPF64[i35 >> 3];
   d47 = d46 * d44;
   d48 = +HEAPF64[i36 >> 3];
   HEAPF64[i19 + (i27 * 320 | 0) + 208 >> 3] = d48 + (d45 + d47);
   d49 = +HEAPF64[i19 + (i27 * 320 | 0) + 48 >> 3];
   d50 = d43 * d49;
   d51 = +HEAPF64[i19 + (i27 * 320 | 0) + 56 >> 3];
   d52 = d44 * d51;
   d53 = +HEAPF64[i19 + (i27 * 320 | 0) + 72 >> 3];
   HEAPF64[i19 + (i27 * 320 | 0) + 216 >> 3] = d53 + (d50 + d52);
   d54 = +HEAPF64[i19 + (i27 * 320 | 0) + 80 >> 3];
   d55 = d43 * d54;
   d56 = +HEAPF64[i19 + (i27 * 320 | 0) + 88 >> 3];
   d57 = d44 * d56;
   d58 = +HEAPF64[i19 + (i27 * 320 | 0) + 104 >> 3];
   HEAPF64[i19 + (i27 * 320 | 0) + 224 >> 3] = d58 + (d55 + d57);
   d59 = d42 * d44;
   HEAPF64[i19 + (i27 * 320 | 0) + 232 >> 3] = d48 + (d59 + d47);
   d47 = d44 * d49;
   HEAPF64[i19 + (i27 * 320 | 0) + 240 >> 3] = d53 + (d47 + d52);
   d52 = d44 * d54;
   HEAPF64[i19 + (i27 * 320 | 0) + 248 >> 3] = d58 + (d52 + d57);
   d57 = d46 * d43;
   HEAPF64[i19 + (i27 * 320 | 0) + 256 >> 3] = d48 + (d59 + d57);
   d59 = d43 * d51;
   HEAPF64[i19 + (i27 * 320 | 0) + 264 >> 3] = d53 + (d47 + d59);
   d47 = d43 * d56;
   HEAPF64[i19 + (i27 * 320 | 0) + 272 >> 3] = d58 + (d52 + d47);
   HEAPF64[i19 + (i27 * 320 | 0) + 280 >> 3] = d48 + (d45 + d57);
   HEAPF64[i19 + (i27 * 320 | 0) + 288 >> 3] = d53 + (d50 + d59);
   HEAPF64[i19 + (i27 * 320 | 0) + 296 >> 3] = d58 + (d55 + d47);
   i38 = i27 + 1 | 0;
   if ((i38 | 0) < (HEAP32[i24 >> 2] | 0)) {
    i27 = i38;
    i20 = i31;
   } else {
    i60 = i31;
    break L24;
   }
  }
  if ((i32 | 0) == 27) {
   HEAP32[i14 >> 2] = i1;
   HEAP32[i14 + 4 >> 2] = i21;
   _arLog(0, 3, 18831, i14);
  } else if ((i32 | 0) == 29) {
   HEAP32[i13 >> 2] = i1;
   _arLog(0, 3, 18959, i13);
  } else if ((i32 | 0) == 31) {
   HEAP32[i12 >> 2] = i1;
   HEAP32[i12 + 4 >> 2] = i22;
   _arLog(0, 3, 19043, i12);
  } else if ((i32 | 0) == 42) {
   HEAP32[i10 >> 2] = i1;
   HEAP32[i10 + 4 >> 2] = i27 + 1;
   _arLog(0, 3, 19124, i10);
  } else if ((i32 | 0) == 55) {
   HEAP32[i7 >> 2] = i1;
   HEAP32[i7 + 4 >> 2] = i27 + 1;
   _arLog(0, 3, 19251, i7);
  } else if ((i32 | 0) == 65) {
   HEAP32[i5 >> 2] = i1;
   HEAP32[i5 + 4 >> 2] = i27 + 1;
   _arLog(0, 3, 19251, i5);
  }
  _fclose(i26) | 0;
  _free(i19);
  i28 = 0;
  STACKTOP = i3;
  return i28 | 0;
 } else i60 = 0; while (0);
 _fclose(i26) | 0;
 i26 = _malloc(136) | 0;
 if (!i26) {
  _arLog(0, 3, 20510, i4);
  _exit(1);
 }
 HEAP32[i26 >> 2] = i19;
 HEAP32[i26 + 4 >> 2] = HEAP32[i24 >> 2];
 HEAP32[i26 + 128 >> 2] = 0;
 HEAP32[i26 + 104 >> 2] = 0;
 do if ((i60 & 3 | 0) != 3) {
  i24 = i26 + 108 | 0;
  if (!(i60 & 1)) {
   HEAP32[i24 >> 2] = 1;
   break;
  } else {
   HEAP32[i24 >> 2] = 0;
   break;
  }
 } else HEAP32[i26 + 108 >> 2] = 2; while (0);
 HEAPF64[i26 + 112 >> 3] = .5;
 HEAPF64[i26 + 120 >> 3] = .5;
 i28 = i26;
 STACKTOP = i3;
 return i28 | 0;
}

function _decode_mcu(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i3 + 16 | 0;
 i5 = i3;
 i6 = HEAP32[i1 + 444 >> 2] | 0;
 i7 = i1 + 276 | 0;
 if (HEAP32[i7 >> 2] | 0 ? (i8 = i6 + 36 | 0, (HEAP32[i8 >> 2] | 0) == 0) : 0) {
  i9 = i6 + 16 | 0;
  i10 = HEAP32[i1 + 440 >> 2] | 0;
  i11 = i10 + 24 | 0;
  HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + ((HEAP32[i9 >> 2] | 0) / 8 | 0);
  HEAP32[i9 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[i10 + 8 >> 2] & 127](i1) | 0)) {
   i12 = 0;
   STACKTOP = i3;
   return i12 | 0;
  }
  i10 = i1 + 328 | 0;
  if ((HEAP32[i10 >> 2] | 0) > 0) {
   i9 = 0;
   do {
    HEAP32[i6 + 20 + (i9 << 2) >> 2] = 0;
    i9 = i9 + 1 | 0;
   } while ((i9 | 0) < (HEAP32[i10 >> 2] | 0));
  }
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  if (!(HEAP32[i1 + 416 >> 2] | 0)) HEAP32[i6 + 8 >> 2] = 0;
 }
 if (!(HEAP32[i6 + 8 >> 2] | 0)) {
  HEAP32[i4 + 16 >> 2] = i1;
  i7 = i1 + 24 | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  i10 = HEAP32[i8 >> 2] | 0;
  HEAP32[i4 >> 2] = i10;
  i9 = HEAP32[i8 + 4 >> 2] | 0;
  i11 = i4 + 4 | 0;
  HEAP32[i11 >> 2] = i9;
  i13 = i6 + 12 | 0;
  i14 = HEAP32[i13 >> 2] | 0;
  i15 = i6 + 16 | 0;
  i16 = HEAP32[i15 >> 2] | 0;
  i17 = i6 + 20 | 0;
  HEAP32[i5 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
  HEAP32[i5 + 12 >> 2] = HEAP32[i17 + 12 >> 2];
  i18 = i1 + 356 | 0;
  do if ((HEAP32[i18 >> 2] | 0) > 0) {
   i19 = i4 + 8 | 0;
   i20 = i4 + 12 | 0;
   i21 = 0;
   i22 = i14;
   i23 = i16;
   L18 : while (1) {
    i24 = HEAP32[i2 + (i21 << 2) >> 2] | 0;
    i25 = HEAP32[i6 + 72 + (i21 << 2) >> 2] | 0;
    i26 = HEAP32[i6 + 112 + (i21 << 2) >> 2] | 0;
    if ((i23 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer(i4, i22, i23, 0) | 0)) {
      i12 = 0;
      i27 = 67;
      break;
     }
     i28 = HEAP32[i19 >> 2] | 0;
     i29 = HEAP32[i20 >> 2] | 0;
     if ((i29 | 0) < 8) {
      i30 = _jpeg_huff_decode(i4, i28, i29, i25, 1) | 0;
      i27 = 19;
     } else {
      i31 = i28;
      i32 = i29;
      i27 = 15;
     }
    } else {
     i31 = i22;
     i32 = i23;
     i27 = 15;
    }
    do if ((i27 | 0) == 15) {
     i27 = 0;
     i29 = i31 >> i32 + -8 & 255;
     i28 = HEAP32[i25 + 144 + (i29 << 2) >> 2] | 0;
     if (!i28) {
      i30 = _jpeg_huff_decode(i4, i31, i32, i25, 9) | 0;
      i27 = 19;
      break;
     } else {
      i33 = HEAPU8[i25 + 1168 + i29 >> 0] | 0;
      i34 = i31;
      i35 = i32 - i28 | 0;
      break;
     }
    } while (0);
    if ((i27 | 0) == 19) {
     i27 = 0;
     if ((i30 | 0) < 0) {
      i12 = 0;
      i27 = 67;
      break;
     }
     i33 = i30;
     i34 = HEAP32[i19 >> 2] | 0;
     i35 = HEAP32[i20 >> 2] | 0;
    }
    if (i33) {
     if ((i35 | 0) < (i33 | 0)) {
      if (!(_jpeg_fill_bit_buffer(i4, i34, i35, i33) | 0)) {
       i12 = 0;
       i27 = 67;
       break;
      }
      i36 = HEAP32[i19 >> 2] | 0;
      i37 = HEAP32[i20 >> 2] | 0;
     } else {
      i36 = i34;
      i37 = i35;
     }
     i25 = i37 - i33 | 0;
     i28 = i36 >> i25 & (1 << i33) + -1;
     if ((i28 | 0) < (HEAP32[2880 + (i33 << 2) >> 2] | 0)) {
      i38 = (HEAP32[2944 + (i33 << 2) >> 2] | 0) + i28 | 0;
      i39 = i36;
      i40 = i25;
     } else {
      i38 = i28;
      i39 = i36;
      i40 = i25;
     }
    } else {
     i38 = 0;
     i39 = i34;
     i40 = i35;
    }
    if (HEAP32[i6 + 152 + (i21 << 2) >> 2] | 0) {
     i25 = i5 + (HEAP32[i1 + 360 + (i21 << 2) >> 2] << 2) | 0;
     i28 = (HEAP32[i25 >> 2] | 0) + i38 | 0;
     HEAP32[i25 >> 2] = i28;
     HEAP16[i24 >> 1] = i28;
    }
    L44 : do if (!(HEAP32[i6 + 192 + (i21 << 2) >> 2] | 0)) {
     i28 = i40;
     i25 = i39;
     i29 = 1;
     while (1) {
      if ((i28 | 0) < 8) {
       if (!(_jpeg_fill_bit_buffer(i4, i25, i28, 0) | 0)) {
        i12 = 0;
        i27 = 67;
        break L18;
       }
       i41 = HEAP32[i19 >> 2] | 0;
       i42 = HEAP32[i20 >> 2] | 0;
       if ((i42 | 0) < 8) {
        i43 = 1;
        i44 = i41;
        i45 = i42;
        i27 = 54;
       } else {
        i46 = i41;
        i47 = i42;
        i27 = 52;
       }
      } else {
       i46 = i25;
       i47 = i28;
       i27 = 52;
      }
      if ((i27 | 0) == 52) {
       i27 = 0;
       i42 = i46 >> i47 + -8 & 255;
       i41 = HEAP32[i26 + 144 + (i42 << 2) >> 2] | 0;
       if (!i41) {
        i43 = 9;
        i44 = i46;
        i45 = i47;
        i27 = 54;
       } else {
        i48 = HEAPU8[i26 + 1168 + i42 >> 0] | 0;
        i49 = i46;
        i50 = i47 - i41 | 0;
       }
      }
      if ((i27 | 0) == 54) {
       i27 = 0;
       i41 = _jpeg_huff_decode(i4, i44, i45, i26, i43) | 0;
       if ((i41 | 0) < 0) {
        i12 = 0;
        i27 = 67;
        break L18;
       }
       i48 = i41;
       i49 = HEAP32[i19 >> 2] | 0;
       i50 = HEAP32[i20 >> 2] | 0;
      }
      i41 = i48 >>> 4;
      i42 = i48 & 15;
      if (!i42) if ((i41 | 0) == 15) {
       i51 = i49;
       i52 = i50;
       i53 = 15;
      } else {
       i54 = i49;
       i55 = i50;
       break L44;
      } else {
       if ((i50 | 0) < (i42 | 0)) {
        if (!(_jpeg_fill_bit_buffer(i4, i49, i50, i42) | 0)) {
         i12 = 0;
         i27 = 67;
         break L18;
        }
        i56 = HEAP32[i19 >> 2] | 0;
        i57 = HEAP32[i20 >> 2] | 0;
       } else {
        i56 = i49;
        i57 = i50;
       }
       i51 = i56;
       i52 = i57 - i42 | 0;
       i53 = i41;
      }
      i29 = i29 + 1 + i53 | 0;
      if ((i29 | 0) >= 64) {
       i54 = i51;
       i55 = i52;
       break;
      } else {
       i28 = i52;
       i25 = i51;
      }
     }
    } else {
     i25 = 1;
     i28 = i39;
     i29 = i40;
     while (1) {
      if ((i29 | 0) < 8) {
       if (!(_jpeg_fill_bit_buffer(i4, i28, i29, 0) | 0)) {
        i12 = 0;
        i27 = 67;
        break L18;
       }
       i41 = HEAP32[i19 >> 2] | 0;
       i42 = HEAP32[i20 >> 2] | 0;
       if ((i42 | 0) < 8) {
        i58 = 1;
        i59 = i41;
        i60 = i42;
        i27 = 37;
       } else {
        i61 = i41;
        i62 = i42;
        i27 = 35;
       }
      } else {
       i61 = i28;
       i62 = i29;
       i27 = 35;
      }
      if ((i27 | 0) == 35) {
       i27 = 0;
       i42 = i61 >> i62 + -8 & 255;
       i41 = HEAP32[i26 + 144 + (i42 << 2) >> 2] | 0;
       if (!i41) {
        i58 = 9;
        i59 = i61;
        i60 = i62;
        i27 = 37;
       } else {
        i63 = i61;
        i64 = i62 - i41 | 0;
        i65 = HEAPU8[i26 + 1168 + i42 >> 0] | 0;
       }
      }
      if ((i27 | 0) == 37) {
       i27 = 0;
       i42 = _jpeg_huff_decode(i4, i59, i60, i26, i58) | 0;
       if ((i42 | 0) < 0) {
        i12 = 0;
        i27 = 67;
        break L18;
       }
       i63 = HEAP32[i19 >> 2] | 0;
       i64 = HEAP32[i20 >> 2] | 0;
       i65 = i42;
      }
      i42 = i65 >>> 4;
      i41 = i65 & 15;
      if (!i41) {
       if ((i42 | 0) != 15) {
        i54 = i63;
        i55 = i64;
        break L44;
       }
       i66 = i25 + 15 | 0;
       i67 = i63;
       i68 = i64;
      } else {
       i69 = i42 + i25 | 0;
       if ((i64 | 0) < (i41 | 0)) {
        if (!(_jpeg_fill_bit_buffer(i4, i63, i64, i41) | 0)) {
         i12 = 0;
         i27 = 67;
         break L18;
        }
        i70 = HEAP32[i19 >> 2] | 0;
        i71 = HEAP32[i20 >> 2] | 0;
       } else {
        i70 = i63;
        i71 = i64;
       }
       i42 = i71 - i41 | 0;
       i72 = i70 >> i42 & (1 << i41) + -1;
       if ((i72 | 0) < (HEAP32[2880 + (i41 << 2) >> 2] | 0)) i73 = (HEAP32[2944 + (i41 << 2) >> 2] | 0) + i72 | 0; else i73 = i72;
       HEAP16[i24 + (HEAP32[2560 + (i69 << 2) >> 2] << 1) >> 1] = i73;
       i66 = i69;
       i67 = i70;
       i68 = i42;
      }
      if ((i66 | 0) < 63) {
       i25 = i66 + 1 | 0;
       i28 = i67;
       i29 = i68;
      } else {
       i54 = i67;
       i55 = i68;
       break;
      }
     }
    } while (0);
    i21 = i21 + 1 | 0;
    if ((i21 | 0) >= (HEAP32[i18 >> 2] | 0)) {
     i27 = 64;
     break;
    } else {
     i22 = i54;
     i23 = i55;
    }
   }
   if ((i27 | 0) == 64) {
    i74 = i54;
    i75 = i55;
    i76 = HEAP32[i7 >> 2] | 0;
    i77 = HEAP32[i4 >> 2] | 0;
    i78 = HEAP32[i11 >> 2] | 0;
    break;
   } else if ((i27 | 0) == 67) {
    STACKTOP = i3;
    return i12 | 0;
   }
  } else {
   i74 = i14;
   i75 = i16;
   i76 = i8;
   i77 = i10;
   i78 = i9;
  } while (0);
  HEAP32[i76 >> 2] = i77;
  HEAP32[i76 + 4 >> 2] = i78;
  HEAP32[i13 >> 2] = i74;
  HEAP32[i15 >> 2] = i75;
  HEAP32[i17 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  HEAP32[i17 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
 }
 i5 = i6 + 36 | 0;
 HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + -1;
 i12 = 1;
 STACKTOP = i3;
 return i12 | 0;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_8KeyframeILi96EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, d42 = 0.0, d43 = 0.0, i44 = 0, i45 = 0, i46 = 0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, i51 = 0, i52 = 0, i53 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i4 = i3 + 104 | 0;
 i5 = i3;
 i6 = i3 + 72 | 0;
 i7 = i3 + 40 | 0;
 i8 = i1 + 12 | 0;
 i9 = i1 + 16 | 0;
 HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
 i10 = i1 + 24 | 0;
 HEAP32[i10 >> 2] = -1;
 i11 = i2 + 8 | 0;
 i12 = i2 + 24 | 0;
 i13 = HEAP32[i1 + 80 >> 2] | 0;
 if (!i13) {
  i14 = 0;
  STACKTOP = i3;
  return i14 | 0;
 }
 i15 = i1 + 8 | 0;
 i16 = i1 + 636 | 0;
 i17 = i1 + 652 | 0;
 i18 = i1 + 636 | 0;
 i19 = i2 + 4 | 0;
 i20 = i4 + 4 | 0;
 i21 = i4 + 8 | 0;
 i22 = i1 + 788 | 0;
 i23 = i6 + 4 | 0;
 i24 = i6 + 8 | 0;
 i25 = i1 + 4 | 0;
 i26 = i5 + 24 | 0;
 i27 = i5 + 28 | 0;
 i28 = i5 + 32 | 0;
 i29 = i5 + 4 | 0;
 i30 = i5 + 8 | 0;
 i31 = i5 + 12 | 0;
 i32 = i5 + 16 | 0;
 i33 = i5 + 20 | 0;
 i34 = i1 + 28 | 0;
 i35 = i1 + 20 | 0;
 i36 = i13;
 do {
  __ZN6vision11ScopedTimerC2EPKc(i4, 29103);
  i13 = i36;
  i37 = i13 + 12 | 0;
  i38 = HEAP32[i37 >> 2] | 0;
  i39 = i38 + 8 | 0;
  if (!(HEAP8[i15 >> 0] | 0)) {
   i40 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_(i16, i11, i39) | 0;
   if (i40 >>> 0 < (HEAP32[i1 >> 2] | 0) >>> 0) i41 = 6; else i41 = 7;
  } else {
   i40 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_RKNS_28BinaryHierarchicalClusteringILi96EEE(i16, i11, i39, i38 + 36 | 0) | 0;
   if (i40 >>> 0 < (HEAP32[i1 >> 2] | 0) >>> 0) i41 = 6; else i41 = 7;
  }
  if ((i41 | 0) == 6) {
   i41 = 0;
   __ZN6vision11ScopedTimerD2Ev(i4);
  } else if ((i41 | 0) == 7 ? (i41 = 0, __ZN6vision11ScopedTimerD2Ev(i4), i40 = (HEAP32[i37 >> 2] | 0) + 24 | 0, __ZN6vision11ScopedTimerC2EPKc(i4, 29120), i38 = HEAP32[i37 >> 2] | 0, i39 = __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii(i17, i12, i40, i18, HEAP32[i2 >> 2] | 0, HEAP32[i19 >> 2] | 0, HEAP32[i38 >> 2] | 0, HEAP32[i38 + 4 >> 2] | 0) | 0, __ZN6vision11ScopedTimerD2Ev(i4), (i39 | 0) >= 0) : 0) {
   HEAP32[i4 >> 2] = 0;
   HEAP32[i20 >> 2] = 0;
   HEAP32[i21 >> 2] = 0;
   __ZN6vision11ScopedTimerC2EPKc(i5, 29137);
   __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if(i4, i17, i18, i39, 1.0);
   __ZN6vision11ScopedTimerD2Ev(i5);
   __ZN6vision11ScopedTimerC2EPKc(i6, 29160);
   i39 = HEAP32[i37 >> 2] | 0;
   i38 = __ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii(i5, i12, i40, i4, i22, HEAP32[i39 >> 2] | 0, HEAP32[i39 + 4 >> 2] | 0) | 0;
   __ZN6vision11ScopedTimerD2Ev(i6);
   if (i38) {
    HEAP32[i6 >> 2] = 0;
    HEAP32[i23 >> 2] = 0;
    HEAP32[i24 >> 2] = 0;
    __ZN6vision11ScopedTimerC2EPKc(i7, 29184);
    d42 = +HEAPF32[i25 >> 2];
    d43 = d42 * d42;
    __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i6, (HEAP32[i20 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) >> 3);
    i38 = HEAP32[i4 >> 2] | 0;
    if ((HEAP32[i20 >> 2] | 0) != (i38 | 0)) {
     i39 = 0;
     i44 = i38;
     do {
      i38 = i44;
      i45 = i38 + (i39 << 3) | 0;
      i46 = HEAP32[i38 + (i39 << 3) + 4 >> 2] | 0;
      i38 = HEAP32[i40 >> 2] | 0;
      d42 = +HEAPF32[i38 + (i46 * 20 | 0) >> 2];
      d47 = +HEAPF32[i38 + (i46 * 20 | 0) + 4 >> 2];
      d48 = +HEAPF32[i28 >> 2] + (d42 * +HEAPF32[i26 >> 2] + d47 * +HEAPF32[i27 >> 2]);
      i46 = HEAP32[i45 >> 2] | 0;
      i38 = HEAP32[i12 >> 2] | 0;
      d49 = (+HEAPF32[i30 >> 2] + (d42 * +HEAPF32[i5 >> 2] + d47 * +HEAPF32[i29 >> 2])) / d48 - +HEAPF32[i38 + (i46 * 20 | 0) >> 2];
      d50 = (+HEAPF32[i33 >> 2] + (d42 * +HEAPF32[i31 >> 2] + d47 * +HEAPF32[i32 >> 2])) / d48 - +HEAPF32[i38 + (i46 * 20 | 0) + 4 >> 2];
      do if (d49 * d49 + d50 * d50 <= d43) {
       i46 = HEAP32[i23 >> 2] | 0;
       if ((i46 | 0) == (HEAP32[i24 >> 2] | 0)) {
        __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i6, i45);
        break;
       } else {
        i38 = i45;
        i51 = HEAP32[i38 + 4 >> 2] | 0;
        i52 = i46;
        HEAP32[i52 >> 2] = HEAP32[i38 >> 2];
        HEAP32[i52 + 4 >> 2] = i51;
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + 8;
        break;
       }
      } while (0);
      i39 = i39 + 1 | 0;
      i44 = HEAP32[i4 >> 2] | 0;
     } while (i39 >>> 0 < (HEAP32[i20 >> 2] | 0) - i44 >> 3 >>> 0);
    }
    i44 = (HEAP32[i23 >> 2] | 0) - (HEAP32[i6 >> 2] | 0) >> 3 >>> 0 < (HEAP32[i1 >> 2] | 0) >>> 0;
    __ZN6vision11ScopedTimerD2Ev(i7);
    if (((!i44 ? (__ZN6vision11ScopedTimerC2EPKc(i7, 29201), i44 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_PKff(i16, i11, (HEAP32[i37 >> 2] | 0) + 8 | 0, i5, 10.0) | 0, i39 = i44 >>> 0 < (HEAP32[i1 >> 2] | 0) >>> 0, __ZN6vision11ScopedTimerD2Ev(i7), !i39) : 0) ? (__ZN6vision11ScopedTimerC2EPKc(i7, 29218), i39 = HEAP32[i37 >> 2] | 0, i44 = __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii(i17, i12, i40, i18, HEAP32[i2 >> 2] | 0, HEAP32[i19 >> 2] | 0, HEAP32[i39 >> 2] | 0, HEAP32[i39 + 4 >> 2] | 0) | 0, __ZN6vision11ScopedTimerD2Ev(i7), (i44 | 0) >= 0) : 0) ? (__ZN6vision11ScopedTimerC2EPKc(i7, 29235), __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if(i4, i17, i18, i44, 1.0), __ZN6vision11ScopedTimerD2Ev(i7), __ZN6vision11ScopedTimerC2EPKc(i7, 29258), i44 = HEAP32[i37 >> 2] | 0, i39 = __ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii(i5, i12, i40, i4, i22, HEAP32[i44 >> 2] | 0, HEAP32[i44 + 4 >> 2] | 0) | 0, __ZN6vision11ScopedTimerD2Ev(i7), i39) : 0) {
     HEAP32[i23 >> 2] = HEAP32[i6 >> 2];
     __ZN6vision11ScopedTimerC2EPKc(i7, 29282);
     d43 = +HEAPF32[i25 >> 2];
     d50 = d43 * d43;
     __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i6, (HEAP32[i20 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) >> 3);
     i39 = HEAP32[i4 >> 2] | 0;
     if ((HEAP32[i20 >> 2] | 0) != (i39 | 0)) {
      i44 = 0;
      i45 = i39;
      do {
       i39 = i45;
       i51 = i39 + (i44 << 3) | 0;
       i52 = HEAP32[i39 + (i44 << 3) + 4 >> 2] | 0;
       i39 = HEAP32[i40 >> 2] | 0;
       d43 = +HEAPF32[i39 + (i52 * 20 | 0) >> 2];
       d49 = +HEAPF32[i39 + (i52 * 20 | 0) + 4 >> 2];
       d48 = +HEAPF32[i28 >> 2] + (d43 * +HEAPF32[i26 >> 2] + d49 * +HEAPF32[i27 >> 2]);
       i52 = HEAP32[i51 >> 2] | 0;
       i39 = HEAP32[i12 >> 2] | 0;
       d47 = (+HEAPF32[i30 >> 2] + (d43 * +HEAPF32[i5 >> 2] + d49 * +HEAPF32[i29 >> 2])) / d48 - +HEAPF32[i39 + (i52 * 20 | 0) >> 2];
       d42 = (+HEAPF32[i33 >> 2] + (d43 * +HEAPF32[i31 >> 2] + d49 * +HEAPF32[i32 >> 2])) / d48 - +HEAPF32[i39 + (i52 * 20 | 0) + 4 >> 2];
       do if (d47 * d47 + d42 * d42 <= d50) {
        i52 = HEAP32[i23 >> 2] | 0;
        if ((i52 | 0) == (HEAP32[i24 >> 2] | 0)) {
         __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i6, i51);
         break;
        } else {
         i39 = i51;
         i38 = HEAP32[i39 + 4 >> 2] | 0;
         i46 = i52;
         HEAP32[i46 >> 2] = HEAP32[i39 >> 2];
         HEAP32[i46 + 4 >> 2] = i38;
         HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + 8;
         break;
        }
       } while (0);
       i44 = i44 + 1 | 0;
       i45 = HEAP32[i4 >> 2] | 0;
      } while (i44 >>> 0 < (HEAP32[i20 >> 2] | 0) - i45 >> 3 >>> 0);
     }
     __ZN6vision11ScopedTimerD2Ev(i7);
     i45 = HEAP32[i23 >> 2] | 0;
     i44 = HEAP32[i6 >> 2] | 0;
     i40 = i45 - i44 >> 3;
     if (i40 >>> 0 >= (HEAP32[i1 >> 2] | 0) >>> 0) {
      i37 = HEAP32[i9 >> 2] | 0;
      i51 = HEAP32[i8 >> 2] | 0;
      if (i40 >>> 0 > i37 - i51 >> 3 >>> 0) {
       i40 = i34;
       i38 = i5;
       i46 = i40 + 36 | 0;
       do {
        HEAP32[i40 >> 2] = HEAP32[i38 >> 2];
        i40 = i40 + 4 | 0;
        i38 = i38 + 4 | 0;
       } while ((i40 | 0) < (i46 | 0));
       HEAP32[i8 >> 2] = i44;
       HEAP32[i6 >> 2] = i51;
       HEAP32[i9 >> 2] = i45;
       HEAP32[i23 >> 2] = i37;
       i38 = HEAP32[i35 >> 2] | 0;
       HEAP32[i35 >> 2] = HEAP32[i24 >> 2];
       HEAP32[i24 >> 2] = i38;
       HEAP32[i10 >> 2] = HEAP32[i13 + 8 >> 2];
       i41 = 30;
      } else i41 = 30;
     } else i53 = i44;
    } else i41 = 30;
    if ((i41 | 0) == 30) {
     i41 = 0;
     i53 = HEAP32[i6 >> 2] | 0;
    }
    if (i53 | 0) {
     HEAP32[i23 >> 2] = i53;
     __ZdlPv(i53);
    }
   }
   i38 = HEAP32[i4 >> 2] | 0;
   if (i38 | 0) {
    HEAP32[i20 >> 2] = i38;
    __ZdlPv(i38);
   }
  }
  i36 = HEAP32[i36 >> 2] | 0;
 } while ((i36 | 0) != 0);
 i14 = (HEAP32[i10 >> 2] | 0) > -1;
 STACKTOP = i3;
 return i14 | 0;
}

function ___intscan(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0;
 L1 : do if (i2 >>> 0 > 36) {
  i6 = ___errno_location() | 0;
  HEAP32[i6 >> 2] = 22;
  i7 = 0;
  i8 = 0;
 } else {
  i6 = i1 + 4 | 0;
  i9 = i1 + 104 | 0;
  do {
   i10 = HEAP32[i6 >> 2] | 0;
   if (i10 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i10 + 1;
    i11 = HEAPU8[i10 >> 0] | 0;
   } else i11 = ___shgetc(i1) | 0;
  } while ((_isspace(i11) | 0) != 0);
  L11 : do switch (i11 | 0) {
  case 43:
  case 45:
   {
    i10 = ((i11 | 0) == 45) << 31 >> 31;
    i12 = HEAP32[i6 >> 2] | 0;
    if (i12 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
     HEAP32[i6 >> 2] = i12 + 1;
     i13 = i10;
     i14 = HEAPU8[i12 >> 0] | 0;
     break L11;
    } else {
     i13 = i10;
     i14 = ___shgetc(i1) | 0;
     break L11;
    }
    break;
   }
  default:
   {
    i13 = 0;
    i14 = i11;
   }
  } while (0);
  i10 = (i2 | 0) == 0;
  do if ((i2 | 16 | 0) == 16 & (i14 | 0) == 48) {
   i12 = HEAP32[i6 >> 2] | 0;
   if (i12 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i12 + 1;
    i15 = HEAPU8[i12 >> 0] | 0;
   } else i15 = ___shgetc(i1) | 0;
   if ((i15 | 32 | 0) != 120) if (i10) {
    i16 = i15;
    i17 = 8;
    i18 = 47;
    break;
   } else {
    i19 = i15;
    i20 = i2;
    i18 = 32;
    break;
   }
   i12 = HEAP32[i6 >> 2] | 0;
   if (i12 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i12 + 1;
    i21 = HEAPU8[i12 >> 0] | 0;
   } else i21 = ___shgetc(i1) | 0;
   if ((HEAPU8[3713 + i21 >> 0] | 0) > 15) {
    i12 = (HEAP32[i9 >> 2] | 0) == 0;
    if (!i12) HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
    if (!i3) {
     ___shlim(i1, 0, 0);
     i7 = 0;
     i8 = 0;
     break L1;
    }
    if (i12) {
     i7 = 0;
     i8 = 0;
     break L1;
    }
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
    i7 = 0;
    i8 = 0;
    break L1;
   } else {
    i16 = i21;
    i17 = 16;
    i18 = 47;
   }
  } else {
   i12 = i10 ? 10 : i2;
   if (i12 >>> 0 > (HEAPU8[3713 + i14 >> 0] | 0) >>> 0) {
    i19 = i14;
    i20 = i12;
    i18 = 32;
   } else {
    if (HEAP32[i9 >> 2] | 0) HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
    ___shlim(i1, 0, 0);
    i12 = ___errno_location() | 0;
    HEAP32[i12 >> 2] = 22;
    i7 = 0;
    i8 = 0;
    break L1;
   }
  } while (0);
  L43 : do if ((i18 | 0) == 32) if ((i20 | 0) == 10) {
   i10 = i19 + -48 | 0;
   if (i10 >>> 0 < 10) {
    i12 = 0;
    i22 = i10;
    do {
     i12 = (i12 * 10 | 0) + i22 | 0;
     i10 = HEAP32[i6 >> 2] | 0;
     if (i10 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
      HEAP32[i6 >> 2] = i10 + 1;
      i23 = HEAPU8[i10 >> 0] | 0;
     } else i23 = ___shgetc(i1) | 0;
     i22 = i23 + -48 | 0;
    } while (i22 >>> 0 < 10 & i12 >>> 0 < 429496729);
    if (i22 >>> 0 < 10) {
     i10 = i23;
     i24 = i12;
     i25 = 0;
     i26 = i22;
     while (1) {
      i27 = ___muldi3(i24 | 0, i25 | 0, 10, 0) | 0;
      i28 = getTempRet0() | 0;
      i29 = ((i26 | 0) < 0) << 31 >> 31;
      i30 = ~i29;
      if (i28 >>> 0 > i30 >>> 0 | (i28 | 0) == (i30 | 0) & i27 >>> 0 > ~i26 >>> 0) {
       i31 = 10;
       i32 = i10;
       i33 = i24;
       i34 = i25;
       i18 = 76;
       break L43;
      }
      i24 = _i64Add(i27 | 0, i28 | 0, i26 | 0, i29 | 0) | 0;
      i25 = getTempRet0() | 0;
      i29 = HEAP32[i6 >> 2] | 0;
      if (i29 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
       HEAP32[i6 >> 2] = i29 + 1;
       i35 = HEAPU8[i29 >> 0] | 0;
      } else i35 = ___shgetc(i1) | 0;
      i26 = i35 + -48 | 0;
      if (!(i26 >>> 0 < 10 & (i25 >>> 0 < 429496729 | (i25 | 0) == 429496729 & i24 >>> 0 < 2576980378))) break; else i10 = i35;
     }
     if (i26 >>> 0 > 9) {
      i36 = i13;
      i37 = i25;
      i38 = i24;
     } else {
      i31 = 10;
      i32 = i35;
      i33 = i24;
      i34 = i25;
      i18 = 76;
     }
    } else {
     i36 = i13;
     i37 = 0;
     i38 = i12;
    }
   } else {
    i36 = i13;
    i37 = 0;
    i38 = 0;
   }
  } else {
   i16 = i19;
   i17 = i20;
   i18 = 47;
  } while (0);
  L63 : do if ((i18 | 0) == 47) {
   if (!(i17 + -1 & i17)) {
    i10 = HEAP8[46666 + ((i17 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    i22 = HEAP8[3713 + i16 >> 0] | 0;
    i29 = i22 & 255;
    if (i17 >>> 0 > i29 >>> 0) {
     i28 = 0;
     i27 = i29;
     do {
      i28 = i27 | i28 << i10;
      i30 = HEAP32[i6 >> 2] | 0;
      if (i30 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
       HEAP32[i6 >> 2] = i30 + 1;
       i39 = HEAPU8[i30 >> 0] | 0;
      } else i39 = ___shgetc(i1) | 0;
      i40 = HEAP8[3713 + i39 >> 0] | 0;
      i27 = i40 & 255;
     } while (i28 >>> 0 < 134217728 & i17 >>> 0 > i27 >>> 0);
     i41 = i39;
     i42 = i27;
     i43 = 0;
     i44 = i28;
     i45 = i40;
    } else {
     i41 = i16;
     i42 = i29;
     i43 = 0;
     i44 = 0;
     i45 = i22;
    }
    i12 = _bitshift64Lshr(-1, -1, i10 | 0) | 0;
    i25 = getTempRet0() | 0;
    if (i17 >>> 0 <= i42 >>> 0 | (i25 >>> 0 < i43 >>> 0 | (i25 | 0) == (i43 | 0) & i12 >>> 0 < i44 >>> 0)) {
     i31 = i17;
     i32 = i41;
     i33 = i44;
     i34 = i43;
     i18 = 76;
     break;
    }
    i24 = i44;
    i26 = i43;
    i30 = i45;
    while (1) {
     i46 = _bitshift64Shl(i24 | 0, i26 | 0, i10 | 0) | 0;
     i47 = getTempRet0() | 0;
     i48 = i46 | i30 & 255;
     i46 = HEAP32[i6 >> 2] | 0;
     if (i46 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
      HEAP32[i6 >> 2] = i46 + 1;
      i49 = HEAPU8[i46 >> 0] | 0;
     } else i49 = ___shgetc(i1) | 0;
     i30 = HEAP8[3713 + i49 >> 0] | 0;
     if (i17 >>> 0 <= (i30 & 255) >>> 0 | (i47 >>> 0 > i25 >>> 0 | (i47 | 0) == (i25 | 0) & i48 >>> 0 > i12 >>> 0)) {
      i31 = i17;
      i32 = i49;
      i33 = i48;
      i34 = i47;
      i18 = 76;
      break L63;
     } else {
      i24 = i48;
      i26 = i47;
     }
    }
   }
   i26 = HEAP8[3713 + i16 >> 0] | 0;
   i24 = i26 & 255;
   if (i17 >>> 0 > i24 >>> 0) {
    i12 = 0;
    i25 = i24;
    do {
     i12 = i25 + (Math_imul(i12, i17) | 0) | 0;
     i30 = HEAP32[i6 >> 2] | 0;
     if (i30 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
      HEAP32[i6 >> 2] = i30 + 1;
      i50 = HEAPU8[i30 >> 0] | 0;
     } else i50 = ___shgetc(i1) | 0;
     i51 = HEAP8[3713 + i50 >> 0] | 0;
     i25 = i51 & 255;
    } while (i12 >>> 0 < 119304647 & i17 >>> 0 > i25 >>> 0);
    i52 = i50;
    i53 = i25;
    i54 = i51;
    i55 = i12;
    i56 = 0;
   } else {
    i52 = i16;
    i53 = i24;
    i54 = i26;
    i55 = 0;
    i56 = 0;
   }
   if (i17 >>> 0 > i53 >>> 0) {
    i30 = ___udivdi3(-1, -1, i17 | 0, 0) | 0;
    i10 = getTempRet0() | 0;
    i22 = i52;
    i29 = i56;
    i28 = i55;
    i27 = i54;
    while (1) {
     if (i29 >>> 0 > i10 >>> 0 | (i29 | 0) == (i10 | 0) & i28 >>> 0 > i30 >>> 0) {
      i31 = i17;
      i32 = i22;
      i33 = i28;
      i34 = i29;
      i18 = 76;
      break L63;
     }
     i47 = ___muldi3(i28 | 0, i29 | 0, i17 | 0, 0) | 0;
     i48 = getTempRet0() | 0;
     i46 = i27 & 255;
     if (i48 >>> 0 > 4294967295 | (i48 | 0) == -1 & i47 >>> 0 > ~i46 >>> 0) {
      i31 = i17;
      i32 = i22;
      i33 = i28;
      i34 = i29;
      i18 = 76;
      break L63;
     }
     i57 = _i64Add(i47 | 0, i48 | 0, i46 | 0, 0) | 0;
     i46 = getTempRet0() | 0;
     i48 = HEAP32[i6 >> 2] | 0;
     if (i48 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
      HEAP32[i6 >> 2] = i48 + 1;
      i58 = HEAPU8[i48 >> 0] | 0;
     } else i58 = ___shgetc(i1) | 0;
     i27 = HEAP8[3713 + i58 >> 0] | 0;
     if (i17 >>> 0 <= (i27 & 255) >>> 0) {
      i31 = i17;
      i32 = i58;
      i33 = i57;
      i34 = i46;
      i18 = 76;
      break;
     } else {
      i22 = i58;
      i29 = i46;
      i28 = i57;
     }
    }
   } else {
    i31 = i17;
    i32 = i52;
    i33 = i55;
    i34 = i56;
    i18 = 76;
   }
  } while (0);
  if ((i18 | 0) == 76) if (i31 >>> 0 > (HEAPU8[3713 + i32 >> 0] | 0) >>> 0) {
   do {
    i28 = HEAP32[i6 >> 2] | 0;
    if (i28 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
     HEAP32[i6 >> 2] = i28 + 1;
     i59 = HEAPU8[i28 >> 0] | 0;
    } else i59 = ___shgetc(i1) | 0;
   } while (i31 >>> 0 > (HEAPU8[3713 + i59 >> 0] | 0) >>> 0);
   i28 = ___errno_location() | 0;
   HEAP32[i28 >> 2] = 34;
   i36 = (i4 & 1 | 0) == 0 & 0 == 0 ? i13 : 0;
   i37 = i5;
   i38 = i4;
  } else {
   i36 = i13;
   i37 = i34;
   i38 = i33;
  }
  if (HEAP32[i9 >> 2] | 0) HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
  if (!(i37 >>> 0 < i5 >>> 0 | (i37 | 0) == (i5 | 0) & i38 >>> 0 < i4 >>> 0)) {
   if (!((i4 & 1 | 0) != 0 | 0 != 0 | (i36 | 0) != 0)) {
    i28 = ___errno_location() | 0;
    HEAP32[i28 >> 2] = 34;
    i28 = _i64Add(i4 | 0, i5 | 0, -1, -1) | 0;
    i7 = getTempRet0() | 0;
    i8 = i28;
    break;
   }
   if (i37 >>> 0 > i5 >>> 0 | (i37 | 0) == (i5 | 0) & i38 >>> 0 > i4 >>> 0) {
    i28 = ___errno_location() | 0;
    HEAP32[i28 >> 2] = 34;
    i7 = i5;
    i8 = i4;
    break;
   }
  }
  i28 = ((i36 | 0) < 0) << 31 >> 31;
  i29 = _i64Subtract(i38 ^ i36 | 0, i37 ^ i28 | 0, i36 | 0, i28 | 0) | 0;
  i7 = getTempRet0() | 0;
  i8 = i29;
 } while (0);
 setTempRet0(i7 | 0);
 return i8 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i9 = i8 + 128 | 0;
 i10 = i8 + 112 | 0;
 i11 = i8 + 124 | 0;
 i12 = i8 + 120 | 0;
 i13 = i8 + 116 | 0;
 i14 = i8 + 108 | 0;
 i15 = i8 + 104 | 0;
 i16 = i8 + 100 | 0;
 i17 = i8 + 96 | 0;
 i18 = i8 + 92 | 0;
 i19 = i8 + 88 | 0;
 i20 = i8 + 84 | 0;
 i21 = i8 + 80 | 0;
 i22 = i8 + 76 | 0;
 i23 = i8 + 72 | 0;
 i24 = i8 + 68 | 0;
 i25 = i8 + 64 | 0;
 i26 = i8 + 60 | 0;
 i27 = i8 + 56 | 0;
 i28 = i8 + 52 | 0;
 i29 = i8 + 48 | 0;
 i30 = i8 + 44 | 0;
 i31 = i8 + 40 | 0;
 i32 = i8 + 36 | 0;
 i33 = i8 + 32 | 0;
 i34 = i8 + 28 | 0;
 i35 = i8 + 24 | 0;
 i36 = i8 + 20 | 0;
 i37 = i8 + 16 | 0;
 i38 = i8 + 12 | 0;
 i39 = i8 + 8 | 0;
 i40 = i8 + 4 | 0;
 i41 = i8;
 HEAP32[i5 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv(i9, i4);
 i42 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58516) | 0;
 __ZNSt3__26localeD2Ev(i9);
 do switch (i7 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 24 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i12 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i12 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 16 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 99:
  {
   i44 = i1 + 8 | 0;
   i45 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i44 >> 2] | 0) + 12 >> 2] & 127](i44) | 0;
   HEAP32[i13 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i14 >> 2] = HEAP32[i3 >> 2];
   i44 = HEAP8[i45 + 8 + 3 >> 0] | 0;
   i46 = i44 << 24 >> 24 < 0;
   i47 = i46 ? HEAP32[i45 >> 2] | 0 : i45;
   i48 = i47 + ((i46 ? HEAP32[i45 + 4 >> 2] | 0 : i44 & 255) << 2) | 0;
   HEAP32[i10 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
   i44 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i10, i9, i4, i5, i6, i47, i48) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i15 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i15 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 12 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 68:
  {
   HEAP32[i16 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i17 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i16 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i17 >> 2];
   i44 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i10, i9, i4, i5, i6, 10784, 10816) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 70:
  {
   HEAP32[i18 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i19 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i19 >> 2];
   i44 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i10, i9, i4, i5, i6, 10816, 10848) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 72:
  {
   HEAP32[i20 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i20 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 8 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 73:
  {
   HEAP32[i21 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i21 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 8 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 106:
  {
   HEAP32[i22 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i22 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 28 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 109:
  {
   HEAP32[i23 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i23 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 16 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 77:
  {
   HEAP32[i24 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 4 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i25 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i25 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 112:
  {
   HEAP32[i26 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i26 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 8 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 114:
  {
   HEAP32[i27 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i28 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i27 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i28 >> 2];
   i44 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i10, i9, i4, i5, i6, 10848, 10892) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 82:
  {
   HEAP32[i29 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i30 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i29 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i30 >> 2];
   i44 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i10, i9, i4, i5, i6, 10896, 10916) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 83:
  {
   HEAP32[i31 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 84:
  {
   HEAP32[i32 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i33 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i32 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i33 >> 2];
   i44 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i10, i9, i4, i5, i6, 10928, 10960) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 119:
  {
   HEAP32[i34 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i34 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 24 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 120:
  {
   i44 = HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i35 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i36 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i36 >> 2];
   i49 = FUNCTION_TABLE_iiiiiii[i44 & 63](i1, i10, i9, i4, i5, i6) | 0;
   break;
  }
 case 88:
  {
   i44 = i1 + 8 | 0;
   i48 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i44 >> 2] | 0) + 24 >> 2] & 127](i44) | 0;
   HEAP32[i37 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i38 >> 2] = HEAP32[i3 >> 2];
   i44 = HEAP8[i48 + 8 + 3 >> 0] | 0;
   i47 = i44 << 24 >> 24 < 0;
   i45 = i47 ? HEAP32[i48 >> 2] | 0 : i48;
   i46 = i45 + ((i47 ? HEAP32[i48 + 4 >> 2] | 0 : i44 & 255) << 2) | 0;
   HEAP32[i10 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i38 >> 2];
   i44 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i10, i9, i4, i5, i6, i45, i46) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 121:
  {
   HEAP32[i39 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i39 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 20 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 89:
  {
   HEAP32[i40 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i40 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 20 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 37:
  {
   HEAP32[i41 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i41 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 default:
  {
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 4;
   i43 = 26;
  }
 } while (0);
 if ((i43 | 0) == 26) i49 = HEAP32[i2 >> 2] | 0;
 STACKTOP = i8;
 return i49 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i9 = i8 + 128 | 0;
 i10 = i8 + 112 | 0;
 i11 = i8 + 124 | 0;
 i12 = i8 + 120 | 0;
 i13 = i8 + 116 | 0;
 i14 = i8 + 108 | 0;
 i15 = i8 + 104 | 0;
 i16 = i8 + 100 | 0;
 i17 = i8 + 96 | 0;
 i18 = i8 + 92 | 0;
 i19 = i8 + 88 | 0;
 i20 = i8 + 84 | 0;
 i21 = i8 + 80 | 0;
 i22 = i8 + 76 | 0;
 i23 = i8 + 72 | 0;
 i24 = i8 + 68 | 0;
 i25 = i8 + 64 | 0;
 i26 = i8 + 60 | 0;
 i27 = i8 + 56 | 0;
 i28 = i8 + 52 | 0;
 i29 = i8 + 48 | 0;
 i30 = i8 + 44 | 0;
 i31 = i8 + 40 | 0;
 i32 = i8 + 36 | 0;
 i33 = i8 + 32 | 0;
 i34 = i8 + 28 | 0;
 i35 = i8 + 24 | 0;
 i36 = i8 + 20 | 0;
 i37 = i8 + 16 | 0;
 i38 = i8 + 12 | 0;
 i39 = i8 + 8 | 0;
 i40 = i8 + 4 | 0;
 i41 = i8;
 HEAP32[i5 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv(i9, i4);
 i42 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
 __ZNSt3__26localeD2Ev(i9);
 do switch (i7 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 24 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i12 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i12 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 16 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 99:
  {
   i44 = i1 + 8 | 0;
   i45 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i44 >> 2] | 0) + 12 >> 2] & 127](i44) | 0;
   HEAP32[i13 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i14 >> 2] = HEAP32[i3 >> 2];
   i44 = HEAP8[i45 + 11 >> 0] | 0;
   i46 = i44 << 24 >> 24 < 0;
   i47 = i46 ? HEAP32[i45 >> 2] | 0 : i45;
   i48 = i47 + (i46 ? HEAP32[i45 + 4 >> 2] | 0 : i44 & 255) | 0;
   HEAP32[i10 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
   i44 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i10, i9, i4, i5, i6, i47, i48) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i15 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i15 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 12 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 68:
  {
   HEAP32[i16 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i17 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i16 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i17 >> 2];
   i44 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i10, i9, i4, i5, i6, 48069, 48077) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 70:
  {
   HEAP32[i18 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i19 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i19 >> 2];
   i44 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i10, i9, i4, i5, i6, 48077, 48085) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 72:
  {
   HEAP32[i20 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i20 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 8 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 73:
  {
   HEAP32[i21 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i21 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 8 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 106:
  {
   HEAP32[i22 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i22 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 28 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 109:
  {
   HEAP32[i23 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i23 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 16 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 77:
  {
   HEAP32[i24 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 4 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i25 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i25 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 112:
  {
   HEAP32[i26 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i26 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 8 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 114:
  {
   HEAP32[i27 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i28 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i27 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i28 >> 2];
   i44 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i10, i9, i4, i5, i6, 48085, 48096) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 82:
  {
   HEAP32[i29 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i30 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i29 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i30 >> 2];
   i44 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i10, i9, i4, i5, i6, 48096, 48101) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 83:
  {
   HEAP32[i31 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 84:
  {
   HEAP32[i32 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i33 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i32 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i33 >> 2];
   i44 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i10, i9, i4, i5, i6, 48101, 48109) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 119:
  {
   HEAP32[i34 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i34 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 24 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 120:
  {
   i44 = HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i35 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i36 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i36 >> 2];
   i49 = FUNCTION_TABLE_iiiiiii[i44 & 63](i1, i10, i9, i4, i5, i6) | 0;
   break;
  }
 case 88:
  {
   i44 = i1 + 8 | 0;
   i48 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i44 >> 2] | 0) + 24 >> 2] & 127](i44) | 0;
   HEAP32[i37 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i38 >> 2] = HEAP32[i3 >> 2];
   i44 = HEAP8[i48 + 11 >> 0] | 0;
   i47 = i44 << 24 >> 24 < 0;
   i45 = i47 ? HEAP32[i48 >> 2] | 0 : i48;
   i46 = i45 + (i47 ? HEAP32[i48 + 4 >> 2] | 0 : i44 & 255) | 0;
   HEAP32[i10 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i38 >> 2];
   i44 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i10, i9, i4, i5, i6, i45, i46) | 0;
   HEAP32[i2 >> 2] = i44;
   i43 = 26;
   break;
  }
 case 121:
  {
   HEAP32[i39 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i39 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 20 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 89:
  {
   HEAP32[i40 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i40 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 20 | 0, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 case 37:
  {
   HEAP32[i41 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i41 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i9, i5, i42);
   i43 = 26;
   break;
  }
 default:
  {
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 4;
   i43 = 26;
  }
 } while (0);
 if ((i43 | 0) == 26) i49 = HEAP32[i2 >> 2] | 0;
 STACKTOP = i8;
 return i49 | 0;
}

function __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = i11 + 12 | 0;
 i13 = i11;
 if (i1) {
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58716) | 0;
  if (i2) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 63](i12, i1);
   i14 = HEAP32[i12 >> 2] | 0;
   HEAP8[i4 >> 0] = i14;
   HEAP8[i4 + 1 >> 0] = i14 >> 8;
   HEAP8[i4 + 2 >> 0] = i14 >> 16;
   HEAP8[i4 + 3 >> 0] = i14 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 63](i13, i1);
   i14 = i9 + 11 | 0;
   if ((HEAP8[i14 >> 0] | 0) < 0) {
    i15 = HEAP32[i9 >> 2] | 0;
    HEAP8[i12 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i15, i12);
    HEAP32[i9 + 4 >> 2] = 0;
    i16 = i9;
   } else {
    HEAP8[i12 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i12);
    HEAP8[i14 >> 0] = 0;
    i16 = i9;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i9, 0);
   HEAP32[i16 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i16 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i16 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i16 = 0;
   while (1) {
    if ((i16 | 0) == 3) break;
    HEAP32[i13 + (i16 << 2) >> 2] = 0;
    i16 = i16 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
   i17 = i1;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 63](i12, i1);
   i16 = HEAP32[i12 >> 2] | 0;
   HEAP8[i4 >> 0] = i16;
   HEAP8[i4 + 1 >> 0] = i16 >> 8;
   HEAP8[i4 + 2 >> 0] = i16 >> 16;
   HEAP8[i4 + 3 >> 0] = i16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i13, i1);
   i16 = i9 + 11 | 0;
   if ((HEAP8[i16 >> 0] | 0) < 0) {
    i14 = HEAP32[i9 >> 2] | 0;
    HEAP8[i12 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i14, i12);
    HEAP32[i9 + 4 >> 2] = 0;
    i18 = i9;
   } else {
    HEAP8[i12 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i12);
    HEAP8[i16 >> 0] = 0;
    i18 = i9;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i9, 0);
   HEAP32[i18 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i18 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i18 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i18 = 0;
   while (1) {
    if ((i18 | 0) == 3) break;
    HEAP32[i13 + (i18 << 2) >> 2] = 0;
    i18 = i18 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
   i17 = i1;
  }
  i18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
  HEAP8[i5 >> 0] = i18;
  i18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
  HEAP8[i6 >> 0] = i18;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i17 >> 2] | 0) + 20 >> 2] & 63](i13, i1);
  i18 = i7 + 11 | 0;
  if ((HEAP8[i18 >> 0] | 0) < 0) {
   i16 = HEAP32[i7 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i12);
   HEAP32[i7 + 4 >> 2] = 0;
   i19 = i7;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i12);
   HEAP8[i18 >> 0] = 0;
   i19 = i7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i7, 0);
  HEAP32[i19 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i19 = 0;
  while (1) {
   if ((i19 | 0) == 3) break;
   HEAP32[i13 + (i19 << 2) >> 2] = 0;
   i19 = i19 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i17 >> 2] | 0) + 24 >> 2] & 63](i13, i1);
  i17 = i8 + 11 | 0;
  if ((HEAP8[i17 >> 0] | 0) < 0) {
   i19 = HEAP32[i8 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i19, i12);
   HEAP32[i8 + 4 >> 2] = 0;
   i20 = i8;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i12);
   HEAP8[i17 >> 0] = 0;
   i20 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i20 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i20 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i20 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i20 = 0;
  while (1) {
   if ((i20 | 0) == 3) break;
   HEAP32[i13 + (i20 << 2) >> 2] = 0;
   i20 = i20 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 } else {
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58708) | 0;
  if (i2) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 63](i12, i1);
   i2 = HEAP32[i12 >> 2] | 0;
   HEAP8[i4 >> 0] = i2;
   HEAP8[i4 + 1 >> 0] = i2 >> 8;
   HEAP8[i4 + 2 >> 0] = i2 >> 16;
   HEAP8[i4 + 3 >> 0] = i2 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 63](i13, i1);
   i2 = i9 + 11 | 0;
   if ((HEAP8[i2 >> 0] | 0) < 0) {
    i3 = HEAP32[i9 >> 2] | 0;
    HEAP8[i12 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i3, i12);
    HEAP32[i9 + 4 >> 2] = 0;
    i22 = i9;
   } else {
    HEAP8[i12 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i12);
    HEAP8[i2 >> 0] = 0;
    i22 = i9;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i9, 0);
   HEAP32[i22 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i22 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i22 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i22 = 0;
   while (1) {
    if ((i22 | 0) == 3) break;
    HEAP32[i13 + (i22 << 2) >> 2] = 0;
    i22 = i22 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
   i23 = i1;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 63](i12, i1);
   i22 = HEAP32[i12 >> 2] | 0;
   HEAP8[i4 >> 0] = i22;
   HEAP8[i4 + 1 >> 0] = i22 >> 8;
   HEAP8[i4 + 2 >> 0] = i22 >> 16;
   HEAP8[i4 + 3 >> 0] = i22 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i13, i1);
   i22 = i9 + 11 | 0;
   if ((HEAP8[i22 >> 0] | 0) < 0) {
    i4 = HEAP32[i9 >> 2] | 0;
    HEAP8[i12 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i4, i12);
    HEAP32[i9 + 4 >> 2] = 0;
    i24 = i9;
   } else {
    HEAP8[i12 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i12);
    HEAP8[i22 >> 0] = 0;
    i24 = i9;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i9, 0);
   HEAP32[i24 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i24 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i24 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i24 = 0;
   while (1) {
    if ((i24 | 0) == 3) break;
    HEAP32[i13 + (i24 << 2) >> 2] = 0;
    i24 = i24 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
   i23 = i1;
  }
  i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
  HEAP8[i5 >> 0] = i24;
  i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
  HEAP8[i6 >> 0] = i24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i23 >> 2] | 0) + 20 >> 2] & 63](i13, i1);
  i24 = i7 + 11 | 0;
  if ((HEAP8[i24 >> 0] | 0) < 0) {
   i6 = HEAP32[i7 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i12);
   HEAP32[i7 + 4 >> 2] = 0;
   i25 = i7;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i12);
   HEAP8[i24 >> 0] = 0;
   i25 = i7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i7, 0);
  HEAP32[i25 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i25 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i25 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i25 = 0;
  while (1) {
   if ((i25 | 0) == 3) break;
   HEAP32[i13 + (i25 << 2) >> 2] = 0;
   i25 = i25 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i23 >> 2] | 0) + 24 >> 2] & 63](i13, i1);
  i23 = i8 + 11 | 0;
  if ((HEAP8[i23 >> 0] | 0) < 0) {
   i25 = HEAP32[i8 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i25, i12);
   HEAP32[i8 + 4 >> 2] = 0;
   i26 = i8;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i12);
   HEAP8[i23 >> 0] = 0;
   i26 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i26 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i26 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i26 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i26 = 0;
  while (1) {
   if ((i26 | 0) == 3) break;
   HEAP32[i13 + (i26 << 2) >> 2] = 0;
   i26 = i26 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 }
 HEAP32[i10 >> 2] = i21;
 STACKTOP = i11;
 return;
}

function __ZN6vision14BinarykMedoidsILi96EE6assignEPKhiPKii(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 i8 = i1 + 4 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = i1 + 12 | 0;
 i11 = i1 + 16 | 0;
 if ((i9 | 0) != ((HEAP32[i11 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) >> 2 | 0)) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27685, 44) | 0, 27730, 107) | 0, 33554, 6) | 0, 154) | 0, 33561, 2) | 0, 27838, 44) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i14) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if ((i3 | 0) <= 0) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27883, 39) | 0, 27730, 107) | 0, 33554, 6) | 0, 155) | 0, 33561, 2) | 0, 27923, 35) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if ((i5 | 0) > (i3 | 0)) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27959, 50) | 0, 27730, 107) | 0, 33554, 6) | 0, 156) | 0, 33561, 2) | 0, 28010, 26) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i14) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if ((i9 | 0) > (i5 | 0)) {
  i9 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 28037, 40) | 0, 27730, 107) | 0, 33554, 6) | 0, 157) | 0, 33561, 2) | 0, 28078, 19) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i14) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i9 = i1 + 24 | 0;
 HEAP32[i7 >> 2] = -1;
 i14 = i1 + 28 | 0;
 i12 = HEAP32[i9 >> 2] | 0;
 i13 = (HEAP32[i14 >> 2] | 0) - i12 >> 2;
 if (i13 >>> 0 >= i5 >>> 0) {
  if (i13 >>> 0 > i5 >>> 0) HEAP32[i14 >> 2] = i12 + (i5 << 2);
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEmRKi(i9, i5 - i13 | 0, i7);
 i13 = i1 + 36 | 0;
 HEAP32[i7 >> 2] = -1;
 i12 = i1 + 40 | 0;
 i15 = HEAP32[i13 >> 2] | 0;
 i16 = (HEAP32[i12 >> 2] | 0) - i15 >> 2;
 if (i16 >>> 0 >= i5 >>> 0) {
  if (i16 >>> 0 > i5 >>> 0) HEAP32[i12 >> 2] = i15 + (i5 << 2);
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEmRKi(i13, i5 - i16 | 0, i7);
 i16 = i1 + 48 | 0;
 i15 = i1 + 52 | 0;
 i17 = HEAP32[i15 >> 2] | 0;
 i18 = HEAP32[i16 >> 2] | 0;
 i19 = i17 - i18 >> 2;
 i20 = i18;
 if (i19 >>> 0 >= i5 >>> 0) if (i19 >>> 0 > i5 >>> 0) {
  i18 = i20 + (i5 << 2) | 0;
  HEAP32[i15 >> 2] = i18;
  i21 = i20;
  i22 = i18;
 } else {
  i21 = i20;
  i22 = i17;
 } else {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i16, i5 - i19 | 0);
  i21 = HEAP32[i16 >> 2] | 0;
  i22 = HEAP32[i15 >> 2] | 0;
 }
 i19 = i22 - i21 | 0;
 i17 = i19 >> 2;
 if ((i19 | 0) >= 4 ? (HEAP32[i21 >> 2] = 0, (i19 | 0) != 4) : 0) {
  i19 = 1;
  i20 = 0;
  do {
   i20 = i20 + 1 | 0;
   HEAP32[i21 + (i19 << 2) >> 2] = i20;
   i19 = i19 + 1 | 0;
  } while ((i19 | 0) < (i17 | 0));
 }
 i17 = i1 + 8 | 0;
 L34 : do if ((HEAP32[i17 >> 2] | 0) > 0) {
  i19 = i1 + 32 | 0;
  i20 = i1 + 44 | 0;
  i21 = 0;
  i18 = -1;
  i23 = i22;
  while (1) {
   i24 = HEAP32[i16 >> 2] | 0;
   i25 = i23 - i24 >> 2;
   i26 = HEAP32[i8 >> 2] | 0;
   i27 = HEAP32[i1 >> 2] | 0;
   if ((i26 | 0) > 0) {
    i28 = 0;
    do {
     i29 = ((HEAP32[i27 >> 2] | 0) * 214013 | 0) + 2531011 | 0;
     HEAP32[i27 >> 2] = i29;
     i30 = i24 + (i28 << 2) | 0;
     i31 = i24 + (((i29 >>> 16 & 32767 | 0) % (i25 | 0) | 0) << 2) | 0;
     i29 = HEAP32[i30 >> 2] | 0;
     HEAP32[i30 >> 2] = HEAP32[i31 >> 2];
     HEAP32[i31 >> 2] = i29;
     i28 = i28 + 1 | 0;
    } while ((i28 | 0) != (i26 | 0));
    i32 = HEAP32[i8 >> 2] | 0;
   } else i32 = i26;
   i28 = __ZN6vision14BinarykMedoidsILi96EE6assignERNSt3__26vectorIiNS2_9allocatorIiEEEEPKhiPKiiSB_i(i1, i13, i2, i3, i4, i5, i24, i32) | 0;
   if (i28 >>> 0 < i18 >>> 0) {
    i25 = HEAP32[i9 >> 2] | 0;
    HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
    HEAP32[i13 >> 2] = i25;
    i25 = HEAP32[i14 >> 2] | 0;
    HEAP32[i14 >> 2] = HEAP32[i12 >> 2];
    HEAP32[i12 >> 2] = i25;
    i25 = HEAP32[i19 >> 2] | 0;
    HEAP32[i19 >> 2] = HEAP32[i20 >> 2];
    HEAP32[i20 >> 2] = i25;
    _memcpy(HEAP32[i10 >> 2] | 0, HEAP32[i16 >> 2] | 0, HEAP32[i8 >> 2] << 2 | 0) | 0;
    i33 = i28;
   } else i33 = i18;
   i28 = i21 + 1 | 0;
   if ((i28 | 0) >= (HEAP32[i17 >> 2] | 0)) break L34;
   i21 = i28;
   i18 = i33;
   i23 = HEAP32[i15 >> 2] | 0;
  }
 } while (0);
 if ((HEAP32[i8 >> 2] | 0) == ((HEAP32[i11 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) >> 2 | 0)) {
  STACKTOP = i6;
  return;
 } else {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27685, 44) | 0, 27730, 107) | 0, 33554, 6) | 0, 187) | 0, 33561, 2) | 0, 27838, 44) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
}

function __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = i11 + 12 | 0;
 i13 = i11;
 if (i1) {
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58732) | 0;
  if (i2) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 63](i12, i1);
   i14 = HEAP32[i12 >> 2] | 0;
   HEAP8[i4 >> 0] = i14;
   HEAP8[i4 + 1 >> 0] = i14 >> 8;
   HEAP8[i4 + 2 >> 0] = i14 >> 16;
   HEAP8[i4 + 3 >> 0] = i14 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 63](i13, i1);
   i14 = i9 + 8 + 3 | 0;
   if ((HEAP8[i14 >> 0] | 0) < 0) {
    i15 = HEAP32[i9 >> 2] | 0;
    HEAP32[i12 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i15, i12);
    HEAP32[i9 + 4 >> 2] = 0;
   } else {
    HEAP32[i12 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i9, i12);
    HEAP8[i14 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i9, 0);
   HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i14 = 0;
   while (1) {
    if ((i14 | 0) == 3) break;
    HEAP32[i13 + (i14 << 2) >> 2] = 0;
    i14 = i14 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 63](i12, i1);
   i14 = HEAP32[i12 >> 2] | 0;
   HEAP8[i4 >> 0] = i14;
   HEAP8[i4 + 1 >> 0] = i14 >> 8;
   HEAP8[i4 + 2 >> 0] = i14 >> 16;
   HEAP8[i4 + 3 >> 0] = i14 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i13, i1);
   i14 = i9 + 8 + 3 | 0;
   if ((HEAP8[i14 >> 0] | 0) < 0) {
    i15 = HEAP32[i9 >> 2] | 0;
    HEAP32[i12 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i15, i12);
    HEAP32[i9 + 4 >> 2] = 0;
   } else {
    HEAP32[i12 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i9, i12);
    HEAP8[i14 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i9, 0);
   HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i14 = 0;
   while (1) {
    if ((i14 | 0) == 3) break;
    HEAP32[i13 + (i14 << 2) >> 2] = 0;
    i14 = i14 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  }
  i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
  HEAP32[i5 >> 2] = i14;
  i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
  HEAP32[i6 >> 2] = i14;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i13, i1);
  i14 = i7 + 11 | 0;
  if ((HEAP8[i14 >> 0] | 0) < 0) {
   i15 = HEAP32[i7 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i15, i12);
   HEAP32[i7 + 4 >> 2] = 0;
   i16 = i7;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i12);
   HEAP8[i14 >> 0] = 0;
   i16 = i7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i7, 0);
  HEAP32[i16 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i16 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i16 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i16 = 0;
  while (1) {
   if ((i16 | 0) == 3) break;
   HEAP32[i13 + (i16 << 2) >> 2] = 0;
   i16 = i16 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 63](i13, i1);
  i16 = i8 + 8 + 3 | 0;
  if ((HEAP8[i16 >> 0] | 0) < 0) {
   i14 = HEAP32[i8 >> 2] | 0;
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i14, i12);
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i8, i12);
   HEAP8[i16 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i8, 0);
  HEAP32[i8 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i16 = 0;
  while (1) {
   if ((i16 | 0) == 3) break;
   HEAP32[i13 + (i16 << 2) >> 2] = 0;
   i16 = i16 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 } else {
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58724) | 0;
  if (i2) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 63](i12, i1);
   i2 = HEAP32[i12 >> 2] | 0;
   HEAP8[i4 >> 0] = i2;
   HEAP8[i4 + 1 >> 0] = i2 >> 8;
   HEAP8[i4 + 2 >> 0] = i2 >> 16;
   HEAP8[i4 + 3 >> 0] = i2 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 63](i13, i1);
   i2 = i9 + 8 + 3 | 0;
   if ((HEAP8[i2 >> 0] | 0) < 0) {
    i3 = HEAP32[i9 >> 2] | 0;
    HEAP32[i12 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i3, i12);
    HEAP32[i9 + 4 >> 2] = 0;
   } else {
    HEAP32[i12 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i9, i12);
    HEAP8[i2 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i9, 0);
   HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i13 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 63](i12, i1);
   i2 = HEAP32[i12 >> 2] | 0;
   HEAP8[i4 >> 0] = i2;
   HEAP8[i4 + 1 >> 0] = i2 >> 8;
   HEAP8[i4 + 2 >> 0] = i2 >> 16;
   HEAP8[i4 + 3 >> 0] = i2 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i13, i1);
   i2 = i9 + 8 + 3 | 0;
   if ((HEAP8[i2 >> 0] | 0) < 0) {
    i4 = HEAP32[i9 >> 2] | 0;
    HEAP32[i12 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i4, i12);
    HEAP32[i9 + 4 >> 2] = 0;
   } else {
    HEAP32[i12 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw(i9, i12);
    HEAP8[i2 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i9, 0);
   HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i9 = 0;
   while (1) {
    if ((i9 | 0) == 3) break;
    HEAP32[i13 + (i9 << 2) >> 2] = 0;
    i9 = i9 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  }
  i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
  HEAP32[i5 >> 2] = i9;
  i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
  HEAP32[i6 >> 2] = i9;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i13, i1);
  i9 = i7 + 11 | 0;
  if ((HEAP8[i9 >> 0] | 0) < 0) {
   i6 = HEAP32[i7 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i12);
   HEAP32[i7 + 4 >> 2] = 0;
   i18 = i7;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i12);
   HEAP8[i9 >> 0] = 0;
   i18 = i7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i7, 0);
  HEAP32[i18 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i18 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i18 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i18 = 0;
  while (1) {
   if ((i18 | 0) == 3) break;
   HEAP32[i13 + (i18 << 2) >> 2] = 0;
   i18 = i18 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 63](i13, i1);
  i18 = i8 + 8 + 3 | 0;
  if ((HEAP8[i18 >> 0] | 0) < 0) {
   i7 = HEAP32[i8 >> 2] | 0;
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i7, i12);
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i8, i12);
   HEAP8[i18 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i8, 0);
  HEAP32[i8 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i8 = 0;
  while (1) {
   if ((i8 | 0) == 3) break;
   HEAP32[i13 + (i8 << 2) >> 2] = 0;
   i8 = i8 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 }
 HEAP32[i10 >> 2] = i17;
 STACKTOP = i11;
 return;
}

function __ZN6vision27OrthogonalizePivot8x9Basis4IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, d15 = 0.0, i16 = 0, d17 = 0.0, i18 = 0, d19 = 0.0, i20 = 0, d21 = 0.0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, i26 = 0, d27 = 0.0, i28 = 0, d29 = 0.0, i30 = 0, d31 = 0.0, i32 = 0, d33 = 0.0, i34 = 0, d35 = 0.0, i36 = 0, d37 = 0.0, i38 = 0, d39 = 0.0, i40 = 0, d41 = 0.0, i42 = 0, d43 = 0.0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, d54 = 0.0, d55 = 0.0, d56 = 0.0, d57 = 0.0, d58 = 0.0, d59 = 0.0, d60 = 0.0, d61 = 0.0, i62 = 0, i63 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i1 + 144 | 0;
 i6 = i2 + 144 | 0;
 d7 = +HEAPF32[i1 + 108 >> 2];
 i8 = i2 + 148 | 0;
 d9 = +HEAPF32[i1 + 112 >> 2];
 i10 = i2 + 152 | 0;
 d11 = +HEAPF32[i1 + 116 >> 2];
 i12 = i2 + 156 | 0;
 d13 = +HEAPF32[i1 + 120 >> 2];
 i14 = i2 + 160 | 0;
 d15 = +HEAPF32[i1 + 124 >> 2];
 i16 = i2 + 164 | 0;
 d17 = +HEAPF32[i1 + 128 >> 2];
 i18 = i2 + 168 | 0;
 d19 = +HEAPF32[i1 + 132 >> 2];
 i20 = i2 + 172 | 0;
 d21 = +HEAPF32[i1 + 136 >> 2];
 i22 = i2 + 176 | 0;
 d23 = +HEAPF32[i1 + 140 >> 2];
 d24 = +HEAPF32[i6 >> 2] * d7 + +HEAPF32[i8 >> 2] * d9 + +HEAPF32[i10 >> 2] * d11 + +HEAPF32[i12 >> 2] * d13 + +HEAPF32[i14 >> 2] * d15 + +HEAPF32[i16 >> 2] * d17 + +HEAPF32[i18 >> 2] * d19 + +HEAPF32[i20 >> 2] * d21 + +HEAPF32[i22 >> 2] * d23;
 d25 = +HEAPF32[i5 >> 2] - d7 * d24;
 HEAPF32[i5 >> 2] = d25;
 i26 = i1 + 148 | 0;
 d27 = +HEAPF32[i26 >> 2] - d9 * d24;
 HEAPF32[i26 >> 2] = d27;
 i28 = i1 + 152 | 0;
 d29 = +HEAPF32[i28 >> 2] - d11 * d24;
 HEAPF32[i28 >> 2] = d29;
 i30 = i1 + 156 | 0;
 d31 = +HEAPF32[i30 >> 2] - d13 * d24;
 HEAPF32[i30 >> 2] = d31;
 i32 = i1 + 160 | 0;
 d33 = +HEAPF32[i32 >> 2] - d15 * d24;
 HEAPF32[i32 >> 2] = d33;
 i34 = i1 + 164 | 0;
 d35 = +HEAPF32[i34 >> 2] - d17 * d24;
 HEAPF32[i34 >> 2] = d35;
 i36 = i1 + 168 | 0;
 d37 = +HEAPF32[i36 >> 2] - d19 * d24;
 HEAPF32[i36 >> 2] = d37;
 i38 = i1 + 172 | 0;
 d39 = +HEAPF32[i38 >> 2] - d21 * d24;
 HEAPF32[i38 >> 2] = d39;
 i40 = i1 + 176 | 0;
 d41 = +HEAPF32[i40 >> 2] - d23 * d24;
 HEAPF32[i40 >> 2] = d41;
 i42 = i1 + 180 | 0;
 d24 = d7 * +HEAPF32[i2 + 180 >> 2] + d9 * +HEAPF32[i2 + 184 >> 2] + d11 * +HEAPF32[i2 + 188 >> 2] + d13 * +HEAPF32[i2 + 192 >> 2] + d15 * +HEAPF32[i2 + 196 >> 2] + d17 * +HEAPF32[i2 + 200 >> 2] + d19 * +HEAPF32[i2 + 204 >> 2] + d21 * +HEAPF32[i2 + 208 >> 2] + d23 * +HEAPF32[i2 + 212 >> 2];
 d43 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d43;
 i42 = i1 + 184 | 0;
 d44 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d44;
 i42 = i1 + 188 | 0;
 d45 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d45;
 i42 = i1 + 192 | 0;
 d46 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d46;
 i42 = i1 + 196 | 0;
 d47 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d47;
 i42 = i1 + 200 | 0;
 d48 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d48;
 i42 = i1 + 204 | 0;
 d49 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d49;
 i42 = i1 + 208 | 0;
 d50 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d50;
 i42 = i1 + 212 | 0;
 d51 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d51;
 i42 = i1 + 216 | 0;
 d24 = d7 * +HEAPF32[i2 + 216 >> 2] + d9 * +HEAPF32[i2 + 220 >> 2] + d11 * +HEAPF32[i2 + 224 >> 2] + d13 * +HEAPF32[i2 + 228 >> 2] + d15 * +HEAPF32[i2 + 232 >> 2] + d17 * +HEAPF32[i2 + 236 >> 2] + d19 * +HEAPF32[i2 + 240 >> 2] + d21 * +HEAPF32[i2 + 244 >> 2] + d23 * +HEAPF32[i2 + 248 >> 2];
 d52 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d52;
 i42 = i1 + 220 | 0;
 d53 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d53;
 i42 = i1 + 224 | 0;
 d54 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d54;
 i42 = i1 + 228 | 0;
 d55 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d55;
 i42 = i1 + 232 | 0;
 d56 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d56;
 i42 = i1 + 236 | 0;
 d57 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d57;
 i42 = i1 + 240 | 0;
 d58 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d58;
 i42 = i1 + 244 | 0;
 d59 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d59;
 i42 = i1 + 248 | 0;
 d60 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d60;
 i42 = i1 + 252 | 0;
 d24 = d7 * +HEAPF32[i2 + 252 >> 2] + d9 * +HEAPF32[i2 + 256 >> 2] + d11 * +HEAPF32[i2 + 260 >> 2] + d13 * +HEAPF32[i2 + 264 >> 2] + d15 * +HEAPF32[i2 + 268 >> 2] + d17 * +HEAPF32[i2 + 272 >> 2] + d19 * +HEAPF32[i2 + 276 >> 2] + d21 * +HEAPF32[i2 + 280 >> 2] + d23 * +HEAPF32[i2 + 284 >> 2];
 d61 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d61;
 i42 = i1 + 256 | 0;
 d7 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d7;
 i42 = i1 + 260 | 0;
 d9 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d9;
 i42 = i1 + 264 | 0;
 d11 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d11;
 i42 = i1 + 268 | 0;
 d13 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d13;
 i42 = i1 + 272 | 0;
 d15 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d15;
 i42 = i1 + 276 | 0;
 d17 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d17;
 i42 = i1 + 280 | 0;
 d19 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d19;
 i42 = i1 + 284 | 0;
 d21 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d21;
 d24 = d25 * d25 + d27 * d27 + d29 * d29 + d31 * d31 + d33 * d33 + d35 * d35 + d37 * d37 + d39 * d39 + d41 * d41;
 HEAPF32[i4 >> 2] = d24;
 d41 = d43 * d43 + d44 * d44 + d45 * d45 + d46 * d46 + d47 * d47 + d48 * d48 + d49 * d49 + d50 * d50 + d51 * d51;
 HEAPF32[i4 + 4 >> 2] = d41;
 d51 = d52 * d52 + d53 * d53 + d54 * d54 + d55 * d55 + d56 * d56 + d57 * d57 + d58 * d58 + d59 * d59 + d60 * d60;
 HEAPF32[i4 + 8 >> 2] = d51;
 d60 = d61 * d61 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 HEAPF32[i4 + 12 >> 2] = d60;
 i42 = d41 > d24 & 1;
 i1 = d51 > +HEAPF32[i4 + (i42 << 2) >> 2] ? 2 : i42;
 i42 = d60 > +HEAPF32[i4 + (i1 << 2) >> 2] ? 3 : i1;
 d60 = +HEAPF32[i4 + (i42 << 2) >> 2];
 if (d60 == 0.0) {
  i62 = 0;
  STACKTOP = i3;
  return i62 | 0;
 }
 i4 = i42 * 9 | 0;
 i42 = i5 + (i4 << 2) | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i42 >> 2];
 i2 = i42 + 4 | 0;
 HEAP32[i42 >> 2] = i1;
 i1 = HEAP32[i26 >> 2] | 0;
 HEAP32[i26 >> 2] = HEAP32[i2 >> 2];
 i63 = i42 + 8 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i28 >> 2] | 0;
 HEAP32[i28 >> 2] = HEAP32[i63 >> 2];
 i2 = i42 + 12 | 0;
 HEAP32[i63 >> 2] = i1;
 i1 = HEAP32[i30 >> 2] | 0;
 HEAP32[i30 >> 2] = HEAP32[i2 >> 2];
 i63 = i42 + 16 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i32 >> 2] | 0;
 HEAP32[i32 >> 2] = HEAP32[i63 >> 2];
 i2 = i42 + 20 | 0;
 HEAP32[i63 >> 2] = i1;
 i1 = HEAP32[i34 >> 2] | 0;
 HEAP32[i34 >> 2] = HEAP32[i2 >> 2];
 i63 = i42 + 24 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i36 >> 2] | 0;
 HEAP32[i36 >> 2] = HEAP32[i63 >> 2];
 i2 = i42 + 28 | 0;
 HEAP32[i63 >> 2] = i1;
 i1 = HEAP32[i38 >> 2] | 0;
 HEAP32[i38 >> 2] = HEAP32[i2 >> 2];
 i63 = i42 + 32 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i40 >> 2] | 0;
 HEAP32[i40 >> 2] = HEAP32[i63 >> 2];
 HEAP32[i63 >> 2] = i1;
 i1 = i6 + (i4 << 2) | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 i6 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = i4;
 i4 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
 i8 = i1 + 8 | 0;
 HEAP32[i6 >> 2] = i4;
 i4 = HEAP32[i10 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
 i10 = i1 + 12 | 0;
 HEAP32[i8 >> 2] = i4;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i10 >> 2];
 i12 = i1 + 16 | 0;
 HEAP32[i10 >> 2] = i4;
 i4 = HEAP32[i14 >> 2] | 0;
 HEAP32[i14 >> 2] = HEAP32[i12 >> 2];
 i14 = i1 + 20 | 0;
 HEAP32[i12 >> 2] = i4;
 i4 = HEAP32[i16 >> 2] | 0;
 HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
 i16 = i1 + 24 | 0;
 HEAP32[i14 >> 2] = i4;
 i4 = HEAP32[i18 >> 2] | 0;
 HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
 i18 = i1 + 28 | 0;
 HEAP32[i16 >> 2] = i4;
 i4 = HEAP32[i20 >> 2] | 0;
 HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
 i20 = i1 + 32 | 0;
 HEAP32[i18 >> 2] = i4;
 i4 = HEAP32[i22 >> 2] | 0;
 HEAP32[i22 >> 2] = HEAP32[i20 >> 2];
 HEAP32[i20 >> 2] = i4;
 d51 = 1.0 / +Math_sqrt(+d60);
 HEAPF32[i5 >> 2] = d51 * +HEAPF32[i5 >> 2];
 HEAPF32[i26 >> 2] = d51 * +HEAPF32[i26 >> 2];
 HEAPF32[i28 >> 2] = d51 * +HEAPF32[i28 >> 2];
 HEAPF32[i30 >> 2] = d51 * +HEAPF32[i30 >> 2];
 HEAPF32[i32 >> 2] = d51 * +HEAPF32[i32 >> 2];
 HEAPF32[i34 >> 2] = d51 * +HEAPF32[i34 >> 2];
 HEAPF32[i36 >> 2] = d51 * +HEAPF32[i36 >> 2];
 HEAPF32[i38 >> 2] = d51 * +HEAPF32[i38 >> 2];
 HEAPF32[i40 >> 2] = d51 * +HEAPF32[i40 >> 2];
 i62 = 1;
 STACKTOP = i3;
 return i62 | 0;
}

function _decode_mcu_AC_refine(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i4 = i3 + 256 | 0;
 i5 = i3;
 i6 = HEAP32[i1 + 444 >> 2] | 0;
 i7 = HEAP32[i1 + 404 >> 2] | 0;
 i8 = HEAP32[i1 + 412 >> 2] | 0;
 i9 = 1 << i8;
 i10 = -1 << i8;
 i8 = i1 + 276 | 0;
 if (HEAP32[i8 >> 2] | 0 ? (i11 = i6 + 40 | 0, (HEAP32[i11 >> 2] | 0) == 0) : 0) {
  i12 = i6 + 16 | 0;
  i13 = HEAP32[i1 + 440 >> 2] | 0;
  i14 = i13 + 24 | 0;
  HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + ((HEAP32[i12 >> 2] | 0) / 8 | 0);
  HEAP32[i12 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[i13 + 8 >> 2] & 127](i1) | 0)) {
   i15 = 0;
   STACKTOP = i3;
   return i15 | 0;
  }
  i13 = i1 + 328 | 0;
  if ((HEAP32[i13 >> 2] | 0) > 0) {
   i12 = 0;
   do {
    HEAP32[i6 + 24 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   } while ((i12 | 0) < (HEAP32[i13 >> 2] | 0));
  }
  HEAP32[i6 + 20 >> 2] = 0;
  HEAP32[i11 >> 2] = HEAP32[i8 >> 2];
  if (!(HEAP32[i1 + 416 >> 2] | 0)) HEAP32[i6 + 8 >> 2] = 0;
 }
 do if (!(HEAP32[i6 + 8 >> 2] | 0)) {
  HEAP32[i4 + 16 >> 2] = i1;
  i8 = i1 + 24 | 0;
  i11 = HEAP32[i8 >> 2] | 0;
  HEAP32[i4 >> 2] = HEAP32[i11 >> 2];
  i13 = i4 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i11 + 4 >> 2];
  i11 = i6 + 12 | 0;
  i12 = HEAP32[i11 >> 2] | 0;
  i14 = i6 + 16 | 0;
  i16 = HEAP32[i14 >> 2] | 0;
  i17 = i6 + 20 | 0;
  i18 = HEAP32[i17 >> 2] | 0;
  i19 = HEAP32[i2 >> 2] | 0;
  i20 = HEAP32[i6 + 60 >> 2] | 0;
  i21 = HEAP32[i1 + 400 >> 2] | 0;
  L16 : do if (!i18) if ((i21 | 0) <= (i7 | 0)) {
   i22 = i4 + 8 | 0;
   i23 = i4 + 12 | 0;
   i24 = 0;
   i25 = i21;
   i26 = i16;
   i27 = i12;
   L19 : while (1) {
    if ((i26 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer(i4, i27, i26, 0) | 0)) {
      i28 = i24;
      break L16;
     }
     i29 = HEAP32[i22 >> 2] | 0;
     i30 = HEAP32[i23 >> 2] | 0;
     if ((i30 | 0) < 8) {
      i31 = 1;
      i32 = i30;
      i33 = i29;
      i34 = 18;
     } else {
      i35 = i30;
      i36 = i29;
      i34 = 16;
     }
    } else {
     i35 = i26;
     i36 = i27;
     i34 = 16;
    }
    if ((i34 | 0) == 16) {
     i34 = 0;
     i29 = i36 >> i35 + -8 & 255;
     i30 = HEAP32[i20 + 144 + (i29 << 2) >> 2] | 0;
     if (!i30) {
      i31 = 9;
      i32 = i35;
      i33 = i36;
      i34 = 18;
     } else {
      i37 = HEAPU8[i20 + 1168 + i29 >> 0] | 0;
      i38 = i35 - i30 | 0;
      i39 = i36;
     }
    }
    if ((i34 | 0) == 18) {
     i34 = 0;
     i30 = _jpeg_huff_decode(i4, i33, i32, i20, i31) | 0;
     if ((i30 | 0) < 0) {
      i28 = i24;
      break L16;
     }
     i37 = i30;
     i38 = HEAP32[i23 >> 2] | 0;
     i39 = HEAP32[i22 >> 2] | 0;
    }
    i40 = i37 >>> 4;
    switch (i37 & 15) {
    case 0:
     {
      if ((i40 | 0) == 15) {
       i41 = 0;
       i42 = i38;
       i43 = i39;
      } else break L19;
      break;
     }
    case 1:
     {
      i34 = 22;
      break;
     }
    default:
     {
      i30 = HEAP32[i1 >> 2] | 0;
      HEAP32[i30 + 20 >> 2] = 118;
      FUNCTION_TABLE_vii[HEAP32[i30 + 4 >> 2] & 63](i1, -1);
      i34 = 22;
     }
    }
    if ((i34 | 0) == 22) {
     i34 = 0;
     if ((i38 | 0) < 1) {
      if (!(_jpeg_fill_bit_buffer(i4, i39, i38, 1) | 0)) {
       i28 = i24;
       break L16;
      }
      i44 = HEAP32[i23 >> 2] | 0;
      i45 = HEAP32[i22 >> 2] | 0;
     } else {
      i44 = i38;
      i45 = i39;
     }
     i30 = i44 + -1 | 0;
     i41 = (1 << i30 & i45 | 0) == 0 ? i10 : i9;
     i42 = i30;
     i43 = i45;
    }
    i30 = i40;
    i29 = i25;
    i46 = i42;
    i47 = i43;
    L41 : while (1) {
     i48 = i19 + (HEAP32[2560 + (i29 << 2) >> 2] << 1) | 0;
     do if (!(HEAP16[i48 >> 1] | 0)) if ((i30 | 0) < 1) {
      i49 = i46;
      i50 = i47;
      i51 = i29;
      break L41;
     } else {
      i52 = i46;
      i53 = i47;
      i54 = i30 + -1 | 0;
     } else {
      if ((i46 | 0) < 1) {
       if (!(_jpeg_fill_bit_buffer(i4, i47, i46, 1) | 0)) {
        i28 = i24;
        break L16;
       }
       i55 = HEAP32[i23 >> 2] | 0;
       i56 = HEAP32[i22 >> 2] | 0;
      } else {
       i55 = i46;
       i56 = i47;
      }
      i57 = i55 + -1 | 0;
      if ((1 << i57 & i56 | 0) != 0 ? (i58 = HEAP16[i48 >> 1] | 0, i59 = i58 << 16 >> 16, (i9 & i59 | 0) == 0) : 0) if (i58 << 16 >> 16 > -1) {
       HEAP16[i48 >> 1] = i9 + i59;
       i52 = i57;
       i53 = i56;
       i54 = i30;
       break;
      } else {
       HEAP16[i48 >> 1] = i10 + i59;
       i52 = i57;
       i53 = i56;
       i54 = i30;
       break;
      } else {
       i52 = i57;
       i53 = i56;
       i54 = i30;
      }
     } while (0);
     i48 = i29 + 1 | 0;
     if ((i29 | 0) < (i7 | 0)) {
      i30 = i54;
      i29 = i48;
      i46 = i52;
      i47 = i53;
     } else {
      i49 = i52;
      i50 = i53;
      i51 = i48;
      break;
     }
    }
    if (!i41) i60 = i24; else {
     i47 = HEAP32[2560 + (i51 << 2) >> 2] | 0;
     HEAP16[i19 + (i47 << 1) >> 1] = i41;
     HEAP32[i5 + (i24 << 2) >> 2] = i47;
     i60 = i24 + 1 | 0;
    }
    if ((i51 | 0) < (i7 | 0)) {
     i24 = i60;
     i25 = i51 + 1 | 0;
     i26 = i49;
     i27 = i50;
    } else {
     i61 = 0;
     i62 = i49;
     i63 = i50;
     i34 = 60;
     break L16;
    }
   }
   i27 = 1 << i40;
   if (i40) {
    if ((i38 | 0) < (i40 | 0)) {
     if (!(_jpeg_fill_bit_buffer(i4, i39, i38, i40) | 0)) {
      i28 = i24;
      break;
     }
     i64 = HEAP32[i23 >> 2] | 0;
     i65 = HEAP32[i22 >> 2] | 0;
    } else {
     i64 = i38;
     i65 = i39;
    }
    i26 = i64 - i40 | 0;
    i47 = (i65 >> i26 & i27 + -1) + i27 | 0;
    if (!i47) {
     i61 = 0;
     i62 = i26;
     i63 = i65;
     i34 = 60;
    } else {
     i66 = i47;
     i67 = i65;
     i68 = i26;
     i69 = i24;
     i70 = i25;
     i34 = 47;
    }
   } else {
    i66 = 1;
    i67 = i39;
    i68 = i38;
    i69 = i24;
    i70 = i25;
    i34 = 47;
   }
  } else {
   i61 = 0;
   i62 = i16;
   i63 = i12;
   i34 = 60;
  } else {
   i66 = i18;
   i67 = i12;
   i68 = i16;
   i69 = 0;
   i70 = i21;
   i34 = 47;
  } while (0);
  L66 : do if ((i34 | 0) == 47) {
   if ((i70 | 0) > (i7 | 0)) {
    i71 = i68;
    i72 = i67;
   } else {
    i21 = i4 + 8 | 0;
    i16 = i4 + 12 | 0;
    i12 = i67;
    i18 = i68;
    i20 = i70;
    while (1) {
     i26 = i19 + (HEAP32[2560 + (i20 << 2) >> 2] << 1) | 0;
     do if (HEAP16[i26 >> 1] | 0) {
      if ((i18 | 0) < 1) {
       if (!(_jpeg_fill_bit_buffer(i4, i12, i18, 1) | 0)) {
        i28 = i69;
        break L66;
       }
       i73 = HEAP32[i16 >> 2] | 0;
       i74 = HEAP32[i21 >> 2] | 0;
      } else {
       i73 = i18;
       i74 = i12;
      }
      i47 = i73 + -1 | 0;
      if ((1 << i47 & i74 | 0) != 0 ? (i27 = HEAP16[i26 >> 1] | 0, i46 = i27 << 16 >> 16, (i9 & i46 | 0) == 0) : 0) if (i27 << 16 >> 16 > -1) {
       HEAP16[i26 >> 1] = i9 + i46;
       i75 = i47;
       i76 = i74;
       break;
      } else {
       HEAP16[i26 >> 1] = i10 + i46;
       i75 = i47;
       i76 = i74;
       break;
      } else {
       i75 = i47;
       i76 = i74;
      }
     } else {
      i75 = i18;
      i76 = i12;
     } while (0);
     if ((i20 | 0) < (i7 | 0)) {
      i12 = i76;
      i18 = i75;
      i20 = i20 + 1 | 0;
     } else {
      i71 = i75;
      i72 = i76;
      break;
     }
    }
   }
   i61 = i66 + -1 | 0;
   i62 = i71;
   i63 = i72;
   i34 = 60;
  } while (0);
  if ((i34 | 0) == 60) {
   i20 = HEAP32[i8 >> 2] | 0;
   HEAP32[i20 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i20 + 4 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i11 >> 2] = i63;
   HEAP32[i14 >> 2] = i62;
   HEAP32[i17 >> 2] = i61;
   break;
  }
  if ((i28 | 0) <= 0) {
   i15 = 0;
   STACKTOP = i3;
   return i15 | 0;
  }
  i20 = i28;
  do {
   i18 = i20;
   i20 = i20 + -1 | 0;
   HEAP16[i19 + (HEAP32[i5 + (i20 << 2) >> 2] << 1) >> 1] = 0;
  } while ((i18 | 0) > 1);
  i15 = 0;
  STACKTOP = i3;
  return i15 | 0;
 } while (0);
 i5 = i6 + 40 | 0;
 HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + -1;
 i15 = 1;
 STACKTOP = i3;
 return i15 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i5 = i4 + 96 | 0;
 i6 = i4 + 72 | 0;
 i7 = i4 + 48 | 0;
 i8 = i4 + 36 | 0;
 i9 = i4 + 24 | 0;
 i10 = i4 + 12 | 0;
 i11 = i4;
 if (((((i1 | 0) != (i2 | 0) ? (HEAP8[i1 >> 0] | 0) == 77 : 0) ? (i12 = i1 + 1 | 0, i13 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0, (i13 | 0) != (i12 | 0)) : 0) ? (i12 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i13, i2, i3) | 0, (i12 | 0) != (i13 | 0)) : 0) ? (i13 = i3 + 4 | 0, i2 = HEAP32[i13 >> 2] | 0, ((i2 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i6, i2 + -24 | 0);
  i2 = HEAP32[i13 >> 2] | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == -1) break;
   i14 = i3 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i14 * 24 | 0) | 0);
   i3 = i14;
  }
  HEAP32[i13 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i2 + -48 | 0);
  i2 = i6 + 12 | 0;
  L11 : do if ((HEAP8[((HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2) >> 0] | 0) == 40) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50245) | 0;
   HEAP32[i10 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i6 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i7);
   i3 = HEAP8[i11 + 11 >> 0] | 0;
   i14 = i3 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i10, i14 ? HEAP32[i11 >> 2] | 0 : i11, i14 ? HEAP32[i11 + 4 >> 2] | 0 : i3 & 255) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i10 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 51667) | 0;
   HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i9 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   i3 = HEAP32[i13 >> 2] | 0;
   i14 = i3 + -24 | 0;
   i15 = i14 + 11 | 0;
   if ((HEAP8[i15 >> 0] | 0) < 0) {
    i16 = HEAP32[i14 >> 2] | 0;
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i5);
    HEAP32[i3 + -20 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i14, i5);
    HEAP8[i15 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i14);
   HEAP32[i14 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i14 = 0;
   while (1) {
    if ((i14 | 0) == 3) break;
    HEAP32[i8 + (i14 << 2) >> 2] = 0;
    i14 = i14 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i2, 0, 50243) | 0;
   HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   i14 = 0;
   while (1) {
    if ((i14 | 0) == 3) break;
    HEAP32[i2 + (i14 << 2) >> 2] = 0;
    i14 = i14 + 1 | 0;
   }
   i14 = HEAP32[i13 >> 2] | 0;
   i15 = i14 + -12 | 0;
   i3 = i15 + 11 | 0;
   if ((HEAP8[i3 >> 0] | 0) < 0) {
    i16 = HEAP32[i15 >> 2] | 0;
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i5);
    HEAP32[i14 + -8 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i15, i5);
    HEAP8[i3 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i15);
   HEAP32[i15 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i15 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i15 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i15 = 0;
   while (1) {
    if ((i15 | 0) == 3) break;
    HEAP32[i8 + (i15 << 2) >> 2] = 0;
    i15 = i15 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  } else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50277) | 0;
   HEAP32[i10 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   i15 = 0;
   while (1) {
    if ((i15 | 0) == 3) break;
    HEAP32[i6 + (i15 << 2) >> 2] = 0;
    i15 = i15 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i7);
   i15 = HEAP8[i11 + 11 >> 0] | 0;
   i3 = i15 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i10, i3 ? HEAP32[i11 >> 2] | 0 : i11, i3 ? HEAP32[i11 + 4 >> 2] | 0 : i15 & 255) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i15 = 0;
   while (1) {
    if ((i15 | 0) == 3) break;
    HEAP32[i10 + (i15 << 2) >> 2] = 0;
    i15 = i15 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 51667) | 0;
   HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i15 = 0;
   while (1) {
    if ((i15 | 0) == 3) break;
    HEAP32[i9 + (i15 << 2) >> 2] = 0;
    i15 = i15 + 1 | 0;
   }
   i15 = HEAP32[i13 >> 2] | 0;
   i3 = i15 + -24 | 0;
   i14 = i3 + 11 | 0;
   if ((HEAP8[i14 >> 0] | 0) < 0) {
    i16 = HEAP32[i3 >> 2] | 0;
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i5);
    HEAP32[i15 + -20 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i3, i5);
    HEAP8[i14 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i3);
   HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i3 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i3 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i8 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   i3 = HEAP32[i13 >> 2] | 0;
   i14 = i3 + -12 | 0;
   i15 = i14 + 11 | 0;
   if ((HEAP8[i15 >> 0] | 0) < 0) {
    i16 = HEAP32[i14 >> 2] | 0;
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i5);
    HEAP32[i3 + -8 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i14, i5);
    HEAP8[i15 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i14);
   HEAP32[i14 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   i14 = 0;
   while (1) {
    if ((i14 | 0) == 3) break L11;
    HEAP32[i2 + (i14 << 2) >> 2] = 0;
    i14 = i14 + 1 | 0;
   }
  } while (0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
  i17 = i12;
 } else i17 = i1;
 STACKTOP = i4;
 return i17 | 0;
}

function _decompress_smooth_data(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i4 = i3;
 i5 = HEAP32[i1 + 428 >> 2] | 0;
 i6 = i1 + 320 | 0;
 i7 = (HEAP32[i6 >> 2] | 0) + -1 | 0;
 i8 = i1 + 144 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = i1 + 152 | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 L1 : do if ((i9 | 0) <= (i11 | 0)) {
  i12 = i1 + 436 | 0;
  i13 = i1 + 400 | 0;
  i14 = i1 + 148 | 0;
  i15 = i1 + 156 | 0;
  i16 = i9;
  i17 = i11;
  while (1) {
   i18 = HEAP32[i12 >> 2] | 0;
   if (HEAP32[i18 + 20 >> 2] | 0) break L1;
   if ((i16 | 0) == (i17 | 0) ? (HEAP32[i14 >> 2] | 0) >>> 0 > ((HEAP32[i15 >> 2] | 0) + ((HEAP32[i13 >> 2] | 0) == 0 & 1) | 0) >>> 0 : 0) break L1;
   if (!(FUNCTION_TABLE_ii[HEAP32[i18 >> 2] & 127](i1) | 0)) {
    i19 = 0;
    break;
   }
   i16 = HEAP32[i8 >> 2] | 0;
   i17 = HEAP32[i10 >> 2] | 0;
   if ((i16 | 0) > (i17 | 0)) break L1;
  }
  STACKTOP = i3;
  return i19 | 0;
 } while (0);
 i10 = i1 + 36 | 0;
 if ((HEAP32[i10 >> 2] | 0) > 0) {
  i8 = i1 + 156 | 0;
  i11 = i1 + 4 | 0;
  i9 = i5 + 112 | 0;
  i17 = i1 + 448 | 0;
  i16 = i4 + 2 | 0;
  i13 = i4 + 16 | 0;
  i15 = i4 + 32 | 0;
  i14 = i4 + 18 | 0;
  i12 = i4 + 4 | 0;
  i18 = 0;
  i20 = HEAP32[i1 + 216 >> 2] | 0;
  while (1) {
   if (HEAP32[i20 + 48 >> 2] | 0) {
    i21 = HEAP32[i8 >> 2] | 0;
    if (i21 >>> 0 < i7 >>> 0) {
     i22 = HEAP32[i20 + 12 >> 2] | 0;
     i23 = i22 << 1;
     i24 = 0;
     i25 = i22;
     i26 = i22;
    } else {
     i22 = HEAP32[i20 + 12 >> 2] | 0;
     i27 = ((HEAP32[i20 + 32 >> 2] | 0) >>> 0) % (i22 >>> 0) | 0;
     i28 = (i27 | 0) == 0 ? i22 : i27;
     i23 = i28;
     i24 = 1;
     i25 = i28;
     i26 = i22;
    }
    if (!i21) {
     i29 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 32 >> 2] & 31](i1, HEAP32[i5 + 72 + (i18 << 2) >> 2] | 0, 0, i23, 0) | 0;
     i30 = 1;
    } else {
     i22 = Math_imul(i26, i21 + -1 | 0) | 0;
     i21 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 32 >> 2] & 31](i1, HEAP32[i5 + 72 + (i18 << 2) >> 2] | 0, i22, i26 + i23 | 0, 0) | 0;
     i29 = i21 + (HEAP32[i20 + 12 >> 2] << 2) | 0;
     i30 = 0;
    }
    i21 = (HEAP32[i9 >> 2] | 0) + (i18 * 6 << 2) | 0;
    i22 = HEAP32[i20 + 76 >> 2] | 0;
    i28 = HEAPU16[i22 >> 1] | 0;
    i27 = HEAPU16[i22 + 2 >> 1] | 0;
    i31 = HEAPU16[i22 + 16 >> 1] | 0;
    i32 = HEAPU16[i22 + 32 >> 1] | 0;
    i33 = HEAPU16[i22 + 18 >> 1] | 0;
    i34 = HEAPU16[i22 + 4 >> 1] | 0;
    i22 = HEAP32[(HEAP32[i17 >> 2] | 0) + 4 + (i18 << 2) >> 2] | 0;
    if ((i25 | 0) > 0) {
     i35 = (i30 | 0) != 0;
     i36 = (i24 | 0) != 0;
     i37 = i25 + -1 | 0;
     i38 = i20 + 28 | 0;
     i39 = i21 + 4 | 0;
     i40 = i21 + 8 | 0;
     i41 = i21 + 12 | 0;
     i42 = i28 * 36 | 0;
     i43 = i27 << 7;
     i44 = i21 + 16 | 0;
     i45 = i31 << 7;
     i46 = i27 << 8;
     i27 = i21 + 20 | 0;
     i21 = i28 * 9 | 0;
     i47 = i32 << 7;
     i48 = i31 << 8;
     i31 = i20 + 36 | 0;
     i49 = i28 * 5 | 0;
     i28 = i33 << 7;
     i50 = i32 << 8;
     i32 = i34 << 7;
     i51 = i33 << 8;
     i33 = i34 << 8;
     i34 = 0;
     i52 = HEAP32[i2 + (i18 << 2) >> 2] | 0;
     while (1) {
      i53 = HEAP32[i29 + (i34 << 2) >> 2] | 0;
      if (i35 & (i34 | 0) == 0) i54 = i53; else i54 = HEAP32[i29 + (i34 + -1 << 2) >> 2] | 0;
      if (i36 & (i34 | 0) == (i37 | 0)) i55 = i53; else i55 = HEAP32[i29 + (i34 + 1 << 2) >> 2] | 0;
      i56 = HEAP16[i54 >> 1] | 0;
      i57 = HEAP16[i53 >> 1] | 0;
      i58 = HEAP16[i55 >> 1] | 0;
      i59 = (HEAP32[i38 >> 2] | 0) + -1 | 0;
      i60 = i58;
      i61 = i58;
      i58 = i57;
      i62 = i57;
      i57 = i56;
      i63 = i56;
      i56 = 0;
      i64 = i53;
      i53 = 0;
      i65 = i54;
      i66 = i55;
      while (1) {
       _jcopy_block_row(i64, i4, 1);
       if (i56 >>> 0 < i59 >>> 0) {
        i67 = HEAP16[i66 + 128 >> 1] | 0;
        i68 = HEAP16[i64 + 128 >> 1] | 0;
        i69 = HEAP16[i65 + 128 >> 1] | 0;
       } else {
        i67 = i60;
        i68 = i58;
        i69 = i57;
       }
       i70 = HEAP32[i39 >> 2] | 0;
       if ((i70 | 0) != 0 & (HEAP16[i16 >> 1] | 0) == 0) {
        i71 = Math_imul(i42, i62 - i68 | 0) | 0;
        if ((i71 | 0) > -1) {
         i72 = (i71 + i43 | 0) / (i46 | 0) | 0;
         i73 = 1 << i70;
         i74 = (i70 | 0) > 0 ? ((i72 | 0) < (i73 | 0) ? i72 : i73 + -1 | 0) : i72;
        } else {
         i72 = (i43 - i71 | 0) / (i46 | 0) | 0;
         i71 = 1 << i70;
         i74 = 0 - ((i70 | 0) > 0 ? ((i72 | 0) < (i71 | 0) ? i72 : i71 + -1 | 0) : i72) | 0;
        }
        HEAP16[i16 >> 1] = i74;
       }
       i72 = HEAP32[i40 >> 2] | 0;
       if ((i72 | 0) != 0 & (HEAP16[i13 >> 1] | 0) == 0) {
        i71 = Math_imul(i42, i57 - i60 | 0) | 0;
        if ((i71 | 0) > -1) {
         i70 = (i71 + i45 | 0) / (i48 | 0) | 0;
         i73 = 1 << i72;
         i75 = (i72 | 0) > 0 ? ((i70 | 0) < (i73 | 0) ? i70 : i73 + -1 | 0) : i70;
        } else {
         i70 = (i45 - i71 | 0) / (i48 | 0) | 0;
         i71 = 1 << i72;
         i75 = 0 - ((i72 | 0) > 0 ? ((i70 | 0) < (i71 | 0) ? i70 : i71 + -1 | 0) : i70) | 0;
        }
        HEAP16[i13 >> 1] = i75;
       }
       i70 = HEAP32[i41 >> 2] | 0;
       if ((i70 | 0) != 0 & (HEAP16[i15 >> 1] | 0) == 0) {
        i71 = Math_imul(i21, i57 - (i58 << 1) + i60 | 0) | 0;
        if ((i71 | 0) > -1) {
         i72 = (i71 + i47 | 0) / (i50 | 0) | 0;
         i73 = 1 << i70;
         i76 = (i70 | 0) > 0 ? ((i72 | 0) < (i73 | 0) ? i72 : i73 + -1 | 0) : i72;
        } else {
         i72 = (i47 - i71 | 0) / (i50 | 0) | 0;
         i71 = 1 << i70;
         i76 = 0 - ((i70 | 0) > 0 ? ((i72 | 0) < (i71 | 0) ? i72 : i71 + -1 | 0) : i72) | 0;
        }
        HEAP16[i15 >> 1] = i76;
       }
       i72 = HEAP32[i44 >> 2] | 0;
       if ((i72 | 0) != 0 & (HEAP16[i14 >> 1] | 0) == 0) {
        i71 = Math_imul(i49, i63 - i61 - i69 + i67 | 0) | 0;
        if ((i71 | 0) > -1) {
         i70 = (i71 + i28 | 0) / (i51 | 0) | 0;
         i73 = 1 << i72;
         i77 = (i72 | 0) > 0 ? ((i70 | 0) < (i73 | 0) ? i70 : i73 + -1 | 0) : i70;
        } else {
         i70 = (i28 - i71 | 0) / (i51 | 0) | 0;
         i71 = 1 << i72;
         i77 = 0 - ((i72 | 0) > 0 ? ((i70 | 0) < (i71 | 0) ? i70 : i71 + -1 | 0) : i70) | 0;
        }
        HEAP16[i14 >> 1] = i77;
       }
       i70 = HEAP32[i27 >> 2] | 0;
       if ((i70 | 0) != 0 & (HEAP16[i12 >> 1] | 0) == 0) {
        i71 = Math_imul(i21, i62 - (i58 << 1) + i68 | 0) | 0;
        if ((i71 | 0) > -1) {
         i72 = (i71 + i32 | 0) / (i33 | 0) | 0;
         i73 = 1 << i70;
         i78 = (i70 | 0) > 0 ? ((i72 | 0) < (i73 | 0) ? i72 : i73 + -1 | 0) : i72;
        } else {
         i72 = (i32 - i71 | 0) / (i33 | 0) | 0;
         i71 = 1 << i70;
         i78 = 0 - ((i70 | 0) > 0 ? ((i72 | 0) < (i71 | 0) ? i72 : i71 + -1 | 0) : i72) | 0;
        }
        HEAP16[i12 >> 1] = i78;
       }
       FUNCTION_TABLE_viiiii[i22 & 31](i1, i20, i4, i52, i53);
       i79 = HEAP32[i31 >> 2] | 0;
       i56 = i56 + 1 | 0;
       if (i56 >>> 0 > i59 >>> 0) break; else {
        i72 = i57;
        i71 = i58;
        i70 = i60;
        i60 = i67;
        i58 = i68;
        i57 = i69;
        i64 = i64 + 128 | 0;
        i53 = i79 + i53 | 0;
        i65 = i65 + 128 | 0;
        i66 = i66 + 128 | 0;
        i63 = i72;
        i62 = i71;
        i61 = i70;
       }
      }
      i34 = i34 + 1 | 0;
      if ((i34 | 0) == (i25 | 0)) break; else i52 = i52 + (i79 << 2) | 0;
     }
    }
   }
   i18 = i18 + 1 | 0;
   if ((i18 | 0) >= (HEAP32[i10 >> 2] | 0)) {
    i80 = i8;
    break;
   } else i20 = i20 + 84 | 0;
  }
 } else i80 = i1 + 156 | 0;
 i1 = (HEAP32[i80 >> 2] | 0) + 1 | 0;
 HEAP32[i80 >> 2] = i1;
 i19 = i1 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0 ? 3 : 4;
 STACKTOP = i3;
 return i19 | 0;
}

function __ZN6vision18BinomialPyramid32f5buildERKNS_5ImageE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 if ((HEAP32[i2 >> 2] | 0) != 1) {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25217, 50) | 0, 25032, 130) | 0, 33554, 6) | 0, 330) | 0, 33561, 2) | 0, 25268, 23) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 if ((HEAP32[i2 + 16 >> 2] | 0) != 1) {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25292, 44) | 0, 25032, 130) | 0, 33554, 6) | 0, 331) | 0, 33561, 2) | 0, 25337, 25) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i7 = i1 + 16 | 0;
 i8 = i1 + 20 | 0;
 i9 = i6;
 if (((HEAP32[i1 + 8 >> 2] | 0) - i6 >> 5 | 0) != (Math_imul(HEAP32[i8 >> 2] | 0, HEAP32[i7 >> 2] | 0) | 0)) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25363, 73) | 0, 25032, 130) | 0, 33554, 6) | 0, 333) | 0, 33561, 2) | 0, 25437, 34) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if ((HEAP32[i2 + 4 >> 2] | 0) != (HEAP32[i9 + 4 >> 2] | 0)) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25472, 59) | 0, 25032, 130) | 0, 33554, 6) | 0, 334) | 0, 33561, 2) | 0, 25532, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if ((HEAP32[i2 + 8 >> 2] | 0) != (HEAP32[i9 + 8 >> 2] | 0)) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25564, 61) | 0, 25032, 130) | 0, 33554, 6) | 0, 335) | 0, 33561, 2) | 0, 25532, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i9, i2);
 i2 = HEAP32[i5 >> 2] | 0;
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i2 + 32 | 0, i2);
 i2 = HEAP32[i5 >> 2] | 0;
 i9 = i2 + 32 | 0;
 i6 = i1 + 56 | 0;
 __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim(i4, HEAP32[i6 >> 2] | 0, HEAP32[i9 >> 2] | 0, HEAP32[i2 + 36 >> 2] | 0, HEAP32[i2 + 40 >> 2] | 0, HEAP32[i2 + 44 >> 2] | 0, 1);
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i4, i9);
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i2 + 64 | 0, i4);
 __ZN6vision5ImageD2Ev(i4);
 if ((HEAP32[i7 >> 2] | 0) >>> 0 <= 1) {
  STACKTOP = i3;
  return;
 }
 i2 = 1;
 do {
  i9 = Math_imul(HEAP32[i8 >> 2] | 0, i2) | 0;
  i11 = HEAP32[i5 >> 2] | 0;
  i10 = i11 + (i9 << 5) | 0;
  i12 = i9 + -1 | 0;
  i13 = HEAP32[i11 + (i12 << 5) + 24 >> 2] | 0;
  i14 = HEAP32[i11 + (i12 << 5) + 4 >> 2] | 0;
  i15 = i14 >>> 1;
  i16 = (HEAP32[i11 + (i12 << 5) + 8 >> 2] | 0) >>> 1;
  if (i16 | 0 ? (i12 = i14 << 1, i15 | 0) : 0) {
   i17 = 0;
   i18 = HEAP32[i11 + (i9 << 5) + 24 >> 2] | 0;
   while (1) {
    i19 = i13 + ((Math_imul(i12, i17) | 0) << 2) | 0;
    i20 = i19 + (i14 << 2) | 0;
    i21 = i19;
    i19 = 0;
    i22 = i18;
    while (1) {
     HEAPF32[i22 >> 2] = (+HEAPF32[i21 >> 2] + +HEAPF32[i21 + 4 >> 2] + +HEAPF32[i20 >> 2] + +HEAPF32[i20 + 4 >> 2]) * .25;
     i19 = i19 + 1 | 0;
     if ((i19 | 0) == (i15 | 0)) break; else {
      i20 = i20 + 8 | 0;
      i21 = i21 + 8 | 0;
      i22 = i22 + 4 | 0;
     }
    }
    i17 = i17 + 1 | 0;
    if ((i17 | 0) == (i16 | 0)) break; else i18 = i18 + (i15 << 2) | 0;
   }
  }
  __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i11 + (i9 + 1 << 5) | 0, i10);
  i15 = Math_imul(HEAP32[i8 >> 2] | 0, i2) | 0;
  i18 = HEAP32[i5 >> 2] | 0;
  i16 = i15 + 1 | 0;
  i17 = i18 + (i16 << 5) | 0;
  __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim(i4, HEAP32[i6 >> 2] | 0, HEAP32[i17 >> 2] | 0, HEAP32[i18 + (i16 << 5) + 4 >> 2] | 0, HEAP32[i18 + (i16 << 5) + 8 >> 2] | 0, HEAP32[i18 + (i16 << 5) + 12 >> 2] | 0, 1);
  __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i4, i17);
  __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i18 + (i15 + 2 << 5) | 0, i4);
  __ZN6vision5ImageD2Ev(i4);
  i2 = i2 + 1 | 0;
 } while (i2 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0);
 STACKTOP = i3;
 return;
}

function __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = i11 + 12 | 0;
 i13 = i11;
 if (i1) {
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58716) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 63](i12, i1);
  i14 = HEAP32[i12 >> 2] | 0;
  HEAP8[i3 >> 0] = i14;
  HEAP8[i3 + 1 >> 0] = i14 >> 8;
  HEAP8[i3 + 2 >> 0] = i14 >> 16;
  HEAP8[i3 + 3 >> 0] = i14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 63](i13, i1);
  i14 = i9 + 11 | 0;
  if ((HEAP8[i14 >> 0] | 0) < 0) {
   i15 = HEAP32[i9 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i15, i12);
   HEAP32[i9 + 4 >> 2] = 0;
   i16 = i9;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i12);
   HEAP8[i14 >> 0] = 0;
   i16 = i9;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i9, 0);
  HEAP32[i16 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i16 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i16 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i16 = 0;
  while (1) {
   if ((i16 | 0) == 3) break;
   HEAP32[i13 + (i16 << 2) >> 2] = 0;
   i16 = i16 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i13, i1);
  i16 = i8 + 11 | 0;
  if ((HEAP8[i16 >> 0] | 0) < 0) {
   i14 = HEAP32[i8 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i14, i12);
   HEAP32[i8 + 4 >> 2] = 0;
   i17 = i8;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i12);
   HEAP8[i16 >> 0] = 0;
   i17 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i17 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i17 = 0;
  while (1) {
   if ((i17 | 0) == 3) break;
   HEAP32[i13 + (i17 << 2) >> 2] = 0;
   i17 = i17 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
  HEAP8[i4 >> 0] = i17;
  i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
  HEAP8[i5 >> 0] = i17;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i13, i1);
  i17 = i6 + 11 | 0;
  if ((HEAP8[i17 >> 0] | 0) < 0) {
   i16 = HEAP32[i6 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i12);
   HEAP32[i6 + 4 >> 2] = 0;
   i18 = i6;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i12);
   HEAP8[i17 >> 0] = 0;
   i18 = i6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i6, 0);
  HEAP32[i18 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i18 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i18 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i18 = 0;
  while (1) {
   if ((i18 | 0) == 3) break;
   HEAP32[i13 + (i18 << 2) >> 2] = 0;
   i18 = i18 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 63](i13, i1);
  i18 = i7 + 11 | 0;
  if ((HEAP8[i18 >> 0] | 0) < 0) {
   i17 = HEAP32[i7 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i17, i12);
   HEAP32[i7 + 4 >> 2] = 0;
   i19 = i7;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i12);
   HEAP8[i18 >> 0] = 0;
   i19 = i7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i7, 0);
  HEAP32[i19 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i19 = 0;
  while (1) {
   if ((i19 | 0) == 3) break;
   HEAP32[i13 + (i19 << 2) >> 2] = 0;
   i19 = i19 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 } else {
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58708) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 63](i12, i1);
  i2 = HEAP32[i12 >> 2] | 0;
  HEAP8[i3 >> 0] = i2;
  HEAP8[i3 + 1 >> 0] = i2 >> 8;
  HEAP8[i3 + 2 >> 0] = i2 >> 16;
  HEAP8[i3 + 3 >> 0] = i2 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 63](i13, i1);
  i2 = i9 + 11 | 0;
  if ((HEAP8[i2 >> 0] | 0) < 0) {
   i3 = HEAP32[i9 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i3, i12);
   HEAP32[i9 + 4 >> 2] = 0;
   i21 = i9;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i12);
   HEAP8[i2 >> 0] = 0;
   i21 = i9;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i9, 0);
  HEAP32[i21 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i21 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i21 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i21 = 0;
  while (1) {
   if ((i21 | 0) == 3) break;
   HEAP32[i13 + (i21 << 2) >> 2] = 0;
   i21 = i21 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i13, i1);
  i21 = i8 + 11 | 0;
  if ((HEAP8[i21 >> 0] | 0) < 0) {
   i9 = HEAP32[i8 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i12);
   HEAP32[i8 + 4 >> 2] = 0;
   i22 = i8;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i8, i12);
   HEAP8[i21 >> 0] = 0;
   i22 = i8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i8, 0);
  HEAP32[i22 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i22 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i22 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i22 = 0;
  while (1) {
   if ((i22 | 0) == 3) break;
   HEAP32[i13 + (i22 << 2) >> 2] = 0;
   i22 = i22 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
  HEAP8[i4 >> 0] = i22;
  i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
  HEAP8[i5 >> 0] = i22;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i13, i1);
  i22 = i6 + 11 | 0;
  if ((HEAP8[i22 >> 0] | 0) < 0) {
   i5 = HEAP32[i6 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i12);
   HEAP32[i6 + 4 >> 2] = 0;
   i23 = i6;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i12);
   HEAP8[i22 >> 0] = 0;
   i23 = i6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i6, 0);
  HEAP32[i23 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i23 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i23 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i23 = 0;
  while (1) {
   if ((i23 | 0) == 3) break;
   HEAP32[i13 + (i23 << 2) >> 2] = 0;
   i23 = i23 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 63](i13, i1);
  i23 = i7 + 11 | 0;
  if ((HEAP8[i23 >> 0] | 0) < 0) {
   i6 = HEAP32[i7 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i12);
   HEAP32[i7 + 4 >> 2] = 0;
   i24 = i7;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i12);
   HEAP8[i23 >> 0] = 0;
   i24 = i7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i7, 0);
  HEAP32[i24 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i24 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i24 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i24 = 0;
  while (1) {
   if ((i24 | 0) == 3) break;
   HEAP32[i13 + (i24 << 2) >> 2] = 0;
   i24 = i24 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 }
 HEAP32[i10 >> 2] = i20;
 STACKTOP = i11;
 return;
}

function _ar2ReadSurfaceSet(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 1248 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1248);
 i5 = i4 + 1232 | 0;
 i6 = i4 + 1224 | 0;
 i7 = i4 + 1208 | 0;
 i8 = i4 + 1200 | 0;
 i9 = i4 + 1184 | 0;
 i10 = i4 + 1176 | 0;
 i11 = i4 + 1160 | 0;
 i12 = i4 + 1152 | 0;
 i13 = i4 + 1144 | 0;
 i14 = i4 + 1136 | 0;
 i15 = i4 + 1128 | 0;
 i16 = i4 + 1120 | 0;
 i17 = i4 + 1112 | 0;
 i18 = i4 + 1104 | 0;
 i19 = i4 + 1096 | 0;
 i20 = i4 + 1088 | 0;
 i21 = i4 + 1080 | 0;
 i22 = i4 + 1072 | 0;
 i23 = i4 + 1064 | 0;
 i24 = i4 + 1056 | 0;
 i25 = i4 + 1048 | 0;
 i26 = i4 + 1040 | 0;
 i27 = i4 + 1032 | 0;
 i28 = i4 + 1024 | 0;
 i29 = i4 + 768 | 0;
 i30 = i4 + 512 | 0;
 i31 = i4 + 1236 | 0;
 i32 = i4;
 do if (((i2 | 0) != 0 ? (HEAP8[i2 >> 0] | 0) != 0 : 0) ? (_strcmp(i2, 44587) | 0) != 0 : 0) {
  HEAP32[i28 >> 2] = i1;
  HEAP32[i28 + 4 >> 2] = i2;
  _sprintf(i32, 20527, i28) | 0;
  i33 = _fopen(i32, 19682) | 0;
  if (i33 | 0) {
   i34 = i33;
   i35 = 1;
   break;
  }
  HEAP32[i27 >> 2] = i1;
  _arLog(0, 3, 19684, i27);
  i33 = ___errno_location() | 0;
  i36 = _strerror(HEAP32[i33 >> 2] | 0) | 0;
  HEAP32[i26 >> 2] = 58932;
  HEAP32[i26 + 4 >> 2] = i36;
  _arLog(0, 3, 19710, i26);
  i37 = 0;
  STACKTOP = i4;
  return i37 | 0;
 } else i38 = 4; while (0);
 if ((i38 | 0) == 4) {
  _strncpy(i30, i1, 255) | 0;
  HEAP8[i30 + 255 >> 0] = 0;
  i34 = 0;
  i35 = 0;
 }
 i1 = _malloc(1140) | 0;
 if (!i1) {
  _arLog(0, 3, 20510, i25);
  _exit(1);
 }
 i25 = (i35 | 0) != 0;
 L15 : do if (i25) {
  L17 : do if (_fgets(i29, 256, i34) | 0) {
   L19 : while (1) {
    switch (HEAP8[i29 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L19;
    }
    if (!(_fgets(i29, 256, i34) | 0)) break L17;
   }
   HEAP32[i24 >> 2] = i31;
   if ((_sscanf(i29, 19716, i24) | 0) != 1) {
    _fclose(i34) | 0;
    _free(i1);
    i37 = 0;
    STACKTOP = i4;
    return i37 | 0;
   }
   i35 = HEAP32[i31 >> 2] | 0;
   if ((i35 | 0) >= 1) {
    i39 = i35;
    break L15;
   }
   _fclose(i34) | 0;
   _free(i1);
   i37 = 0;
   STACKTOP = i4;
   return i37 | 0;
  } while (0);
  _fclose(i34) | 0;
  _free(i1);
  i37 = 0;
  STACKTOP = i4;
  return i37 | 0;
 } else i39 = 1; while (0);
 HEAP32[i1 + 4 >> 2] = i39;
 HEAP32[i1 + 152 >> 2] = 0;
 i24 = _malloc(i39 * 112 | 0) | 0;
 HEAP32[i1 >> 2] = i24;
 if (!i24) {
  _arLog(0, 3, 20510, i23);
  _exit(1);
 }
 HEAP32[i31 >> 2] = 0;
 i23 = (i3 | 0) == 0;
 i35 = 0;
 L35 : while (1) {
  HEAP32[i22 >> 2] = i35 + 1;
  _arLog(0, 1, 19719, i22);
  if (i25) {
   if (!(_fgets(i29, 256, i34) | 0)) {
    i38 = 66;
    break;
   }
   L40 : while (1) {
    switch (HEAP8[i29 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L40;
    }
    if (!(_fgets(i29, 256, i34) | 0)) {
     i38 = 66;
     break L35;
    }
   }
   HEAP32[i21 >> 2] = i30;
   if ((_sscanf(i29, 19743, i21) | 0) != 1) {
    i38 = 66;
    break;
   }
   _ar2UtilRemoveExt(i30) | 0;
  }
  _arLog(0, 1, 19746, i20);
  i26 = _ar2ReadImageSet(i30) | 0;
  HEAP32[i24 + ((HEAP32[i31 >> 2] | 0) * 112 | 0) >> 2] = i26;
  if (!i26) {
   i38 = 31;
   break;
  }
  _arLog(0, 1, 19795, i18);
  _arLog(0, 1, 19805, i17);
  i26 = _ar2ReadFeatureSet(i30, 44587) | 0;
  HEAP32[i24 + ((HEAP32[i31 >> 2] | 0) * 112 | 0) + 4 >> 2] = i26;
  if (!i26) {
   i38 = 34;
   break;
  }
  _arLog(0, 1, 19795, i15);
  if (i23) HEAP32[i24 + ((HEAP32[i31 >> 2] | 0) * 112 | 0) + 8 >> 2] = 0; else {
   _arLog(0, 1, 19856, i14);
   _ar2UtilRemoveExt(i30) | 0;
   i26 = _ar2ReadMarkerSet(i30, 19875, i3) | 0;
   HEAP32[i24 + ((HEAP32[i31 >> 2] | 0) * 112 | 0) + 8 >> 2] = i26;
   if (!i26) {
    i38 = 38;
    break;
   }
   _arLog(0, 1, 19795, i12);
  }
  if (i25) {
   if (!(_fgets(i29, 256, i34) | 0)) {
    i38 = 66;
    break;
   }
   L56 : while (1) {
    switch (HEAP8[i29 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L56;
    }
    if (!(_fgets(i29, 256, i34) | 0)) {
     i38 = 66;
     break L35;
    }
   }
   i26 = HEAP32[i31 >> 2] | 0;
   HEAP32[i11 >> 2] = i24 + (i26 * 112 | 0) + 12;
   HEAP32[i11 + 4 >> 2] = i24 + (i26 * 112 | 0) + 16;
   HEAP32[i11 + 8 >> 2] = i24 + (i26 * 112 | 0) + 20;
   HEAP32[i11 + 12 >> 2] = i24 + (i26 * 112 | 0) + 24;
   if ((_sscanf(i29, 19909, i11) | 0) != 4) {
    i38 = 48;
    break;
   }
   if (!(_fgets(i29, 256, i34) | 0)) {
    i38 = 66;
    break;
   }
   L62 : while (1) {
    switch (HEAP8[i29 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L62;
    }
    if (!(_fgets(i29, 256, i34) | 0)) {
     i38 = 66;
     break L35;
    }
   }
   i26 = HEAP32[i31 >> 2] | 0;
   HEAP32[i9 >> 2] = i24 + (i26 * 112 | 0) + 28;
   HEAP32[i9 + 4 >> 2] = i24 + (i26 * 112 | 0) + 32;
   HEAP32[i9 + 8 >> 2] = i24 + (i26 * 112 | 0) + 36;
   HEAP32[i9 + 12 >> 2] = i24 + (i26 * 112 | 0) + 40;
   if ((_sscanf(i29, 19909, i9) | 0) != 4) {
    i38 = 54;
    break;
   }
   if (!(_fgets(i29, 256, i34) | 0)) {
    i38 = 66;
    break;
   }
   L68 : while (1) {
    switch (HEAP8[i29 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L68;
    }
    if (!(_fgets(i29, 256, i34) | 0)) {
     i38 = 66;
     break L35;
    }
   }
   i26 = HEAP32[i31 >> 2] | 0;
   HEAP32[i7 >> 2] = i24 + (i26 * 112 | 0) + 44;
   HEAP32[i7 + 4 >> 2] = i24 + (i26 * 112 | 0) + 48;
   HEAP32[i7 + 8 >> 2] = i24 + (i26 * 112 | 0) + 52;
   HEAP32[i7 + 12 >> 2] = i24 + (i26 * 112 | 0) + 56;
   if ((_sscanf(i29, 19909, i7) | 0) != 4) {
    i38 = 61;
    break;
   }
   i40 = HEAP32[i31 >> 2] | 0;
  } else {
   i26 = HEAP32[i31 >> 2] | 0;
   HEAPF32[i24 + (i26 * 112 | 0) + 12 >> 2] = 1.0;
   i27 = i24 + (i26 * 112 | 0) + 16 | 0;
   HEAP32[i27 >> 2] = 0;
   HEAP32[i27 + 4 >> 2] = 0;
   HEAP32[i27 + 8 >> 2] = 0;
   HEAP32[i27 + 12 >> 2] = 0;
   HEAPF32[i24 + (i26 * 112 | 0) + 32 >> 2] = 1.0;
   i27 = i24 + (i26 * 112 | 0) + 36 | 0;
   HEAP32[i27 >> 2] = 0;
   HEAP32[i27 + 4 >> 2] = 0;
   HEAP32[i27 + 8 >> 2] = 0;
   HEAP32[i27 + 12 >> 2] = 0;
   HEAPF32[i24 + (i26 * 112 | 0) + 52 >> 2] = 1.0;
   HEAPF32[i24 + (i26 * 112 | 0) + 56 >> 2] = 0.0;
   i40 = i26;
  }
  _arUtilMatInvf(i24 + (i40 * 112 | 0) + 12 | 0, i24 + (i40 * 112 | 0) + 60 | 0) | 0;
  _ar2UtilReplaceExt(i30, 256, 19957) | 0;
  i26 = _malloc(256) | 0;
  HEAP32[i24 + ((HEAP32[i31 >> 2] | 0) * 112 | 0) + 108 >> 2] = i26;
  if (!i26) {
   i38 = 64;
   break;
  }
  _strncpy(i26, i30, 256) | 0;
  i35 = (HEAP32[i31 >> 2] | 0) + 1 | 0;
  HEAP32[i31 >> 2] = i35;
  if ((i35 | 0) >= (i39 | 0)) {
   i38 = 66;
   break;
  }
 }
 if ((i38 | 0) == 31) {
  HEAP32[i19 >> 2] = i30;
  _arLog(0, 3, 19764, i19);
  _free(i24);
  _free(i1);
  if (!i34) {
   i37 = 0;
   STACKTOP = i4;
   return i37 | 0;
  }
  _fclose(i34) | 0;
  i37 = 0;
  STACKTOP = i4;
  return i37 | 0;
 } else if ((i38 | 0) == 34) {
  HEAP32[i16 >> 2] = i30;
  _arLog(0, 3, 19825, i16);
  _ar2FreeImageSet(i24 + ((HEAP32[i31 >> 2] | 0) * 112 | 0) | 0) | 0;
  _free(i24);
  _free(i1);
  if (!i34) {
   i37 = 0;
   STACKTOP = i4;
   return i37 | 0;
  }
  _fclose(i34) | 0;
  i37 = 0;
  STACKTOP = i4;
  return i37 | 0;
 } else if ((i38 | 0) == 38) {
  HEAP32[i13 >> 2] = i30;
  _arLog(0, 3, 19879, i13);
  _ar2FreeFeatureSet(i24 + ((HEAP32[i31 >> 2] | 0) * 112 | 0) + 4 | 0) | 0;
  _ar2FreeImageSet(i24 + ((HEAP32[i31 >> 2] | 0) * 112 | 0) | 0) | 0;
  _free(i24);
  _free(i1);
  if (!i34) {
   i37 = 0;
   STACKTOP = i4;
   return i37 | 0;
  }
  _fclose(i34) | 0;
  i37 = 0;
  STACKTOP = i4;
  return i37 | 0;
 } else if ((i38 | 0) == 48) {
  _arLog(0, 3, 19921, i10);
  _fclose(i34) | 0;
  _exit(0);
 } else if ((i38 | 0) == 54) {
  _arLog(0, 3, 19921, i8);
  _fclose(i34) | 0;
  _exit(0);
 } else if ((i38 | 0) == 61) {
  _arLog(0, 3, 19921, i6);
  _fclose(i34) | 0;
  _exit(0);
 } else if ((i38 | 0) == 64) {
  _arLog(0, 3, 20510, i5);
  _exit(1);
 } else if ((i38 | 0) == 66) {
  if (i34 | 0) _fclose(i34) | 0;
  if ((HEAP32[i31 >> 2] | 0) < (i39 | 0)) _exit(0); else {
   i37 = i1;
   STACKTOP = i4;
   return i37 | 0;
  }
 }
 return 0;
}

function __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i12 = i11 + 12 | 0;
 i13 = i11;
 if (i1) {
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58732) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 63](i12, i1);
  i14 = HEAP32[i12 >> 2] | 0;
  HEAP8[i3 >> 0] = i14;
  HEAP8[i3 + 1 >> 0] = i14 >> 8;
  HEAP8[i3 + 2 >> 0] = i14 >> 16;
  HEAP8[i3 + 3 >> 0] = i14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 63](i13, i1);
  i14 = i9 + 8 + 3 | 0;
  if ((HEAP8[i14 >> 0] | 0) < 0) {
   i15 = HEAP32[i9 >> 2] | 0;
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i15, i12);
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i9, i12);
   HEAP8[i14 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i9, 0);
  HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i14 = 0;
  while (1) {
   if ((i14 | 0) == 3) break;
   HEAP32[i13 + (i14 << 2) >> 2] = 0;
   i14 = i14 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i13, i1);
  i14 = i8 + 8 + 3 | 0;
  if ((HEAP8[i14 >> 0] | 0) < 0) {
   i15 = HEAP32[i8 >> 2] | 0;
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i15, i12);
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i8, i12);
   HEAP8[i14 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i8, 0);
  HEAP32[i8 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i14 = 0;
  while (1) {
   if ((i14 | 0) == 3) break;
   HEAP32[i13 + (i14 << 2) >> 2] = 0;
   i14 = i14 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
  HEAP32[i4 >> 2] = i14;
  i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
  HEAP32[i5 >> 2] = i14;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i13, i1);
  i14 = i6 + 11 | 0;
  if ((HEAP8[i14 >> 0] | 0) < 0) {
   i15 = HEAP32[i6 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i15, i12);
   HEAP32[i6 + 4 >> 2] = 0;
   i16 = i6;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i12);
   HEAP8[i14 >> 0] = 0;
   i16 = i6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i6, 0);
  HEAP32[i16 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i16 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i16 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i16 = 0;
  while (1) {
   if ((i16 | 0) == 3) break;
   HEAP32[i13 + (i16 << 2) >> 2] = 0;
   i16 = i16 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 63](i13, i1);
  i16 = i7 + 8 + 3 | 0;
  if ((HEAP8[i16 >> 0] | 0) < 0) {
   i14 = HEAP32[i7 >> 2] | 0;
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i14, i12);
   HEAP32[i7 + 4 >> 2] = 0;
  } else {
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i7, i12);
   HEAP8[i16 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i16 = 0;
  while (1) {
   if ((i16 | 0) == 3) break;
   HEAP32[i13 + (i16 << 2) >> 2] = 0;
   i16 = i16 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 } else {
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58724) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 63](i12, i1);
  i2 = HEAP32[i12 >> 2] | 0;
  HEAP8[i3 >> 0] = i2;
  HEAP8[i3 + 1 >> 0] = i2 >> 8;
  HEAP8[i3 + 2 >> 0] = i2 >> 16;
  HEAP8[i3 + 3 >> 0] = i2 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 63](i13, i1);
  i2 = i9 + 8 + 3 | 0;
  if ((HEAP8[i2 >> 0] | 0) < 0) {
   i3 = HEAP32[i9 >> 2] | 0;
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i3, i12);
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i9, i12);
   HEAP8[i2 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i9, 0);
  HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i9 = 0;
  while (1) {
   if ((i9 | 0) == 3) break;
   HEAP32[i13 + (i9 << 2) >> 2] = 0;
   i9 = i9 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i13, i1);
  i9 = i8 + 8 + 3 | 0;
  if ((HEAP8[i9 >> 0] | 0) < 0) {
   i2 = HEAP32[i8 >> 2] | 0;
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i2, i12);
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i8, i12);
   HEAP8[i9 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i8, 0);
  HEAP32[i8 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i8 = 0;
  while (1) {
   if ((i8 | 0) == 3) break;
   HEAP32[i13 + (i8 << 2) >> 2] = 0;
   i8 = i8 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
  HEAP32[i4 >> 2] = i8;
  i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
  HEAP32[i5 >> 2] = i8;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i13, i1);
  i8 = i6 + 11 | 0;
  if ((HEAP8[i8 >> 0] | 0) < 0) {
   i5 = HEAP32[i6 >> 2] | 0;
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i12);
   HEAP32[i6 + 4 >> 2] = 0;
   i18 = i6;
  } else {
   HEAP8[i12 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i12);
   HEAP8[i8 >> 0] = 0;
   i18 = i6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i6, 0);
  HEAP32[i18 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i18 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i18 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i18 = 0;
  while (1) {
   if ((i18 | 0) == 3) break;
   HEAP32[i13 + (i18 << 2) >> 2] = 0;
   i18 = i18 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 63](i13, i1);
  i18 = i7 + 8 + 3 | 0;
  if ((HEAP8[i18 >> 0] | 0) < 0) {
   i6 = HEAP32[i7 >> 2] | 0;
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i6, i12);
   HEAP32[i7 + 4 >> 2] = 0;
  } else {
   HEAP32[i12 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i7, i12);
   HEAP8[i18 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
  i7 = 0;
  while (1) {
   if ((i7 | 0) == 3) break;
   HEAP32[i13 + (i7 << 2) >> 2] = 0;
   i7 = i7 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
  i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 }
 HEAP32[i10 >> 2] = i17;
 STACKTOP = i11;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i9 + 12 | 0;
 i11 = i9 + 8 | 0;
 i12 = i9 + 4 | 0;
 i13 = i9;
 __ZNKSt3__28ios_base6getlocEv(i10, i4);
 i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
 __ZNSt3__26localeD2Ev(i10);
 HEAP32[i5 >> 2] = 0;
 i15 = i14 + 8 | 0;
 i16 = i7;
 i7 = 0;
 L1 : while (1) {
  i17 = HEAP32[i2 >> 2] | 0;
  if (!((i16 | 0) != (i8 | 0) & (i7 | 0) == 0)) {
   i18 = i17;
   break;
  }
  i19 = i17;
  if (i17) {
   i20 = HEAP32[i17 + 12 >> 2] | 0;
   if ((i20 | 0) == (HEAP32[i17 + 16 >> 2] | 0)) i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i17 >> 2] | 0) + 36 >> 2] & 127](i17) | 0; else i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i20 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i22 = 0;
    i23 = 1;
    i24 = 0;
   } else {
    i22 = i17;
    i23 = 0;
    i24 = i19;
   }
  } else {
   i22 = 0;
   i23 = 1;
   i24 = i19;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  i17 = i19;
  do if (i19) {
   i20 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i20 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i20 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i23) {
    i26 = i19;
    i27 = i17;
    break;
   } else {
    i28 = 63;
    break L1;
   } else {
    HEAP32[i3 >> 2] = 0;
    i29 = 0;
    i28 = 15;
    break;
   }
  } else {
   i29 = i17;
   i28 = 15;
  } while (0);
  if ((i28 | 0) == 15) {
   i28 = 0;
   if (i23) {
    i28 = 63;
    break;
   } else {
    i26 = 0;
    i27 = i29;
   }
  }
  L24 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i14 >> 2] | 0) + 36 >> 2] & 63](i14, HEAP8[i16 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
   i17 = i16 + 1 | 0;
   if ((i17 | 0) == (i8 | 0)) {
    i28 = 63;
    break L1;
   }
   i19 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i14 >> 2] | 0) + 36 >> 2] & 63](i14, HEAP8[i17 >> 0] | 0, 0) | 0;
   switch (i19 << 24 >> 24) {
   case 48:
   case 69:
    {
     i20 = i16 + 2 | 0;
     if ((i20 | 0) == (i8 | 0)) {
      i28 = 63;
      break L1;
     }
     i30 = i19;
     i31 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i14 >> 2] | 0) + 36 >> 2] & 63](i14, HEAP8[i20 >> 0] | 0, 0) | 0;
     i32 = i17;
     break;
    }
   default:
    {
     i30 = 0;
     i31 = i19;
     i32 = i16;
    }
   }
   i19 = HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i12 >> 2] = i24;
   HEAP32[i13 >> 2] = i27;
   HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i13 >> 2];
   i17 = FUNCTION_TABLE_iiiiiiiii[i19 & 15](i1, i11, i10, i4, i5, i6, i31, i30) | 0;
   HEAP32[i2 >> 2] = i17;
   i33 = i32 + 2 | 0;
  } else {
   i17 = HEAP8[i16 >> 0] | 0;
   if (i17 << 24 >> 24 > -1 ? (i19 = HEAP32[i15 >> 2] | 0, HEAP16[i19 + (i17 << 24 >> 24 << 1) >> 1] & 8192) : 0) {
    i17 = i16;
    while (1) {
     i20 = i17 + 1 | 0;
     if ((i20 | 0) == (i8 | 0)) {
      i34 = i8;
      break;
     }
     i35 = HEAP8[i20 >> 0] | 0;
     if (i35 << 24 >> 24 <= -1) {
      i34 = i20;
      break;
     }
     if (!(HEAP16[i19 + (i35 << 24 >> 24 << 1) >> 1] & 8192)) {
      i34 = i20;
      break;
     } else i17 = i20;
    }
    i17 = i26;
    i19 = i22;
    while (1) {
     if (i19) {
      i20 = HEAP32[i19 + 12 >> 2] | 0;
      if ((i20 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i20 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i36, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[i2 >> 2] = 0;
       i37 = 0;
       i38 = 1;
      } else {
       i37 = i19;
       i38 = 0;
      }
     } else {
      i37 = 0;
      i38 = 1;
     }
     do if (i17) {
      i20 = HEAP32[i17 + 12 >> 2] | 0;
      if ((i20 | 0) == (HEAP32[i17 + 16 >> 2] | 0)) i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i17 >> 2] | 0) + 36 >> 2] & 127](i17) | 0; else i39 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i20 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i39, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i38) {
       i40 = i17;
       break;
      } else {
       i33 = i34;
       break L24;
      } else {
       HEAP32[i3 >> 2] = 0;
       i28 = 42;
       break;
      }
     } else i28 = 42; while (0);
     if ((i28 | 0) == 42) {
      i28 = 0;
      if (i38) {
       i33 = i34;
       break L24;
      } else i40 = 0;
     }
     i20 = i37 + 12 | 0;
     i35 = HEAP32[i20 >> 2] | 0;
     i41 = i37 + 16 | 0;
     if ((i35 | 0) == (HEAP32[i41 >> 2] | 0)) i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i37 >> 2] | 0) + 36 >> 2] & 127](i37) | 0; else i42 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i35 >> 0] | 0) | 0;
     if ((i42 & 255) << 24 >> 24 <= -1) {
      i33 = i34;
      break L24;
     }
     if (!(HEAP16[(HEAP32[i15 >> 2] | 0) + (i42 << 24 >> 24 << 1) >> 1] & 8192)) {
      i33 = i34;
      break L24;
     }
     i35 = HEAP32[i20 >> 2] | 0;
     if ((i35 | 0) == (HEAP32[i41 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i37 >> 2] | 0) + 40 >> 2] & 127](i37) | 0; else {
      HEAP32[i20 >> 2] = i35 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i35 >> 0] | 0) | 0;
     }
     i17 = i40;
     i19 = i37;
    }
   }
   i19 = i22 + 12 | 0;
   i17 = HEAP32[i19 >> 2] | 0;
   i35 = i22 + 16 | 0;
   if ((i17 | 0) == (HEAP32[i35 >> 2] | 0)) i43 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i22 >> 2] | 0) + 36 >> 2] & 127](i22) | 0; else i43 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i17 >> 0] | 0) | 0;
   i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 12 >> 2] & 63](i14, i43 & 255) | 0;
   if (i17 << 24 >> 24 != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 12 >> 2] & 63](i14, HEAP8[i16 >> 0] | 0) | 0) << 24 >> 24) {
    HEAP32[i5 >> 2] = 4;
    i33 = i16;
    break;
   }
   i17 = HEAP32[i19 >> 2] | 0;
   if ((i17 | 0) == (HEAP32[i35 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i22 >> 2] | 0) + 40 >> 2] & 127](i22) | 0; else {
    HEAP32[i19 >> 2] = i17 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i17 >> 0] | 0) | 0;
   }
   i33 = i16 + 1 | 0;
  } while (0);
  i16 = i33;
  i7 = HEAP32[i5 >> 2] | 0;
 }
 if ((i28 | 0) == 63) {
  HEAP32[i5 >> 2] = 4;
  i18 = i22;
 }
 if (i18) {
  i22 = HEAP32[i18 + 12 >> 2] | 0;
  if ((i22 | 0) == (HEAP32[i18 + 16 >> 2] | 0)) i44 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i18 >> 2] | 0) + 36 >> 2] & 127](i18) | 0; else i44 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i22 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i44, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i45 = 0;
   i46 = 1;
  } else {
   i45 = i18;
   i46 = 0;
  }
 } else {
  i45 = 0;
  i46 = 1;
 }
 i18 = HEAP32[i3 >> 2] | 0;
 do if (i18) {
  i2 = HEAP32[i18 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i18 + 16 >> 2] | 0)) i47 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i18 >> 2] | 0) + 36 >> 2] & 127](i18) | 0; else i47 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i47, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i46) break; else {
   i28 = 78;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i28 = 76;
   break;
  }
 } else i28 = 76; while (0);
 if ((i28 | 0) == 76 ? i46 : 0) i28 = 78;
 if ((i28 | 0) == 78) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 STACKTOP = i9;
 return i45 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 40 | 0;
 i6 = i4 + 12 | 0;
 i7 = i4;
 i8 = i4 + 24 | 0;
 L1 : do if (((i2 - i1 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 68 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 118 : 0) {
  i9 = i1 + 2 | 0;
  i10 = HEAP8[i9 >> 0] | 0;
  if ((i10 + -49 & 255) < 9) {
   i11 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i9, i2) | 0;
   if ((i11 | 0) == (i2 | 0)) {
    i12 = i1;
    break;
   }
   if ((HEAP8[i11 >> 0] | 0) != 95) {
    i12 = i1;
    break;
   }
   i13 = i11 - i9 | 0;
   i14 = i11 + 1 | 0;
   if ((i14 | 0) == (i2 | 0)) {
    i12 = i1;
    break;
   }
   if ((HEAP8[i14 >> 0] | 0) != 112) {
    i15 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i14, i2, i3) | 0;
    if ((i15 | 0) == (i14 | 0)) {
     i12 = i1;
     break;
    }
    i14 = i3 + 4 | 0;
    if ((HEAP32[i3 >> 2] | 0) == (HEAP32[i14 >> 2] | 0)) {
     i12 = i1;
     break;
    };
    HEAP32[i7 >> 2] = 0;
    HEAP32[i7 + 4 >> 2] = 0;
    HEAP32[i7 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i7, i9, i13);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 50283) | 0;
    HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
    i16 = 0;
    while (1) {
     if ((i16 | 0) == 3) break;
     HEAP32[i7 + (i16 << 2) >> 2] = 0;
     i16 = i16 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50292) | 0;
    HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i5 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
    HEAP32[i5 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
    i16 = 0;
    while (1) {
     if ((i16 | 0) == 3) break;
     HEAP32[i6 + (i16 << 2) >> 2] = 0;
     i16 = i16 + 1 | 0;
    }
    i16 = HEAP8[i5 + 11 >> 0] | 0;
    i17 = i16 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i14 >> 2] | 0) + -24 | 0, i17 ? HEAP32[i5 >> 2] | 0 : i5, i17 ? HEAP32[i5 + 4 >> 2] | 0 : i16 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    i12 = i15;
    break;
   }
   i16 = i11 + 2 | 0;
   HEAP32[i7 >> 2] = 0;
   HEAP32[i7 + 4 >> 2] = 0;
   HEAP32[i7 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i7, i9, i13);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 50294) | 0;
   HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   i17 = 0;
   while (1) {
    if ((i17 | 0) == 3) break;
    HEAP32[i7 + (i17 << 2) >> 2] = 0;
    i17 = i17 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50292) | 0;
   HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   i17 = 0;
   while (1) {
    if ((i17 | 0) == 3) break;
    HEAP32[i6 + (i17 << 2) >> 2] = 0;
    i17 = i17 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i8);
   i17 = i3 + 4 | 0;
   i13 = HEAP32[i17 >> 2] | 0;
   if (i13 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i13, i5);
    HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   i12 = i16;
   break;
  };
  HEAP32[i6 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  HEAP32[i6 + 8 >> 2] = 0;
  i17 = 0;
  while (1) {
   if ((i17 | 0) == 3) break;
   HEAP32[i6 + (i17 << 2) >> 2] = 0;
   i17 = i17 + 1 | 0;
  }
  if (i10 << 24 >> 24 != 95 ? (i17 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i9, i2, i3) | 0, (i17 | 0) != (i9 | 0)) : 0) {
   i16 = i3 + 4 | 0;
   i13 = HEAP32[i16 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) != (i13 | 0)) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i13 + -24 | 0);
    i13 = i6 + 11 | 0;
    if ((HEAP8[i13 >> 0] | 0) < 0) {
     i11 = HEAP32[i6 >> 2] | 0;
     HEAP8[i5 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i11, i5);
     HEAP32[i6 + 4 >> 2] = 0;
    } else {
     HEAP8[i5 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i5);
     HEAP8[i13 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i6);
    HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
    i13 = 0;
    while (1) {
     if ((i13 | 0) == 3) break;
     HEAP32[i7 + (i13 << 2) >> 2] = 0;
     i13 = i13 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    i13 = HEAP32[i16 >> 2] | 0;
    i10 = 0;
    while (1) {
     if ((i10 | 0) == -1) break;
     i11 = i10 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13 + (i11 * 24 | 0) | 0);
     i10 = i11;
    }
    HEAP32[i16 >> 2] = i13 + -24;
    i18 = i17;
    i19 = 44;
   }
  } else {
   i18 = i9;
   i19 = 44;
  }
  do if ((i19 | 0) == 44) {
   if ((((i18 | 0) != (i2 | 0) ? (HEAP8[i18 >> 0] | 0) == 95 : 0) ? (i10 = i18 + 1 | 0, (i10 | 0) != (i2 | 0)) : 0) ? (i11 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i10, i2, i3) | 0, (i11 | 0) != (i10 | 0)) : 0) {
    i10 = i3 + 4 | 0;
    if ((HEAP32[i3 >> 2] | 0) == (HEAP32[i10 >> 2] | 0)) break;
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i7, 50283, i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50292) | 0;
    HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i5 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i5 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
    i15 = 0;
    while (1) {
     if ((i15 | 0) == 3) break;
     HEAP32[i7 + (i15 << 2) >> 2] = 0;
     i15 = i15 + 1 | 0;
    }
    i15 = HEAP8[i5 + 11 >> 0] | 0;
    i14 = i15 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i10 >> 2] | 0) + -24 | 0, i14 ? HEAP32[i5 >> 2] | 0 : i5, i14 ? HEAP32[i5 + 4 >> 2] | 0 : i15 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    i20 = i11;
   } else i20 = i1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   i12 = i20;
   break L1;
  } while (0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  i12 = i1;
 } else i12 = i1; while (0);
 STACKTOP = i4;
 return i12 | 0;
}

function _icpGetJ_U_S(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, d31 = 0.0, d32 = 0.0, d33 = 0.0, d34 = 0.0, d35 = 0.0, d36 = 0.0, d37 = 0.0, d38 = 0.0, d39 = 0.0, d40 = 0.0, d41 = 0.0, d42 = 0.0, d43 = 0.0, i44 = 0, d45 = 0.0, d46 = 0.0, i47 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 784 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(784);
 i6 = i5 + 768 | 0;
 i7 = i5 + 192 | 0;
 i8 = i5 + 48 | 0;
 i9 = i5;
 d10 = +HEAPF64[i3 >> 3];
 d11 = +HEAPF64[i4 >> 3];
 d12 = d10 * d11;
 d13 = +HEAPF64[i3 + 8 >> 3];
 d14 = +HEAPF64[i4 + 8 >> 3];
 d15 = d13 * d14;
 d16 = +HEAPF64[i3 + 16 >> 3];
 d17 = +HEAPF64[i4 + 16 >> 3];
 d18 = d16 * d17;
 d19 = +HEAPF64[i3 + 24 >> 3];
 d20 = +HEAPF64[i3 + 32 >> 3];
 d21 = +HEAPF64[i3 + 40 >> 3];
 d22 = d14 * d21;
 d23 = +HEAPF64[i3 + 48 >> 3];
 d24 = d17 * d23;
 d25 = +HEAPF64[i3 + 56 >> 3];
 d26 = +HEAPF64[i3 + 64 >> 3];
 d27 = +HEAPF64[i3 + 72 >> 3];
 d28 = d14 * d27;
 d29 = +HEAPF64[i3 + 80 >> 3];
 d30 = d17 * d29;
 d31 = +HEAPF64[i3 + 88 >> 3];
 d32 = d10 * d14;
 d33 = d10 * d17;
 d34 = d11 * d13;
 d35 = d13 * d17;
 d36 = d11 * d16;
 d37 = d14 * d16;
 d38 = d14 * d20;
 d39 = d11 * d21;
 d40 = d11 * d23;
 d41 = d14 * d26;
 d42 = d11 * d27;
 d43 = d11 * d29;
 i3 = i7 + 64 | 0;
 i4 = i7;
 i44 = i4 + 64 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i44 | 0));
 HEAPF64[i3 >> 3] = -1.0;
 i3 = i7 + 72 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 HEAPF64[i7 + 104 >> 3] = 1.0;
 i3 = i7 + 160 | 0;
 i4 = i7 + 112 | 0;
 i44 = i4 + 48 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i44 | 0));
 HEAPF64[i3 >> 3] = 1.0;
 i3 = i7 + 240 | 0;
 i4 = i7 + 168 | 0;
 i44 = i4 + 72 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i44 | 0));
 HEAPF64[i3 >> 3] = -1.0;
 i3 = i7 + 296 | 0;
 i4 = i7 + 248 | 0;
 i44 = i4 + 48 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i44 | 0));
 HEAPF64[i3 >> 3] = -1.0;
 i3 = i7 + 304 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 HEAPF64[i7 + 336 >> 3] = 1.0;
 i3 = i7 + 456 | 0;
 i4 = i7 + 344 | 0;
 i44 = i4 + 112 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i44 | 0));
 HEAPF64[i3 >> 3] = 1.0;
 i3 = i7 + 512 | 0;
 i4 = i7 + 464 | 0;
 i44 = i4 + 48 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i44 | 0));
 HEAPF64[i3 >> 3] = 1.0;
 i3 = i7 + 568 | 0;
 i4 = i7 + 520 | 0;
 i44 = i4 + 48 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i44 | 0));
 HEAPF64[i3 >> 3] = 1.0;
 i3 = 0;
 d45 = 1.0;
 d46 = -1.0;
 while (1) {
  HEAPF64[i8 + (i3 << 3) >> 3] = d16 * +HEAPF64[i7 + 528 + (i3 << 3) >> 3] + (d13 * +HEAPF64[i7 + 480 + (i3 << 3) >> 3] + (d10 * +HEAPF64[i7 + 432 + (i3 << 3) >> 3] + (d18 * +HEAPF64[i7 + 384 + (i3 << 3) >> 3] + (d37 * d45 + (d36 * +HEAPF64[i7 + 288 + (i3 << 3) >> 3] + (d35 * d46 + (d12 * +HEAPF64[i7 + (i3 << 3) >> 3] + 0.0 + d32 * +HEAPF64[i7 + 48 + (i3 << 3) >> 3] + d33 * +HEAPF64[i7 + 96 + (i3 << 3) >> 3] + d34 * +HEAPF64[i7 + 144 + (i3 << 3) >> 3] + d15 * +HEAPF64[i7 + 192 + (i3 << 3) >> 3])))))));
  i4 = i3 + 1 | 0;
  if ((i4 | 0) == 6) break;
  i3 = i4;
  d45 = +HEAPF64[i7 + 336 + (i4 << 3) >> 3];
  d46 = +HEAPF64[i7 + 240 + (i4 << 3) >> 3];
 }
 d46 = d19 + (d12 + d15 + d18);
 d18 = d11 * d20;
 d15 = d25 + (d18 + d22 + d24);
 d25 = d11 * d26;
 d11 = d31 + (d25 + d28 + d30);
 d31 = d17 * d20;
 d12 = d17 * d21;
 d19 = d14 * d23;
 d45 = d17 * d26;
 d34 = d17 * d27;
 d17 = d14 * d29;
 i3 = 0;
 d14 = -1.0;
 d33 = 1.0;
 while (1) {
  HEAPF64[i8 + 48 + (i3 << 3) >> 3] = d23 * +HEAPF64[i7 + 528 + (i3 << 3) >> 3] + (d21 * +HEAPF64[i7 + 480 + (i3 << 3) >> 3] + (d20 * +HEAPF64[i7 + 432 + (i3 << 3) >> 3] + (d24 * +HEAPF64[i7 + 384 + (i3 << 3) >> 3] + (d19 * d33 + (d40 * +HEAPF64[i7 + 288 + (i3 << 3) >> 3] + (d12 * d14 + (d18 * +HEAPF64[i7 + (i3 << 3) >> 3] + 0.0 + d38 * +HEAPF64[i7 + 48 + (i3 << 3) >> 3] + d31 * +HEAPF64[i7 + 96 + (i3 << 3) >> 3] + d39 * +HEAPF64[i7 + 144 + (i3 << 3) >> 3] + d22 * +HEAPF64[i7 + 192 + (i3 << 3) >> 3])))))));
  i4 = i3 + 1 | 0;
  if ((i4 | 0) == 6) break;
  i3 = i4;
  d14 = +HEAPF64[i7 + 240 + (i4 << 3) >> 3];
  d33 = +HEAPF64[i7 + 336 + (i4 << 3) >> 3];
 }
 i3 = 0;
 d33 = -1.0;
 d14 = 1.0;
 while (1) {
  HEAPF64[i8 + 96 + (i3 << 3) >> 3] = d29 * +HEAPF64[i7 + 528 + (i3 << 3) >> 3] + (d27 * +HEAPF64[i7 + 480 + (i3 << 3) >> 3] + (d26 * +HEAPF64[i7 + 432 + (i3 << 3) >> 3] + (d30 * +HEAPF64[i7 + 384 + (i3 << 3) >> 3] + (d17 * d14 + (d43 * +HEAPF64[i7 + 288 + (i3 << 3) >> 3] + (d34 * d33 + (d25 * +HEAPF64[i7 + (i3 << 3) >> 3] + 0.0 + d41 * +HEAPF64[i7 + 48 + (i3 << 3) >> 3] + d45 * +HEAPF64[i7 + 96 + (i3 << 3) >> 3] + d42 * +HEAPF64[i7 + 144 + (i3 << 3) >> 3] + d28 * +HEAPF64[i7 + 192 + (i3 << 3) >> 3])))))));
  i4 = i3 + 1 | 0;
  if ((i4 | 0) == 6) break;
  i3 = i4;
  d33 = +HEAPF64[i7 + 240 + (i4 << 3) >> 3];
  d14 = +HEAPF64[i7 + 336 + (i4 << 3) >> 3];
 }
 d14 = +HEAPF64[i2 >> 3];
 d33 = +HEAPF64[i2 + 8 >> 3];
 d28 = +HEAPF64[i2 + 16 >> 3];
 d42 = +HEAPF64[i2 + 24 >> 3] + (d46 * d14 + d15 * d33 + d11 * d28);
 d45 = +HEAPF64[i2 + 32 >> 3];
 d41 = +HEAPF64[i2 + 40 >> 3];
 d25 = +HEAPF64[i2 + 48 >> 3];
 d34 = +HEAPF64[i2 + 56 >> 3] + (d46 * d45 + d15 * d41 + d11 * d25);
 d43 = +HEAPF64[i2 + 64 >> 3];
 d17 = +HEAPF64[i2 + 72 >> 3];
 d30 = +HEAPF64[i2 + 80 >> 3];
 d26 = +HEAPF64[i2 + 88 >> 3] + (d46 * d43 + d15 * d17 + d11 * d30);
 if (d26 == 0.0) {
  _arLog(0, 3, 18453, i6);
  i47 = -1;
  STACKTOP = i5;
  return i47 | 0;
 } else {
  d11 = d26 * d26;
  d15 = (d14 * d26 - d42 * d43) / d11;
  HEAPF64[i9 >> 3] = d15;
  d14 = (d33 * d26 - d42 * d17) / d11;
  i6 = i9 + 8 | 0;
  HEAPF64[i6 >> 3] = d14;
  d33 = (d28 * d26 - d42 * d30) / d11;
  i2 = i9 + 16 | 0;
  HEAPF64[i2 >> 3] = d33;
  i7 = i9 + 24 | 0;
  HEAPF64[i7 >> 3] = (d45 * d26 - d43 * d34) / d11;
  i3 = i9 + 32 | 0;
  HEAPF64[i3 >> 3] = (d41 * d26 - d34 * d17) / d11;
  i4 = i9 + 40 | 0;
  HEAPF64[i4 >> 3] = (d25 * d26 - d34 * d30) / d11;
  d11 = +HEAPF64[i8 >> 3];
  d30 = +HEAPF64[i8 + 48 >> 3];
  d34 = +HEAPF64[i8 + 96 >> 3];
  HEAPF64[i1 >> 3] = d15 * d11 + 0.0 + d14 * d30 + d33 * d34;
  d26 = +HEAPF64[i8 + 8 >> 3];
  d25 = +HEAPF64[i8 + 56 >> 3];
  d17 = +HEAPF64[i8 + 104 >> 3];
  HEAPF64[i1 + 8 >> 3] = d15 * d26 + 0.0 + d14 * d25 + d33 * d17;
  d41 = +HEAPF64[i8 + 16 >> 3];
  d43 = +HEAPF64[i8 + 64 >> 3];
  d45 = +HEAPF64[i8 + 112 >> 3];
  HEAPF64[i1 + 16 >> 3] = d15 * d41 + 0.0 + d14 * d43 + d33 * d45;
  d42 = +HEAPF64[i8 + 24 >> 3];
  d28 = +HEAPF64[i8 + 72 >> 3];
  d46 = +HEAPF64[i8 + 120 >> 3];
  HEAPF64[i1 + 24 >> 3] = d15 * d42 + 0.0 + d14 * d28 + d33 * d46;
  d27 = +HEAPF64[i8 + 32 >> 3];
  d29 = +HEAPF64[i8 + 80 >> 3];
  d22 = +HEAPF64[i8 + 128 >> 3];
  HEAPF64[i1 + 32 >> 3] = d15 * d27 + 0.0 + d14 * d29 + d33 * d22;
  d33 = +HEAPF64[i8 + 40 >> 3];
  d14 = +HEAPF64[i8 + 88 >> 3];
  d15 = +HEAPF64[i8 + 136 >> 3];
  HEAPF64[i1 + 40 >> 3] = +HEAPF64[i9 >> 3] * d33 + 0.0 + +HEAPF64[i6 >> 3] * d14 + +HEAPF64[i2 >> 3] * d15;
  d39 = +HEAPF64[i7 >> 3];
  d31 = +HEAPF64[i3 >> 3];
  d38 = +HEAPF64[i4 >> 3];
  HEAPF64[i1 + 48 >> 3] = d39 * d11 + 0.0 + d31 * d30 + d38 * d34;
  HEAPF64[i1 + 56 >> 3] = d39 * d26 + 0.0 + d31 * d25 + d38 * d17;
  HEAPF64[i1 + 64 >> 3] = d39 * d41 + 0.0 + d31 * d43 + d38 * d45;
  HEAPF64[i1 + 72 >> 3] = d39 * d42 + 0.0 + d31 * d28 + d38 * d46;
  HEAPF64[i1 + 80 >> 3] = d39 * d27 + 0.0 + d31 * d29 + d38 * d22;
  HEAPF64[i1 + 88 >> 3] = d39 * d33 + 0.0 + d31 * d14 + d38 * d15;
  i47 = 0;
  STACKTOP = i5;
  return i47 | 0;
 }
 return 0;
}

function __ZN6vision12FindFeaturesINS_14FREAKExtractorELi96EEEvPNS_8KeyframeIXT0_EEEPKNS_25GaussianScaleSpacePyramidEPNS_25DoGScaleInvariantDetectorEPT_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 if (!i2) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31935, 30) | 0, 28198, 114) | 0, 33554, 6) | 0, 212) | 0, 33561, 2) | 0, 32071, 15) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 if (!i3) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 28313, 31) | 0, 28198, 114) | 0, 33554, 6) | 0, 213) | 0, 33561, 2) | 0, 28345, 16) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i8 = i7;
 if ((HEAP32[i2 + 8 >> 2] | 0) == (i7 | 0)) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 28362, 51) | 0, 28198, 114) | 0, 33554, 6) | 0, 214) | 0, 33561, 2) | 0, 28414, 16) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 if ((HEAP32[i8 + 4 >> 2] | 0) != (HEAP32[i3 >> 2] | 0)) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 28431, 72) | 0, 28198, 114) | 0, 33554, 6) | 0, 215) | 0, 33561, 2) | 0, 28504, 34) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 if ((HEAP32[i8 + 8 >> 2] | 0) != (HEAP32[i3 + 4 >> 2] | 0)) {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 28539, 74) | 0, 28198, 114) | 0, 33554, 6) | 0, 216) | 0, 33561, 2) | 0, 28504, 34) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 __ZN6vision25DoGScaleInvariantDetector6detectEPKNS_25GaussianScaleSpacePyramidE(i3, i2);
 i8 = i3 + 60 | 0;
 i9 = i3 + 64 | 0;
 i3 = HEAP32[i9 >> 2] | 0;
 i7 = HEAP32[i8 >> 2] | 0;
 i10 = i3 - i7 | 0;
 i11 = (i10 | 0) / 36 | 0;
 HEAP32[i6 >> 2] = 0;
 i12 = i6 + 4 | 0;
 HEAP32[i12 >> 2] = 0;
 i13 = i6 + 8 | 0;
 HEAP32[i13 >> 2] = 0;
 if (!i10) {
  i14 = i7;
  i15 = i3;
  i16 = 0;
 } else {
  if (i11 >>> 0 > 214748364) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i6);
  i3 = i11 * 20 | 0;
  i7 = __Znwm(i3) | 0;
  HEAP32[i12 >> 2] = i7;
  HEAP32[i6 >> 2] = i7;
  HEAP32[i13 >> 2] = i7 + (i11 * 20 | 0);
  i13 = i7 + i3 | 0;
  i3 = i11;
  i11 = i7;
  while (1) {
   HEAP32[i11 >> 2] = 0;
   HEAP32[i11 + 4 >> 2] = 0;
   HEAP32[i11 + 8 >> 2] = 0;
   HEAP32[i11 + 12 >> 2] = 0;
   HEAP8[i11 + 16 >> 0] = 1;
   i3 = i3 + -1 | 0;
   if (!i3) break; else i11 = i11 + 20 | 0;
  }
  HEAP32[i12 >> 2] = i13;
  i14 = HEAP32[i8 >> 2] | 0;
  i15 = HEAP32[i9 >> 2] | 0;
  i16 = i7;
 }
 L25 : do if ((i15 | 0) != (i14 | 0)) {
  i7 = 0;
  i13 = i14;
  i11 = i16;
  while (1) {
   i3 = i13;
   i10 = HEAP32[i3 + (i7 * 36 | 0) + 4 >> 2] | 0;
   i17 = HEAP32[i3 + (i7 * 36 | 0) + 8 >> 2] | 0;
   i18 = HEAP32[i3 + (i7 * 36 | 0) + 28 >> 2] | 0;
   i19 = +HEAPF32[i3 + (i7 * 36 | 0) + 24 >> 2] > 0.0 & 1;
   HEAP32[i11 + (i7 * 20 | 0) >> 2] = HEAP32[i3 + (i7 * 36 | 0) >> 2];
   HEAP32[i11 + (i7 * 20 | 0) + 4 >> 2] = i10;
   HEAP32[i11 + (i7 * 20 | 0) + 8 >> 2] = i17;
   HEAP32[i11 + (i7 * 20 | 0) + 12 >> 2] = i18;
   HEAP8[i11 + (i7 * 20 | 0) + 16 >> 0] = i19;
   i19 = i7 + 1 | 0;
   i18 = HEAP32[i8 >> 2] | 0;
   if (i19 >>> 0 >= (((HEAP32[i9 >> 2] | 0) - i18 | 0) / 36 | 0) >>> 0) break L25;
   i7 = i19;
   i13 = i18;
   i11 = HEAP32[i6 >> 2] | 0;
  }
 } while (0);
 __ZN6vision14FREAKExtractor7extractERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS6_9allocatorIS8_EEEE(i4, i1 + 8 | 0, i2, i6);
 i2 = HEAP32[i6 >> 2] | 0;
 if (!i2) {
  STACKTOP = i5;
  return;
 }
 HEAP32[i12 >> 2] = i2;
 __ZdlPv(i2);
 STACKTOP = i5;
 return;
}

function _free(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0;
 if (!i1) return;
 i2 = i1 + -8 | 0;
 i3 = HEAP32[14234] | 0;
 i4 = HEAP32[i1 + -4 >> 2] | 0;
 i1 = i4 & -8;
 i5 = i2 + i1 | 0;
 do if (!(i4 & 1)) {
  i6 = HEAP32[i2 >> 2] | 0;
  if (!(i4 & 3)) return;
  i7 = i2 + (0 - i6) | 0;
  i8 = i6 + i1 | 0;
  if (i7 >>> 0 < i3 >>> 0) return;
  if ((HEAP32[14235] | 0) == (i7 | 0)) {
   i9 = i5 + 4 | 0;
   i10 = HEAP32[i9 >> 2] | 0;
   if ((i10 & 3 | 0) != 3) {
    i11 = i7;
    i12 = i8;
    i13 = i7;
    break;
   }
   HEAP32[14232] = i8;
   HEAP32[i9 >> 2] = i10 & -2;
   HEAP32[i7 + 4 >> 2] = i8 | 1;
   HEAP32[i7 + i8 >> 2] = i8;
   return;
  }
  i10 = i6 >>> 3;
  if (i6 >>> 0 < 256) {
   i6 = HEAP32[i7 + 8 >> 2] | 0;
   i9 = HEAP32[i7 + 12 >> 2] | 0;
   if ((i9 | 0) == (i6 | 0)) {
    HEAP32[14230] = HEAP32[14230] & ~(1 << i10);
    i11 = i7;
    i12 = i8;
    i13 = i7;
    break;
   } else {
    HEAP32[i6 + 12 >> 2] = i9;
    HEAP32[i9 + 8 >> 2] = i6;
    i11 = i7;
    i12 = i8;
    i13 = i7;
    break;
   }
  }
  i6 = HEAP32[i7 + 24 >> 2] | 0;
  i9 = HEAP32[i7 + 12 >> 2] | 0;
  do if ((i9 | 0) == (i7 | 0)) {
   i10 = i7 + 16 | 0;
   i14 = i10 + 4 | 0;
   i15 = HEAP32[i14 >> 2] | 0;
   if (!i15) {
    i16 = HEAP32[i10 >> 2] | 0;
    if (!i16) {
     i17 = 0;
     break;
    } else {
     i18 = i16;
     i19 = i10;
    }
   } else {
    i18 = i15;
    i19 = i14;
   }
   i14 = i18;
   i15 = i19;
   while (1) {
    i10 = i14 + 20 | 0;
    i16 = HEAP32[i10 >> 2] | 0;
    if (!i16) {
     i20 = i14 + 16 | 0;
     i21 = HEAP32[i20 >> 2] | 0;
     if (!i21) break; else {
      i22 = i21;
      i23 = i20;
     }
    } else {
     i22 = i16;
     i23 = i10;
    }
    i14 = i22;
    i15 = i23;
   }
   HEAP32[i15 >> 2] = 0;
   i17 = i14;
  } else {
   i10 = HEAP32[i7 + 8 >> 2] | 0;
   HEAP32[i10 + 12 >> 2] = i9;
   HEAP32[i9 + 8 >> 2] = i10;
   i17 = i9;
  } while (0);
  if (i6) {
   i9 = HEAP32[i7 + 28 >> 2] | 0;
   i10 = 57224 + (i9 << 2) | 0;
   if ((HEAP32[i10 >> 2] | 0) == (i7 | 0)) {
    HEAP32[i10 >> 2] = i17;
    if (!i17) {
     HEAP32[14231] = HEAP32[14231] & ~(1 << i9);
     i11 = i7;
     i12 = i8;
     i13 = i7;
     break;
    }
   } else {
    i9 = i6 + 16 | 0;
    HEAP32[((HEAP32[i9 >> 2] | 0) == (i7 | 0) ? i9 : i6 + 20 | 0) >> 2] = i17;
    if (!i17) {
     i11 = i7;
     i12 = i8;
     i13 = i7;
     break;
    }
   }
   HEAP32[i17 + 24 >> 2] = i6;
   i9 = i7 + 16 | 0;
   i10 = HEAP32[i9 >> 2] | 0;
   if (i10 | 0) {
    HEAP32[i17 + 16 >> 2] = i10;
    HEAP32[i10 + 24 >> 2] = i17;
   }
   i10 = HEAP32[i9 + 4 >> 2] | 0;
   if (i10) {
    HEAP32[i17 + 20 >> 2] = i10;
    HEAP32[i10 + 24 >> 2] = i17;
    i11 = i7;
    i12 = i8;
    i13 = i7;
   } else {
    i11 = i7;
    i12 = i8;
    i13 = i7;
   }
  } else {
   i11 = i7;
   i12 = i8;
   i13 = i7;
  }
 } else {
  i11 = i2;
  i12 = i1;
  i13 = i2;
 } while (0);
 if (i13 >>> 0 >= i5 >>> 0) return;
 i2 = i5 + 4 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!(i1 & 1)) return;
 if (!(i1 & 2)) {
  if ((HEAP32[14236] | 0) == (i5 | 0)) {
   i17 = (HEAP32[14233] | 0) + i12 | 0;
   HEAP32[14233] = i17;
   HEAP32[14236] = i11;
   HEAP32[i11 + 4 >> 2] = i17 | 1;
   if ((i11 | 0) != (HEAP32[14235] | 0)) return;
   HEAP32[14235] = 0;
   HEAP32[14232] = 0;
   return;
  }
  if ((HEAP32[14235] | 0) == (i5 | 0)) {
   i17 = (HEAP32[14232] | 0) + i12 | 0;
   HEAP32[14232] = i17;
   HEAP32[14235] = i13;
   HEAP32[i11 + 4 >> 2] = i17 | 1;
   HEAP32[i13 + i17 >> 2] = i17;
   return;
  }
  i17 = (i1 & -8) + i12 | 0;
  i23 = i1 >>> 3;
  do if (i1 >>> 0 < 256) {
   i22 = HEAP32[i5 + 8 >> 2] | 0;
   i19 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i19 | 0) == (i22 | 0)) {
    HEAP32[14230] = HEAP32[14230] & ~(1 << i23);
    break;
   } else {
    HEAP32[i22 + 12 >> 2] = i19;
    HEAP32[i19 + 8 >> 2] = i22;
    break;
   }
  } else {
   i22 = HEAP32[i5 + 24 >> 2] | 0;
   i19 = HEAP32[i5 + 12 >> 2] | 0;
   do if ((i19 | 0) == (i5 | 0)) {
    i18 = i5 + 16 | 0;
    i3 = i18 + 4 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) {
     i10 = HEAP32[i18 >> 2] | 0;
     if (!i10) {
      i24 = 0;
      break;
     } else {
      i25 = i10;
      i26 = i18;
     }
    } else {
     i25 = i4;
     i26 = i3;
    }
    i3 = i25;
    i4 = i26;
    while (1) {
     i18 = i3 + 20 | 0;
     i10 = HEAP32[i18 >> 2] | 0;
     if (!i10) {
      i9 = i3 + 16 | 0;
      i16 = HEAP32[i9 >> 2] | 0;
      if (!i16) break; else {
       i27 = i16;
       i28 = i9;
      }
     } else {
      i27 = i10;
      i28 = i18;
     }
     i3 = i27;
     i4 = i28;
    }
    HEAP32[i4 >> 2] = 0;
    i24 = i3;
   } else {
    i14 = HEAP32[i5 + 8 >> 2] | 0;
    HEAP32[i14 + 12 >> 2] = i19;
    HEAP32[i19 + 8 >> 2] = i14;
    i24 = i19;
   } while (0);
   if (i22 | 0) {
    i19 = HEAP32[i5 + 28 >> 2] | 0;
    i7 = 57224 + (i19 << 2) | 0;
    if ((HEAP32[i7 >> 2] | 0) == (i5 | 0)) {
     HEAP32[i7 >> 2] = i24;
     if (!i24) {
      HEAP32[14231] = HEAP32[14231] & ~(1 << i19);
      break;
     }
    } else {
     i19 = i22 + 16 | 0;
     HEAP32[((HEAP32[i19 >> 2] | 0) == (i5 | 0) ? i19 : i22 + 20 | 0) >> 2] = i24;
     if (!i24) break;
    }
    HEAP32[i24 + 24 >> 2] = i22;
    i19 = i5 + 16 | 0;
    i7 = HEAP32[i19 >> 2] | 0;
    if (i7 | 0) {
     HEAP32[i24 + 16 >> 2] = i7;
     HEAP32[i7 + 24 >> 2] = i24;
    }
    i7 = HEAP32[i19 + 4 >> 2] | 0;
    if (i7 | 0) {
     HEAP32[i24 + 20 >> 2] = i7;
     HEAP32[i7 + 24 >> 2] = i24;
    }
   }
  } while (0);
  HEAP32[i11 + 4 >> 2] = i17 | 1;
  HEAP32[i13 + i17 >> 2] = i17;
  if ((i11 | 0) == (HEAP32[14235] | 0)) {
   HEAP32[14232] = i17;
   return;
  } else i29 = i17;
 } else {
  HEAP32[i2 >> 2] = i1 & -2;
  HEAP32[i11 + 4 >> 2] = i12 | 1;
  HEAP32[i13 + i12 >> 2] = i12;
  i29 = i12;
 }
 i12 = i29 >>> 3;
 if (i29 >>> 0 < 256) {
  i13 = 56960 + (i12 << 1 << 2) | 0;
  i1 = HEAP32[14230] | 0;
  i2 = 1 << i12;
  if (!(i1 & i2)) {
   HEAP32[14230] = i1 | i2;
   i30 = i13;
   i31 = i13 + 8 | 0;
  } else {
   i2 = i13 + 8 | 0;
   i30 = HEAP32[i2 >> 2] | 0;
   i31 = i2;
  }
  HEAP32[i31 >> 2] = i11;
  HEAP32[i30 + 12 >> 2] = i11;
  HEAP32[i11 + 8 >> 2] = i30;
  HEAP32[i11 + 12 >> 2] = i13;
  return;
 }
 i13 = i29 >>> 8;
 if (i13) if (i29 >>> 0 > 16777215) i32 = 31; else {
  i30 = (i13 + 1048320 | 0) >>> 16 & 8;
  i31 = i13 << i30;
  i13 = (i31 + 520192 | 0) >>> 16 & 4;
  i2 = i31 << i13;
  i31 = (i2 + 245760 | 0) >>> 16 & 2;
  i1 = 14 - (i13 | i30 | i31) + (i2 << i31 >>> 15) | 0;
  i32 = i29 >>> (i1 + 7 | 0) & 1 | i1 << 1;
 } else i32 = 0;
 i1 = 57224 + (i32 << 2) | 0;
 HEAP32[i11 + 28 >> 2] = i32;
 HEAP32[i11 + 20 >> 2] = 0;
 HEAP32[i11 + 16 >> 2] = 0;
 i31 = HEAP32[14231] | 0;
 i2 = 1 << i32;
 L112 : do if (!(i31 & i2)) {
  HEAP32[14231] = i31 | i2;
  HEAP32[i1 >> 2] = i11;
  HEAP32[i11 + 24 >> 2] = i1;
  HEAP32[i11 + 12 >> 2] = i11;
  HEAP32[i11 + 8 >> 2] = i11;
 } else {
  i30 = HEAP32[i1 >> 2] | 0;
  L115 : do if ((HEAP32[i30 + 4 >> 2] & -8 | 0) == (i29 | 0)) i33 = i30; else {
   i13 = i29 << ((i32 | 0) == 31 ? 0 : 25 - (i32 >>> 1) | 0);
   i12 = i30;
   while (1) {
    i34 = i12 + 16 + (i13 >>> 31 << 2) | 0;
    i17 = HEAP32[i34 >> 2] | 0;
    if (!i17) break;
    if ((HEAP32[i17 + 4 >> 2] & -8 | 0) == (i29 | 0)) {
     i33 = i17;
     break L115;
    } else {
     i13 = i13 << 1;
     i12 = i17;
    }
   }
   HEAP32[i34 >> 2] = i11;
   HEAP32[i11 + 24 >> 2] = i12;
   HEAP32[i11 + 12 >> 2] = i11;
   HEAP32[i11 + 8 >> 2] = i11;
   break L112;
  } while (0);
  i30 = i33 + 8 | 0;
  i22 = HEAP32[i30 >> 2] | 0;
  HEAP32[i22 + 12 >> 2] = i11;
  HEAP32[i30 >> 2] = i11;
  HEAP32[i11 + 8 >> 2] = i22;
  HEAP32[i11 + 12 >> 2] = i33;
  HEAP32[i11 + 24 >> 2] = 0;
 } while (0);
 i11 = (HEAP32[14238] | 0) + -1 | 0;
 HEAP32[14238] = i11;
 if (i11 | 0) return;
 i11 = 57376;
 while (1) {
  i33 = HEAP32[i11 >> 2] | 0;
  if (!i33) break; else i11 = i33 + 8 | 0;
 }
 HEAP32[14238] = -1;
 return;
}

function _jpeg_idct_4x4(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i7 = i6;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i1 = i7;
 i9 = HEAP32[i2 + 80 >> 2] | 0;
 i2 = i3;
 i3 = 8;
 while (1) {
  if ((i3 | 0) != 4) {
   i10 = HEAP16[i2 + 16 >> 1] | 0;
   i11 = HEAP16[i2 + 32 >> 1] | 0;
   if (!((i10 | i11) << 16 >> 16)) if ((((HEAP16[i2 + 48 >> 1] | 0) == 0 ? (HEAP16[i2 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 112 >> 1] | 0) == 0 : 0) {
    i12 = Math_imul(HEAP16[i2 >> 1] << 2, HEAP32[i9 >> 2] | 0) | 0;
    HEAP32[i1 >> 2] = i12;
    HEAP32[i1 + 32 >> 2] = i12;
    HEAP32[i1 + 64 >> 2] = i12;
    i13 = i12;
    i14 = 24;
   } else {
    i15 = 0;
    i16 = 9;
   } else {
    i15 = i11;
    i16 = 9;
   }
   if ((i16 | 0) == 9) {
    i16 = 0;
    i11 = Math_imul(HEAP16[i2 >> 1] << 14, HEAP32[i9 >> 2] | 0) | 0;
    i12 = (Math_imul(Math_imul(HEAP16[i2 + 96 >> 1] | 0, -6270) | 0, HEAP32[i9 + 192 >> 2] | 0) | 0) + (Math_imul((i15 << 16 >> 16) * 15137 | 0, HEAP32[i9 + 64 >> 2] | 0) | 0) | 0;
    i17 = Math_imul(HEAP32[i9 + 224 >> 2] | 0, HEAP16[i2 + 112 >> 1] | 0) | 0;
    i18 = Math_imul(HEAP32[i9 + 160 >> 2] | 0, HEAP16[i2 + 80 >> 1] | 0) | 0;
    i19 = Math_imul(HEAP32[i9 + 96 >> 2] | 0, HEAP16[i2 + 48 >> 1] | 0) | 0;
    i20 = Math_imul(HEAP32[i9 + 32 >> 2] | 0, i10 << 16 >> 16) | 0;
    i10 = (i18 * 11893 | 0) + (Math_imul(i17, -1730) | 0) + (Math_imul(i19, -17799) | 0) + (i20 * 8697 | 0) | 0;
    i21 = (Math_imul(i18, -4926) | 0) + (Math_imul(i17, -4176) | 0) + (i19 * 7373 | 0) + (i20 * 20995 | 0) | 0;
    i20 = i12 + i11 + 2048 | 0;
    HEAP32[i1 >> 2] = i20 + i21 >> 12;
    HEAP32[i1 + 96 >> 2] = i20 - i21 >> 12;
    i21 = i11 - i12 + 2048 | 0;
    HEAP32[i1 + 32 >> 2] = i21 + i10 >> 12;
    i13 = i21 - i10 >> 12;
    i14 = 16;
   }
   HEAP32[i1 + (i14 << 2) >> 2] = i13;
  }
  if (i3 >>> 0 > 1) {
   i1 = i1 + 4 | 0;
   i9 = i9 + 4 | 0;
   i2 = i2 + 2 | 0;
   i3 = i3 + -1 | 0;
  } else break;
 }
 i3 = i8 + 128 | 0;
 i8 = (HEAP32[i4 >> 2] | 0) + i5 | 0;
 i2 = HEAP32[i7 + 4 >> 2] | 0;
 i9 = HEAP32[i7 + 8 >> 2] | 0;
 if (!(i2 | i9)) if ((((HEAP32[i7 + 12 >> 2] | 0) == 0 ? (HEAP32[i7 + 20 >> 2] | 0) == 0 : 0) ? (HEAP32[i7 + 24 >> 2] | 0) == 0 : 0) ? (HEAP32[i7 + 28 >> 2] | 0) == 0 : 0) {
  i1 = HEAP8[i3 + (((HEAP32[i7 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
  HEAP8[i8 >> 0] = i1;
  HEAP8[i8 + 1 >> 0] = i1;
  HEAP8[i8 + 2 >> 0] = i1;
  i22 = i1;
  i23 = 3;
 } else {
  i24 = 0;
  i16 = 18;
 } else {
  i24 = i9;
  i16 = 18;
 }
 if ((i16 | 0) == 18) {
  i9 = HEAP32[i7 >> 2] << 14;
  i1 = (Math_imul(HEAP32[i7 + 24 >> 2] | 0, -6270) | 0) + (i24 * 15137 | 0) | 0;
  i24 = HEAP32[i7 + 28 >> 2] | 0;
  i13 = HEAP32[i7 + 20 >> 2] | 0;
  i14 = HEAP32[i7 + 12 >> 2] | 0;
  i15 = (Math_imul(i24, -1730) | 0) + (i2 * 8697 | 0) + (i13 * 11893 | 0) + (Math_imul(i14, -17799) | 0) | 0;
  i10 = (Math_imul(i24, -4176) | 0) + (i2 * 20995 | 0) + (Math_imul(i13, -4926) | 0) + (i14 * 7373 | 0) | 0;
  i14 = i1 + i9 + 262144 | 0;
  HEAP8[i8 >> 0] = HEAP8[i3 + ((i14 + i10 | 0) >>> 19 & 1023) >> 0] | 0;
  HEAP8[i8 + 3 >> 0] = HEAP8[i3 + ((i14 - i10 | 0) >>> 19 & 1023) >> 0] | 0;
  i10 = i9 - i1 + 262144 | 0;
  HEAP8[i8 + 1 >> 0] = HEAP8[i3 + ((i10 + i15 | 0) >>> 19 & 1023) >> 0] | 0;
  i22 = HEAP8[i3 + ((i10 - i15 | 0) >>> 19 & 1023) >> 0] | 0;
  i23 = 2;
 }
 HEAP8[i8 + i23 >> 0] = i22;
 i22 = i7 + 32 | 0;
 i23 = (HEAP32[i4 + 4 >> 2] | 0) + i5 | 0;
 i8 = HEAP32[i7 + 36 >> 2] | 0;
 i15 = HEAP32[i7 + 40 >> 2] | 0;
 if (!(i8 | i15)) if ((((HEAP32[i7 + 44 >> 2] | 0) == 0 ? (HEAP32[i7 + 52 >> 2] | 0) == 0 : 0) ? (HEAP32[i7 + 56 >> 2] | 0) == 0 : 0) ? (HEAP32[i7 + 60 >> 2] | 0) == 0 : 0) {
  i10 = HEAP8[i3 + (((HEAP32[i22 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
  HEAP8[i23 >> 0] = i10;
  HEAP8[i23 + 1 >> 0] = i10;
  HEAP8[i23 + 2 >> 0] = i10;
  i25 = i10;
  i26 = 3;
 } else {
  i27 = 0;
  i16 = 24;
 } else {
  i27 = i15;
  i16 = 24;
 }
 if ((i16 | 0) == 24) {
  i15 = HEAP32[i22 >> 2] << 14;
  i22 = (Math_imul(HEAP32[i7 + 56 >> 2] | 0, -6270) | 0) + (i27 * 15137 | 0) | 0;
  i27 = HEAP32[i7 + 60 >> 2] | 0;
  i10 = HEAP32[i7 + 52 >> 2] | 0;
  i1 = HEAP32[i7 + 44 >> 2] | 0;
  i9 = (Math_imul(i27, -1730) | 0) + (i8 * 8697 | 0) + (i10 * 11893 | 0) + (Math_imul(i1, -17799) | 0) | 0;
  i14 = (Math_imul(i27, -4176) | 0) + (i8 * 20995 | 0) + (Math_imul(i10, -4926) | 0) + (i1 * 7373 | 0) | 0;
  i1 = i22 + i15 + 262144 | 0;
  HEAP8[i23 >> 0] = HEAP8[i3 + ((i1 + i14 | 0) >>> 19 & 1023) >> 0] | 0;
  HEAP8[i23 + 3 >> 0] = HEAP8[i3 + ((i1 - i14 | 0) >>> 19 & 1023) >> 0] | 0;
  i14 = i15 - i22 + 262144 | 0;
  HEAP8[i23 + 1 >> 0] = HEAP8[i3 + ((i14 + i9 | 0) >>> 19 & 1023) >> 0] | 0;
  i25 = HEAP8[i3 + ((i14 - i9 | 0) >>> 19 & 1023) >> 0] | 0;
  i26 = 2;
 }
 HEAP8[i23 + i26 >> 0] = i25;
 i25 = i7 + 64 | 0;
 i26 = (HEAP32[i4 + 8 >> 2] | 0) + i5 | 0;
 i23 = HEAP32[i7 + 68 >> 2] | 0;
 i9 = HEAP32[i7 + 72 >> 2] | 0;
 if (!(i23 | i9)) if ((((HEAP32[i7 + 76 >> 2] | 0) == 0 ? (HEAP32[i7 + 84 >> 2] | 0) == 0 : 0) ? (HEAP32[i7 + 88 >> 2] | 0) == 0 : 0) ? (HEAP32[i7 + 92 >> 2] | 0) == 0 : 0) {
  i14 = HEAP8[i3 + (((HEAP32[i25 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
  HEAP8[i26 >> 0] = i14;
  HEAP8[i26 + 1 >> 0] = i14;
  HEAP8[i26 + 2 >> 0] = i14;
  i28 = i14;
  i29 = 3;
 } else {
  i30 = 0;
  i16 = 31;
 } else {
  i30 = i9;
  i16 = 31;
 }
 if ((i16 | 0) == 31) {
  i16 = HEAP32[i25 >> 2] << 14;
  i25 = (Math_imul(HEAP32[i7 + 88 >> 2] | 0, -6270) | 0) + (i30 * 15137 | 0) | 0;
  i30 = HEAP32[i7 + 92 >> 2] | 0;
  i9 = HEAP32[i7 + 84 >> 2] | 0;
  i14 = HEAP32[i7 + 76 >> 2] | 0;
  i22 = (Math_imul(i30, -1730) | 0) + (i23 * 8697 | 0) + (i9 * 11893 | 0) + (Math_imul(i14, -17799) | 0) | 0;
  i15 = (Math_imul(i30, -4176) | 0) + (i23 * 20995 | 0) + (Math_imul(i9, -4926) | 0) + (i14 * 7373 | 0) | 0;
  i14 = i25 + i16 + 262144 | 0;
  HEAP8[i26 >> 0] = HEAP8[i3 + ((i14 + i15 | 0) >>> 19 & 1023) >> 0] | 0;
  HEAP8[i26 + 3 >> 0] = HEAP8[i3 + ((i14 - i15 | 0) >>> 19 & 1023) >> 0] | 0;
  i15 = i16 - i25 + 262144 | 0;
  HEAP8[i26 + 1 >> 0] = HEAP8[i3 + ((i15 + i22 | 0) >>> 19 & 1023) >> 0] | 0;
  i28 = HEAP8[i3 + ((i15 - i22 | 0) >>> 19 & 1023) >> 0] | 0;
  i29 = 2;
 }
 HEAP8[i26 + i29 >> 0] = i28;
 i28 = i7 + 96 | 0;
 i29 = (HEAP32[i4 + 12 >> 2] | 0) + i5 | 0;
 i5 = HEAP32[i7 + 100 >> 2] | 0;
 i4 = HEAP32[i7 + 104 >> 2] | 0;
 if (!(i5 | i4)) if ((((HEAP32[i7 + 108 >> 2] | 0) == 0 ? (HEAP32[i7 + 116 >> 2] | 0) == 0 : 0) ? (HEAP32[i7 + 120 >> 2] | 0) == 0 : 0) ? (HEAP32[i7 + 124 >> 2] | 0) == 0 : 0) {
  i26 = HEAP8[i3 + (((HEAP32[i28 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
  HEAP8[i29 >> 0] = i26;
  HEAP8[i29 + 1 >> 0] = i26;
  HEAP8[i29 + 2 >> 0] = i26;
  i31 = i26;
  i32 = 3;
  i33 = i29 + i32 | 0;
  HEAP8[i33 >> 0] = i31;
  STACKTOP = i6;
  return;
 } else i34 = 0; else i34 = i4;
 i4 = HEAP32[i28 >> 2] << 14;
 i28 = (Math_imul(HEAP32[i7 + 120 >> 2] | 0, -6270) | 0) + (i34 * 15137 | 0) | 0;
 i34 = HEAP32[i7 + 124 >> 2] | 0;
 i26 = HEAP32[i7 + 116 >> 2] | 0;
 i22 = HEAP32[i7 + 108 >> 2] | 0;
 i7 = (Math_imul(i34, -1730) | 0) + (i5 * 8697 | 0) + (i26 * 11893 | 0) + (Math_imul(i22, -17799) | 0) | 0;
 i15 = (Math_imul(i34, -4176) | 0) + (i5 * 20995 | 0) + (Math_imul(i26, -4926) | 0) + (i22 * 7373 | 0) | 0;
 i22 = i28 + i4 + 262144 | 0;
 HEAP8[i29 >> 0] = HEAP8[i3 + ((i22 + i15 | 0) >>> 19 & 1023) >> 0] | 0;
 HEAP8[i29 + 3 >> 0] = HEAP8[i3 + ((i22 - i15 | 0) >>> 19 & 1023) >> 0] | 0;
 i15 = i4 - i28 + 262144 | 0;
 HEAP8[i29 + 1 >> 0] = HEAP8[i3 + ((i15 + i7 | 0) >>> 19 & 1023) >> 0] | 0;
 i31 = HEAP8[i3 + ((i15 - i7 | 0) >>> 19 & 1023) >> 0] | 0;
 i32 = 2;
 i33 = i29 + i32 | 0;
 HEAP8[i33 >> 0] = i31;
 STACKTOP = i6;
 return;
}

function _decode_bch(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 2384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2384);
 i7 = i6 + 2320 | 0;
 i8 = i6 + 880 | 0;
 i9 = i6 + 800 | 0;
 i10 = i6 + 720 | 0;
 i11 = i6 + 640 | 0;
 i12 = i6 + 560 | 0;
 i13 = i6 + 48 | 0;
 i14 = i6;
 switch (i1 | 0) {
 case 2830:
  {
   i15 = i4;
   i16 = 1200;
   i17 = 688;
   i18 = 120;
   i19 = 127;
   i20 = 64;
   i21 = 9;
   break;
  }
 case 772:
  {
   i22 = 624;
   i23 = 432;
   i24 = 13;
   i25 = 15;
   i26 = 9;
   i27 = 1;
   i28 = 5;
   break;
  }
 case 1028:
  {
   i22 = 624;
   i23 = 432;
   i24 = 13;
   i25 = 15;
   i26 = 5;
   i27 = 2;
   i28 = 5;
   break;
  }
 case 1029:
  {
   i29 = 12;
   i30 = 2;
   i28 = 4;
   break;
  }
 case 1285:
  {
   i29 = 7;
   i30 = 3;
   i28 = 4;
   break;
  }
 default:
  {
   i31 = -1;
   STACKTOP = i6;
   return i31 | 0;
  }
 }
 if ((i28 | 0) == 4) {
  i22 = 496;
  i23 = 304;
  i24 = 22;
  i25 = 31;
  i26 = i29;
  i27 = i30;
  i28 = 5;
 }
 if ((i28 | 0) == 5) {
  i28 = 0;
  i30 = i2;
  i2 = i3;
  do {
   HEAP8[i7 + i28 >> 0] = i30 & 1;
   i30 = _bitshift64Lshr(i30 | 0, i2 | 0, 1) | 0;
   i2 = getTempRet0() | 0;
   i28 = i28 + 1 | 0;
  } while ((i28 | 0) != (i24 | 0));
  i15 = i7;
  i16 = i22;
  i17 = i23;
  i18 = i24;
  i19 = i25;
  i20 = i26;
  i21 = i27;
 }
 i27 = i21 << 1;
 i26 = 0;
 i25 = 1;
 while (1) {
  i24 = i12 + (i25 << 2) | 0;
  HEAP32[i24 >> 2] = 0;
  i23 = 0;
  i22 = 0;
  while (1) {
   if (!(HEAP8[i15 + i23 >> 0] | 0)) i32 = i22; else {
    i7 = i17 + (((Math_imul(i23, i25) | 0) % (i19 | 0) | 0) << 2) | 0;
    i28 = i22 ^ HEAP32[i7 >> 2];
    HEAP32[i24 >> 2] = i28;
    i32 = i28;
   }
   i23 = i23 + 1 | 0;
   if ((i23 | 0) >= (i18 | 0)) break; else i22 = i32;
  }
  i26 = (i32 | 0) == 0 ? i26 : 1;
  HEAP32[i24 >> 2] = HEAP32[i16 + (i32 << 2) >> 2];
  if ((i25 | 0) >= (i27 | 0)) break; else i25 = i25 + 1 | 0;
 }
 i25 = (i26 | 0) != 0;
 if (i25) {
  HEAP32[i9 >> 2] = 0;
  i26 = HEAP32[i12 + 4 >> 2] | 0;
  HEAP32[i9 + 4 >> 2] = i26;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i8 + 72 >> 2] = 1;
  i32 = 1;
  do {
   HEAP32[i8 + (i32 << 2) >> 2] = -1;
   HEAP32[i8 + 72 + (i32 << 2) >> 2] = 0;
   i32 = i32 + 1 | 0;
  } while ((i32 | 0) < (i27 | 0));
  HEAP32[i10 >> 2] = 0;
  HEAP32[i10 + 4 >> 2] = 0;
  HEAP32[i11 >> 2] = -1;
  HEAP32[i11 + 4 >> 2] = 0;
  i32 = ((i27 | 0) > 1 ? i27 : 1) << 2;
  i22 = 0;
  i23 = i26;
  i26 = 0;
  while (1) {
   i33 = i22 + 2 | 0;
   i28 = i8 + (i33 * 72 | 0) | 0;
   i7 = i22;
   i22 = i22 + 1 | 0;
   if ((i23 | 0) == -1) {
    HEAP32[i10 + (i33 << 2) >> 2] = i26;
    if ((i26 | 0) < 0) i34 = i26; else {
     i2 = 0;
     while (1) {
      i30 = i8 + (i22 * 72 | 0) + (i2 << 2) | 0;
      i3 = HEAP32[i30 >> 2] | 0;
      HEAP32[i8 + (i33 * 72 | 0) + (i2 << 2) >> 2] = i3;
      HEAP32[i30 >> 2] = HEAP32[i16 + (i3 << 2) >> 2];
      if ((i2 | 0) == (i26 | 0)) {
       i34 = i26;
       break;
      } else i2 = i2 + 1 | 0;
     }
    }
   } else {
    i2 = i7;
    while (1) {
     i35 = (i2 | 0) > 0;
     if (i35 & (HEAP32[i9 + (i2 << 2) >> 2] | 0) == -1) i2 = i2 + -1 | 0; else break;
    }
    if (i35) {
     i7 = i2;
     i24 = i2;
     while (1) {
      i3 = i24;
      i24 = i24 + -1 | 0;
      if ((HEAP32[i9 + (i24 << 2) >> 2] | 0) == -1) i36 = i7; else i36 = (HEAP32[i11 + (i7 << 2) >> 2] | 0) < (HEAP32[i11 + (i24 << 2) >> 2] | 0) ? i24 : i7;
      if ((i3 | 0) <= 1) {
       i37 = i36;
       break;
      } else i7 = i36;
     }
    } else i37 = i2;
    i7 = i10 + (i37 << 2) | 0;
    i24 = i22 - i37 | 0;
    i3 = i24 + (HEAP32[i7 >> 2] | 0) | 0;
    i30 = (i26 | 0) > (i3 | 0) ? i26 : i3;
    HEAP32[i10 + (i33 << 2) >> 2] = i30;
    _memset(i28 | 0, 0, i32 | 0) | 0;
    i3 = HEAP32[i7 >> 2] | 0;
    if ((i3 | 0) >= 0) {
     i7 = i23 + i19 | 0;
     i29 = i9 + (i37 << 2) | 0;
     i4 = 0;
     while (1) {
      i1 = HEAP32[i8 + (i37 * 72 | 0) + (i4 << 2) >> 2] | 0;
      if ((i1 | 0) != -1) HEAP32[i8 + (i33 * 72 | 0) + (i24 + i4 << 2) >> 2] = HEAP32[i17 + (((i7 + i1 - (HEAP32[i29 >> 2] | 0) | 0) % (i19 | 0) | 0) << 2) >> 2];
      if ((i4 | 0) < (i3 | 0)) i4 = i4 + 1 | 0; else break;
     }
    }
    if ((i26 | 0) < 0) i34 = i30; else {
     i4 = 0;
     while (1) {
      i3 = i8 + (i22 * 72 | 0) + (i4 << 2) | 0;
      i29 = HEAP32[i3 >> 2] | 0;
      i7 = i8 + (i33 * 72 | 0) + (i4 << 2) | 0;
      HEAP32[i7 >> 2] = HEAP32[i7 >> 2] ^ i29;
      HEAP32[i3 >> 2] = HEAP32[i16 + (i29 << 2) >> 2];
      if ((i4 | 0) == (i26 | 0)) {
       i34 = i30;
       break;
      } else i4 = i4 + 1 | 0;
     }
    }
   }
   HEAP32[i11 + (i33 << 2) >> 2] = i22 - i34;
   if ((i22 | 0) >= (i27 | 0)) break;
   i4 = HEAP32[i12 + (i33 << 2) >> 2] | 0;
   if ((i4 | 0) == -1) i38 = 0; else i38 = HEAP32[i17 + (i4 << 2) >> 2] | 0;
   i4 = i9 + (i33 << 2) | 0;
   HEAP32[i4 >> 2] = i38;
   if ((i34 | 0) < 1) i39 = i38; else {
    i30 = 1;
    i29 = i38;
    while (1) {
     i3 = HEAP32[i12 + (i33 - i30 << 2) >> 2] | 0;
     if ((i3 | 0) != -1 ? (i7 = HEAP32[i8 + (i33 * 72 | 0) + (i30 << 2) >> 2] | 0, (i7 | 0) != 0) : 0) {
      i24 = i29 ^ HEAP32[i17 + ((((HEAP32[i16 + (i7 << 2) >> 2] | 0) + i3 | 0) % (i19 | 0) | 0) << 2) >> 2];
      HEAP32[i4 >> 2] = i24;
      i40 = i24;
     } else i40 = i29;
     if ((i30 | 0) == (i34 | 0)) {
      i39 = i40;
      break;
     } else {
      i30 = i30 + 1 | 0;
      i29 = i40;
     }
    }
   }
   i23 = HEAP32[i16 + (i39 << 2) >> 2] | 0;
   HEAP32[i4 >> 2] = i23;
   if ((i34 | 0) > (i21 | 0)) break; else i26 = i34;
  }
  if ((i34 | 0) > (i21 | 0)) {
   i31 = -1;
   STACKTOP = i6;
   return i31 | 0;
  }
  if ((i34 | 0) >= 0) {
   i21 = 0;
   while (1) {
    i26 = i8 + (i33 * 72 | 0) + (i21 << 2) | 0;
    HEAP32[i26 >> 2] = HEAP32[i16 + (HEAP32[i26 >> 2] << 2) >> 2];
    if ((i21 | 0) == (i34 | 0)) break; else i21 = i21 + 1 | 0;
   }
   if ((i34 | 0) >= 1) {
    _memcpy(i14 + 4 | 0, i8 + (i33 * 72 | 0) + 4 | 0, i34 << 2 | 0) | 0;
    i8 = 0;
    i21 = 1;
    while (1) {
     i16 = 1;
     i26 = 1;
     while (1) {
      i23 = i14 + (i16 << 2) | 0;
      i39 = HEAP32[i23 >> 2] | 0;
      if ((i39 | 0) == -1) i41 = i26; else {
       i40 = (i39 + i16 | 0) % (i19 | 0) | 0;
       HEAP32[i23 >> 2] = i40;
       i41 = HEAP32[i17 + (i40 << 2) >> 2] ^ i26;
      }
      if ((i16 | 0) == (i34 | 0)) break; else {
       i16 = i16 + 1 | 0;
       i26 = i41;
      }
     }
     if (!i41) {
      HEAP32[i13 + (i8 << 2) >> 2] = i19 - i21;
      i42 = i8 + 1 | 0;
     } else i42 = i8;
     if ((i19 | 0) > (i21 | 0)) {
      i8 = i42;
      i21 = i21 + 1 | 0;
     } else {
      i43 = i42;
      break;
     }
    }
   } else i43 = 0;
  } else i43 = 0;
  if ((i43 | 0) != (i34 | 0)) {
   i31 = -1;
   STACKTOP = i6;
   return i31 | 0;
  }
  if ((i34 | 0) > 0) {
   i43 = 0;
   do {
    i42 = i15 + (HEAP32[i13 + (i43 << 2) >> 2] | 0) | 0;
    HEAP8[i42 >> 0] = HEAP8[i42 >> 0] ^ 1;
    i43 = i43 + 1 | 0;
   } while ((i43 | 0) != (i34 | 0));
   i44 = i33;
  } else i44 = i33;
 } else i44 = 0;
 i33 = i5;
 HEAP32[i33 >> 2] = 0;
 HEAP32[i33 + 4 >> 2] = 0;
 i33 = i18 - i20 | 0;
 i20 = 1;
 i34 = 0;
 i43 = 0;
 i13 = 0;
 do {
  i42 = ___muldi3(i20 | 0, i34 | 0, HEAPU8[i15 + i33 >> 0] | 0, 0) | 0;
  i43 = _i64Add(i42 | 0, getTempRet0() | 0, i43 | 0, i13 | 0) | 0;
  i13 = getTempRet0() | 0;
  i42 = i5;
  HEAP32[i42 >> 2] = i43;
  HEAP32[i42 + 4 >> 2] = i13;
  i20 = _bitshift64Shl(i20 | 0, i34 | 0, 1) | 0;
  i34 = getTempRet0() | 0;
  i33 = i33 + 1 | 0;
 } while ((i33 | 0) < (i18 | 0));
 if (!i25) {
  i31 = 0;
  STACKTOP = i6;
  return i31 | 0;
 }
 i31 = HEAP32[i10 + (i44 << 2) >> 2] | 0;
 STACKTOP = i6;
 return i31 | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_PKff(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, d34 = 0.0, d35 = 0.0, d36 = 0.0, d37 = 0.0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i6 + 40 | 0;
 i8 = i6;
 i9 = i1 + 4 | 0;
 HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
 i10 = i2 + 16 | 0;
 i11 = i2 + 20 | 0;
 if ((HEAP32[i11 >> 2] | 0) == (HEAP32[i10 >> 2] | 0)) {
  i12 = 0;
  STACKTOP = i6;
  return i12 | 0;
 }
 i13 = i3 + 16 | 0;
 i14 = i3 + 20 | 0;
 if ((HEAP32[i14 >> 2] | 0) == (HEAP32[i13 >> 2] | 0)) {
  i12 = 0;
  STACKTOP = i6;
  return i12 | 0;
 }
 d15 = d5 * d5;
 if (!(__ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_(i8, i4, 0.0) | 0)) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29299, 24) | 0, 29324, 121) | 0, 33554, 6) | 0, 196) | 0, 33561, 2) | 0, 29446, 32) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i16 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 28 >> 2] & 63](i16, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i17) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i1, ((HEAP32[i11 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) | 0) / 20 | 0);
 i4 = HEAP32[i10 >> 2] | 0;
 L10 : do if ((HEAP32[i11 >> 2] | 0) == (i4 | 0)) i18 = 0; else {
  i17 = i2 + 4 | 0;
  i16 = i8 + 24 | 0;
  i19 = i8 + 28 | 0;
  i20 = i8 + 32 | 0;
  i21 = i8 + 4 | 0;
  i22 = i8 + 8 | 0;
  i23 = i8 + 12 | 0;
  i24 = i8 + 16 | 0;
  i25 = i8 + 20 | 0;
  i26 = i3 + 4 | 0;
  i27 = i7 + 4 | 0;
  i28 = i1 + 8 | 0;
  i29 = i1 + 12 | 0;
  i30 = i7 + 4 | 0;
  i31 = 0;
  i32 = i4;
  L12 : while (1) {
   i33 = i32;
   d5 = +HEAPF32[i33 + (i31 * 20 | 0) >> 2];
   d34 = +HEAPF32[i33 + (i31 * 20 | 0) + 4 >> 2];
   d35 = +HEAPF32[i20 >> 2] + (d5 * +HEAPF32[i16 >> 2] + d34 * +HEAPF32[i19 >> 2]);
   d36 = (+HEAPF32[i22 >> 2] + (d5 * +HEAPF32[i8 >> 2] + d34 * +HEAPF32[i21 >> 2])) / d35;
   d37 = (+HEAPF32[i25 >> 2] + (d5 * +HEAPF32[i23 >> 2] + d34 * +HEAPF32[i24 >> 2])) / d35;
   i38 = HEAP32[i14 >> 2] | 0;
   i39 = HEAP32[i13 >> 2] | 0;
   do if ((i38 | 0) != (i39 | 0)) {
    i40 = (HEAP32[i17 >> 2] | 0) + (Math_imul(HEAP32[i2 >> 2] | 0, i31) | 0) | 0;
    i41 = i33 + (i31 * 20 | 0) + 16 | 0;
    i42 = 0;
    i43 = -1;
    i44 = -1;
    i45 = 2147483647;
    i46 = i38;
    i47 = i39;
    while (1) {
     i48 = i47;
     if ((HEAP8[i41 >> 0] | 0) == (HEAP8[i48 + (i42 * 20 | 0) + 16 >> 0] | 0) ? (d35 = d36 - +HEAPF32[i48 + (i42 * 20 | 0) >> 2], d34 = d37 - +HEAPF32[i48 + (i42 * 20 | 0) + 4 >> 2], !(d35 * d35 + d34 * d34 > d15)) : 0) {
      i48 = Math_imul(HEAP32[i3 >> 2] | 0, i42) | 0;
      i49 = __ZN6vision18HammingDistance768EPKjS1_(i40, (HEAP32[i26 >> 2] | 0) + i48 | 0) | 0;
      i48 = i49 >>> 0 < i43 >>> 0;
      i50 = i48 ? i49 : i43;
      i51 = i48 ? i43 : i49 >>> 0 < i44 >>> 0 ? i49 : i44;
      i52 = i48 ? i42 : i45;
      i53 = HEAP32[i13 >> 2] | 0;
      i54 = HEAP32[i14 >> 2] | 0;
     } else {
      i50 = i43;
      i51 = i44;
      i52 = i45;
      i53 = i47;
      i54 = i46;
     }
     i42 = i42 + 1 | 0;
     if (i42 >>> 0 >= ((i54 - i53 | 0) / 20 | 0) >>> 0) break; else {
      i43 = i50;
      i44 = i51;
      i45 = i52;
      i46 = i54;
      i47 = i53;
     }
    }
    if ((i50 | 0) != -1) {
     if ((i52 | 0) == -1) break L12;
     if ((i51 | 0) == -1) {
      HEAP32[i7 >> 2] = i31;
      HEAP32[i27 >> 2] = i52;
      i47 = HEAP32[i9 >> 2] | 0;
      if (i47 >>> 0 < (HEAP32[i28 >> 2] | 0) >>> 0) {
       i46 = i7;
       i45 = HEAP32[i46 + 4 >> 2] | 0;
       i44 = i47;
       HEAP32[i44 >> 2] = HEAP32[i46 >> 2];
       HEAP32[i44 + 4 >> 2] = i45;
       HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i7);
      break;
     }
     if (+(i50 >>> 0) / +(i51 >>> 0) < +HEAPF32[i29 >> 2]) {
      HEAP32[i7 >> 2] = i31;
      HEAP32[i30 >> 2] = i52;
      i45 = HEAP32[i9 >> 2] | 0;
      if (i45 >>> 0 < (HEAP32[i28 >> 2] | 0) >>> 0) {
       i44 = i7;
       i46 = HEAP32[i44 + 4 >> 2] | 0;
       i47 = i45;
       HEAP32[i47 >> 2] = HEAP32[i44 >> 2];
       HEAP32[i47 + 4 >> 2] = i46;
       HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i7);
     }
    }
   } while (0);
   i31 = i31 + 1 | 0;
   i32 = HEAP32[i10 >> 2] | 0;
   i39 = ((HEAP32[i11 >> 2] | 0) - i32 | 0) / 20 | 0;
   if (i31 >>> 0 >= i39 >>> 0) {
    i18 = i39;
    break L10;
   }
  }
  i31 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29479, 71) | 0, 29324, 121) | 0, 33554, 6) | 0, 241) | 0, 33561, 2) | 0, 29551, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i31 + (HEAP32[(HEAP32[i31 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i32 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i28 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i32 >> 2] | 0) + 28 >> 2] & 63](i32, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i31, i28) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i31) | 0;
  _abort();
 } while (0);
 i11 = (HEAP32[i9 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3;
 if (i11 >>> 0 > i18 >>> 0) {
  i18 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29569, 59) | 0, 29324, 121) | 0, 33554, 6) | 0, 256) | 0, 33561, 2) | 0, 29629, 33) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i18 + (HEAP32[(HEAP32[i18 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i18, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i18) | 0;
  _abort();
 }
 i12 = i11;
 STACKTOP = i6;
 return i12 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i9 + 12 | 0;
 i11 = i9 + 8 | 0;
 i12 = i9 + 4 | 0;
 i13 = i9;
 __ZNKSt3__28ios_base6getlocEv(i10, i4);
 i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58516) | 0;
 __ZNSt3__26localeD2Ev(i10);
 HEAP32[i5 >> 2] = 0;
 i15 = i7;
 i7 = 0;
 L1 : while (1) {
  i16 = HEAP32[i2 >> 2] | 0;
  if (!((i15 | 0) != (i8 | 0) & (i7 | 0) == 0)) {
   i17 = i16;
   break;
  }
  i18 = i16;
  if (i16) {
   i19 = HEAP32[i16 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i16 + 16 >> 2] | 0)) i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i16 >> 2] | 0) + 36 >> 2] & 127](i16) | 0; else i20 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i20, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i21 = 0;
    i22 = 1;
    i23 = 0;
   } else {
    i21 = i16;
    i22 = 0;
    i23 = i18;
   }
  } else {
   i21 = 0;
   i22 = 1;
   i23 = i18;
  }
  i18 = HEAP32[i3 >> 2] | 0;
  i16 = i18;
  do if (i18) {
   i19 = HEAP32[i18 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i18 + 16 >> 2] | 0)) i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i18 >> 2] | 0) + 36 >> 2] & 127](i18) | 0; else i24 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i24, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i22) {
    i25 = i18;
    i26 = i16;
    break;
   } else {
    i27 = 60;
    break L1;
   } else {
    HEAP32[i3 >> 2] = 0;
    i28 = 0;
    i27 = 15;
    break;
   }
  } else {
   i28 = i16;
   i27 = 15;
  } while (0);
  if ((i27 | 0) == 15) {
   i27 = 0;
   if (i22) {
    i27 = 60;
    break;
   } else {
    i25 = 0;
    i26 = i28;
   }
  }
  L24 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i14 >> 2] | 0) + 52 >> 2] & 63](i14, HEAP32[i15 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
   i16 = i15 + 4 | 0;
   if ((i16 | 0) == (i8 | 0)) {
    i27 = 60;
    break L1;
   }
   i18 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i14 >> 2] | 0) + 52 >> 2] & 63](i14, HEAP32[i16 >> 2] | 0, 0) | 0;
   switch (i18 << 24 >> 24) {
   case 48:
   case 69:
    {
     i19 = i15 + 8 | 0;
     if ((i19 | 0) == (i8 | 0)) {
      i27 = 60;
      break L1;
     }
     i29 = i18;
     i30 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i14 >> 2] | 0) + 52 >> 2] & 63](i14, HEAP32[i19 >> 2] | 0, 0) | 0;
     i31 = i16;
     break;
    }
   default:
    {
     i29 = 0;
     i30 = i18;
     i31 = i15;
    }
   }
   i18 = HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i12 >> 2] = i23;
   HEAP32[i13 >> 2] = i26;
   HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i13 >> 2];
   i16 = FUNCTION_TABLE_iiiiiiiii[i18 & 15](i1, i11, i10, i4, i5, i6, i30, i29) | 0;
   HEAP32[i2 >> 2] = i16;
   i32 = i31 + 8 | 0;
  } else {
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i14 >> 2] | 0) + 12 >> 2] & 63](i14, 8192, HEAP32[i15 >> 2] | 0) | 0)) {
    i16 = i21 + 12 | 0;
    i18 = HEAP32[i16 >> 2] | 0;
    i19 = i21 + 16 | 0;
    if ((i18 | 0) == (HEAP32[i19 >> 2] | 0)) i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i33 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i18 >> 2] | 0) | 0;
    i18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, i33) | 0;
    if ((i18 | 0) != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, HEAP32[i15 >> 2] | 0) | 0)) {
     HEAP32[i5 >> 2] = 4;
     i32 = i15;
     break;
    }
    i18 = HEAP32[i16 >> 2] | 0;
    if ((i18 | 0) == (HEAP32[i19 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 40 >> 2] & 127](i21) | 0; else {
     HEAP32[i16 >> 2] = i18 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i18 >> 2] | 0) | 0;
    }
    i32 = i15 + 4 | 0;
    break;
   }
   i18 = i15;
   while (1) {
    i16 = i18 + 4 | 0;
    if ((i16 | 0) == (i8 | 0)) {
     i34 = i8;
     break;
    }
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i14 >> 2] | 0) + 12 >> 2] & 63](i14, 8192, HEAP32[i16 >> 2] | 0) | 0) i18 = i16; else {
     i34 = i16;
     break;
    }
   }
   i18 = i25;
   i16 = i21;
   while (1) {
    if (i16) {
     i19 = HEAP32[i16 + 12 >> 2] | 0;
     if ((i19 | 0) == (HEAP32[i16 + 16 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i16 >> 2] | 0) + 36 >> 2] & 127](i16) | 0; else i35 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i35, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[i2 >> 2] = 0;
      i36 = 0;
      i37 = 1;
     } else {
      i36 = i16;
      i37 = 0;
     }
    } else {
     i36 = 0;
     i37 = 1;
    }
    do if (i18) {
     i19 = HEAP32[i18 + 12 >> 2] | 0;
     if ((i19 | 0) == (HEAP32[i18 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i18 >> 2] | 0) + 36 >> 2] & 127](i18) | 0; else i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i38, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i37) {
      i39 = i18;
      break;
     } else {
      i32 = i34;
      break L24;
     } else {
      HEAP32[i3 >> 2] = 0;
      i27 = 40;
      break;
     }
    } else i27 = 40; while (0);
    if ((i27 | 0) == 40) {
     i27 = 0;
     if (i37) {
      i32 = i34;
      break L24;
     } else i39 = 0;
    }
    i19 = i36 + 12 | 0;
    i40 = HEAP32[i19 >> 2] | 0;
    i41 = i36 + 16 | 0;
    if ((i40 | 0) == (HEAP32[i41 >> 2] | 0)) i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i36 >> 2] | 0) + 36 >> 2] & 127](i36) | 0; else i42 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i40 >> 2] | 0) | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i14 >> 2] | 0) + 12 >> 2] & 63](i14, 8192, i42) | 0)) {
     i32 = i34;
     break L24;
    }
    i40 = HEAP32[i19 >> 2] | 0;
    if ((i40 | 0) == (HEAP32[i41 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i36 >> 2] | 0) + 40 >> 2] & 127](i36) | 0; else {
     HEAP32[i19 >> 2] = i40 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i40 >> 2] | 0) | 0;
    }
    i18 = i39;
    i16 = i36;
   }
  } while (0);
  i15 = i32;
  i7 = HEAP32[i5 >> 2] | 0;
 }
 if ((i27 | 0) == 60) {
  HEAP32[i5 >> 2] = 4;
  i17 = i21;
 }
 if (i17) {
  i21 = HEAP32[i17 + 12 >> 2] | 0;
  if ((i21 | 0) == (HEAP32[i17 + 16 >> 2] | 0)) i43 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i17 >> 2] | 0) + 36 >> 2] & 127](i17) | 0; else i43 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i21 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i43, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i44 = 0;
   i45 = 1;
  } else {
   i44 = i17;
   i45 = 0;
  }
 } else {
  i44 = 0;
  i45 = 1;
 }
 i17 = HEAP32[i3 >> 2] | 0;
 do if (i17) {
  i2 = HEAP32[i17 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i17 + 16 >> 2] | 0)) i46 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i17 >> 2] | 0) + 36 >> 2] & 127](i17) | 0; else i46 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i46, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i45) break; else {
   i27 = 75;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i27 = 73;
   break;
  }
 } else i27 = 73; while (0);
 if ((i27 | 0) == 73 ? i45 : 0) i27 = 75;
 if ((i27 | 0) == 75) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 STACKTOP = i9;
 return i44 | 0;
}

function _kpmMatching(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, d18 = 0.0, d19 = 0.0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i3 + 16 | 0;
 i5 = i3 + 8 | 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  _arLog(0, 3, 20426, i3);
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i7 = HEAP32[i1 + 12 >> 2] | 0;
 i8 = HEAP32[i1 + 16 >> 2] | 0;
 i9 = HEAP32[i1 + 20 >> 2] | 0;
 i10 = (i9 | 0) == 1;
 if (!i10) {
  i11 = _kpmUtilResizeImage(i2, i7, i8, i9, i3 + 44 | 0, i3 + 40 | 0) | 0;
  if (!i11) {
   i6 = -1;
   STACKTOP = i3;
   return i6 | 0;
  } else {
   i12 = i11;
   i13 = 1;
  }
 } else {
  i12 = i2;
  i13 = 0;
 }
 __ZN6vision20VisualDatabaseFacade5queryEPhmm(HEAP32[i1 >> 2] | 0, i12, i7, i8) | 0;
 i8 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[i1 >> 2] | 0) | 0;
 i7 = (HEAP32[i8 + 4 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) | 0;
 i8 = (i7 | 0) / 20 | 0;
 i2 = i1 + 48 | 0;
 HEAP32[i2 >> 2] = i8;
 if (!i7) {
  i7 = HEAP32[i1 + 56 >> 2] | 0;
  if ((i7 | 0) > 0) {
   i11 = HEAP32[i1 + 52 >> 2] | 0;
   i14 = 0;
   do {
    HEAP32[i11 + (i14 * 68 | 0) + 60 >> 2] = -1;
    i14 = i14 + 1 | 0;
   } while ((i14 | 0) < (i7 | 0));
   i15 = i7;
   i16 = 52;
  }
 } else {
  i7 = i1 + 44 | 0;
  i14 = HEAP32[i7 >> 2] | 0;
  if (!i14) i17 = i8; else {
   _free(i14);
   i17 = HEAP32[i2 >> 2] | 0;
  }
  i14 = _malloc(i17 << 3) | 0;
  HEAP32[i7 >> 2] = i14;
  if (!i14) {
   _arLog(0, 3, 20510, i5);
   _exit(1);
  }
  i5 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[i1 >> 2] | 0) | 0;
  L21 : do if (i10) {
   i14 = HEAP32[i2 >> 2] | 0;
   if ((i14 | 0) > 0) {
    i17 = i1 + 4 | 0;
    i8 = 0;
    i11 = i14;
    while (1) {
     i14 = HEAP32[i5 >> 2] | 0;
     d18 = +HEAPF32[i14 + (i8 * 20 | 0) >> 2];
     d19 = +HEAPF32[i14 + (i8 * 20 | 0) + 4 >> 2];
     i14 = HEAP32[i17 >> 2] | 0;
     if (!i14) {
      i20 = HEAP32[i7 >> 2] | 0;
      HEAPF32[i20 + (i8 << 3) >> 2] = d18;
      HEAPF32[i20 + (i8 << 3) + 4 >> 2] = d19;
      i21 = i11;
     } else {
      i20 = HEAP32[i7 >> 2] | 0;
      _arParamObserv2IdealLTf(i14 + 184 | 0, d18, d19, i20 + (i8 << 3) | 0, i20 + (i8 << 3) + 4 | 0) | 0;
      i21 = HEAP32[i2 >> 2] | 0;
     }
     i8 = i8 + 1 | 0;
     if ((i8 | 0) >= (i21 | 0)) break; else i11 = i21;
    }
   }
  } else switch (i9 | 0) {
  case 5:
   {
    i11 = HEAP32[i2 >> 2] | 0;
    if ((i11 | 0) <= 0) break L21;
    i8 = i1 + 4 | 0;
    i17 = 0;
    i20 = i11;
    while (1) {
     i11 = HEAP32[i5 >> 2] | 0;
     d19 = +HEAPF32[i11 + (i17 * 20 | 0) >> 2];
     d18 = +HEAPF32[i11 + (i17 * 20 | 0) + 4 >> 2];
     i11 = HEAP32[i8 >> 2] | 0;
     if (!i11) {
      i14 = HEAP32[i7 >> 2] | 0;
      HEAPF32[i14 + (i17 << 3) >> 2] = d19 * 1.5;
      HEAPF32[i14 + (i17 << 3) + 4 >> 2] = d18 * 1.5;
      i22 = i20;
     } else {
      i14 = HEAP32[i7 >> 2] | 0;
      _arParamObserv2IdealLTf(i11 + 184 | 0, d19 * 1.5, d18 * 1.5, i14 + (i17 << 3) | 0, i14 + (i17 << 3) + 4 | 0) | 0;
      i22 = HEAP32[i2 >> 2] | 0;
     }
     i17 = i17 + 1 | 0;
     if ((i17 | 0) >= (i22 | 0)) break; else i20 = i22;
    }
    break;
   }
  case 2:
   {
    i20 = HEAP32[i2 >> 2] | 0;
    if ((i20 | 0) <= 0) break L21;
    i17 = i1 + 4 | 0;
    i8 = 0;
    i14 = i20;
    while (1) {
     i20 = HEAP32[i5 >> 2] | 0;
     d18 = +HEAPF32[i20 + (i8 * 20 | 0) >> 2];
     d19 = +HEAPF32[i20 + (i8 * 20 | 0) + 4 >> 2];
     i20 = HEAP32[i17 >> 2] | 0;
     if (!i20) {
      i11 = HEAP32[i7 >> 2] | 0;
      HEAPF32[i11 + (i8 << 3) >> 2] = d18 * 2.0;
      HEAPF32[i11 + (i8 << 3) + 4 >> 2] = d19 * 2.0;
      i23 = i14;
     } else {
      i11 = HEAP32[i7 >> 2] | 0;
      _arParamObserv2IdealLTf(i20 + 184 | 0, d18 * 2.0, d19 * 2.0, i11 + (i8 << 3) | 0, i11 + (i8 << 3) + 4 | 0) | 0;
      i23 = HEAP32[i2 >> 2] | 0;
     }
     i8 = i8 + 1 | 0;
     if ((i8 | 0) >= (i23 | 0)) break; else i14 = i23;
    }
    break;
   }
  case 4:
   {
    i14 = HEAP32[i2 >> 2] | 0;
    if ((i14 | 0) <= 0) break L21;
    i8 = i1 + 4 | 0;
    i17 = 0;
    i11 = i14;
    while (1) {
     i14 = HEAP32[i5 >> 2] | 0;
     d19 = +HEAPF32[i14 + (i17 * 20 | 0) >> 2];
     d18 = +HEAPF32[i14 + (i17 * 20 | 0) + 4 >> 2];
     i14 = HEAP32[i8 >> 2] | 0;
     if (!i14) {
      i20 = HEAP32[i7 >> 2] | 0;
      HEAPF32[i20 + (i17 << 3) >> 2] = d19 * 3.0;
      HEAPF32[i20 + (i17 << 3) + 4 >> 2] = d18 * 3.0;
      i24 = i11;
     } else {
      i20 = HEAP32[i7 >> 2] | 0;
      _arParamObserv2IdealLTf(i14 + 184 | 0, d19 * 3.0, d18 * 3.0, i20 + (i17 << 3) | 0, i20 + (i17 << 3) + 4 | 0) | 0;
      i24 = HEAP32[i2 >> 2] | 0;
     }
     i17 = i17 + 1 | 0;
     if ((i17 | 0) >= (i24 | 0)) break; else i11 = i24;
    }
    break;
   }
  default:
   {
    i11 = HEAP32[i2 >> 2] | 0;
    if ((i11 | 0) <= 0) break L21;
    i17 = i1 + 4 | 0;
    i8 = 0;
    i20 = i11;
    while (1) {
     i11 = HEAP32[i5 >> 2] | 0;
     d18 = +HEAPF32[i11 + (i8 * 20 | 0) >> 2];
     d19 = +HEAPF32[i11 + (i8 * 20 | 0) + 4 >> 2];
     i11 = HEAP32[i17 >> 2] | 0;
     if (!i11) {
      i14 = HEAP32[i7 >> 2] | 0;
      HEAPF32[i14 + (i8 << 3) >> 2] = d18 * 4.0;
      HEAPF32[i14 + (i8 << 3) + 4 >> 2] = d19 * 4.0;
      i25 = i20;
     } else {
      i14 = HEAP32[i7 >> 2] | 0;
      _arParamObserv2IdealLTf(i11 + 184 | 0, d18 * 4.0, d19 * 4.0, i14 + (i8 << 3) | 0, i14 + (i8 << 3) + 4 | 0) | 0;
      i25 = HEAP32[i2 >> 2] | 0;
     }
     i8 = i8 + 1 | 0;
     if ((i8 | 0) >= (i25 | 0)) break; else i20 = i25;
    }
   }
  } while (0);
  i25 = i1 + 56 | 0;
  if ((HEAP32[i25 >> 2] | 0) > 0) {
   i2 = i1 + 36 | 0;
   i7 = i1 + 52 | 0;
   i5 = i1 + 4 | 0;
   i24 = 0;
   do {
    i23 = HEAP32[i7 >> 2] | 0;
    HEAP32[i23 + (i24 * 68 | 0) + 48 >> 2] = HEAP32[(HEAP32[i2 >> 2] | 0) + (i24 * 12 | 0) + 8 >> 2];
    HEAP32[i23 + (i24 * 68 | 0) + 60 >> 2] = -1;
    if (((HEAP32[i23 + (i24 * 68 | 0) + 64 >> 2] | 0) == 0 ? (i23 = __ZNK6vision20VisualDatabaseFacade7inliersEv(HEAP32[i1 >> 2] | 0) | 0, i22 = __ZN6vision20VisualDatabaseFacade9matchedIdEv(HEAP32[i1 >> 2] | 0) | 0, (i22 | 0) >= 0) : 0) ? (i9 = HEAP32[i5 >> 2] | 0, i21 = __ZNK6vision20VisualDatabaseFacade18get3DFeaturePointsEi(HEAP32[i1 >> 2] | 0, i22) | 0, i10 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[i1 >> 2] | 0) | 0, i20 = HEAP32[i7 >> 2] | 0, (__Z21kpmUtilGetPose_binaryP9ARParamLTRKNSt3__26vectorIN6vision7match_tENS1_9allocatorIS4_EEEERKNS2_INS3_7Point3dIfEENS5_ISB_EEEERKNS2_INS3_12FeaturePointENS5_ISG_EEEEPA4_fPf(i9, i23, i21, i10, i20 + (i24 * 68 | 0) | 0, i20 + (i24 * 68 | 0) + 52 | 0) | 0) == 0) : 0) {
     i20 = HEAP32[i7 >> 2] | 0;
     HEAP32[i20 + (i24 * 68 | 0) + 60 >> 2] = 0;
     i10 = (HEAP32[i23 + 4 >> 2] | 0) - (HEAP32[i23 >> 2] | 0) >> 3;
     HEAP32[i20 + (i24 * 68 | 0) + 56 >> 2] = i10;
     HEAP32[i20 + (i24 * 68 | 0) + 48 >> 2] = HEAP32[i1 + 60 + (i22 << 2) >> 2];
     d19 = +HEAPF32[i20 + (i24 * 68 | 0) + 52 >> 2];
     HEAP32[i4 >> 2] = i24;
     HEAP32[i4 + 4 >> 2] = i10;
     HEAP32[i4 + 8 >> 2] = i10;
     HEAPF64[i4 + 16 >> 3] = d19;
     _arLog(0, 1, 20470, i4);
    }
    i24 = i24 + 1 | 0;
    i10 = HEAP32[i25 >> 2] | 0;
   } while ((i24 | 0) < (i10 | 0));
   i15 = i10;
   i16 = 52;
  }
 }
 if ((i16 | 0) == 52 ? (i15 | 0) > 0 : 0) {
  i16 = HEAP32[i1 + 52 >> 2] | 0;
  i1 = 0;
  do {
   HEAP32[i16 + (i1 * 68 | 0) + 64 >> 2] = 0;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) < (i15 | 0));
 }
 if (!i13) {
  i6 = 0;
  STACKTOP = i3;
  return i6 | 0;
 }
 _free(i12);
 i6 = 0;
 STACKTOP = i3;
 return i6 | 0;
}

function __ZN6vision25DoGScaleInvariantDetector21findSubpixelLocationsEPKNS_25GaussianScaleSpacePyramidE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, d38 = 0.0, d39 = 0.0, i40 = 0, i41 = 0, d42 = 0.0, d43 = 0.0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, i54 = 0, d55 = 0.0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i4 = i3 + 48 | 0;
 i5 = i3;
 i6 = i3 + 36 | 0;
 d7 = +HEAPF32[i1 + 52 >> 2];
 d8 = d7 * d7;
 d7 = +HEAPF32[i1 + 56 >> 2];
 d9 = d7 + 1.0;
 d10 = d9 * d9 / d7;
 i11 = i1 + 60 | 0;
 i12 = i1 + 64 | 0;
 i13 = HEAP32[i11 >> 2] | 0;
 do if ((HEAP32[i12 >> 2] | 0) != (i13 | 0)) {
  i14 = i1 + 48 | 0;
  i15 = i1 + 32 | 0;
  i16 = i5 + 32 | 0;
  i17 = i5 + 4 | 0;
  i18 = i5 + 8 | 0;
  i19 = i5 + 20 | 0;
  i20 = i5 + 16 | 0;
  i21 = i5 + 28 | 0;
  i22 = i5 + 12 | 0;
  i23 = i6 + 4 | 0;
  i24 = i6 + 8 | 0;
  i25 = i1 + 88 | 0;
  i26 = 0;
  i27 = 0;
  i28 = i13;
  while (1) {
   i29 = i28;
   i30 = i29 + (i27 * 36 | 0) | 0;
   i31 = i29 + (i27 * 36 | 0) + 16 | 0;
   i32 = HEAP32[i31 >> 2] | 0;
   i33 = HEAP32[i14 >> 2] | 0;
   if ((i32 | 0) >= (i33 | 0)) {
    i34 = 9;
    break;
   }
   i35 = i29 + (i27 * 36 | 0) + 12 | 0;
   i36 = HEAP32[i35 >> 2] | 0;
   i37 = (Math_imul(i36, i33) | 0) + i32 | 0;
   i32 = i29 + (i27 * 36 | 0) + 4 | 0;
   d7 = 1.0 / +(1 << i36 | 0);
   d9 = d7 * .5 + -.5;
   d38 = +HEAPF32[i30 >> 2] * d7 + d9;
   d39 = +HEAPF32[i32 >> 2] * d7 + d9;
   i36 = ~~(d38 + .5);
   i33 = ~~(d39 + .5);
   i40 = HEAP32[i15 >> 2] | 0;
   i41 = i40 + (i37 << 5) | 0;
   if (((__ZN6vision22ComputeSubpixelHessianEPfS0_RKNS_5ImageES3_S3_ii(i5, i6, i40 + (i37 + -1 << 5) | 0, i41, i40 + (i37 + 1 << 5) | 0, i36, i33) | 0 ? (d9 = +HEAPF32[i16 >> 2], d7 = +HEAPF32[i17 >> 2], d42 = d7 * d7, d43 = +HEAPF32[i18 >> 2], d44 = +HEAPF32[i19 >> 2], d45 = +HEAPF32[i20 >> 2], d46 = d43 * d43, d47 = +HEAPF32[i5 >> 2], d48 = d44 * d44, d49 = d45 * d47, d50 = d7 * 2.0 * d43 * d44 - d9 * d42 - d46 * d45 - d48 * d47 + d9 * d49, !(+Math_abs(+d50) <= 1.1920928955078125e-07)) : 0) ? (d51 = 1.0 / d50, d50 = d51 * (d43 * +HEAPF32[i21 >> 2] - d9 * d7), d52 = (d7 * d44 - d43 * d45) * d51, d7 = d51 * (d43 * +HEAPF32[i22 >> 2] - d44 * d47), d44 = d49 - d42, d42 = +HEAPF32[i6 >> 2], d49 = +HEAPF32[i23 >> 2], d43 = +HEAPF32[i24 >> 2], d53 = (d9 * d45 - d48) * d51 * d42 + d50 * d49 + d52 * d43, d48 = d42 * d50 + (d9 * d47 - d46) * d51 * d49 + d7 * d43, d46 = d44 * d51 * d43 + (d52 * d42 + d49 * d7), !(d53 * d53 + d48 * d48 > +HEAPF32[i25 >> 2])) : 0) ? (i37 = i29 + (i27 * 36 | 0) + 32 | 0, d7 = d45 + d47, !(d44 == 0.0)) : 0) {
    HEAPF32[i37 >> 2] = d7 * d7 / d44;
    i40 = i29 + (i27 * 36 | 0) + 24 | 0;
    d44 = +HEAPF32[i40 >> 2];
    i54 = (__ZNK6vision5Image3getIfEEPKT_m(i41, i33) | 0) + (i36 << 2) | 0;
    if (!(d44 == +HEAPF32[i54 >> 2])) {
     i34 = 15;
     break;
    }
    i54 = (__ZNK6vision5Image3getIfEEPKT_m(i41, i33) | 0) + (i36 << 2) | 0;
    HEAPF32[i40 >> 2] = +HEAPF32[i54 >> 2] - (d53 * +HEAPF32[i6 >> 2] + d48 * +HEAPF32[i23 >> 2] + d46 * +HEAPF32[i24 >> 2]);
    i54 = HEAP32[i35 >> 2] | 0;
    d44 = +_ldexp(1.0, i54 + -1 | 0) + -.5;
    d7 = +(1 << i54 | 0);
    d47 = (d38 + d53) * d7 + d44;
    HEAPF32[i30 >> 2] = d47;
    d53 = (d39 + d48) * d7 + d44;
    HEAPF32[i32 >> 2] = d53;
    d44 = d46 + +(HEAP32[i31 >> 2] | 0);
    i31 = i29 + (i27 * 36 | 0) + 20 | 0;
    HEAPF32[i31 >> 2] = d44;
    d46 = +(HEAP32[i14 >> 2] | 0);
    if (!(d44 < 0.0)) if (d44 > d46) d55 = d46; else d55 = d44; else d55 = 0.0;
    HEAPF32[i31 >> 2] = d55;
    if (((+Math_abs(+(+HEAPF32[i37 >> 2])) < d10 ? (d44 = +HEAPF32[i40 >> 2], !(!(d47 >= 0.0) | !(d44 * d44 >= d8))) : 0) ? (i40 = HEAP32[i15 >> 2] | 0, !(d53 >= 0.0 ? !(d47 < +((HEAP32[i40 + 4 >> 2] | 0) >>> 0)) : 1)) : 0) ? d53 < +((HEAP32[i40 + 8 >> 2] | 0) >>> 0) : 0) {
     d53 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i2, HEAP32[i35 >> 2] | 0, d55);
     HEAPF32[i29 + (i27 * 36 | 0) + 28 >> 2] = d53;
     i29 = i26 + 1 | 0;
     i35 = (HEAP32[i11 >> 2] | 0) + (i26 * 36 | 0) | 0;
     i40 = i30;
     i30 = i35 + 36 | 0;
     do {
      HEAP32[i35 >> 2] = HEAP32[i40 >> 2];
      i35 = i35 + 4 | 0;
      i40 = i40 + 4 | 0;
     } while ((i35 | 0) < (i30 | 0));
     i56 = i29;
    } else i56 = i26;
   } else i56 = i26;
   i27 = i27 + 1 | 0;
   i28 = HEAP32[i11 >> 2] | 0;
   i57 = ((HEAP32[i12 >> 2] | 0) - i28 | 0) / 36 | 0;
   if (i27 >>> 0 >= i57 >>> 0) {
    i34 = 3;
    break;
   } else i26 = i56;
  }
  if ((i34 | 0) == 3) {
   if (i56 >>> 0 <= i57 >>> 0) {
    i58 = i56;
    i59 = i28;
    i60 = i57;
    break;
   }
   __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8__appendEm(i11, i56 - i57 | 0);
   STACKTOP = i3;
   return;
  } else if ((i34 | 0) == 9) {
   i26 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22220, 71) | 0, 20576, 130) | 0, 33554, 6) | 0, 489) | 0, 33561, 2) | 0, 22292, 36) | 0;
   __ZNKSt3__28ios_base6getlocEv(i4, i26 + (HEAP32[(HEAP32[i26 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i27 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
   i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i27 >> 2] | 0) + 28 >> 2] & 63](i27, 10) | 0;
   __ZNSt3__26localeD2Ev(i4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i26, i15) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i26) | 0;
   _abort();
  } else if ((i34 | 0) == 15) {
   i26 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22329, 56) | 0, 20576, 130) | 0, 33554, 6) | 0, 526) | 0, 33561, 2) | 0, 22386, 42) | 0;
   __ZNKSt3__28ios_base6getlocEv(i4, i26 + (HEAP32[(HEAP32[i26 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
   i27 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
   __ZNSt3__26localeD2Ev(i4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i26, i27) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i26) | 0;
   _abort();
  }
 } else {
  i58 = 0;
  i59 = i13;
  i60 = 0;
 } while (0);
 if (i58 >>> 0 >= i60 >>> 0) {
  STACKTOP = i3;
  return;
 }
 HEAP32[i12 >> 2] = i59 + (i58 * 36 | 0);
 STACKTOP = i3;
 return;
}

function _mbsrtowcs(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0;
 i5 = HEAP32[i2 >> 2] | 0;
 if ((i4 | 0) != 0 ? (i6 = HEAP32[i4 >> 2] | 0, (i6 | 0) != 0) : 0) if (!i1) {
  i7 = i6;
  i8 = i5;
  i9 = i3;
  i10 = 26;
 } else {
  HEAP32[i4 >> 2] = 0;
  i11 = i6;
  i12 = i1;
  i13 = i3;
  i14 = i5;
  i10 = 48;
 } else i10 = 5;
 L5 : do if ((i10 | 0) == 5) {
  i6 = (___pthread_self_300() | 0) + 188 | 0;
  i4 = (i1 | 0) != 0;
  if (HEAP32[HEAP32[i6 >> 2] >> 2] | 0) if (i4) {
   i15 = i1;
   i16 = i3;
   i17 = i5;
   i10 = 33;
   break;
  } else {
   i18 = i3;
   i19 = i5;
   i10 = 15;
   break;
  }
  if (!i4) {
   i20 = _strlen(i5) | 0;
   i10 = 63;
   break;
  }
  L13 : do if (!i3) i21 = i5; else {
   i4 = i1;
   i6 = i3;
   i22 = i5;
   while (1) {
    i23 = HEAP8[i22 >> 0] | 0;
    if (!(i23 << 24 >> 24)) break;
    i24 = i22 + 1 | 0;
    HEAP32[i4 >> 2] = i23 << 24 >> 24 & 57343;
    i23 = i6 + -1 | 0;
    if (!i23) {
     i21 = i24;
     break L13;
    } else {
     i4 = i4 + 4 | 0;
     i6 = i23;
     i22 = i24;
    }
   }
   HEAP32[i4 >> 2] = 0;
   HEAP32[i2 >> 2] = 0;
   i20 = i3 - i6 | 0;
   i10 = 63;
   break L5;
  } while (0);
  HEAP32[i2 >> 2] = i21;
  i20 = i3;
  i10 = 63;
 } while (0);
 L20 : while (1) {
  L21 : do if ((i10 | 0) == 15) {
   i10 = 0;
   i21 = i18;
   i5 = i19;
   while (1) {
    i22 = HEAP8[i5 >> 0] | 0;
    if (((i22 & 255) + -1 | 0) >>> 0 < 127 ? (i5 & 3 | 0) == 0 : 0) {
     i24 = HEAP32[i5 >> 2] | 0;
     i23 = i24 & 255;
     if (!((i24 + -16843009 | i24) & -2139062144)) {
      i24 = i5;
      i25 = i21;
      do {
       i24 = i24 + 4 | 0;
       i25 = i25 + -4 | 0;
       i26 = HEAP32[i24 >> 2] | 0;
      } while (!((i26 + -16843009 | i26) & -2139062144 | 0));
      i27 = i24;
      i28 = i25;
      i29 = i26 & 255;
     } else {
      i27 = i5;
      i28 = i21;
      i29 = i23;
     }
    } else {
     i27 = i5;
     i28 = i21;
     i29 = i22;
    }
    i30 = i29 & 255;
    if ((i30 + -1 | 0) >>> 0 >= 127) break;
    i21 = i28 + -1 | 0;
    i5 = i27 + 1 | 0;
   }
   i5 = i30 + -194 | 0;
   if (i5 >>> 0 > 50) {
    i31 = i27;
    i32 = i1;
    i33 = i28;
    i10 = 57;
   } else {
    i7 = HEAP32[3472 + (i5 << 2) >> 2] | 0;
    i8 = i27 + 1 | 0;
    i9 = i28;
    i10 = 26;
    continue L20;
   }
  } else if ((i10 | 0) == 26) {
   i10 = 0;
   i5 = (HEAPU8[i8 >> 0] | 0) >>> 3;
   if ((i5 + -16 | i5 + (i7 >> 26)) >>> 0 > 7) {
    i34 = i1;
    i35 = i7;
    i36 = i8;
    i37 = i9;
    i10 = 56;
   } else {
    i5 = i8 + 1 | 0;
    if (i7 & 33554432) {
     if ((HEAP8[i5 >> 0] & -64) << 24 >> 24 != -128) {
      i34 = i1;
      i35 = i7;
      i36 = i8;
      i37 = i9;
      i10 = 56;
      break;
     }
     i21 = i8 + 2 | 0;
     if (!(i7 & 524288)) i38 = i21; else {
      if ((HEAP8[i21 >> 0] & -64) << 24 >> 24 != -128) {
       i34 = i1;
       i35 = i7;
       i36 = i8;
       i37 = i9;
       i10 = 56;
       break;
      }
      i38 = i8 + 3 | 0;
     }
    } else i38 = i5;
    i18 = i9 + -1 | 0;
    i19 = i38;
    i10 = 15;
    continue L20;
   }
  } else if ((i10 | 0) == 33) {
   i10 = 0;
   L23 : do if (!i16) i39 = i17; else {
    i5 = i15;
    i21 = i16;
    i6 = i17;
    while (1) {
     i4 = HEAPU8[i6 >> 0] | 0;
     i40 = i4 + -1 | 0;
     if (i40 >>> 0 < 127) if ((i6 & 3 | 0) == 0 & i21 >>> 0 > 4) {
      i41 = i5;
      i42 = i21;
      i43 = i6;
      while (1) {
       i44 = HEAP32[i43 >> 2] | 0;
       if ((i44 + -16843009 | i44) & -2139062144 | 0) {
        i10 = 42;
        break;
       }
       HEAP32[i41 >> 2] = i44 & 255;
       HEAP32[i41 + 4 >> 2] = HEAPU8[i43 + 1 >> 0];
       HEAP32[i41 + 8 >> 2] = HEAPU8[i43 + 2 >> 0];
       i45 = i43 + 4 | 0;
       i46 = i41 + 16 | 0;
       HEAP32[i41 + 12 >> 2] = HEAPU8[i43 + 3 >> 0];
       i47 = i42 + -4 | 0;
       if (i47 >>> 0 > 4) {
        i41 = i46;
        i42 = i47;
        i43 = i45;
       } else {
        i10 = 41;
        break;
       }
      }
      if ((i10 | 0) == 41) {
       i10 = 0;
       i48 = i46;
       i49 = i47;
       i50 = i45;
       i51 = HEAP8[i45 >> 0] | 0;
      } else if ((i10 | 0) == 42) {
       i10 = 0;
       i48 = i41;
       i49 = i42;
       i50 = i43;
       i51 = i44 & 255;
      }
      i52 = i51 & 255;
      i53 = i48;
      i54 = i49;
      i55 = i50;
      i56 = i52 + -1 | 0;
      i57 = i52;
      i10 = 44;
     } else {
      i58 = i5;
      i59 = i21;
      i60 = i6;
      i61 = i4;
     } else {
      i53 = i5;
      i54 = i21;
      i55 = i6;
      i56 = i40;
      i57 = i4;
      i10 = 44;
     }
     if ((i10 | 0) == 44) {
      i10 = 0;
      if (i56 >>> 0 < 127) {
       i58 = i53;
       i59 = i54;
       i60 = i55;
       i61 = i57;
      } else break;
     }
     i52 = i60 + 1 | 0;
     HEAP32[i58 >> 2] = i61;
     i21 = i59 + -1 | 0;
     if (!i21) {
      i39 = i52;
      break L23;
     } else {
      i5 = i58 + 4 | 0;
      i6 = i52;
     }
    }
    i6 = i57 + -194 | 0;
    if (i6 >>> 0 > 50) {
     i31 = i55;
     i32 = i53;
     i33 = i54;
     i10 = 57;
     break L21;
    }
    i11 = HEAP32[3472 + (i6 << 2) >> 2] | 0;
    i12 = i53;
    i13 = i54;
    i14 = i55 + 1 | 0;
    i10 = 48;
    continue L20;
   } while (0);
   HEAP32[i2 >> 2] = i39;
   i20 = i3;
   i10 = 63;
   continue L20;
  } else if ((i10 | 0) == 48) {
   i10 = 0;
   i6 = HEAPU8[i14 >> 0] | 0;
   i5 = i6 >>> 3;
   if ((i5 + -16 | i5 + (i11 >> 26)) >>> 0 > 7) {
    i34 = i12;
    i35 = i11;
    i36 = i14;
    i37 = i13;
    i10 = 56;
   } else {
    i5 = i14 + 1 | 0;
    i21 = i6 + -128 | i11 << 6;
    do if ((i21 | 0) < 0) {
     i6 = (HEAPU8[i5 >> 0] | 0) + -128 | 0;
     if (i6 >>> 0 <= 63) {
      i22 = i14 + 2 | 0;
      i23 = i6 | i21 << 6;
      if ((i23 | 0) >= 0) {
       i62 = i22;
       i63 = i23;
       break;
      }
      i6 = (HEAPU8[i22 >> 0] | 0) + -128 | 0;
      if (i6 >>> 0 <= 63) {
       i62 = i14 + 3 | 0;
       i63 = i6 | i23 << 6;
       break;
      }
     }
     i23 = ___errno_location() | 0;
     HEAP32[i23 >> 2] = 84;
     i64 = i14 + -1 | 0;
     break L21;
    } else {
     i62 = i5;
     i63 = i21;
    } while (0);
    HEAP32[i12 >> 2] = i63;
    i15 = i12 + 4 | 0;
    i16 = i13 + -1 | 0;
    i17 = i62;
    i10 = 33;
    continue L20;
   }
  } else if ((i10 | 0) == 63) {
   i10 = 0;
   return i20 | 0;
  } while (0);
  if ((i10 | 0) == 56) {
   i10 = 0;
   i21 = i36 + -1 | 0;
   if (!i35) {
    i31 = i21;
    i32 = i34;
    i33 = i37;
    i10 = 57;
   } else {
    i65 = i21;
    i66 = i34;
    i10 = 61;
   }
  }
  if ((i10 | 0) == 57) {
   i10 = 0;
   if (!(HEAP8[i31 >> 0] | 0)) {
    if (i32 | 0) {
     HEAP32[i32 >> 2] = 0;
     HEAP32[i2 >> 2] = 0;
    }
    i20 = i3 - i33 | 0;
    i10 = 63;
    continue;
   } else {
    i65 = i31;
    i66 = i32;
    i10 = 61;
   }
  }
  if ((i10 | 0) == 61) {
   i10 = 0;
   i21 = ___errno_location() | 0;
   HEAP32[i21 >> 2] = 84;
   if (!i66) {
    i20 = -1;
    i10 = 63;
    continue;
   } else i64 = i65;
  }
  HEAP32[i2 >> 2] = i64;
  i20 = -1;
  i10 = 63;
 }
 return 0;
}

function _dispose_chunk(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0;
 i3 = i1 + i2 | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 do if (!(i4 & 1)) {
  i5 = HEAP32[i1 >> 2] | 0;
  if (!(i4 & 3)) return;
  i6 = i1 + (0 - i5) | 0;
  i7 = i5 + i2 | 0;
  if ((HEAP32[14235] | 0) == (i6 | 0)) {
   i8 = i3 + 4 | 0;
   i9 = HEAP32[i8 >> 2] | 0;
   if ((i9 & 3 | 0) != 3) {
    i10 = i6;
    i11 = i7;
    break;
   }
   HEAP32[14232] = i7;
   HEAP32[i8 >> 2] = i9 & -2;
   HEAP32[i6 + 4 >> 2] = i7 | 1;
   HEAP32[i3 >> 2] = i7;
   return;
  }
  i9 = i5 >>> 3;
  if (i5 >>> 0 < 256) {
   i5 = HEAP32[i6 + 8 >> 2] | 0;
   i8 = HEAP32[i6 + 12 >> 2] | 0;
   if ((i8 | 0) == (i5 | 0)) {
    HEAP32[14230] = HEAP32[14230] & ~(1 << i9);
    i10 = i6;
    i11 = i7;
    break;
   } else {
    HEAP32[i5 + 12 >> 2] = i8;
    HEAP32[i8 + 8 >> 2] = i5;
    i10 = i6;
    i11 = i7;
    break;
   }
  }
  i5 = HEAP32[i6 + 24 >> 2] | 0;
  i8 = HEAP32[i6 + 12 >> 2] | 0;
  do if ((i8 | 0) == (i6 | 0)) {
   i9 = i6 + 16 | 0;
   i12 = i9 + 4 | 0;
   i13 = HEAP32[i12 >> 2] | 0;
   if (!i13) {
    i14 = HEAP32[i9 >> 2] | 0;
    if (!i14) {
     i15 = 0;
     break;
    } else {
     i16 = i14;
     i17 = i9;
    }
   } else {
    i16 = i13;
    i17 = i12;
   }
   i12 = i16;
   i13 = i17;
   while (1) {
    i9 = i12 + 20 | 0;
    i14 = HEAP32[i9 >> 2] | 0;
    if (!i14) {
     i18 = i12 + 16 | 0;
     i19 = HEAP32[i18 >> 2] | 0;
     if (!i19) break; else {
      i20 = i19;
      i21 = i18;
     }
    } else {
     i20 = i14;
     i21 = i9;
    }
    i12 = i20;
    i13 = i21;
   }
   HEAP32[i13 >> 2] = 0;
   i15 = i12;
  } else {
   i9 = HEAP32[i6 + 8 >> 2] | 0;
   HEAP32[i9 + 12 >> 2] = i8;
   HEAP32[i8 + 8 >> 2] = i9;
   i15 = i8;
  } while (0);
  if (i5) {
   i8 = HEAP32[i6 + 28 >> 2] | 0;
   i9 = 57224 + (i8 << 2) | 0;
   if ((HEAP32[i9 >> 2] | 0) == (i6 | 0)) {
    HEAP32[i9 >> 2] = i15;
    if (!i15) {
     HEAP32[14231] = HEAP32[14231] & ~(1 << i8);
     i10 = i6;
     i11 = i7;
     break;
    }
   } else {
    i8 = i5 + 16 | 0;
    HEAP32[((HEAP32[i8 >> 2] | 0) == (i6 | 0) ? i8 : i5 + 20 | 0) >> 2] = i15;
    if (!i15) {
     i10 = i6;
     i11 = i7;
     break;
    }
   }
   HEAP32[i15 + 24 >> 2] = i5;
   i8 = i6 + 16 | 0;
   i9 = HEAP32[i8 >> 2] | 0;
   if (i9 | 0) {
    HEAP32[i15 + 16 >> 2] = i9;
    HEAP32[i9 + 24 >> 2] = i15;
   }
   i9 = HEAP32[i8 + 4 >> 2] | 0;
   if (i9) {
    HEAP32[i15 + 20 >> 2] = i9;
    HEAP32[i9 + 24 >> 2] = i15;
    i10 = i6;
    i11 = i7;
   } else {
    i10 = i6;
    i11 = i7;
   }
  } else {
   i10 = i6;
   i11 = i7;
  }
 } else {
  i10 = i1;
  i11 = i2;
 } while (0);
 i2 = i3 + 4 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!(i1 & 2)) {
  if ((HEAP32[14236] | 0) == (i3 | 0)) {
   i15 = (HEAP32[14233] | 0) + i11 | 0;
   HEAP32[14233] = i15;
   HEAP32[14236] = i10;
   HEAP32[i10 + 4 >> 2] = i15 | 1;
   if ((i10 | 0) != (HEAP32[14235] | 0)) return;
   HEAP32[14235] = 0;
   HEAP32[14232] = 0;
   return;
  }
  if ((HEAP32[14235] | 0) == (i3 | 0)) {
   i15 = (HEAP32[14232] | 0) + i11 | 0;
   HEAP32[14232] = i15;
   HEAP32[14235] = i10;
   HEAP32[i10 + 4 >> 2] = i15 | 1;
   HEAP32[i10 + i15 >> 2] = i15;
   return;
  }
  i15 = (i1 & -8) + i11 | 0;
  i21 = i1 >>> 3;
  do if (i1 >>> 0 < 256) {
   i20 = HEAP32[i3 + 8 >> 2] | 0;
   i17 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i17 | 0) == (i20 | 0)) {
    HEAP32[14230] = HEAP32[14230] & ~(1 << i21);
    break;
   } else {
    HEAP32[i20 + 12 >> 2] = i17;
    HEAP32[i17 + 8 >> 2] = i20;
    break;
   }
  } else {
   i20 = HEAP32[i3 + 24 >> 2] | 0;
   i17 = HEAP32[i3 + 12 >> 2] | 0;
   do if ((i17 | 0) == (i3 | 0)) {
    i16 = i3 + 16 | 0;
    i4 = i16 + 4 | 0;
    i9 = HEAP32[i4 >> 2] | 0;
    if (!i9) {
     i8 = HEAP32[i16 >> 2] | 0;
     if (!i8) {
      i22 = 0;
      break;
     } else {
      i23 = i8;
      i24 = i16;
     }
    } else {
     i23 = i9;
     i24 = i4;
    }
    i4 = i23;
    i9 = i24;
    while (1) {
     i16 = i4 + 20 | 0;
     i8 = HEAP32[i16 >> 2] | 0;
     if (!i8) {
      i14 = i4 + 16 | 0;
      i18 = HEAP32[i14 >> 2] | 0;
      if (!i18) break; else {
       i25 = i18;
       i26 = i14;
      }
     } else {
      i25 = i8;
      i26 = i16;
     }
     i4 = i25;
     i9 = i26;
    }
    HEAP32[i9 >> 2] = 0;
    i22 = i4;
   } else {
    i12 = HEAP32[i3 + 8 >> 2] | 0;
    HEAP32[i12 + 12 >> 2] = i17;
    HEAP32[i17 + 8 >> 2] = i12;
    i22 = i17;
   } while (0);
   if (i20 | 0) {
    i17 = HEAP32[i3 + 28 >> 2] | 0;
    i7 = 57224 + (i17 << 2) | 0;
    if ((HEAP32[i7 >> 2] | 0) == (i3 | 0)) {
     HEAP32[i7 >> 2] = i22;
     if (!i22) {
      HEAP32[14231] = HEAP32[14231] & ~(1 << i17);
      break;
     }
    } else {
     i17 = i20 + 16 | 0;
     HEAP32[((HEAP32[i17 >> 2] | 0) == (i3 | 0) ? i17 : i20 + 20 | 0) >> 2] = i22;
     if (!i22) break;
    }
    HEAP32[i22 + 24 >> 2] = i20;
    i17 = i3 + 16 | 0;
    i7 = HEAP32[i17 >> 2] | 0;
    if (i7 | 0) {
     HEAP32[i22 + 16 >> 2] = i7;
     HEAP32[i7 + 24 >> 2] = i22;
    }
    i7 = HEAP32[i17 + 4 >> 2] | 0;
    if (i7 | 0) {
     HEAP32[i22 + 20 >> 2] = i7;
     HEAP32[i7 + 24 >> 2] = i22;
    }
   }
  } while (0);
  HEAP32[i10 + 4 >> 2] = i15 | 1;
  HEAP32[i10 + i15 >> 2] = i15;
  if ((i10 | 0) == (HEAP32[14235] | 0)) {
   HEAP32[14232] = i15;
   return;
  } else i27 = i15;
 } else {
  HEAP32[i2 >> 2] = i1 & -2;
  HEAP32[i10 + 4 >> 2] = i11 | 1;
  HEAP32[i10 + i11 >> 2] = i11;
  i27 = i11;
 }
 i11 = i27 >>> 3;
 if (i27 >>> 0 < 256) {
  i1 = 56960 + (i11 << 1 << 2) | 0;
  i2 = HEAP32[14230] | 0;
  i15 = 1 << i11;
  if (!(i2 & i15)) {
   HEAP32[14230] = i2 | i15;
   i28 = i1;
   i29 = i1 + 8 | 0;
  } else {
   i15 = i1 + 8 | 0;
   i28 = HEAP32[i15 >> 2] | 0;
   i29 = i15;
  }
  HEAP32[i29 >> 2] = i10;
  HEAP32[i28 + 12 >> 2] = i10;
  HEAP32[i10 + 8 >> 2] = i28;
  HEAP32[i10 + 12 >> 2] = i1;
  return;
 }
 i1 = i27 >>> 8;
 if (i1) if (i27 >>> 0 > 16777215) i30 = 31; else {
  i28 = (i1 + 1048320 | 0) >>> 16 & 8;
  i29 = i1 << i28;
  i1 = (i29 + 520192 | 0) >>> 16 & 4;
  i15 = i29 << i1;
  i29 = (i15 + 245760 | 0) >>> 16 & 2;
  i2 = 14 - (i1 | i28 | i29) + (i15 << i29 >>> 15) | 0;
  i30 = i27 >>> (i2 + 7 | 0) & 1 | i2 << 1;
 } else i30 = 0;
 i2 = 57224 + (i30 << 2) | 0;
 HEAP32[i10 + 28 >> 2] = i30;
 HEAP32[i10 + 20 >> 2] = 0;
 HEAP32[i10 + 16 >> 2] = 0;
 i29 = HEAP32[14231] | 0;
 i15 = 1 << i30;
 if (!(i29 & i15)) {
  HEAP32[14231] = i29 | i15;
  HEAP32[i2 >> 2] = i10;
  HEAP32[i10 + 24 >> 2] = i2;
  HEAP32[i10 + 12 >> 2] = i10;
  HEAP32[i10 + 8 >> 2] = i10;
  return;
 }
 i15 = HEAP32[i2 >> 2] | 0;
 L104 : do if ((HEAP32[i15 + 4 >> 2] & -8 | 0) == (i27 | 0)) i31 = i15; else {
  i2 = i27 << ((i30 | 0) == 31 ? 0 : 25 - (i30 >>> 1) | 0);
  i29 = i15;
  while (1) {
   i32 = i29 + 16 + (i2 >>> 31 << 2) | 0;
   i28 = HEAP32[i32 >> 2] | 0;
   if (!i28) break;
   if ((HEAP32[i28 + 4 >> 2] & -8 | 0) == (i27 | 0)) {
    i31 = i28;
    break L104;
   } else {
    i2 = i2 << 1;
    i29 = i28;
   }
  }
  HEAP32[i32 >> 2] = i10;
  HEAP32[i10 + 24 >> 2] = i29;
  HEAP32[i10 + 12 >> 2] = i10;
  HEAP32[i10 + 8 >> 2] = i10;
  return;
 } while (0);
 i32 = i31 + 8 | 0;
 i27 = HEAP32[i32 >> 2] | 0;
 HEAP32[i27 + 12 >> 2] = i10;
 HEAP32[i32 >> 2] = i10;
 HEAP32[i10 + 8 >> 2] = i27;
 HEAP32[i10 + 12 >> 2] = i31;
 HEAP32[i10 + 24 >> 2] = 0;
 return;
}

function __ZN6vision27OrthogonalizePivot8x9Basis5IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, d15 = 0.0, i16 = 0, d17 = 0.0, i18 = 0, d19 = 0.0, i20 = 0, d21 = 0.0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, i26 = 0, d27 = 0.0, i28 = 0, d29 = 0.0, i30 = 0, d31 = 0.0, i32 = 0, d33 = 0.0, i34 = 0, d35 = 0.0, i36 = 0, d37 = 0.0, i38 = 0, d39 = 0.0, i40 = 0, d41 = 0.0, i42 = 0, d43 = 0.0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, d52 = 0.0, i53 = 0, i54 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i1 + 180 | 0;
 i6 = i2 + 180 | 0;
 d7 = +HEAPF32[i1 + 144 >> 2];
 i8 = i2 + 184 | 0;
 d9 = +HEAPF32[i1 + 148 >> 2];
 i10 = i2 + 188 | 0;
 d11 = +HEAPF32[i1 + 152 >> 2];
 i12 = i2 + 192 | 0;
 d13 = +HEAPF32[i1 + 156 >> 2];
 i14 = i2 + 196 | 0;
 d15 = +HEAPF32[i1 + 160 >> 2];
 i16 = i2 + 200 | 0;
 d17 = +HEAPF32[i1 + 164 >> 2];
 i18 = i2 + 204 | 0;
 d19 = +HEAPF32[i1 + 168 >> 2];
 i20 = i2 + 208 | 0;
 d21 = +HEAPF32[i1 + 172 >> 2];
 i22 = i2 + 212 | 0;
 d23 = +HEAPF32[i1 + 176 >> 2];
 d24 = +HEAPF32[i6 >> 2] * d7 + +HEAPF32[i8 >> 2] * d9 + +HEAPF32[i10 >> 2] * d11 + +HEAPF32[i12 >> 2] * d13 + +HEAPF32[i14 >> 2] * d15 + +HEAPF32[i16 >> 2] * d17 + +HEAPF32[i18 >> 2] * d19 + +HEAPF32[i20 >> 2] * d21 + +HEAPF32[i22 >> 2] * d23;
 d25 = +HEAPF32[i5 >> 2] - d7 * d24;
 HEAPF32[i5 >> 2] = d25;
 i26 = i1 + 184 | 0;
 d27 = +HEAPF32[i26 >> 2] - d9 * d24;
 HEAPF32[i26 >> 2] = d27;
 i28 = i1 + 188 | 0;
 d29 = +HEAPF32[i28 >> 2] - d11 * d24;
 HEAPF32[i28 >> 2] = d29;
 i30 = i1 + 192 | 0;
 d31 = +HEAPF32[i30 >> 2] - d13 * d24;
 HEAPF32[i30 >> 2] = d31;
 i32 = i1 + 196 | 0;
 d33 = +HEAPF32[i32 >> 2] - d15 * d24;
 HEAPF32[i32 >> 2] = d33;
 i34 = i1 + 200 | 0;
 d35 = +HEAPF32[i34 >> 2] - d17 * d24;
 HEAPF32[i34 >> 2] = d35;
 i36 = i1 + 204 | 0;
 d37 = +HEAPF32[i36 >> 2] - d19 * d24;
 HEAPF32[i36 >> 2] = d37;
 i38 = i1 + 208 | 0;
 d39 = +HEAPF32[i38 >> 2] - d21 * d24;
 HEAPF32[i38 >> 2] = d39;
 i40 = i1 + 212 | 0;
 d41 = +HEAPF32[i40 >> 2] - d23 * d24;
 HEAPF32[i40 >> 2] = d41;
 i42 = i1 + 216 | 0;
 d24 = d7 * +HEAPF32[i2 + 216 >> 2] + d9 * +HEAPF32[i2 + 220 >> 2] + d11 * +HEAPF32[i2 + 224 >> 2] + d13 * +HEAPF32[i2 + 228 >> 2] + d15 * +HEAPF32[i2 + 232 >> 2] + d17 * +HEAPF32[i2 + 236 >> 2] + d19 * +HEAPF32[i2 + 240 >> 2] + d21 * +HEAPF32[i2 + 244 >> 2] + d23 * +HEAPF32[i2 + 248 >> 2];
 d43 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d43;
 i42 = i1 + 220 | 0;
 d44 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d44;
 i42 = i1 + 224 | 0;
 d45 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d45;
 i42 = i1 + 228 | 0;
 d46 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d46;
 i42 = i1 + 232 | 0;
 d47 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d47;
 i42 = i1 + 236 | 0;
 d48 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d48;
 i42 = i1 + 240 | 0;
 d49 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d49;
 i42 = i1 + 244 | 0;
 d50 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d50;
 i42 = i1 + 248 | 0;
 d51 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d51;
 i42 = i1 + 252 | 0;
 d24 = d7 * +HEAPF32[i2 + 252 >> 2] + d9 * +HEAPF32[i2 + 256 >> 2] + d11 * +HEAPF32[i2 + 260 >> 2] + d13 * +HEAPF32[i2 + 264 >> 2] + d15 * +HEAPF32[i2 + 268 >> 2] + d17 * +HEAPF32[i2 + 272 >> 2] + d19 * +HEAPF32[i2 + 276 >> 2] + d21 * +HEAPF32[i2 + 280 >> 2] + d23 * +HEAPF32[i2 + 284 >> 2];
 d52 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d52;
 i42 = i1 + 256 | 0;
 d7 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d7;
 i42 = i1 + 260 | 0;
 d9 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d9;
 i42 = i1 + 264 | 0;
 d11 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d11;
 i42 = i1 + 268 | 0;
 d13 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d13;
 i42 = i1 + 272 | 0;
 d15 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d15;
 i42 = i1 + 276 | 0;
 d17 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d17;
 i42 = i1 + 280 | 0;
 d19 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d19;
 i42 = i1 + 284 | 0;
 d21 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d21;
 d24 = d25 * d25 + d27 * d27 + d29 * d29 + d31 * d31 + d33 * d33 + d35 * d35 + d37 * d37 + d39 * d39 + d41 * d41;
 HEAPF32[i4 >> 2] = d24;
 d41 = d43 * d43 + d44 * d44 + d45 * d45 + d46 * d46 + d47 * d47 + d48 * d48 + d49 * d49 + d50 * d50 + d51 * d51;
 HEAPF32[i4 + 4 >> 2] = d41;
 d51 = d52 * d52 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 HEAPF32[i4 + 8 >> 2] = d51;
 i42 = d41 > d24 & 1;
 i1 = d51 > +HEAPF32[i4 + (i42 << 2) >> 2] ? 2 : i42;
 d51 = +HEAPF32[i4 + (i1 << 2) >> 2];
 if (d51 == 0.0) {
  i53 = 0;
  STACKTOP = i3;
  return i53 | 0;
 }
 i4 = i1 * 9 | 0;
 i1 = i5 + (i4 << 2) | 0;
 i42 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 i2 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = i42;
 i42 = HEAP32[i26 >> 2] | 0;
 HEAP32[i26 >> 2] = HEAP32[i2 >> 2];
 i54 = i1 + 8 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i28 >> 2] | 0;
 HEAP32[i28 >> 2] = HEAP32[i54 >> 2];
 i2 = i1 + 12 | 0;
 HEAP32[i54 >> 2] = i42;
 i42 = HEAP32[i30 >> 2] | 0;
 HEAP32[i30 >> 2] = HEAP32[i2 >> 2];
 i54 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i32 >> 2] | 0;
 HEAP32[i32 >> 2] = HEAP32[i54 >> 2];
 i2 = i1 + 20 | 0;
 HEAP32[i54 >> 2] = i42;
 i42 = HEAP32[i34 >> 2] | 0;
 HEAP32[i34 >> 2] = HEAP32[i2 >> 2];
 i54 = i1 + 24 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i36 >> 2] | 0;
 HEAP32[i36 >> 2] = HEAP32[i54 >> 2];
 i2 = i1 + 28 | 0;
 HEAP32[i54 >> 2] = i42;
 i42 = HEAP32[i38 >> 2] | 0;
 HEAP32[i38 >> 2] = HEAP32[i2 >> 2];
 i54 = i1 + 32 | 0;
 HEAP32[i2 >> 2] = i42;
 i42 = HEAP32[i40 >> 2] | 0;
 HEAP32[i40 >> 2] = HEAP32[i54 >> 2];
 HEAP32[i54 >> 2] = i42;
 i42 = i6 + (i4 << 2) | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i42 >> 2];
 i6 = i42 + 4 | 0;
 HEAP32[i42 >> 2] = i4;
 i4 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
 i8 = i42 + 8 | 0;
 HEAP32[i6 >> 2] = i4;
 i4 = HEAP32[i10 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
 i10 = i42 + 12 | 0;
 HEAP32[i8 >> 2] = i4;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i10 >> 2];
 i12 = i42 + 16 | 0;
 HEAP32[i10 >> 2] = i4;
 i4 = HEAP32[i14 >> 2] | 0;
 HEAP32[i14 >> 2] = HEAP32[i12 >> 2];
 i14 = i42 + 20 | 0;
 HEAP32[i12 >> 2] = i4;
 i4 = HEAP32[i16 >> 2] | 0;
 HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
 i16 = i42 + 24 | 0;
 HEAP32[i14 >> 2] = i4;
 i4 = HEAP32[i18 >> 2] | 0;
 HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
 i18 = i42 + 28 | 0;
 HEAP32[i16 >> 2] = i4;
 i4 = HEAP32[i20 >> 2] | 0;
 HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
 i20 = i42 + 32 | 0;
 HEAP32[i18 >> 2] = i4;
 i4 = HEAP32[i22 >> 2] | 0;
 HEAP32[i22 >> 2] = HEAP32[i20 >> 2];
 HEAP32[i20 >> 2] = i4;
 d24 = 1.0 / +Math_sqrt(+d51);
 HEAPF32[i5 >> 2] = d24 * +HEAPF32[i5 >> 2];
 HEAPF32[i26 >> 2] = d24 * +HEAPF32[i26 >> 2];
 HEAPF32[i28 >> 2] = d24 * +HEAPF32[i28 >> 2];
 HEAPF32[i30 >> 2] = d24 * +HEAPF32[i30 >> 2];
 HEAPF32[i32 >> 2] = d24 * +HEAPF32[i32 >> 2];
 HEAPF32[i34 >> 2] = d24 * +HEAPF32[i34 >> 2];
 HEAPF32[i36 >> 2] = d24 * +HEAPF32[i36 >> 2];
 HEAPF32[i38 >> 2] = d24 * +HEAPF32[i38 >> 2];
 HEAPF32[i40 >> 2] = d24 * +HEAPF32[i40 >> 2];
 i53 = 1;
 STACKTOP = i3;
 return i53 | 0;
}

function _arDetectMarker2(i1, i2, i3, i4, i5, i6, d7, i8, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, d37 = 0.0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, i48 = 0, i49 = 0, i50 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i11 = i10 + 48 | 0;
 i12 = i10 + 92 | 0;
 i13 = i10;
 i14 = i10 + 88 | 0;
 i15 = (i4 | 0) == 1;
 if (i15) {
  i16 = (i1 | 0) / 2 | 0;
  i17 = (i2 | 0) / 2 | 0;
  i18 = (i5 | 0) / 4 | 0;
  i19 = (i6 | 0) / 4 | 0;
 } else {
  i16 = i1;
  i17 = i2;
  i18 = i5;
  i19 = i6;
 }
 HEAP32[i9 >> 2] = 0;
 i6 = i3 + 8 | 0;
 do if ((HEAP32[i6 >> 2] | 0) > 0) {
  i5 = i16 + -2 | 0;
  i2 = i17 + -2 | 0;
  i1 = i3 + 1179664 | 0;
  i4 = 0;
  L6 : while (1) {
   i20 = i3 + 12 + (i4 << 2) | 0;
   i21 = HEAP32[i20 >> 2] | 0;
   L8 : do if (((((!((i21 | 0) < (i19 | 0) | (i21 | 0) > (i18 | 0)) ? (i22 = i3 + 131084 + (i4 << 4) | 0, (HEAP32[i22 >> 2] | 0) != 1) : 0) ? (HEAP32[i3 + 131084 + (i4 << 4) + 4 >> 2] | 0) != (i5 | 0) : 0) ? (HEAP32[i3 + 131084 + (i4 << 4) + 8 >> 2] | 0) != 1 : 0) ? (HEAP32[i3 + 131084 + (i4 << 4) + 12 >> 2] | 0) != (i2 | 0) : 0) ? (_arGetContour(HEAP32[i3 >> 2] | 0, i16, 0, i1, i4 + 1 | 0, i22, i8 + ((HEAP32[i9 >> 2] | 0) * 80048 | 0) | 0) | 0) >= 0 : 0) {
    i22 = HEAP32[i20 >> 2] | 0;
    i23 = HEAP32[i9 >> 2] | 0;
    i24 = i8 + (i23 * 80048 | 0) + 28 | 0;
    i25 = HEAP32[i24 >> 2] | 0;
    i26 = i8 + (i23 * 80048 | 0) + 40028 | 0;
    i27 = HEAP32[i26 >> 2] | 0;
    i28 = i8 + (i23 * 80048 | 0) + 24 | 0;
    i29 = HEAP32[i28 >> 2] | 0;
    if ((i29 | 0) > 2) {
     i30 = i29 + -1 | 0;
     i29 = 0;
     i31 = 0;
     i32 = 1;
     while (1) {
      i33 = (HEAP32[i8 + (i23 * 80048 | 0) + 28 + (i32 << 2) >> 2] | 0) - i25 | 0;
      i34 = Math_imul(i33, i33) | 0;
      i33 = (HEAP32[i8 + (i23 * 80048 | 0) + 40028 + (i32 << 2) >> 2] | 0) - i27 | 0;
      i35 = (Math_imul(i33, i33) | 0) + i34 | 0;
      i34 = (i35 | 0) > (i29 | 0);
      i33 = i34 ? i32 : i31;
      i32 = i32 + 1 | 0;
      if ((i32 | 0) == (i30 | 0)) {
       i36 = i33;
       break;
      } else {
       i29 = i34 ? i35 : i29;
       i31 = i33;
      }
     }
    } else i36 = 0;
    d37 = +(i22 | 0) / .75 * .01 * d7;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i14 >> 2] = 0;
    L20 : do if ((_get_vertex(i24, i26, 0, i36, d37, i11, i12) | 0) >= 0 ? (_get_vertex(i24, i26, i36, (HEAP32[i28 >> 2] | 0) + -1 | 0, d37, i13, i14) | 0) >= 0 : 0) {
     i31 = HEAP32[i12 >> 2] | 0;
     i29 = HEAP32[i14 >> 2] | 0;
     do if ((i31 | 0) == 1 & (i29 | 0) == 1) {
      i38 = HEAP32[i13 >> 2] | 0;
      i39 = HEAP32[i11 >> 2] | 0;
      i40 = i36;
     } else {
      if ((i31 | 0) > 1 & (i29 | 0) == 0) {
       i30 = (i36 | 0) / 2 | 0;
       HEAP32[i14 >> 2] = 0;
       HEAP32[i12 >> 2] = 0;
       if ((_get_vertex(i24, i26, 0, i30, d37, i11, i12) | 0) < 0) break L20;
       if ((_get_vertex(i24, i26, i30, i36, d37, i13, i14) | 0) < 0) break L20;
       if (!((HEAP32[i12 >> 2] | 0) == 1 & (HEAP32[i14 >> 2] | 0) == 1)) break L20;
       i38 = i36;
       i39 = HEAP32[i11 >> 2] | 0;
       i40 = HEAP32[i13 >> 2] | 0;
       break;
      }
      if (!((i31 | 0) == 0 & (i29 | 0) > 1)) break L20;
      i30 = (i36 + -1 + (HEAP32[i28 >> 2] | 0) | 0) / 2 | 0;
      HEAP32[i14 >> 2] = 0;
      HEAP32[i12 >> 2] = 0;
      if ((_get_vertex(i24, i26, i36, i30, d37, i11, i12) | 0) < 0) break L20;
      if ((_get_vertex(i24, i26, i30, (HEAP32[i28 >> 2] | 0) + -1 | 0, d37, i13, i14) | 0) < 0) break L20;
      if (!((HEAP32[i12 >> 2] | 0) == 1 & (HEAP32[i14 >> 2] | 0) == 1)) break L20;
      i38 = HEAP32[i13 >> 2] | 0;
      i39 = i36;
      i40 = HEAP32[i11 >> 2] | 0;
     } while (0);
     HEAP32[i8 + (i23 * 80048 | 0) + 80028 >> 2] = 0;
     HEAP32[i8 + (i23 * 80048 | 0) + 80032 >> 2] = i39;
     HEAP32[i8 + (i23 * 80048 | 0) + 80036 >> 2] = i40;
     HEAP32[i8 + (i23 * 80048 | 0) + 80040 >> 2] = i38;
     HEAP32[i8 + (i23 * 80048 | 0) + 80044 >> 2] = (HEAP32[i28 >> 2] | 0) + -1;
     HEAP32[i8 + ((HEAP32[i9 >> 2] | 0) * 80048 | 0) >> 2] = HEAP32[i20 >> 2];
     i29 = HEAP32[i9 >> 2] | 0;
     HEAPF64[i8 + (i29 * 80048 | 0) + 8 >> 3] = +HEAPF64[i3 + 655376 + (i4 << 4) >> 3];
     HEAPF64[i8 + (i29 * 80048 | 0) + 16 >> 3] = +HEAPF64[i3 + 655376 + (i4 << 4) + 8 >> 3];
     i31 = i29 + 1 | 0;
     HEAP32[i9 >> 2] = i31;
     if ((i31 | 0) == 60) {
      i41 = 60;
      break L6;
     } else break L8;
    } while (0);
   } while (0);
   i4 = i4 + 1 | 0;
   if ((i4 | 0) >= (HEAP32[i6 >> 2] | 0)) {
    i42 = 31;
    break;
   }
  }
  if ((i42 | 0) == 31) {
   i4 = HEAP32[i9 >> 2] | 0;
   if ((i4 | 0) > 0) i41 = i4; else {
    i43 = i4;
    break;
   }
  }
  i4 = 0;
  i1 = i41;
  while (1) {
   i2 = i4;
   i4 = i4 + 1 | 0;
   if ((i4 | 0) < (i1 | 0)) {
    d37 = +HEAPF64[i8 + (i2 * 80048 | 0) + 8 >> 3];
    d44 = +HEAPF64[i8 + (i2 * 80048 | 0) + 16 >> 3];
    i5 = i8 + (i2 * 80048 | 0) | 0;
    i2 = i4;
    do {
     d45 = d37 - +HEAPF64[i8 + (i2 * 80048 | 0) + 8 >> 3];
     d46 = d44 - +HEAPF64[i8 + (i2 * 80048 | 0) + 16 >> 3];
     d47 = d45 * d45 + d46 * d46;
     i20 = HEAP32[i5 >> 2] | 0;
     i21 = i8 + (i2 * 80048 | 0) | 0;
     i28 = HEAP32[i21 >> 2] | 0;
     if ((i20 | 0) > (i28 | 0)) {
      if (d47 < +((i20 | 0) / 4 | 0 | 0)) HEAP32[i21 >> 2] = 0;
     } else if (d47 < +((i28 | 0) / 4 | 0 | 0)) HEAP32[i5 >> 2] = 0;
     i2 = i2 + 1 | 0;
     i28 = HEAP32[i9 >> 2] | 0;
    } while ((i2 | 0) < (i28 | 0));
    i48 = i28;
   } else i48 = i1;
   if ((i4 | 0) >= (i48 | 0)) break; else i1 = i48;
  }
  if ((i48 | 0) > 0) {
   i1 = 0;
   i4 = i48;
   while (1) {
    i2 = i1;
    i1 = i1 + 1 | 0;
    if (!(HEAP32[i8 + (i2 * 80048 | 0) >> 2] | 0)) {
     if ((i1 | 0) < (i4 | 0)) {
      i5 = i2;
      i2 = i1;
      while (1) {
       _memcpy(i8 + (i5 * 80048 | 0) | 0, i8 + (i2 * 80048 | 0) | 0, 80048) | 0;
       i28 = i2 + 1 | 0;
       i21 = HEAP32[i9 >> 2] | 0;
       if ((i28 | 0) < (i21 | 0)) {
        i20 = i2;
        i2 = i28;
        i5 = i20;
       } else {
        i49 = i21;
        break;
       }
      }
     } else i49 = i4;
     i5 = i49 + -1 | 0;
     HEAP32[i9 >> 2] = i5;
     i50 = i5;
    } else i50 = i4;
    if ((i1 | 0) >= (i50 | 0)) {
     i43 = i50;
     break;
    } else i4 = i50;
   }
  } else i43 = i48;
 } else i43 = 0; while (0);
 if (!(i15 & (i43 | 0) > 0)) {
  STACKTOP = i10;
  return 0;
 }
 i43 = i8;
 i8 = 0;
 while (1) {
  HEAP32[i43 >> 2] = HEAP32[i43 >> 2] << 2;
  i15 = i43 + 8 | 0;
  HEAPF64[i15 >> 3] = +HEAPF64[i15 >> 3] * 2.0;
  i15 = i43 + 16 | 0;
  HEAPF64[i15 >> 3] = +HEAPF64[i15 >> 3] * 2.0;
  i15 = HEAP32[i43 + 24 >> 2] | 0;
  if ((i15 | 0) > 0) {
   i48 = 0;
   do {
    i50 = i43 + 28 + (i48 << 2) | 0;
    HEAP32[i50 >> 2] = HEAP32[i50 >> 2] << 1;
    i50 = i43 + 40028 + (i48 << 2) | 0;
    HEAP32[i50 >> 2] = HEAP32[i50 >> 2] << 1;
    i48 = i48 + 1 | 0;
   } while ((i48 | 0) < (i15 | 0));
  }
  i8 = i8 + 1 | 0;
  if ((i8 | 0) >= (HEAP32[i9 >> 2] | 0)) break; else i43 = i43 + 80048 | 0;
 }
 STACKTOP = i10;
 return 0;
}

function __ZN6vision5Image5allocENS_9ImageTypeEmmim(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7;
 i9 = i7 + 8 | 0;
 if (!i3) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32763, 32) | 0, 32796, 107) | 0, 33554, 6) | 0, 127) | 0, 33561, 2) | 0, 32904, 20) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if (!i4) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32925, 33) | 0, 32796, 107) | 0, 33554, 6) | 0, 128) | 0, 33561, 2) | 0, 32959, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if (i5 >>> 0 < i3 >>> 0) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32981, 36) | 0, 32796, 107) | 0, 33554, 6) | 0, 129) | 0, 33561, 2) | 0, 33018, 44) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if (!i6) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 33063, 35) | 0, 32796, 107) | 0, 33554, 6) | 0, 130) | 0, 33561, 2) | 0, 33099, 33) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if ((i5 | 0) < 0) i13 = Math_imul(Math_imul(i6, i3) | 0, __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE(i2) | 0) | 0; else i13 = i5;
 HEAP32[i1 + 12 >> 2] = i13;
 i5 = Math_imul(i13, i4) | 0;
 i13 = i1 + 20 | 0;
 if ((HEAP32[i13 >> 2] | 0) == (i5 | 0)) {
  HEAP32[i1 >> 2] = i2;
  i14 = i1 + 4 | 0;
  HEAP32[i14 >> 2] = i3;
  i15 = i1 + 8 | 0;
  HEAP32[i15 >> 2] = i4;
  i16 = i1 + 16 | 0;
  HEAP32[i16 >> 2] = i6;
  HEAP32[i13 >> 2] = i5;
  STACKTOP = i7;
  return;
 }
 i10 = i1 + 24 | 0;
 i11 = __Znam(i5) | 0;
 HEAP32[i9 >> 2] = i11;
 i12 = __Znwm(16) | 0;
 HEAP32[i12 + 4 >> 2] = 0;
 HEAP32[i12 + 8 >> 2] = 0;
 HEAP32[i12 >> 2] = 13564;
 HEAP32[i12 + 12 >> 2] = i11;
 i17 = i9 + 4 | 0;
 HEAP32[i17 >> 2] = i12;
 HEAP32[i8 >> 2] = i11;
 HEAP32[i8 + 4 >> 2] = i11;
 __ZNSt3__210shared_ptrIhE18__enable_weak_thisEz(i9, i8);
 i11 = HEAP32[i9 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i10 >> 2] = i11;
 i11 = i1 + 28 | 0;
 i9 = HEAP32[i17 >> 2] | 0;
 i12 = HEAP32[i11 >> 2] | 0;
 HEAP32[i17 >> 2] = i12;
 HEAP32[i11 >> 2] = i9;
 i9 = i12;
 if (i12 | 0 ? (i11 = i9 + 4 | 0, i17 = HEAP32[i11 >> 2] | 0, HEAP32[i11 >> 2] = i17 + -1, (i17 | 0) == 0) : 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 255](i9);
  __ZNSt3__219__shared_weak_count14__release_weakEv(i9);
 }
 if (!(HEAP32[i10 >> 2] | 0)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 33133, 34) | 0, 32796, 107) | 0, 33554, 6) | 0, 149) | 0, 33561, 2) | 0, 33168, 20) | 0;
  __ZNKSt3__28ios_base6getlocEv(i8, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 } else {
  HEAP32[i1 >> 2] = i2;
  i14 = i1 + 4 | 0;
  HEAP32[i14 >> 2] = i3;
  i15 = i1 + 8 | 0;
  HEAP32[i15 >> 2] = i4;
  i16 = i1 + 16 | 0;
  HEAP32[i16 >> 2] = i6;
  HEAP32[i13 >> 2] = i5;
  STACKTOP = i7;
  return;
 }
}

function _hexfloat(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, d21 = 0.0, d22 = 0.0, i23 = 0, i24 = 0, i25 = 0, d26 = 0.0, d27 = 0.0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, d34 = 0.0, i35 = 0, d36 = 0.0, d37 = 0.0, i38 = 0, i39 = 0, d40 = 0.0, i41 = 0, i42 = 0, i43 = 0, d44 = 0.0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, d51 = 0.0, i52 = 0, d53 = 0.0;
 i6 = i1 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = i1 + 104 | 0;
 if (i7 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
  HEAP32[i6 >> 2] = i7 + 1;
  i9 = HEAPU8[i7 >> 0] | 0;
 } else i9 = ___shgetc(i1) | 0;
 i7 = i9;
 i9 = 0;
 L5 : while (1) {
  switch (i7 | 0) {
  case 46:
   {
    i10 = 10;
    break L5;
    break;
   }
  case 48:
   break;
  default:
   {
    i11 = 0;
    i12 = i7;
    i13 = i9;
    i14 = 0;
    i15 = 0;
    break L5;
   }
  }
  i16 = HEAP32[i6 >> 2] | 0;
  if (i16 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i16 + 1;
   i17 = HEAPU8[i16 >> 0] | 0;
  } else i17 = ___shgetc(i1) | 0;
  i7 = i17;
  i9 = 1;
 }
 if ((i10 | 0) == 10) {
  i17 = HEAP32[i6 >> 2] | 0;
  if (i17 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i17 + 1;
   i18 = HEAPU8[i17 >> 0] | 0;
  } else i18 = ___shgetc(i1) | 0;
  if ((i18 | 0) == 48) {
   i17 = 0;
   i7 = 0;
   while (1) {
    i16 = HEAP32[i6 >> 2] | 0;
    if (i16 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
     HEAP32[i6 >> 2] = i16 + 1;
     i19 = HEAPU8[i16 >> 0] | 0;
    } else i19 = ___shgetc(i1) | 0;
    i16 = _i64Add(i17 | 0, i7 | 0, -1, -1) | 0;
    i20 = getTempRet0() | 0;
    if ((i19 | 0) == 48) {
     i17 = i16;
     i7 = i20;
    } else {
     i11 = 1;
     i12 = i19;
     i13 = 1;
     i14 = i16;
     i15 = i20;
     break;
    }
   }
  } else {
   i11 = 1;
   i12 = i18;
   i13 = i9;
   i14 = 0;
   i15 = 0;
  }
 }
 i9 = 0;
 d21 = 1.0;
 d22 = 0.0;
 i18 = 0;
 i19 = i11;
 i11 = i12;
 i12 = i13;
 i13 = 0;
 i7 = 0;
 i17 = i14;
 i14 = i15;
 while (1) {
  i15 = i11 + -48 | 0;
  i20 = i11 | 32;
  if (i15 >>> 0 >= 10) {
   i16 = (i11 | 0) == 46;
   if (!(i16 | (i20 + -97 | 0) >>> 0 < 6)) {
    i23 = i11;
    break;
   }
   if (i16) if (!i19) {
    i24 = 1;
    i25 = i9;
    d26 = d21;
    d27 = d22;
    i28 = i18;
    i29 = i12;
    i30 = i7;
    i31 = i13;
    i32 = i7;
    i33 = i13;
   } else {
    i23 = 46;
    break;
   } else i10 = 24;
  } else i10 = 24;
  if ((i10 | 0) == 24) {
   i10 = 0;
   i16 = (i11 | 0) > 57 ? i20 + -87 | 0 : i15;
   do if (!((i13 | 0) < 0 | (i13 | 0) == 0 & i7 >>> 0 < 8)) if ((i13 | 0) < 0 | (i13 | 0) == 0 & i7 >>> 0 < 14) {
    d34 = d21 * .0625;
    i35 = i9;
    d36 = d34;
    d37 = d22 + d34 * +(i16 | 0);
    i38 = i18;
    break;
   } else {
    i15 = (i9 | 0) != 0 | (i16 | 0) == 0;
    i35 = i15 ? i9 : 1;
    d36 = d21;
    d37 = i15 ? d22 : d22 + d21 * .5;
    i38 = i18;
    break;
   } else {
    i35 = i9;
    d36 = d21;
    d37 = d22;
    i38 = i16 + (i18 << 4) | 0;
   } while (0);
   i16 = _i64Add(i7 | 0, i13 | 0, 1, 0) | 0;
   i24 = i19;
   i25 = i35;
   d26 = d36;
   d27 = d37;
   i28 = i38;
   i29 = 1;
   i30 = i17;
   i31 = i14;
   i32 = i16;
   i33 = getTempRet0() | 0;
  }
  i16 = HEAP32[i6 >> 2] | 0;
  if (i16 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i16 + 1;
   i39 = HEAPU8[i16 >> 0] | 0;
  } else i39 = ___shgetc(i1) | 0;
  i9 = i25;
  d21 = d26;
  d22 = d27;
  i18 = i28;
  i19 = i24;
  i11 = i39;
  i12 = i29;
  i13 = i33;
  i7 = i32;
  i17 = i30;
  i14 = i31;
 }
 do if (!i12) {
  i31 = (HEAP32[i8 >> 2] | 0) == 0;
  if (!i31) HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
  if (i5) {
   if (!i31 ? (HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1, !((i19 | 0) == 0 | i31)) : 0) HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
  } else ___shlim(i1, 0, 0);
  d40 = +(i4 | 0) * 0.0;
 } else {
  i31 = (i19 | 0) == 0;
  i30 = i31 ? i7 : i17;
  i32 = i31 ? i13 : i14;
  if ((i13 | 0) < 0 | (i13 | 0) == 0 & i7 >>> 0 < 8) {
   i31 = i18;
   i33 = i7;
   i29 = i13;
   while (1) {
    i39 = i31 << 4;
    i11 = i33;
    i33 = _i64Add(i33 | 0, i29 | 0, 1, 0) | 0;
    i24 = i29;
    i29 = getTempRet0() | 0;
    if (!((i24 | 0) < 0 | (i24 | 0) == 0 & i11 >>> 0 < 7)) {
     i41 = i39;
     break;
    } else i31 = i39;
   }
  } else i41 = i18;
  if ((i23 | 32 | 0) == 112) {
   i31 = _scanexp(i1, i5) | 0;
   i29 = getTempRet0() | 0;
   if ((i31 | 0) == 0 & (i29 | 0) == -2147483648) {
    if (!i5) {
     ___shlim(i1, 0, 0);
     d40 = 0.0;
     break;
    }
    if (!(HEAP32[i8 >> 2] | 0)) {
     i42 = 0;
     i43 = 0;
    } else {
     HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
     i42 = 0;
     i43 = 0;
    }
   } else {
    i42 = i31;
    i43 = i29;
   }
  } else if (!(HEAP32[i8 >> 2] | 0)) {
   i42 = 0;
   i43 = 0;
  } else {
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
   i42 = 0;
   i43 = 0;
  }
  i29 = _bitshift64Shl(i30 | 0, i32 | 0, 2) | 0;
  i31 = _i64Add(i29 | 0, getTempRet0() | 0, -32, -1) | 0;
  i29 = _i64Add(i31 | 0, getTempRet0() | 0, i42 | 0, i43 | 0) | 0;
  i31 = getTempRet0() | 0;
  if (!i41) {
   d40 = +(i4 | 0) * 0.0;
   break;
  }
  i33 = 0 - i3 | 0;
  i39 = ((i33 | 0) < 0) << 31 >> 31;
  if ((i31 | 0) > (i39 | 0) | (i31 | 0) == (i39 | 0) & i29 >>> 0 > i33 >>> 0) {
   i33 = ___errno_location() | 0;
   HEAP32[i33 >> 2] = 34;
   d40 = +(i4 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  i33 = i3 + -106 | 0;
  i39 = ((i33 | 0) < 0) << 31 >> 31;
  if ((i31 | 0) < (i39 | 0) | (i31 | 0) == (i39 | 0) & i29 >>> 0 < i33 >>> 0) {
   i33 = ___errno_location() | 0;
   HEAP32[i33 >> 2] = 34;
   d40 = +(i4 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if ((i41 | 0) > -1) {
   d27 = d22;
   i33 = i41;
   i39 = i29;
   i11 = i31;
   while (1) {
    i24 = !(d27 >= .5);
    i28 = i33 << 1 | (i24 ^ 1) & 1;
    d26 = d27 + (i24 ? d27 : d27 + -1.0);
    i24 = _i64Add(i39 | 0, i11 | 0, -1, -1) | 0;
    i25 = getTempRet0() | 0;
    if ((i28 | 0) > -1) {
     d27 = d26;
     i33 = i28;
     i39 = i24;
     i11 = i25;
    } else {
     d44 = d26;
     i45 = i28;
     i46 = i24;
     i47 = i25;
     break;
    }
   }
  } else {
   d44 = d22;
   i45 = i41;
   i46 = i29;
   i47 = i31;
  }
  i11 = ((i2 | 0) < 0) << 31 >> 31;
  i39 = _i64Subtract(32, 0, i3 | 0, ((i3 | 0) < 0) << 31 >> 31 | 0) | 0;
  i33 = _i64Add(i39 | 0, getTempRet0() | 0, i46 | 0, i47 | 0) | 0;
  i39 = getTempRet0() | 0;
  if ((i39 | 0) < (i11 | 0) | (i39 | 0) == (i11 | 0) & i33 >>> 0 < i2 >>> 0) if ((i33 | 0) > 0) {
   i48 = i33;
   i10 = 65;
  } else {
   i49 = 0;
   i50 = 84;
   i10 = 67;
  } else {
   i48 = i2;
   i10 = 65;
  }
  if ((i10 | 0) == 65) if ((i48 | 0) < 53) {
   i49 = i48;
   i50 = 84 - i48 | 0;
   i10 = 67;
  } else {
   d51 = 0.0;
   i52 = i48;
   d53 = +(i4 | 0);
  }
  if ((i10 | 0) == 67) {
   d27 = +(i4 | 0);
   d51 = +_copysignl(+_scalbn(1.0, i50), d27);
   i52 = i49;
   d53 = d27;
  }
  i33 = (i45 & 1 | 0) == 0 & (d44 != 0.0 & (i52 | 0) < 32);
  d27 = (i33 ? 0.0 : d44) * d53 + (d51 + d53 * +((i45 + (i33 & 1) | 0) >>> 0)) - d51;
  if (!(d27 != 0.0)) {
   i33 = ___errno_location() | 0;
   HEAP32[i33 >> 2] = 34;
  }
  d40 = +_scalbnl(d27, i46);
 } while (0);
 return +d40;
}

function __ZN6vision18binomial_4th_orderEPfPtPKhmm(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 if (i4 >>> 0 <= 4) {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24998, 33) | 0, 25032, 130) | 0, 33554, 6) | 0, 55) | 0, 33561, 2) | 0, 25163, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 if (i5 >>> 0 <= 4) {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25182, 34) | 0, 25032, 130) | 0, 33554, 6) | 0, 56) | 0, 33561, 2) | 0, 25163, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 i8 = i4 + -1 | 0;
 i9 = i4 + -2 | 0;
 i7 = i5 + -2 | 0;
 i10 = i9 >>> 0 > 2;
 i11 = i4 + -3 | 0;
 i12 = i4 + -4 | 0;
 i13 = i2;
 i14 = 0;
 while (1) {
  i15 = i3 + (Math_imul(i14, i4) | 0) | 0;
  i16 = HEAPU8[i15 >> 0] | 0;
  i17 = i15 + 1 | 0;
  i18 = i15 + 2 | 0;
  HEAP16[i13 >> 1] = (i16 * 7 | 0) + (HEAPU8[i18 >> 0] | 0) + ((HEAPU8[i17 >> 0] | 0) + i16 << 2);
  i16 = HEAPU8[i15 >> 0] | 0;
  i19 = i13 + 4 | 0;
  HEAP16[i13 + 2 >> 1] = ((HEAPU8[i17 >> 0] | 0) * 6 | 0) + i16 + (HEAPU8[i15 + 3 >> 0] | 0) + ((HEAPU8[i18 >> 0] | 0) + i16 << 2);
  if (i10) {
   i16 = 2;
   i18 = i19;
   while (1) {
    i17 = i16;
    i16 = i16 + 1 | 0;
    HEAP16[i18 >> 1] = ((HEAPU8[i15 + i17 >> 0] | 0) * 6 | 0) + (HEAPU8[i15 + (i17 + -2) >> 0] | 0) + ((HEAPU8[i15 + i16 >> 0] | 0) + (HEAPU8[i15 + (i17 + -1) >> 0] | 0) << 2) + (HEAPU8[i15 + (i17 + 2) >> 0] | 0);
    if ((i16 | 0) == (i9 | 0)) break; else i18 = i18 + 2 | 0;
   }
   i20 = i13 + (i9 << 1) | 0;
  } else i20 = i19;
  i18 = i15 + i9 | 0;
  i16 = i15 + i11 | 0;
  i17 = i15 + i8 | 0;
  i21 = HEAPU8[i17 >> 0] | 0;
  HEAP16[i20 >> 1] = ((HEAPU8[i18 >> 0] | 0) * 6 | 0) + i21 + (HEAPU8[i15 + i12 >> 0] | 0) + (i21 + (HEAPU8[i16 >> 0] | 0) << 2);
  i21 = HEAPU8[i17 >> 0] | 0;
  HEAP16[i20 + 2 >> 1] = (i21 * 7 | 0) + (HEAPU8[i16 >> 0] | 0) + ((HEAPU8[i18 >> 0] | 0) + i21 << 2);
  i14 = i14 + 1 | 0;
  if ((i14 | 0) == (i5 | 0)) break; else i13 = i20 + 4 | 0;
 }
 i20 = i2 + (i4 << 1) | 0;
 i13 = i20 + (i4 << 1) | 0;
 i14 = (i4 | 0) == 0;
 if (!i14) {
  i12 = 0;
  i8 = i13;
  i11 = i20;
  i9 = i2;
  i10 = i1;
  while (1) {
   i3 = HEAPU16[i9 >> 1] | 0;
   HEAPF32[i10 >> 2] = +((i3 * 7 | 0) + ((HEAPU16[i11 >> 1] | 0) + i3 << 2) + (HEAPU16[i8 >> 1] | 0) | 0) * .00390625;
   i12 = i12 + 1 | 0;
   if ((i12 | 0) == (i4 | 0)) break; else {
    i8 = i8 + 2 | 0;
    i11 = i11 + 2 | 0;
    i9 = i9 + 2 | 0;
    i10 = i10 + 4 | 0;
   }
  }
  if (!i14) {
   i10 = 0;
   i9 = i13;
   i11 = i20;
   i20 = i2;
   i8 = i1 + (i4 << 2) | 0;
   i12 = i13 + (i4 << 1) | 0;
   while (1) {
    i13 = HEAPU16[i20 >> 1] | 0;
    HEAPF32[i8 >> 2] = +(((HEAPU16[i11 >> 1] | 0) * 6 | 0) + i13 + ((HEAPU16[i9 >> 1] | 0) + i13 << 2) + (HEAPU16[i12 >> 1] | 0) | 0) * .00390625;
    i10 = i10 + 1 | 0;
    if ((i10 | 0) == (i4 | 0)) break; else {
     i9 = i9 + 2 | 0;
     i11 = i11 + 2 | 0;
     i20 = i20 + 2 | 0;
     i8 = i8 + 4 | 0;
     i12 = i12 + 2 | 0;
    }
   }
  }
 }
 if (i7 >>> 0 > 2) {
  if (i14) {
   STACKTOP = i6;
   return;
  }
  i12 = 2;
  do {
   i8 = i2 + ((Math_imul(i12 + -2 | 0, i4) | 0) << 1) | 0;
   i20 = i8 + (i4 << 1) | 0;
   i11 = i20 + (i4 << 1) | 0;
   i9 = i11 + (i4 << 1) | 0;
   i10 = 0;
   i13 = i9;
   i3 = i11;
   i11 = i20;
   i20 = i8;
   i8 = i1 + ((Math_imul(i12, i4) | 0) << 2) | 0;
   i21 = i9 + (i4 << 1) | 0;
   while (1) {
    HEAPF32[i8 >> 2] = +(((HEAPU16[i3 >> 1] | 0) * 6 | 0) + (HEAPU16[i20 >> 1] | 0) + ((HEAPU16[i13 >> 1] | 0) + (HEAPU16[i11 >> 1] | 0) << 2) + (HEAPU16[i21 >> 1] | 0) | 0) * .00390625;
    i10 = i10 + 1 | 0;
    if ((i10 | 0) == (i4 | 0)) break; else {
     i13 = i13 + 2 | 0;
     i3 = i3 + 2 | 0;
     i11 = i11 + 2 | 0;
     i20 = i20 + 2 | 0;
     i8 = i8 + 4 | 0;
     i21 = i21 + 2 | 0;
    }
   }
   i12 = i12 + 1 | 0;
  } while ((i12 | 0) != (i7 | 0));
 }
 i12 = i2 + ((Math_imul(i5 + -4 | 0, i4) | 0) << 1) | 0;
 i21 = i12 + (i4 << 1) | 0;
 i8 = i21 + (i4 << 1) | 0;
 if (i14) {
  STACKTOP = i6;
  return;
 }
 i20 = 0;
 i11 = i8;
 i3 = i21;
 i21 = i12;
 i12 = i1 + ((Math_imul(i7, i4) | 0) << 2) | 0;
 i7 = i8 + (i4 << 1) | 0;
 while (1) {
  i8 = HEAPU16[i7 >> 1] | 0;
  HEAPF32[i12 >> 2] = +(((HEAPU16[i11 >> 1] | 0) * 6 | 0) + (HEAPU16[i21 >> 1] | 0) + (i8 + (HEAPU16[i3 >> 1] | 0) << 2) + i8 | 0) * .00390625;
  i20 = i20 + 1 | 0;
  if ((i20 | 0) == (i4 | 0)) break; else {
   i11 = i11 + 2 | 0;
   i3 = i3 + 2 | 0;
   i21 = i21 + 2 | 0;
   i12 = i12 + 4 | 0;
   i7 = i7 + 2 | 0;
  }
 }
 i7 = i2 + ((Math_imul(i5 + -3 | 0, i4) | 0) << 1) | 0;
 i2 = i7 + (i4 << 1) | 0;
 if (i14) {
  STACKTOP = i6;
  return;
 }
 i14 = 0;
 i12 = i2;
 i21 = i7;
 i7 = i1 + ((Math_imul(i5 + -1 | 0, i4) | 0) << 2) | 0;
 i5 = i2 + (i4 << 1) | 0;
 while (1) {
  i2 = HEAPU16[i5 >> 1] | 0;
  HEAPF32[i7 >> 2] = +((i2 * 6 | 0) + (HEAPU16[i21 >> 1] | 0) + (i2 + (HEAPU16[i12 >> 1] | 0) << 2) + i2 | 0) * .00390625;
  i14 = i14 + 1 | 0;
  if ((i14 | 0) == (i4 | 0)) break; else {
   i12 = i12 + 2 | 0;
   i21 = i21 + 2 | 0;
   i7 = i7 + 4 | 0;
   i5 = i5 + 2 | 0;
  }
 }
 STACKTOP = i6;
 return;
}

function _realize_virt_arrays(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i4 = i3 + 68 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 if (!i5) {
  i6 = 0;
  i7 = 0;
 } else {
  i8 = 0;
  i9 = 0;
  i10 = i5;
  while (1) {
   if (!(HEAP32[i10 >> 2] | 0)) {
    i5 = HEAP32[i10 + 8 >> 2] | 0;
    i11 = (Math_imul(i5, HEAP32[i10 + 12 >> 2] | 0) | 0) + i8 | 0;
    i12 = i11;
    i13 = (Math_imul(HEAP32[i10 + 4 >> 2] | 0, i5) | 0) + i9 | 0;
   } else {
    i12 = i8;
    i13 = i9;
   }
   i10 = HEAP32[i10 + 44 >> 2] | 0;
   if (!i10) {
    i6 = i12;
    i7 = i13;
    break;
   } else {
    i8 = i12;
    i9 = i13;
   }
  }
 }
 i13 = i3 + 72 | 0;
 i9 = HEAP32[i13 >> 2] | 0;
 if (!i9) {
  i14 = i6;
  i15 = i7;
 } else {
  i12 = i9;
  i9 = i7;
  i7 = i6;
  while (1) {
   if (!(HEAP32[i12 >> 2] | 0)) {
    i6 = HEAP32[i12 + 8 >> 2] | 0;
    i8 = (Math_imul(HEAP32[i12 + 12 >> 2] << 7, i6) | 0) + i7 | 0;
    i16 = i8;
    i17 = (Math_imul(i6 << 7, HEAP32[i12 + 4 >> 2] | 0) | 0) + i9 | 0;
   } else {
    i16 = i7;
    i17 = i9;
   }
   i12 = HEAP32[i12 + 44 >> 2] | 0;
   if (!i12) {
    i14 = i16;
    i15 = i17;
    break;
   } else {
    i9 = i17;
    i7 = i16;
   }
  }
 }
 if ((i14 | 0) < 1) return;
 i16 = _jpeg_mem_available(i1, i14, i15, HEAP32[i3 + 76 >> 2] | 0) | 0;
 if ((i16 | 0) < (i15 | 0)) {
  i15 = (i16 | 0) / (i14 | 0) | 0;
  i18 = (i15 | 0) > 1 ? i15 : 1;
 } else i18 = 1e9;
 i15 = HEAP32[i4 >> 2] | 0;
 if (i15 | 0) {
  i4 = i3 + 80 | 0;
  i14 = i15;
  do {
   if (!(HEAP32[i14 >> 2] | 0)) {
    i15 = HEAP32[i14 + 4 >> 2] | 0;
    i16 = HEAP32[i14 + 12 >> 2] | 0;
    if (((((i15 + -1 | 0) >>> 0) / (i16 >>> 0) | 0) + 1 | 0) > (i18 | 0)) {
     i7 = Math_imul(i16, i18) | 0;
     i16 = i14 + 16 | 0;
     HEAP32[i16 >> 2] = i7;
     i7 = i14 + 8 | 0;
     _jpeg_open_backing_store(i1, i14 + 48 | 0, Math_imul(HEAP32[i7 >> 2] | 0, i15) | 0);
     HEAP32[i14 + 40 >> 2] = 1;
     i19 = i7;
     i20 = HEAP32[i16 >> 2] | 0;
    } else {
     HEAP32[i14 + 16 >> 2] = i15;
     i19 = i14 + 8 | 0;
     i20 = i15;
    }
    i15 = HEAP32[i19 >> 2] | 0;
    i16 = HEAP32[i2 >> 2] | 0;
    i7 = 999999984 / (i15 >>> 0) | 0;
    if (i15 >>> 0 > 999999984) {
     i17 = HEAP32[i1 >> 2] | 0;
     HEAP32[i17 + 20 >> 2] = 70;
     FUNCTION_TABLE_vi[HEAP32[i17 >> 2] & 255](i1);
    }
    i17 = (i7 | 0) < (i20 | 0) ? i7 : i20;
    HEAP32[i16 + 80 >> 2] = i17;
    i16 = _alloc_small(i1, 1, i20 << 2) | 0;
    if (i20 | 0) {
     i7 = ~i20;
     i9 = 0;
     i12 = i17;
     while (1) {
      i17 = i20 - i9 | 0;
      i6 = i12;
      i12 = i12 >>> 0 < i17 >>> 0 ? i12 : i17;
      i17 = Math_imul(i12, i15) | 0;
      i8 = HEAP32[i2 >> 2] | 0;
      if (i17 >>> 0 > 999999984) {
       i10 = HEAP32[i1 >> 2] | 0;
       HEAP32[i10 + 20 >> 2] = 54;
       HEAP32[i10 + 24 >> 2] = 3;
       FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
      }
      i10 = i17 & 7;
      i5 = ((i10 | 0) == 0 ? 0 : 8 - i10 | 0) + i17 | 0;
      i17 = i5 + 16 | 0;
      i10 = _jpeg_get_large(i1, i17) | 0;
      if (!i10) {
       i11 = HEAP32[i1 >> 2] | 0;
       HEAP32[i11 + 20 >> 2] = 54;
       HEAP32[i11 + 24 >> 2] = 4;
       FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
      }
      i11 = i8 + 76 | 0;
      HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + i17;
      i17 = i8 + 64 | 0;
      HEAP32[i10 >> 2] = HEAP32[i17 >> 2];
      HEAP32[i10 + 4 >> 2] = i5;
      HEAP32[i10 + 8 >> 2] = 0;
      HEAP32[i17 >> 2] = i10;
      if (!i12) i21 = i9; else {
       i17 = i9 + i7 | 0;
       i5 = ~i6;
       i6 = i17 >>> 0 > i5 >>> 0;
       i8 = i12;
       i11 = i10 + 16 | 0;
       i10 = i9;
       while (1) {
        HEAP32[i16 + (i10 << 2) >> 2] = i11;
        i8 = i8 + -1 | 0;
        if (!i8) break; else {
         i11 = i11 + i15 | 0;
         i10 = i10 + 1 | 0;
        }
       }
       i21 = i9 + -1 - (i6 ? i17 : i5) | 0;
      }
      if (i21 >>> 0 >= i20 >>> 0) break; else i9 = i21;
     }
    }
    HEAP32[i14 >> 2] = i16;
    HEAP32[i14 + 20 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i14 + 24 >> 2] = 0;
    HEAP32[i14 + 28 >> 2] = 0;
    HEAP32[i14 + 36 >> 2] = 0;
   }
   i14 = HEAP32[i14 + 44 >> 2] | 0;
  } while ((i14 | 0) != 0);
 }
 i14 = HEAP32[i13 >> 2] | 0;
 if (!i14) return;
 i13 = i3 + 80 | 0;
 i3 = i14;
 do {
  if (!(HEAP32[i3 >> 2] | 0)) {
   i14 = HEAP32[i3 + 4 >> 2] | 0;
   i4 = HEAP32[i3 + 12 >> 2] | 0;
   if (((((i14 + -1 | 0) >>> 0) / (i4 >>> 0) | 0) + 1 | 0) > (i18 | 0)) {
    i21 = Math_imul(i4, i18) | 0;
    i4 = i3 + 16 | 0;
    HEAP32[i4 >> 2] = i21;
    i21 = i3 + 8 | 0;
    _jpeg_open_backing_store(i1, i3 + 48 | 0, Math_imul(i14 << 7, HEAP32[i21 >> 2] | 0) | 0);
    HEAP32[i3 + 40 >> 2] = 1;
    i22 = i21;
    i23 = HEAP32[i4 >> 2] | 0;
   } else {
    HEAP32[i3 + 16 >> 2] = i14;
    i22 = i3 + 8 | 0;
    i23 = i14;
   }
   i14 = HEAP32[i22 >> 2] | 0;
   i4 = HEAP32[i2 >> 2] | 0;
   i21 = i14 << 7;
   i20 = 999999984 / (i21 >>> 0) | 0;
   if (i21 >>> 0 > 999999984) {
    i19 = HEAP32[i1 >> 2] | 0;
    HEAP32[i19 + 20 >> 2] = 70;
    FUNCTION_TABLE_vi[HEAP32[i19 >> 2] & 255](i1);
   }
   i19 = (i20 | 0) < (i23 | 0) ? i20 : i23;
   HEAP32[i4 + 80 >> 2] = i19;
   i4 = _alloc_small(i1, 1, i23 << 2) | 0;
   if (i23 | 0) {
    i20 = ~i23;
    i9 = 0;
    i15 = i19;
    while (1) {
     i19 = i23 - i9 | 0;
     i12 = i15;
     i15 = i15 >>> 0 < i19 >>> 0 ? i15 : i19;
     i19 = Math_imul(i15, i21) | 0;
     i7 = HEAP32[i2 >> 2] | 0;
     if (i19 >>> 0 > 999999984) {
      i10 = HEAP32[i1 >> 2] | 0;
      HEAP32[i10 + 20 >> 2] = 54;
      HEAP32[i10 + 24 >> 2] = 3;
      FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
     }
     i10 = i19 | 16;
     i11 = _jpeg_get_large(i1, i10) | 0;
     if (!i11) {
      i8 = HEAP32[i1 >> 2] | 0;
      HEAP32[i8 + 20 >> 2] = 54;
      HEAP32[i8 + 24 >> 2] = 4;
      FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
     }
     i8 = i7 + 76 | 0;
     HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i10;
     i10 = i7 + 64 | 0;
     HEAP32[i11 >> 2] = HEAP32[i10 >> 2];
     HEAP32[i11 + 4 >> 2] = i19;
     HEAP32[i11 + 8 >> 2] = 0;
     HEAP32[i10 >> 2] = i11;
     if (!i15) i24 = i9; else {
      i10 = i9 + i20 | 0;
      i19 = ~i12;
      i12 = i10 >>> 0 > i19 >>> 0;
      i7 = i15;
      i8 = i11 + 16 | 0;
      i11 = i9;
      while (1) {
       HEAP32[i4 + (i11 << 2) >> 2] = i8;
       i7 = i7 + -1 | 0;
       if (!i7) break; else {
        i8 = i8 + (i14 << 7) | 0;
        i11 = i11 + 1 | 0;
       }
      }
      i24 = i9 + -1 - (i12 ? i10 : i19) | 0;
     }
     if (i24 >>> 0 >= i23 >>> 0) break; else i9 = i24;
    }
   }
   HEAP32[i3 >> 2] = i4;
   HEAP32[i3 + 20 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i3 + 24 >> 2] = 0;
   HEAP32[i3 + 28 >> 2] = 0;
   HEAP32[i3 + 36 >> 2] = 0;
  }
  i3 = HEAP32[i3 + 44 >> 2] | 0;
 } while ((i3 | 0) != 0);
 return;
}

function __ZN6vision18binomial_4th_orderEPfS0_PKfmm(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 if (i4 >>> 0 <= 4) {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24998, 33) | 0, 25032, 130) | 0, 33554, 6) | 0, 168) | 0, 33561, 2) | 0, 25163, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 if (i5 >>> 0 <= 4) {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25182, 34) | 0, 25032, 130) | 0, 33554, 6) | 0, 169) | 0, 33561, 2) | 0, 25163, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 i8 = i4 + -1 | 0;
 i9 = i4 + -2 | 0;
 i7 = i5 + -2 | 0;
 i10 = i9 >>> 0 > 2;
 i11 = i4 + -3 | 0;
 i12 = i4 + -4 | 0;
 i13 = i2;
 i14 = 0;
 while (1) {
  i15 = i3 + ((Math_imul(i14, i4) | 0) << 2) | 0;
  d16 = +HEAPF32[i15 >> 2];
  i17 = i15 + 4 | 0;
  i18 = i15 + 8 | 0;
  HEAPF32[i13 >> 2] = +HEAPF32[i18 >> 2] + (d16 + (d16 * 6.0 + (d16 + +HEAPF32[i17 >> 2]) * 4.0));
  d16 = +HEAPF32[i15 >> 2];
  i19 = i13 + 8 | 0;
  HEAPF32[i13 + 4 >> 2] = +HEAPF32[i15 + 12 >> 2] + (d16 + (+HEAPF32[i17 >> 2] * 6.0 + (d16 + +HEAPF32[i18 >> 2]) * 4.0));
  if (i10) {
   i18 = 2;
   i17 = i19;
   while (1) {
    i20 = i18;
    i18 = i18 + 1 | 0;
    HEAPF32[i17 >> 2] = +HEAPF32[i15 + (i20 + 2 << 2) >> 2] + (+HEAPF32[i15 + (i20 + -2 << 2) >> 2] + (+HEAPF32[i15 + (i20 << 2) >> 2] * 6.0 + (+HEAPF32[i15 + (i20 + -1 << 2) >> 2] + +HEAPF32[i15 + (i18 << 2) >> 2]) * 4.0));
    if ((i18 | 0) == (i9 | 0)) break; else i17 = i17 + 4 | 0;
   }
   i21 = i13 + (i9 << 2) | 0;
  } else i21 = i19;
  i17 = i15 + (i9 << 2) | 0;
  i18 = i15 + (i11 << 2) | 0;
  i20 = i15 + (i8 << 2) | 0;
  d16 = +HEAPF32[i20 >> 2];
  HEAPF32[i21 >> 2] = d16 + (+HEAPF32[i15 + (i12 << 2) >> 2] + (+HEAPF32[i17 >> 2] * 6.0 + (+HEAPF32[i18 >> 2] + d16) * 4.0));
  d16 = +HEAPF32[i20 >> 2];
  HEAPF32[i21 + 4 >> 2] = d16 + (+HEAPF32[i18 >> 2] + (d16 * 6.0 + (d16 + +HEAPF32[i17 >> 2]) * 4.0));
  i14 = i14 + 1 | 0;
  if ((i14 | 0) == (i5 | 0)) break; else i13 = i21 + 8 | 0;
 }
 i21 = i2 + (i4 << 2) | 0;
 i13 = i21 + (i4 << 2) | 0;
 i14 = (i4 | 0) == 0;
 if (!i14) {
  i12 = 0;
  i8 = i13;
  i11 = i21;
  i9 = i2;
  i10 = i1;
  while (1) {
   d16 = +HEAPF32[i9 >> 2];
   HEAPF32[i10 >> 2] = (+HEAPF32[i8 >> 2] + (d16 + (d16 * 6.0 + (d16 + +HEAPF32[i11 >> 2]) * 4.0))) * .00390625;
   i12 = i12 + 1 | 0;
   if ((i12 | 0) == (i4 | 0)) break; else {
    i8 = i8 + 4 | 0;
    i11 = i11 + 4 | 0;
    i9 = i9 + 4 | 0;
    i10 = i10 + 4 | 0;
   }
  }
  if (!i14) {
   i10 = 0;
   i9 = i13;
   i11 = i21;
   i21 = i2;
   i8 = i1 + (i4 << 2) | 0;
   i12 = i13 + (i4 << 2) | 0;
   while (1) {
    d16 = +HEAPF32[i21 >> 2];
    HEAPF32[i8 >> 2] = (+HEAPF32[i12 >> 2] + (d16 + (+HEAPF32[i11 >> 2] * 6.0 + (d16 + +HEAPF32[i9 >> 2]) * 4.0))) * .00390625;
    i10 = i10 + 1 | 0;
    if ((i10 | 0) == (i4 | 0)) break; else {
     i9 = i9 + 4 | 0;
     i11 = i11 + 4 | 0;
     i21 = i21 + 4 | 0;
     i8 = i8 + 4 | 0;
     i12 = i12 + 4 | 0;
    }
   }
  }
 }
 if (i7 >>> 0 > 2) {
  if (i14) {
   STACKTOP = i6;
   return;
  }
  i12 = 2;
  do {
   i8 = i2 + ((Math_imul(i12 + -2 | 0, i4) | 0) << 2) | 0;
   i21 = i8 + (i4 << 2) | 0;
   i11 = i21 + (i4 << 2) | 0;
   i9 = i11 + (i4 << 2) | 0;
   i10 = 0;
   i13 = i9;
   i3 = i11;
   i11 = i21;
   i21 = i8;
   i8 = i1 + ((Math_imul(i12, i4) | 0) << 2) | 0;
   i17 = i9 + (i4 << 2) | 0;
   while (1) {
    HEAPF32[i8 >> 2] = (+HEAPF32[i17 >> 2] + (+HEAPF32[i21 >> 2] + (+HEAPF32[i3 >> 2] * 6.0 + (+HEAPF32[i11 >> 2] + +HEAPF32[i13 >> 2]) * 4.0))) * .00390625;
    i10 = i10 + 1 | 0;
    if ((i10 | 0) == (i4 | 0)) break; else {
     i13 = i13 + 4 | 0;
     i3 = i3 + 4 | 0;
     i11 = i11 + 4 | 0;
     i21 = i21 + 4 | 0;
     i8 = i8 + 4 | 0;
     i17 = i17 + 4 | 0;
    }
   }
   i12 = i12 + 1 | 0;
  } while ((i12 | 0) != (i7 | 0));
 }
 i12 = i2 + ((Math_imul(i5 + -4 | 0, i4) | 0) << 2) | 0;
 i17 = i12 + (i4 << 2) | 0;
 i8 = i17 + (i4 << 2) | 0;
 if (i14) {
  STACKTOP = i6;
  return;
 }
 i21 = 0;
 i11 = i8;
 i3 = i17;
 i17 = i12;
 i12 = i1 + ((Math_imul(i7, i4) | 0) << 2) | 0;
 i7 = i8 + (i4 << 2) | 0;
 while (1) {
  d16 = +HEAPF32[i7 >> 2];
  HEAPF32[i12 >> 2] = (d16 + (+HEAPF32[i17 >> 2] + (+HEAPF32[i11 >> 2] * 6.0 + (+HEAPF32[i3 >> 2] + d16) * 4.0))) * .00390625;
  i21 = i21 + 1 | 0;
  if ((i21 | 0) == (i4 | 0)) break; else {
   i11 = i11 + 4 | 0;
   i3 = i3 + 4 | 0;
   i17 = i17 + 4 | 0;
   i12 = i12 + 4 | 0;
   i7 = i7 + 4 | 0;
  }
 }
 i7 = i2 + ((Math_imul(i5 + -3 | 0, i4) | 0) << 2) | 0;
 i2 = i7 + (i4 << 2) | 0;
 if (i14) {
  STACKTOP = i6;
  return;
 }
 i14 = 0;
 i12 = i2;
 i17 = i7;
 i7 = i1 + ((Math_imul(i5 + -1 | 0, i4) | 0) << 2) | 0;
 i5 = i2 + (i4 << 2) | 0;
 while (1) {
  d16 = +HEAPF32[i5 >> 2];
  HEAPF32[i7 >> 2] = (d16 + (+HEAPF32[i17 >> 2] + (d16 * 6.0 + (+HEAPF32[i12 >> 2] + d16) * 4.0))) * .00390625;
  i14 = i14 + 1 | 0;
  if ((i14 | 0) == (i4 | 0)) break; else {
   i12 = i12 + 4 | 0;
   i17 = i17 + 4 | 0;
   i7 = i7 + 4 | 0;
   i5 = i5 + 4 | 0;
  }
 }
 STACKTOP = i6;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 32 | 0;
 i6 = i4 + 16 | 0;
 i7 = i4 + 12 | 0;
 i8 = i4;
 do if ((i2 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 73 : 0) {
  i9 = i3 + 61 | 0;
  i10 = i3 + 36 | 0;
  if (HEAP8[i9 >> 0] | 0) {
   i11 = HEAP32[i10 >> 2] | 0;
   i12 = HEAP32[i11 + -16 >> 2] | 0;
   i13 = i11 + -12 | 0;
   i11 = HEAP32[i13 >> 2] | 0;
   while (1) {
    if ((i11 | 0) == (i12 | 0)) break;
    i14 = i11 + -16 | 0;
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i14);
    i11 = i14;
   }
   HEAP32[i13 >> 2] = i12;
  }
  HEAP32[i6 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  HEAP32[i6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i6, 50279, __ZNSt3__211char_traitsIcE6lengthEPKc(50279) | 0);
  i11 = i3 + 4 | 0;
  i14 = i3 + 12 | 0;
  i15 = i3 + 40 | 0;
  i16 = i3 + 32 | 0;
  i17 = i6 + 11 | 0;
  i18 = i6 + 4 | 0;
  i19 = i5 + 11 | 0;
  i20 = i5 + 4 | 0;
  i21 = i1 + 1 | 0;
  while (1) {
   if ((HEAP8[i21 >> 0] | 0) == 69) break;
   if (HEAP8[i9 >> 0] | 0) {
    HEAP32[i7 >> 2] = HEAP32[i14 >> 2];
    i22 = HEAP32[i10 >> 2] | 0;
    if (i22 >>> 0 < (HEAP32[i15 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2IS4_EERKNS1_IT_Lm4096EEE(i5, i7);
     HEAP32[i22 >> 2] = 0;
     HEAP32[i22 + 4 >> 2] = 0;
     HEAP32[i22 + 8 >> 2] = 0;
     HEAP32[i22 + 12 >> 2] = HEAP32[i5 >> 2];
     HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i16, i7);
   }
   i22 = ((HEAP32[i11 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
   i23 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_(i21, i2, i3) | 0;
   i24 = ((HEAP32[i11 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
   if (HEAP8[i9 >> 0] | 0) {
    i25 = HEAP32[i10 >> 2] | 0;
    i26 = 0;
    while (1) {
     if ((i26 | 0) == -1) break;
     i27 = i26 + -1 | 0;
     __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i25 + (i27 << 4) | 0);
     i26 = i27;
    }
    HEAP32[i10 >> 2] = i25 + -16;
   }
   if ((i23 | 0) == (i21 | 0) | (i23 | 0) == (i2 | 0)) {
    i28 = 53;
    break;
   }
   L29 : do if (HEAP8[i9 >> 0] | 0) {
    i26 = HEAP32[i10 >> 2] | 0;
    i27 = HEAP32[i14 >> 2] | 0;
    HEAP32[i5 >> 2] = i27;
    i29 = i26 + -12 | 0;
    i30 = HEAP32[i29 >> 2] | 0;
    if (i30 >>> 0 < (HEAP32[i26 + -8 >> 2] | 0) >>> 0) {
     HEAP32[i30 >> 2] = 0;
     HEAP32[i30 + 4 >> 2] = 0;
     HEAP32[i30 + 8 >> 2] = 0;
     HEAP32[i30 + 12 >> 2] = i27;
     HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i26 + -16 | 0, i5);
    i26 = i22;
    while (1) {
     if (i26 >>> 0 >= i24 >>> 0) break L29;
     i29 = HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0;
     i27 = (HEAP32[i3 >> 2] | 0) + (i26 * 24 | 0) | 0;
     i30 = i29 + -12 | 0;
     i31 = HEAP32[i30 >> 2] | 0;
     if ((i31 | 0) == (HEAP32[i29 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i29 + -16 | 0, i27); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i31, i27);
      HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + 24;
     }
     i26 = i26 + 1 | 0;
    }
   } while (0);
   i25 = i22;
   while (1) {
    if (i25 >>> 0 >= i24 >>> 0) break;
    i26 = HEAP8[i17 >> 0] | 0;
    if ((i26 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i26 & 255) >>> 0 > 1) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50467) | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, (HEAP32[i3 >> 2] | 0) + (i25 * 24 | 0) | 0);
    i26 = HEAP8[i19 >> 0] | 0;
    i30 = i26 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i6, i30 ? HEAP32[i5 >> 2] | 0 : i5, i30 ? HEAP32[i20 >> 2] | 0 : i26 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i25 = i25 + 1 | 0;
   }
   i25 = i24;
   while (1) {
    if ((i25 | 0) == (i22 | 0)) break;
    i26 = HEAP32[i11 >> 2] | 0;
    i30 = 0;
    while (1) {
     if ((i30 | 0) == -1) break;
     i27 = i30 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i26 + (i27 * 24 | 0) | 0);
     i30 = i27;
    }
    HEAP32[i11 >> 2] = i26 + -24;
    i25 = i25 + -1 | 0;
   }
   i21 = i23;
  }
  if ((i28 | 0) == 53) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   i32 = i1;
   break;
  }
  i20 = i21 + 1 | 0;
  i19 = HEAP8[i17 >> 0] | 0;
  i10 = i19 << 24 >> 24 < 0;
  if ((HEAP8[(i10 ? HEAP32[i6 >> 2] | 0 : i6) + (i10 ? HEAP32[i18 >> 2] | 0 : i19 & 255) + -1 >> 0] | 0) == 62) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 51658) | 0; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50281) | 0;
  HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i19 = 0;
  while (1) {
   if ((i19 | 0) == 3) break;
   HEAP32[i6 + (i19 << 2) >> 2] = 0;
   i19 = i19 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i8);
  i19 = HEAP32[i11 >> 2] | 0;
  if (i19 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i19, i5);
   HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  i32 = i20;
 } else i32 = i1; while (0);
 STACKTOP = i4;
 return i32 | 0;
}

function _jpeg_idct_2x2(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i7 = i6;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i1 = HEAP32[i2 + 80 >> 2] | 0;
 i2 = HEAP16[i3 + 16 >> 1] | 0;
 i9 = HEAP16[i3 + 48 >> 1] | 0;
 if (!((i2 | i9) << 16 >> 16)) if ((HEAP16[i3 + 80 >> 1] | 0) == 0 ? (HEAP16[i3 + 112 >> 1] | 0) == 0 : 0) {
  i10 = Math_imul(HEAP16[i3 >> 1] << 2, HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i7 >> 2] = i10;
  i11 = i10;
 } else {
  i12 = 0;
  i13 = 5;
 } else {
  i12 = i9;
  i13 = 5;
 }
 if ((i13 | 0) == 5) {
  i9 = Math_imul(HEAP16[i3 >> 1] << 15, HEAP32[i1 >> 2] | 0) | 0;
  i10 = Math_imul(Math_imul(HEAP16[i3 + 112 >> 1] | 0, -5906) | 0, HEAP32[i1 + 224 >> 2] | 0) | 0;
  i14 = (Math_imul((HEAP16[i3 + 80 >> 1] | 0) * 6967 | 0, HEAP32[i1 + 160 >> 2] | 0) | 0) + i10 | 0;
  i10 = i14 + (Math_imul(Math_imul(i12 << 16 >> 16, -10426) | 0, HEAP32[i1 + 96 >> 2] | 0) | 0) | 0;
  i12 = i10 + (Math_imul((i2 << 16 >> 16) * 29692 | 0, HEAP32[i1 + 32 >> 2] | 0) | 0) | 0;
  i2 = i9 | 4096;
  HEAP32[i7 >> 2] = i2 + i12 >> 13;
  i11 = i2 - i12 >> 13;
 }
 HEAP32[i7 + 32 >> 2] = i11;
 i11 = i3 + 2 | 0;
 i12 = i1 + 4 | 0;
 i2 = i7 + 4 | 0;
 i9 = HEAP16[i3 + 18 >> 1] | 0;
 i10 = HEAP16[i3 + 50 >> 1] | 0;
 if (!((i9 | i10) << 16 >> 16)) if ((HEAP16[i3 + 82 >> 1] | 0) == 0 ? (HEAP16[i3 + 114 >> 1] | 0) == 0 : 0) {
  i14 = Math_imul(HEAP16[i11 >> 1] << 2, HEAP32[i12 >> 2] | 0) | 0;
  HEAP32[i2 >> 2] = i14;
  i15 = i14;
 } else {
  i16 = 0;
  i13 = 19;
 } else {
  i16 = i10;
  i13 = 19;
 }
 if ((i13 | 0) == 19) {
  i10 = Math_imul(HEAP16[i11 >> 1] << 15, HEAP32[i12 >> 2] | 0) | 0;
  i12 = Math_imul(Math_imul(HEAP16[i3 + 114 >> 1] | 0, -5906) | 0, HEAP32[i1 + 228 >> 2] | 0) | 0;
  i11 = (Math_imul((HEAP16[i3 + 82 >> 1] | 0) * 6967 | 0, HEAP32[i1 + 164 >> 2] | 0) | 0) + i12 | 0;
  i12 = i11 + (Math_imul(Math_imul(i16 << 16 >> 16, -10426) | 0, HEAP32[i1 + 100 >> 2] | 0) | 0) | 0;
  i16 = i12 + (Math_imul((i9 << 16 >> 16) * 29692 | 0, HEAP32[i1 + 36 >> 2] | 0) | 0) | 0;
  i9 = i10 | 4096;
  HEAP32[i2 >> 2] = i9 + i16 >> 13;
  i15 = i9 - i16 >> 13;
 }
 HEAP32[i7 + 36 >> 2] = i15;
 i15 = i3 + 6 | 0;
 i16 = i1 + 12 | 0;
 i9 = i7 + 12 | 0;
 i10 = HEAP16[i3 + 22 >> 1] | 0;
 i12 = HEAP16[i3 + 54 >> 1] | 0;
 if (!((i10 | i12) << 16 >> 16)) if ((HEAP16[i3 + 86 >> 1] | 0) == 0 ? (HEAP16[i3 + 118 >> 1] | 0) == 0 : 0) {
  i11 = Math_imul(HEAP16[i15 >> 1] << 2, HEAP32[i16 >> 2] | 0) | 0;
  HEAP32[i9 >> 2] = i11;
  i17 = i11;
 } else {
  i18 = 0;
  i13 = 24;
 } else {
  i18 = i12;
  i13 = 24;
 }
 if ((i13 | 0) == 24) {
  i12 = Math_imul(HEAP16[i15 >> 1] << 15, HEAP32[i16 >> 2] | 0) | 0;
  i16 = Math_imul(Math_imul(HEAP16[i3 + 118 >> 1] | 0, -5906) | 0, HEAP32[i1 + 236 >> 2] | 0) | 0;
  i15 = (Math_imul((HEAP16[i3 + 86 >> 1] | 0) * 6967 | 0, HEAP32[i1 + 172 >> 2] | 0) | 0) + i16 | 0;
  i16 = i15 + (Math_imul(Math_imul(i18 << 16 >> 16, -10426) | 0, HEAP32[i1 + 108 >> 2] | 0) | 0) | 0;
  i18 = i16 + (Math_imul((i10 << 16 >> 16) * 29692 | 0, HEAP32[i1 + 44 >> 2] | 0) | 0) | 0;
  i10 = i12 | 4096;
  HEAP32[i9 >> 2] = i10 + i18 >> 13;
  i17 = i10 - i18 >> 13;
 }
 HEAP32[i7 + 44 >> 2] = i17;
 i17 = i3 + 10 | 0;
 i18 = i1 + 20 | 0;
 i10 = i7 + 20 | 0;
 i9 = HEAP16[i3 + 26 >> 1] | 0;
 i12 = i3 + 58 | 0;
 if (((i9 << 16 >> 16 == 0 ? (HEAP16[i12 >> 1] | 0) == 0 : 0) ? (HEAP16[i3 + 90 >> 1] | 0) == 0 : 0) ? (HEAP16[i3 + 122 >> 1] | 0) == 0 : 0) {
  i16 = Math_imul(HEAP16[i17 >> 1] << 2, HEAP32[i18 >> 2] | 0) | 0;
  HEAP32[i10 >> 2] = i16;
  i19 = i16;
 } else {
  i16 = Math_imul(HEAP16[i17 >> 1] << 15, HEAP32[i18 >> 2] | 0) | 0;
  i18 = Math_imul(Math_imul(HEAP16[i3 + 122 >> 1] | 0, -5906) | 0, HEAP32[i1 + 244 >> 2] | 0) | 0;
  i17 = (Math_imul((HEAP16[i3 + 90 >> 1] | 0) * 6967 | 0, HEAP32[i1 + 180 >> 2] | 0) | 0) + i18 | 0;
  i18 = i17 + (Math_imul(Math_imul(HEAP16[i12 >> 1] | 0, -10426) | 0, HEAP32[i1 + 116 >> 2] | 0) | 0) | 0;
  i12 = i18 + (Math_imul((i9 << 16 >> 16) * 29692 | 0, HEAP32[i1 + 52 >> 2] | 0) | 0) | 0;
  i9 = i16 | 4096;
  HEAP32[i10 >> 2] = i9 + i12 >> 13;
  i19 = i9 - i12 >> 13;
 }
 HEAP32[i7 + 52 >> 2] = i19;
 i19 = i3 + 14 | 0;
 i12 = i1 + 28 | 0;
 i9 = i7 + 28 | 0;
 i10 = HEAP16[i3 + 30 >> 1] | 0;
 i16 = i3 + 62 | 0;
 if (((i10 << 16 >> 16 == 0 ? (HEAP16[i16 >> 1] | 0) == 0 : 0) ? (HEAP16[i3 + 94 >> 1] | 0) == 0 : 0) ? (HEAP16[i3 + 126 >> 1] | 0) == 0 : 0) {
  i18 = Math_imul(HEAP16[i19 >> 1] << 2, HEAP32[i12 >> 2] | 0) | 0;
  HEAP32[i9 >> 2] = i18;
  i20 = i18;
 } else {
  i18 = Math_imul(HEAP16[i19 >> 1] << 15, HEAP32[i12 >> 2] | 0) | 0;
  i12 = Math_imul(Math_imul(HEAP16[i3 + 126 >> 1] | 0, -5906) | 0, HEAP32[i1 + 252 >> 2] | 0) | 0;
  i19 = (Math_imul((HEAP16[i3 + 94 >> 1] | 0) * 6967 | 0, HEAP32[i1 + 188 >> 2] | 0) | 0) + i12 | 0;
  i12 = i19 + (Math_imul(Math_imul(HEAP16[i16 >> 1] | 0, -10426) | 0, HEAP32[i1 + 124 >> 2] | 0) | 0) | 0;
  i16 = i12 + (Math_imul((i10 << 16 >> 16) * 29692 | 0, HEAP32[i1 + 60 >> 2] | 0) | 0) | 0;
  i1 = i18 | 4096;
  HEAP32[i9 >> 2] = i1 + i16 >> 13;
  i20 = i1 - i16 >> 13;
 }
 HEAP32[i7 + 60 >> 2] = i20;
 i20 = i8 + 128 | 0;
 i8 = (HEAP32[i4 >> 2] | 0) + i5 | 0;
 i16 = HEAP32[i2 >> 2] | 0;
 i2 = HEAP32[i7 + 12 >> 2] | 0;
 if (!(i16 | i2)) if ((HEAP32[i7 + 20 >> 2] | 0) == 0 ? (HEAP32[i7 + 28 >> 2] | 0) == 0 : 0) {
  i1 = HEAP8[i20 + (((HEAP32[i7 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
  HEAP8[i8 >> 0] = i1;
  i21 = i1;
 } else {
  i22 = 0;
  i13 = 9;
 } else {
  i22 = i2;
  i13 = 9;
 }
 if ((i13 | 0) == 9) {
  i13 = Math_imul(HEAP32[i7 + 28 >> 2] | 0, -5906) | 0;
  i2 = i13 + (i16 * 29692 | 0) + ((HEAP32[i7 + 20 >> 2] | 0) * 6967 | 0) + (Math_imul(i22, -10426) | 0) | 0;
  i22 = (HEAP32[i7 >> 2] << 15) + 524288 | 0;
  HEAP8[i8 >> 0] = HEAP8[i20 + ((i22 + i2 | 0) >>> 20 & 1023) >> 0] | 0;
  i21 = HEAP8[i20 + ((i22 - i2 | 0) >>> 20 & 1023) >> 0] | 0;
 }
 HEAP8[i8 + 1 >> 0] = i21;
 i21 = i7 + 32 | 0;
 i8 = (HEAP32[i4 + 4 >> 2] | 0) + i5 | 0;
 i5 = HEAP32[i7 + 36 >> 2] | 0;
 i4 = HEAP32[i7 + 44 >> 2] | 0;
 if (!(i5 | i4)) if ((HEAP32[i7 + 52 >> 2] | 0) == 0 ? (HEAP32[i7 + 60 >> 2] | 0) == 0 : 0) {
  i2 = HEAP8[i20 + (((HEAP32[i21 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
  HEAP8[i8 >> 0] = i2;
  i23 = i2;
  i24 = i8 + 1 | 0;
  HEAP8[i24 >> 0] = i23;
  STACKTOP = i6;
  return;
 } else i25 = 0; else i25 = i4;
 i4 = Math_imul(HEAP32[i7 + 60 >> 2] | 0, -5906) | 0;
 i2 = i4 + (i5 * 29692 | 0) + ((HEAP32[i7 + 52 >> 2] | 0) * 6967 | 0) + (Math_imul(i25, -10426) | 0) | 0;
 i25 = (HEAP32[i21 >> 2] << 15) + 524288 | 0;
 HEAP8[i8 >> 0] = HEAP8[i20 + ((i25 + i2 | 0) >>> 20 & 1023) >> 0] | 0;
 i23 = HEAP8[i20 + ((i25 - i2 | 0) >>> 20 & 1023) >> 0] | 0;
 i24 = i8 + 1 | 0;
 HEAP8[i24 >> 0] = i23;
 STACKTOP = i6;
 return;
}
function __ZN6vision21ComputePolarGradientsEPfPKfmm(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, d11 = 0.0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, d42 = 0.0, i43 = 0, d44 = 0.0, d45 = 0.0, d46 = 0.0, d47 = 0.0, d48 = 0.0, d49 = 0.0, d50 = 0.0, d51 = 0.0, i52 = 0, d53 = 0.0, d54 = 0.0, d55 = 0.0, d56 = 0.0;
 i5 = i3 + -1 | 0;
 i6 = i4 + -1 | 0;
 i7 = i2 + (i3 << 2) | 0;
 i8 = i2 + 4 | 0;
 d9 = +HEAPF32[i2 >> 2];
 d10 = +HEAPF32[i8 >> 2] - d9;
 d11 = +HEAPF32[i7 >> 2] - d9;
 d9 = +Math_atan2(+d11, +d10) + 3.141592653589793;
 HEAPF32[i1 >> 2] = d9;
 d9 = +Math_sqrt(+(d10 * d10 + d11 * d11));
 HEAPF32[i1 + 4 >> 2] = d9;
 i12 = i1 + 8 | 0;
 i13 = i7 + 4 | 0;
 i14 = i5 >>> 0 > 1;
 if (i14) {
  i15 = i3 << 1;
  i16 = i1 + (i15 + -4 << 2) | 0;
  i17 = i15 + -2 | 0;
  i18 = i15 + -1 | 0;
  i15 = 1;
  i19 = i13;
  i20 = i8;
  i21 = i12;
  i22 = i1;
  while (1) {
   i23 = i20;
   i20 = i20 + 4 | 0;
   d9 = +HEAPF32[i20 >> 2] - +HEAPF32[i23 + -4 >> 2];
   d11 = +HEAPF32[i19 >> 2] - +HEAPF32[i23 >> 2];
   d10 = +Math_atan2(+d11, +d9) + 3.141592653589793;
   HEAPF32[i21 >> 2] = d10;
   d10 = +Math_sqrt(+(d9 * d9 + d11 * d11));
   HEAPF32[i22 + 12 >> 2] = d10;
   i15 = i15 + 1 | 0;
   if ((i15 | 0) == (i5 | 0)) break; else {
    i23 = i21;
    i19 = i19 + 4 | 0;
    i21 = i21 + 8 | 0;
    i22 = i23;
   }
  }
  i24 = i2 + (i18 << 2) | 0;
  i25 = i2 + (i5 << 2) | 0;
  i26 = i1 + (i17 << 2) | 0;
  i27 = i16;
 } else {
  i24 = i13;
  i25 = i8;
  i26 = i12;
  i27 = i1;
 }
 d10 = +HEAPF32[i25 >> 2];
 d11 = d10 - +HEAPF32[i25 + -4 >> 2];
 d9 = +HEAPF32[i24 >> 2] - d10;
 d10 = +Math_atan2(+d9, +d11) + 3.141592653589793;
 HEAPF32[i26 >> 2] = d10;
 d10 = +Math_sqrt(+(d11 * d11 + d9 * d9));
 HEAPF32[i27 + 12 >> 2] = d10;
 i27 = i7 + (i3 << 2) | 0;
 i24 = i26 + 8 | 0;
 do if (i6 >>> 0 > 1) {
  if (!i14) {
   i25 = i4 << 2;
   i1 = i25 + -8 | 0;
   i12 = i25 + -6 | 0;
   i25 = 1;
   i8 = i26;
   i13 = i2;
   i16 = i7;
   i17 = i24;
   i18 = i27;
   while (1) {
    i22 = i16 + 4 | 0;
    d10 = +HEAPF32[i22 >> 2] - +HEAPF32[i16 >> 2];
    d9 = +HEAPF32[i18 >> 2] - +HEAPF32[i13 >> 2];
    d11 = +Math_atan2(+d9, +d10) + 3.141592653589793;
    HEAPF32[i17 >> 2] = d11;
    d11 = +Math_sqrt(+(d10 * d10 + d9 * d9));
    i21 = i8;
    i8 = i8 + 16 | 0;
    HEAPF32[i21 + 12 >> 2] = d11;
    d11 = +HEAPF32[i22 >> 2] - +HEAPF32[i16 >> 2];
    d9 = +HEAPF32[i18 + 4 >> 2] - +HEAPF32[i13 + 4 >> 2];
    d10 = +Math_atan2(+d9, +d11) + 3.141592653589793;
    HEAPF32[i8 >> 2] = d10;
    d10 = +Math_sqrt(+(d11 * d11 + d9 * d9));
    HEAPF32[i21 + 20 >> 2] = d10;
    i25 = i25 + 1 | 0;
    i17 = i21 + 24 | 0;
    if ((i25 | 0) == (i6 | 0)) break; else {
     i13 = i13 + 8 | 0;
     i16 = i16 + 8 | 0;
     i18 = i18 + 8 | 0;
    }
   }
   i28 = i26 + (i1 << 2) | 0;
   i29 = i26 + (i12 << 2) | 0;
   break;
  }
  i18 = i3 + -2 | 0;
  i16 = i3 << 1;
  i13 = i16 + -2 | 0;
  i25 = Math_imul((i4 << 3) + -16 | 0, i3) | 0;
  i17 = i24 + i25 | 0;
  i8 = i26 + i25 | 0;
  i25 = 1;
  i21 = i26;
  i22 = i2;
  i19 = i7;
  i15 = i24;
  i20 = i27;
  while (1) {
   i23 = i19 + 4 | 0;
   d10 = +HEAPF32[i23 >> 2] - +HEAPF32[i19 >> 2];
   d9 = +HEAPF32[i20 >> 2] - +HEAPF32[i22 >> 2];
   d11 = +Math_atan2(+d9, +d10) + 3.141592653589793;
   HEAPF32[i15 >> 2] = d11;
   d11 = +Math_sqrt(+(d10 * d10 + d9 * d9));
   HEAPF32[i21 + 12 >> 2] = d11;
   i30 = i19 + (i18 << 2) | 0;
   i31 = i19 + (i5 << 2) | 0;
   i32 = i20 + (i5 << 2) | 0;
   i33 = 1;
   i34 = i22;
   i35 = i20;
   i36 = i23;
   i23 = i21 + 16 | 0;
   while (1) {
    i35 = i35 + 4 | 0;
    i34 = i34 + 4 | 0;
    i37 = i36;
    i36 = i36 + 4 | 0;
    d11 = +HEAPF32[i36 >> 2] - +HEAPF32[i37 + -4 >> 2];
    d9 = +HEAPF32[i35 >> 2] - +HEAPF32[i34 >> 2];
    d10 = +Math_atan2(+d9, +d11) + 3.141592653589793;
    HEAPF32[i23 >> 2] = d10;
    d10 = +Math_sqrt(+(d11 * d11 + d9 * d9));
    HEAPF32[i23 + 4 >> 2] = d10;
    i33 = i33 + 1 | 0;
    if ((i33 | 0) == (i5 | 0)) break; else i23 = i23 + 8 | 0;
   }
   i23 = i21 + (i13 << 2) | 0;
   i21 = i21 + (i16 << 2) | 0;
   d10 = +HEAPF32[i31 >> 2] - +HEAPF32[i30 >> 2];
   d9 = +HEAPF32[i32 >> 2] - +HEAPF32[i22 + (i5 << 2) >> 2];
   d11 = +Math_atan2(+d9, +d10) + 3.141592653589793;
   HEAPF32[i21 >> 2] = d11;
   d11 = +Math_sqrt(+(d10 * d10 + d9 * d9));
   HEAPF32[i23 + 12 >> 2] = d11;
   i25 = i25 + 1 | 0;
   if ((i25 | 0) == (i6 | 0)) break; else {
    i22 = i22 + (i3 << 2) | 0;
    i19 = i19 + (i3 << 2) | 0;
    i15 = i23 + 16 | 0;
    i20 = i20 + (i3 << 2) | 0;
   }
  }
  i28 = i8;
  i29 = i17;
 } else {
  i28 = i26;
  i29 = i24;
 } while (0);
 i24 = i2 + ((Math_imul(i6, i3) | 0) << 2) | 0;
 i6 = i24 + (0 - i3 << 2) | 0;
 i26 = i24 + 4 | 0;
 d11 = +HEAPF32[i24 >> 2];
 d9 = +HEAPF32[i26 >> 2] - d11;
 d10 = d11 - +HEAPF32[i6 >> 2];
 d11 = +Math_atan2(+d10, +d9) + 3.141592653589793;
 HEAPF32[i29 >> 2] = d11;
 d11 = +Math_sqrt(+(d9 * d9 + d10 * d10));
 HEAPF32[i28 + 12 >> 2] = d11;
 i28 = i29 + 8 | 0;
 i24 = i6 + 4 | 0;
 if (!i14) {
  i38 = i29;
  i39 = i24;
  i40 = i26;
  i41 = i28;
  d42 = +HEAPF32[i40 >> 2];
  i43 = i40 + -4 | 0;
  d44 = +HEAPF32[i43 >> 2];
  d45 = d42 - d44;
  d46 = +HEAPF32[i39 >> 2];
  d47 = d42 - d46;
  d48 = +Math_atan2(+d47, +d45);
  d49 = d48;
  d50 = d49 + 3.141592653589793;
  d51 = d50;
  i52 = i38 + 12 | 0;
  HEAPF32[i41 >> 2] = d51;
  d53 = d45 * d45;
  d54 = d47 * d47;
  d55 = d53 + d54;
  d56 = +Math_sqrt(+d55);
  HEAPF32[i52 >> 2] = d56;
  return;
 }
 i14 = i3 << 1;
 i6 = i14 + -4 | 0;
 i27 = (Math_imul(i4, i3) | 0) + -1 | 0;
 i7 = i14 + -2 | 0;
 i14 = i2 + -4 + (Math_imul((i4 << 2) + -4 | 0, i3) | 0) | 0;
 i3 = 1;
 i4 = i29;
 i20 = i24;
 i24 = i28;
 i28 = i26;
 while (1) {
  i26 = i28;
  i28 = i28 + 4 | 0;
  d11 = +HEAPF32[i28 >> 2] - +HEAPF32[i26 + -4 >> 2];
  d10 = +HEAPF32[i26 >> 2] - +HEAPF32[i20 >> 2];
  d9 = +Math_atan2(+d10, +d11) + 3.141592653589793;
  HEAPF32[i24 >> 2] = d9;
  d9 = +Math_sqrt(+(d11 * d11 + d10 * d10));
  HEAPF32[i4 + 12 >> 2] = d9;
  i3 = i3 + 1 | 0;
  if ((i3 | 0) == (i5 | 0)) break; else {
   i26 = i24;
   i20 = i20 + 4 | 0;
   i24 = i24 + 8 | 0;
   i4 = i26;
  }
 }
 i38 = i29 + (i6 << 2) | 0;
 i39 = i14;
 i40 = i2 + (i27 << 2) | 0;
 i41 = i29 + (i7 << 2) | 0;
 d42 = +HEAPF32[i40 >> 2];
 i43 = i40 + -4 | 0;
 d44 = +HEAPF32[i43 >> 2];
 d45 = d42 - d44;
 d46 = +HEAPF32[i39 >> 2];
 d47 = d42 - d46;
 d48 = +Math_atan2(+d47, +d45);
 d49 = d48;
 d50 = d49 + 3.141592653589793;
 d51 = d50;
 i52 = i38 + 12 | 0;
 HEAPF32[i41 >> 2] = d51;
 d53 = d45 * d45;
 d54 = d47 * d47;
 d55 = d53 + d54;
 d56 = +Math_sqrt(+d55);
 HEAPF32[i52 >> 2] = d56;
 return;
}

function _arPattLoadFromBuffer(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, d41 = 0.0, i42 = 0, i43 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 24 | 0;
 i5 = i3 + 16 | 0;
 if (!i1) {
  _arLog(0, 3, 17992, i3);
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 if (!i2) {
  _arLog(0, 3, 18017, i3 + 8 | 0);
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i7 = HEAP32[i1 + 4 >> 2] | 0;
 L9 : do if ((i7 | 0) > 0) {
  i8 = HEAP32[i1 + 8 >> 2] | 0;
  i9 = 0;
  while (1) {
   if (!(HEAP32[i8 + (i9 << 2) >> 2] | 0)) {
    i10 = i9;
    break L9;
   }
   i11 = i9 + 1 | 0;
   if ((i11 | 0) < (i7 | 0)) i9 = i11; else {
    i10 = i11;
    break;
   }
  }
 } else i10 = 0; while (0);
 if ((i10 | 0) == (i7 | 0)) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i7 = ___strdup(i2) | 0;
 if (!i7) {
  _arLog(0, 3, 18062, i5);
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i5 = _strtok(i7, 18085) | 0;
 i2 = i1 + 28 | 0;
 i9 = i1 + 12 | 0;
 i8 = i10 << 2;
 i11 = i1 + 20 | 0;
 i12 = i1 + 16 | 0;
 i13 = i1 + 24 | 0;
 i14 = i5;
 i5 = 0;
 i15 = HEAP32[i2 >> 2] | 0;
 L22 : while (1) {
  i16 = i5 + i8 | 0;
  i17 = 0;
  i18 = i14;
  i19 = i15;
  i20 = 0;
  while (1) {
   if ((i19 | 0) > 0) {
    i21 = 0;
    i22 = i17;
    i23 = i18;
    i24 = i19;
    while (1) {
     if ((i24 | 0) > 0) switch (i20 & 2147483647 | 0) {
     case 0:
      {
       i25 = 0;
       i26 = i22;
       i27 = i23;
       while (1) {
        if (!i27) {
         i28 = 26;
         break L22;
        }
        i29 = _atoi(i27) | 0;
        i30 = _strtok(0, 18085) | 0;
        i31 = 255 - i29 | 0;
        i29 = (HEAP32[(HEAP32[i9 >> 2] | 0) + (i16 << 2) >> 2] | 0) + ((((Math_imul(HEAP32[i2 >> 2] | 0, i21) | 0) + i25 | 0) * 3 | 0) + i20 << 2) | 0;
        HEAP32[i29 >> 2] = i31;
        i29 = (HEAP32[(HEAP32[i11 >> 2] | 0) + (i16 << 2) >> 2] | 0) + ((Math_imul(HEAP32[i2 >> 2] | 0, i21) | 0) + i25 << 2) | 0;
        HEAP32[i29 >> 2] = i31;
        i29 = i31 + i26 | 0;
        i25 = i25 + 1 | 0;
        i31 = HEAP32[i2 >> 2] | 0;
        if ((i25 | 0) >= (i31 | 0)) {
         i32 = i29;
         i33 = i30;
         i34 = i31;
         break;
        } else {
         i26 = i29;
         i27 = i30;
        }
       }
       break;
      }
     case 2:
      {
       i27 = 0;
       i26 = i22;
       i25 = i23;
       while (1) {
        if (!i25) {
         i28 = 26;
         break L22;
        }
        i30 = _atoi(i25) | 0;
        i29 = _strtok(0, 18085) | 0;
        i31 = 255 - i30 | 0;
        i30 = (HEAP32[(HEAP32[i9 >> 2] | 0) + (i16 << 2) >> 2] | 0) + ((((Math_imul(HEAP32[i2 >> 2] | 0, i21) | 0) + i27 | 0) * 3 | 0) + i20 << 2) | 0;
        HEAP32[i30 >> 2] = i31;
        i30 = HEAP32[(HEAP32[i11 >> 2] | 0) + (i16 << 2) >> 2] | 0;
        i35 = i30 + ((Math_imul(HEAP32[i2 >> 2] | 0, i21) | 0) + i27 << 2) | 0;
        HEAP32[i35 >> 2] = (HEAP32[i35 >> 2] | 0) + i31;
        i35 = i30 + ((Math_imul(HEAP32[i2 >> 2] | 0, i21) | 0) + i27 << 2) | 0;
        HEAP32[i35 >> 2] = (HEAP32[i35 >> 2] | 0) / 3 | 0;
        i35 = i31 + i26 | 0;
        i27 = i27 + 1 | 0;
        i31 = HEAP32[i2 >> 2] | 0;
        if ((i27 | 0) >= (i31 | 0)) {
         i32 = i35;
         i33 = i29;
         i34 = i31;
         break;
        } else {
         i26 = i35;
         i25 = i29;
        }
       }
       break;
      }
     default:
      {
       i25 = 0;
       i26 = i22;
       i27 = i23;
       while (1) {
        if (!i27) {
         i28 = 26;
         break L22;
        }
        i29 = _atoi(i27) | 0;
        i35 = _strtok(0, 18085) | 0;
        i31 = 255 - i29 | 0;
        i29 = (HEAP32[(HEAP32[i9 >> 2] | 0) + (i16 << 2) >> 2] | 0) + ((((Math_imul(HEAP32[i2 >> 2] | 0, i21) | 0) + i25 | 0) * 3 | 0) + i20 << 2) | 0;
        HEAP32[i29 >> 2] = i31;
        i29 = (HEAP32[(HEAP32[i11 >> 2] | 0) + (i16 << 2) >> 2] | 0) + ((Math_imul(HEAP32[i2 >> 2] | 0, i21) | 0) + i25 << 2) | 0;
        HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + i31;
        i29 = i31 + i26 | 0;
        i25 = i25 + 1 | 0;
        i31 = HEAP32[i2 >> 2] | 0;
        if ((i25 | 0) >= (i31 | 0)) {
         i32 = i29;
         i33 = i35;
         i34 = i31;
         break;
        } else {
         i26 = i29;
         i27 = i35;
        }
       }
      }
     } else {
      i32 = i22;
      i33 = i23;
      i34 = i24;
     }
     i21 = i21 + 1 | 0;
     if ((i21 | 0) >= (i34 | 0)) {
      i36 = i32;
      i37 = i33;
      i38 = i34;
      break;
     } else {
      i22 = i32;
      i23 = i33;
      i24 = i34;
     }
    }
   } else {
    i36 = i17;
    i37 = i18;
    i38 = i19;
   }
   i20 = i20 + 1 | 0;
   if (i20 >>> 0 >= 3) break; else {
    i17 = i36;
    i18 = i37;
    i19 = i38;
   }
  }
  i19 = Math_imul(i38 * 3 | 0, i38) | 0;
  i18 = (i36 | 0) / (i19 | 0) | 0;
  if (!i19) {
   i39 = 0;
   i40 = i38;
  } else {
   i19 = HEAP32[(HEAP32[i9 >> 2] | 0) + (i16 << 2) >> 2] | 0;
   i17 = 0;
   i20 = 0;
   while (1) {
    i24 = i19 + (i20 << 2) | 0;
    i23 = (HEAP32[i24 >> 2] | 0) - i18 | 0;
    HEAP32[i24 >> 2] = i23;
    i24 = (Math_imul(i23, i23) | 0) + i17 | 0;
    i20 = i20 + 1 | 0;
    i23 = HEAP32[i2 >> 2] | 0;
    if (i20 >>> 0 >= (Math_imul(i23 * 3 | 0, i23) | 0) >>> 0) {
     i39 = i24;
     i40 = i23;
     break;
    } else i17 = i24;
   }
  }
  d41 = +Math_sqrt(+(+(i39 | 0)));
  HEAPF64[(HEAP32[i12 >> 2] | 0) + (i16 << 3) >> 3] = d41 == 0.0 ? 1.0e-07 : d41;
  if (!(Math_imul(i40, i40) | 0)) {
   i42 = 0;
   i43 = i40;
  } else {
   i17 = HEAP32[(HEAP32[i11 >> 2] | 0) + (i16 << 2) >> 2] | 0;
   i20 = 0;
   i19 = 0;
   while (1) {
    i24 = i17 + (i19 << 2) | 0;
    i23 = (HEAP32[i24 >> 2] | 0) - i18 | 0;
    HEAP32[i24 >> 2] = i23;
    i24 = (Math_imul(i23, i23) | 0) + i20 | 0;
    i19 = i19 + 1 | 0;
    i23 = HEAP32[i2 >> 2] | 0;
    if (i19 >>> 0 >= (Math_imul(i23, i23) | 0) >>> 0) {
     i42 = i24;
     i43 = i23;
     break;
    } else i20 = i24;
   }
  }
  d41 = +Math_sqrt(+(+(i42 | 0)));
  HEAPF64[(HEAP32[i13 >> 2] | 0) + (i16 << 3) >> 3] = d41 == 0.0 ? 1.0e-07 : d41;
  i5 = i5 + 1 | 0;
  if (i5 >>> 0 >= 4) {
   i28 = 37;
   break;
  } else {
   i14 = i37;
   i15 = i43;
  }
 }
 if ((i28 | 0) == 26) {
  _arLog(0, 3, 18090, i4);
  _free(i7);
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 } else if ((i28 | 0) == 37) {
  _free(i7);
  HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + (i10 << 2) >> 2] = 1;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
  i6 = i10;
  STACKTOP = i3;
  return i6 | 0;
 }
 return 0;
}

function _ar2ReadImageSet(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i3 = i2 + 112 | 0;
 i4 = i2 + 104 | 0;
 i5 = i2 + 96 | 0;
 i6 = i2 + 88 | 0;
 i7 = i2 + 80 | 0;
 i8 = i2 + 72 | 0;
 i9 = i2 + 64 | 0;
 i10 = i2 + 56 | 0;
 i11 = i2 + 48 | 0;
 i12 = i2 + 40 | 0;
 i13 = i2 + 32 | 0;
 i14 = i2 + 16 | 0;
 i15 = i2 + 8 | 0;
 i16 = i2 + 120 | 0;
 i17 = _malloc((_strlen(i1) | 0) + 6 | 0) | 0;
 if (!i17) {
  _arLog(0, 3, 20510, i2);
  _exit(1);
 }
 HEAP32[i15 >> 2] = i1;
 HEAP32[i15 + 4 >> 2] = 19418;
 _sprintf(i17, 19413, i15) | 0;
 i15 = _fopen(i17, 20119) | 0;
 _free(i17);
 if (!i15) {
  HEAP32[i14 >> 2] = i1;
  HEAP32[i14 + 4 >> 2] = 19418;
  _arLog(0, 3, 19424, i14);
  i18 = 0;
  STACKTOP = i2;
  return i18 | 0;
 }
 i14 = _malloc(8) | 0;
 if (!i14) {
  _arLog(0, 3, 20510, i2 + 24 | 0);
  _exit(1);
 }
 i17 = i14 + 4 | 0;
 L11 : do if ((_fread(i17, 4, 1, i15) | 0) == 1 ? (i19 = HEAP32[i17 >> 2] | 0, (i19 | 0) >= 1) : 0) {
  HEAP32[i12 >> 2] = i19;
  _arLog(0, 1, 19497, i12);
  i20 = i19 << 2;
  i21 = _malloc(i20) | 0;
  HEAP32[i14 >> 2] = i21;
  if (!i21) {
   _arLog(0, 3, 20510, i11);
   _exit(1);
  }
  i22 = _malloc(16) | 0;
  HEAP32[i21 >> 2] = i22;
  if (!i22) {
   _arLog(0, 3, 20510, i10);
   _exit(1);
  }
  i22 = _ar2ReadJpegImage2(i15) | 0;
  if (i22 | 0) {
   if ((HEAP32[i22 + 4 >> 2] | 0) != 1) {
    HEAP32[i3 >> 2] = i1;
    HEAP32[i3 + 4 >> 2] = 19418;
    _arLog(0, 2, 19527, i3);
    _free(HEAP32[i21 >> 2] | 0);
    _free(i21);
    _free(i14);
    _free(i22);
    _fclose(i15) | 0;
    i18 = 0;
    STACKTOP = i2;
    return i18 | 0;
   }
   i23 = HEAP32[i21 >> 2] | 0;
   HEAP32[i23 + 4 >> 2] = HEAP32[i22 + 8 >> 2];
   HEAP32[i23 + 8 >> 2] = HEAP32[i22 + 12 >> 2];
   HEAP32[i23 + 12 >> 2] = HEAP32[i22 + 16 >> 2];
   HEAP32[i23 >> 2] = HEAP32[i22 >> 2];
   _free(i22);
   _fseek(i15, 4 - i20 | 0, 2) | 0;
   L26 : do if ((i19 | 0) > 1) {
    i20 = 1;
    while (1) {
     if ((_fread(i16, 4, 1, i15) | 0) != 1) {
      i24 = 61;
      break;
     }
     i22 = _ar2GenImageLayer2(HEAP32[i21 >> 2] | 0, +HEAPF32[i16 >> 2]) | 0;
     HEAP32[i21 + (i20 << 2) >> 2] = i22;
     if (!i22) {
      i24 = 64;
      break;
     }
     i22 = i20 + 1 | 0;
     if ((i22 | 0) < (i19 | 0)) i20 = i22; else break L26;
    }
    if ((i24 | 0) == 61) {
     i22 = 0;
     do {
      i23 = i21 + (i22 << 2) | 0;
      _free(HEAP32[HEAP32[i23 >> 2] >> 2] | 0);
      _free(HEAP32[i23 >> 2] | 0);
      i22 = i22 + 1 | 0;
     } while (i22 >>> 0 < i20 >>> 0);
    } else if ((i24 | 0) == 64) {
     i22 = 0;
     do {
      i23 = i21 + (i22 << 2) | 0;
      _free(HEAP32[HEAP32[i23 >> 2] >> 2] | 0);
      _free(HEAP32[i23 >> 2] | 0);
      i22 = i22 + 1 | 0;
     } while (i22 >>> 0 < i20 >>> 0);
    }
    _free(i21);
    break L11;
   } while (0);
   _fclose(i15) | 0;
   i18 = i14;
   STACKTOP = i2;
   return i18 | 0;
  }
  HEAP32[i9 >> 2] = i1;
  HEAP32[i9 + 4 >> 2] = 19418;
  _arLog(0, 2, 19527, i9);
  _free(HEAP32[i21 >> 2] | 0);
  _free(i21);
  _free(i14);
  _rewind(i15);
  i19 = _malloc(8) | 0;
  if (!i19) {
   _arLog(0, 3, 20510, i8);
   _exit(1);
  }
  i20 = i19 + 4 | 0;
  if ((_fread(i20, 4, 1, i15) | 0) == 1 ? (i22 = HEAP32[i20 >> 2] | 0, (i22 | 0) >= 1) : 0) {
   i20 = _malloc(i22 << 2) | 0;
   HEAP32[i19 >> 2] = i20;
   if (!i20) {
    _arLog(0, 3, 20510, i6);
    _exit(1);
   }
   i23 = 0;
   do {
    i25 = _malloc(16) | 0;
    HEAP32[i20 + (i23 << 2) >> 2] = i25;
    i23 = i23 + 1 | 0;
    if (!i25) {
     i24 = 27;
     break;
    }
   } while ((i23 | 0) < (i22 | 0));
   if ((i24 | 0) == 27) {
    _arLog(0, 3, 20510, i5);
    _exit(1);
   }
   i23 = 0;
   while (1) {
    i21 = i20 + (i23 << 2) | 0;
    if ((_fread((HEAP32[i21 >> 2] | 0) + 4 | 0, 4, 1, i15) | 0) != 1) {
     i24 = 29;
     break;
    }
    if ((_fread((HEAP32[i21 >> 2] | 0) + 8 | 0, 4, 1, i15) | 0) != 1) {
     i24 = 35;
     break;
    }
    if ((_fread((HEAP32[i21 >> 2] | 0) + 12 | 0, 4, 1, i15) | 0) != 1) {
     i24 = 41;
     break;
    }
    i25 = HEAP32[i21 >> 2] | 0;
    i26 = _malloc(Math_imul(HEAP32[i25 + 8 >> 2] | 0, HEAP32[i25 + 4 >> 2] | 0) | 0) | 0;
    HEAP32[i25 >> 2] = i26;
    if (!i26) {
     i24 = 47;
     break;
    }
    i26 = HEAP32[i21 >> 2] | 0;
    i25 = _fread(HEAP32[i26 >> 2] | 0, 1, Math_imul(HEAP32[i26 + 8 >> 2] | 0, HEAP32[i26 + 4 >> 2] | 0) | 0, i15) | 0;
    i26 = HEAP32[i21 >> 2] | 0;
    if ((i25 | 0) != (Math_imul(HEAP32[i26 + 8 >> 2] | 0, HEAP32[i26 + 4 >> 2] | 0) | 0)) {
     i24 = 49;
     break;
    }
    i26 = i23 + 1 | 0;
    if ((i26 | 0) < (i22 | 0)) i23 = i26; else {
     i24 = 54;
     break;
    }
   }
   if ((i24 | 0) == 29) {
    if (i23 | 0) {
     i26 = 0;
     do {
      _free(HEAP32[HEAP32[i20 + (i26 << 2) >> 2] >> 2] | 0);
      i26 = i26 + 1 | 0;
     } while ((i26 | 0) != (i23 | 0));
    }
    i26 = 0;
    do {
     _free(HEAP32[i20 + (i26 << 2) >> 2] | 0);
     i26 = i26 + 1 | 0;
    } while ((i26 | 0) != (i22 | 0));
   } else if ((i24 | 0) == 35) {
    if (i23 | 0) {
     i26 = 0;
     do {
      _free(HEAP32[HEAP32[i20 + (i26 << 2) >> 2] >> 2] | 0);
      i26 = i26 + 1 | 0;
     } while ((i26 | 0) != (i23 | 0));
    }
    i26 = 0;
    do {
     _free(HEAP32[i20 + (i26 << 2) >> 2] | 0);
     i26 = i26 + 1 | 0;
    } while ((i26 | 0) != (i22 | 0));
   } else if ((i24 | 0) == 41) {
    if (i23 | 0) {
     i26 = 0;
     do {
      _free(HEAP32[HEAP32[i20 + (i26 << 2) >> 2] >> 2] | 0);
      i26 = i26 + 1 | 0;
     } while ((i26 | 0) != (i23 | 0));
    }
    i26 = 0;
    do {
     _free(HEAP32[i20 + (i26 << 2) >> 2] | 0);
     i26 = i26 + 1 | 0;
    } while ((i26 | 0) != (i22 | 0));
   } else if ((i24 | 0) == 47) {
    _arLog(0, 3, 20510, i4);
    _exit(1);
   } else if ((i24 | 0) == 49) {
    i26 = 0;
    while (1) {
     _free(HEAP32[HEAP32[i20 + (i26 << 2) >> 2] >> 2] | 0);
     if ((i26 | 0) == (i23 | 0)) break; else i26 = i26 + 1 | 0;
    }
    i26 = 0;
    do {
     _free(HEAP32[i20 + (i26 << 2) >> 2] | 0);
     i26 = i26 + 1 | 0;
    } while ((i26 | 0) != (i22 | 0));
   } else if ((i24 | 0) == 54) {
    _fclose(i15) | 0;
    i18 = i19;
    STACKTOP = i2;
    return i18 | 0;
   }
   _free(i20);
  } else _arLog(0, 3, 19472, i7);
  _free(i19);
  _fclose(i15) | 0;
  i18 = 0;
  STACKTOP = i2;
  return i18 | 0;
 } else i24 = 9; while (0);
 if ((i24 | 0) == 9) _arLog(0, 3, 19472, i13);
 _free(i14);
 _fclose(i15) | 0;
 i18 = 0;
 STACKTOP = i2;
 return i18 | 0;
}

function _icpPointRobust(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, d22 = 0.0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, d28 = 0.0, d29 = 0.0, d30 = 0.0, i31 = 0, i32 = 0, d33 = 0.0, d34 = 0.0, d35 = 0.0, d36 = 0.0, d37 = 0.0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 i7 = i6 + 144 | 0;
 i8 = i6 + 48 | 0;
 i9 = i6;
 i10 = i2 + 8 | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 if ((i11 | 0) < 4) {
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 }
 i13 = ~~(+HEAPF64[i1 + 128 >> 3] * +(i11 | 0)) + -1 | 0;
 i14 = _malloc(i11 * 96 | 0) | 0;
 if (!i14) {
  _arLog(0, 3, 18473, i6 + 160 | 0);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 }
 i15 = _malloc(i11 << 4) | 0;
 if (!i15) {
  _arLog(0, 3, 18473, i6 + 168 | 0);
  _free(i14);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 }
 i16 = i11 << 3;
 i11 = _malloc(i16) | 0;
 if (!i11) {
  _arLog(0, 3, 18473, i6 + 176 | 0);
  _free(i14);
  _free(i15);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 }
 i17 = _malloc(i16) | 0;
 if (!i17) {
  _arLog(0, 3, 18473, i6 + 184 | 0);
  _free(i14);
  _free(i15);
  _free(i11);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 }
 HEAPF64[i4 >> 3] = +HEAPF64[i3 >> 3];
 HEAPF64[i4 + 8 >> 3] = +HEAPF64[i3 + 8 >> 3];
 HEAPF64[i4 + 16 >> 3] = +HEAPF64[i3 + 16 >> 3];
 HEAPF64[i4 + 24 >> 3] = +HEAPF64[i3 + 24 >> 3];
 HEAPF64[i4 + 32 >> 3] = +HEAPF64[i3 + 32 >> 3];
 HEAPF64[i4 + 40 >> 3] = +HEAPF64[i3 + 40 >> 3];
 HEAPF64[i4 + 48 >> 3] = +HEAPF64[i3 + 48 >> 3];
 HEAPF64[i4 + 56 >> 3] = +HEAPF64[i3 + 56 >> 3];
 HEAPF64[i4 + 64 >> 3] = +HEAPF64[i3 + 64 >> 3];
 HEAPF64[i4 + 72 >> 3] = +HEAPF64[i3 + 72 >> 3];
 HEAPF64[i4 + 80 >> 3] = +HEAPF64[i3 + 80 >> 3];
 HEAPF64[i4 + 88 >> 3] = +HEAPF64[i3 + 88 >> 3];
 i3 = i17 + (((i13 | 0) > 3 ? i13 : 3) << 3) | 0;
 i13 = i2 + 4 | 0;
 i16 = i7 + 8 | 0;
 i18 = i1 + 104 | 0;
 i19 = i1 + 96 | 0;
 i20 = i1 + 120 | 0;
 i21 = i1 + 112 | 0;
 d22 = 0.0;
 i23 = 0;
 L20 : while (1) {
  _arUtilMatMul(i1, i4, i8) | 0;
  i24 = HEAP32[i10 >> 2] | 0;
  if ((i24 | 0) > 0) {
   i25 = 0;
   while (1) {
    if ((_icpGetU_from_X_by_MatX2U(i7, i8, (HEAP32[i13 >> 2] | 0) + (i25 * 24 | 0) | 0) | 0) < 0) {
     i26 = 14;
     break L20;
    }
    i27 = HEAP32[i2 >> 2] | 0;
    d28 = +HEAPF64[i27 + (i25 << 4) >> 3] - +HEAPF64[i7 >> 3];
    d29 = +HEAPF64[i27 + (i25 << 4) + 8 >> 3] - +HEAPF64[i16 >> 3];
    i27 = i25 << 1;
    HEAPF64[i15 + (i27 << 3) >> 3] = d28;
    HEAPF64[i15 + ((i27 | 1) << 3) >> 3] = d29;
    d30 = d28 * d28 + d29 * d29;
    HEAPF64[i17 + (i25 << 3) >> 3] = d30;
    HEAPF64[i11 + (i25 << 3) >> 3] = d30;
    i25 = i25 + 1 | 0;
    i27 = HEAP32[i10 >> 2] | 0;
    if ((i25 | 0) >= (i27 | 0)) {
     i31 = i27;
     break;
    }
   }
  } else i31 = i24;
  _qsort(i17, i31, 8, 18);
  d30 = +HEAPF64[i3 >> 3] * 4.0;
  d29 = d30 < 16.0 ? 16.0 : d30;
  i25 = HEAP32[i10 >> 2] | 0;
  i27 = (i25 | 0) > 0;
  if (i27) {
   d30 = d29 / 6.0;
   d28 = 0.0;
   i32 = 0;
   while (1) {
    d33 = +HEAPF64[i17 + (i32 << 3) >> 3];
    if (d33 > d29) d34 = d30; else {
     d35 = 1.0 - d33 / d29;
     d34 = d30 * (1.0 - d35 * (d35 * d35));
    }
    d35 = d28 + d34;
    i32 = i32 + 1 | 0;
    if ((i32 | 0) >= (i25 | 0)) {
     d36 = d35;
     break;
    } else d28 = d35;
   }
  } else d36 = 0.0;
  d37 = d36 / +(i25 | 0);
  if (d37 < +HEAPF64[i18 >> 3]) {
   i26 = 38;
   break;
  }
  if ((i23 | 0 ? d37 < +HEAPF64[i20 >> 3] : 0) ? d37 / d22 > +HEAPF64[i21 >> 3] : 0) {
   i26 = 38;
   break;
  }
  if ((i23 | 0) == (HEAP32[i19 >> 2] | 0)) {
   i26 = 38;
   break;
  }
  if (!i27) {
   i26 = 34;
   break;
  }
  i32 = 0;
  i24 = 0;
  i38 = i25;
  while (1) {
   d28 = +HEAPF64[i11 + (i24 << 3) >> 3];
   if (!(d28 <= d29)) {
    i39 = i32;
    i40 = i38;
   } else {
    i41 = i32 * 6 | 0;
    i42 = i14 + (i41 << 3) | 0;
    if ((_icpGetJ_U_S(i42, i1, i4, (HEAP32[i13 >> 2] | 0) + (i24 * 24 | 0) | 0) | 0) < 0) {
     i26 = 30;
     break L20;
    }
    d30 = 1.0 - d28 / d29;
    d28 = d30 * d30;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + ((i41 | 1) << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 2 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 3 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 4 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 5 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 6 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 7 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 8 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 9 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 10 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i14 + (i41 + 11 << 3) | 0;
    HEAPF64[i42 >> 3] = d28 * +HEAPF64[i42 >> 3];
    i42 = i24 << 1;
    HEAPF64[i15 + (i32 << 3) >> 3] = d28 * +HEAPF64[i15 + (i42 << 3) >> 3];
    HEAPF64[i15 + (i32 + 1 << 3) >> 3] = d28 * +HEAPF64[i15 + ((i42 | 1) << 3) >> 3];
    i39 = i32 + 2 | 0;
    i40 = HEAP32[i10 >> 2] | 0;
   }
   i24 = i24 + 1 | 0;
   if ((i24 | 0) >= (i40 | 0)) break; else {
    i32 = i39;
    i38 = i40;
   }
  }
  if ((i39 | 0) < 6) {
   i26 = 34;
   break;
  }
  if ((_icpGetDeltaS(i9, i15, i14, i39) | 0) < 0) {
   i26 = 36;
   break;
  }
  _icpUpdateMat(i4, i9) | 0;
  d22 = d37;
  i23 = i23 + 1 | 0;
 }
 if ((i26 | 0) == 14) {
  _free(i14);
  _free(i15);
  _free(i11);
  _free(i17);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 } else if ((i26 | 0) == 30) {
  _free(i14);
  _free(i15);
  _free(i11);
  _free(i17);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 } else if ((i26 | 0) == 34) {
  _free(i14);
  _free(i15);
  _free(i11);
  _free(i17);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 } else if ((i26 | 0) == 36) {
  _free(i14);
  _free(i15);
  _free(i11);
  _free(i17);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 } else if ((i26 | 0) == 38) {
  HEAPF64[i5 >> 3] = d37;
  _free(i14);
  _free(i15);
  _free(i11);
  _free(i17);
  i12 = 0;
  STACKTOP = i6;
  return i12 | 0;
 }
 return 0;
}

function __ZN6vision16PruneDoGFeaturesERNSt3__26vectorINS1_INS1_INS0_4pairIfmEENS0_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEEERNS1_INS_25DoGScaleInvariantDetector12FeaturePointENS4_ISD_EEEERKSF_iiiii(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, d29 = 0.0, d30 = 0.0, d31 = 0.0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i10 = i9 + 8 | 0;
 i11 = i9 + 32 | 0;
 i12 = i9 + 28 | 0;
 i13 = i9 + 24 | 0;
 i14 = i9 + 20 | 0;
 i15 = i9 + 16 | 0;
 i16 = i9;
 i17 = (i8 | 0) / (Math_imul(i5, i4) | 0) | 0;
 i18 = ~~+Math_ceil(+(+(i6 | 0) / +(i4 | 0)));
 i4 = ~~+Math_ceil(+(+(i7 | 0) / +(i5 | 0)));
 i5 = i2 + 4 | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm(i2, i8);
 i8 = i1 + 4 | 0;
 i7 = HEAP32[i8 >> 2] | 0;
 i6 = HEAP32[i1 >> 2] | 0;
 i19 = i6;
 if ((i7 | 0) != (i6 | 0)) {
  i20 = (i7 - i6 | 0) / 12 | 0;
  i21 = 0;
  do {
   i22 = HEAP32[i19 + (i21 * 12 | 0) + 4 >> 2] | 0;
   i23 = HEAP32[i19 + (i21 * 12 | 0) >> 2] | 0;
   i24 = i23;
   if ((i22 | 0) != (i23 | 0)) {
    i25 = (i22 - i23 | 0) / 12 | 0;
    i23 = 0;
    do {
     HEAP32[i24 + (i23 * 12 | 0) + 4 >> 2] = HEAP32[i24 + (i23 * 12 | 0) >> 2];
     i23 = i23 + 1 | 0;
    } while (i23 >>> 0 < i25 >>> 0);
   }
   i21 = i21 + 1 | 0;
  } while (i21 >>> 0 < i20 >>> 0);
 }
 i20 = i3 + 4 | 0;
 i21 = HEAP32[i3 >> 2] | 0;
 if ((HEAP32[i20 >> 2] | 0) == (i21 | 0)) {
  i26 = i19;
  i27 = i7;
  i28 = i6;
 } else {
  d29 = +(i18 | 0);
  d30 = +(i4 | 0);
  i4 = i10 + 4 | 0;
  i18 = i21;
  i21 = i19;
  i19 = 0;
  while (1) {
   i6 = i18;
   i7 = ~~(+HEAPF32[i6 + (i19 * 36 | 0) + 4 >> 2] / d30);
   i25 = HEAP32[i21 + (~~(+HEAPF32[i6 + (i19 * 36 | 0) >> 2] / d29) * 12 | 0) >> 2] | 0;
   d31 = +Math_abs(+(+HEAPF32[i6 + (i19 * 36 | 0) + 24 >> 2]));
   HEAPF32[i10 >> 2] = d31;
   HEAP32[i4 >> 2] = i19;
   i6 = i25 + (i7 * 12 | 0) + 4 | 0;
   i23 = HEAP32[i6 >> 2] | 0;
   if (i23 >>> 0 < (HEAP32[i25 + (i7 * 12 | 0) + 8 >> 2] | 0) >>> 0) {
    i24 = i10;
    i22 = HEAP32[i24 + 4 >> 2] | 0;
    i32 = i23;
    HEAP32[i32 >> 2] = HEAP32[i24 >> 2];
    HEAP32[i32 + 4 >> 2] = i22;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
   } else __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i25 + (i7 * 12 | 0) | 0, i10);
   i7 = i19 + 1 | 0;
   i25 = HEAP32[i3 >> 2] | 0;
   if (i7 >>> 0 >= (((HEAP32[i20 >> 2] | 0) - i25 | 0) / 36 | 0) >>> 0) break;
   i18 = i25;
   i21 = HEAP32[i1 >> 2] | 0;
   i19 = i7;
  }
  i19 = HEAP32[i1 >> 2] | 0;
  i26 = i19;
  i27 = HEAP32[i8 >> 2] | 0;
  i28 = i19;
 }
 if ((i27 | 0) == (i28 | 0)) {
  STACKTOP = i9;
  return;
 }
 i19 = i2 + 8 | 0;
 i21 = 0;
 i18 = i26;
 i26 = i28;
 i28 = i27;
 L25 : while (1) {
  if ((HEAP32[i18 + (i21 * 12 | 0) + 4 >> 2] | 0) == (HEAP32[i18 + (i21 * 12 | 0) >> 2] | 0)) {
   i33 = i26;
   i34 = i28;
  } else {
   i27 = 0;
   i20 = i18;
   do {
    i4 = HEAP32[i20 + (i21 * 12 | 0) >> 2] | 0;
    i7 = i4 + (i27 * 12 | 0) | 0;
    i25 = i4 + (i27 * 12 | 0) + 4 | 0;
    i4 = HEAP32[i25 >> 2] | 0;
    i6 = HEAP32[i7 >> 2] | 0;
    i22 = i4 - i6 >> 3;
    i32 = i17 >>> 0 < i22 >>> 0 ? i17 : i22;
    L31 : do if (i32 | 0) {
     HEAP32[i13 >> 2] = i6;
     HEAP32[i14 >> 2] = i6 + (i32 << 3);
     HEAP32[i15 >> 2] = i4;
     HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
     HEAP32[i11 >> 2] = HEAP32[i14 >> 2];
     HEAP32[i10 >> 2] = HEAP32[i15 >> 2];
     __ZNSt3__213__nth_elementIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_S9_T_(i12, i11, i10, i16);
     i22 = HEAP32[i7 >> 2] | 0;
     i24 = i22;
     if (i32 >>> 0 > (HEAP32[i25 >> 2] | 0) - i22 >> 3 >>> 0 ? !(+HEAPF32[i24 >> 2] >= +HEAPF32[i24 + (i32 << 3) >> 2]) : 0) {
      i35 = 26;
      break L25;
     }
     i22 = 0;
     i23 = i24;
     while (1) {
      i24 = (HEAP32[i3 >> 2] | 0) + ((HEAP32[i23 + (i22 << 3) + 4 >> 2] | 0) * 36 | 0) | 0;
      i36 = HEAP32[i5 >> 2] | 0;
      if ((i36 | 0) == (HEAP32[i19 >> 2] | 0)) __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i2, i24); else {
       i37 = i36;
       i36 = i24;
       i24 = i37 + 36 | 0;
       do {
        HEAP32[i37 >> 2] = HEAP32[i36 >> 2];
        i37 = i37 + 4 | 0;
        i36 = i36 + 4 | 0;
       } while ((i37 | 0) < (i24 | 0));
       HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 36;
      }
      i36 = i22 + 1 | 0;
      if (i36 >>> 0 >= i32 >>> 0) break L31;
      i22 = i36;
      i23 = HEAP32[i7 >> 2] | 0;
     }
    } while (0);
    i27 = i27 + 1 | 0;
    i20 = HEAP32[i1 >> 2] | 0;
   } while (i27 >>> 0 < (((HEAP32[i20 + (i21 * 12 | 0) + 4 >> 2] | 0) - (HEAP32[i20 + (i21 * 12 | 0) >> 2] | 0) | 0) / 12 | 0) >>> 0);
   i33 = i20;
   i34 = HEAP32[i8 >> 2] | 0;
  }
  i21 = i21 + 1 | 0;
  if (i21 >>> 0 >= ((i34 - i33 | 0) / 12 | 0) >>> 0) {
   i35 = 17;
   break;
  } else {
   i18 = i33;
   i26 = i33;
   i28 = i34;
  }
 }
 if ((i35 | 0) == 17) {
  STACKTOP = i9;
  return;
 } else if ((i35 | 0) == 26) {
  i35 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22143, 57) | 0, 20576, 130) | 0, 33554, 6) | 0, 661) | 0, 33561, 2) | 0, 22201, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i35 + (HEAP32[(HEAP32[i35 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
  i34 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i35, i34) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i35) | 0;
  _abort();
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i6 = i5 + 84 | 0;
 i7 = i5 + 72 | 0;
 i8 = i5 + 60 | 0;
 i9 = i5 + 48 | 0;
 i10 = i5 + 36 | 0;
 i11 = i5 + 24 | 0;
 i12 = i5 + 12 | 0;
 i13 = i5;
 i14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) | 0;
 do if ((i14 | 0) != (i1 | 0)) {
  i15 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i14, i2, i4) | 0;
  i16 = i4 + 4 | 0;
  if ((i15 | 0) == (i14 | 0)) {
   i17 = HEAP32[i16 >> 2] | 0;
   i18 = 0;
   while (1) {
    if ((i18 | 0) == -1) break;
    i19 = i18 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17 + (i19 * 24 | 0) | 0);
    i18 = i19;
   }
   HEAP32[i16 >> 2] = i17 + -24;
   i20 = i1;
   break;
  }
  i18 = HEAP32[i16 >> 2] | 0;
  if (((i18 - (HEAP32[i4 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i18 + -24 | 0);
   i18 = HEAP32[i16 >> 2] | 0;
   i19 = 0;
   while (1) {
    if ((i19 | 0) == -1) break;
    i21 = i19 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i18 + (i21 * 24 | 0) | 0);
    i19 = i21;
   }
   HEAP32[i16 >> 2] = i18 + -24;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i18 + -48 | 0);
   i19 = HEAP32[i16 >> 2] | 0;
   i17 = i19 + -24 | 0;
   i21 = i17 + 11 | 0;
   if ((HEAP8[i21 >> 0] | 0) < 0) {
    i22 = HEAP32[i17 >> 2] | 0;
    HEAP8[i6 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i22, i6);
    HEAP32[i19 + -20 >> 2] = 0;
   } else {
    HEAP8[i6 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc(i17, i6);
    HEAP8[i21 >> 0] = 0;
   }
   i21 = __ZNSt3__211char_traitsIcE6lengthEPKc(50281) | 0;
   i19 = i3 + 11 | 0;
   i22 = HEAP8[i19 >> 0] | 0;
   i23 = i3 + 4 | 0;
   if ((i21 | 0) == ((i22 << 24 >> 24 < 0 ? HEAP32[i23 >> 2] | 0 : i22 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i3, 50281, i21) | 0) == 0 : 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i17, 40);
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i13, 50245, i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 50531) | 0;
   HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i12 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
   HEAP32[i12 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
   i21 = 0;
   while (1) {
    if ((i21 | 0) == 3) break;
    HEAP32[i13 + (i21 << 2) >> 2] = 0;
    i21 = i21 + 1 | 0;
   }
   i21 = HEAP8[i19 >> 0] | 0;
   i16 = i21 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i12, i16 ? HEAP32[i3 >> 2] | 0 : i3, i16 ? HEAP32[i23 >> 2] | 0 : i21 & 255) | 0;
   HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
   HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
   i21 = 0;
   while (1) {
    if ((i21 | 0) == 3) break;
    HEAP32[i12 + (i21 << 2) >> 2] = 0;
    i21 = i21 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11, 50240) | 0;
   HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i21 = 0;
   while (1) {
    if ((i21 | 0) == 3) break;
    HEAP32[i11 + (i21 << 2) >> 2] = 0;
    i21 = i21 + 1 | 0;
   }
   i21 = HEAP8[i7 + 11 >> 0] | 0;
   i16 = i21 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i10, i16 ? HEAP32[i7 >> 2] | 0 : i7, i16 ? HEAP32[i7 + 4 >> 2] | 0 : i21 & 255) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i21 = 0;
   while (1) {
    if ((i21 | 0) == 3) break;
    HEAP32[i10 + (i21 << 2) >> 2] = 0;
    i21 = i21 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 50243) | 0;
   HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i21 = 0;
   while (1) {
    if ((i21 | 0) == 3) break;
    HEAP32[i9 + (i21 << 2) >> 2] = 0;
    i21 = i21 + 1 | 0;
   }
   i21 = HEAP8[i6 + 11 >> 0] | 0;
   i16 = i21 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i17, i16 ? HEAP32[i6 >> 2] | 0 : i6, i16 ? HEAP32[i6 + 4 >> 2] | 0 : i21 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
   i21 = __ZNSt3__211char_traitsIcE6lengthEPKc(50281) | 0;
   i16 = HEAP8[i19 >> 0] | 0;
   if ((i21 | 0) == ((i16 << 24 >> 24 < 0 ? HEAP32[i23 >> 2] | 0 : i16 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i3, 50281, i21) | 0) == 0 : 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i17, 41);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   i20 = i15;
  } else i20 = i1;
 } else i20 = i1; while (0);
 STACKTOP = i5;
 return i20 | 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i9 = i8;
 i10 = (i4 - i3 | 0) / 12 | 0;
 if (i10 >>> 0 > 100) {
  i11 = _malloc(i10) | 0;
  if (!i11) __ZSt17__throw_bad_allocv(); else {
   i12 = i11;
   i13 = i11;
  }
 } else {
  i12 = i9;
  i13 = 0;
 }
 i9 = i10;
 i10 = i3;
 i11 = i12;
 i14 = 0;
 while (1) {
  if ((i10 | 0) == (i4 | 0)) break;
  i15 = HEAP8[i10 + 11 >> 0] | 0;
  if (i15 << 24 >> 24 < 0) i16 = HEAP32[i10 + 4 >> 2] | 0; else i16 = i15 & 255;
  if (!i16) {
   HEAP8[i11 >> 0] = 2;
   i17 = i9 + -1 | 0;
   i18 = i14 + 1 | 0;
  } else {
   HEAP8[i11 >> 0] = 1;
   i17 = i9;
   i18 = i14;
  }
  i9 = i17;
  i10 = i10 + 12 | 0;
  i11 = i11 + 1 | 0;
  i14 = i18;
 }
 i18 = 0;
 i11 = i9;
 i9 = i14;
 while (1) {
  i14 = HEAP32[i1 >> 2] | 0;
  do if (i14) {
   i10 = HEAP32[i14 + 12 >> 2] | 0;
   if ((i10 | 0) == (HEAP32[i14 + 16 >> 2] | 0)) i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i14 >> 2] | 0) + 36 >> 2] & 127](i14) | 0; else i19 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i10 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i19, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i1 >> 2] = 0;
    i20 = 1;
    break;
   } else {
    i20 = (HEAP32[i1 >> 2] | 0) == 0;
    break;
   }
  } else i20 = 1; while (0);
  i14 = HEAP32[i2 >> 2] | 0;
  if (i14) {
   i10 = HEAP32[i14 + 12 >> 2] | 0;
   if ((i10 | 0) == (HEAP32[i14 + 16 >> 2] | 0)) i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i14 >> 2] | 0) + 36 >> 2] & 127](i14) | 0; else i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i10 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i22 = 1;
    i23 = 0;
   } else {
    i22 = 0;
    i23 = i14;
   }
  } else {
   i22 = 1;
   i23 = 0;
  }
  i24 = HEAP32[i1 >> 2] | 0;
  if (!((i11 | 0) != 0 & (i20 ^ i22))) break;
  i14 = HEAP32[i24 + 12 >> 2] | 0;
  if ((i14 | 0) == (HEAP32[i24 + 16 >> 2] | 0)) i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i14 >> 0] | 0) | 0;
  i14 = i25 & 255;
  if (i7) i26 = i14; else i26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 63](i5, i14) | 0;
  i14 = i18 + 1 | 0;
  i10 = i3;
  i17 = 0;
  i16 = i12;
  i15 = i9;
  i27 = i11;
  while (1) {
   if ((i10 | 0) == (i4 | 0)) break;
   do if ((HEAP8[i16 >> 0] | 0) == 1) {
    i28 = i10 + 11 | 0;
    if ((HEAP8[i28 >> 0] | 0) < 0) i29 = HEAP32[i10 >> 2] | 0; else i29 = i10;
    i30 = HEAP8[i29 + i18 >> 0] | 0;
    if (i7) i31 = i30; else i31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 63](i5, i30) | 0;
    if (i26 << 24 >> 24 != i31 << 24 >> 24) {
     HEAP8[i16 >> 0] = 0;
     i32 = i17;
     i33 = i15;
     i34 = i27 + -1 | 0;
     break;
    }
    i30 = HEAP8[i28 >> 0] | 0;
    if (i30 << 24 >> 24 < 0) i35 = HEAP32[i10 + 4 >> 2] | 0; else i35 = i30 & 255;
    if ((i35 | 0) == (i14 | 0)) {
     HEAP8[i16 >> 0] = 2;
     i32 = 1;
     i33 = i15 + 1 | 0;
     i34 = i27 + -1 | 0;
    } else {
     i32 = 1;
     i33 = i15;
     i34 = i27;
    }
   } else {
    i32 = i17;
    i33 = i15;
    i34 = i27;
   } while (0);
   i10 = i10 + 12 | 0;
   i17 = i32;
   i16 = i16 + 1 | 0;
   i15 = i33;
   i27 = i34;
  }
  L67 : do if (i17) {
   i16 = HEAP32[i1 >> 2] | 0;
   i10 = i16 + 12 | 0;
   i30 = HEAP32[i10 >> 2] | 0;
   if ((i30 | 0) == (HEAP32[i16 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i16 >> 2] | 0) + 40 >> 2] & 127](i16) | 0; else {
    HEAP32[i10 >> 2] = i30 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i30 >> 0] | 0) | 0;
   }
   if ((i15 + i27 | 0) >>> 0 > 1) {
    i30 = i3;
    i10 = i12;
    i16 = i15;
    while (1) {
     if ((i30 | 0) == (i4 | 0)) {
      i36 = i16;
      break L67;
     }
     if ((HEAP8[i10 >> 0] | 0) == 2) {
      i28 = HEAP8[i30 + 11 >> 0] | 0;
      if (i28 << 24 >> 24 < 0) i37 = HEAP32[i30 + 4 >> 2] | 0; else i37 = i28 & 255;
      if ((i37 | 0) != (i14 | 0)) {
       HEAP8[i10 >> 0] = 0;
       i38 = i16 + -1 | 0;
      } else i38 = i16;
     } else i38 = i16;
     i30 = i30 + 12 | 0;
     i10 = i10 + 1 | 0;
     i16 = i38;
    }
   } else i36 = i15;
  } else i36 = i15; while (0);
  i18 = i14;
  i11 = i27;
  i9 = i36;
 }
 do if (i24) {
  i36 = HEAP32[i24 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i24 + 16 >> 2] | 0)) i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i39 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i36 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i39, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i1 >> 2] = 0;
   i40 = 1;
   break;
  } else {
   i40 = (HEAP32[i1 >> 2] | 0) == 0;
   break;
  }
 } else i40 = 1; while (0);
 do if (i23) {
  i1 = HEAP32[i23 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i41, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i40) break; else {
   i42 = 79;
   break;
  } else {
   HEAP32[i2 >> 2] = 0;
   i42 = 41;
   break;
  }
 } else i42 = 41; while (0);
 if ((i42 | 0) == 41 ? i40 : 0) i42 = 79;
 if ((i42 | 0) == 79) HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 2;
 i40 = i3;
 i3 = i12;
 while (1) {
  if ((i40 | 0) == (i4 | 0)) {
   i42 = 84;
   break;
  }
  if ((HEAP8[i3 >> 0] | 0) == 2) {
   i43 = i40;
   break;
  }
  i40 = i40 + 12 | 0;
  i3 = i3 + 1 | 0;
 }
 if ((i42 | 0) == 84) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i43 = i4;
 }
 _free(i13);
 STACKTOP = i8;
 return i43 | 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i9 = i8;
 i10 = (i4 - i3 | 0) / 12 | 0;
 if (i10 >>> 0 > 100) {
  i11 = _malloc(i10) | 0;
  if (!i11) __ZSt17__throw_bad_allocv(); else {
   i12 = i11;
   i13 = i11;
  }
 } else {
  i12 = i9;
  i13 = 0;
 }
 i9 = 0;
 i11 = i10;
 i10 = i3;
 i14 = i12;
 while (1) {
  if ((i10 | 0) == (i4 | 0)) break;
  i15 = HEAP8[i10 + 8 + 3 >> 0] | 0;
  if (i15 << 24 >> 24 < 0) i16 = HEAP32[i10 + 4 >> 2] | 0; else i16 = i15 & 255;
  if (!i16) {
   HEAP8[i14 >> 0] = 2;
   i17 = i9 + 1 | 0;
   i18 = i11 + -1 | 0;
  } else {
   HEAP8[i14 >> 0] = 1;
   i17 = i9;
   i18 = i11;
  }
  i9 = i17;
  i11 = i18;
  i10 = i10 + 12 | 0;
  i14 = i14 + 1 | 0;
 }
 i14 = 0;
 i10 = i9;
 i9 = i11;
 while (1) {
  i11 = HEAP32[i1 >> 2] | 0;
  do if (i11) {
   i18 = HEAP32[i11 + 12 >> 2] | 0;
   if ((i18 | 0) == (HEAP32[i11 + 16 >> 2] | 0)) i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 127](i11) | 0; else i19 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i18 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i19, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i1 >> 2] = 0;
    i20 = 1;
    break;
   } else {
    i20 = (HEAP32[i1 >> 2] | 0) == 0;
    break;
   }
  } else i20 = 1; while (0);
  i11 = HEAP32[i2 >> 2] | 0;
  if (i11) {
   i18 = HEAP32[i11 + 12 >> 2] | 0;
   if ((i18 | 0) == (HEAP32[i11 + 16 >> 2] | 0)) i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 127](i11) | 0; else i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i18 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i22 = 1;
    i23 = 0;
   } else {
    i22 = 0;
    i23 = i11;
   }
  } else {
   i22 = 1;
   i23 = 0;
  }
  i24 = HEAP32[i1 >> 2] | 0;
  if (!((i9 | 0) != 0 & (i20 ^ i22))) break;
  i11 = HEAP32[i24 + 12 >> 2] | 0;
  if ((i11 | 0) == (HEAP32[i24 + 16 >> 2] | 0)) i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i11 >> 2] | 0) | 0;
  if (i7) i26 = i25; else i26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, i25) | 0;
  i11 = i14 + 1 | 0;
  i18 = i3;
  i17 = 0;
  i16 = i12;
  i15 = i10;
  i27 = i9;
  while (1) {
   if ((i18 | 0) == (i4 | 0)) break;
   do if ((HEAP8[i16 >> 0] | 0) == 1) {
    i28 = i18 + 8 + 3 | 0;
    if ((HEAP8[i28 >> 0] | 0) < 0) i29 = HEAP32[i18 >> 2] | 0; else i29 = i18;
    i30 = HEAP32[i29 + (i14 << 2) >> 2] | 0;
    if (i7) i31 = i30; else i31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, i30) | 0;
    if ((i26 | 0) != (i31 | 0)) {
     HEAP8[i16 >> 0] = 0;
     i32 = i17;
     i33 = i15;
     i34 = i27 + -1 | 0;
     break;
    }
    i30 = HEAP8[i28 >> 0] | 0;
    if (i30 << 24 >> 24 < 0) i35 = HEAP32[i18 + 4 >> 2] | 0; else i35 = i30 & 255;
    if ((i35 | 0) == (i11 | 0)) {
     HEAP8[i16 >> 0] = 2;
     i32 = 1;
     i33 = i15 + 1 | 0;
     i34 = i27 + -1 | 0;
    } else {
     i32 = 1;
     i33 = i15;
     i34 = i27;
    }
   } else {
    i32 = i17;
    i33 = i15;
    i34 = i27;
   } while (0);
   i18 = i18 + 12 | 0;
   i17 = i32;
   i16 = i16 + 1 | 0;
   i15 = i33;
   i27 = i34;
  }
  L67 : do if (i17) {
   i16 = HEAP32[i1 >> 2] | 0;
   i18 = i16 + 12 | 0;
   i30 = HEAP32[i18 >> 2] | 0;
   if ((i30 | 0) == (HEAP32[i16 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i16 >> 2] | 0) + 40 >> 2] & 127](i16) | 0; else {
    HEAP32[i18 >> 2] = i30 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i30 >> 2] | 0) | 0;
   }
   if ((i15 + i27 | 0) >>> 0 > 1) {
    i30 = i3;
    i18 = i12;
    i16 = i15;
    while (1) {
     if ((i30 | 0) == (i4 | 0)) {
      i36 = i16;
      break L67;
     }
     if ((HEAP8[i18 >> 0] | 0) == 2) {
      i28 = HEAP8[i30 + 8 + 3 >> 0] | 0;
      if (i28 << 24 >> 24 < 0) i37 = HEAP32[i30 + 4 >> 2] | 0; else i37 = i28 & 255;
      if ((i37 | 0) != (i11 | 0)) {
       HEAP8[i18 >> 0] = 0;
       i38 = i16 + -1 | 0;
      } else i38 = i16;
     } else i38 = i16;
     i30 = i30 + 12 | 0;
     i18 = i18 + 1 | 0;
     i16 = i38;
    }
   } else i36 = i15;
  } else i36 = i15; while (0);
  i14 = i11;
  i10 = i36;
  i9 = i27;
 }
 do if (i24) {
  i9 = HEAP32[i24 + 12 >> 2] | 0;
  if ((i9 | 0) == (HEAP32[i24 + 16 >> 2] | 0)) i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i39 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i9 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i39, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i1 >> 2] = 0;
   i40 = 1;
   break;
  } else {
   i40 = (HEAP32[i1 >> 2] | 0) == 0;
   break;
  }
 } else i40 = 1; while (0);
 do if (i23) {
  i1 = HEAP32[i23 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i41, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i40) break; else {
   i42 = 79;
   break;
  } else {
   HEAP32[i2 >> 2] = 0;
   i42 = 41;
   break;
  }
 } else i42 = 41; while (0);
 if ((i42 | 0) == 41 ? i40 : 0) i42 = 79;
 if ((i42 | 0) == 79) HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 2;
 i40 = i3;
 i3 = i12;
 while (1) {
  if ((i40 | 0) == (i4 | 0)) {
   i42 = 84;
   break;
  }
  if ((HEAP8[i3 >> 0] | 0) == 2) {
   i43 = i40;
   break;
  }
  i40 = i40 + 12 | 0;
  i3 = i3 + 1 | 0;
 }
 if ((i42 | 0) == 84) {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 4;
  i43 = i4;
 }
 _free(i13);
 STACKTOP = i8;
 return i43 | 0;
}

function _kpmUtilResizeImage(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i8 = i7 + 32 | 0;
 i9 = i7 + 24 | 0;
 i10 = i7 + 16 | 0;
 switch (i4 | 0) {
 case 1:
  {
   HEAP32[i5 >> 2] = i2;
   HEAP32[i6 >> 2] = i3;
   i4 = Math_imul(i3, i2) | 0;
   i11 = _malloc(i4) | 0;
   if (!i11) {
    _arLog(0, 3, 20510, i7);
    _exit(1);
   }
   _memcpy(i11 | 0, i1 | 0, i4 | 0) | 0;
   i12 = i11;
   STACKTOP = i7;
   return i12 | 0;
  }
 case 5:
  {
   i11 = (i2 | 0) / 3 | 0;
   i4 = i11 << 1;
   HEAP32[i5 >> 2] = i4;
   i13 = (i3 | 0) / 3 | 0;
   i14 = i13 << 1;
   HEAP32[i6 >> 2] = i14;
   i15 = _malloc(Math_imul(i14, i4) | 0) | 0;
   if (!i15) {
    _arLog(0, 3, 20510, i7 + 8 | 0);
    _exit(1);
   }
   if (!((i2 | 0) > 2 & (i3 | 0) > 2)) {
    i12 = i15;
    STACKTOP = i7;
    return i12 | 0;
   }
   i14 = i15;
   i16 = 0;
   while (1) {
    i17 = i14 + i4 | 0;
    i18 = i16 * 3 | 0;
    i19 = 0;
    i20 = i1 + (Math_imul(i18 + 2 | 0, i2) | 0) | 0;
    i21 = i1 + (Math_imul(i18 + 1 | 0, i2) | 0) | 0;
    i22 = i1 + (Math_imul(i18, i2) | 0) | 0;
    i18 = i17;
    i23 = i14;
    while (1) {
     i24 = i22 + 1 | 0;
     i25 = i21 + 1 | 0;
     HEAP8[i23 >> 0] = (((HEAPU8[i24 >> 0] | 0) >>> 1 & 255) + (HEAPU8[i22 >> 0] | 0) + ((HEAPU8[i21 >> 0] | 0) >>> 1 & 255) + ((HEAPU8[i25 >> 0] | 0) >>> 2 & 255) << 2 >>> 0) / 9 | 0;
     i26 = i20 + 1 | 0;
     HEAP8[i18 >> 0] = ((((HEAPU8[i25 >> 0] | 0) >>> 2) + ((HEAPU8[i21 >> 0] | 0) >>> 1) & 255) + (HEAPU8[i20 >> 0] | 0) + ((HEAPU8[i26 >> 0] | 0) >>> 1 & 255) << 2 >>> 0) / 9 | 0;
     i27 = i21 + 2 | 0;
     HEAP8[i23 + 1 >> 0] = (((HEAPU8[i24 >> 0] | 0) >>> 1 & 255) + (HEAPU8[i22 + 2 >> 0] | 0) + ((HEAPU8[i25 >> 0] | 0) >>> 2 & 255) + ((HEAPU8[i27 >> 0] | 0) >>> 1 & 255) << 2 >>> 0) / 9 | 0;
     HEAP8[i18 + 1 >> 0] = ((((HEAPU8[i27 >> 0] | 0) >>> 1) + ((HEAPU8[i25 >> 0] | 0) >>> 2) & 255) + ((HEAPU8[i26 >> 0] | 0) >>> 1 & 255) + (HEAPU8[i20 + 2 >> 0] | 0) << 2 >>> 0) / 9 | 0;
     i19 = i19 + 1 | 0;
     if ((i19 | 0) == (i11 | 0)) break; else {
      i20 = i20 + 3 | 0;
      i21 = i21 + 3 | 0;
      i22 = i22 + 3 | 0;
      i18 = i18 + 2 | 0;
      i23 = i23 + 2 | 0;
     }
    }
    i16 = i16 + 1 | 0;
    if ((i16 | 0) == (i13 | 0)) {
     i12 = i15;
     break;
    } else i14 = i17 + i4 | 0;
   }
   STACKTOP = i7;
   return i12 | 0;
  }
 case 2:
  {
   i4 = (i2 | 0) / 2 | 0;
   HEAP32[i5 >> 2] = i4;
   i14 = (i3 | 0) / 2 | 0;
   HEAP32[i6 >> 2] = i14;
   i15 = _malloc(Math_imul(i14, i4) | 0) | 0;
   if (!i15) {
    _arLog(0, 3, 20510, i10);
    _exit(1);
   }
   if (!((i2 | 0) > 1 & (i3 | 0) > 1)) {
    i12 = i15;
    STACKTOP = i7;
    return i12 | 0;
   }
   i10 = i15;
   i13 = 0;
   while (1) {
    i16 = i13 << 1;
    i11 = 0;
    i23 = i1 + (Math_imul(i16, i2) | 0) | 0;
    i18 = i1 + (Math_imul(i16 | 1, i2) | 0) | 0;
    i16 = i10;
    while (1) {
     HEAP8[i16 >> 0] = ((HEAPU8[i23 + 1 >> 0] | 0) + (HEAPU8[i23 >> 0] | 0) + (HEAPU8[i18 >> 0] | 0) + (HEAPU8[i18 + 1 >> 0] | 0) | 0) >>> 2;
     i11 = i11 + 1 | 0;
     if ((i11 | 0) == (i4 | 0)) break; else {
      i23 = i23 + 2 | 0;
      i18 = i18 + 2 | 0;
      i16 = i16 + 1 | 0;
     }
    }
    i13 = i13 + 1 | 0;
    if ((i13 | 0) == (i14 | 0)) {
     i12 = i15;
     break;
    } else i10 = i10 + i4 | 0;
   }
   STACKTOP = i7;
   return i12 | 0;
  }
 case 4:
  {
   i4 = (i2 | 0) / 3 | 0;
   HEAP32[i5 >> 2] = i4;
   i10 = (i3 | 0) / 3 | 0;
   HEAP32[i6 >> 2] = i10;
   i15 = _malloc(Math_imul(i10, i4) | 0) | 0;
   if (!i15) {
    _arLog(0, 3, 20510, i9);
    _exit(1);
   }
   if (!((i2 | 0) > 2 & (i3 | 0) > 2)) {
    i12 = i15;
    STACKTOP = i7;
    return i12 | 0;
   }
   i9 = i15;
   i14 = 0;
   while (1) {
    i13 = i14 * 3 | 0;
    i16 = 0;
    i18 = i1 + (Math_imul(i13, i2) | 0) | 0;
    i23 = i1 + (Math_imul(i13 + 2 | 0, i2) | 0) | 0;
    i11 = i1 + (Math_imul(i13 + 1 | 0, i2) | 0) | 0;
    i13 = i9;
    while (1) {
     HEAP8[i13 >> 0] = ((HEAPU8[i18 + 1 >> 0] | 0) + (HEAPU8[i18 >> 0] | 0) + (HEAPU8[i18 + 2 >> 0] | 0) + (HEAPU8[i11 >> 0] | 0) + (HEAPU8[i11 + 1 >> 0] | 0) + (HEAPU8[i11 + 2 >> 0] | 0) + (HEAPU8[i23 >> 0] | 0) + (HEAPU8[i23 + 1 >> 0] | 0) + (HEAPU8[i23 + 2 >> 0] | 0) | 0) / 9 | 0;
     i16 = i16 + 1 | 0;
     if ((i16 | 0) == (i4 | 0)) break; else {
      i18 = i18 + 3 | 0;
      i23 = i23 + 3 | 0;
      i11 = i11 + 3 | 0;
      i13 = i13 + 1 | 0;
     }
    }
    i14 = i14 + 1 | 0;
    if ((i14 | 0) == (i10 | 0)) {
     i12 = i15;
     break;
    } else i9 = i9 + i4 | 0;
   }
   STACKTOP = i7;
   return i12 | 0;
  }
 default:
  {
   i4 = (i2 | 0) / 4 | 0;
   HEAP32[i5 >> 2] = i4;
   i5 = (i3 | 0) / 4 | 0;
   HEAP32[i6 >> 2] = i5;
   i6 = _malloc(Math_imul(i5, i4) | 0) | 0;
   if (!i6) {
    _arLog(0, 3, 20510, i8);
    _exit(1);
   }
   if (!((i2 | 0) > 3 & (i3 | 0) > 3)) {
    i12 = i6;
    STACKTOP = i7;
    return i12 | 0;
   }
   i3 = i6;
   i8 = 0;
   while (1) {
    i9 = i8 << 2;
    i15 = 0;
    i10 = i1 + (Math_imul(i9, i2) | 0) | 0;
    i14 = i1 + (Math_imul(i9 | 3, i2) | 0) | 0;
    i13 = i1 + (Math_imul(i9 | 2, i2) | 0) | 0;
    i11 = i1 + (Math_imul(i9 | 1, i2) | 0) | 0;
    i9 = i3;
    while (1) {
     HEAP8[i9 >> 0] = ((HEAPU8[i10 + 1 >> 0] | 0) + (HEAPU8[i10 >> 0] | 0) + (HEAPU8[i10 + 2 >> 0] | 0) + (HEAPU8[i10 + 3 >> 0] | 0) + (HEAPU8[i11 >> 0] | 0) + (HEAPU8[i11 + 1 >> 0] | 0) + (HEAPU8[i11 + 2 >> 0] | 0) + (HEAPU8[i11 + 3 >> 0] | 0) + (HEAPU8[i13 >> 0] | 0) + (HEAPU8[i13 + 1 >> 0] | 0) + (HEAPU8[i13 + 2 >> 0] | 0) + (HEAPU8[i13 + 3 >> 0] | 0) + (HEAPU8[i14 >> 0] | 0) + (HEAPU8[i14 + 1 >> 0] | 0) + (HEAPU8[i14 + 2 >> 0] | 0) + (HEAPU8[i14 + 3 >> 0] | 0) | 0) / 16 | 0;
     i15 = i15 + 1 | 0;
     if ((i15 | 0) == (i4 | 0)) break; else {
      i10 = i10 + 4 | 0;
      i14 = i14 + 4 | 0;
      i13 = i13 + 4 | 0;
      i11 = i11 + 4 | 0;
      i9 = i9 + 1 | 0;
     }
    }
    i8 = i8 + 1 | 0;
    if ((i8 | 0) == (i5 | 0)) {
     i12 = i6;
     break;
    } else i3 = i3 + i4 | 0;
   }
   STACKTOP = i7;
   return i12 | 0;
  }
 }
 return 0;
}

function _get_sof(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 i4 = HEAP32[i1 + 24 >> 2] | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = i4 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 HEAP32[i1 + 220 >> 2] = i2;
 HEAP32[i1 + 224 >> 2] = i3;
 do if (!i7) if (!(FUNCTION_TABLE_ii[HEAP32[i4 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  return i8 | 0;
 } else {
  i9 = HEAP32[i6 >> 2] | 0;
  i10 = HEAP32[i4 >> 2] | 0;
  break;
 } else {
  i9 = i7;
  i10 = i5;
 } while (0);
 i5 = i9 + -1 | 0;
 i9 = i10 + 1 | 0;
 i7 = (HEAPU8[i10 >> 0] | 0) << 8;
 do if (!i5) if (!(FUNCTION_TABLE_ii[HEAP32[i4 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  return i8 | 0;
 } else {
  i11 = HEAP32[i6 >> 2] | 0;
  i12 = HEAP32[i4 >> 2] | 0;
  break;
 } else {
  i11 = i5;
  i12 = i9;
 } while (0);
 i9 = i11 + -1 | 0;
 i11 = i12 + 1 | 0;
 i5 = i7 | (HEAPU8[i12 >> 0] | 0);
 do if (!i9) if (!(FUNCTION_TABLE_ii[HEAP32[i4 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  return i8 | 0;
 } else {
  i13 = HEAP32[i6 >> 2] | 0;
  i14 = HEAP32[i4 >> 2] | 0;
  break;
 } else {
  i13 = i9;
  i14 = i11;
 } while (0);
 i11 = i13 + -1 | 0;
 i13 = i14 + 1 | 0;
 HEAP32[i1 + 212 >> 2] = HEAPU8[i14 >> 0];
 do if (!i11) if (!(FUNCTION_TABLE_ii[HEAP32[i4 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  return i8 | 0;
 } else {
  i15 = HEAP32[i6 >> 2] | 0;
  i16 = HEAP32[i4 >> 2] | 0;
  break;
 } else {
  i15 = i11;
  i16 = i13;
 } while (0);
 i13 = i15 + -1 | 0;
 i15 = i16 + 1 | 0;
 i11 = (HEAPU8[i16 >> 0] | 0) << 8;
 i16 = i1 + 32 | 0;
 HEAP32[i16 >> 2] = i11;
 do if (!i13) if (!(FUNCTION_TABLE_ii[HEAP32[i4 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  return i8 | 0;
 } else {
  i17 = HEAP32[i6 >> 2] | 0;
  i18 = HEAP32[i4 >> 2] | 0;
  i19 = HEAP32[i16 >> 2] | 0;
  break;
 } else {
  i17 = i13;
  i18 = i15;
  i19 = i11;
 } while (0);
 i11 = i17 + -1 | 0;
 i17 = i18 + 1 | 0;
 HEAP32[i16 >> 2] = i19 + (HEAPU8[i18 >> 0] | 0);
 do if (!i11) if (!(FUNCTION_TABLE_ii[HEAP32[i4 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  return i8 | 0;
 } else {
  i20 = HEAP32[i6 >> 2] | 0;
  i21 = HEAP32[i4 >> 2] | 0;
  break;
 } else {
  i20 = i11;
  i21 = i17;
 } while (0);
 i17 = i20 + -1 | 0;
 i20 = i21 + 1 | 0;
 i11 = (HEAPU8[i21 >> 0] | 0) << 8;
 i21 = i1 + 28 | 0;
 HEAP32[i21 >> 2] = i11;
 do if (!i17) if (!(FUNCTION_TABLE_ii[HEAP32[i4 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  return i8 | 0;
 } else {
  i22 = HEAP32[i6 >> 2] | 0;
  i23 = HEAP32[i4 >> 2] | 0;
  i24 = HEAP32[i21 >> 2] | 0;
  break;
 } else {
  i22 = i17;
  i23 = i20;
  i24 = i11;
 } while (0);
 i11 = i22 + -1 | 0;
 i22 = i23 + 1 | 0;
 HEAP32[i21 >> 2] = i24 + (HEAPU8[i23 >> 0] | 0);
 do if (!i11) if (!(FUNCTION_TABLE_ii[HEAP32[i4 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  return i8 | 0;
 } else {
  i25 = HEAP32[i6 >> 2] | 0;
  i26 = HEAP32[i4 >> 2] | 0;
  break;
 } else {
  i25 = i11;
  i26 = i22;
 } while (0);
 i22 = i1 + 36 | 0;
 HEAP32[i22 >> 2] = HEAPU8[i26 >> 0];
 i11 = i5 + -8 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i5 + 24 >> 2] = HEAP32[i1 + 416 >> 2];
 HEAP32[i5 + 28 >> 2] = HEAP32[i21 >> 2];
 HEAP32[i5 + 32 >> 2] = HEAP32[i16 >> 2];
 HEAP32[i5 + 36 >> 2] = HEAP32[i22 >> 2];
 HEAP32[i5 + 20 >> 2] = 100;
 FUNCTION_TABLE_vii[HEAP32[i5 + 4 >> 2] & 63](i1, 1);
 i5 = i1 + 440 | 0;
 if (HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0) {
  i23 = HEAP32[i1 >> 2] | 0;
  HEAP32[i23 + 20 >> 2] = 58;
  FUNCTION_TABLE_vi[HEAP32[i23 >> 2] & 255](i1);
 }
 if (((HEAP32[i16 >> 2] | 0) != 0 ? (HEAP32[i21 >> 2] | 0) != 0 : 0) ? (i21 = HEAP32[i22 >> 2] | 0, (i21 | 0) >= 1) : 0) i27 = i21; else {
  i21 = HEAP32[i1 >> 2] | 0;
  HEAP32[i21 + 20 >> 2] = 32;
  FUNCTION_TABLE_vi[HEAP32[i21 >> 2] & 255](i1);
  i27 = HEAP32[i22 >> 2] | 0;
 }
 if ((i11 | 0) != (i27 * 3 | 0)) {
  i27 = HEAP32[i1 >> 2] | 0;
  HEAP32[i27 + 20 >> 2] = 11;
  FUNCTION_TABLE_vi[HEAP32[i27 >> 2] & 255](i1);
 }
 i27 = i1 + 216 | 0;
 i11 = HEAP32[i27 >> 2] | 0;
 if (!i11) {
  i21 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, (HEAP32[i22 >> 2] | 0) * 84 | 0) | 0;
  HEAP32[i27 >> 2] = i21;
  i28 = i21;
 } else i28 = i11;
 i11 = i25 + -1 | 0;
 i25 = i26 + 1 | 0;
 L64 : do if ((HEAP32[i22 >> 2] | 0) > 0) {
  i26 = i4 + 12 | 0;
  i21 = 0;
  i27 = i28;
  i16 = i25;
  i23 = i11;
  while (1) {
   HEAP32[i27 + 4 >> 2] = i21;
   if (!i23) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
     i8 = 0;
     i29 = 48;
     break;
    }
    i30 = HEAP32[i6 >> 2] | 0;
    i31 = HEAP32[i4 >> 2] | 0;
   } else {
    i30 = i23;
    i31 = i16;
   }
   i24 = i30 + -1 | 0;
   i20 = i31 + 1 | 0;
   HEAP32[i27 >> 2] = HEAPU8[i31 >> 0];
   if (!i24) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
     i8 = 0;
     i29 = 48;
     break;
    }
    i32 = HEAP32[i6 >> 2] | 0;
    i33 = HEAP32[i4 >> 2] | 0;
   } else {
    i32 = i24;
    i33 = i20;
   }
   i20 = i32 + -1 | 0;
   i24 = i33 + 1 | 0;
   i17 = HEAPU8[i33 >> 0] | 0;
   i18 = i27 + 8 | 0;
   HEAP32[i18 >> 2] = i17 >>> 4;
   i19 = i27 + 12 | 0;
   HEAP32[i19 >> 2] = i17 & 15;
   if (!i20) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i26 >> 2] & 127](i1) | 0)) {
     i8 = 0;
     i29 = 48;
     break;
    }
    i34 = HEAP32[i6 >> 2] | 0;
    i35 = HEAP32[i4 >> 2] | 0;
   } else {
    i34 = i20;
    i35 = i24;
   }
   i24 = i27 + 16 | 0;
   HEAP32[i24 >> 2] = HEAPU8[i35 >> 0];
   i20 = HEAP32[i1 >> 2] | 0;
   HEAP32[i20 + 24 >> 2] = HEAP32[i27 >> 2];
   HEAP32[i20 + 28 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i20 + 32 >> 2] = HEAP32[i19 >> 2];
   HEAP32[i20 + 36 >> 2] = HEAP32[i24 >> 2];
   HEAP32[i20 + 20 >> 2] = 101;
   FUNCTION_TABLE_vii[HEAP32[i20 + 4 >> 2] & 63](i1, 1);
   i21 = i21 + 1 | 0;
   i20 = i34 + -1 | 0;
   i24 = i35 + 1 | 0;
   if ((i21 | 0) >= (HEAP32[i22 >> 2] | 0)) {
    i36 = i20;
    i37 = i24;
    break L64;
   } else {
    i27 = i27 + 84 | 0;
    i16 = i24;
    i23 = i20;
   }
  }
  if ((i29 | 0) == 48) return i8 | 0;
 } else {
  i36 = i11;
  i37 = i25;
 } while (0);
 HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] = 1;
 HEAP32[i4 >> 2] = i37;
 HEAP32[i6 >> 2] = i36;
 i8 = 1;
 return i8 | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_RKNS_28BinaryHierarchicalClusteringILi96EEE(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 i7 = i1 + 4 | 0;
 HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
 i8 = i2 + 16 | 0;
 i9 = i2 + 20 | 0;
 i10 = (HEAP32[i9 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) | 0;
 if (!i10) {
  i11 = 0;
  STACKTOP = i5;
  return i11 | 0;
 }
 if ((HEAP32[i3 + 20 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
  i11 = 0;
  STACKTOP = i5;
  return i11 | 0;
 }
 __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i1, (i10 | 0) / 20 | 0);
 L7 : do if ((HEAP32[i9 >> 2] | 0) == (HEAP32[i8 >> 2] | 0)) i12 = 0; else {
  i10 = i2 + 4 | 0;
  i13 = i2 + 16 | 0;
  i14 = i4 + 72 | 0;
  i15 = i4 + 76 | 0;
  i16 = i3 + 16 | 0;
  i17 = i3 + 4 | 0;
  i18 = i6 + 4 | 0;
  i19 = i1 + 8 | 0;
  i20 = i1 + 12 | 0;
  i21 = i6 + 4 | 0;
  i22 = 0;
  L9 : while (1) {
   i23 = Math_imul(HEAP32[i2 >> 2] | 0, i22) | 0;
   i24 = (HEAP32[i10 >> 2] | 0) + i23 | 0;
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryEPKh(i4, i24) | 0;
   i23 = HEAP32[i14 >> 2] | 0;
   do if ((HEAP32[i15 >> 2] | 0) != (i23 | 0)) {
    i25 = (HEAP32[i13 >> 2] | 0) + (i22 * 20 | 0) + 16 | 0;
    i26 = 0;
    i27 = -1;
    i28 = -1;
    i29 = 2147483647;
    i30 = i23;
    while (1) {
     i31 = HEAP32[i30 + (i26 << 2) >> 2] | 0;
     do if ((HEAP8[i25 >> 0] | 0) == (HEAP8[(HEAP32[i16 >> 2] | 0) + (i31 * 20 | 0) + 16 >> 0] | 0)) {
      i32 = Math_imul(HEAP32[i3 >> 2] | 0, i31) | 0;
      i33 = __ZN6vision18HammingDistance768EPKjS1_(i24, (HEAP32[i17 >> 2] | 0) + i32 | 0) | 0;
      if (i33 >>> 0 < i27 >>> 0) {
       i32 = HEAP32[i14 >> 2] | 0;
       i34 = i33;
       i35 = i27;
       i36 = HEAP32[i32 + (i26 << 2) >> 2] | 0;
       i37 = i32;
       break;
      } else {
       i34 = i27;
       i35 = i33 >>> 0 < i28 >>> 0 ? i33 : i28;
       i36 = i29;
       i37 = HEAP32[i14 >> 2] | 0;
       break;
      }
     } else {
      i34 = i27;
      i35 = i28;
      i36 = i29;
      i37 = i30;
     } while (0);
     i26 = i26 + 1 | 0;
     if (i26 >>> 0 >= (HEAP32[i15 >> 2] | 0) - i37 >> 2 >>> 0) break; else {
      i27 = i34;
      i28 = i35;
      i29 = i36;
      i30 = i37;
     }
    }
    if ((i34 | 0) != -1) {
     if ((i36 | 0) == -1) break L9;
     if ((i35 | 0) == -1) {
      HEAP32[i6 >> 2] = i22;
      HEAP32[i18 >> 2] = i36;
      i30 = HEAP32[i7 >> 2] | 0;
      if (i30 >>> 0 < (HEAP32[i19 >> 2] | 0) >>> 0) {
       i29 = i6;
       i28 = HEAP32[i29 + 4 >> 2] | 0;
       i27 = i30;
       HEAP32[i27 >> 2] = HEAP32[i29 >> 2];
       HEAP32[i27 + 4 >> 2] = i28;
       HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i6);
      break;
     }
     if (+(i34 >>> 0) / +(i35 >>> 0) < +HEAPF32[i20 >> 2]) {
      HEAP32[i6 >> 2] = i22;
      HEAP32[i21 >> 2] = i36;
      i28 = HEAP32[i7 >> 2] | 0;
      if (i28 >>> 0 < (HEAP32[i19 >> 2] | 0) >>> 0) {
       i27 = i6;
       i29 = HEAP32[i27 + 4 >> 2] | 0;
       i30 = i28;
       HEAP32[i30 >> 2] = HEAP32[i27 >> 2];
       HEAP32[i30 + 4 >> 2] = i29;
       HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i6);
     }
    }
   } while (0);
   i22 = i22 + 1 | 0;
   i24 = ((HEAP32[i9 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) | 0) / 20 | 0;
   if (i22 >>> 0 >= i24 >>> 0) {
    i12 = i24;
    break L7;
   }
  }
  i22 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29479, 71) | 0, 29324, 121) | 0, 33554, 6) | 0, 160) | 0, 33561, 2) | 0, 29551, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i22 + (HEAP32[(HEAP32[i22 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i19 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i19 >> 2] | 0) + 28 >> 2] & 63](i19, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i22, i21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i22) | 0;
  _abort();
 } while (0);
 i8 = (HEAP32[i7 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3;
 if (i8 >>> 0 > i12 >>> 0) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29569, 59) | 0, 29324, 121) | 0, 33554, 6) | 0, 175) | 0, 33561, 2) | 0, 29629, 33) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 } else {
  i11 = i8;
  STACKTOP = i5;
  return i11 | 0;
 }
 return 0;
}

function __ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0;
 d4 = -+HEAPF32[i2 + (i3 << 2) >> 2];
 HEAPF32[i1 >> 2] = +HEAPF32[i2 >> 2] * d4;
 i5 = i1 + 4 | 0;
 HEAPF32[i5 >> 2] = +HEAPF32[i2 + 4 >> 2] * d4;
 i6 = i1 + 8 | 0;
 HEAPF32[i6 >> 2] = +HEAPF32[i2 + 8 >> 2] * d4;
 i7 = i1 + 12 | 0;
 HEAPF32[i7 >> 2] = +HEAPF32[i2 + 12 >> 2] * d4;
 i8 = i1 + 16 | 0;
 HEAPF32[i8 >> 2] = +HEAPF32[i2 + 16 >> 2] * d4;
 i9 = i1 + 20 | 0;
 HEAPF32[i9 >> 2] = +HEAPF32[i2 + 20 >> 2] * d4;
 i10 = i1 + 24 | 0;
 HEAPF32[i10 >> 2] = +HEAPF32[i2 + 24 >> 2] * d4;
 i11 = i1 + 28 | 0;
 HEAPF32[i11 >> 2] = +HEAPF32[i2 + 28 >> 2] * d4;
 i12 = i1 + 32 | 0;
 HEAPF32[i12 >> 2] = +HEAPF32[i2 + 32 >> 2] * d4;
 i13 = i1 + (i3 << 2) | 0;
 HEAPF32[i13 >> 2] = +HEAPF32[i13 >> 2] + 1.0;
 d4 = -+HEAPF32[i2 + (i3 + 9 << 2) >> 2];
 d14 = +HEAPF32[i1 >> 2] + +HEAPF32[i2 + 36 >> 2] * d4;
 HEAPF32[i1 >> 2] = d14;
 d15 = +HEAPF32[i5 >> 2] + +HEAPF32[i2 + 40 >> 2] * d4;
 HEAPF32[i5 >> 2] = d15;
 d16 = +HEAPF32[i6 >> 2] + +HEAPF32[i2 + 44 >> 2] * d4;
 HEAPF32[i6 >> 2] = d16;
 d17 = +HEAPF32[i7 >> 2] + +HEAPF32[i2 + 48 >> 2] * d4;
 HEAPF32[i7 >> 2] = d17;
 d18 = +HEAPF32[i8 >> 2] + +HEAPF32[i2 + 52 >> 2] * d4;
 HEAPF32[i8 >> 2] = d18;
 d19 = +HEAPF32[i9 >> 2] + +HEAPF32[i2 + 56 >> 2] * d4;
 HEAPF32[i9 >> 2] = d19;
 d20 = +HEAPF32[i10 >> 2] + +HEAPF32[i2 + 60 >> 2] * d4;
 HEAPF32[i10 >> 2] = d20;
 d21 = +HEAPF32[i11 >> 2] + +HEAPF32[i2 + 64 >> 2] * d4;
 HEAPF32[i11 >> 2] = d21;
 d22 = +HEAPF32[i12 >> 2] + +HEAPF32[i2 + 68 >> 2] * d4;
 HEAPF32[i12 >> 2] = d22;
 d4 = -+HEAPF32[i2 + (i3 + 18 << 2) >> 2];
 d23 = d14 + +HEAPF32[i2 + 72 >> 2] * d4;
 HEAPF32[i1 >> 2] = d23;
 d14 = d15 + +HEAPF32[i2 + 76 >> 2] * d4;
 HEAPF32[i5 >> 2] = d14;
 d15 = d16 + +HEAPF32[i2 + 80 >> 2] * d4;
 HEAPF32[i6 >> 2] = d15;
 d16 = d17 + +HEAPF32[i2 + 84 >> 2] * d4;
 HEAPF32[i7 >> 2] = d16;
 d17 = d18 + +HEAPF32[i2 + 88 >> 2] * d4;
 HEAPF32[i8 >> 2] = d17;
 d18 = d19 + +HEAPF32[i2 + 92 >> 2] * d4;
 HEAPF32[i9 >> 2] = d18;
 d19 = d20 + +HEAPF32[i2 + 96 >> 2] * d4;
 HEAPF32[i10 >> 2] = d19;
 d20 = d21 + +HEAPF32[i2 + 100 >> 2] * d4;
 HEAPF32[i11 >> 2] = d20;
 d21 = d22 + +HEAPF32[i2 + 104 >> 2] * d4;
 HEAPF32[i12 >> 2] = d21;
 d4 = -+HEAPF32[i2 + (i3 + 27 << 2) >> 2];
 d22 = d23 + +HEAPF32[i2 + 108 >> 2] * d4;
 HEAPF32[i1 >> 2] = d22;
 d23 = d14 + +HEAPF32[i2 + 112 >> 2] * d4;
 HEAPF32[i5 >> 2] = d23;
 d14 = d15 + +HEAPF32[i2 + 116 >> 2] * d4;
 HEAPF32[i6 >> 2] = d14;
 d15 = d16 + +HEAPF32[i2 + 120 >> 2] * d4;
 HEAPF32[i7 >> 2] = d15;
 d16 = d17 + +HEAPF32[i2 + 124 >> 2] * d4;
 HEAPF32[i8 >> 2] = d16;
 d17 = d18 + +HEAPF32[i2 + 128 >> 2] * d4;
 HEAPF32[i9 >> 2] = d17;
 d18 = d19 + +HEAPF32[i2 + 132 >> 2] * d4;
 HEAPF32[i10 >> 2] = d18;
 d19 = d20 + +HEAPF32[i2 + 136 >> 2] * d4;
 HEAPF32[i11 >> 2] = d19;
 d20 = d21 + +HEAPF32[i2 + 140 >> 2] * d4;
 HEAPF32[i12 >> 2] = d20;
 d4 = -+HEAPF32[i2 + (i3 + 36 << 2) >> 2];
 d21 = d22 + +HEAPF32[i2 + 144 >> 2] * d4;
 HEAPF32[i1 >> 2] = d21;
 d22 = d23 + +HEAPF32[i2 + 148 >> 2] * d4;
 HEAPF32[i5 >> 2] = d22;
 d23 = d14 + +HEAPF32[i2 + 152 >> 2] * d4;
 HEAPF32[i6 >> 2] = d23;
 d14 = d15 + +HEAPF32[i2 + 156 >> 2] * d4;
 HEAPF32[i7 >> 2] = d14;
 d15 = d16 + +HEAPF32[i2 + 160 >> 2] * d4;
 HEAPF32[i8 >> 2] = d15;
 d16 = d17 + +HEAPF32[i2 + 164 >> 2] * d4;
 HEAPF32[i9 >> 2] = d16;
 d17 = d18 + +HEAPF32[i2 + 168 >> 2] * d4;
 HEAPF32[i10 >> 2] = d17;
 d18 = d19 + +HEAPF32[i2 + 172 >> 2] * d4;
 HEAPF32[i11 >> 2] = d18;
 d19 = d20 + +HEAPF32[i2 + 176 >> 2] * d4;
 HEAPF32[i12 >> 2] = d19;
 d4 = -+HEAPF32[i2 + (i3 + 45 << 2) >> 2];
 d20 = d21 + +HEAPF32[i2 + 180 >> 2] * d4;
 HEAPF32[i1 >> 2] = d20;
 d21 = d22 + +HEAPF32[i2 + 184 >> 2] * d4;
 HEAPF32[i5 >> 2] = d21;
 d22 = d23 + +HEAPF32[i2 + 188 >> 2] * d4;
 HEAPF32[i6 >> 2] = d22;
 d23 = d14 + +HEAPF32[i2 + 192 >> 2] * d4;
 HEAPF32[i7 >> 2] = d23;
 d14 = d15 + +HEAPF32[i2 + 196 >> 2] * d4;
 HEAPF32[i8 >> 2] = d14;
 d15 = d16 + +HEAPF32[i2 + 200 >> 2] * d4;
 HEAPF32[i9 >> 2] = d15;
 d16 = d17 + +HEAPF32[i2 + 204 >> 2] * d4;
 HEAPF32[i10 >> 2] = d16;
 d17 = d18 + +HEAPF32[i2 + 208 >> 2] * d4;
 HEAPF32[i11 >> 2] = d17;
 d18 = d19 + +HEAPF32[i2 + 212 >> 2] * d4;
 HEAPF32[i12 >> 2] = d18;
 d4 = -+HEAPF32[i2 + (i3 + 54 << 2) >> 2];
 d19 = d20 + +HEAPF32[i2 + 216 >> 2] * d4;
 HEAPF32[i1 >> 2] = d19;
 d20 = d21 + +HEAPF32[i2 + 220 >> 2] * d4;
 HEAPF32[i5 >> 2] = d20;
 d21 = d22 + +HEAPF32[i2 + 224 >> 2] * d4;
 HEAPF32[i6 >> 2] = d21;
 d22 = d23 + +HEAPF32[i2 + 228 >> 2] * d4;
 HEAPF32[i7 >> 2] = d22;
 d23 = d14 + +HEAPF32[i2 + 232 >> 2] * d4;
 HEAPF32[i8 >> 2] = d23;
 d14 = d15 + +HEAPF32[i2 + 236 >> 2] * d4;
 HEAPF32[i9 >> 2] = d14;
 d15 = d16 + +HEAPF32[i2 + 240 >> 2] * d4;
 HEAPF32[i10 >> 2] = d15;
 d16 = d17 + +HEAPF32[i2 + 244 >> 2] * d4;
 HEAPF32[i11 >> 2] = d16;
 d17 = d18 + +HEAPF32[i2 + 248 >> 2] * d4;
 HEAPF32[i12 >> 2] = d17;
 d4 = -+HEAPF32[i2 + (i3 + 63 << 2) >> 2];
 d18 = d19 + +HEAPF32[i2 + 252 >> 2] * d4;
 HEAPF32[i1 >> 2] = d18;
 d19 = d20 + +HEAPF32[i2 + 256 >> 2] * d4;
 HEAPF32[i5 >> 2] = d19;
 d20 = d21 + +HEAPF32[i2 + 260 >> 2] * d4;
 HEAPF32[i6 >> 2] = d20;
 d21 = d22 + +HEAPF32[i2 + 264 >> 2] * d4;
 HEAPF32[i7 >> 2] = d21;
 d22 = d23 + +HEAPF32[i2 + 268 >> 2] * d4;
 HEAPF32[i8 >> 2] = d22;
 d23 = d14 + +HEAPF32[i2 + 272 >> 2] * d4;
 HEAPF32[i9 >> 2] = d23;
 d14 = d15 + +HEAPF32[i2 + 276 >> 2] * d4;
 HEAPF32[i10 >> 2] = d14;
 d15 = d16 + +HEAPF32[i2 + 280 >> 2] * d4;
 HEAPF32[i11 >> 2] = d15;
 d16 = d17 + +HEAPF32[i2 + 284 >> 2] * d4;
 HEAPF32[i12 >> 2] = d16;
 d4 = d18 * d18 + d19 * d19 + d20 * d20 + d21 * d21 + d22 * d22 + d23 * d23 + d14 * d14 + d15 * d15 + d16 * d16;
 if (d4 == 0.0) {
  d24 = 0.0;
  return +d24;
 }
 d17 = +Math_sqrt(+d4);
 d4 = 1.0 / d17;
 HEAPF32[i1 >> 2] = d18 * d4;
 HEAPF32[i5 >> 2] = d19 * d4;
 HEAPF32[i6 >> 2] = d20 * d4;
 HEAPF32[i7 >> 2] = d21 * d4;
 HEAPF32[i8 >> 2] = d22 * d4;
 HEAPF32[i9 >> 2] = d23 * d4;
 HEAPF32[i10 >> 2] = d14 * d4;
 HEAPF32[i11 >> 2] = d15 * d4;
 HEAPF32[i12 >> 2] = d16 * d4;
 d24 = d17;
 return +d24;
}

function __ZN6vision22SolveHomography4PointsIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_(i1, i2, i3, i4, i5, i6, i7, i8, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, i24 = 0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, d31 = 0.0, d32 = 0.0, d33 = 0.0, d34 = 0.0, d35 = 0.0, d36 = 0.0, d37 = 0.0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 i11 = i10 + 48 | 0;
 i12 = i10;
 d13 = +HEAPF32[i2 >> 2];
 d14 = +HEAPF32[i3 >> 2];
 d15 = +HEAPF32[i4 >> 2];
 d16 = +HEAPF32[i5 >> 2];
 d17 = (d13 + d14 + d15 + d16) * .25;
 d18 = +HEAPF32[i2 + 4 >> 2];
 d19 = +HEAPF32[i3 + 4 >> 2];
 d20 = +HEAPF32[i4 + 4 >> 2];
 d21 = +HEAPF32[i5 + 4 >> 2];
 d22 = (d18 + d19 + d20 + d21) * .25;
 d23 = d13 - d17;
 d13 = d18 - d22;
 d18 = d14 - d17;
 d14 = d19 - d22;
 d19 = d15 - d17;
 d15 = d20 - d22;
 d20 = d16 - d17;
 d16 = d21 - d22;
 d21 = (+Math_sqrt(+(d20 * d20 + d16 * d16)) + (+Math_sqrt(+(d19 * d19 + d15 * d15)) + (+Math_sqrt(+(d23 * d23 + d13 * d13)) + +Math_sqrt(+(d18 * d18 + d14 * d14))))) * .25;
 if (d21 == 0.0) {
  i24 = 0;
  STACKTOP = i10;
  return i24 | 0;
 }
 d25 = 1.0 / d21 * 1.4142135623730951;
 d21 = d23 * d25;
 d23 = d13 * d25;
 d13 = d18 * d25;
 d18 = d14 * d25;
 d14 = d19 * d25;
 d19 = d15 * d25;
 d15 = d20 * d25;
 d20 = d16 * d25;
 d16 = +HEAPF32[i6 >> 2];
 d26 = +HEAPF32[i7 >> 2];
 d27 = +HEAPF32[i8 >> 2];
 d28 = +HEAPF32[i9 >> 2];
 d29 = (d16 + d26 + d27 + d28) * .25;
 d30 = +HEAPF32[i6 + 4 >> 2];
 d31 = +HEAPF32[i7 + 4 >> 2];
 d32 = +HEAPF32[i8 + 4 >> 2];
 d33 = +HEAPF32[i9 + 4 >> 2];
 d34 = (d30 + d31 + d32 + d33) * .25;
 d35 = d16 - d29;
 d16 = d30 - d34;
 d30 = d26 - d29;
 d26 = d31 - d34;
 d31 = d27 - d29;
 d27 = d32 - d34;
 d32 = d28 - d29;
 d28 = d33 - d34;
 d33 = (+Math_sqrt(+(d32 * d32 + d28 * d28)) + (+Math_sqrt(+(d31 * d31 + d27 * d27)) + (+Math_sqrt(+(d35 * d35 + d16 * d16)) + +Math_sqrt(+(d30 * d30 + d26 * d26))))) * .25;
 if (d33 == 0.0) {
  i24 = 0;
  STACKTOP = i10;
  return i24 | 0;
 }
 d36 = 1.0 / d33 * 1.4142135623730951;
 d33 = d35 * d36;
 d35 = d16 * d36;
 d16 = d30 * d36;
 d30 = d26 * d36;
 d26 = d31 * d36;
 d31 = d27 * d36;
 d27 = d32 * d36;
 d32 = d28 * d36;
 d28 = -d21;
 HEAPF32[i11 >> 2] = d28;
 d37 = -d23;
 HEAPF32[i11 + 4 >> 2] = d37;
 HEAPF32[i11 + 8 >> 2] = -1.0;
 i9 = i11 + 12 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAPF32[i11 + 24 >> 2] = d21 * d33;
 HEAPF32[i11 + 28 >> 2] = d23 * d33;
 HEAPF32[i11 + 32 >> 2] = d33;
 i9 = i11 + 36 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAPF32[i11 + 48 >> 2] = d28;
 HEAPF32[i11 + 52 >> 2] = d37;
 HEAPF32[i11 + 56 >> 2] = -1.0;
 HEAPF32[i11 + 60 >> 2] = d21 * d35;
 HEAPF32[i11 + 64 >> 2] = d23 * d35;
 HEAPF32[i11 + 68 >> 2] = d35;
 d35 = -d13;
 HEAPF32[i11 + 72 >> 2] = d35;
 d23 = -d18;
 HEAPF32[i11 + 76 >> 2] = d23;
 HEAPF32[i11 + 80 >> 2] = -1.0;
 i9 = i11 + 84 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAPF32[i11 + 96 >> 2] = d13 * d16;
 HEAPF32[i11 + 100 >> 2] = d18 * d16;
 HEAPF32[i11 + 104 >> 2] = d16;
 i9 = i11 + 108 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAPF32[i11 + 120 >> 2] = d35;
 HEAPF32[i11 + 124 >> 2] = d23;
 HEAPF32[i11 + 128 >> 2] = -1.0;
 HEAPF32[i11 + 132 >> 2] = d13 * d30;
 HEAPF32[i11 + 136 >> 2] = d18 * d30;
 HEAPF32[i11 + 140 >> 2] = d30;
 d30 = -d14;
 HEAPF32[i11 + 144 >> 2] = d30;
 d18 = -d19;
 HEAPF32[i11 + 148 >> 2] = d18;
 HEAPF32[i11 + 152 >> 2] = -1.0;
 i9 = i11 + 156 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAPF32[i11 + 168 >> 2] = d14 * d26;
 HEAPF32[i11 + 172 >> 2] = d19 * d26;
 HEAPF32[i11 + 176 >> 2] = d26;
 i9 = i11 + 180 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAPF32[i11 + 192 >> 2] = d30;
 HEAPF32[i11 + 196 >> 2] = d18;
 HEAPF32[i11 + 200 >> 2] = -1.0;
 HEAPF32[i11 + 204 >> 2] = d14 * d31;
 HEAPF32[i11 + 208 >> 2] = d19 * d31;
 HEAPF32[i11 + 212 >> 2] = d31;
 d31 = -d15;
 HEAPF32[i11 + 216 >> 2] = d31;
 d19 = -d20;
 HEAPF32[i11 + 220 >> 2] = d19;
 HEAPF32[i11 + 224 >> 2] = -1.0;
 i9 = i11 + 228 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAPF32[i11 + 240 >> 2] = d15 * d27;
 HEAPF32[i11 + 244 >> 2] = d20 * d27;
 HEAPF32[i11 + 248 >> 2] = d27;
 i9 = i11 + 252 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAPF32[i11 + 264 >> 2] = d31;
 HEAPF32[i11 + 268 >> 2] = d19;
 HEAPF32[i11 + 272 >> 2] = -1.0;
 HEAPF32[i11 + 276 >> 2] = d15 * d32;
 HEAPF32[i11 + 280 >> 2] = d20 * d32;
 HEAPF32[i11 + 284 >> 2] = d32;
 if (!(__ZN6vision29SolveNullVector8x9DestructiveIfEEbPT_S2_(i12, i11) | 0)) {
  i24 = 0;
  STACKTOP = i10;
  return i24 | 0;
 }
 d32 = +HEAPF32[i12 + 16 >> 2];
 d20 = +HEAPF32[i12 + 20 >> 2];
 d15 = +HEAPF32[i12 + 28 >> 2];
 d19 = +HEAPF32[i12 + 32 >> 2];
 d31 = +HEAPF32[i12 + 12 >> 2];
 d27 = +HEAPF32[i12 + 24 >> 2];
 d14 = +HEAPF32[i12 >> 2];
 d18 = +HEAPF32[i12 + 4 >> 2];
 d30 = +HEAPF32[i12 + 8 >> 2];
 if (+Math_abs(+((d32 * d19 - d20 * d15) * d14 - d18 * (d19 * d31 - d20 * d27) + (d15 * d31 - d32 * d27) * d30)) < 1.0e-05) {
  i24 = 0;
  STACKTOP = i10;
  return i24 | 0;
 }
 d26 = d29 * d27 + d14 / d36;
 d14 = d29 * d15 + d18 / d36;
 d18 = d34 * d27 + d31 / d36;
 d31 = d34 * d15 + d32 / d36;
 d32 = d17 * d25;
 d13 = d22 * d25;
 HEAPF32[i1 >> 2] = d26 * d25;
 HEAPF32[i1 + 4 >> 2] = d14 * d25;
 HEAPF32[i1 + 8 >> 2] = d29 * d19 + d30 / d36 - d32 * d26 - d13 * d14;
 HEAPF32[i1 + 12 >> 2] = d18 * d25;
 HEAPF32[i1 + 16 >> 2] = d31 * d25;
 HEAPF32[i1 + 20 >> 2] = d34 * d19 + d20 / d36 - d32 * d18 - d13 * d31;
 d31 = d27 * d25;
 HEAPF32[i1 + 24 >> 2] = d31;
 d27 = d15 * d25;
 HEAPF32[i1 + 28 >> 2] = d27;
 HEAPF32[i1 + 32 >> 2] = d19 - d17 * d31 - d22 * d27;
 i24 = 1;
 STACKTOP = i10;
 return i24 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, d38 = 0.0, i39 = 0, i40 = 0, i41 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 i7 = i1 + 160 | 0;
 i8 = i1 + 328 | 0;
 i9 = i1 + 324 | 0;
 i10 = i1 + 312 | 0;
 i11 = i1 + 300 | 0;
 i12 = i1 + 296 | 0;
 i13 = i1;
 i14 = i1 + 292 | 0;
 i15 = i1 + 288 | 0;
 i16 = i1 + 333 | 0;
 i17 = i1 + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i10, i4, i7, i8, i9);
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i11 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i11 + 11 | 0;
 i18 = i11 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i19 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i19 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i19, 0);
 i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
 HEAP32[i12 >> 2] = i19;
 HEAP32[i14 >> 2] = i13;
 HEAP32[i15 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i17 >> 0] = 69;
 i20 = i11 + 4 | 0;
 i21 = HEAP32[i2 >> 2] | 0;
 i22 = i19;
 i19 = i21;
 i23 = i21;
 L8 : while (1) {
  if (i23) {
   i21 = HEAP32[i23 + 12 >> 2] | 0;
   if ((i21 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i24 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i21 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i24, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i25 = 0;
    i26 = 1;
    i27 = 0;
   } else {
    i25 = i19;
    i26 = 0;
    i27 = i23;
   }
  } else {
   i25 = 0;
   i26 = 1;
   i27 = 0;
  }
  i21 = HEAP32[i3 >> 2] | 0;
  do if (i21) {
   i28 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i28 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i29 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i28 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i29, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i26) {
    i30 = i21;
    break;
   } else {
    i31 = i22;
    i32 = i21;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i33 = 19;
    break;
   }
  } else i33 = 19; while (0);
  if ((i33 | 0) == 19) {
   i33 = 0;
   if (i26) {
    i31 = i22;
    i32 = 0;
    break;
   } else i30 = 0;
  }
  i21 = HEAP8[i4 >> 0] | 0;
  i28 = i21 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i21 & 255;
  if ((HEAP32[i12 >> 2] | 0) == (i22 + i28 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i28 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i34 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i34 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i34, 0);
   i21 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
   HEAP32[i12 >> 2] = i21 + i28;
   i35 = i21;
  } else i35 = i22;
  i21 = i27 + 12 | 0;
  i28 = HEAP32[i21 >> 2] | 0;
  i36 = i27 + 16 | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i37 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i28 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i37, i16, i17, i35, i12, HEAP32[i8 >> 2] | 0, HEAP32[i9 >> 2] | 0, i10, i13, i14, i15, i7) | 0) {
   i31 = i35;
   i32 = i30;
   break;
  }
  i28 = HEAP32[i21 >> 2] | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 40 >> 2] & 127](i27) | 0; else {
   HEAP32[i21 >> 2] = i28 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i28 >> 2] | 0) | 0;
  }
  i22 = i35;
  i19 = i25;
  i23 = i27;
 }
 i23 = HEAP8[i10 + 11 >> 0] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : ((i23 << 24 >> 24 < 0 ? HEAP32[i10 + 4 >> 2] | 0 : i23 & 255) | 0) == 0) ? (i23 = HEAP32[i14 >> 2] | 0, (i23 - i13 | 0) < 160) : 0) {
  i16 = HEAP32[i15 >> 2] | 0;
  HEAP32[i14 >> 2] = i23 + 4;
  HEAP32[i23 >> 2] = i16;
 }
 d38 = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj(i31, HEAP32[i12 >> 2] | 0, i5);
 HEAPF32[i6 >> 2] = d38;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i10, i13, HEAP32[i14 >> 2] | 0, i5);
 if (i27) {
  i14 = HEAP32[i27 + 12 >> 2] | 0;
  if ((i14 | 0) == (HEAP32[i27 + 16 >> 2] | 0)) i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i39 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i14 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i39, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i40 = 1;
  } else i40 = 0;
 } else i40 = 1;
 do if (i32) {
  i39 = HEAP32[i32 + 12 >> 2] | 0;
  if ((i39 | 0) == (HEAP32[i32 + 16 >> 2] | 0)) i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i32 >> 2] | 0) + 36 >> 2] & 127](i32) | 0; else i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i41, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i40) break; else {
   i33 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i33 = 48;
   break;
  }
 } else i33 = 48; while (0);
 if ((i33 | 0) == 48 ? i40 : 0) i33 = 50;
 if ((i33 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 STACKTOP = i1;
 return i5 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, d38 = 0.0, i39 = 0, i40 = 0, i41 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 i7 = i1 + 160 | 0;
 i8 = i1 + 328 | 0;
 i9 = i1 + 324 | 0;
 i10 = i1 + 312 | 0;
 i11 = i1 + 300 | 0;
 i12 = i1 + 296 | 0;
 i13 = i1;
 i14 = i1 + 292 | 0;
 i15 = i1 + 288 | 0;
 i16 = i1 + 333 | 0;
 i17 = i1 + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i10, i4, i7, i8, i9);
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i11 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i11 + 11 | 0;
 i18 = i11 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i19 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i19 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i19, 0);
 i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
 HEAP32[i12 >> 2] = i19;
 HEAP32[i14 >> 2] = i13;
 HEAP32[i15 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i17 >> 0] = 69;
 i20 = i11 + 4 | 0;
 i21 = HEAP32[i2 >> 2] | 0;
 i22 = i19;
 i19 = i21;
 i23 = i21;
 L8 : while (1) {
  if (i23) {
   i21 = HEAP32[i23 + 12 >> 2] | 0;
   if ((i21 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i24 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i21 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i24, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i25 = 0;
    i26 = 1;
    i27 = 0;
   } else {
    i25 = i19;
    i26 = 0;
    i27 = i23;
   }
  } else {
   i25 = 0;
   i26 = 1;
   i27 = 0;
  }
  i21 = HEAP32[i3 >> 2] | 0;
  do if (i21) {
   i28 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i28 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i29 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i28 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i29, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i26) {
    i30 = i21;
    break;
   } else {
    i31 = i22;
    i32 = i21;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i33 = 19;
    break;
   }
  } else i33 = 19; while (0);
  if ((i33 | 0) == 19) {
   i33 = 0;
   if (i26) {
    i31 = i22;
    i32 = 0;
    break;
   } else i30 = 0;
  }
  i21 = HEAP8[i4 >> 0] | 0;
  i28 = i21 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i21 & 255;
  if ((HEAP32[i12 >> 2] | 0) == (i22 + i28 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i28 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i34 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i34 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i34, 0);
   i21 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
   HEAP32[i12 >> 2] = i21 + i28;
   i35 = i21;
  } else i35 = i22;
  i21 = i27 + 12 | 0;
  i28 = HEAP32[i21 >> 2] | 0;
  i36 = i27 + 16 | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i37 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i28 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i37, i16, i17, i35, i12, HEAP32[i8 >> 2] | 0, HEAP32[i9 >> 2] | 0, i10, i13, i14, i15, i7) | 0) {
   i31 = i35;
   i32 = i30;
   break;
  }
  i28 = HEAP32[i21 >> 2] | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 40 >> 2] & 127](i27) | 0; else {
   HEAP32[i21 >> 2] = i28 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i28 >> 2] | 0) | 0;
  }
  i22 = i35;
  i19 = i25;
  i23 = i27;
 }
 i23 = HEAP8[i10 + 11 >> 0] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : ((i23 << 24 >> 24 < 0 ? HEAP32[i10 + 4 >> 2] | 0 : i23 & 255) | 0) == 0) ? (i23 = HEAP32[i14 >> 2] | 0, (i23 - i13 | 0) < 160) : 0) {
  i16 = HEAP32[i15 >> 2] | 0;
  HEAP32[i14 >> 2] = i23 + 4;
  HEAP32[i23 >> 2] = i16;
 }
 d38 = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj(i31, HEAP32[i12 >> 2] | 0, i5);
 HEAPF64[i6 >> 3] = d38;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i10, i13, HEAP32[i14 >> 2] | 0, i5);
 if (i27) {
  i14 = HEAP32[i27 + 12 >> 2] | 0;
  if ((i14 | 0) == (HEAP32[i27 + 16 >> 2] | 0)) i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i39 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i14 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i39, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i40 = 1;
  } else i40 = 0;
 } else i40 = 1;
 do if (i32) {
  i39 = HEAP32[i32 + 12 >> 2] | 0;
  if ((i39 | 0) == (HEAP32[i32 + 16 >> 2] | 0)) i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i32 >> 2] | 0) + 36 >> 2] & 127](i32) | 0; else i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i41, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i40) break; else {
   i33 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i33 = 48;
   break;
  }
 } else i33 = 48; while (0);
 if ((i33 | 0) == 48 ? i40 : 0) i33 = 50;
 if ((i33 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 STACKTOP = i1;
 return i5 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, d38 = 0.0, i39 = 0, i40 = 0, i41 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 i7 = i1 + 160 | 0;
 i8 = i1 + 328 | 0;
 i9 = i1 + 324 | 0;
 i10 = i1 + 312 | 0;
 i11 = i1 + 300 | 0;
 i12 = i1 + 296 | 0;
 i13 = i1;
 i14 = i1 + 292 | 0;
 i15 = i1 + 288 | 0;
 i16 = i1 + 333 | 0;
 i17 = i1 + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i10, i4, i7, i8, i9);
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i11 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i11 + 11 | 0;
 i18 = i11 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i19 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i19 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i19, 0);
 i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
 HEAP32[i12 >> 2] = i19;
 HEAP32[i14 >> 2] = i13;
 HEAP32[i15 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i17 >> 0] = 69;
 i20 = i11 + 4 | 0;
 i21 = HEAP32[i2 >> 2] | 0;
 i22 = i19;
 i19 = i21;
 i23 = i21;
 L8 : while (1) {
  if (i23) {
   i21 = HEAP32[i23 + 12 >> 2] | 0;
   if ((i21 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i24 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i21 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i24, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i25 = 0;
    i26 = 1;
    i27 = 0;
   } else {
    i25 = i19;
    i26 = 0;
    i27 = i23;
   }
  } else {
   i25 = 0;
   i26 = 1;
   i27 = 0;
  }
  i21 = HEAP32[i3 >> 2] | 0;
  do if (i21) {
   i28 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i28 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i29 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i28 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i29, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i26) {
    i30 = i21;
    break;
   } else {
    i31 = i22;
    i32 = i21;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i33 = 19;
    break;
   }
  } else i33 = 19; while (0);
  if ((i33 | 0) == 19) {
   i33 = 0;
   if (i26) {
    i31 = i22;
    i32 = 0;
    break;
   } else i30 = 0;
  }
  i21 = HEAP8[i4 >> 0] | 0;
  i28 = i21 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i21 & 255;
  if ((HEAP32[i12 >> 2] | 0) == (i22 + i28 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i28 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i34 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i34 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i34, 0);
   i21 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
   HEAP32[i12 >> 2] = i21 + i28;
   i35 = i21;
  } else i35 = i22;
  i21 = i27 + 12 | 0;
  i28 = HEAP32[i21 >> 2] | 0;
  i36 = i27 + 16 | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i37 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i28 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i37, i16, i17, i35, i12, HEAP32[i8 >> 2] | 0, HEAP32[i9 >> 2] | 0, i10, i13, i14, i15, i7) | 0) {
   i31 = i35;
   i32 = i30;
   break;
  }
  i28 = HEAP32[i21 >> 2] | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 40 >> 2] & 127](i27) | 0; else {
   HEAP32[i21 >> 2] = i28 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i28 >> 2] | 0) | 0;
  }
  i22 = i35;
  i19 = i25;
  i23 = i27;
 }
 i23 = HEAP8[i10 + 11 >> 0] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : ((i23 << 24 >> 24 < 0 ? HEAP32[i10 + 4 >> 2] | 0 : i23 & 255) | 0) == 0) ? (i23 = HEAP32[i14 >> 2] | 0, (i23 - i13 | 0) < 160) : 0) {
  i16 = HEAP32[i15 >> 2] | 0;
  HEAP32[i14 >> 2] = i23 + 4;
  HEAP32[i23 >> 2] = i16;
 }
 d38 = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj(i31, HEAP32[i12 >> 2] | 0, i5);
 HEAPF64[i6 >> 3] = d38;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i10, i13, HEAP32[i14 >> 2] | 0, i5);
 if (i27) {
  i14 = HEAP32[i27 + 12 >> 2] | 0;
  if ((i14 | 0) == (HEAP32[i27 + 16 >> 2] | 0)) i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i39 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i14 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i39, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i40 = 1;
  } else i40 = 0;
 } else i40 = 1;
 do if (i32) {
  i39 = HEAP32[i32 + 12 >> 2] | 0;
  if ((i39 | 0) == (HEAP32[i32 + 16 >> 2] | 0)) i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i32 >> 2] | 0) + 36 >> 2] & 127](i32) | 0; else i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i39 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i41, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i40) break; else {
   i33 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i33 = 48;
   break;
  }
 } else i33 = 48; while (0);
 if ((i33 | 0) == 48 ? i40 : 0) i33 = 50;
 if ((i33 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 STACKTOP = i1;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, d38 = 0.0, i39 = 0, i40 = 0, i41 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i7 = i1 + 160 | 0;
 i8 = i1 + 231 | 0;
 i9 = i1 + 230 | 0;
 i10 = i1 + 216 | 0;
 i11 = i1 + 204 | 0;
 i12 = i1 + 200 | 0;
 i13 = i1;
 i14 = i1 + 196 | 0;
 i15 = i1 + 192 | 0;
 i16 = i1 + 229 | 0;
 i17 = i1 + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i10, i4, i7, i8, i9);
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i11 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i11 + 11 | 0;
 i18 = i11 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i19 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i19 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i19, 0);
 i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
 HEAP32[i12 >> 2] = i19;
 HEAP32[i14 >> 2] = i13;
 HEAP32[i15 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i17 >> 0] = 69;
 i20 = i11 + 4 | 0;
 i21 = HEAP32[i2 >> 2] | 0;
 i22 = i19;
 i19 = i21;
 i23 = i21;
 L8 : while (1) {
  if (i23) {
   i21 = HEAP32[i23 + 12 >> 2] | 0;
   if ((i21 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i24 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i21 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i24, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i25 = 0;
    i26 = 1;
    i27 = 0;
   } else {
    i25 = i19;
    i26 = 0;
    i27 = i23;
   }
  } else {
   i25 = 0;
   i26 = 1;
   i27 = 0;
  }
  i21 = HEAP32[i3 >> 2] | 0;
  do if (i21) {
   i28 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i28 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i29 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i29, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i26) {
    i30 = i21;
    break;
   } else {
    i31 = i22;
    i32 = i21;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i33 = 19;
    break;
   }
  } else i33 = 19; while (0);
  if ((i33 | 0) == 19) {
   i33 = 0;
   if (i26) {
    i31 = i22;
    i32 = 0;
    break;
   } else i30 = 0;
  }
  i21 = HEAP8[i4 >> 0] | 0;
  i28 = i21 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i21 & 255;
  if ((HEAP32[i12 >> 2] | 0) == (i22 + i28 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i28 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i34 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i34 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i34, 0);
   i21 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
   HEAP32[i12 >> 2] = i21 + i28;
   i35 = i21;
  } else i35 = i22;
  i21 = i27 + 12 | 0;
  i28 = HEAP32[i21 >> 2] | 0;
  i36 = i27 + 16 | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i37 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i37 & 255, i16, i17, i35, i12, HEAP8[i8 >> 0] | 0, HEAP8[i9 >> 0] | 0, i10, i13, i14, i15, i7) | 0) {
   i31 = i35;
   i32 = i30;
   break;
  }
  i28 = HEAP32[i21 >> 2] | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 40 >> 2] & 127](i27) | 0; else {
   HEAP32[i21 >> 2] = i28 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
  }
  i22 = i35;
  i19 = i25;
  i23 = i27;
 }
 i23 = HEAP8[i10 + 11 >> 0] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : ((i23 << 24 >> 24 < 0 ? HEAP32[i10 + 4 >> 2] | 0 : i23 & 255) | 0) == 0) ? (i23 = HEAP32[i14 >> 2] | 0, (i23 - i13 | 0) < 160) : 0) {
  i16 = HEAP32[i15 >> 2] | 0;
  HEAP32[i14 >> 2] = i23 + 4;
  HEAP32[i23 >> 2] = i16;
 }
 d38 = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj(i31, HEAP32[i12 >> 2] | 0, i5);
 HEAPF32[i6 >> 2] = d38;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i10, i13, HEAP32[i14 >> 2] | 0, i5);
 if (i27) {
  i14 = HEAP32[i27 + 12 >> 2] | 0;
  if ((i14 | 0) == (HEAP32[i27 + 16 >> 2] | 0)) i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i39 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i14 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i39, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i40 = 1;
  } else i40 = 0;
 } else i40 = 1;
 do if (i32) {
  i39 = HEAP32[i32 + 12 >> 2] | 0;
  if ((i39 | 0) == (HEAP32[i32 + 16 >> 2] | 0)) i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i32 >> 2] | 0) + 36 >> 2] & 127](i32) | 0; else i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i39 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i41, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i40) break; else {
   i33 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i33 = 48;
   break;
  }
 } else i33 = 48; while (0);
 if ((i33 | 0) == 48 ? i40 : 0) i33 = 50;
 if ((i33 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 STACKTOP = i1;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, d38 = 0.0, i39 = 0, i40 = 0, i41 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i7 = i1 + 160 | 0;
 i8 = i1 + 231 | 0;
 i9 = i1 + 230 | 0;
 i10 = i1 + 216 | 0;
 i11 = i1 + 204 | 0;
 i12 = i1 + 200 | 0;
 i13 = i1;
 i14 = i1 + 196 | 0;
 i15 = i1 + 192 | 0;
 i16 = i1 + 229 | 0;
 i17 = i1 + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i10, i4, i7, i8, i9);
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i11 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i11 + 11 | 0;
 i18 = i11 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i19 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i19 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i19, 0);
 i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
 HEAP32[i12 >> 2] = i19;
 HEAP32[i14 >> 2] = i13;
 HEAP32[i15 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i17 >> 0] = 69;
 i20 = i11 + 4 | 0;
 i21 = HEAP32[i2 >> 2] | 0;
 i22 = i19;
 i19 = i21;
 i23 = i21;
 L8 : while (1) {
  if (i23) {
   i21 = HEAP32[i23 + 12 >> 2] | 0;
   if ((i21 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i24 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i21 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i24, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i25 = 0;
    i26 = 1;
    i27 = 0;
   } else {
    i25 = i19;
    i26 = 0;
    i27 = i23;
   }
  } else {
   i25 = 0;
   i26 = 1;
   i27 = 0;
  }
  i21 = HEAP32[i3 >> 2] | 0;
  do if (i21) {
   i28 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i28 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i29 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i29, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i26) {
    i30 = i21;
    break;
   } else {
    i31 = i22;
    i32 = i21;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i33 = 19;
    break;
   }
  } else i33 = 19; while (0);
  if ((i33 | 0) == 19) {
   i33 = 0;
   if (i26) {
    i31 = i22;
    i32 = 0;
    break;
   } else i30 = 0;
  }
  i21 = HEAP8[i4 >> 0] | 0;
  i28 = i21 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i21 & 255;
  if ((HEAP32[i12 >> 2] | 0) == (i22 + i28 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i28 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i34 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i34 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i34, 0);
   i21 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
   HEAP32[i12 >> 2] = i21 + i28;
   i35 = i21;
  } else i35 = i22;
  i21 = i27 + 12 | 0;
  i28 = HEAP32[i21 >> 2] | 0;
  i36 = i27 + 16 | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i37 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i37 & 255, i16, i17, i35, i12, HEAP8[i8 >> 0] | 0, HEAP8[i9 >> 0] | 0, i10, i13, i14, i15, i7) | 0) {
   i31 = i35;
   i32 = i30;
   break;
  }
  i28 = HEAP32[i21 >> 2] | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 40 >> 2] & 127](i27) | 0; else {
   HEAP32[i21 >> 2] = i28 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
  }
  i22 = i35;
  i19 = i25;
  i23 = i27;
 }
 i23 = HEAP8[i10 + 11 >> 0] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : ((i23 << 24 >> 24 < 0 ? HEAP32[i10 + 4 >> 2] | 0 : i23 & 255) | 0) == 0) ? (i23 = HEAP32[i14 >> 2] | 0, (i23 - i13 | 0) < 160) : 0) {
  i16 = HEAP32[i15 >> 2] | 0;
  HEAP32[i14 >> 2] = i23 + 4;
  HEAP32[i23 >> 2] = i16;
 }
 d38 = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj(i31, HEAP32[i12 >> 2] | 0, i5);
 HEAPF64[i6 >> 3] = d38;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i10, i13, HEAP32[i14 >> 2] | 0, i5);
 if (i27) {
  i14 = HEAP32[i27 + 12 >> 2] | 0;
  if ((i14 | 0) == (HEAP32[i27 + 16 >> 2] | 0)) i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i39 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i14 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i39, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i40 = 1;
  } else i40 = 0;
 } else i40 = 1;
 do if (i32) {
  i39 = HEAP32[i32 + 12 >> 2] | 0;
  if ((i39 | 0) == (HEAP32[i32 + 16 >> 2] | 0)) i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i32 >> 2] | 0) + 36 >> 2] & 127](i32) | 0; else i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i39 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i41, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i40) break; else {
   i33 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i33 = 48;
   break;
  }
 } else i33 = 48; while (0);
 if ((i33 | 0) == 48 ? i40 : 0) i33 = 50;
 if ((i33 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 STACKTOP = i1;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, d38 = 0.0, i39 = 0, i40 = 0, i41 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i7 = i1 + 160 | 0;
 i8 = i1 + 231 | 0;
 i9 = i1 + 230 | 0;
 i10 = i1 + 216 | 0;
 i11 = i1 + 204 | 0;
 i12 = i1 + 200 | 0;
 i13 = i1;
 i14 = i1 + 196 | 0;
 i15 = i1 + 192 | 0;
 i16 = i1 + 229 | 0;
 i17 = i1 + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i10, i4, i7, i8, i9);
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i11 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i11 + 11 | 0;
 i18 = i11 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i19 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i19 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i19, 0);
 i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
 HEAP32[i12 >> 2] = i19;
 HEAP32[i14 >> 2] = i13;
 HEAP32[i15 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i17 >> 0] = 69;
 i20 = i11 + 4 | 0;
 i21 = HEAP32[i2 >> 2] | 0;
 i22 = i19;
 i19 = i21;
 i23 = i21;
 L8 : while (1) {
  if (i23) {
   i21 = HEAP32[i23 + 12 >> 2] | 0;
   if ((i21 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i24 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i21 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i24, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i25 = 0;
    i26 = 1;
    i27 = 0;
   } else {
    i25 = i19;
    i26 = 0;
    i27 = i23;
   }
  } else {
   i25 = 0;
   i26 = 1;
   i27 = 0;
  }
  i21 = HEAP32[i3 >> 2] | 0;
  do if (i21) {
   i28 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i28 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i29 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i29, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i26) {
    i30 = i21;
    break;
   } else {
    i31 = i22;
    i32 = i21;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i33 = 19;
    break;
   }
  } else i33 = 19; while (0);
  if ((i33 | 0) == 19) {
   i33 = 0;
   if (i26) {
    i31 = i22;
    i32 = 0;
    break;
   } else i30 = 0;
  }
  i21 = HEAP8[i4 >> 0] | 0;
  i28 = i21 << 24 >> 24 < 0 ? HEAP32[i20 >> 2] | 0 : i21 & 255;
  if ((HEAP32[i12 >> 2] | 0) == (i22 + i28 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i28 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i34 = (HEAP32[i18 >> 2] & 2147483647) + -1 | 0; else i34 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i11, i34, 0);
   i21 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
   HEAP32[i12 >> 2] = i21 + i28;
   i35 = i21;
  } else i35 = i22;
  i21 = i27 + 12 | 0;
  i28 = HEAP32[i21 >> 2] | 0;
  i36 = i27 + 16 | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i37 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i37 & 255, i16, i17, i35, i12, HEAP8[i8 >> 0] | 0, HEAP8[i9 >> 0] | 0, i10, i13, i14, i15, i7) | 0) {
   i31 = i35;
   i32 = i30;
   break;
  }
  i28 = HEAP32[i21 >> 2] | 0;
  if ((i28 | 0) == (HEAP32[i36 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i27 >> 2] | 0) + 40 >> 2] & 127](i27) | 0; else {
   HEAP32[i21 >> 2] = i28 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
  }
  i22 = i35;
  i19 = i25;
  i23 = i27;
 }
 i23 = HEAP8[i10 + 11 >> 0] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : ((i23 << 24 >> 24 < 0 ? HEAP32[i10 + 4 >> 2] | 0 : i23 & 255) | 0) == 0) ? (i23 = HEAP32[i14 >> 2] | 0, (i23 - i13 | 0) < 160) : 0) {
  i16 = HEAP32[i15 >> 2] | 0;
  HEAP32[i14 >> 2] = i23 + 4;
  HEAP32[i23 >> 2] = i16;
 }
 d38 = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj(i31, HEAP32[i12 >> 2] | 0, i5);
 HEAPF64[i6 >> 3] = d38;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i10, i13, HEAP32[i14 >> 2] | 0, i5);
 if (i27) {
  i14 = HEAP32[i27 + 12 >> 2] | 0;
  if ((i14 | 0) == (HEAP32[i27 + 16 >> 2] | 0)) i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i27) | 0; else i39 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i14 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i39, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i40 = 1;
  } else i40 = 0;
 } else i40 = 1;
 do if (i32) {
  i39 = HEAP32[i32 + 12 >> 2] | 0;
  if ((i39 | 0) == (HEAP32[i32 + 16 >> 2] | 0)) i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i32 >> 2] | 0) + 36 >> 2] & 127](i32) | 0; else i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i39 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i41, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i40) break; else {
   i33 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i33 = 48;
   break;
  }
 } else i33 = 48; while (0);
 if ((i33 | 0) == 48 ? i40 : 0) i33 = 50;
 if ((i33 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 STACKTOP = i1;
 return i5 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis0IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, d15 = 0.0, i16 = 0, d17 = 0.0, i18 = 0, d19 = 0.0, i20 = 0, d21 = 0.0, d22 = 0.0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, d28 = 0.0, d29 = 0.0, d30 = 0.0, i31 = 0, i32 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 d5 = +HEAPF32[i2 >> 2];
 i6 = i2 + 4 | 0;
 d7 = +HEAPF32[i6 >> 2];
 i8 = i2 + 8 | 0;
 d9 = +HEAPF32[i8 >> 2];
 i10 = i2 + 12 | 0;
 d11 = +HEAPF32[i10 >> 2];
 i12 = i2 + 16 | 0;
 d13 = +HEAPF32[i12 >> 2];
 i14 = i2 + 20 | 0;
 d15 = +HEAPF32[i14 >> 2];
 i16 = i2 + 24 | 0;
 d17 = +HEAPF32[i16 >> 2];
 i18 = i2 + 28 | 0;
 d19 = +HEAPF32[i18 >> 2];
 i20 = i2 + 32 | 0;
 d21 = +HEAPF32[i20 >> 2];
 d22 = d5 * d5 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 HEAPF32[i4 >> 2] = d22;
 i23 = i2 + 36 | 0;
 d21 = +HEAPF32[i23 >> 2];
 d19 = +HEAPF32[i2 + 40 >> 2];
 d17 = +HEAPF32[i2 + 44 >> 2];
 d15 = +HEAPF32[i2 + 48 >> 2];
 d13 = +HEAPF32[i2 + 52 >> 2];
 d11 = +HEAPF32[i2 + 56 >> 2];
 d9 = +HEAPF32[i2 + 60 >> 2];
 d7 = +HEAPF32[i2 + 64 >> 2];
 d5 = +HEAPF32[i2 + 68 >> 2];
 i24 = i4 + 4 | 0;
 HEAPF32[i24 >> 2] = d21 * d21 + d19 * d19 + d17 * d17 + d15 * d15 + d13 * d13 + d11 * d11 + d9 * d9 + d7 * d7 + d5 * d5;
 d5 = +HEAPF32[i2 + 72 >> 2];
 d7 = +HEAPF32[i2 + 76 >> 2];
 d9 = +HEAPF32[i2 + 80 >> 2];
 d11 = +HEAPF32[i2 + 84 >> 2];
 d13 = +HEAPF32[i2 + 88 >> 2];
 d15 = +HEAPF32[i2 + 92 >> 2];
 d17 = +HEAPF32[i2 + 96 >> 2];
 d19 = +HEAPF32[i2 + 100 >> 2];
 d21 = +HEAPF32[i2 + 104 >> 2];
 i25 = i4 + 8 | 0;
 HEAPF32[i25 >> 2] = d5 * d5 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 d21 = +HEAPF32[i2 + 108 >> 2];
 d19 = +HEAPF32[i2 + 112 >> 2];
 d17 = +HEAPF32[i2 + 116 >> 2];
 d15 = +HEAPF32[i2 + 120 >> 2];
 d13 = +HEAPF32[i2 + 124 >> 2];
 d11 = +HEAPF32[i2 + 128 >> 2];
 d9 = +HEAPF32[i2 + 132 >> 2];
 d7 = +HEAPF32[i2 + 136 >> 2];
 d5 = +HEAPF32[i2 + 140 >> 2];
 i26 = i4 + 12 | 0;
 HEAPF32[i26 >> 2] = d21 * d21 + d19 * d19 + d17 * d17 + d15 * d15 + d13 * d13 + d11 * d11 + d9 * d9 + d7 * d7 + d5 * d5;
 d5 = +HEAPF32[i2 + 144 >> 2];
 d7 = +HEAPF32[i2 + 148 >> 2];
 d9 = +HEAPF32[i2 + 152 >> 2];
 d11 = +HEAPF32[i2 + 156 >> 2];
 d13 = +HEAPF32[i2 + 160 >> 2];
 d15 = +HEAPF32[i2 + 164 >> 2];
 d17 = +HEAPF32[i2 + 168 >> 2];
 d19 = +HEAPF32[i2 + 172 >> 2];
 d21 = +HEAPF32[i2 + 176 >> 2];
 i27 = i4 + 16 | 0;
 HEAPF32[i27 >> 2] = d5 * d5 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 d21 = +HEAPF32[i2 + 180 >> 2];
 d19 = +HEAPF32[i2 + 184 >> 2];
 d17 = +HEAPF32[i2 + 188 >> 2];
 d15 = +HEAPF32[i2 + 192 >> 2];
 d13 = +HEAPF32[i2 + 196 >> 2];
 d11 = +HEAPF32[i2 + 200 >> 2];
 d9 = +HEAPF32[i2 + 204 >> 2];
 d7 = +HEAPF32[i2 + 208 >> 2];
 d5 = +HEAPF32[i2 + 212 >> 2];
 d28 = d21 * d21 + d19 * d19 + d17 * d17 + d15 * d15 + d13 * d13 + d11 * d11 + d9 * d9 + d7 * d7 + d5 * d5;
 HEAPF32[i4 + 20 >> 2] = d28;
 d5 = +HEAPF32[i2 + 216 >> 2];
 d7 = +HEAPF32[i2 + 220 >> 2];
 d9 = +HEAPF32[i2 + 224 >> 2];
 d11 = +HEAPF32[i2 + 228 >> 2];
 d13 = +HEAPF32[i2 + 232 >> 2];
 d15 = +HEAPF32[i2 + 236 >> 2];
 d17 = +HEAPF32[i2 + 240 >> 2];
 d19 = +HEAPF32[i2 + 244 >> 2];
 d21 = +HEAPF32[i2 + 248 >> 2];
 d29 = d5 * d5 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 HEAPF32[i4 + 24 >> 2] = d29;
 d21 = +HEAPF32[i2 + 252 >> 2];
 d19 = +HEAPF32[i2 + 256 >> 2];
 d17 = +HEAPF32[i2 + 260 >> 2];
 d15 = +HEAPF32[i2 + 264 >> 2];
 d13 = +HEAPF32[i2 + 268 >> 2];
 d11 = +HEAPF32[i2 + 272 >> 2];
 d9 = +HEAPF32[i2 + 276 >> 2];
 d7 = +HEAPF32[i2 + 280 >> 2];
 d5 = +HEAPF32[i2 + 284 >> 2];
 d30 = d21 * d21 + d19 * d19 + d17 * d17 + d15 * d15 + d13 * d13 + d11 * d11 + d9 * d9 + d7 * d7 + d5 * d5;
 HEAPF32[i4 + 28 >> 2] = d30;
 i31 = +HEAPF32[i24 >> 2] > d22 & 1;
 i24 = +HEAPF32[i25 >> 2] > +HEAPF32[i4 + (i31 << 2) >> 2] ? 2 : i31;
 i31 = +HEAPF32[i26 >> 2] > +HEAPF32[i4 + (i24 << 2) >> 2] ? 3 : i24;
 i24 = +HEAPF32[i27 >> 2] > +HEAPF32[i4 + (i31 << 2) >> 2] ? 4 : i31;
 i31 = d28 > +HEAPF32[i4 + (i24 << 2) >> 2] ? 5 : i24;
 i24 = d29 > +HEAPF32[i4 + (i31 << 2) >> 2] ? 6 : i31;
 i31 = d30 > +HEAPF32[i4 + (i24 << 2) >> 2] ? 7 : i24;
 d30 = +HEAPF32[i4 + (i31 << 2) >> 2];
 if (d30 == 0.0) {
  i32 = 0;
  STACKTOP = i3;
  return i32 | 0;
 }
 i4 = i2 + (i31 * 9 << 2) | 0;
 i31 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
 i24 = i4 + 4 | 0;
 HEAP32[i4 >> 2] = i31;
 i31 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i24 >> 2];
 i27 = i4 + 8 | 0;
 HEAP32[i24 >> 2] = i31;
 i31 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i27 >> 2];
 i24 = i4 + 12 | 0;
 HEAP32[i27 >> 2] = i31;
 i31 = HEAP32[i10 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i24 >> 2];
 i27 = i4 + 16 | 0;
 HEAP32[i24 >> 2] = i31;
 i31 = HEAP32[i12 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i27 >> 2];
 i24 = i4 + 20 | 0;
 HEAP32[i27 >> 2] = i31;
 i31 = HEAP32[i14 >> 2] | 0;
 HEAP32[i14 >> 2] = HEAP32[i24 >> 2];
 i27 = i4 + 24 | 0;
 HEAP32[i24 >> 2] = i31;
 i31 = HEAP32[i16 >> 2] | 0;
 HEAP32[i16 >> 2] = HEAP32[i27 >> 2];
 i24 = i4 + 28 | 0;
 HEAP32[i27 >> 2] = i31;
 i31 = HEAP32[i18 >> 2] | 0;
 HEAP32[i18 >> 2] = HEAP32[i24 >> 2];
 i27 = i4 + 32 | 0;
 HEAP32[i24 >> 2] = i31;
 i31 = HEAP32[i20 >> 2] | 0;
 HEAP32[i20 >> 2] = HEAP32[i27 >> 2];
 HEAP32[i27 >> 2] = i31;
 d29 = 1.0 / +Math_sqrt(+d30);
 HEAPF32[i1 >> 2] = d29 * +HEAPF32[i2 >> 2];
 HEAPF32[i1 + 4 >> 2] = d29 * +HEAPF32[i6 >> 2];
 HEAPF32[i1 + 8 >> 2] = d29 * +HEAPF32[i8 >> 2];
 HEAPF32[i1 + 12 >> 2] = d29 * +HEAPF32[i10 >> 2];
 HEAPF32[i1 + 16 >> 2] = d29 * +HEAPF32[i12 >> 2];
 HEAPF32[i1 + 20 >> 2] = d29 * +HEAPF32[i14 >> 2];
 HEAPF32[i1 + 24 >> 2] = d29 * +HEAPF32[i16 >> 2];
 HEAPF32[i1 + 28 >> 2] = d29 * +HEAPF32[i18 >> 2];
 HEAPF32[i1 + 32 >> 2] = d29 * +HEAPF32[i20 >> 2];
 _memcpy(i1 + 36 | 0, i23 | 0, 252) | 0;
 i32 = 1;
 STACKTOP = i3;
 return i32 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i8 = i7 + 300 | 0;
 i9 = i7 + 288 | 0;
 i10 = i7 + 276 | 0;
 i11 = i7 + 272 | 0;
 i12 = i7;
 i13 = i7 + 268 | 0;
 i14 = i7 + 264 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i22, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i27, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i35, i15, i33, i11, i14, HEAP32[i8 >> 2] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 i15 = getTempRet0() | 0;
 i11 = i6;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i11 + 4 >> 2] = i15;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i13 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i36, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i36 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i38, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i8 = i7 + 224 | 0;
 i9 = i7 + 212 | 0;
 i10 = i7 + 200 | 0;
 i11 = i7 + 196 | 0;
 i12 = i7;
 i13 = i7 + 192 | 0;
 i14 = i7 + 188 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i19 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i22, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i27, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i35 & 255, i15, i33, i11, i14, HEAP8[i8 >> 0] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 i15 = getTempRet0() | 0;
 i11 = i6;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i11 + 4 >> 2] = i15;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i13 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i36, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i36 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i38, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i8 = i7 + 300 | 0;
 i9 = i7 + 288 | 0;
 i10 = i7 + 276 | 0;
 i11 = i7 + 272 | 0;
 i12 = i7;
 i13 = i7 + 268 | 0;
 i14 = i7 + 264 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i22, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i27, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i35, i15, i33, i11, i14, HEAP32[i8 >> 2] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 i15 = getTempRet0() | 0;
 i11 = i6;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i11 + 4 >> 2] = i15;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i13 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i36, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i36 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i38, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i8 = i7 + 224 | 0;
 i9 = i7 + 212 | 0;
 i10 = i7 + 200 | 0;
 i11 = i7 + 196 | 0;
 i12 = i7;
 i13 = i7 + 192 | 0;
 i14 = i7 + 188 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i19 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i22, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i27, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i35 & 255, i15, i33, i11, i14, HEAP8[i8 >> 0] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 i15 = getTempRet0() | 0;
 i11 = i6;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i11 + 4 >> 2] = i15;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i13 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i36, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i36 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i38, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0;
 i6 = HEAP32[i1 >> 2] | 0;
 do if (i6) {
  i7 = HEAP32[i6 + 12 >> 2] | 0;
  if ((i7 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i8 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i7 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i8, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i1 >> 2] = 0;
   i9 = 1;
   break;
  } else {
   i9 = (HEAP32[i1 >> 2] | 0) == 0;
   break;
  }
 } else i9 = 1; while (0);
 i8 = HEAP32[i2 >> 2] | 0;
 do if (i8) {
  i6 = HEAP32[i8 + 12 >> 2] | 0;
  if ((i6 | 0) == (HEAP32[i8 + 16 >> 2] | 0)) i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 36 >> 2] & 127](i8) | 0; else i10 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i6 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i10, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i9) {
   i11 = i8;
   i12 = 17;
   break;
  } else {
   i12 = 16;
   break;
  } else {
   HEAP32[i2 >> 2] = 0;
   i12 = 14;
   break;
  }
 } else i12 = 14; while (0);
 if ((i12 | 0) == 14) if (i9) i12 = 16; else {
  i11 = 0;
  i12 = 17;
 }
 L22 : do if ((i12 | 0) == 16) {
  HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 6;
  i13 = 0;
 } else if ((i12 | 0) == 17) {
  i9 = HEAP32[i1 >> 2] | 0;
  i8 = HEAP32[i9 + 12 >> 2] | 0;
  if ((i8 | 0) == (HEAP32[i9 + 16 >> 2] | 0)) i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 127](i9) | 0; else i14 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i8 >> 0] | 0) | 0;
  i8 = i14 & 255;
  if (i8 << 24 >> 24 > -1 ? (i9 = i4 + 8 | 0, HEAP16[(HEAP32[i9 >> 2] | 0) + (i14 << 24 >> 24 << 1) >> 1] & 2048) : 0) {
   i10 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 63](i4, i8, 0) | 0) << 24 >> 24;
   i8 = HEAP32[i1 >> 2] | 0;
   i6 = i8 + 12 | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   if ((i7 | 0) == (HEAP32[i8 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 40 >> 2] & 127](i8) | 0; else {
    HEAP32[i6 >> 2] = i7 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i7 >> 0] | 0) | 0;
   }
   i7 = i10;
   i10 = i5;
   i6 = i11;
   i8 = i11;
   while (1) {
    i15 = i7 + -48 | 0;
    i16 = i10 + -1 | 0;
    i17 = HEAP32[i1 >> 2] | 0;
    do if (i17) {
     i18 = HEAP32[i17 + 12 >> 2] | 0;
     if ((i18 | 0) == (HEAP32[i17 + 16 >> 2] | 0)) i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i17 >> 2] | 0) + 36 >> 2] & 127](i17) | 0; else i19 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i18 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i19, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[i1 >> 2] = 0;
      i20 = 1;
      break;
     } else {
      i20 = (HEAP32[i1 >> 2] | 0) == 0;
      break;
     }
    } else i20 = 1; while (0);
    if (i8) {
     i17 = HEAP32[i8 + 12 >> 2] | 0;
     if ((i17 | 0) == (HEAP32[i8 + 16 >> 2] | 0)) i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 36 >> 2] & 127](i8) | 0; else i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i17 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[i2 >> 2] = 0;
      i22 = 1;
      i23 = 0;
      i24 = 0;
     } else {
      i22 = 0;
      i23 = i6;
      i24 = i8;
     }
    } else {
     i22 = 1;
     i23 = i6;
     i24 = 0;
    }
    i25 = HEAP32[i1 >> 2] | 0;
    if (!((i10 | 0) > 1 & (i20 ^ i22))) break;
    i17 = HEAP32[i25 + 12 >> 2] | 0;
    if ((i17 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i26 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i17 >> 0] | 0) | 0;
    i17 = i26 & 255;
    if (i17 << 24 >> 24 <= -1) {
     i13 = i15;
     break L22;
    }
    if (!(HEAP16[(HEAP32[i9 >> 2] | 0) + (i26 << 24 >> 24 << 1) >> 1] & 2048)) {
     i13 = i15;
     break L22;
    }
    i18 = (i15 * 10 | 0) + ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 63](i4, i17, 0) | 0) << 24 >> 24) | 0;
    i17 = HEAP32[i1 >> 2] | 0;
    i27 = i17 + 12 | 0;
    i28 = HEAP32[i27 >> 2] | 0;
    if ((i28 | 0) == (HEAP32[i17 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i17 >> 2] | 0) + 40 >> 2] & 127](i17) | 0; else {
     HEAP32[i27 >> 2] = i28 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i28 >> 0] | 0) | 0;
    }
    i7 = i18;
    i10 = i16;
    i6 = i23;
    i8 = i24;
   }
   do if (i25) {
    i8 = HEAP32[i25 + 12 >> 2] | 0;
    if ((i8 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i29 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i8 >> 0] | 0) | 0;
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i29, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
     HEAP32[i1 >> 2] = 0;
     i30 = 1;
     break;
    } else {
     i30 = (HEAP32[i1 >> 2] | 0) == 0;
     break;
    }
   } else i30 = 1; while (0);
   do if (i23) {
    i8 = HEAP32[i23 + 12 >> 2] | 0;
    if ((i8 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i8 >> 0] | 0) | 0;
    if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i30) {
     i13 = i15;
     break L22;
    } else break; else {
     HEAP32[i2 >> 2] = 0;
     i12 = 63;
     break;
    }
   } else i12 = 63; while (0);
   if ((i12 | 0) == 63 ? !i30 : 0) {
    i13 = i15;
    break;
   }
   HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 2;
   i13 = i15;
   break;
  }
  HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 4;
  i13 = 0;
 } while (0);
 return i13 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis6IfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, d15 = 0.0, i16 = 0, d17 = 0.0, i18 = 0, d19 = 0.0, i20 = 0, d21 = 0.0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, i26 = 0, d27 = 0.0, i28 = 0, d29 = 0.0, i30 = 0, d31 = 0.0, i32 = 0, d33 = 0.0, i34 = 0, d35 = 0.0, i36 = 0, d37 = 0.0, i38 = 0, d39 = 0.0, i40 = 0, d41 = 0.0, i42 = 0, d43 = 0.0, i44 = 0, i45 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i1 + 216 | 0;
 i6 = i2 + 216 | 0;
 d7 = +HEAPF32[i1 + 180 >> 2];
 i8 = i2 + 220 | 0;
 d9 = +HEAPF32[i1 + 184 >> 2];
 i10 = i2 + 224 | 0;
 d11 = +HEAPF32[i1 + 188 >> 2];
 i12 = i2 + 228 | 0;
 d13 = +HEAPF32[i1 + 192 >> 2];
 i14 = i2 + 232 | 0;
 d15 = +HEAPF32[i1 + 196 >> 2];
 i16 = i2 + 236 | 0;
 d17 = +HEAPF32[i1 + 200 >> 2];
 i18 = i2 + 240 | 0;
 d19 = +HEAPF32[i1 + 204 >> 2];
 i20 = i2 + 244 | 0;
 d21 = +HEAPF32[i1 + 208 >> 2];
 i22 = i2 + 248 | 0;
 d23 = +HEAPF32[i1 + 212 >> 2];
 d24 = +HEAPF32[i6 >> 2] * d7 + +HEAPF32[i8 >> 2] * d9 + +HEAPF32[i10 >> 2] * d11 + +HEAPF32[i12 >> 2] * d13 + +HEAPF32[i14 >> 2] * d15 + +HEAPF32[i16 >> 2] * d17 + +HEAPF32[i18 >> 2] * d19 + +HEAPF32[i20 >> 2] * d21 + +HEAPF32[i22 >> 2] * d23;
 d25 = +HEAPF32[i5 >> 2] - d7 * d24;
 HEAPF32[i5 >> 2] = d25;
 i26 = i1 + 220 | 0;
 d27 = +HEAPF32[i26 >> 2] - d9 * d24;
 HEAPF32[i26 >> 2] = d27;
 i28 = i1 + 224 | 0;
 d29 = +HEAPF32[i28 >> 2] - d11 * d24;
 HEAPF32[i28 >> 2] = d29;
 i30 = i1 + 228 | 0;
 d31 = +HEAPF32[i30 >> 2] - d13 * d24;
 HEAPF32[i30 >> 2] = d31;
 i32 = i1 + 232 | 0;
 d33 = +HEAPF32[i32 >> 2] - d15 * d24;
 HEAPF32[i32 >> 2] = d33;
 i34 = i1 + 236 | 0;
 d35 = +HEAPF32[i34 >> 2] - d17 * d24;
 HEAPF32[i34 >> 2] = d35;
 i36 = i1 + 240 | 0;
 d37 = +HEAPF32[i36 >> 2] - d19 * d24;
 HEAPF32[i36 >> 2] = d37;
 i38 = i1 + 244 | 0;
 d39 = +HEAPF32[i38 >> 2] - d21 * d24;
 HEAPF32[i38 >> 2] = d39;
 i40 = i1 + 248 | 0;
 d41 = +HEAPF32[i40 >> 2] - d23 * d24;
 HEAPF32[i40 >> 2] = d41;
 i42 = i1 + 252 | 0;
 d24 = d7 * +HEAPF32[i2 + 252 >> 2] + d9 * +HEAPF32[i2 + 256 >> 2] + d11 * +HEAPF32[i2 + 260 >> 2] + d13 * +HEAPF32[i2 + 264 >> 2] + d15 * +HEAPF32[i2 + 268 >> 2] + d17 * +HEAPF32[i2 + 272 >> 2] + d19 * +HEAPF32[i2 + 276 >> 2] + d21 * +HEAPF32[i2 + 280 >> 2] + d23 * +HEAPF32[i2 + 284 >> 2];
 d43 = +HEAPF32[i42 >> 2] - d7 * d24;
 HEAPF32[i42 >> 2] = d43;
 i42 = i1 + 256 | 0;
 d7 = +HEAPF32[i42 >> 2] - d9 * d24;
 HEAPF32[i42 >> 2] = d7;
 i42 = i1 + 260 | 0;
 d9 = +HEAPF32[i42 >> 2] - d11 * d24;
 HEAPF32[i42 >> 2] = d9;
 i42 = i1 + 264 | 0;
 d11 = +HEAPF32[i42 >> 2] - d13 * d24;
 HEAPF32[i42 >> 2] = d11;
 i42 = i1 + 268 | 0;
 d13 = +HEAPF32[i42 >> 2] - d15 * d24;
 HEAPF32[i42 >> 2] = d13;
 i42 = i1 + 272 | 0;
 d15 = +HEAPF32[i42 >> 2] - d17 * d24;
 HEAPF32[i42 >> 2] = d15;
 i42 = i1 + 276 | 0;
 d17 = +HEAPF32[i42 >> 2] - d19 * d24;
 HEAPF32[i42 >> 2] = d17;
 i42 = i1 + 280 | 0;
 d19 = +HEAPF32[i42 >> 2] - d21 * d24;
 HEAPF32[i42 >> 2] = d19;
 i42 = i1 + 284 | 0;
 d21 = +HEAPF32[i42 >> 2] - d23 * d24;
 HEAPF32[i42 >> 2] = d21;
 d24 = d25 * d25 + d27 * d27 + d29 * d29 + d31 * d31 + d33 * d33 + d35 * d35 + d37 * d37 + d39 * d39 + d41 * d41;
 HEAPF32[i4 >> 2] = d24;
 d41 = d43 * d43 + d7 * d7 + d9 * d9 + d11 * d11 + d13 * d13 + d15 * d15 + d17 * d17 + d19 * d19 + d21 * d21;
 HEAPF32[i4 + 4 >> 2] = d41;
 i42 = d41 > d24;
 d24 = +HEAPF32[i4 + ((i42 & 1) << 2) >> 2];
 if (d24 == 0.0) {
  i44 = 0;
  STACKTOP = i3;
  return i44 | 0;
 }
 i4 = i42 ? 9 : 0;
 i42 = i5 + (i4 << 2) | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i42 >> 2];
 i2 = i42 + 4 | 0;
 HEAP32[i42 >> 2] = i1;
 i1 = HEAP32[i26 >> 2] | 0;
 HEAP32[i26 >> 2] = HEAP32[i2 >> 2];
 i45 = i42 + 8 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i28 >> 2] | 0;
 HEAP32[i28 >> 2] = HEAP32[i45 >> 2];
 i2 = i42 + 12 | 0;
 HEAP32[i45 >> 2] = i1;
 i1 = HEAP32[i30 >> 2] | 0;
 HEAP32[i30 >> 2] = HEAP32[i2 >> 2];
 i45 = i42 + 16 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i32 >> 2] | 0;
 HEAP32[i32 >> 2] = HEAP32[i45 >> 2];
 i2 = i42 + 20 | 0;
 HEAP32[i45 >> 2] = i1;
 i1 = HEAP32[i34 >> 2] | 0;
 HEAP32[i34 >> 2] = HEAP32[i2 >> 2];
 i45 = i42 + 24 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i36 >> 2] | 0;
 HEAP32[i36 >> 2] = HEAP32[i45 >> 2];
 i2 = i42 + 28 | 0;
 HEAP32[i45 >> 2] = i1;
 i1 = HEAP32[i38 >> 2] | 0;
 HEAP32[i38 >> 2] = HEAP32[i2 >> 2];
 i45 = i42 + 32 | 0;
 HEAP32[i2 >> 2] = i1;
 i1 = HEAP32[i40 >> 2] | 0;
 HEAP32[i40 >> 2] = HEAP32[i45 >> 2];
 HEAP32[i45 >> 2] = i1;
 i1 = i6 + (i4 << 2) | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 i6 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = i4;
 i4 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
 i8 = i1 + 8 | 0;
 HEAP32[i6 >> 2] = i4;
 i4 = HEAP32[i10 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
 i10 = i1 + 12 | 0;
 HEAP32[i8 >> 2] = i4;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i10 >> 2];
 i12 = i1 + 16 | 0;
 HEAP32[i10 >> 2] = i4;
 i4 = HEAP32[i14 >> 2] | 0;
 HEAP32[i14 >> 2] = HEAP32[i12 >> 2];
 i14 = i1 + 20 | 0;
 HEAP32[i12 >> 2] = i4;
 i4 = HEAP32[i16 >> 2] | 0;
 HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
 i16 = i1 + 24 | 0;
 HEAP32[i14 >> 2] = i4;
 i4 = HEAP32[i18 >> 2] | 0;
 HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
 i18 = i1 + 28 | 0;
 HEAP32[i16 >> 2] = i4;
 i4 = HEAP32[i20 >> 2] | 0;
 HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
 i20 = i1 + 32 | 0;
 HEAP32[i18 >> 2] = i4;
 i4 = HEAP32[i22 >> 2] | 0;
 HEAP32[i22 >> 2] = HEAP32[i20 >> 2];
 HEAP32[i20 >> 2] = i4;
 d41 = 1.0 / +Math_sqrt(+d24);
 HEAPF32[i5 >> 2] = d41 * +HEAPF32[i5 >> 2];
 HEAPF32[i26 >> 2] = d41 * +HEAPF32[i26 >> 2];
 HEAPF32[i28 >> 2] = d41 * +HEAPF32[i28 >> 2];
 HEAPF32[i30 >> 2] = d41 * +HEAPF32[i30 >> 2];
 HEAPF32[i32 >> 2] = d41 * +HEAPF32[i32 >> 2];
 HEAPF32[i34 >> 2] = d41 * +HEAPF32[i34 >> 2];
 HEAPF32[i36 >> 2] = d41 * +HEAPF32[i36 >> 2];
 HEAPF32[i38 >> 2] = d41 * +HEAPF32[i38 >> 2];
 HEAPF32[i40 >> 2] = d41 * +HEAPF32[i40 >> 2];
 i44 = 1;
 STACKTOP = i3;
 return i44 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4;
 L1 : do if ((i2 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 83 : 0) {
  i6 = HEAP8[i1 + 1 >> 0] | 0;
  switch (i6 | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i5, 51571);
    i7 = i3 + 4 | 0;
    i8 = HEAP32[i7 >> 2] | 0;
    if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i9 = i1 + 2 | 0;
    break L1;
    break;
   }
  case 98:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc(i5, 51586);
    i7 = i3 + 4 | 0;
    i8 = HEAP32[i7 >> 2] | 0;
    if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i9 = i1 + 2 | 0;
    break L1;
    break;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i5, 51065);
    i7 = i3 + 4 | 0;
    i8 = HEAP32[i7 >> 2] | 0;
    if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i9 = i1 + 2 | 0;
    break L1;
    break;
   }
  case 105:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i5, 51161);
    i7 = i3 + 4 | 0;
    i8 = HEAP32[i7 >> 2] | 0;
    if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i9 = i1 + 2 | 0;
    break L1;
    break;
   }
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i5, 51238);
    i7 = i3 + 4 | 0;
    i8 = HEAP32[i7 >> 2] | 0;
    if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i9 = i1 + 2 | 0;
    break L1;
    break;
   }
  case 100:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc(i5, 51315);
    i7 = i3 + 4 | 0;
    i8 = HEAP32[i7 >> 2] | 0;
    if (i8 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i5);
     HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i9 = i1 + 2 | 0;
    break L1;
    break;
   }
  case 95:
   {
    i7 = HEAP32[i3 + 16 >> 2] | 0;
    if ((i7 | 0) == (HEAP32[i3 + 20 >> 2] | 0)) {
     i9 = i1;
     break L1;
    }
    i8 = HEAP32[i7 + 4 >> 2] | 0;
    i10 = i3 + 4 | 0;
    i11 = i3 + 8 | 0;
    i12 = HEAP32[i7 >> 2] | 0;
    while (1) {
     if ((i12 | 0) == (i8 | 0)) break;
     i7 = HEAP32[i10 >> 2] | 0;
     if ((i7 | 0) == (HEAP32[i11 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i3, i12); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i7, i12);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     }
     i12 = i12 + 24 | 0;
    }
    i9 = i1 + 2 | 0;
    break L1;
    break;
   }
  default:
   {
    i12 = i6 + -48 | 0;
    i10 = i12 >>> 0 < 10;
    if (!i10 ? (_isupper(i6) | 0) == 0 : 0) {
     i9 = i1;
     break L1;
    }
    i11 = i1 + 2 | 0;
    i8 = i10 ? i12 : i6 + -55 | 0;
    while (1) {
     if ((i11 | 0) == (i2 | 0)) {
      i9 = i1;
      break L1;
     }
     i13 = HEAP8[i11 >> 0] | 0;
     i12 = i13 << 24 >> 24;
     i10 = i12 + -48 | 0;
     i7 = i10 >>> 0 < 10;
     if (!i7 ? (_isupper(i12) | 0) == 0 : 0) break;
     i11 = i11 + 1 | 0;
     i8 = (i7 ? i10 : i12 + -55 | 0) + (i8 * 36 | 0) | 0;
    }
    if (i13 << 24 >> 24 != 95) {
     i9 = i1;
     break L1;
    }
    i6 = i8 + 1 | 0;
    i12 = HEAP32[i3 + 16 >> 2] | 0;
    i10 = i12;
    if (i6 >>> 0 >= (HEAP32[i3 + 20 >> 2] | 0) - i12 >> 4 >>> 0) {
     i9 = i1;
     break L1;
    }
    i12 = HEAP32[i10 + (i6 << 4) + 4 >> 2] | 0;
    i7 = i3 + 4 | 0;
    i14 = i3 + 8 | 0;
    i15 = HEAP32[i10 + (i6 << 4) >> 2] | 0;
    while (1) {
     if ((i15 | 0) == (i12 | 0)) break;
     i6 = HEAP32[i7 >> 2] | 0;
     if ((i6 | 0) == (HEAP32[i14 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i3, i15); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i6, i15);
      HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
     }
     i15 = i15 + 24 | 0;
    }
    i9 = i11 + 1 | 0;
    break L1;
   }
  }
 } else i9 = i1; while (0);
 STACKTOP = i4;
 return i9 | 0;
}

function __ZN6vision14ExtractFREAK84ERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS5_9allocatorIS7_EEEEPKfSE_SE_SE_SE_SE_ffffffff(i1, i2, i3, i4, i5, i6, i7, i8, i9, d10, d11, d12, d13, d14, d15, d16, d17) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 d10 = +d10;
 d11 = +d11;
 d12 = +d12;
 d13 = +d13;
 d14 = +d14;
 d15 = +d15;
 d16 = +d16;
 d17 = +d17;
 var i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 i19 = i18;
 if (!i2) {
  i20 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31935, 30) | 0, 31966, 104) | 0, 33554, 6) | 0, 537) | 0, 33561, 2) | 0, 32071, 15) | 0;
  __ZNKSt3__28ios_base6getlocEv(i19, i20 + (HEAP32[(HEAP32[i20 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i21 = __ZNKSt3__26locale9use_facetERNS0_2idE(i19, 58484) | 0;
  i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 10) | 0;
  __ZNSt3__26localeD2Ev(i19);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i20, i22) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i20) | 0;
  _abort();
 }
 i20 = i1 + 16 | 0;
 i22 = i1 + 20 | 0;
 i21 = (HEAP32[i22 >> 2] | 0) - (HEAP32[i20 >> 2] | 0) | 0;
 i23 = i3 + 4 | 0;
 i24 = HEAP32[i3 >> 2] | 0;
 if ((i21 | 0) != ((HEAP32[i23 >> 2] | 0) - i24 | 0)) {
  i25 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32087, 52) | 0, 31966, 104) | 0, 33554, 6) | 0, 538) | 0, 33561, 2) | 0, 32140, 36) | 0;
  __ZNKSt3__28ios_base6getlocEv(i19, i25 + (HEAP32[(HEAP32[i25 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i26 = __ZNKSt3__26locale9use_facetERNS0_2idE(i19, 58484) | 0;
  i27 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i26 >> 2] | 0) + 28 >> 2] & 63](i26, 10) | 0;
  __ZNSt3__26localeD2Ev(i19);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i25, i27) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i25) | 0;
  _abort();
 }
 if (!i21) {
  i28 = 0;
  i29 = 0;
 } else {
  i21 = i1 + 4 | 0;
  i25 = i1 + 16 | 0;
  i27 = 0;
  i26 = 0;
  i30 = i24;
  while (1) {
   i24 = HEAP32[i1 >> 2] | 0;
   i31 = HEAP32[i21 >> 2] | 0;
   if (__ZN6vision20SamplePyramidFREAK84EPfPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff(i19, i2, i30 + (i26 * 20 | 0) | 0, i4, i5, i6, i7, i8, i9, d10, d11, d12, d13, d14, d15, d16, d17) | 0) {
    __ZN6vision14CompareFREAK84EPhPKf(i31 + (Math_imul(i24, i27) | 0) | 0, i19);
    i24 = (HEAP32[i3 >> 2] | 0) + (i26 * 20 | 0) | 0;
    i31 = (HEAP32[i25 >> 2] | 0) + (i27 * 20 | 0) | 0;
    HEAP32[i31 >> 2] = HEAP32[i24 >> 2];
    HEAP32[i31 + 4 >> 2] = HEAP32[i24 + 4 >> 2];
    HEAP32[i31 + 8 >> 2] = HEAP32[i24 + 8 >> 2];
    HEAP32[i31 + 12 >> 2] = HEAP32[i24 + 12 >> 2];
    HEAP8[i31 + 16 >> 0] = HEAP8[i24 + 16 >> 0] | 0;
    i32 = i27 + 1 | 0;
   } else i32 = i27;
   i26 = i26 + 1 | 0;
   i30 = HEAP32[i3 >> 2] | 0;
   i24 = ((HEAP32[i23 >> 2] | 0) - i30 | 0) / 20 | 0;
   if (i26 >>> 0 >= i24 >>> 0) {
    i28 = i32;
    i29 = i24;
    break;
   } else i27 = i32;
  }
 }
 if ((i28 | 0) != (i29 | 0)) {
  i29 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32177, 50) | 0, 31966, 104) | 0, 33554, 6) | 0, 617) | 0, 33561, 2) | 0, 32228, 19) | 0;
  __ZNKSt3__28ios_base6getlocEv(i19, i29 + (HEAP32[(HEAP32[i29 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i32 = __ZNKSt3__26locale9use_facetERNS0_2idE(i19, 58484) | 0;
  i27 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i32 >> 2] | 0) + 28 >> 2] & 63](i32, 10) | 0;
  __ZNSt3__26localeD2Ev(i19);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i29, i27) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i29) | 0;
  _abort();
 }
 i29 = i1 + 4 | 0;
 i27 = Math_imul(HEAP32[i1 >> 2] | 0, i28) | 0;
 HEAP8[i19 >> 0] = 0;
 i32 = i1 + 8 | 0;
 i1 = HEAP32[i29 >> 2] | 0;
 i26 = (HEAP32[i32 >> 2] | 0) - i1 | 0;
 i30 = i1;
 if (i27 >>> 0 <= i26 >>> 0) {
  if (i27 >>> 0 < i26 >>> 0) HEAP32[i32 >> 2] = i30 + i27;
 } else __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEmRKh(i29, i27 - i26 | 0, i19);
 i19 = HEAP32[i20 >> 2] | 0;
 i26 = ((HEAP32[i22 >> 2] | 0) - i19 | 0) / 20 | 0;
 if (i28 >>> 0 > i26 >>> 0) {
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8__appendEm(i20, i28 - i26 | 0);
  STACKTOP = i18;
  return;
 }
 if (i28 >>> 0 >= i26 >>> 0) {
  STACKTOP = i18;
  return;
 }
 HEAP32[i22 >> 2] = i19 + (i28 * 20 | 0);
 STACKTOP = i18;
 return;
}

function _arGetContour(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 80032 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80032);
 i8 = i3 + 80016 | 0;
 i9 = i3 + 80008 | 0;
 i10 = i3 + 8e4 | 0;
 i11 = i3 + 4e4 | 0;
 i12 = i3;
 i13 = HEAP32[i6 + 8 >> 2] | 0;
 i14 = HEAP32[i6 >> 2] | 0;
 i15 = HEAP32[i6 + 4 >> 2] | 0;
 L1 : do if ((i14 | 0) <= (i15 | 0)) {
  i6 = i14;
  i16 = i1 + ((Math_imul(i13, i2) | 0) + i14 << 1) | 0;
  while (1) {
   i17 = HEAP16[i16 >> 1] | 0;
   if (i17 << 16 >> 16 > 0 ? (HEAP32[i4 + ((i17 << 16 >> 16) + -1 << 2) >> 2] | 0) == (i5 | 0) : 0) break;
   if ((i6 | 0) < (i15 | 0)) {
    i6 = i6 + 1 | 0;
    i16 = i16 + 2 | 0;
   } else break L1;
  }
  if ((i6 | 0) != -1) {
   i16 = i7 + 24 | 0;
   HEAP32[i16 >> 2] = 1;
   i17 = i7 + 28 | 0;
   HEAP32[i17 >> 2] = i6;
   i18 = i7 + 40028 | 0;
   HEAP32[i18 >> 2] = i13;
   i19 = 5;
   i20 = i13;
   i21 = i6;
   i22 = 1;
   while (1) {
    i23 = i1 + ((Math_imul(i20, i2) | 0) + i21 << 1) | 0;
    i24 = (i19 + 5 | 0) % 8 | 0;
    i25 = Math_imul(HEAP32[48 + (i24 << 2) >> 2] | 0, i2) | 0;
    if ((HEAP16[i23 + (i25 + (HEAP32[80 + (i24 << 2) >> 2] | 0) << 1) >> 1] | 0) <= 0) {
     i25 = (i24 + 1 | 0) % 8 | 0;
     i26 = Math_imul(HEAP32[48 + (i25 << 2) >> 2] | 0, i2) | 0;
     if ((HEAP16[i23 + (i26 + (HEAP32[80 + (i25 << 2) >> 2] | 0) << 1) >> 1] | 0) <= 0) {
      i26 = (i25 + 1 | 0) % 8 | 0;
      i27 = Math_imul(HEAP32[48 + (i26 << 2) >> 2] | 0, i2) | 0;
      if ((HEAP16[i23 + (i27 + (HEAP32[80 + (i26 << 2) >> 2] | 0) << 1) >> 1] | 0) <= 0) {
       i27 = (i26 + 1 | 0) % 8 | 0;
       i28 = Math_imul(HEAP32[48 + (i27 << 2) >> 2] | 0, i2) | 0;
       if ((HEAP16[i23 + (i28 + (HEAP32[80 + (i27 << 2) >> 2] | 0) << 1) >> 1] | 0) <= 0) {
        i28 = (i27 + 1 | 0) % 8 | 0;
        i29 = Math_imul(HEAP32[48 + (i28 << 2) >> 2] | 0, i2) | 0;
        if ((HEAP16[i23 + (i29 + (HEAP32[80 + (i28 << 2) >> 2] | 0) << 1) >> 1] | 0) <= 0) {
         i29 = (i28 + 1 | 0) % 8 | 0;
         i30 = Math_imul(HEAP32[48 + (i29 << 2) >> 2] | 0, i2) | 0;
         if ((HEAP16[i23 + (i30 + (HEAP32[80 + (i29 << 2) >> 2] | 0) << 1) >> 1] | 0) <= 0) {
          i30 = (i29 + 1 | 0) % 8 | 0;
          i31 = Math_imul(HEAP32[48 + (i30 << 2) >> 2] | 0, i2) | 0;
          if ((HEAP16[i23 + (i31 + (HEAP32[80 + (i30 << 2) >> 2] | 0) << 1) >> 1] | 0) <= 0) {
           i31 = (i30 + 1 | 0) % 8 | 0;
           i32 = Math_imul(HEAP32[48 + (i31 << 2) >> 2] | 0, i2) | 0;
           if ((HEAP16[i23 + (i32 + (HEAP32[80 + (i31 << 2) >> 2] | 0) << 1) >> 1] | 0) > 0) i33 = i31; else {
            i34 = 11;
            break;
           }
          } else i33 = i30;
         } else i33 = i29;
        } else i33 = i28;
       } else i33 = i27;
      } else i33 = i26;
     } else i33 = i25;
    } else i33 = i24;
    HEAP32[i7 + 28 + (i22 << 2) >> 2] = (HEAP32[80 + (i33 << 2) >> 2] | 0) + i21;
    i24 = HEAP32[i16 >> 2] | 0;
    HEAP32[i7 + 40028 + (i24 << 2) >> 2] = (HEAP32[48 + (i33 << 2) >> 2] | 0) + (HEAP32[i7 + 40028 + (i24 + -1 << 2) >> 2] | 0);
    i35 = HEAP32[i16 >> 2] | 0;
    i24 = i7 + 28 + (i35 << 2) | 0;
    if ((HEAP32[i24 >> 2] | 0) == (i6 | 0) ? (HEAP32[i7 + 40028 + (i35 << 2) >> 2] | 0) == (i13 | 0) : 0) {
     i34 = 17;
     break;
    }
    i25 = i35 + 1 | 0;
    HEAP32[i16 >> 2] = i25;
    if ((i25 | 0) == 9999) {
     i34 = 16;
     break;
    }
    i19 = i33;
    i20 = HEAP32[i7 + 40028 + (i35 << 2) >> 2] | 0;
    i21 = HEAP32[i24 >> 2] | 0;
    i22 = i25;
   }
   if ((i34 | 0) == 11) {
    _arLog(0, 3, 17944, i9);
    i36 = -1;
    STACKTOP = i3;
    return i36 | 0;
   } else if ((i34 | 0) == 16) {
    _arLog(0, 3, 17951, i8);
    i36 = -1;
    STACKTOP = i3;
    return i36 | 0;
   } else if ((i34 | 0) == 17) {
    if ((i35 | 0) > 1) {
     i22 = 0;
     i21 = 0;
     i20 = 1;
     while (1) {
      i19 = (HEAP32[i7 + 28 + (i20 << 2) >> 2] | 0) - i6 | 0;
      i25 = Math_imul(i19, i19) | 0;
      i19 = (HEAP32[i7 + 40028 + (i20 << 2) >> 2] | 0) - i13 | 0;
      i24 = (Math_imul(i19, i19) | 0) + i25 | 0;
      i25 = (i24 | 0) > (i21 | 0);
      i22 = i25 ? i20 : i22;
      i20 = i20 + 1 | 0;
      if ((i20 | 0) == (i35 | 0)) break; else i21 = i25 ? i24 : i21;
     }
     if ((i22 | 0) > 0) {
      i21 = i22 << 2;
      _memcpy(i11 | 0, i17 | 0, i21 | 0) | 0;
      _memcpy(i12 | 0, i18 | 0, i21 | 0) | 0;
      i37 = i22;
      i38 = 1;
     } else {
      i37 = i22;
      i38 = 0;
     }
    } else {
     i37 = 0;
     i38 = 0;
    }
    if ((i37 | 0) < (i35 | 0)) {
     i21 = i37;
     do {
      i20 = i21 - i37 | 0;
      HEAP32[i7 + 28 + (i20 << 2) >> 2] = HEAP32[i7 + 28 + (i21 << 2) >> 2];
      HEAP32[i7 + 40028 + (i20 << 2) >> 2] = HEAP32[i7 + 40028 + (i21 << 2) >> 2];
      i21 = i21 + 1 | 0;
      i20 = HEAP32[i16 >> 2] | 0;
     } while ((i21 | 0) < (i20 | 0));
     i39 = i20;
    } else i39 = i35;
    if (i38) {
     i21 = 0;
     i22 = i39;
     while (1) {
      i20 = i21 - i37 | 0;
      HEAP32[i7 + 28 + (i22 + i20 << 2) >> 2] = HEAP32[i11 + (i21 << 2) >> 2];
      HEAP32[i7 + 40028 + ((HEAP32[i16 >> 2] | 0) + i20 << 2) >> 2] = HEAP32[i12 + (i21 << 2) >> 2];
      i21 = i21 + 1 | 0;
      i20 = HEAP32[i16 >> 2] | 0;
      if ((i21 | 0) == (i37 | 0)) {
       i40 = i20;
       break;
      } else i22 = i20;
     }
    } else i40 = i39;
    HEAP32[i7 + 28 + (i40 << 2) >> 2] = HEAP32[i17 >> 2];
    HEAP32[i7 + 40028 + (HEAP32[i16 >> 2] << 2) >> 2] = HEAP32[i18 >> 2];
    HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 1;
    i36 = 0;
    STACKTOP = i3;
    return i36 | 0;
   }
  }
 } while (0);
 _arLog(0, 3, 17937, i10);
 i36 = -1;
 STACKTOP = i3;
 return i36 | 0;
}

function __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 var i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0;
 HEAP32[i3 >> 2] = i1;
 i16 = i14 + 8 + 3 | 0;
 i17 = i14 + 4 | 0;
 i18 = i13 + 8 + 3 | 0;
 i19 = i13 + 4 | 0;
 i20 = (i4 & 512 | 0) == 0;
 i21 = (i15 | 0) > 0;
 i22 = i12 + 11 | 0;
 i23 = i12 + 4 | 0;
 i24 = 0;
 i25 = i5;
 while (1) {
  if ((i24 | 0) == 4) break;
  L4 : do switch (HEAP8[i9 + i24 >> 0] | 0) {
  case 0:
   {
    HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
    i26 = i25;
    break;
   }
  case 1:
   {
    HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 44 >> 2] & 63](i7, 32) | 0;
    i27 = HEAP32[i3 >> 2] | 0;
    HEAP32[i3 >> 2] = i27 + 4;
    HEAP32[i27 >> 2] = i5;
    i26 = i25;
    break;
   }
  case 3:
   {
    i5 = HEAP8[i16 >> 0] | 0;
    i27 = i5 << 24 >> 24 < 0;
    if (!((i27 ? HEAP32[i17 >> 2] | 0 : i5 & 255) | 0)) i26 = i25; else {
     i5 = HEAP32[(i27 ? HEAP32[i14 >> 2] | 0 : i14) >> 2] | 0;
     i27 = HEAP32[i3 >> 2] | 0;
     HEAP32[i3 >> 2] = i27 + 4;
     HEAP32[i27 >> 2] = i5;
     i26 = i25;
    }
    break;
   }
  case 2:
   {
    i5 = HEAP8[i18 >> 0] | 0;
    i27 = i5 << 24 >> 24 < 0;
    i28 = i27 ? HEAP32[i19 >> 2] | 0 : i5 & 255;
    if (i20 | (i28 | 0) == 0) i26 = i25; else {
     i5 = i27 ? HEAP32[i13 >> 2] | 0 : i13;
     i27 = i5 + (i28 << 2) | 0;
     i29 = HEAP32[i3 >> 2] | 0;
     i30 = i29;
     i31 = i5;
     while (1) {
      if ((i31 | 0) == (i27 | 0)) break;
      HEAP32[i30 >> 2] = HEAP32[i31 >> 2];
      i30 = i30 + 4 | 0;
      i31 = i31 + 4 | 0;
     }
     HEAP32[i3 >> 2] = i29 + (i28 << 2);
     i26 = i25;
    }
    break;
   }
  case 4:
   {
    i31 = HEAP32[i3 >> 2] | 0;
    i30 = i8 ? i25 + 4 | 0 : i25;
    i27 = i30;
    while (1) {
     if (i27 >>> 0 >= i6 >>> 0) break;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 12 >> 2] & 63](i7, 2048, HEAP32[i27 >> 2] | 0) | 0)) break;
     i27 = i27 + 4 | 0;
    }
    if (i21) {
     i28 = i15;
     i29 = i27;
     while (1) {
      i32 = (i28 | 0) > 0;
      if (!(i29 >>> 0 > i30 >>> 0 & i32)) break;
      i5 = i29 + -4 | 0;
      i33 = HEAP32[i5 >> 2] | 0;
      i34 = HEAP32[i3 >> 2] | 0;
      HEAP32[i3 >> 2] = i34 + 4;
      HEAP32[i34 >> 2] = i33;
      i28 = i28 + -1 | 0;
      i29 = i5;
     }
     if (i32) i35 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 44 >> 2] & 63](i7, 48) | 0; else i35 = 0;
     i5 = i28;
     i33 = HEAP32[i3 >> 2] | 0;
     while (1) {
      i36 = i33 + 4 | 0;
      if ((i5 | 0) <= 0) break;
      HEAP32[i33 >> 2] = i35;
      i5 = i5 + -1 | 0;
      i33 = i36;
     }
     HEAP32[i3 >> 2] = i36;
     HEAP32[i33 >> 2] = i10;
     i37 = i29;
    } else i37 = i27;
    if ((i37 | 0) == (i30 | 0)) {
     i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 44 >> 2] & 63](i7, 48) | 0;
     i28 = HEAP32[i3 >> 2] | 0;
     i34 = i28 + 4 | 0;
     HEAP32[i3 >> 2] = i34;
     HEAP32[i28 >> 2] = i5;
     i38 = i34;
    } else {
     i34 = HEAP8[i22 >> 0] | 0;
     i5 = i34 << 24 >> 24 < 0;
     if (!((i5 ? HEAP32[i23 >> 2] | 0 : i34 & 255) | 0)) i39 = -1; else i39 = HEAP8[(i5 ? HEAP32[i12 >> 2] | 0 : i12) >> 0] | 0;
     i5 = i39;
     i34 = 0;
     i28 = 0;
     i40 = i37;
     while (1) {
      if ((i40 | 0) == (i30 | 0)) break;
      i41 = HEAP32[i3 >> 2] | 0;
      if ((i28 | 0) == (i5 | 0)) {
       i42 = i41 + 4 | 0;
       HEAP32[i3 >> 2] = i42;
       HEAP32[i41 >> 2] = i11;
       i43 = i34 + 1 | 0;
       i44 = HEAP8[i22 >> 0] | 0;
       i45 = i44 << 24 >> 24 < 0;
       if (i43 >>> 0 < (i45 ? HEAP32[i23 >> 2] | 0 : i44 & 255) >>> 0) {
        i44 = HEAP8[(i45 ? HEAP32[i12 >> 2] | 0 : i12) + i43 >> 0] | 0;
        i46 = i44 << 24 >> 24 == 127 ? -1 : i44 << 24 >> 24;
        i47 = i43;
        i48 = 0;
        i49 = i42;
       } else {
        i46 = i28;
        i47 = i43;
        i48 = 0;
        i49 = i42;
       }
      } else {
       i46 = i5;
       i47 = i34;
       i48 = i28;
       i49 = i41;
      }
      i41 = i40 + -4 | 0;
      i42 = HEAP32[i41 >> 2] | 0;
      HEAP32[i3 >> 2] = i49 + 4;
      HEAP32[i49 >> 2] = i42;
      i5 = i46;
      i34 = i47;
      i28 = i48 + 1 | 0;
      i40 = i41;
     }
     i38 = HEAP32[i3 >> 2] | 0;
    }
    if ((i31 | 0) == (i38 | 0)) i26 = i30; else {
     i40 = i38;
     i28 = i31;
     while (1) {
      i34 = i40 + -4 | 0;
      if (i28 >>> 0 >= i34 >>> 0) {
       i26 = i30;
       break L4;
      }
      i5 = HEAP32[i28 >> 2] | 0;
      HEAP32[i28 >> 2] = HEAP32[i34 >> 2];
      HEAP32[i34 >> 2] = i5;
      i40 = i34;
      i28 = i28 + 4 | 0;
     }
    }
    break;
   }
  default:
   i26 = i25;
  } while (0);
  i24 = i24 + 1 | 0;
  i25 = i26;
 }
 i26 = HEAP8[i16 >> 0] | 0;
 i16 = i26 << 24 >> 24 < 0;
 i25 = i16 ? HEAP32[i17 >> 2] | 0 : i26 & 255;
 if (i25 >>> 0 > 1) {
  i26 = HEAP32[i14 >> 2] | 0;
  i24 = i16 ? i26 + 4 | 0 : i17;
  i17 = (i16 ? i26 : i14) + (i25 << 2) | 0;
  i25 = HEAP32[i3 >> 2] | 0;
  i14 = i17 - i24 | 0;
  i26 = i25;
  i16 = i24;
  while (1) {
   if ((i16 | 0) == (i17 | 0)) break;
   HEAP32[i26 >> 2] = HEAP32[i16 >> 2];
   i26 = i26 + 4 | 0;
   i16 = i16 + 4 | 0;
  }
  HEAP32[i3 >> 2] = i25 + (i14 >>> 2 << 2);
 }
 switch ((i4 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i2 >> 2] = i1;
 }
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i8 = i7 + 300 | 0;
 i9 = i7 + 288 | 0;
 i10 = i7 + 276 | 0;
 i11 = i7 + 272 | 0;
 i12 = i7;
 i13 = i7 + 268 | 0;
 i14 = i7 + 264 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i22, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i27, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i35, i15, i33, i11, i14, HEAP32[i8 >> 2] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 HEAP16[i6 >> 1] = i17;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i13 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i36, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i36 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i38, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i8 = i7 + 300 | 0;
 i9 = i7 + 288 | 0;
 i10 = i7 + 276 | 0;
 i11 = i7 + 272 | 0;
 i12 = i7;
 i13 = i7 + 268 | 0;
 i14 = i7 + 264 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i22, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i27, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i35, i15, i33, i11, i14, HEAP32[i8 >> 2] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 HEAP32[i6 >> 2] = i17;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i13 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i36, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i36 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i38, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i8 = i7 + 300 | 0;
 i9 = i7 + 288 | 0;
 i10 = i7 + 276 | 0;
 i11 = i7 + 272 | 0;
 i12 = i7;
 i13 = i7 + 268 | 0;
 i14 = i7 + 264 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i22, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i27, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i35, i15, i33, i11, i14, HEAP32[i8 >> 2] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 HEAP32[i6 >> 2] = i17;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i13 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i36, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i36 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i38, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i8 = i7 + 224 | 0;
 i9 = i7 + 212 | 0;
 i10 = i7 + 200 | 0;
 i11 = i7 + 196 | 0;
 i12 = i7;
 i13 = i7 + 192 | 0;
 i14 = i7 + 188 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i19 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i22, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i27, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i35 & 255, i15, i33, i11, i14, HEAP8[i8 >> 0] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 HEAP16[i6 >> 1] = i17;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i13 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i36, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i36 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i38, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i8 = i7 + 224 | 0;
 i9 = i7 + 212 | 0;
 i10 = i7 + 200 | 0;
 i11 = i7 + 196 | 0;
 i12 = i7;
 i13 = i7 + 192 | 0;
 i14 = i7 + 188 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i19 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i22, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i27, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i35 & 255, i15, i33, i11, i14, HEAP8[i8 >> 0] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 HEAP32[i6 >> 2] = i17;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i13 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i36, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i36 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i38, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i8 = i7 + 224 | 0;
 i9 = i7 + 212 | 0;
 i10 = i7 + 200 | 0;
 i11 = i7 + 196 | 0;
 i12 = i7;
 i13 = i7 + 192 | 0;
 i14 = i7 + 188 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i19 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i22, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i27, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i35 & 255, i15, i33, i11, i14, HEAP8[i8 >> 0] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 HEAP32[i6 >> 2] = i17;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i13 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i36, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i36 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i38, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i8 = i7 + 300 | 0;
 i9 = i7 + 288 | 0;
 i10 = i7 + 276 | 0;
 i11 = i7 + 272 | 0;
 i12 = i7;
 i13 = i7 + 268 | 0;
 i14 = i7 + 264 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i19 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i22, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i27, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i35, i15, i33, i11, i14, HEAP32[i8 >> 2] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i26 >> 2] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 HEAP32[i6 >> 2] = i17;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i13 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i36, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i36 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i38, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 i7 = i1 + 264 | 0;
 i8 = i1 + 160 | 0;
 i9 = i1 + 292 | 0;
 i10 = i1 + 280 | 0;
 i11 = i1 + 276 | 0;
 i12 = i1;
 i13 = i1 + 272 | 0;
 i14 = i1 + 268 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 i15 = 0;
 while (1) {
  if ((i15 | 0) == 3) break;
  HEAP32[i9 + (i15 << 2) >> 2] = 0;
  i15 = i15 + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i10, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58516) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 48 >> 2] & 15](i4, 10736, 10762, i8) | 0;
 __ZNSt3__26localeD2Ev(i10);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i15 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i16 = (HEAP32[i15 >> 2] & 2147483647) + -1 | 0; else i16 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i16, 0);
 i16 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i16;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i17 = i10 + 4 | 0;
 i18 = HEAP32[i2 >> 2] | 0;
 i19 = i16;
 i16 = i18;
 i20 = i18;
 L12 : while (1) {
  if (i20) {
   i18 = HEAP32[i20 + 12 >> 2] | 0;
   if ((i18 | 0) == (HEAP32[i20 + 16 >> 2] | 0)) i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i20 >> 2] | 0) + 36 >> 2] & 127](i20) | 0; else i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i18 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i22 = 0;
    i23 = 1;
    i24 = 0;
   } else {
    i22 = i16;
    i23 = 0;
    i24 = i20;
   }
  } else {
   i22 = 0;
   i23 = 1;
   i24 = 0;
  }
  i18 = HEAP32[i3 >> 2] | 0;
  do if (i18) {
   i25 = HEAP32[i18 + 12 >> 2] | 0;
   if ((i25 | 0) == (HEAP32[i18 + 16 >> 2] | 0)) i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i18 >> 2] | 0) + 36 >> 2] & 127](i18) | 0; else i26 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i25 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i26, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i23) {
    i27 = i18;
    break;
   } else {
    i28 = i19;
    i29 = i18;
    break L12;
   } else {
    HEAP32[i3 >> 2] = 0;
    i30 = 22;
    break;
   }
  } else i30 = 22; while (0);
  if ((i30 | 0) == 22) {
   i30 = 0;
   if (i23) {
    i28 = i19;
    i29 = 0;
    break;
   } else i27 = 0;
  }
  i18 = HEAP8[i4 >> 0] | 0;
  i25 = i18 << 24 >> 24 < 0 ? HEAP32[i17 >> 2] | 0 : i18 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i19 + i25 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i25 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i31 = (HEAP32[i15 >> 2] & 2147483647) + -1 | 0; else i31 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i31, 0);
   i18 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i18 + i25;
   i32 = i18;
  } else i32 = i19;
  i18 = i24 + 12 | 0;
  i25 = HEAP32[i18 >> 2] | 0;
  i33 = i24 + 16 | 0;
  if ((i25 | 0) == (HEAP32[i33 >> 2] | 0)) i34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i34 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i25 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i34, 16, i32, i11, i14, 0, i9, i12, i13, i8) | 0) {
   i28 = i32;
   i29 = i27;
   break;
  }
  i25 = HEAP32[i18 >> 2] | 0;
  if ((i25 | 0) == (HEAP32[i33 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 40 >> 2] & 127](i24) | 0; else {
   HEAP32[i18 >> 2] = i25 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i25 >> 2] | 0) | 0;
  }
  i19 = i32;
  i16 = i22;
  i20 = i24;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, (HEAP32[i11 >> 2] | 0) - i28 | 0, 0);
 i28 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 i4 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i7 >> 2] = i6;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z(i28, i4, 47368, i7) | 0) != 1) HEAP32[i5 >> 2] = 4;
 if (i24) {
  i7 = HEAP32[i24 + 12 >> 2] | 0;
  if ((i7 | 0) == (HEAP32[i24 + 16 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i22 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i35 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i7 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i35, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i36 = 1;
  } else i36 = 0;
 } else i36 = 1;
 do if (i29) {
  i35 = HEAP32[i29 + 12 >> 2] | 0;
  if ((i35 | 0) == (HEAP32[i29 + 16 >> 2] | 0)) i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i29 >> 2] | 0) + 36 >> 2] & 127](i29) | 0; else i37 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i35 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i37, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i36) break; else {
   i30 = 52;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i30 = 50;
   break;
  }
 } else i30 = 50; while (0);
 if ((i30 | 0) == 50 ? i36 : 0) i30 = 52;
 if ((i30 | 0) == 52) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i1;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i7 = i1 + 192 | 0;
 i8 = i1 + 160 | 0;
 i9 = i1 + 220 | 0;
 i10 = i1 + 208 | 0;
 i11 = i1 + 204 | 0;
 i12 = i1;
 i13 = i1 + 200 | 0;
 i14 = i1 + 196 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 i15 = 0;
 while (1) {
  if ((i15 | 0) == 3) break;
  HEAP32[i9 + (i15 << 2) >> 2] = 0;
  i15 = i15 + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i10, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 32 >> 2] & 15](i4, 10736, 10762, i8) | 0;
 __ZNSt3__26localeD2Ev(i10);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i15 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i16 = (HEAP32[i15 >> 2] & 2147483647) + -1 | 0; else i16 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i16, 0);
 i16 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i16;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i17 = i10 + 4 | 0;
 i18 = HEAP32[i2 >> 2] | 0;
 i19 = i16;
 i16 = i18;
 i20 = i18;
 L12 : while (1) {
  if (i20) {
   i18 = HEAP32[i20 + 12 >> 2] | 0;
   if ((i18 | 0) == (HEAP32[i20 + 16 >> 2] | 0)) i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i20 >> 2] | 0) + 36 >> 2] & 127](i20) | 0; else i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i18 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i22 = 0;
    i23 = 1;
    i24 = 0;
   } else {
    i22 = i16;
    i23 = 0;
    i24 = i20;
   }
  } else {
   i22 = 0;
   i23 = 1;
   i24 = 0;
  }
  i18 = HEAP32[i3 >> 2] | 0;
  do if (i18) {
   i25 = HEAP32[i18 + 12 >> 2] | 0;
   if ((i25 | 0) == (HEAP32[i18 + 16 >> 2] | 0)) i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i18 >> 2] | 0) + 36 >> 2] & 127](i18) | 0; else i26 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i25 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i26, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i23) {
    i27 = i18;
    break;
   } else {
    i28 = i19;
    i29 = i18;
    break L12;
   } else {
    HEAP32[i3 >> 2] = 0;
    i30 = 22;
    break;
   }
  } else i30 = 22; while (0);
  if ((i30 | 0) == 22) {
   i30 = 0;
   if (i23) {
    i28 = i19;
    i29 = 0;
    break;
   } else i27 = 0;
  }
  i18 = HEAP8[i4 >> 0] | 0;
  i25 = i18 << 24 >> 24 < 0 ? HEAP32[i17 >> 2] | 0 : i18 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i19 + i25 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i25 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i31 = (HEAP32[i15 >> 2] & 2147483647) + -1 | 0; else i31 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i31, 0);
   i18 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i18 + i25;
   i32 = i18;
  } else i32 = i19;
  i18 = i24 + 12 | 0;
  i25 = HEAP32[i18 >> 2] | 0;
  i33 = i24 + 16 | 0;
  if ((i25 | 0) == (HEAP32[i33 >> 2] | 0)) i34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i34 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i25 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i34 & 255, 16, i32, i11, i14, 0, i9, i12, i13, i8) | 0) {
   i28 = i32;
   i29 = i27;
   break;
  }
  i25 = HEAP32[i18 >> 2] | 0;
  if ((i25 | 0) == (HEAP32[i33 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 40 >> 2] & 127](i24) | 0; else {
   HEAP32[i18 >> 2] = i25 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i25 >> 0] | 0) | 0;
  }
  i19 = i32;
  i16 = i22;
  i20 = i24;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, (HEAP32[i11 >> 2] | 0) - i28 | 0, 0);
 i28 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 i4 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i7 >> 2] = i6;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z(i28, i4, 47368, i7) | 0) != 1) HEAP32[i5 >> 2] = 4;
 if (i24) {
  i7 = HEAP32[i24 + 12 >> 2] | 0;
  if ((i7 | 0) == (HEAP32[i24 + 16 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i22 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i35 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i7 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i35, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i36 = 1;
  } else i36 = 0;
 } else i36 = 1;
 do if (i29) {
  i35 = HEAP32[i29 + 12 >> 2] | 0;
  if ((i35 | 0) == (HEAP32[i29 + 16 >> 2] | 0)) i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i29 >> 2] | 0) + 36 >> 2] & 127](i29) | 0; else i37 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i35 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i37, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i36) break; else {
   i30 = 52;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i30 = 50;
   break;
  }
 } else i30 = 50; while (0);
 if ((i30 | 0) == 50 ? i36 : 0) i30 = 52;
 if ((i30 | 0) == 52) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i1;
 return i5 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i8 = i7 + 224 | 0;
 i9 = i7 + 212 | 0;
 i10 = i7 + 200 | 0;
 i11 = i7 + 196 | 0;
 i12 = i7;
 i13 = i7 + 192 | 0;
 i14 = i7 + 188 | 0;
 i15 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i4) | 0;
 i16 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i4, i7 + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i9, i4, i8);
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i10 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i10 + 11 | 0;
 i1 = i10 + 8 | 0;
 if ((HEAP8[i4 >> 0] | 0) < 0) i17 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i17 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i17, 0);
 i17 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
 HEAP32[i11 >> 2] = i17;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i14 >> 2] = 0;
 i18 = i10 + 4 | 0;
 i19 = HEAP32[i2 >> 2] | 0;
 i20 = i17;
 i17 = i19;
 i21 = i19;
 L8 : while (1) {
  if (i21) {
   i19 = HEAP32[i21 + 12 >> 2] | 0;
   if ((i19 | 0) == (HEAP32[i21 + 16 >> 2] | 0)) i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i21 >> 2] | 0) + 36 >> 2] & 127](i21) | 0; else i22 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i19 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i22, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i23 = 0;
    i24 = 1;
    i25 = 0;
   } else {
    i23 = i17;
    i24 = 0;
    i25 = i21;
   }
  } else {
   i23 = 0;
   i24 = 1;
   i25 = 0;
  }
  i19 = HEAP32[i3 >> 2] | 0;
  do if (i19) {
   i26 = HEAP32[i19 + 12 >> 2] | 0;
   if ((i26 | 0) == (HEAP32[i19 + 16 >> 2] | 0)) i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i19 >> 2] | 0) + 36 >> 2] & 127](i19) | 0; else i27 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i27, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i24) {
    i28 = i19;
    break;
   } else {
    i29 = i20;
    i30 = i19;
    break L8;
   } else {
    HEAP32[i3 >> 2] = 0;
    i31 = 19;
    break;
   }
  } else i31 = 19; while (0);
  if ((i31 | 0) == 19) {
   i31 = 0;
   if (i24) {
    i29 = i20;
    i30 = 0;
    break;
   } else i28 = 0;
  }
  i19 = HEAP8[i4 >> 0] | 0;
  i26 = i19 << 24 >> 24 < 0 ? HEAP32[i18 >> 2] | 0 : i19 & 255;
  if ((HEAP32[i11 >> 2] | 0) == (i20 + i26 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i26 << 1, 0);
   if ((HEAP8[i4 >> 0] | 0) < 0) i32 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i32 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i10, i32, 0);
   i19 = (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i10 >> 2] | 0 : i10;
   HEAP32[i11 >> 2] = i19 + i26;
   i33 = i19;
  } else i33 = i20;
  i19 = i25 + 12 | 0;
  i26 = HEAP32[i19 >> 2] | 0;
  i34 = i25 + 16 | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) i35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i35 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i35 & 255, i15, i33, i11, i14, HEAP8[i8 >> 0] | 0, i9, i12, i13, i16) | 0) {
   i29 = i33;
   i30 = i28;
   break;
  }
  i26 = HEAP32[i19 >> 2] | 0;
  if ((i26 | 0) == (HEAP32[i34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i25 >> 2] | 0) + 40 >> 2] & 127](i25) | 0; else {
   HEAP32[i19 >> 2] = i26 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i26 >> 0] | 0) | 0;
  }
  i20 = i33;
  i17 = i23;
  i21 = i25;
 }
 i21 = HEAP8[i9 + 11 >> 0] | 0;
 if ((i21 << 24 >> 24 < 0 ? HEAP32[i9 + 4 >> 2] | 0 : i21 & 255) | 0 ? (i21 = HEAP32[i13 >> 2] | 0, (i21 - i12 | 0) < 160) : 0) {
  i17 = HEAP32[i14 >> 2] | 0;
  HEAP32[i13 >> 2] = i21 + 4;
  HEAP32[i21 >> 2] = i17;
 }
 i17 = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji(i29, HEAP32[i11 >> 2] | 0, i5, i15) | 0;
 HEAP32[i6 >> 2] = i17;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i9, i12, HEAP32[i13 >> 2] | 0, i5);
 if (i25) {
  i13 = HEAP32[i25 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i25 + 16 >> 2] | 0)) i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i25) | 0; else i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i13 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i36, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i37 = 1;
  } else i37 = 0;
 } else i37 = 1;
 do if (i30) {
  i36 = HEAP32[i30 + 12 >> 2] | 0;
  if ((i36 | 0) == (HEAP32[i30 + 16 >> 2] | 0)) i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i30 >> 2] | 0) + 36 >> 2] & 127](i30) | 0; else i38 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i36 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i38, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i37) break; else {
   i31 = 50;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i31 = 48;
   break;
  }
 } else i31 = 48; while (0);
 if ((i31 | 0) == 48 ? i37 : 0) i31 = 50;
 if ((i31 | 0) == 50) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
 i5 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i7;
 return i5 | 0;
}

function _ar2SetTemplateSub(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i8 = i7 + 60 | 0;
 i9 = i7 + 56 | 0;
 i10 = i7 + 52 | 0;
 i11 = i7 + 48 | 0;
 i12 = i7;
 i13 = i7 + 64 | 0;
 if (!i1) {
  i14 = HEAP32[i4 >> 2] | 0;
  i15 = HEAP32[i14 + (i5 * 20 | 0) + 8 >> 2] | 0;
  HEAP32[i8 >> 2] = i15;
  d16 = +HEAPF32[i14 + (i5 * 20 | 0) + 12 >> 2];
  HEAPF32[i9 >> 2] = d16;
  if ((_ar2MarkerCoord2ScreenCoord(0, i2, (HEAP32[tempDoublePtr >> 2] = i15, +HEAPF32[tempDoublePtr >> 2]), d16, i10, i11) | 0) < 0) {
   i17 = -1;
   STACKTOP = i7;
   return i17 | 0;
  }
  i15 = ~~(+HEAPF32[i10 >> 2] + .5);
  i14 = HEAP32[i6 + 16 >> 2] | 0;
  i18 = 0 - i14 | 0;
  i19 = i6 + 20 | 0;
  i20 = HEAP32[i19 >> 2] | 0;
  if ((i20 | 0) < (i18 | 0)) {
   i17 = -1;
   STACKTOP = i7;
   return i17 | 0;
  }
  i21 = i6 + 8 | 0;
  i22 = i6 + 12 | 0;
  i23 = i4 + 8 | 0;
  i24 = i18;
  i18 = ~~(+HEAPF32[i11 >> 2] + .5) - (i14 << 1) | 0;
  i14 = 0;
  i25 = 0;
  i26 = HEAP32[i6 + 24 >> 2] | 0;
  i27 = 0;
  i28 = HEAP32[i22 >> 2] | 0;
  i29 = i20;
  while (1) {
   i20 = HEAP32[i21 >> 2] | 0;
   i30 = 0 - i20 | 0;
   if ((i28 | 0) < (i30 | 0)) {
    i31 = i27;
    i32 = i14;
    i33 = i25;
    i34 = i26;
    i35 = i29;
    i36 = i28;
   } else {
    d16 = +(i18 | 0);
    i37 = i30;
    i30 = i15 - (i20 << 1) | 0;
    i20 = i14;
    i38 = i25;
    i39 = i26;
    i40 = i27;
    while (1) {
     if ((_ar2GetImageValue(0, i2, HEAP32[(HEAP32[i3 >> 2] | 0) + (HEAP32[i23 >> 2] << 2) >> 2] | 0, +(i30 | 0), d16, i13) | 0) < 0) {
      HEAP16[i39 >> 1] = 4096;
      i41 = i40;
      i42 = i20;
      i43 = i38;
     } else {
      i44 = HEAP8[i13 >> 0] | 0;
      HEAP16[i39 >> 1] = i44 & 255;
      i45 = i44 & 255;
      i41 = i40 + 1 | 0;
      i42 = (Math_imul(i45, i45) | 0) + i20 | 0;
      i43 = i38 + i45 | 0;
     }
     i39 = i39 + 2 | 0;
     i46 = HEAP32[i22 >> 2] | 0;
     if ((i37 | 0) >= (i46 | 0)) break; else {
      i37 = i37 + 1 | 0;
      i30 = i30 + 2 | 0;
      i20 = i42;
      i38 = i43;
      i40 = i41;
     }
    }
    i31 = i41;
    i32 = i42;
    i33 = i43;
    i34 = i39;
    i35 = HEAP32[i19 >> 2] | 0;
    i36 = i46;
   }
   if ((i24 | 0) < (i35 | 0)) {
    i24 = i24 + 1 | 0;
    i18 = i18 + 2 | 0;
    i14 = i32;
    i25 = i33;
    i26 = i34;
    i27 = i31;
    i28 = i36;
    i29 = i35;
   } else {
    i47 = i31;
    i48 = i32;
    i49 = i33;
    break;
   }
  }
 } else {
  _arUtilMatMuldff(i1 + 8 | 0, i2, i12) | 0;
  i2 = HEAP32[i4 >> 2] | 0;
  i33 = HEAP32[i2 + (i5 * 20 | 0) + 8 >> 2] | 0;
  HEAP32[i8 >> 2] = i33;
  d16 = +HEAPF32[i2 + (i5 * 20 | 0) + 12 >> 2];
  HEAPF32[i9 >> 2] = d16;
  if ((_ar2MarkerCoord2ScreenCoord(0, i12, (HEAP32[tempDoublePtr >> 2] = i33, +HEAPF32[tempDoublePtr >> 2]), d16, i8, i9) | 0) < 0) {
   i17 = -1;
   STACKTOP = i7;
   return i17 | 0;
  }
  i33 = i1 + 184 | 0;
  if ((_arParamIdeal2ObservLTf(i33, +HEAPF32[i8 >> 2], +HEAPF32[i9 >> 2], i10, i11) | 0) < 0) {
   i17 = -1;
   STACKTOP = i7;
   return i17 | 0;
  }
  i9 = ~~(+HEAPF32[i10 >> 2] + .5);
  i8 = HEAP32[i6 + 16 >> 2] | 0;
  i1 = 0 - i8 | 0;
  i5 = i6 + 20 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) < (i1 | 0)) {
   i17 = -1;
   STACKTOP = i7;
   return i17 | 0;
  }
  i32 = i6 + 8 | 0;
  i31 = i6 + 12 | 0;
  i35 = i4 + 8 | 0;
  i4 = i1;
  i1 = ~~(+HEAPF32[i11 >> 2] + .5) - (i8 << 1) | 0;
  i8 = 0;
  i29 = 0;
  i36 = HEAP32[i6 + 24 >> 2] | 0;
  i28 = 0;
  i27 = i2;
  i2 = HEAP32[i31 >> 2] | 0;
  while (1) {
   i34 = HEAP32[i32 >> 2] | 0;
   i26 = 0 - i34 | 0;
   if ((i2 | 0) < (i26 | 0)) {
    i50 = i28;
    i51 = i8;
    i52 = i29;
    i53 = i36;
    i54 = i2;
    i55 = i27;
   } else {
    d16 = +(i1 | 0);
    i25 = i26;
    i26 = i9 - (i34 << 1) | 0;
    i34 = i8;
    i14 = i29;
    i18 = i36;
    i24 = i28;
    while (1) {
     do if ((_arParamObserv2IdealLTf(i33, +(i26 | 0), d16, i10, i11) | 0) >= 0) if ((_ar2GetImageValue(0, i12, HEAP32[(HEAP32[i3 >> 2] | 0) + (HEAP32[i35 >> 2] << 2) >> 2] | 0, +HEAPF32[i10 >> 2], +HEAPF32[i11 >> 2], i13) | 0) < 0) {
      HEAP16[i18 >> 1] = 4096;
      i56 = i24;
      i57 = i34;
      i58 = i14;
      break;
     } else {
      i46 = HEAP8[i13 >> 0] | 0;
      HEAP16[i18 >> 1] = i46 & 255;
      i19 = i46 & 255;
      i56 = i24 + 1 | 0;
      i57 = (Math_imul(i19, i19) | 0) + i34 | 0;
      i58 = i14 + i19 | 0;
      break;
     } else {
      HEAP16[i18 >> 1] = 4096;
      i56 = i24;
      i57 = i34;
      i58 = i14;
     } while (0);
     i18 = i18 + 2 | 0;
     i59 = HEAP32[i31 >> 2] | 0;
     if ((i25 | 0) >= (i59 | 0)) break; else {
      i25 = i25 + 1 | 0;
      i26 = i26 + 2 | 0;
      i34 = i57;
      i14 = i58;
      i24 = i56;
     }
    }
    i50 = i56;
    i51 = i57;
    i52 = i58;
    i53 = i18;
    i54 = i59;
    i55 = HEAP32[i5 >> 2] | 0;
   }
   if ((i4 | 0) < (i55 | 0)) {
    i4 = i4 + 1 | 0;
    i1 = i1 + 2 | 0;
    i8 = i51;
    i29 = i52;
    i36 = i53;
    i28 = i50;
    i27 = i55;
    i2 = i54;
   } else {
    i47 = i50;
    i48 = i51;
    i49 = i52;
    break;
   }
  }
 }
 if (!i47) {
  i17 = -1;
  STACKTOP = i7;
  return i17 | 0;
 }
 i52 = ~~+Math_sqrt(+(+(i48 - ((Math_imul(i49, i49) | 0) / (i47 | 0) | 0) | 0)));
 HEAP32[i6 + 28 >> 2] = i52;
 HEAP32[i6 + 32 >> 2] = i49;
 HEAP32[i6 + 36 >> 2] = i47;
 i17 = 0;
 STACKTOP = i7;
 return i17 | 0;
}

function __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i6 = HEAP32[i1 >> 2] | 0;
 do if (i6) {
  i7 = HEAP32[i6 + 12 >> 2] | 0;
  if ((i7 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i8 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i7 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i8, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i1 >> 2] = 0;
   i9 = 1;
   break;
  } else {
   i9 = (HEAP32[i1 >> 2] | 0) == 0;
   break;
  }
 } else i9 = 1; while (0);
 i8 = HEAP32[i2 >> 2] | 0;
 do if (i8) {
  i6 = HEAP32[i8 + 12 >> 2] | 0;
  if ((i6 | 0) == (HEAP32[i8 + 16 >> 2] | 0)) i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 36 >> 2] & 127](i8) | 0; else i10 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i6 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i10, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i9) {
   i11 = i8;
   i12 = 17;
   break;
  } else {
   i12 = 16;
   break;
  } else {
   HEAP32[i2 >> 2] = 0;
   i12 = 14;
   break;
  }
 } else i12 = 14; while (0);
 if ((i12 | 0) == 14) if (i9) i12 = 16; else {
  i11 = 0;
  i12 = 17;
 }
 L22 : do if ((i12 | 0) == 16) {
  HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 6;
  i13 = 0;
 } else if ((i12 | 0) == 17) {
  i9 = HEAP32[i1 >> 2] | 0;
  i8 = HEAP32[i9 + 12 >> 2] | 0;
  if ((i8 | 0) == (HEAP32[i9 + 16 >> 2] | 0)) i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 127](i9) | 0; else i14 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i8 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] & 63](i4, 2048, i14) | 0)) {
   HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 4;
   i13 = 0;
   break;
  }
  i8 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 63](i4, i14, 0) | 0) << 24 >> 24;
  i9 = HEAP32[i1 >> 2] | 0;
  i10 = i9 + 12 | 0;
  i6 = HEAP32[i10 >> 2] | 0;
  if ((i6 | 0) == (HEAP32[i9 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 40 >> 2] & 127](i9) | 0; else {
   HEAP32[i10 >> 2] = i6 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i6 >> 2] | 0) | 0;
  }
  i6 = i8;
  i8 = i5;
  i10 = i11;
  i9 = i11;
  while (1) {
   i15 = i6 + -48 | 0;
   i7 = i8 + -1 | 0;
   i16 = HEAP32[i1 >> 2] | 0;
   do if (i16) {
    i17 = HEAP32[i16 + 12 >> 2] | 0;
    if ((i17 | 0) == (HEAP32[i16 + 16 >> 2] | 0)) i18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i16 >> 2] | 0) + 36 >> 2] & 127](i16) | 0; else i18 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i17 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i18, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[i1 >> 2] = 0;
     i19 = 1;
     break;
    } else {
     i19 = (HEAP32[i1 >> 2] | 0) == 0;
     break;
    }
   } else i19 = 1; while (0);
   if (i9) {
    i16 = HEAP32[i9 + 12 >> 2] | 0;
    if ((i16 | 0) == (HEAP32[i9 + 16 >> 2] | 0)) i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 127](i9) | 0; else i20 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i16 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i20, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[i2 >> 2] = 0;
     i21 = 1;
     i22 = 0;
     i23 = 0;
    } else {
     i21 = 0;
     i22 = i10;
     i23 = i9;
    }
   } else {
    i21 = 1;
    i22 = i10;
    i23 = 0;
   }
   i24 = HEAP32[i1 >> 2] | 0;
   if (!((i8 | 0) > 1 & (i19 ^ i21))) break;
   i16 = HEAP32[i24 + 12 >> 2] | 0;
   if ((i16 | 0) == (HEAP32[i24 + 16 >> 2] | 0)) i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i16 >> 2] | 0) | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] & 63](i4, 2048, i25) | 0)) {
    i13 = i15;
    break L22;
   }
   i16 = (i15 * 10 | 0) + ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 63](i4, i25, 0) | 0) << 24 >> 24) | 0;
   i17 = HEAP32[i1 >> 2] | 0;
   i26 = i17 + 12 | 0;
   i27 = HEAP32[i26 >> 2] | 0;
   if ((i27 | 0) == (HEAP32[i17 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i17 >> 2] | 0) + 40 >> 2] & 127](i17) | 0; else {
    HEAP32[i26 >> 2] = i27 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i27 >> 2] | 0) | 0;
   }
   i6 = i16;
   i8 = i7;
   i10 = i22;
   i9 = i23;
  }
  do if (i24) {
   i9 = HEAP32[i24 + 12 >> 2] | 0;
   if ((i9 | 0) == (HEAP32[i24 + 16 >> 2] | 0)) i28 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i24 >> 2] | 0) + 36 >> 2] & 127](i24) | 0; else i28 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i9 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i28, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i1 >> 2] = 0;
    i29 = 1;
    break;
   } else {
    i29 = (HEAP32[i1 >> 2] | 0) == 0;
    break;
   }
  } else i29 = 1; while (0);
  do if (i22) {
   i9 = HEAP32[i22 + 12 >> 2] | 0;
   if ((i9 | 0) == (HEAP32[i22 + 16 >> 2] | 0)) i30 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i22 >> 2] | 0) + 36 >> 2] & 127](i22) | 0; else i30 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i9 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i30, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i29) {
    i13 = i15;
    break L22;
   } else break; else {
    HEAP32[i2 >> 2] = 0;
    i12 = 61;
    break;
   }
  } else i12 = 61; while (0);
  if ((i12 | 0) == 61 ? !i29 : 0) {
   i13 = i15;
   break;
  }
  HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 2;
  i13 = i15;
 } while (0);
 return i13 | 0;
}

function __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 var i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0;
 HEAP32[i3 >> 2] = i1;
 i16 = i14 + 11 | 0;
 i17 = i14 + 4 | 0;
 i18 = i13 + 11 | 0;
 i19 = i13 + 4 | 0;
 i20 = (i4 & 512 | 0) == 0;
 i21 = i7 + 8 | 0;
 i22 = (i15 | 0) > 0;
 i23 = i12 + 11 | 0;
 i24 = i12 + 4 | 0;
 i25 = 0;
 i26 = i5;
 while (1) {
  if ((i25 | 0) == 4) break;
  L4 : do switch (HEAP8[i9 + i25 >> 0] | 0) {
  case 0:
   {
    HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
    i27 = i26;
    break;
   }
  case 1:
   {
    HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 32) | 0;
    i28 = HEAP32[i3 >> 2] | 0;
    HEAP32[i3 >> 2] = i28 + 1;
    HEAP8[i28 >> 0] = i5;
    i27 = i26;
    break;
   }
  case 3:
   {
    i5 = HEAP8[i16 >> 0] | 0;
    i28 = i5 << 24 >> 24 < 0;
    if (!((i28 ? HEAP32[i17 >> 2] | 0 : i5 & 255) | 0)) i27 = i26; else {
     i5 = HEAP8[(i28 ? HEAP32[i14 >> 2] | 0 : i14) >> 0] | 0;
     i28 = HEAP32[i3 >> 2] | 0;
     HEAP32[i3 >> 2] = i28 + 1;
     HEAP8[i28 >> 0] = i5;
     i27 = i26;
    }
    break;
   }
  case 2:
   {
    i5 = HEAP8[i18 >> 0] | 0;
    i28 = i5 << 24 >> 24 < 0;
    i29 = i28 ? HEAP32[i19 >> 2] | 0 : i5 & 255;
    if (i20 | (i29 | 0) == 0) i27 = i26; else {
     i5 = i28 ? HEAP32[i13 >> 2] | 0 : i13;
     i28 = i5 + i29 | 0;
     i29 = HEAP32[i3 >> 2] | 0;
     i30 = i5;
     while (1) {
      if ((i30 | 0) == (i28 | 0)) break;
      HEAP8[i29 >> 0] = HEAP8[i30 >> 0] | 0;
      i29 = i29 + 1 | 0;
      i30 = i30 + 1 | 0;
     }
     HEAP32[i3 >> 2] = i29;
     i27 = i26;
    }
    break;
   }
  case 4:
   {
    i30 = HEAP32[i3 >> 2] | 0;
    i28 = i8 ? i26 + 1 | 0 : i26;
    i5 = i28;
    while (1) {
     if (i5 >>> 0 >= i6 >>> 0) break;
     i31 = HEAP8[i5 >> 0] | 0;
     if (i31 << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[i21 >> 2] | 0) + (i31 << 24 >> 24 << 1) >> 1] & 2048)) break;
     i5 = i5 + 1 | 0;
    }
    if (i22) {
     i29 = i15;
     i31 = i5;
     while (1) {
      i32 = (i29 | 0) > 0;
      if (!(i31 >>> 0 > i28 >>> 0 & i32)) break;
      i33 = i31 + -1 | 0;
      i34 = HEAP8[i33 >> 0] | 0;
      i35 = HEAP32[i3 >> 2] | 0;
      HEAP32[i3 >> 2] = i35 + 1;
      HEAP8[i35 >> 0] = i34;
      i29 = i29 + -1 | 0;
      i31 = i33;
     }
     if (i32) i36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 48) | 0; else i36 = 0;
     i33 = i29;
     while (1) {
      i37 = HEAP32[i3 >> 2] | 0;
      HEAP32[i3 >> 2] = i37 + 1;
      if ((i33 | 0) <= 0) break;
      HEAP8[i37 >> 0] = i36;
      i33 = i33 + -1 | 0;
     }
     HEAP8[i37 >> 0] = i10;
     i38 = i31;
    } else i38 = i5;
    L36 : do if ((i38 | 0) == (i28 | 0)) {
     i33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 48) | 0;
     i29 = HEAP32[i3 >> 2] | 0;
     HEAP32[i3 >> 2] = i29 + 1;
     HEAP8[i29 >> 0] = i33;
    } else {
     i33 = HEAP8[i23 >> 0] | 0;
     i29 = i33 << 24 >> 24 < 0;
     if (!((i29 ? HEAP32[i24 >> 2] | 0 : i33 & 255) | 0)) i39 = -1; else i39 = HEAP8[(i29 ? HEAP32[i12 >> 2] | 0 : i12) >> 0] | 0;
     i29 = i39;
     i33 = 0;
     i34 = 0;
     i35 = i38;
     while (1) {
      if ((i35 | 0) == (i28 | 0)) break L36;
      if ((i34 | 0) == (i29 | 0)) {
       i40 = HEAP32[i3 >> 2] | 0;
       HEAP32[i3 >> 2] = i40 + 1;
       HEAP8[i40 >> 0] = i11;
       i40 = i33 + 1 | 0;
       i41 = HEAP8[i23 >> 0] | 0;
       i42 = i41 << 24 >> 24 < 0;
       if (i40 >>> 0 < (i42 ? HEAP32[i24 >> 2] | 0 : i41 & 255) >>> 0) {
        i41 = HEAP8[(i42 ? HEAP32[i12 >> 2] | 0 : i12) + i40 >> 0] | 0;
        i43 = i41 << 24 >> 24 == 127 ? -1 : i41 << 24 >> 24;
        i44 = i40;
        i45 = 0;
       } else {
        i43 = i34;
        i44 = i40;
        i45 = 0;
       }
      } else {
       i43 = i29;
       i44 = i33;
       i45 = i34;
      }
      i40 = i35 + -1 | 0;
      i41 = HEAP8[i40 >> 0] | 0;
      i42 = HEAP32[i3 >> 2] | 0;
      HEAP32[i3 >> 2] = i42 + 1;
      HEAP8[i42 >> 0] = i41;
      i29 = i43;
      i33 = i44;
      i34 = i45 + 1 | 0;
      i35 = i40;
     }
    } while (0);
    i5 = HEAP32[i3 >> 2] | 0;
    if ((i30 | 0) == (i5 | 0)) i27 = i28; else {
     i31 = i5;
     i5 = i30;
     while (1) {
      i35 = i31 + -1 | 0;
      if (i5 >>> 0 >= i35 >>> 0) {
       i27 = i28;
       break L4;
      }
      i34 = HEAP8[i5 >> 0] | 0;
      HEAP8[i5 >> 0] = HEAP8[i35 >> 0] | 0;
      HEAP8[i35 >> 0] = i34;
      i31 = i35;
      i5 = i5 + 1 | 0;
     }
    }
    break;
   }
  default:
   i27 = i26;
  } while (0);
  i25 = i25 + 1 | 0;
  i26 = i27;
 }
 i27 = HEAP8[i16 >> 0] | 0;
 i16 = i27 << 24 >> 24 < 0;
 i26 = i16 ? HEAP32[i17 >> 2] | 0 : i27 & 255;
 if (i26 >>> 0 > 1) {
  i27 = i16 ? HEAP32[i14 >> 2] | 0 : i14;
  i14 = i27 + i26 | 0;
  i26 = HEAP32[i3 >> 2] | 0;
  i16 = i27;
  while (1) {
   i27 = i16 + 1 | 0;
   if ((i27 | 0) == (i14 | 0)) break;
   HEAP8[i26 >> 0] = HEAP8[i27 >> 0] | 0;
   i26 = i26 + 1 | 0;
   i16 = i27;
  }
  HEAP32[i3 >> 2] = i26;
 }
 switch ((i4 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i2 >> 2] = i1;
 }
 return;
}

function _finish_pass1(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0;
 i2 = i1 + 460 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i4 = i1 + 136 | 0;
 HEAP32[i4 >> 2] = HEAP32[i3 + 16 >> 2];
 i5 = HEAP32[i3 + 20 >> 2] | 0;
 i6 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, i5 << 5) | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 31;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 63;
 HEAP32[i6 + 16 >> 2] = 0;
 HEAP32[i6 + 20 >> 2] = 31;
 _update_box(i1, i6);
 L1 : do if ((i5 | 0) > 1) {
  i7 = 1;
  while (1) {
   if ((i7 << 1 | 0) > (i5 | 0)) {
    i8 = 0;
    i9 = 0;
    i10 = i6;
    i11 = 0;
    while (1) {
     i12 = HEAP32[i10 + 24 >> 2] | 0;
     i13 = (i12 | 0) > (i8 | 0);
     i14 = i13 ? i10 : i11;
     i9 = i9 + 1 | 0;
     if ((i9 | 0) == (i7 | 0)) {
      i15 = i14;
      break;
     } else {
      i8 = i13 ? i12 : i8;
      i10 = i10 + 32 | 0;
      i11 = i14;
     }
    }
   } else {
    i11 = 0;
    i10 = 0;
    i8 = i6;
    i9 = 0;
    while (1) {
     i14 = HEAP32[i8 + 28 >> 2] | 0;
     if ((i14 | 0) > (i11 | 0)) {
      i12 = (HEAP32[i8 + 24 >> 2] | 0) > 0;
      i16 = i12 ? i8 : i9;
      i17 = i12 ? i14 : i11;
     } else {
      i16 = i9;
      i17 = i11;
     }
     i10 = i10 + 1 | 0;
     if ((i10 | 0) == (i7 | 0)) {
      i15 = i16;
      break;
     } else {
      i11 = i17;
      i8 = i8 + 32 | 0;
      i9 = i16;
     }
    }
   }
   if (!i15) {
    i18 = i7;
    break L1;
   }
   i9 = i6 + (i7 << 5) | 0;
   i8 = i15 + 4 | 0;
   HEAP32[i6 + (i7 << 5) + 4 >> 2] = HEAP32[i8 >> 2];
   i11 = i15 + 12 | 0;
   HEAP32[i6 + (i7 << 5) + 12 >> 2] = HEAP32[i11 >> 2];
   i10 = i15 + 20 | 0;
   HEAP32[i6 + (i7 << 5) + 20 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i15 >> 2];
   i14 = i15 + 8 | 0;
   i12 = i6 + (i7 << 5) + 8 | 0;
   HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
   i13 = i15 + 16 | 0;
   i19 = i6 + (i7 << 5) + 16 | 0;
   HEAP32[i19 >> 2] = HEAP32[i13 >> 2];
   i20 = HEAP32[i8 >> 2] | 0;
   i21 = HEAP32[i15 >> 2] | 0;
   i22 = i20 - i21 << 4;
   i23 = HEAP32[i11 >> 2] | 0;
   i24 = HEAP32[i14 >> 2] | 0;
   i14 = (i23 - i24 | 0) * 12 | 0;
   i25 = HEAP32[i10 >> 2] | 0;
   i26 = HEAP32[i13 >> 2] | 0;
   i13 = (i22 | 0) > (i14 | 0);
   switch (((i25 - i26 << 3 | 0) > ((i13 ? i22 : i14) | 0) ? 2 : (i13 ^ 1) & 1) & 3) {
   case 0:
    {
     i13 = (i21 + i20 | 0) / 2 | 0;
     HEAP32[i8 >> 2] = i13;
     i27 = i9;
     i28 = i13;
     i29 = 15;
     break;
    }
   case 1:
    {
     i13 = (i24 + i23 | 0) / 2 | 0;
     HEAP32[i11 >> 2] = i13;
     i27 = i12;
     i28 = i13;
     i29 = 15;
     break;
    }
   case 2:
    {
     i13 = (i26 + i25 | 0) / 2 | 0;
     HEAP32[i10 >> 2] = i13;
     i27 = i19;
     i28 = i13;
     i29 = 15;
     break;
    }
   default:
    {}
   }
   if ((i29 | 0) == 15) {
    i29 = 0;
    HEAP32[i27 >> 2] = i28 + 1;
   }
   _update_box(i1, i15);
   _update_box(i1, i9);
   i9 = i7 + 1 | 0;
   if ((i9 | 0) < (i5 | 0)) i7 = i9; else {
    i18 = i9;
    break L1;
   }
  }
 } else i18 = 1; while (0);
 i5 = 0;
 do {
  i15 = HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] | 0;
  i28 = HEAP32[i6 + (i5 << 5) >> 2] | 0;
  i27 = HEAP32[i6 + (i5 << 5) + 4 >> 2] | 0;
  i29 = HEAP32[i6 + (i5 << 5) + 8 >> 2] | 0;
  i16 = HEAP32[i6 + (i5 << 5) + 12 >> 2] | 0;
  i17 = HEAP32[i6 + (i5 << 5) + 16 >> 2] | 0;
  i7 = HEAP32[i6 + (i5 << 5) + 20 >> 2] | 0;
  if ((i28 | 0) > (i27 | 0) | (i29 | 0) > (i16 | 0) | (i17 | 0) > (i7 | 0)) {
   i30 = 0;
   i31 = 0;
   i32 = 0;
   i33 = 0;
  } else {
   i9 = 0;
   i13 = 0;
   i19 = 0;
   i10 = 0;
   i25 = i28;
   while (1) {
    i28 = HEAP32[i15 + (i25 << 2) >> 2] | 0;
    i26 = i25 << 3 | 4;
    i12 = i29;
    i11 = i9;
    i23 = i13;
    i24 = i19;
    i8 = i10;
    while (1) {
     i20 = i12 << 2 | 2;
     i21 = i28 + (i12 << 6) + (i17 << 1) | 0;
     i14 = i17;
     i22 = i11;
     i34 = i23;
     i35 = i24;
     i36 = i8;
     while (1) {
      i37 = HEAP16[i21 >> 1] | 0;
      i38 = i37 & 65535;
      if (!(i37 << 16 >> 16)) {
       i39 = i22;
       i40 = i34;
       i41 = i35;
       i42 = i36;
      } else {
       i39 = (Math_imul(i14 << 3 | 4, i38) | 0) + i22 | 0;
       i40 = (Math_imul(i20, i38) | 0) + i34 | 0;
       i41 = (Math_imul(i26, i38) | 0) + i35 | 0;
       i42 = i36 + i38 | 0;
      }
      if ((i14 | 0) < (i7 | 0)) {
       i21 = i21 + 2 | 0;
       i14 = i14 + 1 | 0;
       i22 = i39;
       i34 = i40;
       i35 = i41;
       i36 = i42;
      } else break;
     }
     if ((i12 | 0) < (i16 | 0)) {
      i12 = i12 + 1 | 0;
      i11 = i39;
      i23 = i40;
      i24 = i41;
      i8 = i42;
     } else break;
    }
    if ((i25 | 0) < (i27 | 0)) {
     i9 = i39;
     i13 = i40;
     i19 = i41;
     i10 = i42;
     i25 = i25 + 1 | 0;
    } else {
     i30 = i39;
     i31 = i40;
     i32 = i41;
     i33 = i42;
     break;
    }
   }
  }
  i25 = i33 >> 1;
  HEAP8[(HEAP32[HEAP32[i4 >> 2] >> 2] | 0) + i5 >> 0] = (i32 + i25 | 0) / (i33 | 0) | 0;
  HEAP8[(HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] | 0) + i5 >> 0] = (i31 + i25 | 0) / (i33 | 0) | 0;
  HEAP8[(HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] | 0) + i5 >> 0] = (i30 + i25 | 0) / (i33 | 0) | 0;
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) < (i18 | 0));
 HEAP32[i1 + 132 >> 2] = i18;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i5 + 20 >> 2] = 96;
 HEAP32[i5 + 24 >> 2] = i18;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
 HEAP32[i3 + 28 >> 2] = 1;
 return;
}

function __ZN6vision20VisualDatabaseFacade30addFreakFeaturesAndDescriptorsERKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEERKNS2_IhNS4_IhEEEERKNS2_INS_7Point3dIfEENS4_ISE_EEEEmmi(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i9 = i8 + 24 | 0;
 i10 = i8 + 12 | 0;
 i11 = i8 + 16 | 0;
 i12 = i8 + 8 | 0;
 i13 = i8;
 HEAP32[i10 >> 2] = i7;
 i7 = __Znwm(148) | 0;
 i14 = i7 + 36 | 0;
 i15 = i7;
 i16 = i15 + 36 | 0;
 do {
  HEAP32[i15 >> 2] = 0;
  i15 = i15 + 4 | 0;
 } while ((i15 | 0) < (i16 | 0));
 __ZN6vision28BinaryHierarchicalClusteringILi96EEC2Ev(i14);
 HEAP32[i12 >> 2] = 0;
 HEAP32[i9 >> 2] = HEAP32[i12 >> 2];
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE(i11, i7, i9);
 i9 = HEAP32[i11 >> 2] | 0;
 HEAP32[i9 >> 2] = i5;
 HEAP32[i9 + 4 >> 2] = i6;
 HEAP32[i9 + 8 >> 2] = 96;
 i6 = i9 + 24 | 0;
 i5 = i2 + 4 | 0;
 i7 = ((HEAP32[i5 >> 2] | 0) - (HEAP32[i2 >> 2] | 0) | 0) / 20 | 0;
 i12 = i9 + 28 | 0;
 i14 = HEAP32[i6 >> 2] | 0;
 i15 = ((HEAP32[i12 >> 2] | 0) - i14 | 0) / 20 | 0;
 if (i7 >>> 0 <= i15 >>> 0) if (i7 >>> 0 < i15 >>> 0) {
  HEAP32[i12 >> 2] = i14 + (i7 * 20 | 0);
  i17 = i6;
  i18 = i9;
 } else {
  i17 = i6;
  i18 = i9;
 } else {
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8__appendEm(i6, i7 - i15 | 0);
  i15 = HEAP32[i11 >> 2] | 0;
  i17 = i15 + 24 | 0;
  i18 = i15;
 }
 if ((i17 | 0) == (i2 | 0)) i19 = i18; else {
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i17, HEAP32[i2 >> 2] | 0, HEAP32[i5 >> 2] | 0);
  i19 = HEAP32[i11 >> 2] | 0;
 }
 i5 = i19 + 12 | 0;
 i2 = i3 + 4 | 0;
 i17 = (HEAP32[i2 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0;
 i18 = i19 + 16 | 0;
 i15 = HEAP32[i18 >> 2] | 0;
 i7 = HEAP32[i5 >> 2] | 0;
 i6 = i15 - i7 | 0;
 i9 = i7;
 L9 : do if (i17 >>> 0 > i6 >>> 0) {
  i14 = i17 - i6 | 0;
  i12 = i19 + 20 | 0;
  i16 = HEAP32[i12 >> 2] | 0;
  if ((i16 - i15 | 0) >>> 0 >= i14 >>> 0) {
   i20 = i14;
   i21 = i15;
   while (1) {
    HEAP8[i21 >> 0] = 0;
    i21 = (HEAP32[i18 >> 2] | 0) + 1 | 0;
    HEAP32[i18 >> 2] = i21;
    i20 = i20 + -1 | 0;
    if (!i20) break L9;
   }
  }
  if ((i17 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i5);
  i20 = i16 - i7 | 0;
  i21 = i20 << 1;
  i22 = i20 >>> 0 < 1073741823 ? (i21 >>> 0 < i17 >>> 0 ? i17 : i21) : 2147483647;
  if (!i22) i23 = 0; else i23 = __Znwm(i22) | 0;
  _memset(i23 + i6 | 0, 0, i14 | 0) | 0;
  if ((i6 | 0) > 0) _memcpy(i23 | 0, i9 | 0, i6 | 0) | 0;
  HEAP32[i5 >> 2] = i23;
  HEAP32[i18 >> 2] = i23 + i17;
  HEAP32[i12 >> 2] = i23 + i22;
  if (i7 | 0) __ZdlPv(i9);
 } else if (i17 >>> 0 < i6 >>> 0) HEAP32[i18 >> 2] = i9 + i17; while (0);
 i17 = HEAP32[i11 >> 2] | 0;
 i9 = i17 + 12 | 0;
 if ((i9 | 0) == (i3 | 0)) i24 = i17; else {
  __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(i9, HEAP32[i3 >> 2] | 0, HEAP32[i2 >> 2] | 0);
  i24 = HEAP32[i11 >> 2] | 0;
 }
 i2 = i24 + 36 | 0;
 HEAP32[i24 + 56 >> 2] = 128;
 HEAP32[i24 + 52 >> 2] = 8;
 i3 = i24 + 60 | 0;
 i9 = i24 + 64 | 0;
 i17 = HEAP32[i3 >> 2] | 0;
 i18 = (HEAP32[i9 >> 2] | 0) - i17 | 0;
 i6 = i18 >> 2;
 if (i6 >>> 0 >= 8) {
  if ((i18 | 0) != 32) HEAP32[i9 >> 2] = i17 + 32;
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i3, 8 - i6 | 0);
 HEAP32[i24 + 140 >> 2] = 8;
 HEAP32[i24 + 144 >> 2] = 16;
 __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhi(i2, HEAP32[i24 + 12 >> 2] | 0, ((HEAP32[i24 + 28 >> 2] | 0) - (HEAP32[i24 + 24 >> 2] | 0) | 0) / 20 | 0);
 i24 = HEAP32[HEAP32[i1 >> 2] >> 2] | 0;
 HEAP32[i13 >> 2] = HEAP32[i11 >> 2];
 i2 = i13 + 4 | 0;
 i6 = i11 + 4 | 0;
 i11 = HEAP32[i6 >> 2] | 0;
 HEAP32[i2 >> 2] = i11;
 if (i11 | 0) {
  i3 = i11 + 4 | 0;
  HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 }
 __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE11addKeyframeENSt3__210shared_ptrINS_8KeyframeILi96EEEEEi(i24, i13, HEAP32[i10 >> 2] | 0);
 i13 = HEAP32[i2 >> 2] | 0;
 if (i13 | 0 ? (i2 = i13 + 4 | 0, i24 = HEAP32[i2 >> 2] | 0, HEAP32[i2 >> 2] = i24 + -1, (i24 | 0) == 0) : 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i13 >> 2] | 0) + 8 >> 2] & 255](i13);
  __ZNSt3__219__shared_weak_count14__release_weakEv(i13);
 }
 i13 = __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_((HEAP32[i1 >> 2] | 0) + 4 | 0, i10) | 0;
 if ((i13 | 0) != (i4 | 0)) __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(i13, HEAP32[i4 >> 2] | 0, HEAP32[i4 + 4 >> 2] | 0);
 i4 = HEAP32[i6 >> 2] | 0;
 if (!i4) {
  STACKTOP = i8;
  return;
 }
 i6 = i4 + 4 | 0;
 i13 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = i13 + -1;
 if (i13 | 0) {
  STACKTOP = i8;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 255](i4);
 __ZNSt3__219__shared_weak_count14__release_weakEv(i4);
 STACKTOP = i8;
 return;
}

function __ZNK6vision4NodeILi96EE7nearestERNSt3__26vectorIPKS1_NS2_9allocatorIS5_EEEERNS2_14priority_queueINS_17PriorityQueueItemILi96EEENS3_ISC_NS6_ISC_EEEENS2_4lessISC_EEEEPKh(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5 + 12 | 0;
 i7 = i5;
 i8 = i1 + 104 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = (HEAP32[i1 + 108 >> 2] | 0) - i9 | 0;
 i1 = i10 >> 2;
 HEAP32[i7 >> 2] = 0;
 i11 = i7 + 4 | 0;
 HEAP32[i11 >> 2] = 0;
 i12 = i7 + 8 | 0;
 HEAP32[i12 >> 2] = 0;
 i13 = i9;
 if (i10) {
  if (i1 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i7);
  i9 = i10 << 1;
  i10 = __Znwm(i9) | 0;
  HEAP32[i7 >> 2] = i10;
  i14 = i10 + (i1 << 3) | 0;
  HEAP32[i12 >> 2] = i14;
  _memset(i10 | 0, 0, i9 | 0) | 0;
  HEAP32[i11 >> 2] = i14;
  if ((i14 | 0) != (i10 | 0)) {
   i10 = -1;
   i14 = 0;
   i9 = -1;
   i12 = i13;
   while (1) {
    i13 = __ZN6vision18HammingDistance768EPKjS1_((HEAP32[i12 + (i14 << 2) >> 2] | 0) + 4 | 0, i4) | 0;
    i1 = HEAP32[i7 >> 2] | 0;
    HEAP32[i1 + (i14 << 3) >> 2] = HEAP32[(HEAP32[i8 >> 2] | 0) + (i14 << 2) >> 2];
    HEAP32[i1 + (i14 << 3) + 4 >> 2] = i13;
    i1 = i13 >>> 0 < i10 >>> 0;
    i15 = i1 ? i14 : i9;
    i16 = i14 + 1 | 0;
    if (i16 >>> 0 >= (HEAP32[i11 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) >> 3 >>> 0) break;
    i10 = i1 ? i13 : i10;
    i14 = i16;
    i9 = i15;
    i12 = HEAP32[i8 >> 2] | 0;
   }
   if ((i15 | 0) != -1) {
    i12 = HEAP32[(HEAP32[i8 >> 2] | 0) + (i15 << 2) >> 2] | 0;
    HEAP32[i6 >> 2] = i12;
    i9 = i2 + 4 | 0;
    i14 = HEAP32[i9 >> 2] | 0;
    i10 = i2 + 8 | 0;
    if (i14 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
     HEAP32[i14 >> 2] = i12;
     HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 4;
    } else __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(i2, i6);
    i12 = HEAP32[i7 >> 2] | 0;
    i14 = i12;
    if ((HEAP32[i11 >> 2] | 0) == (i12 | 0)) i17 = i14; else {
     i12 = i3 + 4 | 0;
     i4 = i3 + 8 | 0;
     i16 = 0;
     i13 = i14;
     do {
      do if ((i16 | 0) != (i15 | 0)) {
       i14 = i13 + (i16 << 3) | 0;
       if ((HEAP32[i13 + (i16 << 3) + 4 >> 2] | 0) == (HEAP32[i13 + (i15 << 3) + 4 >> 2] | 0)) {
        i1 = HEAP32[(HEAP32[i8 >> 2] | 0) + (i16 << 2) >> 2] | 0;
        HEAP32[i6 >> 2] = i1;
        i18 = HEAP32[i9 >> 2] | 0;
        if (i18 >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
         HEAP32[i18 >> 2] = i1;
         HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 4;
        } else __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(i2, i6);
        break;
       }
       i1 = HEAP32[i12 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) {
        __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i3, i14);
        i19 = HEAP32[i12 >> 2] | 0;
       } else {
        i18 = i14;
        i14 = HEAP32[i18 + 4 >> 2] | 0;
        i20 = i1;
        HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
        HEAP32[i20 + 4 >> 2] = i14;
        i14 = (HEAP32[i12 >> 2] | 0) + 8 | 0;
        HEAP32[i12 >> 2] = i14;
        i19 = i14;
       }
       i14 = HEAP32[i3 >> 2] | 0;
       i20 = i19 - i14 | 0;
       if ((i20 | 0) > 8 ? (i18 = ((i20 >>> 3) + -2 | 0) / 2 | 0, i20 = i19 + -8 | 0, (HEAP32[i14 + (i18 << 3) + 4 >> 2] | 0) >>> 0 > (HEAP32[i19 + -4 >> 2] | 0) >>> 0) : 0) {
        i1 = i20;
        i21 = HEAP32[i1 >> 2] | 0;
        i22 = HEAP32[i1 + 4 >> 2] | 0;
        i1 = i18;
        i18 = i20;
        do {
         i20 = i18;
         i18 = i14 + (i1 << 3) | 0;
         i23 = i18;
         i24 = HEAP32[i23 + 4 >> 2] | 0;
         i25 = i20;
         HEAP32[i25 >> 2] = HEAP32[i23 >> 2];
         HEAP32[i25 + 4 >> 2] = i24;
         if (!i1) break;
         i1 = (i1 + -1 | 0) / 2 | 0;
        } while ((HEAP32[i14 + (i1 << 3) + 4 >> 2] | 0) >>> 0 > i22 >>> 0);
        i1 = i18;
        HEAP32[i1 >> 2] = i21;
        HEAP32[i1 + 4 >> 2] = i22;
       }
      } while (0);
      i16 = i16 + 1 | 0;
      i13 = HEAP32[i7 >> 2] | 0;
     } while (i16 >>> 0 < (HEAP32[i11 >> 2] | 0) - i13 >> 3 >>> 0);
     i17 = i13;
    }
    if (!i17) {
     STACKTOP = i5;
     return;
    }
    HEAP32[i11 >> 2] = i17;
    __ZdlPv(i17);
    STACKTOP = i5;
    return;
   }
  }
 }
 i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30304, 33) | 0, 27249, 129) | 0, 33554, 6) | 0, 155) | 0, 33561, 2) | 0, 30338, 21) | 0;
 __ZNKSt3__28ios_base6getlocEv(i6, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
 i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
 i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 63](i17, 10) | 0;
 __ZNSt3__26localeD2Ev(i6);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i11) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
 _abort();
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4 + 8 | 0;
 i6 = i4;
 L1 : do if ((i1 | 0) == (i2 | 0)) i7 = i1; else switch (HEAP8[i1 >> 0] | 0) {
 case 84:
  {
   i8 = i3 + 4 | 0;
   i9 = ((HEAP32[i8 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
   i10 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   i11 = HEAP32[i8 >> 2] | 0;
   i12 = (i11 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
   i13 = i11;
   if ((i10 | 0) != (i1 | 0) & (i12 | 0) == (i9 + 1 | 0)) {
    HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i13 + -24 | 0, i6);
    i11 = i3 + 20 | 0;
    i14 = HEAP32[i11 >> 2] | 0;
    if (i14 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
     HEAP32[i14 >> 2] = 0;
     i15 = i14 + 4 | 0;
     HEAP32[i15 >> 2] = 0;
     i16 = i14 + 8 | 0;
     HEAP32[i16 >> 2] = 0;
     HEAP32[i14 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
     HEAP32[i14 >> 2] = HEAP32[i5 >> 2];
     i14 = i5 + 4 | 0;
     HEAP32[i15 >> 2] = HEAP32[i14 >> 2];
     i15 = i5 + 8 | 0;
     HEAP32[i16 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i15 >> 2] = 0;
     HEAP32[i14 >> 2] = 0;
     HEAP32[i5 >> 2] = 0;
     HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
    i7 = i10;
    break L1;
   }
   i10 = i12;
   i12 = i13;
   while (1) {
    if ((i10 | 0) == (i9 | 0)) {
     i7 = i1;
     break L1;
    }
    i13 = 0;
    while (1) {
     if ((i13 | 0) == -1) break;
     i11 = i13 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12 + (i11 * 24 | 0) | 0);
     i13 = i11;
    }
    i13 = i12 + -24 | 0;
    HEAP32[i8 >> 2] = i13;
    i10 = i10 + -1 | 0;
    i12 = i13;
   }
   break;
  }
 case 68:
  {
   i12 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   if ((i12 | 0) == (i1 | 0)) {
    i7 = i1;
    break L1;
   }
   i10 = HEAP32[i3 + 4 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i10 | 0)) {
    i7 = i1;
    break L1;
   }
   HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
   __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i10 + -24 | 0, i6);
   i10 = i3 + 20 | 0;
   i8 = HEAP32[i10 >> 2] | 0;
   if (i8 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
    HEAP32[i8 >> 2] = 0;
    i9 = i8 + 4 | 0;
    HEAP32[i9 >> 2] = 0;
    i13 = i8 + 8 | 0;
    HEAP32[i13 >> 2] = 0;
    HEAP32[i8 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
    HEAP32[i8 >> 2] = HEAP32[i5 >> 2];
    i8 = i5 + 4 | 0;
    HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
    i9 = i5 + 8 | 0;
    HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i9 >> 2] = 0;
    HEAP32[i8 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
   i7 = i12;
   break L1;
   break;
  }
 case 83:
  {
   i12 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   if ((i12 | 0) != (i1 | 0)) {
    i7 = i12;
    break L1;
   }
   if ((i2 - i1 | 0) <= 2) {
    i7 = i1;
    break L1;
   }
   if ((HEAP8[i1 + 1 >> 0] | 0) != 116) {
    i7 = i1;
    break L1;
   }
   i12 = i1 + 2 | 0;
   i10 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0;
   if ((i10 | 0) == (i12 | 0)) {
    i7 = i1;
    break L1;
   }
   i12 = i3 + 4 | 0;
   i8 = HEAP32[i12 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i8 | 0)) {
    i7 = i1;
    break L1;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8 + -24 | 0, 0, 50539) | 0;
   i8 = (HEAP32[i12 >> 2] | 0) + -24 | 0;
   HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
   __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i8, i6);
   i8 = i3 + 20 | 0;
   i12 = HEAP32[i8 >> 2] | 0;
   if (i12 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
    HEAP32[i12 >> 2] = 0;
    i9 = i12 + 4 | 0;
    HEAP32[i9 >> 2] = 0;
    i13 = i12 + 8 | 0;
    HEAP32[i13 >> 2] = 0;
    HEAP32[i12 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
    HEAP32[i12 >> 2] = HEAP32[i5 >> 2];
    i12 = i5 + 4 | 0;
    HEAP32[i9 >> 2] = HEAP32[i12 >> 2];
    i9 = i5 + 8 | 0;
    HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i9 >> 2] = 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
   i7 = i10;
   break L1;
   break;
  }
 default:
  {
   i7 = i1;
   break L1;
  }
 } while (0);
 STACKTOP = i4;
 return i7 | 0;
}

function __ZN6vision21HoughSimilarityVoting11voteAtIndexEij(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, d24 = 0.0, d25 = 0.0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if ((i2 | 0) <= -1) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30838, 33) | 0, 30394, 122) | 0, 33554, 6) | 0, 290) | 0, 33561, 2) | 0, 30872, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 i6 = i1 + 92 | 0;
 i8 = i1 + 96 | 0;
 i5 = HEAP32[i8 >> 2] | 0;
 i7 = (i5 | 0) == 0;
 L4 : do if (!i7) {
  i9 = i5 + -1 | 0;
  i10 = (i9 & i5 | 0) == 0;
  if (!i10) if (i5 >>> 0 > i2 >>> 0) i11 = i2; else i11 = (i2 >>> 0) % (i5 >>> 0) | 0; else i11 = i9 & i2;
  i12 = HEAP32[i6 >> 2] | 0;
  i13 = HEAP32[i12 + (i11 << 2) >> 2] | 0;
  L12 : do if (i13 | 0 ? (i14 = HEAP32[i13 >> 2] | 0, i14 | 0) : 0) {
   L15 : do if (i10) {
    i15 = i14;
    while (1) {
     i16 = HEAP32[i15 + 4 >> 2] | 0;
     i17 = (i16 | 0) == (i2 | 0);
     if (!(i17 | (i16 & i9 | 0) == (i11 | 0))) break L12;
     if (i17 ? (HEAP32[i15 + 8 >> 2] | 0) == (i2 | 0) : 0) {
      i18 = i15;
      break L15;
     }
     i15 = HEAP32[i15 >> 2] | 0;
     if (!i15) break L12;
    }
   } else {
    i15 = i14;
    while (1) {
     i17 = HEAP32[i15 + 4 >> 2] | 0;
     if ((i17 | 0) == (i2 | 0)) {
      if ((HEAP32[i15 + 8 >> 2] | 0) == (i2 | 0)) {
       i18 = i15;
       break L15;
      }
     } else {
      if (i17 >>> 0 < i5 >>> 0) i19 = i17; else i19 = (i17 >>> 0) % (i5 >>> 0) | 0;
      if ((i19 | 0) != (i11 | 0)) break L12;
     }
     i15 = HEAP32[i15 >> 2] | 0;
     if (!i15) break L12;
    }
   } while (0);
   i14 = i18 + 12 | 0;
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + i3;
   STACKTOP = i4;
   return;
  } while (0);
  if (!i10) if (i5 >>> 0 > i2 >>> 0) i20 = i2; else i20 = (i2 >>> 0) % (i5 >>> 0) | 0; else i20 = i9 & i2;
  i13 = HEAP32[i12 + (i20 << 2) >> 2] | 0;
  if ((i13 | 0) != 0 ? (i14 = HEAP32[i13 >> 2] | 0, (i14 | 0) != 0) : 0) {
   if (i10) {
    i13 = i14;
    while (1) {
     i15 = HEAP32[i13 + 4 >> 2] | 0;
     if (!((i15 | 0) == (i2 | 0) | (i15 & i9 | 0) == (i20 | 0))) {
      i21 = i20;
      i22 = i6;
      break L4;
     }
     if ((HEAP32[i13 + 8 >> 2] | 0) == (i2 | 0)) break;
     i13 = HEAP32[i13 >> 2] | 0;
     if (!i13) {
      i21 = i20;
      i22 = i6;
      break L4;
     }
    }
    STACKTOP = i4;
    return;
   }
   i13 = i14;
   while (1) {
    i9 = HEAP32[i13 + 4 >> 2] | 0;
    if ((i9 | 0) != (i2 | 0)) {
     if (i9 >>> 0 < i5 >>> 0) i23 = i9; else i23 = (i9 >>> 0) % (i5 >>> 0) | 0;
     if ((i23 | 0) != (i20 | 0)) {
      i21 = i20;
      i22 = i6;
      break L4;
     }
    }
    if ((HEAP32[i13 + 8 >> 2] | 0) == (i2 | 0)) break;
    i13 = HEAP32[i13 >> 2] | 0;
    if (!i13) {
     i21 = i20;
     i22 = i6;
     break L4;
    }
   }
   STACKTOP = i4;
   return;
  } else {
   i21 = i20;
   i22 = i6;
  }
 } else {
  i21 = 0;
  i22 = i6;
 } while (0);
 i20 = __Znwm(16) | 0;
 HEAP32[i20 + 8 >> 2] = i2;
 HEAP32[i20 + 12 >> 2] = i3;
 HEAP32[i20 + 4 >> 2] = i2;
 HEAP32[i20 >> 2] = 0;
 i3 = i1 + 104 | 0;
 d24 = +(((HEAP32[i3 >> 2] | 0) + 1 | 0) >>> 0);
 d25 = +HEAPF32[i1 + 108 >> 2];
 do if (i7 | d25 * +(i5 >>> 0) < d24) {
  i23 = i5 << 1 | (i5 >>> 0 < 3 | (i5 + -1 & i5 | 0) != 0) & 1;
  i18 = ~~+Math_ceil(+(d24 / d25)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE6rehashEm(i22, i23 >>> 0 < i18 >>> 0 ? i18 : i23);
  i23 = HEAP32[i8 >> 2] | 0;
  i18 = i23 + -1 | 0;
  if (!(i18 & i23)) {
   i26 = i23;
   i27 = i18 & i2;
   break;
  }
  if (i23 >>> 0 > i2 >>> 0) {
   i26 = i23;
   i27 = i2;
  } else {
   i26 = i23;
   i27 = (i2 >>> 0) % (i23 >>> 0) | 0;
  }
 } else {
  i26 = i5;
  i27 = i21;
 } while (0);
 i21 = (HEAP32[i6 >> 2] | 0) + (i27 << 2) | 0;
 i27 = HEAP32[i21 >> 2] | 0;
 if (!i27) {
  i5 = i1 + 100 | 0;
  HEAP32[i20 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i5 >> 2] = i20;
  HEAP32[i21 >> 2] = i5;
  i5 = HEAP32[i20 >> 2] | 0;
  if (i5 | 0) {
   i21 = HEAP32[i5 + 4 >> 2] | 0;
   i5 = i26 + -1 | 0;
   if (i5 & i26) if (i21 >>> 0 < i26 >>> 0) i28 = i21; else i28 = (i21 >>> 0) % (i26 >>> 0) | 0; else i28 = i21 & i5;
   i29 = (HEAP32[i6 >> 2] | 0) + (i28 << 2) | 0;
   i30 = 55;
  }
 } else {
  HEAP32[i20 >> 2] = HEAP32[i27 >> 2];
  i29 = i27;
  i30 = 55;
 }
 if ((i30 | 0) == 55) HEAP32[i29 >> 2] = i20;
 HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 STACKTOP = i4;
 return;
}

function __ZN6vision14BinarykMedoidsILi96EE6assignERNSt3__26vectorIiNS2_9allocatorIiEEEEPKhiPKiiSB_i(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i1;
 if (((HEAP32[i2 + 4 >> 2] | 0) - (HEAP32[i2 >> 2] | 0) >> 2 | 0) != (i6 | 0)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27193, 55) | 0, 27730, 107) | 0, 33554, 6) | 0, 198) | 0, 33561, 2) | 0, 28098, 28) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if ((i4 | 0) <= 0) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27883, 39) | 0, 27730, 107) | 0, 33554, 6) | 0, 199) | 0, 33561, 2) | 0, 27923, 35) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 if ((i6 | 0) > (i4 | 0)) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 27959, 50) | 0, 27730, 107) | 0, 33554, 6) | 0, 200) | 0, 33561, 2) | 0, 28010, 26) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 if ((i8 | 0) <= 0) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 28127, 38) | 0, 27730, 107) | 0, 33554, 6) | 0, 201) | 0, 33561, 2) | 0, 28166, 31) | 0;
  __ZNKSt3__28ios_base6getlocEv(i9, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i9);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i10) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 if ((i6 | 0) <= 0) {
  i13 = 0;
  STACKTOP = i1;
  return i13 | 0;
 }
 i4 = 0;
 i10 = 0;
 while (1) {
  i9 = i5 + (i4 << 2) | 0;
  i11 = 0;
  i12 = -1;
  while (1) {
   i14 = i7 + (i11 << 2) | 0;
   i15 = __ZN6vision18HammingDistance768EPKjS1_(i3 + ((HEAP32[i9 >> 2] | 0) * 96 | 0) | 0, i3 + ((HEAP32[i5 + (HEAP32[i14 >> 2] << 2) >> 2] | 0) * 96 | 0) | 0) | 0;
   if (i15 >>> 0 < i12 >>> 0) {
    HEAP32[(HEAP32[i2 >> 2] | 0) + (i4 << 2) >> 2] = HEAP32[i14 >> 2];
    i16 = i15;
   } else i16 = i12;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i8 | 0)) break; else i12 = i16;
  }
  i12 = i16 + i10 | 0;
  i4 = i4 + 1 | 0;
  if ((i4 | 0) == (i6 | 0)) {
   i13 = i12;
   break;
  } else i10 = i12;
 }
 STACKTOP = i1;
 return i13 | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f(i1, i2, i3, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 var i5 = 0, i6 = 0, i7 = 0, d8 = 0.0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 i7 = ~~+Math_floor(+(+Math_log(+d4) / .6931471824645996));
 HEAP32[i2 >> 2] = i7;
 d8 = +Math_log(+(d4 / +(1 << i7 | 0)));
 i7 = ~~+Math_floor(+(d8 * +HEAPF32[i1 + 28 >> 2] + .5));
 HEAP32[i3 >> 2] = i7;
 i9 = i1 + 20 | 0;
 if (((HEAP32[i9 >> 2] | 0) + -1 | 0) == (i7 | 0)) {
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
  HEAP32[i3 >> 2] = 0;
  i10 = 0;
 } else i10 = i7;
 i7 = HEAP32[i2 >> 2] | 0;
 if ((i7 | 0) >= 0) {
  i11 = HEAP32[i1 + 16 >> 2] | 0;
  if ((i7 | 0) < (i11 | 0)) i12 = i10; else {
   HEAP32[i2 >> 2] = i11 + -1;
   i13 = (HEAP32[i9 >> 2] | 0) + -1 | 0;
   i14 = 7;
  }
 } else {
  HEAP32[i2 >> 2] = 0;
  i13 = 0;
  i14 = 7;
 }
 if ((i14 | 0) == 7) {
  HEAP32[i3 >> 2] = i13;
  i12 = i13;
 }
 i13 = HEAP32[i2 >> 2] | 0;
 if ((i13 | 0) <= -1) {
  i2 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32311, 34) | 0, 32346, 128) | 0, 33554, 6) | 0, 268) | 0, 33561, 2) | 0, 32475, 23) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i2, i14) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i2) | 0;
  _abort();
 }
 if ((i13 | 0) >= (HEAP32[i1 + 16 >> 2] | 0)) {
  i1 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32499, 43) | 0, 32346, 128) | 0, 33554, 6) | 0, 269) | 0, 33561, 2) | 0, 32543, 42) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i1, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  _abort();
 }
 if ((i12 | 0) <= -1) {
  i1 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32586, 33) | 0, 32346, 128) | 0, 33554, 6) | 0, 270) | 0, 33561, 2) | 0, 32620, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i1, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  _abort();
 }
 if ((i12 | 0) < (HEAP32[i9 >> 2] | 0)) {
  STACKTOP = i5;
  return;
 } else {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32643, 50) | 0, 32346, 128) | 0, 33554, 6) | 0, 271) | 0, 33561, 2) | 0, 32694, 50) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i12) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
}

function _arParamDecompMat(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, i10 = 0, d11 = 0.0, d12 = 0.0, d13 = 0.0, i14 = 0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, i19 = 0, i20 = 0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i5 = i4;
 d6 = +HEAPF64[i1 + 88 >> 3];
 if (!(d6 >= 0.0)) {
  d7 = -+HEAPF64[i1 >> 3];
  HEAPF64[i5 >> 3] = d7;
  d8 = -+HEAPF64[i1 + 8 >> 3];
  HEAPF64[i5 + 8 >> 3] = d8;
  d9 = -+HEAPF64[i1 + 16 >> 3];
  HEAPF64[i5 + 16 >> 3] = d9;
  i10 = i5 + 24 | 0;
  HEAPF64[i10 >> 3] = -+HEAPF64[i1 + 24 >> 3];
  d11 = -+HEAPF64[i1 + 32 >> 3];
  HEAPF64[i5 + 32 >> 3] = d11;
  d12 = -+HEAPF64[i1 + 40 >> 3];
  HEAPF64[i5 + 40 >> 3] = d12;
  d13 = -+HEAPF64[i1 + 48 >> 3];
  HEAPF64[i5 + 48 >> 3] = d13;
  i14 = i5 + 56 | 0;
  HEAPF64[i14 >> 3] = -+HEAPF64[i1 + 56 >> 3];
  d15 = -+HEAPF64[i1 + 64 >> 3];
  HEAPF64[i5 + 64 >> 3] = d15;
  d16 = -+HEAPF64[i1 + 72 >> 3];
  HEAPF64[i5 + 72 >> 3] = d16;
  d17 = -+HEAPF64[i1 + 80 >> 3];
  HEAPF64[i5 + 80 >> 3] = d17;
  d18 = -d6;
  HEAPF64[i5 + 88 >> 3] = d18;
  i19 = i14;
  i20 = i10;
  d21 = d7;
  d22 = d8;
  d23 = d9;
  d24 = d15;
  d25 = d16;
  d26 = d17;
  d27 = d18;
  d28 = d11;
  d29 = d12;
  d30 = d13;
 } else {
  HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
  HEAP32[i5 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
  HEAP32[i5 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
  HEAP32[i5 + 20 >> 2] = HEAP32[i1 + 20 >> 2];
  HEAP32[i5 + 24 >> 2] = HEAP32[i1 + 24 >> 2];
  HEAP32[i5 + 28 >> 2] = HEAP32[i1 + 28 >> 2];
  i10 = i5 + 32 | 0;
  i14 = i1 + 32 | 0;
  HEAP32[i10 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  HEAP32[i10 + 12 >> 2] = HEAP32[i14 + 12 >> 2];
  HEAP32[i10 + 16 >> 2] = HEAP32[i14 + 16 >> 2];
  HEAP32[i10 + 20 >> 2] = HEAP32[i14 + 20 >> 2];
  HEAP32[i10 + 24 >> 2] = HEAP32[i14 + 24 >> 2];
  HEAP32[i10 + 28 >> 2] = HEAP32[i14 + 28 >> 2];
  i14 = i5 + 64 | 0;
  i31 = i1 + 64 | 0;
  HEAP32[i14 >> 2] = HEAP32[i31 >> 2];
  HEAP32[i14 + 4 >> 2] = HEAP32[i31 + 4 >> 2];
  HEAP32[i14 + 8 >> 2] = HEAP32[i31 + 8 >> 2];
  HEAP32[i14 + 12 >> 2] = HEAP32[i31 + 12 >> 2];
  HEAP32[i14 + 16 >> 2] = HEAP32[i31 + 16 >> 2];
  HEAP32[i14 + 20 >> 2] = HEAP32[i31 + 20 >> 2];
  HEAP32[i14 + 24 >> 2] = HEAP32[i31 + 24 >> 2];
  HEAP32[i14 + 28 >> 2] = HEAP32[i31 + 28 >> 2];
  i19 = i5 + 56 | 0;
  i20 = i5 + 24 | 0;
  d21 = +HEAPF64[i5 >> 3];
  d22 = +HEAPF64[i5 + 8 >> 3];
  d23 = +HEAPF64[i5 + 16 >> 3];
  d24 = +HEAPF64[i14 >> 3];
  d25 = +HEAPF64[i5 + 72 >> 3];
  d26 = +HEAPF64[i5 + 80 >> 3];
  d27 = +HEAPF64[i5 + 88 >> 3];
  d28 = +HEAPF64[i10 >> 3];
  d29 = +HEAPF64[i5 + 40 >> 3];
  d30 = +HEAPF64[i5 + 48 >> 3];
 }
 i5 = i2;
 i10 = i5 + 96 | 0;
 do {
  HEAP32[i5 >> 2] = 0;
  i5 = i5 + 4 | 0;
 } while ((i5 | 0) < (i10 | 0));
 d13 = +Math_sqrt(+(d24 * d24 + d25 * d25 + d26 * d26));
 i5 = i2 + 80 | 0;
 HEAPF64[i5 >> 3] = d13;
 d12 = d24 / d13;
 i10 = i3 + 64 | 0;
 HEAPF64[i10 >> 3] = d12;
 d13 = d25 / +HEAPF64[i5 >> 3];
 i14 = i3 + 72 | 0;
 HEAPF64[i14 >> 3] = d13;
 d25 = d26 / +HEAPF64[i5 >> 3];
 i31 = i3 + 80 | 0;
 HEAPF64[i31 >> 3] = d25;
 i1 = i3 + 88 | 0;
 HEAPF64[i1 >> 3] = d27 / +HEAPF64[i5 >> 3];
 d27 = d12 * d28 + d13 * d29 + d25 * d30;
 i32 = i2 + 48 | 0;
 HEAPF64[i32 >> 3] = d27;
 d25 = d28 - d27 * +HEAPF64[i10 >> 3];
 d28 = d29 - d27 * +HEAPF64[i14 >> 3];
 d29 = d30 - d27 * +HEAPF64[i31 >> 3];
 d27 = +Math_sqrt(+(d25 * d25 + d28 * d28 + d29 * d29));
 i33 = i2 + 40 | 0;
 HEAPF64[i33 >> 3] = d27;
 i34 = i3 + 32 | 0;
 HEAPF64[i34 >> 3] = d25 / d27;
 i35 = i3 + 40 | 0;
 HEAPF64[i35 >> 3] = d28 / +HEAPF64[i33 >> 3];
 i36 = i3 + 48 | 0;
 HEAPF64[i36 >> 3] = d29 / +HEAPF64[i33 >> 3];
 d29 = +HEAPF64[i10 >> 3] * d21 + +HEAPF64[i14 >> 3] * d22 + +HEAPF64[i31 >> 3] * d23;
 i37 = i2 + 16 | 0;
 HEAPF64[i37 >> 3] = d29;
 d28 = d21 * +HEAPF64[i34 >> 3] + d22 * +HEAPF64[i35 >> 3] + d23 * +HEAPF64[i36 >> 3];
 i38 = i2 + 8 | 0;
 HEAPF64[i38 >> 3] = d28;
 d27 = d21 - d28 * +HEAPF64[i34 >> 3] - d29 * +HEAPF64[i10 >> 3];
 d21 = d22 - d28 * +HEAPF64[i35 >> 3] - d29 * +HEAPF64[i14 >> 3];
 d22 = d23 - d28 * +HEAPF64[i36 >> 3] - d29 * +HEAPF64[i31 >> 3];
 d29 = +Math_sqrt(+(d27 * d27 + d21 * d21 + d22 * d22));
 HEAPF64[i2 >> 3] = d29;
 HEAPF64[i3 >> 3] = d27 / d29;
 HEAPF64[i3 + 8 >> 3] = d21 / +HEAPF64[i2 >> 3];
 HEAPF64[i3 + 16 >> 3] = d22 / +HEAPF64[i2 >> 3];
 d22 = +HEAPF64[i1 >> 3];
 d21 = (+HEAPF64[i19 >> 3] - +HEAPF64[i32 >> 3] * d22) / +HEAPF64[i33 >> 3];
 HEAPF64[i3 + 56 >> 3] = d21;
 HEAPF64[i3 + 24 >> 3] = (+HEAPF64[i20 >> 3] - d21 * +HEAPF64[i38 >> 3] - d22 * +HEAPF64[i37 >> 3]) / +HEAPF64[i2 >> 3];
 d22 = +HEAPF64[i5 >> 3];
 HEAPF64[i2 >> 3] = +HEAPF64[i2 >> 3] / d22;
 HEAPF64[i38 >> 3] = +HEAPF64[i38 >> 3] / d22;
 HEAPF64[i37 >> 3] = +HEAPF64[i37 >> 3] / d22;
 i37 = i2 + 32 | 0;
 HEAPF64[i37 >> 3] = +HEAPF64[i37 >> 3] / d22;
 HEAPF64[i33 >> 3] = +HEAPF64[i33 >> 3] / d22;
 HEAPF64[i32 >> 3] = +HEAPF64[i32 >> 3] / d22;
 i32 = i2 + 64 | 0;
 HEAPF64[i32 >> 3] = +HEAPF64[i32 >> 3] / d22;
 i32 = i2 + 72 | 0;
 HEAPF64[i32 >> 3] = +HEAPF64[i32 >> 3] / d22;
 HEAPF64[i5 >> 3] = d22 / d22;
 STACKTOP = i4;
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i5 = i4 + 88 | 0;
 i6 = i4 + 64 | 0;
 i7 = i4 + 36 | 0;
 i8 = i4 + 48 | 0;
 i9 = i4 + 24 | 0;
 i10 = i4 + 12 | 0;
 i11 = i4;
 L1 : do if ((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 99 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 118 : 0) ? (i12 = i3 + 63 | 0, i13 = HEAP8[i12 >> 0] | 0, HEAP8[i12 >> 0] = 0, i14 = i1 + 2 | 0, i15 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i14, i2, i3) | 0, HEAP8[i12 >> 0] = i13, !((i15 | 0) == (i14 | 0) | (i15 | 0) == (i2 | 0))) : 0) {
  if ((HEAP8[i15 >> 0] | 0) != 95) {
   i14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i15, i2, i3) | 0;
   if ((i14 | 0) == (i15 | 0)) {
    i16 = i1;
    break;
   } else i17 = i14;
  } else {
   i14 = i15 + 1 | 0;
   if ((i14 | 0) == (i2 | 0)) {
    i16 = i1;
    break;
   }
   i15 = HEAP8[i14 >> 0] | 0;
   L9 : do if (i15 << 24 >> 24 == 69) {
    i13 = i3 + 4 | 0;
    i12 = HEAP32[i13 >> 2] | 0;
    if (i12 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     HEAP32[i12 >> 2] = 0;
     HEAP32[i12 + 4 >> 2] = 0;
     HEAP32[i12 + 8 >> 2] = 0;
     HEAP32[i12 + 12 >> 2] = 0;
     HEAP32[i12 + 16 >> 2] = 0;
     HEAP32[i12 + 20 >> 2] = 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i12);
     HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 24;
     i18 = i14;
     break;
    } else {
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_(i3);
     i18 = i14;
     break;
    }
   } else {
    i13 = i14;
    i12 = i15;
    while (1) {
     if (i12 << 24 >> 24 == 69) {
      i18 = i13;
      break L9;
     }
     i19 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i13, i2, i3) | 0;
     if ((i19 | 0) == (i13 | 0) | (i19 | 0) == (i2 | 0)) {
      i16 = i1;
      break L1;
     }
     i13 = i19;
     i12 = HEAP8[i19 >> 0] | 0;
    }
   } while (0);
   i17 = i18 + 1 | 0;
  }
  i15 = i3 + 4 | 0;
  i14 = HEAP32[i15 >> 2] | 0;
  if (((i14 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i14 + -24 | 0);
   i14 = HEAP32[i15 >> 2] | 0;
   i12 = 0;
   while (1) {
    if ((i12 | 0) == -1) break;
    i13 = i12 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14 + (i13 * 24 | 0) | 0);
    i12 = i13;
   }
   HEAP32[i15 >> 2] = i14 + -24;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i14 + -48 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 50245) | 0;
   HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i11 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 51409) | 0;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i10 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   i12 = HEAP8[i5 + 11 >> 0] | 0;
   i14 = i12 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i14 ? HEAP32[i5 >> 2] | 0 : i5, i14 ? HEAP32[i5 + 4 >> 2] | 0 : i12 & 255) | 0;
   HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i9 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50243) | 0;
   HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i8 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i15 >> 2] | 0) + -24 | 0, i6);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   i16 = i17;
  } else i16 = i1;
 } else i16 = i1; while (0);
 STACKTOP = i4;
 return i16 | 0;
}

function __ZN6vision18HammingDistance768EPKjS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i2 >> 2] ^ HEAP32[i1 >> 2];
 i4 = i3 - (i3 >>> 1 & 1431655765) | 0;
 i3 = (i4 >>> 2 & 858993459) + (i4 & 858993459) | 0;
 i4 = (Math_imul((i3 >>> 4) + i3 & 252645135, 16843009) | 0) >>> 24;
 i3 = HEAP32[i2 + 4 >> 2] ^ HEAP32[i1 + 4 >> 2];
 i5 = i3 - (i3 >>> 1 & 1431655765) | 0;
 i3 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = ((Math_imul((i3 >>> 4) + i3 & 252645135, 16843009) | 0) >>> 24) + i4 | 0;
 i4 = HEAP32[i2 + 8 >> 2] ^ HEAP32[i1 + 8 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 12 >> 2] ^ HEAP32[i1 + 12 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 16 >> 2] ^ HEAP32[i1 + 16 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 20 >> 2] ^ HEAP32[i1 + 20 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 24 >> 2] ^ HEAP32[i1 + 24 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 28 >> 2] ^ HEAP32[i1 + 28 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 32 >> 2] ^ HEAP32[i1 + 32 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 36 >> 2] ^ HEAP32[i1 + 36 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 40 >> 2] ^ HEAP32[i1 + 40 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 44 >> 2] ^ HEAP32[i1 + 44 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 48 >> 2] ^ HEAP32[i1 + 48 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 52 >> 2] ^ HEAP32[i1 + 52 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 56 >> 2] ^ HEAP32[i1 + 56 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 60 >> 2] ^ HEAP32[i1 + 60 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 64 >> 2] ^ HEAP32[i1 + 64 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 68 >> 2] ^ HEAP32[i1 + 68 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 72 >> 2] ^ HEAP32[i1 + 72 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 76 >> 2] ^ HEAP32[i1 + 76 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 80 >> 2] ^ HEAP32[i1 + 80 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 84 >> 2] ^ HEAP32[i1 + 84 >> 2];
 i5 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i5 >>> 2 & 858993459) + (i5 & 858993459) | 0;
 i5 = i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 88 >> 2] ^ HEAP32[i1 + 88 >> 2];
 i3 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i3 >>> 2 & 858993459) + (i3 & 858993459) | 0;
 i3 = i5 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
 i4 = HEAP32[i2 + 92 >> 2] ^ HEAP32[i1 + 92 >> 2];
 i1 = i4 - (i4 >>> 1 & 1431655765) | 0;
 i4 = (i1 >>> 2 & 858993459) + (i1 & 858993459) | 0;
 return i3 + ((Math_imul((i4 >>> 4) + i4 & 252645135, 16843009) | 0) >>> 24) | 0;
}

function _jpeg_idct_islow(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i7 = i6;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i1 = i7;
 i9 = HEAP32[i2 + 80 >> 2] | 0;
 i2 = i3;
 i3 = 8;
 while (1) {
  i10 = HEAP16[i2 + 16 >> 1] | 0;
  i11 = HEAP16[i2 + 32 >> 1] | 0;
  if (!((i10 | i11) << 16 >> 16)) if (((((HEAP16[i2 + 48 >> 1] | 0) == 0 ? (HEAP16[i2 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 112 >> 1] | 0) == 0 : 0) {
   i12 = Math_imul(HEAP16[i2 >> 1] << 2, HEAP32[i9 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = i12;
   HEAP32[i1 + 32 >> 2] = i12;
   HEAP32[i1 + 64 >> 2] = i12;
   HEAP32[i1 + 96 >> 2] = i12;
   HEAP32[i1 + 128 >> 2] = i12;
   HEAP32[i1 + 160 >> 2] = i12;
   HEAP32[i1 + 192 >> 2] = i12;
   i13 = i12;
   i14 = 56;
  } else {
   i15 = 0;
   i16 = 9;
  } else {
   i15 = i11;
   i16 = 9;
  }
  if ((i16 | 0) == 9) {
   i16 = 0;
   i11 = Math_imul(HEAP32[i9 + 64 >> 2] | 0, i15 << 16 >> 16) | 0;
   i12 = Math_imul(HEAP32[i9 + 192 >> 2] | 0, HEAP16[i2 + 96 >> 1] | 0) | 0;
   i17 = (i12 + i11 | 0) * 4433 | 0;
   i18 = i17 + (Math_imul(i12, -15137) | 0) | 0;
   i12 = i17 + (i11 * 6270 | 0) | 0;
   i11 = Math_imul(HEAP32[i9 >> 2] | 0, HEAP16[i2 >> 1] | 0) | 0;
   i17 = Math_imul(HEAP32[i9 + 128 >> 2] | 0, HEAP16[i2 + 64 >> 1] | 0) | 0;
   i19 = i17 + i11 << 13;
   i20 = i11 - i17 << 13;
   i17 = Math_imul(HEAP32[i9 + 224 >> 2] | 0, HEAP16[i2 + 112 >> 1] | 0) | 0;
   i11 = Math_imul(HEAP32[i9 + 160 >> 2] | 0, HEAP16[i2 + 80 >> 1] | 0) | 0;
   i21 = Math_imul(HEAP32[i9 + 96 >> 2] | 0, HEAP16[i2 + 48 >> 1] | 0) | 0;
   i22 = Math_imul(HEAP32[i9 + 32 >> 2] | 0, i10 << 16 >> 16) | 0;
   i10 = i21 + i17 | 0;
   i23 = i22 + i11 | 0;
   i24 = (i23 + i10 | 0) * 9633 | 0;
   i25 = Math_imul(i22 + i17 | 0, -7373) | 0;
   i26 = Math_imul(i21 + i11 | 0, -20995) | 0;
   i27 = i24 + (Math_imul(i10, -16069) | 0) | 0;
   i10 = i24 + (Math_imul(i23, -3196) | 0) | 0;
   i23 = i25 + (i17 * 2446 | 0) + i27 | 0;
   i17 = i26 + (i11 * 16819 | 0) + i10 | 0;
   i11 = i26 + (i21 * 25172 | 0) + i27 | 0;
   i27 = i25 + (i22 * 12299 | 0) + i10 | 0;
   i10 = i19 + i12 + 1024 | 0;
   HEAP32[i1 >> 2] = i10 + i27 >> 11;
   HEAP32[i1 + 224 >> 2] = i10 - i27 >> 11;
   i27 = i20 + i18 + 1024 | 0;
   HEAP32[i1 + 32 >> 2] = i27 + i11 >> 11;
   HEAP32[i1 + 192 >> 2] = i27 - i11 >> 11;
   i11 = i20 - i18 + 1024 | 0;
   HEAP32[i1 + 64 >> 2] = i11 + i17 >> 11;
   HEAP32[i1 + 160 >> 2] = i11 - i17 >> 11;
   i17 = i19 - i12 + 1024 | 0;
   HEAP32[i1 + 96 >> 2] = i17 + i23 >> 11;
   i13 = i17 - i23 >> 11;
   i14 = 32;
  }
  HEAP32[i1 + (i14 << 2) >> 2] = i13;
  if (i3 >>> 0 > 1) {
   i1 = i1 + 4 | 0;
   i9 = i9 + 4 | 0;
   i2 = i2 + 2 | 0;
   i3 = i3 + -1 | 0;
  } else break;
 }
 i3 = i8 + 128 | 0;
 i8 = 0;
 i2 = i7;
 while (1) {
  i7 = (HEAP32[i4 + (i8 << 2) >> 2] | 0) + i5 | 0;
  i9 = HEAP32[i2 + 4 >> 2] | 0;
  i1 = HEAP32[i2 + 8 >> 2] | 0;
  if (!(i9 | i1)) if (((((HEAP32[i2 + 12 >> 2] | 0) == 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 20 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 24 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 28 >> 2] | 0) == 0 : 0) {
   i13 = HEAP8[i3 + (((HEAP32[i2 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i7 >> 0] = i13;
   _memset(i7 + 1 | 0, i13 | 0, 7) | 0;
  } else {
   i28 = 0;
   i16 = 19;
  } else {
   i28 = i1;
   i16 = 19;
  }
  if ((i16 | 0) == 19) {
   i16 = 0;
   i1 = HEAP32[i2 + 24 >> 2] | 0;
   i13 = (i1 + i28 | 0) * 4433 | 0;
   i14 = i13 + (Math_imul(i1, -15137) | 0) | 0;
   i1 = i13 + (i28 * 6270 | 0) | 0;
   i13 = HEAP32[i2 >> 2] | 0;
   i15 = HEAP32[i2 + 16 >> 2] | 0;
   i23 = i15 + i13 << 13;
   i17 = i13 - i15 << 13;
   i15 = HEAP32[i2 + 28 >> 2] | 0;
   i13 = HEAP32[i2 + 20 >> 2] | 0;
   i12 = HEAP32[i2 + 12 >> 2] | 0;
   i19 = i12 + i15 | 0;
   i11 = i13 + i9 | 0;
   i18 = (i19 + i11 | 0) * 9633 | 0;
   i20 = Math_imul(i15 + i9 | 0, -7373) | 0;
   i27 = Math_imul(i12 + i13 | 0, -20995) | 0;
   i10 = i18 + (Math_imul(i19, -16069) | 0) | 0;
   i19 = i18 + (Math_imul(i11, -3196) | 0) | 0;
   i11 = i20 + (i15 * 2446 | 0) + i10 | 0;
   i15 = i27 + (i13 * 16819 | 0) + i19 | 0;
   i13 = i27 + (i12 * 25172 | 0) + i10 | 0;
   i10 = i20 + (i9 * 12299 | 0) + i19 | 0;
   i19 = i23 + i1 + 131072 | 0;
   HEAP8[i7 >> 0] = HEAP8[i3 + ((i19 + i10 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[i7 + 7 >> 0] = HEAP8[i3 + ((i19 - i10 | 0) >>> 18 & 1023) >> 0] | 0;
   i10 = i17 + i14 + 131072 | 0;
   HEAP8[i7 + 1 >> 0] = HEAP8[i3 + ((i10 + i13 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[i7 + 6 >> 0] = HEAP8[i3 + ((i10 - i13 | 0) >>> 18 & 1023) >> 0] | 0;
   i13 = i17 - i14 + 131072 | 0;
   HEAP8[i7 + 2 >> 0] = HEAP8[i3 + ((i13 + i15 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[i7 + 5 >> 0] = HEAP8[i3 + ((i13 - i15 | 0) >>> 18 & 1023) >> 0] | 0;
   i15 = i23 - i1 + 131072 | 0;
   HEAP8[i7 + 3 >> 0] = HEAP8[i3 + ((i15 + i11 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[i7 + 4 >> 0] = HEAP8[i3 + ((i15 - i11 | 0) >>> 18 & 1023) >> 0] | 0;
  }
  i8 = i8 + 1 | 0;
  if ((i8 | 0) == 8) break; else i2 = i2 + 32 | 0;
 }
 STACKTOP = i6;
 return;
}

function __ZNSt3__26locale5__impC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 16816;
 i2 = i1 + 8 | 0;
 __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em(i2, 28);
 i3 = i1 + 144 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i3, 47371, __ZNSt3__211char_traitsIcE6lengthEPKc(47371) | 0);
 HEAP32[i1 + 12 >> 2] = HEAP32[i2 >> 2];
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_(i1, 56240);
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_(i1, 56248);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_(i1, 56256);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_(i1, 56272);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_(i1, 56280);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_(i1, 56288);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_(i1, 56304);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_(i1, 56312);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_(i1, 56320);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_(i1, 56344);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56376);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56384);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56392);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56400);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_(i1, 56408);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_(i1, 56416);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_(i1, 56424);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_(i1, 56432);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56440);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56448);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56456);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56464);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56472);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56488);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, 56504);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, 56520);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_(i1, 56536);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_(i1, 56544);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4 + 12 | 0;
 i6 = i4;
 do if (((i1 | 0) != (i2 | 0) ? (HEAP8[i1 >> 0] | 0) == 70 : 0) ? (i7 = i1 + 1 | 0, (i7 | 0) != (i2 | 0)) : 0) {
  if ((HEAP8[i7 >> 0] | 0) == 89) {
   i8 = i1 + 2 | 0;
   if ((i8 | 0) == (i2 | 0)) {
    i9 = i1;
    break;
   } else i10 = i8;
  } else i10 = i7;
  i7 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i10, i2, i3) | 0;
  if ((i7 | 0) != (i10 | 0)) {
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50245, __ZNSt3__211char_traitsIcE6lengthEPKc(50245) | 0);
   i8 = i3 + 4 | 0;
   i11 = i5 + 11 | 0;
   i12 = i5 + 4 | 0;
   i13 = i6 + 11 | 0;
   i14 = i6 + 4 | 0;
   i15 = 0;
   i16 = i7;
   L9 : while (1) {
    i17 = i16;
    L11 : while (1) {
     if ((i17 | 0) == (i2 | 0)) {
      i18 = 11;
      break L9;
     }
     switch (HEAP8[i17 >> 0] | 0) {
     case 69:
      {
       i18 = 16;
       break L9;
       break;
      }
     case 118:
      {
       i19 = i17 + 1 | 0;
       break;
      }
     case 82:
      {
       i7 = i17 + 1 | 0;
       if ((i7 | 0) != (i2 | 0) ? (HEAP8[i7 >> 0] | 0) == 69 : 0) {
        i20 = 1;
        i21 = i7;
        break L11;
       } else i18 = 23;
       break;
      }
     case 79:
      {
       i7 = i17 + 1 | 0;
       if ((i7 | 0) != (i2 | 0) ? (HEAP8[i7 >> 0] | 0) == 69 : 0) {
        i20 = 2;
        i21 = i7;
        break L11;
       } else i18 = 23;
       break;
      }
     default:
      i18 = 23;
     }
     L20 : do if ((i18 | 0) == 23) {
      i18 = 0;
      i7 = ((HEAP32[i8 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
      i22 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i17, i2, i3) | 0;
      i23 = ((HEAP32[i8 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0;
      if ((i22 | 0) == (i17 | 0) | (i22 | 0) == (i2 | 0)) break L9;
      i24 = i7;
      while (1) {
       if (i24 >>> 0 >= i23 >>> 0) break;
       i25 = HEAP8[i11 >> 0] | 0;
       if ((i25 << 24 >> 24 < 0 ? HEAP32[i12 >> 2] | 0 : i25 & 255) >>> 0 > 1) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5, 50467) | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i3 >> 2] | 0) + (i24 * 24 | 0) | 0);
       i25 = HEAP8[i13 >> 0] | 0;
       i26 = i25 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i5, i26 ? HEAP32[i6 >> 2] | 0 : i6, i26 ? HEAP32[i14 >> 2] | 0 : i25 & 255) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
       i24 = i24 + 1 | 0;
      }
      i24 = i7;
      while (1) {
       if (i24 >>> 0 >= i23 >>> 0) {
        i19 = i22;
        break L20;
       }
       i25 = HEAP32[i8 >> 2] | 0;
       i26 = 0;
       while (1) {
        if ((i26 | 0) == -1) break;
        i27 = i26 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i25 + (i27 * 24 | 0) | 0);
        i26 = i27;
       }
       HEAP32[i8 >> 2] = i25 + -24;
       i24 = i24 + 1 | 0;
      }
     } while (0);
     i17 = i19;
    }
    i15 = i20;
    i16 = i21;
   }
   if ((i18 | 0) == 11) {
    i16 = HEAP32[i8 >> 2] | 0;
    i14 = 0;
    while (1) {
     if ((i14 | 0) == -1) break;
     i13 = i14 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16 + (i13 * 24 | 0) | 0);
     i14 = i13;
    }
    HEAP32[i8 >> 2] = i16 + -24;
   } else if ((i18 | 0) == 16) {
    i14 = i17 + 1 | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5, 50243) | 0;
    switch (i15 & 3) {
    case 1:
     {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5, 51671) | 0;
      break;
     }
    case 2:
     {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5, 51674) | 0;
      break;
     }
    default:
     {}
    }
    i13 = HEAP32[i8 >> 2] | 0;
    if ((HEAP32[i3 >> 2] | 0) != (i13 | 0)) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13 + -24 | 0, 50277) | 0;
     i13 = HEAP8[i11 >> 0] | 0;
     i24 = i13 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm((HEAP32[i8 >> 2] | 0) + -12 | 0, 0, i24 ? HEAP32[i5 >> 2] | 0 : i5, i24 ? HEAP32[i12 >> 2] | 0 : i13 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i9 = i14;
     break;
    }
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   i9 = i1;
  } else i9 = i1;
 } else i9 = i1; while (0);
 STACKTOP = i4;
 return i9 | 0;
}

function ___floatscan(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 switch (i2 | 0) {
 case 0:
  {
   i4 = -149;
   i5 = 24;
   i6 = 4;
   break;
  }
 case 1:
  {
   i4 = -1074;
   i5 = 53;
   i6 = 4;
   break;
  }
 case 2:
  {
   i4 = -1074;
   i5 = 53;
   i6 = 4;
   break;
  }
 default:
  d7 = 0.0;
 }
 L4 : do if ((i6 | 0) == 4) {
  i2 = i1 + 4 | 0;
  i8 = i1 + 104 | 0;
  do {
   i9 = HEAP32[i2 >> 2] | 0;
   if (i9 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
    HEAP32[i2 >> 2] = i9 + 1;
    i10 = HEAPU8[i9 >> 0] | 0;
   } else i10 = ___shgetc(i1) | 0;
  } while ((_isspace(i10) | 0) != 0);
  L13 : do switch (i10 | 0) {
  case 43:
  case 45:
   {
    i9 = 1 - (((i10 | 0) == 45 & 1) << 1) | 0;
    i11 = HEAP32[i2 >> 2] | 0;
    if (i11 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
     HEAP32[i2 >> 2] = i11 + 1;
     i12 = HEAPU8[i11 >> 0] | 0;
     i13 = i9;
     break L13;
    } else {
     i12 = ___shgetc(i1) | 0;
     i13 = i9;
     break L13;
    }
    break;
   }
  default:
   {
    i12 = i10;
    i13 = 1;
   }
  } while (0);
  i9 = 0;
  i11 = i12;
  while (1) {
   if ((i11 | 32 | 0) != (HEAP8[46723 + i9 >> 0] | 0)) {
    i14 = i11;
    i15 = i9;
    break;
   }
   do if (i9 >>> 0 < 7) {
    i16 = HEAP32[i2 >> 2] | 0;
    if (i16 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
     HEAP32[i2 >> 2] = i16 + 1;
     i17 = HEAPU8[i16 >> 0] | 0;
     break;
    } else {
     i17 = ___shgetc(i1) | 0;
     break;
    }
   } else i17 = i11; while (0);
   i9 = i9 + 1 | 0;
   if (i9 >>> 0 >= 8) {
    i14 = i17;
    i15 = 8;
    break;
   } else i11 = i17;
  }
  L29 : do switch (i15 & 2147483647 | 0) {
  case 8:
   break;
  case 3:
   {
    i6 = 23;
    break;
   }
  default:
   {
    i11 = (i3 | 0) != 0;
    if (i11 & i15 >>> 0 > 3) if ((i15 | 0) == 8) break L29; else {
     i6 = 23;
     break L29;
    }
    L34 : do if (!i15) {
     i9 = 0;
     i16 = i14;
     while (1) {
      if ((i16 | 32 | 0) != (HEAP8[46732 + i9 >> 0] | 0)) {
       i18 = i9;
       i19 = i16;
       break L34;
      }
      do if (i9 >>> 0 < 2) {
       i20 = HEAP32[i2 >> 2] | 0;
       if (i20 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
        HEAP32[i2 >> 2] = i20 + 1;
        i21 = HEAPU8[i20 >> 0] | 0;
        break;
       } else {
        i21 = ___shgetc(i1) | 0;
        break;
       }
      } else i21 = i16; while (0);
      i9 = i9 + 1 | 0;
      if (i9 >>> 0 >= 3) {
       i18 = 3;
       i19 = i21;
       break;
      } else i16 = i21;
     }
    } else {
     i18 = i15;
     i19 = i14;
    } while (0);
    switch (i18 | 0) {
    case 3:
     {
      i16 = HEAP32[i2 >> 2] | 0;
      if (i16 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
       HEAP32[i2 >> 2] = i16 + 1;
       i22 = HEAPU8[i16 >> 0] | 0;
      } else i22 = ___shgetc(i1) | 0;
      if ((i22 | 0) != 40) {
       if (!(HEAP32[i8 >> 2] | 0)) {
        d7 = nan;
        break L4;
       }
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
       d7 = nan;
       break L4;
      }
      i16 = 1;
      while (1) {
       i9 = HEAP32[i2 >> 2] | 0;
       if (i9 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
        HEAP32[i2 >> 2] = i9 + 1;
        i23 = HEAPU8[i9 >> 0] | 0;
       } else i23 = ___shgetc(i1) | 0;
       if (!((i23 + -48 | 0) >>> 0 < 10 | (i23 + -65 | 0) >>> 0 < 26) ? !((i23 | 0) == 95 | (i23 + -97 | 0) >>> 0 < 26) : 0) break;
       i16 = i16 + 1 | 0;
      }
      if ((i23 | 0) == 41) {
       d7 = nan;
       break L4;
      }
      i9 = (HEAP32[i8 >> 2] | 0) == 0;
      if (!i9) HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
      if (!i11) {
       i20 = ___errno_location() | 0;
       HEAP32[i20 >> 2] = 22;
       ___shlim(i1, 0, 0);
       d7 = 0.0;
       break L4;
      }
      if (!i16) {
       d7 = nan;
       break L4;
      }
      i20 = i16;
      while (1) {
       i20 = i20 + -1 | 0;
       if (!i9) HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
       if (!i20) {
        d7 = nan;
        break L4;
       }
      }
      break;
     }
    case 0:
     {
      if ((i19 | 0) == 48) {
       i20 = HEAP32[i2 >> 2] | 0;
       if (i20 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
        HEAP32[i2 >> 2] = i20 + 1;
        i24 = HEAPU8[i20 >> 0] | 0;
       } else i24 = ___shgetc(i1) | 0;
       if ((i24 | 32 | 0) == 120) {
        d7 = +_hexfloat(i1, i5, i4, i13, i3);
        break L4;
       }
       if (!(HEAP32[i8 >> 2] | 0)) i25 = 48; else {
        HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
        i25 = 48;
       }
      } else i25 = i19;
      d7 = +_decfloat(i1, i25, i5, i4, i13, i3);
      break L4;
      break;
     }
    default:
     {
      if (HEAP32[i8 >> 2] | 0) HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
      i20 = ___errno_location() | 0;
      HEAP32[i20 >> 2] = 22;
      ___shlim(i1, 0, 0);
      d7 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((i6 | 0) == 23) {
   i20 = (HEAP32[i8 >> 2] | 0) == 0;
   if (!i20) HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
   if ((i3 | 0) != 0 & i15 >>> 0 > 3) {
    i9 = i15;
    do {
     if (!i20) HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
     i9 = i9 + -1 | 0;
    } while (i9 >>> 0 > 3);
   }
  }
  d7 = +(i13 | 0) * inf;
 } while (0);
 return +d7;
}

function _jinit_1pass_quantizer(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i2 = i1 + 4 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 88) | 0;
 i4 = i1 + 460 | 0;
 HEAP32[i4 >> 2] = i3;
 HEAP32[i3 >> 2] = 42;
 HEAP32[i3 + 8 >> 2] = 122;
 HEAP32[i3 + 12 >> 2] = 123;
 HEAP32[i3 + 68 >> 2] = 0;
 HEAP32[i3 + 52 >> 2] = 0;
 i3 = i1 + 120 | 0;
 if ((HEAP32[i3 >> 2] | 0) > 4) {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i5 + 20 >> 2] = 55;
  HEAP32[i5 + 24 >> 2] = 4;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i5 = i1 + 96 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i6 | 0) > 256) {
  i7 = HEAP32[i1 >> 2] | 0;
  HEAP32[i7 + 20 >> 2] = 57;
  HEAP32[i7 + 24 >> 2] = 256;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
  i8 = HEAP32[i5 >> 2] | 0;
 } else i8 = i6;
 i6 = HEAP32[i4 >> 2] | 0;
 i5 = i6 + 32 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 if ((i7 | 0) > 1) {
  i9 = 1;
  while (1) {
   i10 = i9 + 1 | 0;
   i11 = 1;
   i12 = i10;
   do {
    i12 = Math_imul(i12, i10) | 0;
    i11 = i11 + 1 | 0;
   } while ((i11 | 0) != (i7 | 0));
   if ((i12 | 0) > (i8 | 0)) {
    i13 = i12;
    i14 = i9;
    break;
   } else i9 = i10;
  }
 } else {
  i9 = (i8 | 0) > 1 ? i8 : 1;
  i13 = i9 + 1 | 0;
  i14 = i9;
 }
 if (i14 >>> 0 < 2) {
  i9 = HEAP32[i1 >> 2] | 0;
  HEAP32[i9 + 20 >> 2] = 56;
  HEAP32[i9 + 24 >> 2] = i13;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 L19 : do if ((i7 | 0) > 0) {
  i13 = 1;
  i9 = 0;
  do {
   HEAP32[i6 + 32 + (i9 << 2) >> 2] = i14;
   i13 = Math_imul(i13, i14) | 0;
   i9 = i9 + 1 | 0;
  } while ((i9 | 0) != (i7 | 0));
  if ((HEAP32[i1 + 44 >> 2] | 0) == 2) {
   i9 = 0;
   i10 = 0;
   i12 = i13;
   while (1) {
    i11 = i6 + 32 + (HEAP32[13628 + (i10 << 2) >> 2] << 2) | 0;
    i15 = HEAP32[i11 >> 2] | 0;
    i16 = i15 + 1 | 0;
    i17 = Math_imul((i12 | 0) / (i15 | 0) | 0, i16) | 0;
    if ((i17 | 0) <= (i8 | 0)) {
     HEAP32[i11 >> 2] = i16;
     i16 = i10 + 1 | 0;
     if ((i16 | 0) < (i7 | 0)) {
      i18 = 1;
      i19 = i16;
      i20 = i17;
     } else {
      i21 = 1;
      i22 = i17;
      i23 = 22;
     }
    } else {
     i21 = i9;
     i22 = i12;
     i23 = 22;
    }
    if ((i23 | 0) == 22) {
     i23 = 0;
     if (!i21) {
      i24 = i22;
      break L19;
     } else {
      i18 = 0;
      i19 = 0;
      i20 = i22;
     }
    }
    i9 = i18;
    i10 = i19;
    i12 = i20;
   }
  } else {
   i12 = 0;
   i10 = 0;
   i9 = i13;
   while (1) {
    i17 = i6 + 32 + (i10 << 2) | 0;
    i16 = HEAP32[i17 >> 2] | 0;
    i11 = i16 + 1 | 0;
    i15 = Math_imul((i9 | 0) / (i16 | 0) | 0, i11) | 0;
    if ((i15 | 0) <= (i8 | 0)) {
     HEAP32[i17 >> 2] = i11;
     i11 = i10 + 1 | 0;
     if ((i11 | 0) < (i7 | 0)) {
      i25 = 1;
      i26 = i11;
      i27 = i15;
     } else {
      i28 = 1;
      i29 = i15;
      i23 = 26;
     }
    } else {
     i28 = i12;
     i29 = i9;
     i23 = 26;
    }
    if ((i23 | 0) == 26) {
     i23 = 0;
     if (!i28) {
      i24 = i29;
      break L19;
     } else {
      i25 = 0;
      i26 = 0;
      i27 = i29;
     }
    }
    i12 = i25;
    i10 = i26;
    i9 = i27;
   }
  }
 } else i24 = 1; while (0);
 i27 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i3 >> 2] | 0) == 3) {
  HEAP32[i27 + 24 >> 2] = i24;
  HEAP32[i27 + 28 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i27 + 32 >> 2] = HEAP32[i6 + 36 >> 2];
  HEAP32[i27 + 36 >> 2] = HEAP32[i6 + 40 >> 2];
  HEAP32[i27 + 20 >> 2] = 94;
  FUNCTION_TABLE_vii[HEAP32[i27 + 4 >> 2] & 63](i1, 1);
 } else {
  HEAP32[i27 + 20 >> 2] = 95;
  HEAP32[i27 + 24 >> 2] = i24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
 }
 i27 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 15](i1, 1, i24, HEAP32[i3 >> 2] | 0) | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 if ((i5 | 0) > 0) {
  i26 = 0;
  i25 = i24;
  i29 = i5;
  while (1) {
   i5 = HEAP32[i6 + 32 + (i26 << 2) >> 2] | 0;
   i28 = i25;
   i25 = (i25 | 0) / (i5 | 0) | 0;
   if ((i5 | 0) > 0 ? (i23 = i5 + -1 | 0, i7 = (i23 | 0) / 2 | 0, i8 = i27 + (i26 << 2) | 0, (i25 | 0) > 0) : 0) {
    i20 = 0;
    do {
     i19 = Math_imul(i20, i25) | 0;
     if ((i19 | 0) < (i24 | 0)) {
      i18 = (((i20 * 255 | 0) + i7 | 0) / (i23 | 0) | 0) & 255;
      i22 = i19;
      do {
       i19 = 0;
       do {
        HEAP8[(HEAP32[i8 >> 2] | 0) + (i19 + i22) >> 0] = i18;
        i19 = i19 + 1 | 0;
       } while ((i19 | 0) != (i25 | 0));
       i22 = i22 + i28 | 0;
      } while ((i22 | 0) < (i24 | 0));
     }
     i20 = i20 + 1 | 0;
    } while ((i20 | 0) != (i5 | 0));
    i30 = HEAP32[i3 >> 2] | 0;
   } else i30 = i29;
   i26 = i26 + 1 | 0;
   if ((i26 | 0) >= (i30 | 0)) break; else i29 = i30;
  }
 }
 HEAP32[i6 + 16 >> 2] = i27;
 HEAP32[i6 + 20 >> 2] = i24;
 _create_colorindex(i1);
 if ((HEAP32[i1 + 88 >> 2] | 0) != 2) return;
 i24 = HEAP32[i4 >> 2] | 0;
 i4 = (HEAP32[i1 + 112 >> 2] << 1) + 4 | 0;
 if ((HEAP32[i3 >> 2] | 0) <= 0) return;
 i6 = 0;
 do {
  i27 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] & 63](i1, 1, i4) | 0;
  HEAP32[i24 + 68 + (i6 << 2) >> 2] = i27;
  i6 = i6 + 1 | 0;
 } while ((i6 | 0) < (HEAP32[i3 >> 2] | 0));
 return;
}

function _update_box(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i3 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i4 = i2 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = i2 + 8 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = i2 + 12 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = i2 + 16 | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 i12 = i2 + 20 | 0;
 i13 = HEAP32[i12 >> 2] | 0;
 L1 : do if ((i5 | 0) <= (i1 | 0) | (i7 | 0) > (i9 | 0) | (i11 | 0) > (i13 | 0)) i14 = i1; else {
  i15 = i1;
  L3 : while (1) {
   i16 = HEAP32[i3 + (i15 << 2) >> 2] | 0;
   i17 = i7;
   while (1) {
    i18 = i16 + (i17 << 6) + (i11 << 1) | 0;
    i19 = i11;
    while (1) {
     if (HEAP16[i18 >> 1] | 0) break L3;
     if ((i19 | 0) < (i13 | 0)) {
      i18 = i18 + 2 | 0;
      i19 = i19 + 1 | 0;
     } else break;
    }
    if ((i17 | 0) < (i9 | 0)) i17 = i17 + 1 | 0; else break;
   }
   if ((i15 | 0) < (i5 | 0)) i15 = i15 + 1 | 0; else {
    i14 = i1;
    break L1;
   }
  }
  HEAP32[i2 >> 2] = i15;
  i14 = i15;
 } while (0);
 L14 : do if ((i5 | 0) <= (i14 | 0) | (i7 | 0) > (i9 | 0) | (i11 | 0) > (i13 | 0)) i20 = i5; else {
  i1 = i5;
  L16 : while (1) {
   i17 = HEAP32[i3 + (i1 << 2) >> 2] | 0;
   i16 = i7;
   while (1) {
    i19 = i17 + (i16 << 6) + (i11 << 1) | 0;
    i18 = i11;
    while (1) {
     if (HEAP16[i19 >> 1] | 0) break L16;
     if ((i18 | 0) < (i13 | 0)) {
      i19 = i19 + 2 | 0;
      i18 = i18 + 1 | 0;
     } else break;
    }
    if ((i16 | 0) < (i9 | 0)) i16 = i16 + 1 | 0; else break;
   }
   if ((i1 | 0) > (i14 | 0)) i1 = i1 + -1 | 0; else {
    i20 = i5;
    break L14;
   }
  }
  HEAP32[i4 >> 2] = i1;
  i20 = i1;
 } while (0);
 L27 : do if ((i9 | 0) <= (i7 | 0) | (i20 | 0) < (i14 | 0) | (i11 | 0) > (i13 | 0)) i21 = i7; else {
  i4 = i7;
  L29 : while (1) {
   i5 = i14;
   while (1) {
    i15 = (HEAP32[i3 + (i5 << 2) >> 2] | 0) + (i4 << 6) + (i11 << 1) | 0;
    i16 = i11;
    while (1) {
     if (HEAP16[i15 >> 1] | 0) break L29;
     if ((i16 | 0) < (i13 | 0)) {
      i15 = i15 + 2 | 0;
      i16 = i16 + 1 | 0;
     } else break;
    }
    if ((i5 | 0) < (i20 | 0)) i5 = i5 + 1 | 0; else break;
   }
   if ((i4 | 0) < (i9 | 0)) i4 = i4 + 1 | 0; else {
    i21 = i7;
    break L27;
   }
  }
  HEAP32[i6 >> 2] = i4;
  i21 = i4;
 } while (0);
 L40 : do if ((i9 | 0) <= (i21 | 0) | (i20 | 0) < (i14 | 0) | (i11 | 0) > (i13 | 0)) i22 = i9; else {
  i6 = i9;
  L42 : while (1) {
   i7 = i14;
   while (1) {
    i1 = (HEAP32[i3 + (i7 << 2) >> 2] | 0) + (i6 << 6) + (i11 << 1) | 0;
    i5 = i11;
    while (1) {
     if (HEAP16[i1 >> 1] | 0) break L42;
     if ((i5 | 0) < (i13 | 0)) {
      i1 = i1 + 2 | 0;
      i5 = i5 + 1 | 0;
     } else break;
    }
    if ((i7 | 0) < (i20 | 0)) i7 = i7 + 1 | 0; else break;
   }
   if ((i6 | 0) > (i21 | 0)) i6 = i6 + -1 | 0; else {
    i22 = i9;
    break L40;
   }
  }
  HEAP32[i8 >> 2] = i6;
  i22 = i6;
 } while (0);
 L53 : do if ((i13 | 0) <= (i11 | 0) | (i20 | 0) < (i14 | 0) | (i22 | 0) < (i21 | 0)) i23 = i11; else {
  i8 = i11;
  L55 : while (1) {
   i9 = i14;
   while (1) {
    i4 = i21;
    i7 = (HEAP32[i3 + (i9 << 2) >> 2] | 0) + (i21 << 6) + (i8 << 1) | 0;
    while (1) {
     if (HEAP16[i7 >> 1] | 0) break L55;
     if ((i4 | 0) < (i22 | 0)) {
      i4 = i4 + 1 | 0;
      i7 = i7 + 64 | 0;
     } else break;
    }
    if ((i9 | 0) < (i20 | 0)) i9 = i9 + 1 | 0; else break;
   }
   if ((i8 | 0) < (i13 | 0)) i8 = i8 + 1 | 0; else {
    i23 = i11;
    break L53;
   }
  }
  HEAP32[i10 >> 2] = i8;
  i23 = i8;
 } while (0);
 L66 : do if ((i13 | 0) <= (i23 | 0) | (i20 | 0) < (i14 | 0) | (i22 | 0) < (i21 | 0)) i24 = i13; else {
  i10 = i13;
  L68 : while (1) {
   i11 = i14;
   while (1) {
    i6 = i21;
    i9 = (HEAP32[i3 + (i11 << 2) >> 2] | 0) + (i21 << 6) + (i10 << 1) | 0;
    while (1) {
     if (HEAP16[i9 >> 1] | 0) break L68;
     if ((i6 | 0) < (i22 | 0)) {
      i6 = i6 + 1 | 0;
      i9 = i9 + 64 | 0;
     } else break;
    }
    if ((i11 | 0) < (i20 | 0)) i11 = i11 + 1 | 0; else break;
   }
   if ((i10 | 0) > (i23 | 0)) i10 = i10 + -1 | 0; else {
    i24 = i13;
    break L66;
   }
  }
  HEAP32[i12 >> 2] = i10;
  i24 = i10;
 } while (0);
 i12 = i20 - i14 << 4;
 i13 = (i22 - i21 | 0) * 12 | 0;
 i8 = i24 - i23 << 3;
 i11 = (Math_imul(i13, i13) | 0) + (Math_imul(i12, i12) | 0) + (Math_imul(i8, i8) | 0) | 0;
 HEAP32[i2 + 24 >> 2] = i11;
 if ((i20 | 0) < (i14 | 0) | (i22 | 0) < (i21 | 0) | (i24 | 0) < (i23 | 0)) {
  i25 = 0;
  i26 = i2 + 28 | 0;
  HEAP32[i26 >> 2] = i25;
  return;
 }
 i11 = 0;
 i8 = i14;
 while (1) {
  i14 = HEAP32[i3 + (i8 << 2) >> 2] | 0;
  i12 = i11;
  i13 = i21;
  while (1) {
   i27 = i12;
   i9 = i23;
   i6 = i14 + (i13 << 6) + (i23 << 1) | 0;
   while (1) {
    i27 = i27 + ((HEAP16[i6 >> 1] | 0) != 0 & 1) | 0;
    if ((i9 | 0) >= (i24 | 0)) break; else {
     i9 = i9 + 1 | 0;
     i6 = i6 + 2 | 0;
    }
   }
   if ((i13 | 0) < (i22 | 0)) {
    i12 = i27;
    i13 = i13 + 1 | 0;
   } else break;
  }
  if ((i8 | 0) < (i20 | 0)) {
   i11 = i27;
   i8 = i8 + 1 | 0;
  } else {
   i25 = i27;
   break;
  }
 }
 i26 = i2 + 28 | 0;
 HEAP32[i26 >> 2] = i25;
 return;
}

function __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8;
 i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58516) | 0;
 i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58524) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i11 >> 2] | 0) + 20 >> 2] & 63](i9, i11);
 HEAP32[i6 >> 2] = i4;
 i7 = HEAP8[i1 >> 0] | 0;
 switch (i7 << 24 >> 24) {
 case 43:
 case 45:
  {
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 63](i10, i7) | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i7 + 4;
   HEAP32[i7 >> 2] = i12;
   i13 = i1 + 1 | 0;
   break;
  }
 default:
  i13 = i1;
 }
 i12 = i3;
 L4 : do if ((i12 - i13 | 0) > 1 ? (HEAP8[i13 >> 0] | 0) == 48 : 0) {
  i7 = i13 + 1 | 0;
  switch (HEAP8[i7 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    i14 = 4;
    break L4;
   }
  }
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 63](i10, 48) | 0;
  i16 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i16 + 4;
  HEAP32[i16 >> 2] = i15;
  i15 = i13 + 2 | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 63](i10, HEAP8[i7 >> 0] | 0) | 0;
  i7 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i7 + 4;
  HEAP32[i7 >> 2] = i16;
  i16 = i15;
  while (1) {
   if (i16 >>> 0 >= i3 >>> 0) {
    i17 = i15;
    i18 = i16;
    break L4;
   }
   i7 = HEAP8[i16 >> 0] | 0;
   if (!(_isxdigit_l(i7, __ZNSt3__26__clocEv() | 0) | 0)) {
    i17 = i15;
    i18 = i16;
    break L4;
   }
   i16 = i16 + 1 | 0;
  }
 } else i14 = 4; while (0);
 L12 : do if ((i14 | 0) == 4) {
  i16 = i13;
  while (1) {
   if (i16 >>> 0 >= i3 >>> 0) {
    i17 = i13;
    i18 = i16;
    break L12;
   }
   i15 = HEAP8[i16 >> 0] | 0;
   if (!(_isdigit_l(i15, __ZNSt3__26__clocEv() | 0) | 0)) {
    i17 = i13;
    i18 = i16;
    break L12;
   }
   i16 = i16 + 1 | 0;
  }
 } while (0);
 i13 = i9 + 11 | 0;
 i16 = HEAP8[i13 >> 0] | 0;
 i15 = i9 + 4 | 0;
 L19 : do if ((i16 << 24 >> 24 < 0 ? HEAP32[i15 >> 2] | 0 : i16 & 255) | 0) {
  L22 : do if ((i17 | 0) != (i18 | 0)) {
   i7 = i18;
   i19 = i17;
   while (1) {
    i20 = i7 + -1 | 0;
    if (i19 >>> 0 >= i20 >>> 0) break L22;
    i21 = HEAP8[i19 >> 0] | 0;
    HEAP8[i19 >> 0] = HEAP8[i20 >> 0] | 0;
    HEAP8[i20 >> 0] = i21;
    i7 = i20;
    i19 = i19 + 1 | 0;
   }
  } while (0);
  i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 16 >> 2] & 127](i11) | 0;
  i7 = i17;
  i20 = 0;
  i21 = 0;
  while (1) {
   if (i7 >>> 0 >= i18 >>> 0) break;
   i22 = HEAP8[((HEAP8[i13 >> 0] | 0) < 0 ? HEAP32[i9 >> 2] | 0 : i9) + i20 >> 0] | 0;
   if (i22 << 24 >> 24 > 0 & (i21 | 0) == (i22 << 24 >> 24 | 0)) {
    i22 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i22 + 4;
    HEAP32[i22 >> 2] = i19;
    i22 = HEAP8[i13 >> 0] | 0;
    i23 = i20 + (i20 >>> 0 < ((i22 << 24 >> 24 < 0 ? HEAP32[i15 >> 2] | 0 : i22 & 255) + -1 | 0) >>> 0 & 1) | 0;
    i24 = 0;
   } else {
    i23 = i20;
    i24 = i21;
   }
   i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 63](i10, HEAP8[i7 >> 0] | 0) | 0;
   i25 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i25 + 4;
   HEAP32[i25 >> 2] = i22;
   i7 = i7 + 1 | 0;
   i20 = i23;
   i21 = i24 + 1 | 0;
  }
  i21 = i4 + (i17 - i1 << 2) | 0;
  i20 = HEAP32[i6 >> 2] | 0;
  if ((i21 | 0) == (i20 | 0)) {
   i26 = i10;
   i27 = i21;
  } else {
   i7 = i20;
   i19 = i21;
   while (1) {
    i21 = i7 + -4 | 0;
    if (i19 >>> 0 >= i21 >>> 0) {
     i26 = i10;
     i27 = i20;
     break L19;
    }
    i22 = HEAP32[i19 >> 2] | 0;
    HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
    HEAP32[i21 >> 2] = i22;
    i7 = i21;
    i19 = i19 + 4 | 0;
   }
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 48 >> 2] & 15](i10, i17, i18, HEAP32[i6 >> 2] | 0) | 0;
  i19 = (HEAP32[i6 >> 2] | 0) + (i18 - i17 << 2) | 0;
  HEAP32[i6 >> 2] = i19;
  i26 = i10;
  i27 = i19;
 } while (0);
 i17 = i18;
 i18 = i27;
 while (1) {
  if (i17 >>> 0 >= i3 >>> 0) {
   i28 = i17;
   i29 = i18;
   break;
  }
  i27 = HEAP8[i17 >> 0] | 0;
  if (i27 << 24 >> 24 == 46) {
   i14 = 32;
   break;
  }
  i24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i26 >> 2] | 0) + 44 >> 2] & 63](i10, i27) | 0;
  i27 = HEAP32[i6 >> 2] | 0;
  i23 = i27 + 4 | 0;
  HEAP32[i6 >> 2] = i23;
  HEAP32[i27 >> 2] = i24;
  i17 = i17 + 1 | 0;
  i18 = i23;
 }
 if ((i14 | 0) == 32) {
  i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 127](i11) | 0;
  i11 = HEAP32[i6 >> 2] | 0;
  i18 = i11 + 4 | 0;
  HEAP32[i6 >> 2] = i18;
  HEAP32[i11 >> 2] = i14;
  i28 = i17 + 1 | 0;
  i29 = i18;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 48 >> 2] & 15](i10, i28, i3, i29) | 0;
 i29 = (HEAP32[i6 >> 2] | 0) + (i12 - i28 << 2) | 0;
 HEAP32[i6 >> 2] = i29;
 HEAP32[i5 >> 2] = (i2 | 0) == (i3 | 0) ? i29 : i4 + (i2 - i1 << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i8;
 return;
}

function _jinit_color_deconverter(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = i1 + 4 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 24) | 0;
 i4 = i1 + 456 | 0;
 HEAP32[i4 >> 2] = i3;
 HEAP32[i3 >> 2] = 126;
 i5 = i1 + 40 | 0;
 switch (HEAP32[i5 >> 2] | 0) {
 case 1:
  {
   if ((HEAP32[i1 + 36 >> 2] | 0) != 1) {
    i6 = HEAP32[i1 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[i6 >> 2] & 255](i1);
   }
   break;
  }
 case 3:
 case 2:
  {
   if ((HEAP32[i1 + 36 >> 2] | 0) != 3) {
    i6 = HEAP32[i1 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[i6 >> 2] & 255](i1);
   }
   break;
  }
 case 5:
 case 4:
  {
   if ((HEAP32[i1 + 36 >> 2] | 0) != 4) {
    i6 = HEAP32[i1 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[i6 >> 2] & 255](i1);
   }
   break;
  }
 default:
  if ((HEAP32[i1 + 36 >> 2] | 0) < 1) {
   i6 = HEAP32[i1 >> 2] | 0;
   HEAP32[i6 + 20 >> 2] = 10;
   FUNCTION_TABLE_vi[HEAP32[i6 >> 2] & 255](i1);
  }
 }
 i6 = HEAP32[i1 + 44 >> 2] | 0;
 L11 : do switch (i6 | 0) {
 case 1:
  {
   HEAP32[i1 + 120 >> 2] = 1;
   switch (HEAP32[i5 >> 2] | 0) {
   case 3:
   case 1:
    break;
   default:
    {
     i7 = HEAP32[i1 >> 2] | 0;
     HEAP32[i7 + 20 >> 2] = 27;
     FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i1);
     break L11;
    }
   }
   HEAP32[i3 + 4 >> 2] = 6;
   i7 = HEAP32[i1 + 36 >> 2] | 0;
   if ((i7 | 0) > 1) {
    i8 = HEAP32[i1 + 216 >> 2] | 0;
    i9 = 1;
    do {
     HEAP32[i8 + (i9 * 84 | 0) + 48 >> 2] = 0;
     i9 = i9 + 1 | 0;
    } while ((i9 | 0) < (i7 | 0));
   }
   break;
  }
 case 2:
  {
   HEAP32[i1 + 120 >> 2] = 3;
   switch (HEAP32[i5 >> 2] | 0) {
   case 3:
    {
     HEAP32[i3 + 4 >> 2] = 7;
     i7 = HEAP32[i4 >> 2] | 0;
     i9 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
     i8 = i7 + 8 | 0;
     HEAP32[i8 >> 2] = i9;
     i9 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
     i10 = i7 + 12 | 0;
     HEAP32[i10 >> 2] = i9;
     i9 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
     i11 = i7 + 16 | 0;
     HEAP32[i11 >> 2] = i9;
     i9 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
     HEAP32[i7 + 20 >> 2] = i9;
     i7 = HEAP32[i8 >> 2] | 0;
     i8 = HEAP32[i10 >> 2] | 0;
     i10 = HEAP32[i11 >> 2] | 0;
     i11 = 0;
     i12 = -128;
     while (1) {
      HEAP32[i7 + (i11 << 2) >> 2] = (i12 * 91881 | 0) + 32768 >> 16;
      HEAP32[i8 + (i11 << 2) >> 2] = (i12 * 116130 | 0) + 32768 >> 16;
      i13 = Math_imul(i12, -46802) | 0;
      HEAP32[i10 + (i11 << 2) >> 2] = i13;
      i13 = (Math_imul(i12, -22554) | 0) + 32768 | 0;
      HEAP32[i9 + (i11 << 2) >> 2] = i13;
      i11 = i11 + 1 | 0;
      if ((i11 | 0) == 256) break; else i12 = i12 + 1 | 0;
     }
     break;
    }
   case 1:
    {
     HEAP32[i3 + 4 >> 2] = 8;
     break L11;
     break;
    }
   case 2:
    {
     HEAP32[i3 + 4 >> 2] = 9;
     break L11;
     break;
    }
   default:
    {
     i12 = HEAP32[i1 >> 2] | 0;
     HEAP32[i12 + 20 >> 2] = 27;
     FUNCTION_TABLE_vi[HEAP32[i12 >> 2] & 255](i1);
     break L11;
    }
   }
   break;
  }
 case 4:
  {
   HEAP32[i1 + 120 >> 2] = 4;
   switch (HEAP32[i5 >> 2] | 0) {
   case 5:
    {
     HEAP32[i3 + 4 >> 2] = 10;
     i12 = HEAP32[i4 >> 2] | 0;
     i11 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
     i9 = i12 + 8 | 0;
     HEAP32[i9 >> 2] = i11;
     i11 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
     i10 = i12 + 12 | 0;
     HEAP32[i10 >> 2] = i11;
     i11 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
     i8 = i12 + 16 | 0;
     HEAP32[i8 >> 2] = i11;
     i11 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
     HEAP32[i12 + 20 >> 2] = i11;
     i12 = HEAP32[i9 >> 2] | 0;
     i9 = HEAP32[i10 >> 2] | 0;
     i10 = HEAP32[i8 >> 2] | 0;
     i8 = 0;
     i7 = -128;
     while (1) {
      HEAP32[i12 + (i8 << 2) >> 2] = (i7 * 91881 | 0) + 32768 >> 16;
      HEAP32[i9 + (i8 << 2) >> 2] = (i7 * 116130 | 0) + 32768 >> 16;
      i13 = Math_imul(i7, -46802) | 0;
      HEAP32[i10 + (i8 << 2) >> 2] = i13;
      i13 = (Math_imul(i7, -22554) | 0) + 32768 | 0;
      HEAP32[i11 + (i8 << 2) >> 2] = i13;
      i8 = i8 + 1 | 0;
      if ((i8 | 0) == 256) break; else i7 = i7 + 1 | 0;
     }
     break;
    }
   case 4:
    {
     HEAP32[i3 + 4 >> 2] = 9;
     break L11;
     break;
    }
   default:
    {
     i7 = HEAP32[i1 >> 2] | 0;
     HEAP32[i7 + 20 >> 2] = 27;
     FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i1);
     break L11;
    }
   }
   break;
  }
 default:
  if ((i6 | 0) == (HEAP32[i5 >> 2] | 0)) {
   HEAP32[i1 + 120 >> 2] = HEAP32[i1 + 36 >> 2];
   HEAP32[i3 + 4 >> 2] = 9;
   break L11;
  } else {
   i7 = HEAP32[i1 >> 2] | 0;
   HEAP32[i7 + 20 >> 2] = 27;
   FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i1);
   break L11;
  }
 } while (0);
 if (HEAP32[i1 + 84 >> 2] | 0) {
  i14 = 1;
  i15 = i1 + 124 | 0;
  HEAP32[i15 >> 2] = i14;
  return;
 }
 i14 = HEAP32[i1 + 120 >> 2] | 0;
 i15 = i1 + 124 | 0;
 HEAP32[i15 >> 2] = i14;
 return;
}

function _decode_mcu_AC_first(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = HEAP32[i1 + 444 >> 2] | 0;
 i6 = HEAP32[i1 + 404 >> 2] | 0;
 i7 = HEAP32[i1 + 412 >> 2] | 0;
 i8 = i1 + 276 | 0;
 if (HEAP32[i8 >> 2] | 0 ? (i9 = i5 + 40 | 0, (HEAP32[i9 >> 2] | 0) == 0) : 0) {
  i10 = i5 + 16 | 0;
  i11 = HEAP32[i1 + 440 >> 2] | 0;
  i12 = i11 + 24 | 0;
  HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + ((HEAP32[i10 >> 2] | 0) / 8 | 0);
  HEAP32[i10 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[i11 + 8 >> 2] & 127](i1) | 0)) {
   i13 = 0;
   STACKTOP = i3;
   return i13 | 0;
  }
  i11 = i1 + 328 | 0;
  if ((HEAP32[i11 >> 2] | 0) > 0) {
   i10 = 0;
   do {
    HEAP32[i5 + 24 + (i10 << 2) >> 2] = 0;
    i10 = i10 + 1 | 0;
   } while ((i10 | 0) < (HEAP32[i11 >> 2] | 0));
  }
  HEAP32[i5 + 20 >> 2] = 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  if (!(HEAP32[i1 + 416 >> 2] | 0)) HEAP32[i5 + 8 >> 2] = 0;
 }
 if (!(HEAP32[i5 + 8 >> 2] | 0)) {
  i8 = i5 + 20 | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  if (!i9) {
   HEAP32[i4 + 16 >> 2] = i1;
   i11 = i1 + 24 | 0;
   i10 = HEAP32[i11 >> 2] | 0;
   HEAP32[i4 >> 2] = HEAP32[i10 >> 2];
   i12 = i4 + 4 | 0;
   HEAP32[i12 >> 2] = HEAP32[i10 + 4 >> 2];
   i10 = i5 + 12 | 0;
   i14 = HEAP32[i10 >> 2] | 0;
   i15 = i5 + 16 | 0;
   i16 = HEAP32[i15 >> 2] | 0;
   i17 = HEAP32[i2 >> 2] | 0;
   i2 = HEAP32[i5 + 60 >> 2] | 0;
   i18 = HEAP32[i1 + 400 >> 2] | 0;
   L18 : do if ((i18 | 0) <= (i6 | 0)) {
    i1 = i4 + 8 | 0;
    i19 = i4 + 12 | 0;
    i20 = i16;
    i21 = i14;
    i22 = i18;
    while (1) {
     if ((i20 | 0) < 8) {
      if (!(_jpeg_fill_bit_buffer(i4, i21, i20, 0) | 0)) {
       i13 = 0;
       i23 = 39;
       break;
      }
      i24 = HEAP32[i1 >> 2] | 0;
      i25 = HEAP32[i19 >> 2] | 0;
      if ((i25 | 0) < 8) {
       i26 = 1;
       i27 = i25;
       i28 = i24;
       i23 = 19;
      } else {
       i29 = i25;
       i30 = i24;
       i23 = 17;
      }
     } else {
      i29 = i20;
      i30 = i21;
      i23 = 17;
     }
     if ((i23 | 0) == 17) {
      i23 = 0;
      i24 = i30 >> i29 + -8 & 255;
      i25 = HEAP32[i2 + 144 + (i24 << 2) >> 2] | 0;
      if (!i25) {
       i26 = 9;
       i27 = i29;
       i28 = i30;
       i23 = 19;
      } else {
       i31 = HEAPU8[i2 + 1168 + i24 >> 0] | 0;
       i32 = i29 - i25 | 0;
       i33 = i30;
      }
     }
     if ((i23 | 0) == 19) {
      i23 = 0;
      i25 = _jpeg_huff_decode(i4, i28, i27, i2, i26) | 0;
      if ((i25 | 0) < 0) {
       i13 = 0;
       i23 = 39;
       break;
      }
      i31 = i25;
      i32 = HEAP32[i19 >> 2] | 0;
      i33 = HEAP32[i1 >> 2] | 0;
     }
     i34 = i31 >>> 4;
     i25 = i31 & 15;
     if (!i25) {
      if ((i34 | 0) != 15) {
       i23 = 30;
       break;
      }
      i35 = i22 + 15 | 0;
      i36 = i32;
      i37 = i33;
     } else {
      i24 = i34 + i22 | 0;
      if ((i32 | 0) < (i25 | 0)) {
       if (!(_jpeg_fill_bit_buffer(i4, i33, i32, i25) | 0)) {
        i13 = 0;
        i23 = 39;
        break;
       }
       i38 = HEAP32[i19 >> 2] | 0;
       i39 = HEAP32[i1 >> 2] | 0;
      } else {
       i38 = i32;
       i39 = i33;
      }
      i40 = i38 - i25 | 0;
      i41 = i39 >> i40 & (1 << i25) + -1;
      if ((i41 | 0) < (HEAP32[2880 + (i25 << 2) >> 2] | 0)) i42 = (HEAP32[2944 + (i25 << 2) >> 2] | 0) + i41 | 0; else i42 = i41;
      HEAP16[i17 + (HEAP32[2560 + (i24 << 2) >> 2] << 1) >> 1] = i42 << i7;
      i35 = i24;
      i36 = i40;
      i37 = i39;
     }
     if ((i35 | 0) < (i6 | 0)) {
      i20 = i36;
      i21 = i37;
      i22 = i35 + 1 | 0;
     } else {
      i43 = 0;
      i44 = i36;
      i45 = i37;
      break L18;
     }
    }
    if ((i23 | 0) == 30) {
     i22 = 1 << i34;
     if (!i34) {
      i43 = 0;
      i44 = i32;
      i45 = i33;
      break;
     }
     do if ((i32 | 0) < (i34 | 0)) if (!(_jpeg_fill_bit_buffer(i4, i33, i32, i34) | 0)) {
      i13 = 0;
      STACKTOP = i3;
      return i13 | 0;
     } else {
      i46 = HEAP32[i19 >> 2] | 0;
      i47 = HEAP32[i1 >> 2] | 0;
      break;
     } else {
      i46 = i32;
      i47 = i33;
     } while (0);
     i1 = i46 - i34 | 0;
     i19 = i22 + -1 | 0;
     i43 = i19 + (i47 >> i1 & i19) | 0;
     i44 = i1;
     i45 = i47;
     break;
    } else if ((i23 | 0) == 39) {
     STACKTOP = i3;
     return i13 | 0;
    }
   } else {
    i43 = 0;
    i44 = i16;
    i45 = i14;
   } while (0);
   i14 = HEAP32[i11 >> 2] | 0;
   HEAP32[i14 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i10 >> 2] = i45;
   HEAP32[i15 >> 2] = i44;
   i48 = i43;
  } else i48 = i9 + -1 | 0;
  HEAP32[i8 >> 2] = i48;
 }
 i48 = i5 + 40 | 0;
 HEAP32[i48 >> 2] = (HEAP32[i48 >> 2] | 0) + -1;
 i13 = 1;
 STACKTOP = i3;
 return i13 | 0;
}

function _arParamObserv2Ideal(i1, d2, d3, i4, i5, i6) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, d30 = 0.0, d31 = 0.0, d32 = 0.0, d33 = 0.0, d34 = 0.0, i35 = 0, d36 = 0.0, d37 = 0.0, d38 = 0.0, d39 = 0.0, d40 = 0.0, d41 = 0.0, i42 = 0;
 switch (i6 | 0) {
 case 4:
  {
   d7 = +HEAPF64[i1 >> 3];
   d8 = +HEAPF64[i1 + 8 >> 3];
   d9 = +HEAPF64[i1 + 16 >> 3];
   d10 = +HEAPF64[i1 + 24 >> 3];
   d11 = +HEAPF64[i1 + 32 >> 3];
   d12 = +HEAPF64[i1 + 40 >> 3];
   d13 = +HEAPF64[i1 + 48 >> 3];
   d14 = +HEAPF64[i1 + 56 >> 3];
   d15 = +HEAPF64[i1 + 64 >> 3];
   d16 = (d2 - d13) / d11;
   d17 = (d3 - d14) / d12;
   d18 = d16 * d16;
   d19 = d17 * d17;
   L3 : do if (d19 != 0.0 | d18 != 0.0) {
    d20 = d9 * 2.0;
    d21 = d10 * 6.0;
    d22 = d10 * 2.0;
    d23 = d9 * 6.0;
    d24 = d16;
    d25 = d17;
    d26 = d18;
    d27 = d19;
    i6 = 1;
    while (1) {
     d28 = d27 + d26;
     d29 = d7 * d28 + 1.0 + d28 * (d8 * d28);
     d30 = d26 * 3.0;
     d31 = d27 * d30;
     d24 = d24 - (d10 * (d28 + d26 * 2.0) + (d25 * (d20 * d24) + d24 * d29) - d16) / (d21 * d24 + (d20 * d25 + (d7 * (d27 + d30) + 1.0 + d8 * (d27 * d27 + (d26 * (d26 * 5.0) + d31)))));
     d30 = d22 * d24;
     d25 = d25 - (d9 * (d27 * 2.0 + d28) + d25 * d29 + d25 * d30 - d17) / (d23 * d25 + (d7 * (d26 + d27 * 3.0) + 1.0 + d8 * (d27 * (d27 * 5.0) + (d26 * d26 + d31))) + d30);
     if ((i6 | 0) == 4) {
      d32 = d24;
      d33 = d25;
      break L3;
     }
     d26 = d24 * d24;
     d27 = d25 * d25;
     if (!(d27 != 0.0 | d26 != 0.0)) {
      d32 = 0.0;
      d33 = 0.0;
      break;
     } else i6 = i6 + 1 | 0;
    }
   } else {
    d32 = 0.0;
    d33 = 0.0;
   } while (0);
   HEAPF64[i4 >> 3] = d13 + d11 * d32 / d15;
   d34 = d14 + d12 * d33 / d15;
   break;
  }
 case 3:
  {
   d15 = +HEAPF64[i1 >> 3];
   d33 = (d2 - d15) / +HEAPF64[i1 + 24 >> 3];
   i6 = i1 + 8 | 0;
   d12 = d3 - +HEAPF64[i6 >> 3];
   d14 = +HEAPF64[i1 + 32 >> 3] / 1.0e8;
   d32 = +HEAPF64[i1 + 40 >> 3] / 1.0e8 / 1.0e5;
   d11 = d33 * d33 + d12 * d12;
   d13 = +Math_sqrt(+d11);
   L10 : do if (d13 != 0.0) {
    d8 = d14 * 3.0;
    d7 = d32 * 5.0;
    d17 = d11;
    i35 = 1;
    d9 = d13;
    d16 = d12;
    d10 = d33;
    while (1) {
     d19 = d9 - (d9 * (1.0 - d14 * d17 - d17 * (d32 * d17)) - d13) / (1.0 - d8 * d17 - d17 * (d7 * d17));
     d10 = d10 * d19 / d9;
     d16 = d16 * d19 / d9;
     if ((i35 | 0) == 3) {
      d36 = d16;
      d37 = d10;
      break L10;
     }
     d17 = d10 * d10 + d16 * d16;
     d9 = +Math_sqrt(+d17);
     if (!(d9 != 0.0)) {
      d36 = 0.0;
      d37 = 0.0;
      break;
     } else i35 = i35 + 1 | 0;
    }
   } else {
    d36 = 0.0;
    d37 = 0.0;
   } while (0);
   i35 = i1 + 16 | 0;
   HEAPF64[i4 >> 3] = d15 + d37 / +HEAPF64[i35 >> 3];
   d34 = d36 / +HEAPF64[i35 >> 3] + +HEAPF64[i6 >> 3];
   break;
  }
 case 2:
  {
   d36 = +HEAPF64[i1 >> 3];
   d37 = d2 - d36;
   i6 = i1 + 8 | 0;
   d15 = d3 - +HEAPF64[i6 >> 3];
   d13 = +HEAPF64[i1 + 24 >> 3] / 1.0e8;
   d32 = +HEAPF64[i1 + 32 >> 3] / 1.0e8 / 1.0e5;
   d14 = d37 * d37 + d15 * d15;
   d33 = +Math_sqrt(+d14);
   L17 : do if (d33 != 0.0) {
    d12 = d13 * 3.0;
    d11 = d32 * 5.0;
    i35 = 1;
    d9 = d15;
    d17 = d37;
    d16 = d33;
    d10 = d14;
    while (1) {
     d7 = d16 - (d16 * (1.0 - d13 * d10 - d10 * (d32 * d10)) - d33) / (1.0 - d12 * d10 - d10 * (d11 * d10));
     d17 = d17 * d7 / d16;
     d9 = d9 * d7 / d16;
     if ((i35 | 0) == 3) {
      d38 = d9;
      d39 = d17;
      break L17;
     }
     d10 = d17 * d17 + d9 * d9;
     d16 = +Math_sqrt(+d10);
     if (!(d16 != 0.0)) {
      d38 = 0.0;
      d39 = 0.0;
      break;
     } else i35 = i35 + 1 | 0;
    }
   } else {
    d38 = 0.0;
    d39 = 0.0;
   } while (0);
   i35 = i1 + 16 | 0;
   HEAPF64[i4 >> 3] = d36 + d39 / +HEAPF64[i35 >> 3];
   d34 = d38 / +HEAPF64[i35 >> 3] + +HEAPF64[i6 >> 3];
   break;
  }
 case 1:
  {
   d38 = +HEAPF64[i1 >> 3];
   d39 = d2 - d38;
   i6 = i1 + 8 | 0;
   d2 = d3 - +HEAPF64[i6 >> 3];
   d3 = +HEAPF64[i1 + 24 >> 3] / 1.0e8;
   d36 = d39 * d39 + d2 * d2;
   d33 = +Math_sqrt(+d36);
   L24 : do if (d33 != 0.0) {
    d32 = d3 * 3.0;
    d13 = d2;
    d14 = d39;
    d37 = d33;
    d15 = d36;
    i35 = 1;
    while (1) {
     d16 = d37 - (d37 * (1.0 - d3 * d15) - d33) / (1.0 - d32 * d15);
     d14 = d14 * d16 / d37;
     d13 = d13 * d16 / d37;
     if ((i35 | 0) == 3) {
      d40 = d13;
      d41 = d14;
      break L24;
     }
     d15 = d14 * d14 + d13 * d13;
     d37 = +Math_sqrt(+d15);
     if (!(d37 != 0.0)) {
      d40 = 0.0;
      d41 = 0.0;
      break;
     } else i35 = i35 + 1 | 0;
    }
   } else {
    d40 = 0.0;
    d41 = 0.0;
   } while (0);
   i35 = i1 + 16 | 0;
   HEAPF64[i4 >> 3] = d38 + d41 / +HEAPF64[i35 >> 3];
   d34 = d40 / +HEAPF64[i35 >> 3] + +HEAPF64[i6 >> 3];
   break;
  }
 default:
  {
   i42 = -1;
   return i42 | 0;
  }
 }
 HEAPF64[i5 >> 3] = d34;
 i42 = 0;
 return i42 | 0;
}

function __ZN46EmscriptenBindingInitializer_constant_bindingsC2Ev(i1) {
 i1 = i1 | 0;
 __embind_register_function(38703, 4, 3456, 38709, 9, 29);
 __embind_register_function(38715, 2, 13640, 38724, 29, 76);
 __embind_register_function(38728, 2, 13640, 38724, 29, 77);
 __embind_register_function(38737, 3, 13648, 38748, 30, 30);
 __embind_register_function(38753, 3, 13648, 38748, 30, 31);
 __embind_register_function(38769, 3, 13648, 38748, 30, 32);
 __embind_register_function(38783, 3, 13660, 38748, 31, 33);
 __embind_register_function(38801, 2, 13640, 38724, 29, 78);
 __embind_register_function(38821, 2, 13672, 38724, 34, 79);
 __embind_register_function(38833, 4, 3456, 38709, 9, 32);
 __embind_register_function(38850, 3, 13660, 38748, 31, 35);
 __embind_register_function(38870, 4, 3456, 38709, 9, 33);
 __embind_register_function(38888, 4, 3456, 38709, 9, 34);
 __embind_register_function(38910, 3, 13660, 38748, 31, 36);
 __embind_register_function(38933, 3, 13660, 38748, 31, 37);
 __embind_register_function(38962, 2, 13640, 38724, 29, 80);
 __embind_register_function(38975, 2, 13640, 38724, 29, 81);
 __embind_register_function(38988, 2, 13640, 38724, 29, 82);
 __embind_register_function(39004, 4, 3456, 38709, 9, 35);
 __embind_register_function(39023, 3, 13660, 38748, 31, 38);
 __embind_register_function(39033, 3, 13660, 38748, 31, 39);
 __embind_register_function(39046, 3, 13660, 38748, 31, 40);
 __embind_register_function(39059, 2, 13640, 38724, 29, 83);
 __embind_register_function(39072, 2, 13640, 38724, 29, 84);
 __embind_register_function(39091, 2, 13680, 39103, 49, 140);
 __embind_register_function(39107, 1, 13688, 39119, 85, 1);
 __embind_register_function(39122, 3, 13692, 39145, 1, 1);
 __embind_register_function(39150, 2, 13704, 39173, 1, 1);
 __embind_register_function(39177, 3, 13692, 39145, 1, 2);
 __embind_register_function(39199, 2, 13704, 39173, 1, 2);
 __embind_register_function(39221, 3, 13712, 39238, 2, 50);
 __embind_register_function(39243, 2, 13640, 38724, 29, 86);
 __embind_register_function(39260, 3, 13712, 39238, 2, 51);
 __embind_register_function(39273, 2, 13640, 38724, 29, 87);
 __embind_register_function(39286, 3, 13712, 39238, 2, 52);
 __embind_register_function(39310, 2, 13640, 38724, 29, 88);
 __embind_register_function(39334, 3, 13724, 39347, 2, 3);
 __embind_register_function(39352, 2, 13704, 39173, 1, 3);
 __embind_register_function(39365, 3, 13712, 39238, 2, 53);
 __embind_register_function(39383, 2, 13640, 38724, 29, 89);
 __embind_register_function(39401, 3, 13712, 39238, 2, 54);
 __embind_register_function(39417, 2, 13640, 38724, 29, 90);
 __embind_register_function(39433, 3, 13712, 39238, 2, 55);
 __embind_register_function(39450, 2, 13640, 38724, 29, 91);
 __embind_register_constant(39467, 13408, -1.0);
 __embind_register_constant(39496, 13408, -2.0);
 __embind_register_constant(39524, 13408, -3.0);
 __embind_register_constant(39557, 13408, 0.0);
 __embind_register_constant(39574, 13408, 1.0);
 __embind_register_constant(39590, 13408, 0.0);
 __embind_register_constant(39612, 13408, 0.0);
 __embind_register_constant(39637, 13408, 1.0);
 __embind_register_constant(39662, 13408, 1.0);
 __embind_register_constant(39687, 13408, 100.0);
 __embind_register_constant(39714, 13408, 0.0);
 __embind_register_constant(39740, 13408, 1.0);
 __embind_register_constant(39766, 13408, 0.0);
 __embind_register_constant(39793, 13408, 0.0);
 __embind_register_constant(39820, 13408, 1.0);
 __embind_register_constant(39846, 13408, 2.0);
 __embind_register_constant(39871, 13408, 3.0);
 __embind_register_constant(39909, 13408, 4.0);
 __embind_register_constant(39946, 13408, 0.0);
 __embind_register_constant(39980, 13408, 0.0);
 __embind_register_constant(40004, 13408, 1.0);
 __embind_register_constant(40030, 13408, 2.0);
 __embind_register_constant(40057, 13408, 2.0);
 __embind_register_constant(40091, 13408, 5.0);
 __embind_register_constant(40109, 13448, .5);
 __embind_register_constant(40130, 13408, 0.0);
 __embind_register_constant(40149, 13408, 1.0);
 __embind_register_constant(40167, 13408, 2.0);
 __embind_register_constant(40185, 13408, 3.0);
 __embind_register_constant(40204, 13408, 4.0);
 __embind_register_constant(40226, 13408, 3.0);
 __embind_register_constant(40245, 13408, 515.0);
 __embind_register_constant(40274, 13408, 259.0);
 __embind_register_constant(40302, 13408, 4.0);
 __embind_register_constant(40321, 13408, 772.0);
 __embind_register_constant(40351, 13408, 1028.0);
 __embind_register_constant(40381, 13408, 0.0);
 __embind_register_constant(40412, 13408, 1.0);
 __embind_register_constant(40448, 13408, 2.0);
 __embind_register_constant(40482, 13408, 3.0);
 __embind_register_constant(40520, 13408, 0.0);
 __embind_register_constant(40553, 13408, 1.0);
 __embind_register_constant(40600, 13408, 2.0);
 __embind_register_constant(40642, 13408, 3.0);
 __embind_register_constant(40685, 13408, 4.0);
 __embind_register_constant(40737, 13408, 5.0);
 __embind_register_constant(40788, 13408, 6.0);
 __embind_register_constant(40833, 13408, 7.0);
 __embind_register_constant(40872, 13408, 8.0);
 __embind_register_constant(40917, 13408, 9.0);
 return;
}

function _setCamera(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i3 + 24 | 0;
 i5 = i3 + 16 | 0;
 i6 = i3 + 8 | 0;
 i7 = i3;
 i8 = i3 + 32 | 0;
 i9 = i3 + 28 | 0;
 HEAP32[i8 >> 2] = i1;
 HEAP32[i9 >> 2] = i2;
 i10 = HEAP32[14187] | 0;
 if (!i10) {
  i11 = -1;
  STACKTOP = i3;
  return i11 | 0;
 }
 i12 = i10 + -1 | 0;
 i13 = (i12 & i10 | 0) == 0;
 if (!i13) if (i10 >>> 0 > i1 >>> 0) i14 = i1; else i14 = (i1 >>> 0) % (i10 >>> 0) | 0; else i14 = i12 & i1;
 i15 = HEAP32[(HEAP32[14186] | 0) + (i14 << 2) >> 2] | 0;
 if (!i15) {
  i11 = -1;
  STACKTOP = i3;
  return i11 | 0;
 }
 i16 = HEAP32[i15 >> 2] | 0;
 if (!i16) {
  i11 = -1;
  STACKTOP = i3;
  return i11 | 0;
 }
 L15 : do if (i13) {
  i15 = i16;
  while (1) {
   i17 = HEAP32[i15 + 4 >> 2] | 0;
   i18 = (i17 | 0) == (i1 | 0);
   if (!(i18 | (i17 & i12 | 0) == (i14 | 0))) {
    i11 = -1;
    i19 = 57;
    break;
   }
   if (i18 ? (HEAP32[i15 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i15 = HEAP32[i15 >> 2] | 0;
   if (!i15) {
    i11 = -1;
    i19 = 57;
    break;
   }
  }
  if ((i19 | 0) == 57) {
   STACKTOP = i3;
   return i11 | 0;
  }
 } else {
  i15 = i16;
  while (1) {
   i18 = HEAP32[i15 + 4 >> 2] | 0;
   if ((i18 | 0) == (i1 | 0)) {
    if ((HEAP32[i15 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i18 >>> 0 < i10 >>> 0) i20 = i18; else i20 = (i18 >>> 0) % (i10 >>> 0) | 0;
    if ((i20 | 0) != (i14 | 0)) {
     i11 = -1;
     i19 = 57;
     break;
    }
   }
   i15 = HEAP32[i15 >> 2] | 0;
   if (!i15) {
    i11 = -1;
    i19 = 57;
    break;
   }
  }
  if ((i19 | 0) == 57) {
   STACKTOP = i3;
   return i11 | 0;
  }
 } while (0);
 i14 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i8) | 0;
 i8 = HEAP32[14192] | 0;
 if (!i8) {
  i11 = -1;
  STACKTOP = i3;
  return i11 | 0;
 }
 i20 = i8 + -1 | 0;
 i10 = (i20 & i8 | 0) == 0;
 if (!i10) if (i8 >>> 0 > i2 >>> 0) i21 = i2; else i21 = (i2 >>> 0) % (i8 >>> 0) | 0; else i21 = i20 & i2;
 i1 = HEAP32[(HEAP32[14191] | 0) + (i21 << 2) >> 2] | 0;
 if (!i1) {
  i11 = -1;
  STACKTOP = i3;
  return i11 | 0;
 }
 i16 = HEAP32[i1 >> 2] | 0;
 if (!i16) {
  i11 = -1;
  STACKTOP = i3;
  return i11 | 0;
 }
 L54 : do if (i10) {
  i1 = i16;
  while (1) {
   i12 = HEAP32[i1 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i2 | 0);
   if (!(i13 | (i12 & i20 | 0) == (i21 | 0))) {
    i11 = -1;
    i19 = 57;
    break;
   }
   if (i13 ? (HEAP32[i1 + 8 >> 2] | 0) == (i2 | 0) : 0) break L54;
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i11 = -1;
    i19 = 57;
    break;
   }
  }
  if ((i19 | 0) == 57) {
   STACKTOP = i3;
   return i11 | 0;
  }
 } else {
  i1 = i16;
  while (1) {
   i13 = HEAP32[i1 + 4 >> 2] | 0;
   if ((i13 | 0) == (i2 | 0)) {
    if ((HEAP32[i1 + 8 >> 2] | 0) == (i2 | 0)) break L54;
   } else {
    if (i13 >>> 0 < i8 >>> 0) i22 = i13; else i22 = (i13 >>> 0) % (i8 >>> 0) | 0;
    if ((i22 | 0) != (i21 | 0)) {
     i11 = -1;
     i19 = 57;
     break;
    }
   }
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i11 = -1;
    i19 = 57;
    break;
   }
  }
  if ((i19 | 0) == 57) {
   STACKTOP = i3;
   return i11 | 0;
  }
 } while (0);
 i19 = i14 + 8 | 0;
 _memcpy(i19 | 0, __ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56764, i9) | 0, 184) | 0;
 i9 = HEAP32[i19 >> 2] | 0;
 i21 = i14 + 208 | 0;
 i22 = HEAP32[i14 + 12 >> 2] | 0;
 i8 = i14 + 212 | 0;
 if (!((i9 | 0) == (HEAP32[i21 >> 2] | 0) ? (i22 | 0) == (HEAP32[i8 >> 2] | 0) : 0)) {
  HEAP32[i7 >> 2] = i9;
  HEAP32[i7 + 4 >> 2] = i22;
  _arLog(0, 2, 45315, i7);
  _arParamChangeSize(i19, HEAP32[i21 >> 2] | 0, HEAP32[i8 >> 2] | 0, i19) | 0;
 }
 i8 = i14 + 216 | 0;
 i21 = HEAP32[i8 >> 2] | 0;
 if (i21 | 0) {
  _arPattDetach(i21) | 0;
  _arDeleteHandle(HEAP32[i8 >> 2] | 0) | 0;
  HEAP32[i8 >> 2] = 0;
 }
 i21 = i14 + 228 | 0;
 if (HEAP32[i21 >> 2] | 0) {
  _ar3DDeleteHandle(i21) | 0;
  HEAP32[i21 >> 2] = 0;
 }
 i7 = i14 + 192 | 0;
 if (HEAP32[i7 >> 2] | 0) {
  _arParamLTFree(i7) | 0;
  HEAP32[i7 >> 2] = 0;
 }
 i22 = _arParamLTCreate(i19, 15) | 0;
 HEAP32[i7 >> 2] = i22;
 if (!i22) {
  _arLog(0, 3, 45362, i6);
  i11 = -1;
  STACKTOP = i3;
  return i11 | 0;
 }
 i6 = _arCreateHandle(i22) | 0;
 HEAP32[i8 >> 2] = i6;
 if (!i6) {
  _arLog(0, 3, 45400, i5);
  i11 = -1;
  STACKTOP = i3;
  return i11 | 0;
 }
 _arSetPixelFormat(i6, HEAP32[i14 + 432 >> 2] | 0) | 0;
 i6 = _ar3DCreateHandle(i19) | 0;
 HEAP32[i21 >> 2] = i6;
 if (!i6) {
  _arLog(0, 3, 45437, i4);
  i11 = -1;
  STACKTOP = i3;
  return i11 | 0;
 } else {
  _arPattAttach(HEAP32[i8 >> 2] | 0, HEAP32[i14 + 220 >> 2] | 0) | 0;
  _arglCameraFrustumRH(HEAP32[i7 >> 2] | 0, +HEAPF64[i14 + 272 >> 3], +HEAPF64[i14 + 280 >> 3], i14 + 304 | 0);
  i8 = _kpmCreateHandle(HEAP32[i7 >> 2] | 0) | 0;
  HEAP32[i14 + 232 >> 2] = i8;
  i11 = 0;
  STACKTOP = i3;
  return i11 | 0;
 }
 return 0;
}

function __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8;
 i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
 i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58500) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i11 >> 2] | 0) + 20 >> 2] & 63](i9, i11);
 HEAP32[i6 >> 2] = i4;
 i7 = HEAP8[i1 >> 0] | 0;
 switch (i7 << 24 >> 24) {
 case 43:
 case 45:
  {
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, i7) | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i7 + 1;
   HEAP8[i7 >> 0] = i12;
   i13 = i1 + 1 | 0;
   break;
  }
 default:
  i13 = i1;
 }
 i12 = i3;
 L4 : do if ((i12 - i13 | 0) > 1 ? (HEAP8[i13 >> 0] | 0) == 48 : 0) {
  i7 = i13 + 1 | 0;
  switch (HEAP8[i7 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    i14 = 4;
    break L4;
   }
  }
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 48) | 0;
  i16 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i16 + 1;
  HEAP8[i16 >> 0] = i15;
  i15 = i13 + 2 | 0;
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, HEAP8[i7 >> 0] | 0) | 0;
  i7 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i7 + 1;
  HEAP8[i7 >> 0] = i16;
  i16 = i15;
  while (1) {
   if (i16 >>> 0 >= i3 >>> 0) {
    i17 = i15;
    i18 = i16;
    break L4;
   }
   i7 = HEAP8[i16 >> 0] | 0;
   if (!(_isxdigit_l(i7, __ZNSt3__26__clocEv() | 0) | 0)) {
    i17 = i15;
    i18 = i16;
    break L4;
   }
   i16 = i16 + 1 | 0;
  }
 } else i14 = 4; while (0);
 L12 : do if ((i14 | 0) == 4) {
  i16 = i13;
  while (1) {
   if (i16 >>> 0 >= i3 >>> 0) {
    i17 = i13;
    i18 = i16;
    break L12;
   }
   i15 = HEAP8[i16 >> 0] | 0;
   if (!(_isdigit_l(i15, __ZNSt3__26__clocEv() | 0) | 0)) {
    i17 = i13;
    i18 = i16;
    break L12;
   }
   i16 = i16 + 1 | 0;
  }
 } while (0);
 i13 = i9 + 11 | 0;
 i16 = HEAP8[i13 >> 0] | 0;
 i15 = i9 + 4 | 0;
 L19 : do if ((i16 << 24 >> 24 < 0 ? HEAP32[i15 >> 2] | 0 : i16 & 255) | 0) {
  L22 : do if ((i17 | 0) != (i18 | 0)) {
   i7 = i18;
   i19 = i17;
   while (1) {
    i20 = i7 + -1 | 0;
    if (i19 >>> 0 >= i20 >>> 0) break L22;
    i21 = HEAP8[i19 >> 0] | 0;
    HEAP8[i19 >> 0] = HEAP8[i20 >> 0] | 0;
    HEAP8[i20 >> 0] = i21;
    i7 = i20;
    i19 = i19 + 1 | 0;
   }
  } while (0);
  i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 16 >> 2] & 127](i11) | 0;
  i7 = i17;
  i20 = 0;
  i21 = 0;
  while (1) {
   if (i7 >>> 0 >= i18 >>> 0) break;
   i22 = HEAP8[((HEAP8[i13 >> 0] | 0) < 0 ? HEAP32[i9 >> 2] | 0 : i9) + i21 >> 0] | 0;
   if (i22 << 24 >> 24 > 0 & (i20 | 0) == (i22 << 24 >> 24 | 0)) {
    i22 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i22 + 1;
    HEAP8[i22 >> 0] = i19;
    i22 = HEAP8[i13 >> 0] | 0;
    i23 = i21 + (i21 >>> 0 < ((i22 << 24 >> 24 < 0 ? HEAP32[i15 >> 2] | 0 : i22 & 255) + -1 | 0) >>> 0 & 1) | 0;
    i24 = 0;
   } else {
    i23 = i21;
    i24 = i20;
   }
   i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, HEAP8[i7 >> 0] | 0) | 0;
   i25 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i25 + 1;
   HEAP8[i25 >> 0] = i22;
   i7 = i7 + 1 | 0;
   i20 = i24 + 1 | 0;
   i21 = i23;
  }
  i21 = i4 + (i17 - i1) | 0;
  i20 = HEAP32[i6 >> 2] | 0;
  if ((i21 | 0) == (i20 | 0)) i26 = i10; else {
   i7 = i20;
   i20 = i21;
   while (1) {
    i21 = i7 + -1 | 0;
    if (i20 >>> 0 >= i21 >>> 0) {
     i26 = i10;
     break L19;
    }
    i19 = HEAP8[i20 >> 0] | 0;
    HEAP8[i20 >> 0] = HEAP8[i21 >> 0] | 0;
    HEAP8[i21 >> 0] = i19;
    i7 = i21;
    i20 = i20 + 1 | 0;
   }
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 32 >> 2] & 15](i10, i17, i18, HEAP32[i6 >> 2] | 0) | 0;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + (i18 - i17);
  i26 = i10;
 } while (0);
 i17 = i18;
 while (1) {
  if (i17 >>> 0 >= i3 >>> 0) {
   i27 = i17;
   break;
  }
  i18 = HEAP8[i17 >> 0] | 0;
  if (i18 << 24 >> 24 == 46) {
   i14 = 32;
   break;
  }
  i23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i26 >> 2] | 0) + 28 >> 2] & 63](i10, i18) | 0;
  i18 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i18 + 1;
  HEAP8[i18 >> 0] = i23;
  i17 = i17 + 1 | 0;
 }
 if ((i14 | 0) == 32) {
  i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 127](i11) | 0;
  i11 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i11 + 1;
  HEAP8[i11 >> 0] = i14;
  i27 = i17 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 32 >> 2] & 15](i10, i27, i3, HEAP32[i6 >> 2] | 0) | 0;
 i10 = (HEAP32[i6 >> 2] | 0) + (i12 - i27) | 0;
 HEAP32[i6 >> 2] = i10;
 HEAP32[i5 >> 2] = (i2 | 0) == (i3 | 0) ? i10 : i4 + (i2 - i1) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i8;
 return;
}

function _decode_mcu_DC_first(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i3 + 20 | 0;
 i5 = i3;
 i6 = HEAP32[i1 + 444 >> 2] | 0;
 i7 = HEAP32[i1 + 412 >> 2] | 0;
 i8 = i1 + 276 | 0;
 if (HEAP32[i8 >> 2] | 0 ? (i9 = i6 + 40 | 0, (HEAP32[i9 >> 2] | 0) == 0) : 0) {
  i10 = i6 + 16 | 0;
  i11 = HEAP32[i1 + 440 >> 2] | 0;
  i12 = i11 + 24 | 0;
  HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + ((HEAP32[i10 >> 2] | 0) / 8 | 0);
  HEAP32[i10 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[i11 + 8 >> 2] & 127](i1) | 0)) {
   i13 = 0;
   STACKTOP = i3;
   return i13 | 0;
  }
  i11 = i1 + 328 | 0;
  if ((HEAP32[i11 >> 2] | 0) > 0) {
   i10 = 0;
   do {
    HEAP32[i6 + 24 + (i10 << 2) >> 2] = 0;
    i10 = i10 + 1 | 0;
   } while ((i10 | 0) < (HEAP32[i11 >> 2] | 0));
  }
  HEAP32[i6 + 20 >> 2] = 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  if (!(HEAP32[i1 + 416 >> 2] | 0)) HEAP32[i6 + 8 >> 2] = 0;
 }
 if (!(HEAP32[i6 + 8 >> 2] | 0)) {
  HEAP32[i4 + 16 >> 2] = i1;
  i8 = i1 + 24 | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  i11 = HEAP32[i9 >> 2] | 0;
  HEAP32[i4 >> 2] = i11;
  i10 = HEAP32[i9 + 4 >> 2] | 0;
  i12 = i4 + 4 | 0;
  HEAP32[i12 >> 2] = i10;
  i14 = i6 + 12 | 0;
  i15 = HEAP32[i14 >> 2] | 0;
  i16 = i6 + 16 | 0;
  i17 = HEAP32[i16 >> 2] | 0;
  i18 = i6 + 20 | 0;
  HEAP32[i5 >> 2] = HEAP32[i18 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
  HEAP32[i5 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
  HEAP32[i5 + 16 >> 2] = HEAP32[i18 + 16 >> 2];
  i19 = i1 + 356 | 0;
  do if ((HEAP32[i19 >> 2] | 0) > 0) {
   i20 = i4 + 8 | 0;
   i21 = i4 + 12 | 0;
   i22 = i17;
   i23 = i15;
   i24 = 0;
   while (1) {
    i25 = HEAP32[i2 + (i24 << 2) >> 2] | 0;
    i26 = HEAP32[i1 + 360 + (i24 << 2) >> 2] | 0;
    i27 = HEAP32[i6 + 44 + (HEAP32[(HEAP32[i1 + 332 + (i26 << 2) >> 2] | 0) + 20 >> 2] << 2) >> 2] | 0;
    if ((i22 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer(i4, i23, i22, 0) | 0)) {
      i13 = 0;
      i28 = 29;
      break;
     }
     i29 = HEAP32[i20 >> 2] | 0;
     i30 = HEAP32[i21 >> 2] | 0;
     if ((i30 | 0) < 8) {
      i31 = 1;
      i32 = i30;
      i33 = i29;
      i28 = 17;
     } else {
      i34 = i30;
      i35 = i29;
      i28 = 15;
     }
    } else {
     i34 = i22;
     i35 = i23;
     i28 = 15;
    }
    if ((i28 | 0) == 15) {
     i28 = 0;
     i29 = i35 >> i34 + -8 & 255;
     i30 = HEAP32[i27 + 144 + (i29 << 2) >> 2] | 0;
     if (!i30) {
      i31 = 9;
      i32 = i34;
      i33 = i35;
      i28 = 17;
     } else {
      i36 = HEAPU8[i27 + 1168 + i29 >> 0] | 0;
      i37 = i34 - i30 | 0;
      i38 = i35;
     }
    }
    if ((i28 | 0) == 17) {
     i28 = 0;
     i30 = _jpeg_huff_decode(i4, i33, i32, i27, i31) | 0;
     if ((i30 | 0) < 0) {
      i13 = 0;
      i28 = 29;
      break;
     }
     i36 = i30;
     i37 = HEAP32[i21 >> 2] | 0;
     i38 = HEAP32[i20 >> 2] | 0;
    }
    if (i36) {
     if ((i37 | 0) < (i36 | 0)) {
      if (!(_jpeg_fill_bit_buffer(i4, i38, i37, i36) | 0)) {
       i13 = 0;
       i28 = 29;
       break;
      }
      i39 = HEAP32[i21 >> 2] | 0;
      i40 = HEAP32[i20 >> 2] | 0;
     } else {
      i39 = i37;
      i40 = i38;
     }
     i30 = i39 - i36 | 0;
     i27 = i40 >> i30 & (1 << i36) + -1;
     if ((i27 | 0) < (HEAP32[2880 + (i36 << 2) >> 2] | 0)) {
      i41 = (HEAP32[2944 + (i36 << 2) >> 2] | 0) + i27 | 0;
      i42 = i30;
      i43 = i40;
     } else {
      i41 = i27;
      i42 = i30;
      i43 = i40;
     }
    } else {
     i41 = 0;
     i42 = i37;
     i43 = i38;
    }
    i30 = i5 + 4 + (i26 << 2) | 0;
    i26 = (HEAP32[i30 >> 2] | 0) + i41 | 0;
    HEAP32[i30 >> 2] = i26;
    HEAP16[i25 >> 1] = i26 << i7;
    i24 = i24 + 1 | 0;
    if ((i24 | 0) >= (HEAP32[i19 >> 2] | 0)) {
     i28 = 26;
     break;
    } else {
     i22 = i42;
     i23 = i43;
    }
   }
   if ((i28 | 0) == 26) {
    i44 = i42;
    i45 = i43;
    i46 = HEAP32[i8 >> 2] | 0;
    i47 = HEAP32[i4 >> 2] | 0;
    i48 = HEAP32[i12 >> 2] | 0;
    break;
   } else if ((i28 | 0) == 29) {
    STACKTOP = i3;
    return i13 | 0;
   }
  } else {
   i44 = i17;
   i45 = i15;
   i46 = i9;
   i47 = i11;
   i48 = i10;
  } while (0);
  HEAP32[i46 >> 2] = i47;
  HEAP32[i46 + 4 >> 2] = i48;
  HEAP32[i14 >> 2] = i45;
  HEAP32[i16 >> 2] = i44;
  HEAP32[i18 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i18 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i18 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  HEAP32[i18 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
  HEAP32[i18 + 16 >> 2] = HEAP32[i5 + 16 >> 2];
 }
 i5 = i6 + 40 | 0;
 HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + -1;
 i13 = 1;
 STACKTOP = i3;
 return i13 | 0;
}

function _ar2ReadMarkerSet(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 1120 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1120);
 i5 = i4 + 1104 | 0;
 i6 = i4 + 1088 | 0;
 i7 = i4 + 1072 | 0;
 i8 = i4 + 1064 | 0;
 i9 = i4 + 1056 | 0;
 i10 = i4 + 1048 | 0;
 i11 = i4 + 1040 | 0;
 i12 = i4 + 1024 | 0;
 i13 = i4 + 768 | 0;
 i14 = i4 + 512 | 0;
 i15 = i4;
 HEAP32[i12 >> 2] = i1;
 HEAP32[i12 + 4 >> 2] = i2;
 _sprintf(i15, 20527, i12) | 0;
 i12 = _fopen(i15, 19682) | 0;
 if (!i12) {
  i16 = 0;
  STACKTOP = i4;
  return i16 | 0;
 }
 i15 = _malloc(8) | 0;
 if (!i15) {
  _arLog(0, 3, 20510, i4 + 1032 | 0);
  _exit(1);
 }
 L7 : do if (_fgets(i13, 256, i12) | 0) {
  L9 : while (1) {
   switch (HEAP8[i13 >> 0] | 0) {
   case 35:
   case 10:
    break;
   default:
    break L9;
   }
   if (!(_fgets(i13, 256, i12) | 0)) {
    i17 = 8;
    break L7;
   }
  }
  i2 = i15 + 4 | 0;
  HEAP32[i11 >> 2] = i2;
  if ((_sscanf(i13, 19716, i11) | 0) != 1) {
   _free(i15);
   i18 = 0;
   break;
  }
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) < 1) {
   _free(i15);
   i18 = 0;
   break;
  }
  i19 = _malloc(i1 * 56 | 0) | 0;
  HEAP32[i15 >> 2] = i19;
  if (!i19) {
   _arLog(0, 3, 20510, i10);
   _exit(1);
  }
  i19 = 0;
  L22 : while (1) {
   if (!(_fgets(i13, 256, i12) | 0)) {
    i17 = 20;
    break;
   }
   L25 : while (1) {
    switch (HEAP8[i13 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L25;
    }
    if (!(_fgets(i13, 256, i12) | 0)) {
     i17 = 20;
     break L22;
    }
   }
   HEAP32[i9 >> 2] = i14;
   if ((_sscanf(i13, 19743, i9) | 0) != 1) {
    i17 = 22;
    break;
   }
   i1 = _arPattLoad(i3, i14) | 0;
   i20 = HEAP32[i15 >> 2] | 0;
   HEAP32[i20 + (i19 * 56 | 0) + 4 >> 2] = i1;
   if ((i1 | 0) < 0) {
    i17 = 24;
    break;
   }
   if (!(_fgets(i13, 256, i12) | 0)) {
    i17 = 29;
    break;
   }
   L32 : while (1) {
    switch (HEAP8[i13 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L32;
    }
    if (!(_fgets(i13, 256, i12) | 0)) {
     i17 = 29;
     break L22;
    }
   }
   HEAP32[i8 >> 2] = (HEAP32[i15 >> 2] | 0) + (i19 * 56 | 0);
   if ((_sscanf(i13, 19644, i8) | 0) != 1) {
    i17 = 31;
    break;
   }
   if (!(_fgets(i13, 256, i12) | 0)) {
    i17 = 38;
    break;
   }
   L38 : while (1) {
    switch (HEAP8[i13 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L38;
    }
    if (!(_fgets(i13, 256, i12) | 0)) {
     i17 = 38;
     break L22;
    }
   }
   i1 = HEAP32[i15 >> 2] | 0;
   HEAP32[i7 >> 2] = i1 + (i19 * 56 | 0) + 8;
   HEAP32[i7 + 4 >> 2] = i1 + (i19 * 56 | 0) + 12;
   HEAP32[i7 + 8 >> 2] = i1 + (i19 * 56 | 0) + 16;
   HEAP32[i7 + 12 >> 2] = i1 + (i19 * 56 | 0) + 20;
   if ((_sscanf(i13, 19909, i7) | 0) != 4) {
    i17 = 40;
    break;
   }
   if (!(_fgets(i13, 256, i12) | 0)) {
    i17 = 38;
    break;
   }
   L44 : while (1) {
    switch (HEAP8[i13 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L44;
    }
    if (!(_fgets(i13, 256, i12) | 0)) {
     i17 = 38;
     break L22;
    }
   }
   i1 = HEAP32[i15 >> 2] | 0;
   HEAP32[i6 >> 2] = i1 + (i19 * 56 | 0) + 24;
   HEAP32[i6 + 4 >> 2] = i1 + (i19 * 56 | 0) + 28;
   HEAP32[i6 + 8 >> 2] = i1 + (i19 * 56 | 0) + 32;
   HEAP32[i6 + 12 >> 2] = i1 + (i19 * 56 | 0) + 36;
   if ((_sscanf(i13, 19909, i6) | 0) != 4) {
    i17 = 40;
    break;
   }
   if (!(_fgets(i13, 256, i12) | 0)) {
    i17 = 38;
    break;
   }
   L50 : while (1) {
    switch (HEAP8[i13 >> 0] | 0) {
    case 35:
    case 10:
     break;
    default:
     break L50;
    }
    if (!(_fgets(i13, 256, i12) | 0)) {
     i17 = 38;
     break L22;
    }
   }
   i1 = HEAP32[i15 >> 2] | 0;
   HEAP32[i5 >> 2] = i1 + (i19 * 56 | 0) + 40;
   HEAP32[i5 + 4 >> 2] = i1 + (i19 * 56 | 0) + 44;
   HEAP32[i5 + 8 >> 2] = i1 + (i19 * 56 | 0) + 48;
   HEAP32[i5 + 12 >> 2] = i1 + (i19 * 56 | 0) + 52;
   if ((_sscanf(i13, 19909, i5) | 0) != 4) {
    i17 = 40;
    break;
   }
   i19 = i19 + 1 | 0;
   if ((i19 | 0) >= (HEAP32[i2 >> 2] | 0)) {
    i18 = i15;
    break L7;
   }
  }
  if ((i17 | 0) == 20) {
   _free(HEAP32[i15 >> 2] | 0);
   _free(i15);
   i18 = 0;
   break;
  } else if ((i17 | 0) == 22) {
   _free(HEAP32[i15 >> 2] | 0);
   _free(i15);
   i18 = 0;
   break;
  } else if ((i17 | 0) == 24) {
   _free(i20);
   _free(i15);
   i18 = 0;
   break;
  } else if ((i17 | 0) == 29) {
   _free(HEAP32[i15 >> 2] | 0);
   _free(i15);
   i18 = 0;
   break;
  } else if ((i17 | 0) == 31) {
   _free(HEAP32[i15 >> 2] | 0);
   _free(i15);
   i18 = 0;
   break;
  } else if ((i17 | 0) == 38) {
   _free(HEAP32[i15 >> 2] | 0);
   _free(i15);
   i18 = 0;
   break;
  } else if ((i17 | 0) == 40) {
   _free(HEAP32[i15 >> 2] | 0);
   _free(i15);
   i18 = 0;
   break;
  }
 } else i17 = 8; while (0);
 if ((i17 | 0) == 8) {
  _free(i15);
  i18 = 0;
 }
 _fclose(i12) | 0;
 i16 = i18;
 STACKTOP = i4;
 return i16 | 0;
}

function __ZN6vision21HoughSimilarityVoting19autoAdjustXYNumBinsEPKfS2_i(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0, d17 = 0.0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5 + 12 | 0;
 i7 = i5;
 i8 = HEAP32[i1 >> 2] | 0;
 i9 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i7 >> 2] = 0;
 i10 = i7 + 4 | 0;
 HEAP32[i10 >> 2] = 0;
 i11 = i7 + 8 | 0;
 HEAP32[i11 >> 2] = 0;
 if (!i4) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31419, 31) | 0, 31451, 124) | 0, 33554, 6) | 0, 208) | 0, 33561, 2) | 0, 31576, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i14) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 if (i4 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i12 = i4 << 2;
 i14 = __Znwm(i12) | 0;
 HEAP32[i7 >> 2] = i14;
 i13 = i14 + (i4 << 2) | 0;
 HEAP32[i11 >> 2] = i13;
 _memset(i14 | 0, 0, i12 | 0) | 0;
 HEAP32[i10 >> 2] = i13;
 i12 = i13;
 if ((i8 | 0) <= 0) {
  i13 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31598, 41) | 0, 31451, 124) | 0, 33554, 6) | 0, 209) | 0, 33561, 2) | 0, 31640, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i15 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i15) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 if ((i9 | 0) <= 0) {
  i13 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31663, 42) | 0, 31451, 124) | 0, 33554, 6) | 0, 210) | 0, 33561, 2) | 0, 31706, 23) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i11) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 }
 d16 = +(((i8 | 0) > (i9 | 0) ? i8 : i9) | 0);
 i9 = 0;
 do {
  i8 = i9 << 2;
  d17 = +HEAPF32[i3 + (i8 << 2) + 12 >> 2];
  HEAPF32[i14 + (i9 << 2) >> 2] = +HEAPF32[i2 + (i8 << 2) + 12 >> 2] / (d17 == 0.0 ? 1.0 : d17) * d16;
  i9 = i9 + 1 | 0;
 } while ((i9 | 0) != (i4 | 0));
 i4 = i12 - i14 >> 2;
 d16 = +__ZN6vision11PartialSortIfEET_PS1_ii(i14, i4, (i4 & 1) + -1 + ((i4 | 0) / 2 | 0) | 0) * .25;
 i4 = ~~+Math_ceil(+((+HEAPF32[i1 + 24 >> 2] - +HEAPF32[i1 + 20 >> 2]) / d16));
 i14 = (i4 | 0) > 5 ? i4 : 5;
 HEAP32[i1 + 52 >> 2] = i14;
 i4 = ~~+Math_ceil(+((+HEAPF32[i1 + 32 >> 2] - +HEAPF32[i1 + 28 >> 2]) / d16));
 i12 = (i4 | 0) > 5 ? i4 : 5;
 HEAP32[i1 + 56 >> 2] = i12;
 i4 = Math_imul(i12, i14) | 0;
 HEAP32[i1 + 84 >> 2] = i4;
 i14 = Math_imul(i4, HEAP32[i1 + 60 >> 2] | 0) | 0;
 HEAP32[i1 + 88 >> 2] = i14;
 i14 = HEAP32[i7 >> 2] | 0;
 if (!i14) {
  STACKTOP = i5;
  return;
 }
 HEAP32[i10 >> 2] = i14;
 __ZdlPv(i14);
 STACKTOP = i5;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i3 = i2 + 11 | 0;
 i4 = HEAP8[i3 >> 0] | 0;
 i5 = i2 + 4 | 0;
 L1 : do if (!((i4 << 24 >> 24 < 0 ? HEAP32[i5 >> 2] | 0 : i4 & 255) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i2); else {
  i6 = __ZNSt3__211char_traitsIcE6lengthEPKc(51065) | 0;
  i7 = HEAP8[i3 >> 0] | 0;
  if ((i6 | 0) == ((i7 << 24 >> 24 < 0 ? HEAP32[i5 >> 2] | 0 : i7 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i2, 51065, i6) | 0) == 0 : 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i2, 51077);
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51148, __ZNSt3__211char_traitsIcE6lengthEPKc(51148) | 0);
   break;
  }
  i6 = __ZNSt3__211char_traitsIcE6lengthEPKc(51161) | 0;
  i7 = HEAP8[i3 >> 0] | 0;
  if ((i6 | 0) == ((i7 << 24 >> 24 < 0 ? HEAP32[i5 >> 2] | 0 : i7 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i2, 51161, i6) | 0) == 0 : 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i2, 51174);
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51224, __ZNSt3__211char_traitsIcE6lengthEPKc(51224) | 0);
   break;
  }
  i6 = __ZNSt3__211char_traitsIcE6lengthEPKc(51238) | 0;
  i7 = HEAP8[i3 >> 0] | 0;
  if ((i6 | 0) == ((i7 << 24 >> 24 < 0 ? HEAP32[i5 >> 2] | 0 : i7 & 255) | 0) ? (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i2, 51238, i6) | 0) == 0 : 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i2, 51251);
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51301, __ZNSt3__211char_traitsIcE6lengthEPKc(51301) | 0);
   break;
  }
  i6 = __ZNSt3__211char_traitsIcE6lengthEPKc(51315) | 0;
  i7 = HEAP8[i3 >> 0] | 0;
  i8 = HEAP32[i5 >> 2] | 0;
  i9 = i7 & 255;
  do if ((i6 | 0) == ((i7 << 24 >> 24 < 0 ? i8 : i9) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i2, 51315, i6) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i2, 51329);
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51380, __ZNSt3__211char_traitsIcE6lengthEPKc(51380) | 0);
   break L1;
  } else {
   i10 = HEAP8[i3 >> 0] | 0;
   i11 = i10 & 255;
   i12 = i10;
   i13 = HEAP32[i5 >> 2] | 0;
   break;
  } else {
   i11 = i9;
   i12 = i7;
   i13 = i8;
  } while (0);
  i8 = i12 << 24 >> 24 < 0;
  i7 = i8 ? HEAP32[i2 >> 2] | 0 : i2;
  i9 = i7 + (i8 ? i13 : i11) | 0;
  do if ((HEAP8[i9 + -1 >> 0] | 0) == 62) {
   i8 = 1;
   i6 = i9;
   L24 : while (1) {
    i14 = i6;
    L26 : while (1) {
     i15 = i14 + -1 | 0;
     if ((i15 | 0) == (i7 | 0)) break L24;
     switch (HEAP8[i14 + -2 >> 0] | 0) {
     case 60:
      {
       i16 = 24;
       break L26;
       break;
      }
     case 62:
      {
       i16 = 25;
       break L26;
       break;
      }
     default:
      i14 = i15;
     }
    }
    if ((i16 | 0) == 24) {
     i16 = 0;
     i10 = i8 + -1 | 0;
     if (!i10) {
      i16 = 27;
      break;
     } else i17 = i10;
    } else if ((i16 | 0) == 25) {
     i16 = 0;
     i17 = i8 + 1 | 0;
    }
    i8 = i17;
    i6 = i15;
   }
   if ((i16 | 0) == 27) {
    i18 = i14 + -2 | 0;
    break;
   };
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   i6 = 0;
   while (1) {
    if ((i6 | 0) == 3) break L1;
    HEAP32[i1 + (i6 << 2) >> 2] = 0;
    i6 = i6 + 1 | 0;
   }
  } else i18 = i9; while (0);
  i9 = i18;
  while (1) {
   i6 = i9 + -1 | 0;
   if ((i6 | 0) == (i7 | 0)) {
    i19 = i7;
    break;
   }
   if ((HEAP8[i6 >> 0] | 0) == 58) {
    i19 = i9;
    break;
   } else i9 = i6;
  }
  HEAP32[i1 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i1, i19, i18);
 } while (0);
 return;
}

function _fmod(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, d43 = 0.0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, d52 = 0.0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i3 = HEAP32[tempDoublePtr >> 2] | 0;
 i4 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = d2;
 i5 = HEAP32[tempDoublePtr >> 2] | 0;
 i6 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i7 = _bitshift64Lshr(i3 | 0, i4 | 0, 52) | 0;
 getTempRet0() | 0;
 i8 = i7 & 2047;
 i7 = _bitshift64Lshr(i5 | 0, i6 | 0, 52) | 0;
 getTempRet0() | 0;
 i9 = i7 & 2047;
 i7 = i4 & -2147483648;
 i10 = _bitshift64Shl(i5 | 0, i6 | 0, 1) | 0;
 i11 = getTempRet0() | 0;
 L1 : do if (!((i10 | 0) == 0 & (i11 | 0) == 0) ? (i12 = ___DOUBLE_BITS_102(d2) | 0, i13 = (getTempRet0() | 0) & 2147483647, !((i8 | 0) == 2047 | (i13 >>> 0 > 2146435072 | (i13 | 0) == 2146435072 & i12 >>> 0 > 0))) : 0) {
  i12 = _bitshift64Shl(i3 | 0, i4 | 0, 1) | 0;
  i13 = getTempRet0() | 0;
  if (!(i13 >>> 0 > i11 >>> 0 | (i13 | 0) == (i11 | 0) & i12 >>> 0 > i10 >>> 0)) return +((i12 | 0) == (i10 | 0) & (i13 | 0) == (i11 | 0) ? d1 * 0.0 : d1);
  if (!i8) {
   i13 = _bitshift64Shl(i3 | 0, i4 | 0, 12) | 0;
   i12 = getTempRet0() | 0;
   if ((i12 | 0) > -1 | (i12 | 0) == -1 & i13 >>> 0 > 4294967295) {
    i14 = 0;
    i15 = i13;
    i13 = i12;
    while (1) {
     i12 = i14 + -1 | 0;
     i15 = _bitshift64Shl(i15 | 0, i13 | 0, 1) | 0;
     i13 = getTempRet0() | 0;
     if (!((i13 | 0) > -1 | (i13 | 0) == -1 & i15 >>> 0 > 4294967295)) {
      i16 = i12;
      break;
     } else i14 = i12;
    }
   } else i16 = 0;
   i14 = _bitshift64Shl(i3 | 0, i4 | 0, 1 - i16 | 0) | 0;
   i17 = i16;
   i18 = i14;
   i19 = getTempRet0() | 0;
  } else {
   i17 = i8;
   i18 = i3;
   i19 = i4 & 1048575 | 1048576;
  }
  if (!i9) {
   i14 = _bitshift64Shl(i5 | 0, i6 | 0, 12) | 0;
   i15 = getTempRet0() | 0;
   if ((i15 | 0) > -1 | (i15 | 0) == -1 & i14 >>> 0 > 4294967295) {
    i13 = 0;
    i12 = i14;
    i14 = i15;
    while (1) {
     i15 = i13 + -1 | 0;
     i12 = _bitshift64Shl(i12 | 0, i14 | 0, 1) | 0;
     i14 = getTempRet0() | 0;
     if (!((i14 | 0) > -1 | (i14 | 0) == -1 & i12 >>> 0 > 4294967295)) {
      i20 = i15;
      break;
     } else i13 = i15;
    }
   } else i20 = 0;
   i13 = _bitshift64Shl(i5 | 0, i6 | 0, 1 - i20 | 0) | 0;
   i21 = i20;
   i22 = i13;
   i23 = getTempRet0() | 0;
  } else {
   i21 = i9;
   i22 = i5;
   i23 = i6 & 1048575 | 1048576;
  }
  i13 = _i64Subtract(i18 | 0, i19 | 0, i22 | 0, i23 | 0) | 0;
  i12 = getTempRet0() | 0;
  i14 = (i12 | 0) > -1 | (i12 | 0) == -1 & i13 >>> 0 > 4294967295;
  L25 : do if ((i17 | 0) > (i21 | 0)) {
   i15 = i17;
   i24 = i12;
   i25 = i14;
   i26 = i18;
   i27 = i19;
   i28 = i13;
   while (1) {
    if (i25) if ((i28 | 0) == 0 & (i24 | 0) == 0) break; else {
     i29 = i28;
     i30 = i24;
    } else {
     i29 = i26;
     i30 = i27;
    }
    i31 = _bitshift64Shl(i29 | 0, i30 | 0, 1) | 0;
    i32 = getTempRet0() | 0;
    i33 = i15 + -1 | 0;
    i34 = _i64Subtract(i31 | 0, i32 | 0, i22 | 0, i23 | 0) | 0;
    i35 = getTempRet0() | 0;
    i36 = (i35 | 0) > -1 | (i35 | 0) == -1 & i34 >>> 0 > 4294967295;
    if ((i33 | 0) > (i21 | 0)) {
     i15 = i33;
     i24 = i35;
     i25 = i36;
     i26 = i31;
     i27 = i32;
     i28 = i34;
    } else {
     i37 = i33;
     i38 = i36;
     i39 = i34;
     i40 = i35;
     i41 = i31;
     i42 = i32;
     break L25;
    }
   }
   d43 = d1 * 0.0;
   break L1;
  } else {
   i37 = i17;
   i38 = i14;
   i39 = i13;
   i40 = i12;
   i41 = i18;
   i42 = i19;
  } while (0);
  if (i38) if ((i39 | 0) == 0 & (i40 | 0) == 0) {
   d43 = d1 * 0.0;
   break;
  } else {
   i44 = i40;
   i45 = i39;
  } else {
   i44 = i42;
   i45 = i41;
  }
  if (i44 >>> 0 < 1048576 | (i44 | 0) == 1048576 & i45 >>> 0 < 0) {
   i12 = i37;
   i13 = i45;
   i14 = i44;
   while (1) {
    i28 = _bitshift64Shl(i13 | 0, i14 | 0, 1) | 0;
    i27 = getTempRet0() | 0;
    i26 = i12 + -1 | 0;
    if (i27 >>> 0 < 1048576 | (i27 | 0) == 1048576 & i28 >>> 0 < 0) {
     i12 = i26;
     i13 = i28;
     i14 = i27;
    } else {
     i46 = i26;
     i47 = i28;
     i48 = i27;
     break;
    }
   }
  } else {
   i46 = i37;
   i47 = i45;
   i48 = i44;
  }
  if ((i46 | 0) > 0) {
   i14 = _i64Add(i47 | 0, i48 | 0, 0, -1048576) | 0;
   i13 = getTempRet0() | 0;
   i12 = _bitshift64Shl(i46 | 0, 0, 52) | 0;
   i49 = i13 | (getTempRet0() | 0);
   i50 = i14 | i12;
  } else {
   i12 = _bitshift64Lshr(i47 | 0, i48 | 0, 1 - i46 | 0) | 0;
   i49 = getTempRet0() | 0;
   i50 = i12;
  }
  HEAP32[tempDoublePtr >> 2] = i50;
  HEAP32[tempDoublePtr + 4 >> 2] = i49 | i7;
  d43 = +HEAPF64[tempDoublePtr >> 3];
 } else i51 = 3; while (0);
 if ((i51 | 0) == 3) {
  d52 = d1 * d2;
  d43 = d52 / d52;
 }
 return +d43;
}

function _get_cpara(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i4 = _arMatrixAlloc(8, 8) | 0;
 i5 = _arMatrixAlloc(8, 1) | 0;
 i6 = _arMatrixAlloc(8, 1) | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 i8 = HEAP32[i5 >> 2] | 0;
 HEAPF64[i7 >> 3] = +HEAPF64[i1 >> 3];
 i9 = i1 + 8 | 0;
 HEAPF64[i7 + 8 >> 3] = +HEAPF64[i9 >> 3];
 HEAPF64[i7 + 16 >> 3] = 1.0;
 i10 = i7 + 24 | 0;
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 HEAP32[i10 + 12 >> 2] = 0;
 HEAP32[i10 + 16 >> 2] = 0;
 HEAP32[i10 + 20 >> 2] = 0;
 HEAPF64[i7 + 48 >> 3] = -(+HEAPF64[i1 >> 3] * +HEAPF64[i2 >> 3]);
 HEAPF64[i7 + 56 >> 3] = -(+HEAPF64[i9 >> 3] * +HEAPF64[i2 >> 3]);
 i10 = i7 + 64 | 0;
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 HEAP32[i10 + 12 >> 2] = 0;
 HEAP32[i10 + 16 >> 2] = 0;
 HEAP32[i10 + 20 >> 2] = 0;
 HEAPF64[i7 + 88 >> 3] = +HEAPF64[i1 >> 3];
 HEAPF64[i7 + 96 >> 3] = +HEAPF64[i9 >> 3];
 HEAPF64[i7 + 104 >> 3] = 1.0;
 i10 = i2 + 8 | 0;
 HEAPF64[i7 + 112 >> 3] = -(+HEAPF64[i1 >> 3] * +HEAPF64[i10 >> 3]);
 HEAPF64[i7 + 120 >> 3] = -(+HEAPF64[i9 >> 3] * +HEAPF64[i10 >> 3]);
 HEAPF64[i8 >> 3] = +HEAPF64[i2 >> 3];
 HEAPF64[i8 + 8 >> 3] = +HEAPF64[i10 >> 3];
 i10 = i1 + 16 | 0;
 HEAPF64[i7 + 128 >> 3] = +HEAPF64[i10 >> 3];
 i9 = i1 + 24 | 0;
 HEAPF64[i7 + 136 >> 3] = +HEAPF64[i9 >> 3];
 HEAPF64[i7 + 144 >> 3] = 1.0;
 i11 = i7 + 152 | 0;
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 HEAP32[i11 + 12 >> 2] = 0;
 HEAP32[i11 + 16 >> 2] = 0;
 HEAP32[i11 + 20 >> 2] = 0;
 i11 = i2 + 16 | 0;
 HEAPF64[i7 + 176 >> 3] = -(+HEAPF64[i10 >> 3] * +HEAPF64[i11 >> 3]);
 HEAPF64[i7 + 184 >> 3] = -(+HEAPF64[i9 >> 3] * +HEAPF64[i11 >> 3]);
 i12 = i7 + 192 | 0;
 HEAP32[i12 >> 2] = 0;
 HEAP32[i12 + 4 >> 2] = 0;
 HEAP32[i12 + 8 >> 2] = 0;
 HEAP32[i12 + 12 >> 2] = 0;
 HEAP32[i12 + 16 >> 2] = 0;
 HEAP32[i12 + 20 >> 2] = 0;
 HEAPF64[i7 + 216 >> 3] = +HEAPF64[i10 >> 3];
 HEAPF64[i7 + 224 >> 3] = +HEAPF64[i9 >> 3];
 HEAPF64[i7 + 232 >> 3] = 1.0;
 i12 = i2 + 24 | 0;
 HEAPF64[i7 + 240 >> 3] = -(+HEAPF64[i10 >> 3] * +HEAPF64[i12 >> 3]);
 HEAPF64[i7 + 248 >> 3] = -(+HEAPF64[i9 >> 3] * +HEAPF64[i12 >> 3]);
 HEAPF64[i8 + 16 >> 3] = +HEAPF64[i11 >> 3];
 HEAPF64[i8 + 24 >> 3] = +HEAPF64[i12 >> 3];
 i12 = i1 + 32 | 0;
 HEAPF64[i7 + 256 >> 3] = +HEAPF64[i12 >> 3];
 i11 = i1 + 40 | 0;
 HEAPF64[i7 + 264 >> 3] = +HEAPF64[i11 >> 3];
 HEAPF64[i7 + 272 >> 3] = 1.0;
 i9 = i7 + 280 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 HEAP32[i9 + 12 >> 2] = 0;
 HEAP32[i9 + 16 >> 2] = 0;
 HEAP32[i9 + 20 >> 2] = 0;
 i9 = i2 + 32 | 0;
 HEAPF64[i7 + 304 >> 3] = -(+HEAPF64[i12 >> 3] * +HEAPF64[i9 >> 3]);
 HEAPF64[i7 + 312 >> 3] = -(+HEAPF64[i11 >> 3] * +HEAPF64[i9 >> 3]);
 i10 = i7 + 320 | 0;
 HEAP32[i10 >> 2] = 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 HEAP32[i10 + 12 >> 2] = 0;
 HEAP32[i10 + 16 >> 2] = 0;
 HEAP32[i10 + 20 >> 2] = 0;
 HEAPF64[i7 + 344 >> 3] = +HEAPF64[i12 >> 3];
 HEAPF64[i7 + 352 >> 3] = +HEAPF64[i11 >> 3];
 HEAPF64[i7 + 360 >> 3] = 1.0;
 i10 = i2 + 40 | 0;
 HEAPF64[i7 + 368 >> 3] = -(+HEAPF64[i12 >> 3] * +HEAPF64[i10 >> 3]);
 HEAPF64[i7 + 376 >> 3] = -(+HEAPF64[i11 >> 3] * +HEAPF64[i10 >> 3]);
 HEAPF64[i8 + 32 >> 3] = +HEAPF64[i9 >> 3];
 HEAPF64[i8 + 40 >> 3] = +HEAPF64[i10 >> 3];
 i10 = i1 + 48 | 0;
 HEAPF64[i7 + 384 >> 3] = +HEAPF64[i10 >> 3];
 i9 = i1 + 56 | 0;
 HEAPF64[i7 + 392 >> 3] = +HEAPF64[i9 >> 3];
 HEAPF64[i7 + 400 >> 3] = 1.0;
 i1 = i7 + 408 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 i1 = i2 + 48 | 0;
 HEAPF64[i7 + 432 >> 3] = -(+HEAPF64[i10 >> 3] * +HEAPF64[i1 >> 3]);
 HEAPF64[i7 + 440 >> 3] = -(+HEAPF64[i9 >> 3] * +HEAPF64[i1 >> 3]);
 i11 = i7 + 448 | 0;
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 HEAP32[i11 + 12 >> 2] = 0;
 HEAP32[i11 + 16 >> 2] = 0;
 HEAP32[i11 + 20 >> 2] = 0;
 HEAPF64[i7 + 472 >> 3] = +HEAPF64[i10 >> 3];
 HEAPF64[i7 + 480 >> 3] = +HEAPF64[i9 >> 3];
 HEAPF64[i7 + 488 >> 3] = 1.0;
 i11 = i2 + 56 | 0;
 HEAPF64[i7 + 496 >> 3] = -(+HEAPF64[i10 >> 3] * +HEAPF64[i11 >> 3]);
 HEAPF64[i7 + 504 >> 3] = -(+HEAPF64[i9 >> 3] * +HEAPF64[i11 >> 3]);
 HEAPF64[i8 + 48 >> 3] = +HEAPF64[i1 >> 3];
 HEAPF64[i8 + 56 >> 3] = +HEAPF64[i11 >> 3];
 _arMatrixSelfInv(i4) | 0;
 _arMatrixMul(i6, i4, i5) | 0;
 i11 = HEAP32[i6 >> 2] | 0;
 HEAPF64[i3 >> 3] = +HEAPF64[i11 >> 3];
 HEAPF64[i3 + 8 >> 3] = +HEAPF64[i11 + 8 >> 3];
 HEAPF64[i3 + 16 >> 3] = +HEAPF64[i11 + 16 >> 3];
 HEAPF64[i3 + 24 >> 3] = +HEAPF64[i11 + 24 >> 3];
 HEAPF64[i3 + 32 >> 3] = +HEAPF64[i11 + 32 >> 3];
 HEAPF64[i3 + 40 >> 3] = +HEAPF64[i11 + 40 >> 3];
 HEAPF64[i3 + 48 >> 3] = +HEAPF64[i11 + 48 >> 3];
 HEAPF64[i3 + 56 >> 3] = +HEAPF64[i11 + 56 >> 3];
 HEAPF64[i3 + 64 >> 3] = 1.0;
 _arMatrixFree(i4) | 0;
 _arMatrixFree(i5) | 0;
 _arMatrixFree(i6) | 0;
 return;
}

function _start_pass_phuff_decoder(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i2 = HEAP32[i1 + 444 >> 2] | 0;
 i3 = i1 + 400 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = (i4 | 0) == 0;
 i6 = i1 + 404 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 if (i5) i8 = (i7 | 0) != 0; else i8 = (i4 | 0) > (i7 | 0) | (i7 | 0) > 63 | (HEAP32[i1 + 328 >> 2] | 0) != 1;
 i7 = i1 + 408 | 0;
 i9 = HEAP32[i7 >> 2] | 0;
 if (!i9) {
  i10 = i1 + 412 | 0;
  i11 = i8;
  i12 = i10;
  i13 = HEAP32[i10 >> 2] | 0;
 } else {
  i10 = i1 + 412 | 0;
  i14 = HEAP32[i10 >> 2] | 0;
  i11 = i8 | (i14 | 0) != (i9 + -1 | 0);
  i12 = i10;
  i13 = i14;
 }
 if (!((i13 | 0) < 14 & (i11 ^ 1))) {
  i11 = HEAP32[i1 >> 2] | 0;
  HEAP32[i11 + 20 >> 2] = 16;
  HEAP32[i11 + 24 >> 2] = i4;
  HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = HEAP32[i6 >> 2];
  HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] = HEAP32[i7 >> 2];
  HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] = HEAP32[i12 >> 2];
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i4 = i1 + 328 | 0;
 i11 = HEAP32[i4 >> 2] | 0;
 L12 : do if ((i11 | 0) > 0) {
  i13 = i1 + 160 | 0;
  if (i5) {
   i14 = 0;
   i10 = i11;
   i9 = HEAP32[i6 >> 2] | 0;
   while (1) {
    i8 = HEAP32[(HEAP32[i1 + 332 + (i14 << 2) >> 2] | 0) + 4 >> 2] | 0;
    i15 = HEAP32[i13 >> 2] | 0;
    i16 = HEAP32[i3 >> 2] | 0;
    if ((i16 | 0) > (i9 | 0)) {
     i17 = i9;
     i18 = i10;
    } else {
     i19 = i16;
     while (1) {
      i16 = i15 + (i8 << 8) + (i19 << 2) | 0;
      i20 = HEAP32[i16 >> 2] | 0;
      if ((HEAP32[i7 >> 2] | 0) != (((i20 | 0) > 0 ? i20 : 0) | 0)) {
       i20 = HEAP32[i1 >> 2] | 0;
       HEAP32[i20 + 20 >> 2] = 115;
       HEAP32[i20 + 24 >> 2] = i8;
       HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i19;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, -1);
      }
      HEAP32[i16 >> 2] = HEAP32[i12 >> 2];
      i21 = HEAP32[i6 >> 2] | 0;
      if ((i19 | 0) < (i21 | 0)) i19 = i19 + 1 | 0; else break;
     }
     i17 = i21;
     i18 = HEAP32[i4 >> 2] | 0;
    }
    i14 = i14 + 1 | 0;
    if ((i14 | 0) >= (i18 | 0)) {
     i22 = i18;
     break L12;
    } else {
     i10 = i18;
     i9 = i17;
    }
   }
  }
  i9 = 0;
  do {
   i10 = HEAP32[(HEAP32[i1 + 332 + (i9 << 2) >> 2] | 0) + 4 >> 2] | 0;
   i14 = HEAP32[i13 >> 2] | 0;
   if ((HEAP32[i14 + (i10 << 8) >> 2] | 0) < 0) {
    i19 = HEAP32[i1 >> 2] | 0;
    HEAP32[i19 + 20 >> 2] = 115;
    HEAP32[i19 + 24 >> 2] = i10;
    HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = 0;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, -1);
   }
   i19 = HEAP32[i3 >> 2] | 0;
   if ((i19 | 0) <= (HEAP32[i6 >> 2] | 0)) {
    i8 = i19;
    while (1) {
     i19 = i14 + (i10 << 8) + (i8 << 2) | 0;
     i15 = HEAP32[i19 >> 2] | 0;
     if ((HEAP32[i7 >> 2] | 0) != (((i15 | 0) > 0 ? i15 : 0) | 0)) {
      i15 = HEAP32[i1 >> 2] | 0;
      HEAP32[i15 + 20 >> 2] = 115;
      HEAP32[i15 + 24 >> 2] = i10;
      HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i8;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, -1);
     }
     HEAP32[i19 >> 2] = HEAP32[i12 >> 2];
     if ((i8 | 0) < (HEAP32[i6 >> 2] | 0)) i8 = i8 + 1 | 0; else break;
    }
   }
   i9 = i9 + 1 | 0;
   i8 = HEAP32[i4 >> 2] | 0;
  } while ((i9 | 0) < (i8 | 0));
  i22 = i8;
 } else i22 = i11; while (0);
 i11 = HEAP32[i7 >> 2] | 0;
 HEAP32[i2 + 4 >> 2] = (i11 | 0) == 0 ? (i5 ? 25 : 24) : i5 ? 27 : 26;
 if ((i22 | 0) <= 0) {
  i23 = i2 + 8 | 0;
  i24 = i1 + 276 | 0;
  HEAP32[i23 >> 2] = 0;
  HEAP32[i23 + 4 >> 2] = 0;
  HEAP32[i23 + 8 >> 2] = 0;
  HEAP32[i23 + 12 >> 2] = 0;
  i25 = HEAP32[i24 >> 2] | 0;
  i26 = i2 + 40 | 0;
  HEAP32[i26 >> 2] = i25;
  return;
 }
 i22 = i2 + 60 | 0;
 if (!i5) {
  i5 = 0;
  do {
   i6 = HEAP32[(HEAP32[i1 + 332 + (i5 << 2) >> 2] | 0) + 24 >> 2] | 0;
   i12 = i2 + 44 + (i6 << 2) | 0;
   _jpeg_make_d_derived_tbl(i1, 0, i6, i12);
   HEAP32[i22 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i2 + 24 + (i5 << 2) >> 2] = 0;
   i5 = i5 + 1 | 0;
  } while ((i5 | 0) < (HEAP32[i4 >> 2] | 0));
  i23 = i2 + 8 | 0;
  i24 = i1 + 276 | 0;
  HEAP32[i23 >> 2] = 0;
  HEAP32[i23 + 4 >> 2] = 0;
  HEAP32[i23 + 8 >> 2] = 0;
  HEAP32[i23 + 12 >> 2] = 0;
  i25 = HEAP32[i24 >> 2] | 0;
  i26 = i2 + 40 | 0;
  HEAP32[i26 >> 2] = i25;
  return;
 }
 i5 = 0;
 i22 = i11;
 while (1) {
  if (!i22) {
   i11 = HEAP32[(HEAP32[i1 + 332 + (i5 << 2) >> 2] | 0) + 20 >> 2] | 0;
   _jpeg_make_d_derived_tbl(i1, 1, i11, i2 + 44 + (i11 << 2) | 0);
  }
  HEAP32[i2 + 24 + (i5 << 2) >> 2] = 0;
  i11 = i5 + 1 | 0;
  if ((i11 | 0) >= (HEAP32[i4 >> 2] | 0)) break;
  i5 = i11;
  i22 = HEAP32[i7 >> 2] | 0;
 }
 i23 = i2 + 8 | 0;
 i24 = i1 + 276 | 0;
 HEAP32[i23 >> 2] = 0;
 HEAP32[i23 + 4 >> 2] = 0;
 HEAP32[i23 + 8 >> 2] = 0;
 HEAP32[i23 + 12 >> 2] = 0;
 i25 = HEAP32[i24 >> 2] | 0;
 i26 = i2 + 40 | 0;
 HEAP32[i26 >> 2] = i25;
 return;
}

function _arVecTridiagonalize(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, d18 = 0.0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, i29 = 0, i30 = 0, i31 = 0, i32 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4 + 8 | 0;
 i6 = i4;
 i7 = HEAP32[i1 + 8 >> 2] | 0;
 if ((i7 | 0) != (HEAP32[i1 + 4 >> 2] | 0)) {
  i8 = -1;
  STACKTOP = i4;
  return i8 | 0;
 }
 if ((i7 | 0) != (HEAP32[i2 + 4 >> 2] | 0)) {
  i8 = -1;
  STACKTOP = i4;
  return i8 | 0;
 }
 if ((i7 | 0) != ((HEAP32[i3 + 4 >> 2] | 0) + 1 | 0)) {
  i8 = -1;
  STACKTOP = i4;
  return i8 | 0;
 }
 i9 = i7 + -2 | 0;
 if ((i7 | 0) > 2) {
  i10 = i5 + 4 | 0;
  i11 = i6 + 4 | 0;
  i12 = i7 + -1 | 0;
  i13 = 0;
  do {
   i14 = (HEAP32[i1 >> 2] | 0) + ((Math_imul(i13, i7) | 0) << 3) | 0;
   HEAPF64[(HEAP32[i2 >> 2] | 0) + (i13 << 3) >> 3] = +HEAPF64[i14 + (i13 << 3) >> 3];
   i15 = i7 - i13 + -1 | 0;
   HEAP32[i10 >> 2] = i15;
   i16 = i13;
   i13 = i13 + 1 | 0;
   i17 = i14 + (i13 << 3) | 0;
   HEAP32[i5 >> 2] = i17;
   d18 = +_arVecHousehold(i5);
   HEAPF64[(HEAP32[i3 >> 2] | 0) + (i16 << 3) >> 3] = d18;
   if (!(d18 == 0.0)) {
    i19 = HEAP32[i2 >> 2] | 0;
    if ((i13 | 0) < (i7 | 0)) {
     i20 = HEAP32[i1 >> 2] | 0;
     i21 = i13;
     do {
      if (i13 >>> 0 < i21 >>> 0) {
       i22 = HEAP32[i1 >> 2] | 0;
       i23 = i13;
       d18 = 0.0;
       while (1) {
        i24 = i22 + ((Math_imul(i23, i7) | 0) + i21 << 3) | 0;
        d25 = d18 + +HEAPF64[i24 >> 3] * +HEAPF64[i14 + (i23 << 3) >> 3];
        i23 = i23 + 1 | 0;
        if ((i23 | 0) == (i21 | 0)) {
         d26 = d25;
         break;
        } else d18 = d25;
       }
      } else d26 = 0.0;
      i23 = Math_imul(i21, i7) | 0;
      i22 = i21;
      d18 = d26;
      do {
       d18 = d18 + +HEAPF64[i20 + (i22 + i23 << 3) >> 3] * +HEAPF64[i14 + (i22 << 3) >> 3];
       i22 = i22 + 1 | 0;
      } while ((i22 | 0) != (i7 | 0));
      HEAPF64[i19 + (i21 << 3) >> 3] = d18;
      i21 = i21 + 1 | 0;
     } while ((i21 | 0) != (i7 | 0));
    }
    HEAP32[i11 >> 2] = i15;
    HEAP32[i10 >> 2] = i15;
    HEAP32[i5 >> 2] = i17;
    HEAP32[i6 >> 2] = i19 + (i13 << 3);
    d25 = +_arVecInnerproduct(i5, i6) * .5;
    if ((i12 | 0) > (i16 | 0)) {
     i21 = HEAP32[i2 >> 2] | 0;
     i20 = i12;
     do {
      d27 = +HEAPF64[i14 + (i20 << 3) >> 3];
      i22 = i21 + (i20 << 3) | 0;
      d28 = +HEAPF64[i22 >> 3] - d25 * d27;
      HEAPF64[i22 >> 3] = d28;
      if ((i20 | 0) < (i7 | 0) ? (i22 = HEAP32[i1 >> 2] | 0, i23 = Math_imul(i20, i7) | 0, i24 = i22 + (i20 + i23 << 3) | 0, HEAPF64[i24 >> 3] = +HEAPF64[i24 >> 3] - (d27 * d28 + d28 * +HEAPF64[i14 + (i20 << 3) >> 3]), i24 = i20 + 1 | 0, (i24 | 0) != (i7 | 0)) : 0) {
       i29 = i24;
       do {
        i24 = i22 + (i29 + i23 << 3) | 0;
        HEAPF64[i24 >> 3] = +HEAPF64[i24 >> 3] - (d27 * +HEAPF64[i21 + (i29 << 3) >> 3] + d28 * +HEAPF64[i14 + (i29 << 3) >> 3]);
        i29 = i29 + 1 | 0;
       } while ((i29 | 0) != (i7 | 0));
      }
      i20 = i20 + -1 | 0;
     } while ((i20 | 0) > (i16 | 0));
    }
   }
  } while ((i13 | 0) != (i9 | 0));
 }
 do if ((i7 | 0) <= 1) if ((i7 | 0) == 1) {
  i30 = 0;
  i31 = HEAP32[i1 >> 2] | 0;
  i32 = HEAP32[i2 >> 2] | 0;
  break;
 } else {
  i8 = 0;
  STACKTOP = i4;
  return i8 | 0;
 } else {
  i13 = HEAP32[i1 >> 2] | 0;
  i12 = Math_imul(i9, i7) | 0;
  i10 = HEAP32[i2 >> 2] | 0;
  HEAPF64[i10 + (i9 << 3) >> 3] = +HEAPF64[i13 + (i12 + i9 << 3) >> 3];
  i11 = i7 + -1 | 0;
  HEAPF64[(HEAP32[i3 >> 2] | 0) + (i9 << 3) >> 3] = +HEAPF64[i13 + (i11 + i12 << 3) >> 3];
  i30 = i11;
  i31 = i13;
  i32 = i10;
 } while (0);
 i3 = i31 + ((Math_imul(i30, i7) | 0) + i30 << 3) | 0;
 HEAPF64[i32 + (i30 << 3) >> 3] = +HEAPF64[i3 >> 3];
 i3 = i6 + 4 | 0;
 i30 = i5 + 4 | 0;
 i32 = i7 << 3;
 i31 = i7;
 do {
  i2 = i31;
  i31 = i31 + -1 | 0;
  i10 = HEAP32[i1 >> 2] | 0;
  i13 = i10 + ((Math_imul(i31, i7) | 0) << 3) | 0;
  if ((i2 | 0) <= (i9 | 0) & (i2 | 0) < (i7 | 0)) {
   i11 = i7 - i31 + -1 | 0;
   i12 = i13 + (i2 << 3) | 0;
   i16 = i2;
   i20 = i10;
   do {
    HEAP32[i3 >> 2] = i11;
    HEAP32[i30 >> 2] = i11;
    HEAP32[i5 >> 2] = i12;
    i10 = Math_imul(i16, i7) | 0;
    HEAP32[i6 >> 2] = i20 + (i10 + i2 << 3);
    d26 = +_arVecInnerproduct(i5, i6);
    i20 = HEAP32[i1 >> 2] | 0;
    i14 = i2;
    do {
     i21 = i20 + (i14 + i10 << 3) | 0;
     HEAPF64[i21 >> 3] = +HEAPF64[i21 >> 3] - d26 * +HEAPF64[i13 + (i14 << 3) >> 3];
     i14 = i14 + 1 | 0;
    } while ((i14 | 0) != (i7 | 0));
    i16 = i16 + 1 | 0;
   } while ((i16 | 0) != (i7 | 0));
  }
  _memset(i13 | 0, 0, i32 | 0) | 0;
  HEAPF64[i13 + (i31 << 3) >> 3] = 1.0;
 } while ((i2 | 0) > 1);
 i8 = 0;
 STACKTOP = i4;
 return i8 | 0;
}

function _jpeg_calc_output_dimensions(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i2 = HEAP32[i1 + 20 >> 2] | 0;
 if ((i2 | 0) != 202) {
  i3 = HEAP32[i1 >> 2] | 0;
  HEAP32[i3 + 20 >> 2] = 20;
  HEAP32[i3 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i2 = HEAP32[i1 + 48 >> 2] | 0;
 i3 = HEAP32[i1 + 52 >> 2] | 0;
 do if (i2 << 3 >>> 0 > i3 >>> 0) {
  if (i2 << 2 >>> 0 <= i3 >>> 0) {
   i4 = _jdiv_round_up(HEAP32[i1 + 28 >> 2] | 0, 4) | 0;
   HEAP32[i1 + 112 >> 2] = i4;
   i5 = 2;
   i6 = _jdiv_round_up(HEAP32[i1 + 32 >> 2] | 0, 4) | 0;
   break;
  }
  i4 = HEAP32[i1 + 28 >> 2] | 0;
  if (i2 << 1 >>> 0 > i3 >>> 0) {
   HEAP32[i1 + 112 >> 2] = i4;
   i5 = 8;
   i6 = HEAP32[i1 + 32 >> 2] | 0;
   break;
  } else {
   i7 = _jdiv_round_up(i4, 2) | 0;
   HEAP32[i1 + 112 >> 2] = i7;
   i5 = 4;
   i6 = _jdiv_round_up(HEAP32[i1 + 32 >> 2] | 0, 2) | 0;
   break;
  }
 } else {
  i7 = _jdiv_round_up(HEAP32[i1 + 28 >> 2] | 0, 8) | 0;
  HEAP32[i1 + 112 >> 2] = i7;
  i5 = 1;
  i6 = _jdiv_round_up(HEAP32[i1 + 32 >> 2] | 0, 8) | 0;
 } while (0);
 HEAP32[i1 + 116 >> 2] = i6;
 HEAP32[i1 + 316 >> 2] = i5;
 i6 = i1 + 216 | 0;
 i3 = HEAP32[i6 >> 2] | 0;
 i2 = i1 + 36 | 0;
 i7 = HEAP32[i2 >> 2] | 0;
 i4 = (i7 | 0) > 0;
 if (i4) {
  i8 = i1 + 312 | 0;
  if (i5 >>> 0 < 8) {
   i9 = Math_imul(HEAP32[i1 + 308 >> 2] | 0, i5) | 0;
   i10 = i3;
   i11 = 0;
   while (1) {
    i12 = i10 + 12 | 0;
    i13 = HEAP32[i10 + 8 >> 2] | 0;
    i14 = i5;
    while (1) {
     i15 = i14 << 1;
     if ((Math_imul(i15, i13) | 0) > (i9 | 0)) {
      i16 = i14;
      break;
     }
     i17 = Math_imul(i15, HEAP32[i12 >> 2] | 0) | 0;
     if ((i17 | 0) > (Math_imul(HEAP32[i8 >> 2] | 0, i5) | 0)) {
      i16 = i14;
      break;
     }
     if ((i14 | 0) < 4) i14 = i15; else {
      i16 = i15;
      break;
     }
    }
    HEAP32[i10 + 36 >> 2] = i16;
    i11 = i11 + 1 | 0;
    if ((i11 | 0) >= (i7 | 0)) break; else i10 = i10 + 84 | 0;
   }
  } else {
   i10 = i3;
   i11 = 0;
   while (1) {
    HEAP32[i10 + 36 >> 2] = i5;
    i11 = i11 + 1 | 0;
    if ((i11 | 0) >= (i7 | 0)) break; else i10 = i10 + 84 | 0;
   }
  }
  if (i4) {
   i4 = i1 + 28 | 0;
   i10 = i1 + 308 | 0;
   i11 = i1 + 32 | 0;
   i5 = i1 + 312 | 0;
   i16 = 0;
   i8 = i3;
   while (1) {
    i3 = i8 + 36 | 0;
    i9 = Math_imul(Math_imul(HEAP32[i8 + 8 >> 2] | 0, HEAP32[i4 >> 2] | 0) | 0, HEAP32[i3 >> 2] | 0) | 0;
    i14 = _jdiv_round_up(i9, HEAP32[i10 >> 2] << 3) | 0;
    HEAP32[i8 + 40 >> 2] = i14;
    i14 = Math_imul(Math_imul(HEAP32[i8 + 12 >> 2] | 0, HEAP32[i11 >> 2] | 0) | 0, HEAP32[i3 >> 2] | 0) | 0;
    i3 = _jdiv_round_up(i14, HEAP32[i5 >> 2] << 3) | 0;
    HEAP32[i8 + 44 >> 2] = i3;
    i16 = i16 + 1 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i16 | 0) >= (i3 | 0)) {
     i18 = i3;
     break;
    } else i8 = i8 + 84 | 0;
   }
  } else i18 = i7;
 } else i18 = i7;
 i7 = HEAP32[i1 + 44 >> 2] | 0;
 switch (i7 | 0) {
 case 1:
  {
   i19 = i7;
   break;
  }
 case 3:
 case 2:
  {
   i19 = 3;
   break;
  }
 case 5:
 case 4:
  {
   i19 = 4;
   break;
  }
 default:
  i19 = i18;
 }
 HEAP32[i1 + 120 >> 2] = i19;
 HEAP32[i1 + 124 >> 2] = (HEAP32[i1 + 84 >> 2] | 0) == 0 ? i19 : 1;
 if (HEAP32[i1 + 76 >> 2] | 0) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 if (HEAP32[i1 + 300 >> 2] | 0) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 if (!((i7 | 0) == 2 & ((i18 | 0) == 3 ? (HEAP32[i1 + 40 >> 2] | 0) == 3 : 0) & (i19 | 0) == 3)) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 i19 = HEAP32[i6 >> 2] | 0;
 if ((HEAP32[i19 + 8 >> 2] | 0) != 2) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 if ((HEAP32[i19 + 92 >> 2] | 0) != 1) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 if ((HEAP32[i19 + 176 >> 2] | 0) != 1) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 if ((HEAP32[i19 + 12 >> 2] | 0) > 2) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 if ((HEAP32[i19 + 96 >> 2] | 0) != 1) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 if ((HEAP32[i19 + 180 >> 2] | 0) != 1) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 i6 = HEAP32[i19 + 36 >> 2] | 0;
 if ((i6 | 0) != (HEAP32[i1 + 316 >> 2] | 0)) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 if ((HEAP32[i19 + 120 >> 2] | 0) != (i6 | 0)) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 if ((HEAP32[i19 + 204 >> 2] | 0) != (i6 | 0)) {
  i20 = 1;
  i21 = i1 + 128 | 0;
  HEAP32[i21 >> 2] = i20;
  return;
 }
 i20 = HEAP32[i1 + 312 >> 2] | 0;
 i21 = i1 + 128 | 0;
 HEAP32[i21 >> 2] = i20;
 return;
}

function _consume_markers(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i2 = i1 + 436 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i4 = i3 + 20 | 0;
 if (HEAP32[i4 >> 2] | 0) {
  i5 = 2;
  return i5 | 0;
 }
 i6 = i1 + 440 | 0;
 i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] & 127](i1) | 0;
 switch (i7 | 0) {
 case 1:
  {
   i8 = i3 + 24 | 0;
   if (!(HEAP32[i8 >> 2] | 0)) {
    if (!(HEAP32[i3 + 16 >> 2] | 0)) {
     i9 = HEAP32[i1 >> 2] | 0;
     HEAP32[i9 + 20 >> 2] = 35;
     FUNCTION_TABLE_vi[HEAP32[i9 >> 2] & 255](i1);
    }
    _start_input_pass_27(i1);
    i5 = 1;
    return i5 | 0;
   }
   i9 = i1 + 32 | 0;
   if (!((HEAP32[i9 >> 2] | 0) <= 65500 ? (HEAP32[i1 + 28 >> 2] | 0) <= 65500 : 0)) {
    i10 = HEAP32[i1 >> 2] | 0;
    HEAP32[i10 + 20 >> 2] = 41;
    HEAP32[i10 + 24 >> 2] = 65500;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   }
   i10 = HEAP32[i1 + 212 >> 2] | 0;
   if ((i10 | 0) != 8) {
    i11 = HEAP32[i1 >> 2] | 0;
    HEAP32[i11 + 20 >> 2] = 15;
    HEAP32[i11 + 24 >> 2] = i10;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   }
   i10 = i1 + 36 | 0;
   i11 = HEAP32[i10 >> 2] | 0;
   if ((i11 | 0) > 10) {
    i12 = HEAP32[i1 >> 2] | 0;
    HEAP32[i12 + 20 >> 2] = 26;
    HEAP32[i12 + 24 >> 2] = i11;
    HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
    i13 = HEAP32[i10 >> 2] | 0;
   } else i13 = i11;
   i11 = i1 + 308 | 0;
   HEAP32[i11 >> 2] = 1;
   i12 = i1 + 312 | 0;
   HEAP32[i12 >> 2] = 1;
   i14 = i1 + 216 | 0;
   if ((i13 | 0) > 0) {
    i15 = 0;
    i16 = HEAP32[i14 >> 2] | 0;
    i17 = i13;
    i13 = 1;
    i18 = 1;
    while (1) {
     i19 = i16 + 8 | 0;
     i20 = HEAP32[i19 >> 2] | 0;
     i21 = i16 + 12 | 0;
     if ((i20 + -1 | 0) >>> 0 <= 3 ? (i22 = HEAP32[i21 >> 2] | 0, (i22 + -1 | 0) >>> 0 <= 3) : 0) {
      i23 = i18;
      i24 = i20;
      i25 = i13;
      i26 = i22;
      i27 = i17;
     } else {
      i22 = HEAP32[i1 >> 2] | 0;
      HEAP32[i22 + 20 >> 2] = 18;
      FUNCTION_TABLE_vi[HEAP32[i22 >> 2] & 255](i1);
      i23 = HEAP32[i11 >> 2] | 0;
      i24 = HEAP32[i19 >> 2] | 0;
      i25 = HEAP32[i12 >> 2] | 0;
      i26 = HEAP32[i21 >> 2] | 0;
      i27 = HEAP32[i10 >> 2] | 0;
     }
     i18 = (i23 | 0) > (i24 | 0) ? i23 : i24;
     HEAP32[i11 >> 2] = i18;
     i13 = (i25 | 0) > (i26 | 0) ? i25 : i26;
     HEAP32[i12 >> 2] = i13;
     i15 = i15 + 1 | 0;
     if ((i15 | 0) >= (i27 | 0)) break; else {
      i16 = i16 + 84 | 0;
      i17 = i27;
     }
    }
    HEAP32[i1 + 316 >> 2] = 8;
    if ((i27 | 0) > 0) {
     i27 = i1 + 28 | 0;
     i17 = 0;
     i16 = HEAP32[i14 >> 2] | 0;
     i14 = i18;
     while (1) {
      HEAP32[i16 + 36 >> 2] = 8;
      i18 = i16 + 8 | 0;
      i15 = _jdiv_round_up(Math_imul(HEAP32[i18 >> 2] | 0, HEAP32[i27 >> 2] | 0) | 0, i14 << 3) | 0;
      HEAP32[i16 + 28 >> 2] = i15;
      i15 = i16 + 12 | 0;
      i26 = Math_imul(HEAP32[i15 >> 2] | 0, HEAP32[i9 >> 2] | 0) | 0;
      i25 = _jdiv_round_up(i26, HEAP32[i12 >> 2] << 3) | 0;
      HEAP32[i16 + 32 >> 2] = i25;
      i25 = Math_imul(HEAP32[i18 >> 2] | 0, HEAP32[i27 >> 2] | 0) | 0;
      i18 = _jdiv_round_up(i25, HEAP32[i11 >> 2] | 0) | 0;
      HEAP32[i16 + 40 >> 2] = i18;
      i18 = Math_imul(HEAP32[i15 >> 2] | 0, HEAP32[i9 >> 2] | 0) | 0;
      i15 = _jdiv_round_up(i18, HEAP32[i12 >> 2] | 0) | 0;
      HEAP32[i16 + 44 >> 2] = i15;
      HEAP32[i16 + 48 >> 2] = 1;
      HEAP32[i16 + 76 >> 2] = 0;
      i15 = i17 + 1 | 0;
      if ((i15 | 0) >= (HEAP32[i10 >> 2] | 0)) break;
      i17 = i15;
      i16 = i16 + 84 | 0;
      i14 = HEAP32[i11 >> 2] | 0;
     }
     i28 = HEAP32[i12 >> 2] | 0;
    } else i28 = i13;
   } else {
    HEAP32[i1 + 316 >> 2] = 8;
    i28 = 1;
   }
   i13 = _jdiv_round_up(HEAP32[i9 >> 2] | 0, i28 << 3) | 0;
   HEAP32[i1 + 320 >> 2] = i13;
   if ((HEAP32[i1 + 328 >> 2] | 0) < (HEAP32[i10 >> 2] | 0)) i29 = 1; else i29 = (HEAP32[i1 + 220 >> 2] | 0) != 0 & 1;
   HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] = i29;
   HEAP32[i8 >> 2] = 0;
   i5 = 1;
   return i5 | 0;
  }
 case 2:
  {
   HEAP32[i4 >> 2] = 1;
   if (!(HEAP32[i3 + 24 >> 2] | 0)) {
    i3 = i1 + 152 | 0;
    i4 = HEAP32[i1 + 144 >> 2] | 0;
    if ((HEAP32[i3 >> 2] | 0) <= (i4 | 0)) {
     i5 = 2;
     return i5 | 0;
    }
    HEAP32[i3 >> 2] = i4;
    i5 = 2;
    return i5 | 0;
   } else {
    if (!(HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] | 0)) {
     i5 = 2;
     return i5 | 0;
    }
    i6 = HEAP32[i1 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 59;
    FUNCTION_TABLE_vi[HEAP32[i6 >> 2] & 255](i1);
    i5 = 2;
    return i5 | 0;
   }
   break;
  }
 default:
  {
   i5 = i7;
   return i5 | 0;
  }
 }
 return 0;
}

function _jpeg_idct_ifast(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i7 = i6;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i1 = i7;
 i9 = HEAP32[i2 + 80 >> 2] | 0;
 i2 = i3;
 i3 = 8;
 while (1) {
  i10 = HEAP16[i2 + 16 >> 1] | 0;
  i11 = HEAP16[i2 + 32 >> 1] | 0;
  if (!((i10 | i11) << 16 >> 16)) if (((((HEAP16[i2 + 48 >> 1] | 0) == 0 ? (HEAP16[i2 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 112 >> 1] | 0) == 0 : 0) {
   i12 = Math_imul(HEAP32[i9 >> 2] | 0, HEAP16[i2 >> 1] | 0) | 0;
   HEAP32[i1 >> 2] = i12;
   HEAP32[i1 + 32 >> 2] = i12;
   HEAP32[i1 + 64 >> 2] = i12;
   HEAP32[i1 + 96 >> 2] = i12;
   HEAP32[i1 + 128 >> 2] = i12;
   HEAP32[i1 + 160 >> 2] = i12;
   HEAP32[i1 + 192 >> 2] = i12;
   i13 = i12;
   i14 = 56;
  } else {
   i15 = 0;
   i16 = 9;
  } else {
   i15 = i11;
   i16 = 9;
  }
  if ((i16 | 0) == 9) {
   i16 = 0;
   i11 = Math_imul(HEAP32[i9 >> 2] | 0, HEAP16[i2 >> 1] | 0) | 0;
   i12 = Math_imul(HEAP32[i9 + 64 >> 2] | 0, i15 << 16 >> 16) | 0;
   i17 = Math_imul(HEAP32[i9 + 128 >> 2] | 0, HEAP16[i2 + 64 >> 1] | 0) | 0;
   i18 = Math_imul(HEAP32[i9 + 192 >> 2] | 0, HEAP16[i2 + 96 >> 1] | 0) | 0;
   i19 = i17 + i11 | 0;
   i20 = i11 - i17 | 0;
   i17 = i18 + i12 | 0;
   i11 = ((i12 - i18 | 0) * 362 >> 8) - i17 | 0;
   i18 = i17 + i19 | 0;
   i12 = i19 - i17 | 0;
   i17 = i11 + i20 | 0;
   i19 = i20 - i11 | 0;
   i11 = Math_imul(HEAP32[i9 + 32 >> 2] | 0, i10 << 16 >> 16) | 0;
   i10 = Math_imul(HEAP32[i9 + 96 >> 2] | 0, HEAP16[i2 + 48 >> 1] | 0) | 0;
   i20 = Math_imul(HEAP32[i9 + 160 >> 2] | 0, HEAP16[i2 + 80 >> 1] | 0) | 0;
   i21 = Math_imul(HEAP32[i9 + 224 >> 2] | 0, HEAP16[i2 + 112 >> 1] | 0) | 0;
   i22 = i20 + i10 | 0;
   i23 = i20 - i10 | 0;
   i10 = i21 + i11 | 0;
   i20 = i11 - i21 | 0;
   i21 = i10 + i22 | 0;
   i11 = (i20 + i23 | 0) * 473 >> 8;
   i24 = ((Math_imul(i23, -669) | 0) >> 8) - i21 + i11 | 0;
   i23 = ((i10 - i22 | 0) * 362 >> 8) - i24 | 0;
   i22 = i23 + ((i20 * 277 >> 8) - i11) | 0;
   HEAP32[i1 >> 2] = i21 + i18;
   HEAP32[i1 + 224 >> 2] = i18 - i21;
   HEAP32[i1 + 32 >> 2] = i24 + i17;
   HEAP32[i1 + 192 >> 2] = i17 - i24;
   HEAP32[i1 + 64 >> 2] = i23 + i19;
   HEAP32[i1 + 160 >> 2] = i19 - i23;
   HEAP32[i1 + 128 >> 2] = i22 + i12;
   i13 = i12 - i22 | 0;
   i14 = 24;
  }
  HEAP32[i1 + (i14 << 2) >> 2] = i13;
  if (i3 >>> 0 > 1) {
   i1 = i1 + 4 | 0;
   i9 = i9 + 4 | 0;
   i2 = i2 + 2 | 0;
   i3 = i3 + -1 | 0;
  } else break;
 }
 i3 = i8 + 128 | 0;
 i8 = 0;
 i2 = i7;
 while (1) {
  i7 = (HEAP32[i4 + (i8 << 2) >> 2] | 0) + i5 | 0;
  i9 = HEAP32[i2 + 4 >> 2] | 0;
  i1 = HEAP32[i2 + 8 >> 2] | 0;
  if (!(i9 | i1)) if (((((HEAP32[i2 + 12 >> 2] | 0) == 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 20 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 24 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 28 >> 2] | 0) == 0 : 0) {
   i13 = HEAP8[i3 + ((HEAP32[i2 >> 2] | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i7 >> 0] = i13;
   _memset(i7 + 1 | 0, i13 | 0, 7) | 0;
  } else {
   i25 = 0;
   i16 = 19;
  } else {
   i25 = i1;
   i16 = 19;
  }
  if ((i16 | 0) == 19) {
   i16 = 0;
   i1 = HEAP32[i2 >> 2] | 0;
   i13 = HEAP32[i2 + 16 >> 2] | 0;
   i14 = i13 + i1 | 0;
   i15 = i1 - i13 | 0;
   i13 = HEAP32[i2 + 24 >> 2] | 0;
   i1 = i13 + i25 | 0;
   i22 = ((i25 - i13 | 0) * 362 >> 8) - i1 | 0;
   i13 = i1 + i14 | 0;
   i12 = i14 - i1 | 0;
   i1 = i22 + i15 | 0;
   i14 = i15 - i22 | 0;
   i22 = HEAP32[i2 + 20 >> 2] | 0;
   i15 = HEAP32[i2 + 12 >> 2] | 0;
   i23 = i15 + i22 | 0;
   i19 = i22 - i15 | 0;
   i15 = HEAP32[i2 + 28 >> 2] | 0;
   i22 = i15 + i9 | 0;
   i24 = i9 - i15 | 0;
   i15 = i22 + i23 | 0;
   i9 = (i24 + i19 | 0) * 473 >> 8;
   i17 = ((Math_imul(i19, -669) | 0) >> 8) - i15 + i9 | 0;
   i19 = ((i22 - i23 | 0) * 362 >> 8) - i17 | 0;
   i23 = i19 + ((i24 * 277 >> 8) - i9) | 0;
   HEAP8[i7 >> 0] = HEAP8[i3 + ((i15 + i13 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i7 + 7 >> 0] = HEAP8[i3 + ((i13 - i15 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i7 + 1 >> 0] = HEAP8[i3 + ((i17 + i1 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i7 + 6 >> 0] = HEAP8[i3 + ((i1 - i17 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i7 + 2 >> 0] = HEAP8[i3 + ((i19 + i14 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i7 + 5 >> 0] = HEAP8[i3 + ((i14 - i19 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i7 + 4 >> 0] = HEAP8[i3 + ((i23 + i12 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[i7 + 3 >> 0] = HEAP8[i3 + ((i12 - i23 | 0) >>> 5 & 1023) >> 0] | 0;
  }
  i8 = i8 + 1 | 0;
  if ((i8 | 0) == 8) break; else i2 = i2 + 32 | 0;
 }
 STACKTOP = i6;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector13pruneFeaturesEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2 + 12 | 0;
 i4 = i2;
 i5 = i1 + 60 | 0;
 i6 = i1 + 64 | 0;
 i7 = i1 + 84 | 0;
 i8 = HEAP32[i7 >> 2] | 0;
 if ((((HEAP32[i6 >> 2] | 0) - (HEAP32[i5 >> 2] | 0) | 0) / 36 | 0) >>> 0 <= i8 >>> 0) {
  STACKTOP = i2;
  return;
 }
 i9 = i1 + 16 | 0;
 i10 = HEAP32[i9 >> 2] | 0;
 i11 = ((HEAP32[i1 + 20 >> 2] | 0) - i10 | 0) / 12 | 0;
 if ((i11 | 0) != (HEAP32[i1 + 8 >> 2] | 0)) {
  i12 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21911, 54) | 0, 20576, 130) | 0, 33554, 6) | 0, 454) | 0, 33561, 2) | 0, 21966, 25) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58484) | 0;
  i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i12, i14) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i12) | 0;
  _abort();
 }
 i12 = ((HEAP32[i10 + 4 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) | 0) / 12 | 0;
 if ((i12 | 0) != (HEAP32[i1 + 12 >> 2] | 0)) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21992, 57) | 0, 20576, 130) | 0, 33554, 6) | 0, 455) | 0, 33561, 2) | 0, 21966, 25) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i14 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] & 63](i14, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
 HEAP32[i4 >> 2] = 0;
 i10 = i4 + 4 | 0;
 HEAP32[i10 >> 2] = 0;
 i13 = i4 + 8 | 0;
 HEAP32[i13 >> 2] = 0;
 __ZN6vision16PruneDoGFeaturesERNSt3__26vectorINS1_INS1_INS0_4pairIfmEENS0_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEEERNS1_INS_25DoGScaleInvariantDetector12FeaturePointENS4_ISD_EEEERKSF_iiiii(i9, i4, i5, i11, i12, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, i8);
 i8 = HEAP32[i5 >> 2] | 0;
 i12 = HEAP32[i4 >> 2] | 0;
 HEAP32[i5 >> 2] = i12;
 HEAP32[i4 >> 2] = i8;
 i4 = HEAP32[i6 >> 2] | 0;
 i5 = HEAP32[i10 >> 2] | 0;
 HEAP32[i6 >> 2] = i5;
 HEAP32[i10 >> 2] = i4;
 i4 = i1 + 68 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i13 >> 2];
 HEAP32[i13 >> 2] = i1;
 if (((i5 - i12 | 0) / 36 | 0) >>> 0 > (HEAP32[i7 >> 2] | 0) >>> 0) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22050, 68) | 0, 20576, 130) | 0, 33554, 6) | 0, 469) | 0, 33561, 2) | 0, 22119, 23) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58484) | 0;
  i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i5) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 if (i8 | 0) {
  HEAP32[i10 >> 2] = i8;
  __ZdlPv(i8);
 }
 STACKTOP = i2;
 return;
}

function _access_virt_barray(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0;
 i6 = i4 + i3 | 0;
 i7 = i2 + 4 | 0;
 if (!((i6 >>> 0 <= (HEAP32[i7 >> 2] | 0) >>> 0 ? (HEAP32[i2 + 12 >> 2] | 0) >>> 0 >= i4 >>> 0 : 0) ? (HEAP32[i2 >> 2] | 0) != 0 : 0)) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 22;
  FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i1);
 }
 i4 = i2 + 24 | 0;
 i8 = HEAP32[i4 >> 2] | 0;
 if (!(i8 >>> 0 <= i3 >>> 0 ? i6 >>> 0 <= ((HEAP32[i2 + 16 >> 2] | 0) + i8 | 0) >>> 0 : 0)) i9 = 7;
 L9 : do if ((i9 | 0) == 7) {
  if (!(HEAP32[i2 + 40 >> 2] | 0)) {
   i8 = HEAP32[i1 >> 2] | 0;
   HEAP32[i8 + 20 >> 2] = 69;
   FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i1);
  }
  i8 = i2 + 36 | 0;
  if (HEAP32[i8 >> 2] | 0) {
   i10 = HEAP32[i2 + 8 >> 2] << 7;
   i11 = HEAP32[i4 >> 2] | 0;
   i12 = i2 + 20 | 0;
   i13 = i2 + 16 | 0;
   i14 = HEAP32[i13 >> 2] | 0;
   L16 : do if ((i14 | 0) > 0 ? (i15 = i2 + 28 | 0, i16 = i2 + 48 | 0, i17 = i2 + 52 | 0, i18 = HEAP32[i12 >> 2] | 0, i19 = (i18 | 0) < (i14 | 0) ? i18 : i14, i18 = (HEAP32[i15 >> 2] | 0) - i11 | 0, i20 = (i19 | 0) < (i18 | 0) ? i19 : i18, i18 = (HEAP32[i7 >> 2] | 0) - i11 | 0, i19 = (i20 | 0) < (i18 | 0) ? i20 : i18, (i19 | 0) >= 1) : 0) {
    i18 = Math_imul(i11, i10) | 0;
    i20 = 0;
    i21 = i19;
    while (1) {
     i19 = Math_imul(i21, i10) | 0;
     FUNCTION_TABLE_viiiii[HEAP32[i17 >> 2] & 31](i1, i16, HEAP32[(HEAP32[i2 >> 2] | 0) + (i20 << 2) >> 2] | 0, i18, i19);
     i22 = HEAP32[i12 >> 2] | 0;
     i20 = i22 + i20 | 0;
     i23 = HEAP32[i13 >> 2] | 0;
     if ((i23 | 0) <= (i20 | 0)) break L16;
     i24 = i23 - i20 | 0;
     i23 = (i22 | 0) < (i24 | 0) ? i22 : i24;
     i24 = i20 + (HEAP32[i4 >> 2] | 0) | 0;
     i22 = (HEAP32[i15 >> 2] | 0) - i24 | 0;
     i25 = (i23 | 0) < (i22 | 0) ? i23 : i22;
     i22 = (HEAP32[i7 >> 2] | 0) - i24 | 0;
     i21 = (i25 | 0) < (i22 | 0) ? i25 : i22;
     if ((i21 | 0) < 1) break; else i18 = i19 + i18 | 0;
    }
   } while (0);
   HEAP32[i8 >> 2] = 0;
  }
  i13 = i2 + 16 | 0;
  i12 = HEAP32[i13 >> 2] | 0;
  if ((HEAP32[i4 >> 2] | 0) >>> 0 < i3 >>> 0) i26 = i3; else {
   i10 = i6 - i12 | 0;
   i26 = (i10 | 0) > 0 ? i10 : 0;
  }
  HEAP32[i4 >> 2] = i26;
  i10 = HEAP32[i2 + 8 >> 2] << 7;
  i11 = i2 + 20 | 0;
  if ((i12 | 0) > 0 ? (i14 = i2 + 28 | 0, i18 = i2 + 48 | 0, i21 = HEAP32[i11 >> 2] | 0, i15 = (i21 | 0) < (i12 | 0) ? i21 : i12, i12 = (HEAP32[i14 >> 2] | 0) - i26 | 0, i21 = (i15 | 0) < (i12 | 0) ? i15 : i12, i12 = (HEAP32[i7 >> 2] | 0) - i26 | 0, i15 = (i21 | 0) < (i12 | 0) ? i21 : i12, (i15 | 0) >= 1) : 0) {
   i12 = Math_imul(i10, i26) | 0;
   i21 = 0;
   i20 = i15;
   while (1) {
    i15 = Math_imul(i20, i10) | 0;
    FUNCTION_TABLE_viiiii[HEAP32[i18 >> 2] & 31](i1, i18, HEAP32[(HEAP32[i2 >> 2] | 0) + (i21 << 2) >> 2] | 0, i12, i15);
    i16 = HEAP32[i11 >> 2] | 0;
    i21 = i16 + i21 | 0;
    i17 = HEAP32[i13 >> 2] | 0;
    if ((i17 | 0) <= (i21 | 0)) break L9;
    i19 = i17 - i21 | 0;
    i17 = (i16 | 0) < (i19 | 0) ? i16 : i19;
    i19 = i21 + (HEAP32[i4 >> 2] | 0) | 0;
    i16 = (HEAP32[i14 >> 2] | 0) - i19 | 0;
    i22 = (i17 | 0) < (i16 | 0) ? i17 : i16;
    i16 = (HEAP32[i7 >> 2] | 0) - i19 | 0;
    i20 = (i22 | 0) < (i16 | 0) ? i22 : i16;
    if ((i20 | 0) < 1) break; else i12 = i15 + i12 | 0;
   }
  }
 } while (0);
 i7 = i2 + 28 | 0;
 i26 = HEAP32[i7 >> 2] | 0;
 do if (i26 >>> 0 < i6 >>> 0) {
  i12 = (i5 | 0) == 0;
  if (i26 >>> 0 < i3 >>> 0) if (i12) {
   i27 = i3;
   i28 = 0;
  } else {
   i20 = HEAP32[i1 >> 2] | 0;
   HEAP32[i20 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[i20 >> 2] & 255](i1);
   i29 = i3;
   i9 = 28;
  } else if (i12) {
   i27 = i26;
   i28 = 0;
  } else {
   i29 = i26;
   i9 = 28;
  }
  if ((i9 | 0) == 28) {
   HEAP32[i7 >> 2] = i6;
   i27 = i29;
   i28 = 1;
  }
  if (!(HEAP32[i2 + 32 >> 2] | 0)) {
   if (i28) break;
   i12 = HEAP32[i1 >> 2] | 0;
   HEAP32[i12 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[i12 >> 2] & 255](i1);
   break;
  }
  i12 = HEAP32[i2 + 8 >> 2] << 7;
  i20 = HEAP32[i4 >> 2] | 0;
  i14 = i27 - i20 | 0;
  i21 = i6 - i20 | 0;
  if (i14 >>> 0 < i21 >>> 0) {
   i20 = i14;
   do {
    _jzero_far(HEAP32[(HEAP32[i2 >> 2] | 0) + (i20 << 2) >> 2] | 0, i12);
    i20 = i20 + 1 | 0;
   } while ((i20 | 0) != (i21 | 0));
  }
 } while (0);
 if (!i5) {
  i30 = HEAP32[i2 >> 2] | 0;
  i31 = HEAP32[i4 >> 2] | 0;
  i32 = i3 - i31 | 0;
  i33 = i30 + (i32 << 2) | 0;
  return i33 | 0;
 }
 HEAP32[i2 + 36 >> 2] = 1;
 i30 = HEAP32[i2 >> 2] | 0;
 i31 = HEAP32[i4 >> 2] | 0;
 i32 = i3 - i31 | 0;
 i33 = i30 + (i32 << 2) | 0;
 return i33 | 0;
}

function _access_virt_sarray(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0;
 i6 = i4 + i3 | 0;
 i7 = i2 + 4 | 0;
 if (!((i6 >>> 0 <= (HEAP32[i7 >> 2] | 0) >>> 0 ? (HEAP32[i2 + 12 >> 2] | 0) >>> 0 >= i4 >>> 0 : 0) ? (HEAP32[i2 >> 2] | 0) != 0 : 0)) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 22;
  FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i1);
 }
 i4 = i2 + 24 | 0;
 i8 = HEAP32[i4 >> 2] | 0;
 if (!(i8 >>> 0 <= i3 >>> 0 ? i6 >>> 0 <= ((HEAP32[i2 + 16 >> 2] | 0) + i8 | 0) >>> 0 : 0)) i9 = 7;
 L9 : do if ((i9 | 0) == 7) {
  if (!(HEAP32[i2 + 40 >> 2] | 0)) {
   i8 = HEAP32[i1 >> 2] | 0;
   HEAP32[i8 + 20 >> 2] = 69;
   FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i1);
  }
  i8 = i2 + 36 | 0;
  if (HEAP32[i8 >> 2] | 0) {
   i10 = HEAP32[i2 + 8 >> 2] | 0;
   i11 = HEAP32[i4 >> 2] | 0;
   i12 = i2 + 20 | 0;
   i13 = i2 + 16 | 0;
   i14 = HEAP32[i13 >> 2] | 0;
   L16 : do if ((i14 | 0) > 0 ? (i15 = i2 + 28 | 0, i16 = i2 + 48 | 0, i17 = i2 + 52 | 0, i18 = HEAP32[i12 >> 2] | 0, i19 = (i18 | 0) < (i14 | 0) ? i18 : i14, i18 = (HEAP32[i15 >> 2] | 0) - i11 | 0, i20 = (i19 | 0) < (i18 | 0) ? i19 : i18, i18 = (HEAP32[i7 >> 2] | 0) - i11 | 0, i19 = (i20 | 0) < (i18 | 0) ? i20 : i18, (i19 | 0) >= 1) : 0) {
    i18 = Math_imul(i11, i10) | 0;
    i20 = 0;
    i21 = i19;
    while (1) {
     i19 = Math_imul(i21, i10) | 0;
     FUNCTION_TABLE_viiiii[HEAP32[i17 >> 2] & 31](i1, i16, HEAP32[(HEAP32[i2 >> 2] | 0) + (i20 << 2) >> 2] | 0, i18, i19);
     i22 = HEAP32[i12 >> 2] | 0;
     i20 = i22 + i20 | 0;
     i23 = HEAP32[i13 >> 2] | 0;
     if ((i23 | 0) <= (i20 | 0)) break L16;
     i24 = i23 - i20 | 0;
     i23 = (i22 | 0) < (i24 | 0) ? i22 : i24;
     i24 = i20 + (HEAP32[i4 >> 2] | 0) | 0;
     i22 = (HEAP32[i15 >> 2] | 0) - i24 | 0;
     i25 = (i23 | 0) < (i22 | 0) ? i23 : i22;
     i22 = (HEAP32[i7 >> 2] | 0) - i24 | 0;
     i21 = (i25 | 0) < (i22 | 0) ? i25 : i22;
     if ((i21 | 0) < 1) break; else i18 = i19 + i18 | 0;
    }
   } while (0);
   HEAP32[i8 >> 2] = 0;
  }
  i13 = i2 + 16 | 0;
  i12 = HEAP32[i13 >> 2] | 0;
  if ((HEAP32[i4 >> 2] | 0) >>> 0 < i3 >>> 0) i26 = i3; else {
   i10 = i6 - i12 | 0;
   i26 = (i10 | 0) > 0 ? i10 : 0;
  }
  HEAP32[i4 >> 2] = i26;
  i10 = HEAP32[i2 + 8 >> 2] | 0;
  i11 = i2 + 20 | 0;
  if ((i12 | 0) > 0 ? (i14 = i2 + 28 | 0, i18 = i2 + 48 | 0, i21 = HEAP32[i11 >> 2] | 0, i15 = (i21 | 0) < (i12 | 0) ? i21 : i12, i12 = (HEAP32[i14 >> 2] | 0) - i26 | 0, i21 = (i15 | 0) < (i12 | 0) ? i15 : i12, i12 = (HEAP32[i7 >> 2] | 0) - i26 | 0, i15 = (i21 | 0) < (i12 | 0) ? i21 : i12, (i15 | 0) >= 1) : 0) {
   i12 = Math_imul(i10, i26) | 0;
   i21 = 0;
   i20 = i15;
   while (1) {
    i15 = Math_imul(i20, i10) | 0;
    FUNCTION_TABLE_viiiii[HEAP32[i18 >> 2] & 31](i1, i18, HEAP32[(HEAP32[i2 >> 2] | 0) + (i21 << 2) >> 2] | 0, i12, i15);
    i16 = HEAP32[i11 >> 2] | 0;
    i21 = i16 + i21 | 0;
    i17 = HEAP32[i13 >> 2] | 0;
    if ((i17 | 0) <= (i21 | 0)) break L9;
    i19 = i17 - i21 | 0;
    i17 = (i16 | 0) < (i19 | 0) ? i16 : i19;
    i19 = i21 + (HEAP32[i4 >> 2] | 0) | 0;
    i16 = (HEAP32[i14 >> 2] | 0) - i19 | 0;
    i22 = (i17 | 0) < (i16 | 0) ? i17 : i16;
    i16 = (HEAP32[i7 >> 2] | 0) - i19 | 0;
    i20 = (i22 | 0) < (i16 | 0) ? i22 : i16;
    if ((i20 | 0) < 1) break; else i12 = i15 + i12 | 0;
   }
  }
 } while (0);
 i7 = i2 + 28 | 0;
 i26 = HEAP32[i7 >> 2] | 0;
 do if (i26 >>> 0 < i6 >>> 0) {
  i12 = (i5 | 0) == 0;
  if (i26 >>> 0 < i3 >>> 0) if (i12) {
   i27 = i3;
   i28 = 0;
  } else {
   i20 = HEAP32[i1 >> 2] | 0;
   HEAP32[i20 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[i20 >> 2] & 255](i1);
   i29 = i3;
   i9 = 28;
  } else if (i12) {
   i27 = i26;
   i28 = 0;
  } else {
   i29 = i26;
   i9 = 28;
  }
  if ((i9 | 0) == 28) {
   HEAP32[i7 >> 2] = i6;
   i27 = i29;
   i28 = 1;
  }
  if (!(HEAP32[i2 + 32 >> 2] | 0)) {
   if (i28) break;
   i12 = HEAP32[i1 >> 2] | 0;
   HEAP32[i12 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[i12 >> 2] & 255](i1);
   break;
  }
  i12 = HEAP32[i2 + 8 >> 2] | 0;
  i20 = HEAP32[i4 >> 2] | 0;
  i14 = i27 - i20 | 0;
  i21 = i6 - i20 | 0;
  if (i14 >>> 0 < i21 >>> 0) {
   i20 = i14;
   do {
    _jzero_far(HEAP32[(HEAP32[i2 >> 2] | 0) + (i20 << 2) >> 2] | 0, i12);
    i20 = i20 + 1 | 0;
   } while ((i20 | 0) != (i21 | 0));
  }
 } while (0);
 if (!i5) {
  i30 = HEAP32[i2 >> 2] | 0;
  i31 = HEAP32[i4 >> 2] | 0;
  i32 = i3 - i31 | 0;
  i33 = i30 + (i32 << 2) | 0;
  return i33 | 0;
 }
 HEAP32[i2 + 36 >> 2] = 1;
 i30 = HEAP32[i2 >> 2] | 0;
 i31 = HEAP32[i4 >> 2] | 0;
 i32 = i3 - i31 | 0;
 i33 = i30 + (i32 << 2) | 0;
 return i33 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4 + 8 | 0;
 i6 = i4;
 L1 : do if ((i2 - i1 | 0) > 1) {
  i7 = (HEAP8[i1 >> 0] | 0) == 76 ? i1 + 1 | 0 : i1;
  switch (HEAP8[i7 >> 0] | 0) {
  case 78:
   {
    i8 = __ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0;
    i9 = (i8 | 0) == (i7 | 0) ? i1 : i8;
    break L1;
    break;
   }
  case 90:
   {
    i8 = __ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0;
    i9 = (i8 | 0) == (i7 | 0) ? i1 : i8;
    break L1;
    break;
   }
  default:
   {
    i8 = __ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0;
    if ((i8 | 0) == (i7 | 0)) {
     i10 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0;
     if ((i10 | 0) == (i7 | 0) | (i10 | 0) == (i2 | 0)) {
      i9 = i1;
      break L1;
     }
     if ((HEAP8[i10 >> 0] | 0) != 73) {
      i9 = i1;
      break L1;
     }
     i7 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i10, i2, i3) | 0;
     if ((i7 | 0) == (i10 | 0)) {
      i9 = i1;
      break L1;
     }
     i10 = i3 + 4 | 0;
     i11 = HEAP32[i10 >> 2] | 0;
     if (((i11 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i9 = i1;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i11 + -24 | 0);
     i11 = HEAP32[i10 >> 2] | 0;
     i12 = 0;
     while (1) {
      if ((i12 | 0) == -1) break;
      i13 = i12 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11 + (i13 * 24 | 0) | 0);
      i12 = i13;
     }
     HEAP32[i10 >> 2] = i11 + -24;
     i12 = HEAP8[i5 + 11 >> 0] | 0;
     i13 = i12 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i11 + -48 | 0, i13 ? HEAP32[i5 >> 2] | 0 : i5, i13 ? HEAP32[i5 + 4 >> 2] | 0 : i12 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i9 = i7;
     break L1;
    }
    if ((i8 | 0) == (i2 | 0)) {
     i9 = i2;
     break L1;
    }
    if ((HEAP8[i8 >> 0] | 0) != 73) {
     i9 = i8;
     break L1;
    }
    i12 = i3 + 4 | 0;
    i13 = HEAP32[i12 >> 2] | 0;
    if ((HEAP32[i3 >> 2] | 0) == (i13 | 0)) {
     i9 = i1;
     break L1;
    }
    HEAP32[i6 >> 2] = HEAP32[i3 + 12 >> 2];
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i5, i13 + -24 | 0, i6);
    i13 = i3 + 20 | 0;
    i14 = HEAP32[i13 >> 2] | 0;
    if (i14 >>> 0 < (HEAP32[i3 + 24 >> 2] | 0) >>> 0) {
     HEAP32[i14 >> 2] = 0;
     i15 = i14 + 4 | 0;
     HEAP32[i15 >> 2] = 0;
     i16 = i14 + 8 | 0;
     HEAP32[i16 >> 2] = 0;
     HEAP32[i14 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
     HEAP32[i14 >> 2] = HEAP32[i5 >> 2];
     i14 = i5 + 4 | 0;
     HEAP32[i15 >> 2] = HEAP32[i14 >> 2];
     i15 = i5 + 8 | 0;
     HEAP32[i16 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i15 >> 2] = 0;
     HEAP32[i14 >> 2] = 0;
     HEAP32[i5 >> 2] = 0;
     HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i3 + 16 | 0, i5);
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
    i13 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i8, i2, i3) | 0;
    if ((i13 | 0) == (i8 | 0)) {
     i9 = i1;
     break L1;
    }
    i14 = HEAP32[i12 >> 2] | 0;
    if (((i14 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i9 = i1;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i14 + -24 | 0);
    i14 = HEAP32[i12 >> 2] | 0;
    i15 = 0;
    while (1) {
     if ((i15 | 0) == -1) break;
     i16 = i15 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14 + (i16 * 24 | 0) | 0);
     i15 = i16;
    }
    HEAP32[i12 >> 2] = i14 + -24;
    i15 = HEAP8[i5 + 11 >> 0] | 0;
    i8 = i15 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i14 + -48 | 0, i8 ? HEAP32[i5 >> 2] | 0 : i5, i8 ? HEAP32[i5 + 4 >> 2] | 0 : i15 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i9 = i13;
    break L1;
   }
  }
 } else i9 = i1; while (0);
 STACKTOP = i4;
 return i9 | 0;
}

function _decompress_onepass(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0;
 i3 = i1 + 428 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = (HEAP32[i1 + 348 >> 2] | 0) + -1 | 0;
 i6 = i1 + 320 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = i7 + -1 | 0;
 i9 = i4 + 24 | 0;
 i10 = HEAP32[i9 >> 2] | 0;
 i11 = i4 + 28 | 0;
 i12 = HEAP32[i11 >> 2] | 0;
 do if ((i10 | 0) < (i12 | 0)) {
  i13 = i4 + 20 | 0;
  i14 = i4 + 32 | 0;
  i15 = i1 + 356 | 0;
  i16 = i1 + 444 | 0;
  i17 = i1 + 328 | 0;
  i18 = i1 + 448 | 0;
  i19 = i1 + 148 | 0;
  i20 = i10;
  i21 = i12;
  i22 = HEAP32[i13 >> 2] | 0;
  L3 : while (1) {
   if (i22 >>> 0 > i5 >>> 0) i23 = i21; else {
    i24 = i22;
    while (1) {
     _jzero_far(HEAP32[i14 >> 2] | 0, HEAP32[i15 >> 2] << 7);
     if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 4 >> 2] & 63](i1, i14) | 0)) break L3;
     i25 = HEAP32[i17 >> 2] | 0;
     if ((i25 | 0) > 0) {
      i26 = i24 >>> 0 < i5 >>> 0;
      i27 = 0;
      i28 = 0;
      i29 = i25;
      while (1) {
       i25 = HEAP32[i1 + 332 + (i28 << 2) >> 2] | 0;
       L14 : do if (HEAP32[i25 + 48 >> 2] | 0) {
        i30 = HEAP32[i25 + 4 >> 2] | 0;
        i31 = HEAP32[(HEAP32[i18 >> 2] | 0) + 4 + (i30 << 2) >> 2] | 0;
        i32 = i25 + 52 | 0;
        i33 = HEAP32[(i26 ? i32 : i25 + 68 | 0) >> 2] | 0;
        i34 = i25 + 36 | 0;
        i35 = HEAP32[i34 >> 2] | 0;
        i36 = Math_imul(HEAP32[i25 + 64 >> 2] | 0, i24) | 0;
        i37 = i25 + 56 | 0;
        i38 = HEAP32[i37 >> 2] | 0;
        if ((i38 | 0) > 0) {
         i39 = i25 + 72 | 0;
         if ((i33 | 0) <= 0) {
          i40 = HEAP32[i32 >> 2] | 0;
          i41 = 0;
          i42 = i27;
          while (1) {
           i43 = i40 + i42 | 0;
           i41 = i41 + 1 | 0;
           if ((i41 | 0) >= (i38 | 0)) {
            i44 = i43;
            i45 = i29;
            break L14;
           } else i42 = i43;
          }
         }
         i42 = (HEAP32[i2 + (i30 << 2) >> 2] | 0) + ((Math_imul(i35, i20) | 0) << 2) | 0;
         i41 = 0;
         i40 = i27;
         i43 = i38;
         i46 = i35;
         while (1) {
          if ((HEAP32[i19 >> 2] | 0) >>> 0 >= i8 >>> 0 ? (i41 + i20 | 0) >= (HEAP32[i39 >> 2] | 0) : 0) {
           i47 = i46;
           i48 = i43;
          } else {
           i49 = i36;
           i50 = 0;
           while (1) {
            FUNCTION_TABLE_viiiii[i31 & 31](i1, i25, HEAP32[i4 + 32 + (i50 + i40 << 2) >> 2] | 0, i42, i49);
            i51 = HEAP32[i34 >> 2] | 0;
            i50 = i50 + 1 | 0;
            if ((i50 | 0) == (i33 | 0)) break; else i49 = i51 + i49 | 0;
           }
           i47 = i51;
           i48 = HEAP32[i37 >> 2] | 0;
          }
          i40 = (HEAP32[i32 >> 2] | 0) + i40 | 0;
          i41 = i41 + 1 | 0;
          if ((i41 | 0) >= (i48 | 0)) break; else {
           i42 = i42 + (i47 << 2) | 0;
           i43 = i48;
           i46 = i47;
          }
         }
         i44 = i40;
         i45 = HEAP32[i17 >> 2] | 0;
        } else {
         i44 = i27;
         i45 = i29;
        }
       } else {
        i44 = (HEAP32[i25 + 60 >> 2] | 0) + i27 | 0;
        i45 = i29;
       } while (0);
       i28 = i28 + 1 | 0;
       if ((i28 | 0) >= (i45 | 0)) break; else {
        i27 = i44;
        i29 = i45;
       }
      }
     }
     i29 = i24 + 1 | 0;
     if (i29 >>> 0 > i5 >>> 0) break; else i24 = i29;
    }
    i23 = HEAP32[i11 >> 2] | 0;
   }
   HEAP32[i13 >> 2] = 0;
   i29 = i20 + 1 | 0;
   if ((i29 | 0) < (i23 | 0)) {
    i20 = i29;
    i21 = i23;
    i22 = 0;
   } else {
    i52 = 28;
    break;
   }
  }
  if ((i52 | 0) == 28) {
   i53 = i19;
   i54 = HEAP32[i6 >> 2] | 0;
   break;
  }
  HEAP32[i9 >> 2] = i20;
  HEAP32[i13 >> 2] = i24;
  i55 = 0;
  return i55 | 0;
 } else {
  i53 = i1 + 148 | 0;
  i54 = i7;
 } while (0);
 i7 = i1 + 156 | 0;
 HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
 i7 = (HEAP32[i53 >> 2] | 0) + 1 | 0;
 HEAP32[i53 >> 2] = i7;
 if (i7 >>> 0 >= i54 >>> 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 + 436 >> 2] | 0) + 12 >> 2] & 255](i1);
  i55 = 4;
  return i55 | 0;
 }
 i53 = HEAP32[i3 >> 2] | 0;
 if ((HEAP32[i1 + 328 >> 2] | 0) > 1) i56 = 1; else {
  i3 = HEAP32[i1 + 332 >> 2] | 0;
  i56 = HEAP32[(i7 >>> 0 < (i54 + -1 | 0) >>> 0 ? i3 + 12 | 0 : i3 + 72 | 0) >> 2] | 0;
 }
 HEAP32[i53 + 28 >> 2] = i56;
 HEAP32[i53 + 20 >> 2] = 0;
 HEAP32[i53 + 24 >> 2] = 0;
 i55 = 3;
 return i55 | 0;
}

function _arMatrixSelfInv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 2e3 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2e3);
 i3 = i2;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i5 | 0) > 500) {
  i6 = 0;
  i7 = (i6 | 0) == 0;
  i8 = i7 << 31 >> 31;
  STACKTOP = i2;
  return i8 | 0;
 }
 switch (i5 | 0) {
 case 1:
  {
   HEAPF64[i4 >> 3] = 1.0 / +HEAPF64[i4 >> 3];
   i6 = i4;
   i7 = (i6 | 0) == 0;
   i8 = i7 << 31 >> 31;
   STACKTOP = i2;
   return i8 | 0;
  }
 case 0:
  {
   i6 = 0;
   i7 = (i6 | 0) == 0;
   i8 = i7 << 31 >> 31;
   STACKTOP = i2;
   return i8 | 0;
  }
 default:
  {
   if ((i5 | 0) <= 0) {
    i6 = i4;
    i7 = (i6 | 0) == 0;
    i8 = i7 << 31 >> 31;
    STACKTOP = i2;
    return i8 | 0;
   }
   i1 = 0;
   do {
    HEAP32[i3 + (i1 << 2) >> 2] = i1;
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != (i5 | 0));
   i1 = i4 + (((i5 | 0) > 2 ? i5 : 2) + -1 << 3) | 0;
   L12 : do if ((i5 | 0) == 1) {
    d9 = +HEAPF64[i4 >> 3];
    i10 = d9 == d9 & 0.0 == 0.0 & d9 != 0.0;
    i11 = i10 ^ 1;
    i12 = i11 << 31 >> 31;
    d13 = +Math_abs(+d9);
    if ((i10 ? d13 : 0.0) <= 1.0e-10 | i11) {
     i6 = 0;
     i7 = (i6 | 0) == 0;
     i8 = i7 << 31 >> 31;
     STACKTOP = i2;
     return i8 | 0;
    } else {
     i11 = i3 + (i12 << 2) | 0;
     i10 = HEAP32[i11 >> 2] | 0;
     HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
     HEAP32[i3 >> 2] = i10;
     i10 = i4 + (i12 << 3) | 0;
     d13 = +HEAPF64[i10 >> 3];
     HEAPF64[i10 >> 3] = +HEAPF64[i4 >> 3];
     HEAPF64[i4 >> 3] = 1.0 / d13;
     break;
    }
   } else {
    i10 = 0;
    i12 = i1;
    while (1) {
     i11 = i4 + ((Math_imul(i10, i5) | 0) << 3) | 0;
     d13 = 0.0;
     i14 = i11;
     i15 = -1;
     i16 = i10;
     while (1) {
      d9 = +Math_abs(+(+HEAPF64[i14 >> 3]));
      i17 = d13 < d9;
      i15 = i17 ? i16 : i15;
      d13 = i17 ? d9 : d13;
      i16 = i16 + 1 | 0;
      if ((i16 | 0) == (i5 | 0)) break; else i14 = i14 + (i5 << 3) | 0;
     }
     if ((i15 | 0) == -1 | d13 <= 1.0e-10) {
      i6 = 0;
      break;
     }
     i14 = i3 + (i15 << 2) | 0;
     i16 = HEAP32[i14 >> 2] | 0;
     i17 = i3 + (i10 << 2) | 0;
     HEAP32[i14 >> 2] = HEAP32[i17 >> 2];
     HEAP32[i17 >> 2] = i16;
     i16 = 0;
     i17 = i11;
     i14 = i4 + ((Math_imul(i15, i5) | 0) << 3) | 0;
     while (1) {
      d9 = +HEAPF64[i14 >> 3];
      HEAPF64[i14 >> 3] = +HEAPF64[i17 >> 3];
      HEAPF64[i17 >> 3] = d9;
      i16 = i16 + 1 | 0;
      if ((i16 | 0) == (i5 | 0)) break; else {
       i17 = i17 + 8 | 0;
       i14 = i14 + 8 | 0;
      }
     }
     d13 = +HEAPF64[i11 >> 3];
     i14 = 1;
     i17 = i11;
     do {
      i16 = i17;
      i17 = i17 + 8 | 0;
      HEAPF64[i16 >> 3] = +HEAPF64[i17 >> 3] / d13;
      i14 = i14 + 1 | 0;
     } while ((i14 | 0) < (i5 | 0));
     HEAPF64[i17 >> 3] = 1.0 / d13;
     i14 = 0;
     i16 = i1;
     while (1) {
      if ((i14 | 0) != (i10 | 0)) {
       i15 = i4 + ((Math_imul(i14, i5) | 0) << 3) | 0;
       d9 = +HEAPF64[i15 >> 3];
       i18 = i11;
       i19 = 1;
       i20 = i15;
       while (1) {
        i15 = i20;
        i20 = i20 + 8 | 0;
        HEAPF64[i15 >> 3] = +HEAPF64[i20 >> 3] - d9 * +HEAPF64[i18 >> 3];
        i19 = i19 + 1 | 0;
        if ((i19 | 0) >= (i5 | 0)) break; else i18 = i18 + 8 | 0;
       }
       HEAPF64[i16 >> 3] = -(d9 * +HEAPF64[i12 >> 3]);
      }
      i14 = i14 + 1 | 0;
      if ((i14 | 0) == (i5 | 0)) break; else i16 = i16 + (i5 << 3) | 0;
     }
     i10 = i10 + 1 | 0;
     if ((i10 | 0) >= (i5 | 0)) break L12; else i12 = i12 + (i5 << 3) | 0;
    }
    i7 = (i6 | 0) == 0;
    i8 = i7 << 31 >> 31;
    STACKTOP = i2;
    return i8 | 0;
   } while (0);
   i1 = 0;
   do {
    i12 = i1;
    while (1) {
     i10 = i3 + (i12 << 2) | 0;
     if ((HEAP32[i10 >> 2] | 0) == (i1 | 0)) {
      i21 = i12;
      i22 = i10;
      break;
     }
     i12 = i12 + 1 | 0;
     if ((i12 | 0) >= (i5 | 0)) {
      i23 = 28;
      break;
     }
    }
    if ((i23 | 0) == 28) {
     i23 = 0;
     i21 = i12;
     i22 = i3 + (i12 << 2) | 0;
    }
    HEAP32[i22 >> 2] = HEAP32[i3 + (i1 << 2) >> 2];
    i10 = 0;
    i16 = i4 + (i1 << 3) | 0;
    i14 = i4 + (i21 << 3) | 0;
    while (1) {
     d13 = +HEAPF64[i14 >> 3];
     HEAPF64[i14 >> 3] = +HEAPF64[i16 >> 3];
     HEAPF64[i16 >> 3] = d13;
     i10 = i10 + 1 | 0;
     if ((i10 | 0) == (i5 | 0)) break; else {
      i16 = i16 + (i5 << 3) | 0;
      i14 = i14 + (i5 << 3) | 0;
     }
    }
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != (i5 | 0));
   i6 = i4;
   i7 = (i6 | 0) == 0;
   i8 = i7 << 31 >> 31;
   STACKTOP = i2;
   return i8 | 0;
  }
 }
 return 0;
}

function __ZN6vision39HomographyPointsGeometricallyConsistentIfEEbPKT_S3_i(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0, d13 = 0.0, i14 = 0, d15 = 0.0, i16 = 0, d17 = 0.0, i18 = 0, d19 = 0.0, d20 = 0.0, d21 = 0.0, i22 = 0, d23 = 0.0, i24 = 0, d25 = 0.0, d26 = 0.0, i27 = 0, d28 = 0.0, i29 = 0, d30 = 0.0, i31 = 0, d32 = 0.0, d33 = 0.0, i34 = 0, d35 = 0.0, d36 = 0.0, d37 = 0.0, d38 = 0.0, d39 = 0.0, d40 = 0.0, d41 = 0.0, d42 = 0.0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, d50 = 0.0, d51 = 0.0, d52 = 0.0, d53 = 0.0, i54 = 0, i55 = 0, i56 = 0, d57 = 0.0, i58 = 0, d59 = 0.0, d60 = 0.0, d61 = 0.0, d62 = 0.0, d63 = 0.0, d64 = 0.0, i65 = 0, i66 = 0, i67 = 0, d68 = 0.0, d69 = 0.0, i70 = 0, d71 = 0.0, d72 = 0.0, d73 = 0.0, d74 = 0.0, d75 = 0.0, d76 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4 + 16 | 0;
 i6 = i4 + 8 | 0;
 i7 = i4;
 if ((i3 | 0) < 2) {
  i8 = 1;
  STACKTOP = i4;
  return i8 | 0;
 }
 i9 = i2 + 8 | 0;
 i10 = i2 + 16 | 0;
 i11 = i1 + 24 | 0;
 d12 = +HEAPF32[i11 >> 2];
 d13 = +HEAPF32[i2 >> 2];
 i14 = i1 + 28 | 0;
 d15 = +HEAPF32[i14 >> 2];
 i16 = i2 + 4 | 0;
 d17 = +HEAPF32[i16 >> 2];
 i18 = i1 + 32 | 0;
 d19 = +HEAPF32[i18 >> 2];
 d20 = d19 + (d12 * d13 + d15 * d17);
 d21 = +HEAPF32[i1 >> 2];
 i22 = i1 + 4 | 0;
 d23 = +HEAPF32[i22 >> 2];
 i24 = i1 + 8 | 0;
 d25 = +HEAPF32[i24 >> 2];
 d26 = (d25 + (d13 * d21 + d17 * d23)) / d20;
 HEAPF32[i5 >> 2] = d26;
 i27 = i1 + 12 | 0;
 d28 = +HEAPF32[i27 >> 2];
 i29 = i1 + 16 | 0;
 d30 = +HEAPF32[i29 >> 2];
 i31 = i1 + 20 | 0;
 d32 = +HEAPF32[i31 >> 2];
 d33 = (d32 + (d13 * d28 + d17 * d30)) / d20;
 HEAPF32[i5 + 4 >> 2] = d33;
 d20 = +HEAPF32[i9 >> 2];
 i34 = i2 + 12 | 0;
 d35 = +HEAPF32[i34 >> 2];
 d36 = d19 + (d12 * d20 + d15 * d35);
 d37 = (d25 + (d21 * d20 + d23 * d35)) / d36;
 HEAPF32[i6 >> 2] = d37;
 d38 = (d32 + (d28 * d20 + d30 * d35)) / d36;
 HEAPF32[i6 + 4 >> 2] = d38;
 d36 = +HEAPF32[i10 >> 2];
 d39 = +HEAPF32[i2 + 20 >> 2];
 d40 = d19 + (d12 * d36 + d15 * d39);
 d41 = (d25 + (d21 * d36 + d23 * d39)) / d40;
 HEAPF32[i7 >> 2] = d41;
 d42 = (d32 + (d28 * d36 + d30 * d39)) / d40;
 HEAPF32[i7 + 4 >> 2] = d42;
 if ((d20 - d13) * (d39 - d17) - (d35 - d17) * (d36 - d13) > 0.0 ^ (d37 - d26) * (d42 - d33) - (d38 - d33) * (d41 - d26) > 0.0) {
  i8 = 0;
  STACKTOP = i4;
  return i8 | 0;
 }
 do if ((i3 | 0) > 3) {
  i43 = 3;
  i44 = i7;
  i45 = i6;
  i46 = i5;
  i47 = i10;
  i48 = i9;
  i49 = i2;
  d35 = d12;
  d39 = d15;
  d40 = d19;
  d30 = d21;
  d28 = d23;
  d32 = d25;
  d50 = d37;
  d51 = d41;
  d52 = d38;
  d53 = d42;
  while (1) {
   i54 = i49 + 8 | 0;
   i55 = i48 + 8 | 0;
   i56 = i47 + 8 | 0;
   d57 = +HEAPF32[i56 >> 2];
   i58 = i47 + 12 | 0;
   d59 = +HEAPF32[i58 >> 2];
   d60 = d40 + (d35 * d57 + d39 * d59);
   d61 = (d32 + (d57 * d30 + d59 * d28)) / d60;
   HEAPF32[i46 >> 2] = d61;
   d62 = (+HEAPF32[i31 >> 2] + (+HEAPF32[i27 >> 2] * +HEAPF32[i56 >> 2] + +HEAPF32[i29 >> 2] * +HEAPF32[i58 >> 2])) / d60;
   HEAPF32[i46 + 4 >> 2] = d62;
   d63 = +HEAPF32[i55 >> 2];
   d60 = +HEAPF32[i54 >> 2];
   d59 = +HEAPF32[i49 + 12 >> 2];
   d64 = +HEAPF32[i56 >> 2];
   i65 = i43 + 1 | 0;
   if ((d63 - d60) * (+HEAPF32[i58 >> 2] - d59) - (+HEAPF32[i48 + 12 >> 2] - d59) * (d64 - d60) > 0.0 ^ (d51 - d50) * (d62 - d52) - (d61 - d50) * (d53 - d52) > 0.0) {
    i8 = 0;
    i66 = 11;
    break;
   }
   if ((i65 | 0) >= (i3 | 0)) {
    i66 = 8;
    break;
   }
   d60 = d53;
   i58 = i46;
   i43 = i65;
   i47 = i56;
   i48 = i55;
   i49 = i54;
   d35 = +HEAPF32[i11 >> 2];
   d39 = +HEAPF32[i14 >> 2];
   d40 = +HEAPF32[i18 >> 2];
   d30 = +HEAPF32[i1 >> 2];
   d28 = +HEAPF32[i22 >> 2];
   d32 = +HEAPF32[i24 >> 2];
   d50 = +HEAPF32[i44 >> 2];
   d51 = d61;
   d53 = d62;
   d52 = d60;
   i46 = i45;
   i45 = i44;
   i44 = i58;
  }
  if ((i66 | 0) == 8) {
   i67 = i56;
   d68 = d63;
   d69 = d64;
   i70 = i48;
   d71 = +HEAPF32[i16 >> 2];
   d72 = +HEAPF32[i2 >> 2];
   d73 = +HEAPF32[i44 >> 2];
   d74 = d61;
   d75 = +HEAPF32[i44 + 4 >> 2];
   d76 = d62;
   break;
  } else if ((i66 | 0) == 11) {
   STACKTOP = i4;
   return i8 | 0;
  }
 } else {
  i67 = i10;
  d68 = d20;
  d69 = d36;
  i70 = i2;
  d71 = d17;
  d72 = d13;
  d73 = d37;
  d74 = d41;
  d75 = d38;
  d76 = d42;
 } while (0);
 d42 = +HEAPF32[i70 + 12 >> 2];
 d41 = +HEAPF32[i67 + 4 >> 2];
 if ((d69 - d68) * (d71 - d42) - (d41 - d42) * (d72 - d68) > 0.0 ^ (d74 - d73) * (d33 - d75) - (d26 - d73) * (d76 - d75) > 0.0) {
  i8 = 0;
  STACKTOP = i4;
  return i8 | 0;
 }
 i8 = (d26 - d74) * (d38 - d76) - (d37 - d74) * (d33 - d76) > 0.0 ^ (d72 - d69) * (+HEAPF32[i34 >> 2] - d41) - (d71 - d41) * (+HEAPF32[i9 >> 2] - d69) > 0.0 ^ 1;
 STACKTOP = i4;
 return i8 | 0;
}

function _teardown(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2 + 8 | 0;
 i4 = i2 + 4 | 0;
 i5 = i2;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  i7 = -1;
  STACKTOP = i2;
  return i7 | 0;
 }
 i8 = i6 + -1 | 0;
 i9 = (i8 & i6 | 0) == 0;
 if (!i9) if (i6 >>> 0 > i1 >>> 0) i10 = i1; else i10 = (i1 >>> 0) % (i6 >>> 0) | 0; else i10 = i8 & i1;
 i11 = HEAP32[(HEAP32[14186] | 0) + (i10 << 2) >> 2] | 0;
 if (!i11) {
  i7 = -1;
  STACKTOP = i2;
  return i7 | 0;
 }
 i12 = HEAP32[i11 >> 2] | 0;
 if (!i12) {
  i7 = -1;
  STACKTOP = i2;
  return i7 | 0;
 }
 L15 : do if (i9) {
  i11 = i12;
  while (1) {
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i14 = (i13 | 0) == (i1 | 0);
   if (!(i14 | (i13 & i8 | 0) == (i10 | 0))) {
    i7 = -1;
    i15 = 64;
    break;
   }
   if (i14 ? (HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 64;
    break;
   }
  }
  if ((i15 | 0) == 64) {
   STACKTOP = i2;
   return i7 | 0;
  }
 } else {
  i11 = i12;
  while (1) {
   i14 = HEAP32[i11 + 4 >> 2] | 0;
   if ((i14 | 0) == (i1 | 0)) {
    if ((HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i14 >>> 0 < i6 >>> 0) i16 = i14; else i16 = (i14 >>> 0) % (i6 >>> 0) | 0;
    if ((i16 | 0) != (i10 | 0)) {
     i7 = -1;
     i15 = 64;
     break;
    }
   }
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 64;
    break;
   }
  }
  if ((i15 | 0) == 64) {
   STACKTOP = i2;
   return i7 | 0;
  }
 } while (0);
 i15 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0;
 i10 = i15 + 196 | 0;
 i16 = HEAP32[i10 >> 2] | 0;
 if (i16 | 0) {
  _free(i16);
  HEAP32[i10 >> 2] = 0;
  HEAP32[i15 + 200 >> 2] = 0;
 }
 i10 = i15 + 216 | 0;
 i16 = HEAP32[i10 >> 2] | 0;
 if (i16 | 0) {
  _arPattDetach(i16) | 0;
  _arDeleteHandle(HEAP32[i10 >> 2] | 0) | 0;
  HEAP32[i10 >> 2] = 0;
 }
 i10 = i15 + 228 | 0;
 if (HEAP32[i10 >> 2] | 0) {
  _ar3DDeleteHandle(i10) | 0;
  HEAP32[i10 >> 2] = 0;
 }
 i10 = i15 + 192 | 0;
 if (HEAP32[i10 >> 2] | 0) {
  _arParamLTFree(i10) | 0;
  HEAP32[i10 >> 2] = 0;
 }
 _arPattDeleteHandle(HEAP32[i15 + 220 >> 2] | 0) | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 i5 = HEAP32[14187] | 0;
 L52 : do if (i5 | 0) {
  i16 = i5 + -1 | 0;
  i6 = (i16 & i5 | 0) == 0;
  if (!i6) if (i10 >>> 0 < i5 >>> 0) i17 = i10; else i17 = (i10 >>> 0) % (i5 >>> 0) | 0; else i17 = i16 & i10;
  i1 = HEAP32[(HEAP32[14186] | 0) + (i17 << 2) >> 2] | 0;
  if (i1 | 0 ? (i12 = HEAP32[i1 >> 2] | 0, i12 | 0) : 0) {
   L61 : do if (i6) {
    i1 = i12;
    while (1) {
     i8 = HEAP32[i1 + 4 >> 2] | 0;
     i9 = (i8 | 0) == (i10 | 0);
     if (!(i9 | (i8 & i16 | 0) == (i17 | 0))) break L52;
     if (i9 ? (HEAP32[i1 + 8 >> 2] | 0) == (i10 | 0) : 0) {
      i18 = i1;
      break L61;
     }
     i1 = HEAP32[i1 >> 2] | 0;
     if (!i1) break L52;
    }
   } else {
    i1 = i12;
    while (1) {
     i9 = HEAP32[i1 + 4 >> 2] | 0;
     if ((i9 | 0) == (i10 | 0)) {
      if ((HEAP32[i1 + 8 >> 2] | 0) == (i10 | 0)) {
       i18 = i1;
       break L61;
      }
     } else {
      if (i9 >>> 0 < i5 >>> 0) i19 = i9; else i19 = (i9 >>> 0) % (i5 >>> 0) | 0;
      if ((i19 | 0) != (i17 | 0)) break L52;
     }
     i1 = HEAP32[i1 >> 2] | 0;
     if (!i1) break L52;
    }
   } while (0);
   HEAP32[i4 >> 2] = i18;
   HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(56744, i3) | 0;
  }
 } while (0);
 i3 = i15 + 288 | 0;
 i4 = i15 + 292 | 0;
 i18 = HEAP32[i3 >> 2] | 0;
 i17 = i18;
 if ((HEAP32[i4 >> 2] | 0) == (i18 | 0)) i20 = i17; else {
  i18 = 0;
  i19 = i17;
  do {
   _arMultiFreeConfig(HEAP32[i19 + (i18 << 3) + 4 >> 2] | 0) | 0;
   i18 = i18 + 1 | 0;
   i19 = HEAP32[i3 >> 2] | 0;
  } while (i18 >>> 0 < (HEAP32[i4 >> 2] | 0) - i19 >> 3 >>> 0);
  i20 = i19;
 }
 if (i20 | 0) {
  HEAP32[i4 >> 2] = i20;
  __ZdlPv(i20);
 }
 __ZdlPv(i3);
 i3 = HEAP32[i15 + 288 >> 2] | 0;
 if (i3 | 0) {
  HEAP32[i4 >> 2] = i3;
  __ZdlPv(i3);
 }
 i3 = HEAP32[i15 + 256 >> 2] | 0;
 if (i3 | 0) {
  i4 = i3;
  do {
   i3 = i4;
   i4 = HEAP32[i4 >> 2] | 0;
   __ZdlPv(i3);
  } while ((i4 | 0) != 0);
 }
 i4 = i15 + 248 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = 0;
 if (i3 | 0) __ZdlPv(i3);
 __ZdlPv(i15);
 i7 = 0;
 STACKTOP = i2;
 return i7 | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 4 | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 i7 = i2 + 16 | 0;
 i8 = i2 + 20 | 0;
 i9 = (HEAP32[i8 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) | 0;
 if (!i9) {
  i10 = 0;
  STACKTOP = i4;
  return i10 | 0;
 }
 i11 = i3 + 16 | 0;
 i12 = i3 + 20 | 0;
 if ((HEAP32[i12 >> 2] | 0) == (HEAP32[i11 >> 2] | 0)) {
  i10 = 0;
  STACKTOP = i4;
  return i10 | 0;
 }
 __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i1, (i9 | 0) / 20 | 0);
 i9 = HEAP32[i7 >> 2] | 0;
 if ((HEAP32[i8 >> 2] | 0) == (i9 | 0)) i13 = 0; else {
  i14 = i2 + 4 | 0;
  i15 = i3 + 4 | 0;
  i16 = i5 + 4 | 0;
  i17 = i1 + 8 | 0;
  i18 = i1 + 12 | 0;
  i19 = i5 + 4 | 0;
  i20 = 0;
  i21 = i9;
  do {
   i9 = HEAP32[i12 >> 2] | 0;
   i22 = HEAP32[i11 >> 2] | 0;
   do if ((i9 | 0) != (i22 | 0)) {
    i23 = (HEAP32[i14 >> 2] | 0) + (Math_imul(HEAP32[i2 >> 2] | 0, i20) | 0) | 0;
    i24 = i21 + (i20 * 20 | 0) + 16 | 0;
    i25 = 0;
    i26 = -1;
    i27 = 2147483647;
    i28 = -1;
    i29 = i9;
    i30 = i22;
    while (1) {
     if ((HEAP8[i24 >> 0] | 0) == (HEAP8[i30 + (i25 * 20 | 0) + 16 >> 0] | 0)) {
      i31 = Math_imul(HEAP32[i3 >> 2] | 0, i25) | 0;
      i32 = __ZN6vision18HammingDistance768EPKjS1_(i23, (HEAP32[i15 >> 2] | 0) + i31 | 0) | 0;
      i31 = i32 >>> 0 < i26 >>> 0;
      i33 = i31 ? i32 : i26;
      i34 = i31 ? i25 : i27;
      i35 = i31 ? i26 : i32 >>> 0 < i28 >>> 0 ? i32 : i28;
      i36 = HEAP32[i11 >> 2] | 0;
      i37 = HEAP32[i12 >> 2] | 0;
     } else {
      i33 = i26;
      i34 = i27;
      i35 = i28;
      i36 = i30;
      i37 = i29;
     }
     i25 = i25 + 1 | 0;
     if (i25 >>> 0 >= ((i37 - i36 | 0) / 20 | 0) >>> 0) break; else {
      i26 = i33;
      i27 = i34;
      i28 = i35;
      i29 = i37;
      i30 = i36;
     }
    }
    if ((i33 | 0) != -1) {
     if ((i35 | 0) == -1) {
      HEAP32[i5 >> 2] = i20;
      HEAP32[i16 >> 2] = i34;
      i30 = HEAP32[i6 >> 2] | 0;
      if (i30 >>> 0 < (HEAP32[i17 >> 2] | 0) >>> 0) {
       i29 = i5;
       i28 = HEAP32[i29 + 4 >> 2] | 0;
       i27 = i30;
       HEAP32[i27 >> 2] = HEAP32[i29 >> 2];
       HEAP32[i27 + 4 >> 2] = i28;
       HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i5);
      break;
     }
     if (+(i33 >>> 0) / +(i35 >>> 0) < +HEAPF32[i18 >> 2]) {
      HEAP32[i5 >> 2] = i20;
      HEAP32[i19 >> 2] = i34;
      i28 = HEAP32[i6 >> 2] | 0;
      if (i28 >>> 0 < (HEAP32[i17 >> 2] | 0) >>> 0) {
       i27 = i5;
       i29 = HEAP32[i27 + 4 >> 2] | 0;
       i30 = i28;
       HEAP32[i30 >> 2] = HEAP32[i27 >> 2];
       HEAP32[i30 + 4 >> 2] = i29;
       HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
      } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i5);
     }
    }
   } while (0);
   i20 = i20 + 1 | 0;
   i21 = HEAP32[i7 >> 2] | 0;
   i22 = ((HEAP32[i8 >> 2] | 0) - i21 | 0) / 20 | 0;
  } while (i20 >>> 0 < i22 >>> 0);
  i13 = i22;
 }
 i20 = (HEAP32[i6 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3;
 if (i20 >>> 0 > i13 >>> 0) {
  i13 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29569, 59) | 0, 29324, 121) | 0, 33554, 6) | 0, 112) | 0, 33561, 2) | 0, 29629, 33) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
  _abort();
 } else {
  i10 = i20;
  STACKTOP = i4;
  return i10 | 0;
 }
 return 0;
}

function ___udivmoddi4(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0;
 i6 = i1;
 i7 = i2;
 i8 = i7;
 i9 = i3;
 i10 = i4;
 i11 = i10;
 if (!i8) {
  i12 = (i5 | 0) != 0;
  if (!i11) {
   if (i12) {
    HEAP32[i5 >> 2] = (i6 >>> 0) % (i9 >>> 0);
    HEAP32[i5 + 4 >> 2] = 0;
   }
   i13 = 0;
   i14 = (i6 >>> 0) / (i9 >>> 0) >>> 0;
   return (setTempRet0(i13 | 0), i14) | 0;
  } else {
   if (!i12) {
    i13 = 0;
    i14 = 0;
    return (setTempRet0(i13 | 0), i14) | 0;
   }
   HEAP32[i5 >> 2] = i1 | 0;
   HEAP32[i5 + 4 >> 2] = i2 & 0;
   i13 = 0;
   i14 = 0;
   return (setTempRet0(i13 | 0), i14) | 0;
  }
 }
 i12 = (i11 | 0) == 0;
 do if (i9) {
  if (!i12) {
   i15 = (Math_clz32(i11 | 0) | 0) - (Math_clz32(i8 | 0) | 0) | 0;
   if (i15 >>> 0 <= 31) {
    i16 = i15 + 1 | 0;
    i17 = 31 - i15 | 0;
    i18 = i15 - 31 >> 31;
    i19 = i16;
    i20 = i6 >>> (i16 >>> 0) & i18 | i8 << i17;
    i21 = i8 >>> (i16 >>> 0) & i18;
    i22 = 0;
    i23 = i6 << i17;
    break;
   }
   if (!i5) {
    i13 = 0;
    i14 = 0;
    return (setTempRet0(i13 | 0), i14) | 0;
   }
   HEAP32[i5 >> 2] = i1 | 0;
   HEAP32[i5 + 4 >> 2] = i7 | i2 & 0;
   i13 = 0;
   i14 = 0;
   return (setTempRet0(i13 | 0), i14) | 0;
  }
  i17 = i9 - 1 | 0;
  if (i17 & i9 | 0) {
   i18 = (Math_clz32(i9 | 0) | 0) + 33 - (Math_clz32(i8 | 0) | 0) | 0;
   i16 = 64 - i18 | 0;
   i15 = 32 - i18 | 0;
   i24 = i15 >> 31;
   i25 = i18 - 32 | 0;
   i26 = i25 >> 31;
   i19 = i18;
   i20 = i15 - 1 >> 31 & i8 >>> (i25 >>> 0) | (i8 << i15 | i6 >>> (i18 >>> 0)) & i26;
   i21 = i26 & i8 >>> (i18 >>> 0);
   i22 = i6 << i16 & i24;
   i23 = (i8 << i16 | i6 >>> (i25 >>> 0)) & i24 | i6 << i15 & i18 - 33 >> 31;
   break;
  }
  if (i5 | 0) {
   HEAP32[i5 >> 2] = i17 & i6;
   HEAP32[i5 + 4 >> 2] = 0;
  }
  if ((i9 | 0) == 1) {
   i13 = i7 | i2 & 0;
   i14 = i1 | 0 | 0;
   return (setTempRet0(i13 | 0), i14) | 0;
  } else {
   i17 = _llvm_cttz_i32(i9 | 0) | 0;
   i13 = i8 >>> (i17 >>> 0) | 0;
   i14 = i8 << 32 - i17 | i6 >>> (i17 >>> 0) | 0;
   return (setTempRet0(i13 | 0), i14) | 0;
  }
 } else {
  if (i12) {
   if (i5 | 0) {
    HEAP32[i5 >> 2] = (i8 >>> 0) % (i9 >>> 0);
    HEAP32[i5 + 4 >> 2] = 0;
   }
   i13 = 0;
   i14 = (i8 >>> 0) / (i9 >>> 0) >>> 0;
   return (setTempRet0(i13 | 0), i14) | 0;
  }
  if (!i6) {
   if (i5 | 0) {
    HEAP32[i5 >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = (i8 >>> 0) % (i11 >>> 0);
   }
   i13 = 0;
   i14 = (i8 >>> 0) / (i11 >>> 0) >>> 0;
   return (setTempRet0(i13 | 0), i14) | 0;
  }
  i17 = i11 - 1 | 0;
  if (!(i17 & i11)) {
   if (i5 | 0) {
    HEAP32[i5 >> 2] = i1 | 0;
    HEAP32[i5 + 4 >> 2] = i17 & i8 | i2 & 0;
   }
   i13 = 0;
   i14 = i8 >>> ((_llvm_cttz_i32(i11 | 0) | 0) >>> 0);
   return (setTempRet0(i13 | 0), i14) | 0;
  }
  i17 = (Math_clz32(i11 | 0) | 0) - (Math_clz32(i8 | 0) | 0) | 0;
  if (i17 >>> 0 <= 30) {
   i18 = i17 + 1 | 0;
   i15 = 31 - i17 | 0;
   i19 = i18;
   i20 = i8 << i15 | i6 >>> (i18 >>> 0);
   i21 = i8 >>> (i18 >>> 0);
   i22 = 0;
   i23 = i6 << i15;
   break;
  }
  if (!i5) {
   i13 = 0;
   i14 = 0;
   return (setTempRet0(i13 | 0), i14) | 0;
  }
  HEAP32[i5 >> 2] = i1 | 0;
  HEAP32[i5 + 4 >> 2] = i7 | i2 & 0;
  i13 = 0;
  i14 = 0;
  return (setTempRet0(i13 | 0), i14) | 0;
 } while (0);
 if (!i19) {
  i27 = i23;
  i28 = i22;
  i29 = i21;
  i30 = i20;
  i31 = 0;
  i32 = 0;
 } else {
  i2 = i3 | 0 | 0;
  i3 = i10 | i4 & 0;
  i4 = _i64Add(i2 | 0, i3 | 0, -1, -1) | 0;
  i10 = getTempRet0() | 0;
  i7 = i23;
  i23 = i22;
  i22 = i21;
  i21 = i20;
  i20 = i19;
  i19 = 0;
  do {
   i1 = i7;
   i7 = i23 >>> 31 | i7 << 1;
   i23 = i19 | i23 << 1;
   i6 = i21 << 1 | i1 >>> 31 | 0;
   i1 = i21 >>> 31 | i22 << 1 | 0;
   _i64Subtract(i4 | 0, i10 | 0, i6 | 0, i1 | 0) | 0;
   i8 = getTempRet0() | 0;
   i11 = i8 >> 31 | ((i8 | 0) < 0 ? -1 : 0) << 1;
   i19 = i11 & 1;
   i21 = _i64Subtract(i6 | 0, i1 | 0, i11 & i2 | 0, (((i8 | 0) < 0 ? -1 : 0) >> 31 | ((i8 | 0) < 0 ? -1 : 0) << 1) & i3 | 0) | 0;
   i22 = getTempRet0() | 0;
   i20 = i20 - 1 | 0;
  } while ((i20 | 0) != 0);
  i27 = i7;
  i28 = i23;
  i29 = i22;
  i30 = i21;
  i31 = 0;
  i32 = i19;
 }
 i19 = i28;
 i28 = 0;
 if (i5 | 0) {
  HEAP32[i5 >> 2] = i30;
  HEAP32[i5 + 4 >> 2] = i29;
 }
 i13 = (i19 | 0) >>> 31 | (i27 | i28) << 1 | (i28 << 1 | i19 >>> 31) & 0 | i31;
 i14 = (i19 << 1 | 0 >>> 31) & -2 | i32;
 return (setTempRet0(i13 | 0), i14) | 0;
}

function __ZN6vision22ComputeSubpixelHessianEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8;
 i10 = HEAP32[i3 + 4 >> 2] | 0;
 i11 = HEAP32[i4 + 4 >> 2] | 0;
 i12 = (i10 | 0) == (i11 | 0);
 i13 = HEAP32[i5 + 4 >> 2] | 0;
 if ((i13 | 0) == (i12 & 1 | 0)) {
  if ((HEAP32[i5 + 8 >> 2] | 0) != ((HEAP32[i3 + 8 >> 2] | 0) == (HEAP32[i4 + 8 >> 2] | 0) | 0)) {
   i14 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22429, 70) | 0, 22500, 128) | 0, 33554, 6) | 0, 466) | 0, 33561, 2) | 0, 22629, 31) | 0;
   __ZNKSt3__28ios_base6getlocEv(i9, i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
   i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 10) | 0;
   __ZNSt3__26localeD2Ev(i9);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i14, i16) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i14) | 0;
   _abort();
  }
  __ZN6vision32ComputeSubpixelHessianSameOctaveEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7);
  STACKTOP = i8;
  return 1;
 }
 if (!(i12 & (i11 >>> 1 | 0) == (i13 | 0))) {
  if (!((i10 >>> 1 | 0) == (i11 | 0) & (i11 | 0) == (i13 | 0))) {
   i13 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 29299, 24) | 0, 22500, 128) | 0, 33554, 6) | 0, 475) | 0, 33561, 2) | 0, 22758, 28) | 0;
   __ZNKSt3__28ios_base6getlocEv(i9, i13 + (HEAP32[(HEAP32[i13 >> 2] | 0) + -12 >> 2] | 0) | 0);
   i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
   i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
   __ZNSt3__26localeD2Ev(i9);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i13, i10) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i13) | 0;
   _abort();
  }
  __ZN6vision38ComputeSubpixelHessianCoarseOctavePairEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7);
  STACKTOP = i8;
  return 1;
 }
 i13 = HEAP32[i3 + 8 >> 2] | 0;
 if ((i13 | 0) == (HEAP32[i4 + 8 >> 2] | 0) ? (i13 >>> 1 | 0) == (HEAP32[i5 + 8 >> 2] | 0) : 0) {
  __ZN6vision36ComputeSubpixelHessianFineOctavePairEPfS0_RKNS_5ImageES3_S3_ii(i1, i2, i3, i4, i5, i6, i7);
  STACKTOP = i8;
  return 1;
 }
 i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 22661, 96) | 0, 22500, 128) | 0, 33554, 6) | 0, 469) | 0, 33561, 2) | 0, 22629, 31) | 0;
 __ZNKSt3__28ios_base6getlocEv(i9, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
 i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i9, 58484) | 0;
 i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
 __ZNSt3__26localeD2Ev(i9);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i6) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
 _abort();
 return 0;
}

function __ZN6vision10DoGPyramid7computeEPKNS_25GaussianScaleSpacePyramidE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 if ((HEAP32[i1 + 4 >> 2] | 0) == (HEAP32[i1 >> 2] | 0)) {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 20771, 41) | 0, 20576, 130) | 0, 33554, 6) | 0, 72) | 0, 33561, 2) | 0, 20813, 40) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 if ((HEAP32[i2 + 16 >> 2] | 0) <= 0) {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 20854, 48) | 0, 20576, 130) | 0, 33554, 6) | 0, 73) | 0, 33561, 2) | 0, 20903, 35) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 if (!(___dynamic_cast(i2, 10992, 11e3, 0) | 0)) {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 20939, 71) | 0, 20576, 130) | 0, 33554, 6) | 0, 74) | 0, 33561, 2) | 0, 21011, 34) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i5 = i1 + 12 | 0;
 i7 = HEAP32[i5 >> 2] | 0;
 if (!i7) {
  STACKTOP = i3;
  return;
 }
 i4 = i1 + 16 | 0;
 i6 = 0;
 i8 = HEAP32[i4 >> 2] | 0;
 i9 = i7;
 while (1) {
  if (!i8) {
   i10 = i9;
   i11 = 0;
  } else {
   i7 = 0;
   i12 = i8;
   do {
    i13 = (Math_imul(i12, i6) | 0) + i7 | 0;
    i14 = (HEAP32[i1 >> 2] | 0) + (i13 << 5) | 0;
    i13 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i6, i7) | 0;
    i7 = i7 + 1 | 0;
    __ZN6vision10DoGPyramid25difference_image_binomialERNS_5ImageERKS1_S4_(0, i14, i13, __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i6, i7) | 0);
    i12 = HEAP32[i4 >> 2] | 0;
   } while (i7 >>> 0 < i12 >>> 0);
   i10 = HEAP32[i5 >> 2] | 0;
   i11 = i12;
  }
  i6 = i6 + 1 | 0;
  if (i6 >>> 0 >= i10 >>> 0) break; else {
   i8 = i11;
   i9 = i10;
  }
 }
 STACKTOP = i3;
 return;
}

function _start_input_pass_27(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i2 = i1 + 328 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) != 1) {
  if ((i3 + -1 | 0) >>> 0 > 3) {
   i4 = HEAP32[i1 >> 2] | 0;
   HEAP32[i4 + 20 >> 2] = 26;
   HEAP32[i4 + 24 >> 2] = i3;
   HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
  }
  i3 = _jdiv_round_up(HEAP32[i1 + 28 >> 2] | 0, HEAP32[i1 + 308 >> 2] << 3) | 0;
  HEAP32[i1 + 348 >> 2] = i3;
  i3 = _jdiv_round_up(HEAP32[i1 + 32 >> 2] | 0, HEAP32[i1 + 312 >> 2] << 3) | 0;
  HEAP32[i1 + 352 >> 2] = i3;
  i3 = i1 + 356 | 0;
  HEAP32[i3 >> 2] = 0;
  if ((HEAP32[i2 >> 2] | 0) <= 0) {
   i5 = i1 + 444 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   FUNCTION_TABLE_vi[i7 & 255](i1);
   i8 = i1 + 428 | 0;
   i9 = HEAP32[i8 >> 2] | 0;
   i10 = HEAP32[i9 >> 2] | 0;
   FUNCTION_TABLE_vi[i10 & 255](i1);
   i11 = HEAP32[i8 >> 2] | 0;
   i12 = i11 + 4 | 0;
   i13 = HEAP32[i12 >> 2] | 0;
   i14 = i1 + 436 | 0;
   i15 = HEAP32[i14 >> 2] | 0;
   HEAP32[i15 >> 2] = i13;
   return;
  }
  i4 = 0;
  i16 = 0;
  while (1) {
   i17 = HEAP32[i1 + 332 + (i4 << 2) >> 2] | 0;
   i18 = HEAP32[i17 + 8 >> 2] | 0;
   HEAP32[i17 + 52 >> 2] = i18;
   i19 = HEAP32[i17 + 12 >> 2] | 0;
   HEAP32[i17 + 56 >> 2] = i19;
   i20 = Math_imul(i19, i18) | 0;
   HEAP32[i17 + 60 >> 2] = i20;
   i21 = Math_imul(HEAP32[i17 + 36 >> 2] | 0, i18) | 0;
   HEAP32[i17 + 64 >> 2] = i21;
   i21 = ((HEAP32[i17 + 28 >> 2] | 0) >>> 0) % (i18 >>> 0) | 0;
   HEAP32[i17 + 68 >> 2] = (i21 | 0) == 0 ? i18 : i21;
   i21 = ((HEAP32[i17 + 32 >> 2] | 0) >>> 0) % (i19 >>> 0) | 0;
   HEAP32[i17 + 72 >> 2] = (i21 | 0) == 0 ? i19 : i21;
   if ((i20 + i16 | 0) > 10) {
    i21 = HEAP32[i1 >> 2] | 0;
    HEAP32[i21 + 20 >> 2] = 13;
    FUNCTION_TABLE_vi[HEAP32[i21 >> 2] & 255](i1);
   }
   if ((i20 | 0) > 0) {
    i21 = i20;
    while (1) {
     i20 = HEAP32[i3 >> 2] | 0;
     HEAP32[i3 >> 2] = i20 + 1;
     HEAP32[i1 + 360 + (i20 << 2) >> 2] = i4;
     if ((i21 | 0) > 1) i21 = i21 + -1 | 0; else break;
    }
   }
   i21 = i4 + 1 | 0;
   i22 = HEAP32[i2 >> 2] | 0;
   if ((i21 | 0) >= (i22 | 0)) break;
   i4 = i21;
   i16 = HEAP32[i3 >> 2] | 0;
  }
  if ((i22 | 0) > 0) i23 = i22; else {
   i5 = i1 + 444 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   FUNCTION_TABLE_vi[i7 & 255](i1);
   i8 = i1 + 428 | 0;
   i9 = HEAP32[i8 >> 2] | 0;
   i10 = HEAP32[i9 >> 2] | 0;
   FUNCTION_TABLE_vi[i10 & 255](i1);
   i11 = HEAP32[i8 >> 2] | 0;
   i12 = i11 + 4 | 0;
   i13 = HEAP32[i12 >> 2] | 0;
   i14 = i1 + 436 | 0;
   i15 = HEAP32[i14 >> 2] | 0;
   HEAP32[i15 >> 2] = i13;
   return;
  }
 } else {
  i22 = HEAP32[i1 + 332 >> 2] | 0;
  HEAP32[i1 + 348 >> 2] = HEAP32[i22 + 28 >> 2];
  i3 = HEAP32[i22 + 32 >> 2] | 0;
  HEAP32[i1 + 352 >> 2] = i3;
  HEAP32[i22 + 52 >> 2] = 1;
  HEAP32[i22 + 56 >> 2] = 1;
  HEAP32[i22 + 60 >> 2] = 1;
  HEAP32[i22 + 64 >> 2] = HEAP32[i22 + 36 >> 2];
  HEAP32[i22 + 68 >> 2] = 1;
  i16 = HEAP32[i22 + 12 >> 2] | 0;
  i4 = (i3 >>> 0) % (i16 >>> 0) | 0;
  HEAP32[i22 + 72 >> 2] = (i4 | 0) == 0 ? i16 : i4;
  HEAP32[i1 + 356 >> 2] = 1;
  HEAP32[i1 + 360 >> 2] = 0;
  i23 = 1;
 }
 i4 = i1 + 4 | 0;
 i16 = 0;
 i22 = i23;
 while (1) {
  i23 = HEAP32[i1 + 332 + (i16 << 2) >> 2] | 0;
  i3 = i23 + 76 | 0;
  if (!(HEAP32[i3 >> 2] | 0)) {
   i21 = HEAP32[i23 + 16 >> 2] | 0;
   i23 = i1 + 164 + (i21 << 2) | 0;
   if (!(i21 >>> 0 <= 3 ? (HEAP32[i23 >> 2] | 0) != 0 : 0)) {
    i20 = HEAP32[i1 >> 2] | 0;
    HEAP32[i20 + 20 >> 2] = 52;
    HEAP32[i20 + 24 >> 2] = i21;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   }
   i21 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i4 >> 2] >> 2] & 63](i1, 1, 132) | 0;
   _memcpy(i21 | 0, HEAP32[i23 >> 2] | 0, 132) | 0;
   HEAP32[i3 >> 2] = i21;
   i24 = HEAP32[i2 >> 2] | 0;
  } else i24 = i22;
  i16 = i16 + 1 | 0;
  if ((i16 | 0) >= (i24 | 0)) break; else i22 = i24;
 }
 i5 = i1 + 444 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 FUNCTION_TABLE_vi[i7 & 255](i1);
 i8 = i1 + 428 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = HEAP32[i9 >> 2] | 0;
 FUNCTION_TABLE_vi[i10 & 255](i1);
 i11 = HEAP32[i8 >> 2] | 0;
 i12 = i11 + 4 | 0;
 i13 = HEAP32[i12 >> 2] | 0;
 i14 = i1 + 436 | 0;
 i15 = HEAP32[i14 >> 2] | 0;
 HEAP32[i15 >> 2] = i13;
 return;
}

function __ZN6vision11PartialSortIfiEENSt3__24pairIT_T0_EEPS5_ii(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, d20 = 0.0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, d26 = 0.0, i27 = 0, i28 = 0, d29 = 0.0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 if ((i3 | 0) <= 0) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31730, 28) | 0, 31759, 108) | 0, 33554, 6) | 0, 82) | 0, 33561, 2) | 0, 31868, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 if ((i4 | 0) <= 0) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31887, 28) | 0, 31759, 108) | 0, 33554, 6) | 0, 83) | 0, 33561, 2) | 0, 31916, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i6, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i9 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i9 >> 2] | 0) + 28 >> 2] & 63](i9, 10) | 0;
  __ZNSt3__26localeD2Ev(i6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 i7 = i4 + -1 | 0;
 i8 = i2 + (i7 << 3) | 0;
 if ((i3 | 0) <= 1) {
  i10 = i8;
  i11 = i10;
  i12 = HEAP32[i11 >> 2] | 0;
  i13 = i10 + 4 | 0;
  i14 = i13;
  i15 = HEAP32[i14 >> 2] | 0;
  i16 = i1;
  i17 = i16;
  HEAP32[i17 >> 2] = i12;
  i18 = i16 + 4 | 0;
  i19 = i18;
  HEAP32[i19 >> 2] = i15;
  STACKTOP = i5;
  return;
 }
 i6 = i2 + (i7 << 3) + 4 | 0;
 i9 = i3 + -1 | 0;
 i3 = 0;
 do {
  d20 = +HEAPF32[i8 >> 2];
  i21 = HEAP32[i6 >> 2] | 0;
  i22 = i3;
  i23 = i9;
  while (1) {
   i24 = i22;
   while (1) {
    i25 = i2 + (i24 << 3) | 0;
    d26 = +HEAPF32[i25 >> 2];
    if (!(d26 < d20)) {
     if (d20 < d26) break;
     if ((HEAP32[i2 + (i24 << 3) + 4 >> 2] | 0) >= (i21 | 0)) break;
    }
    i24 = i24 + 1 | 0;
   }
   i27 = i23;
   while (1) {
    i28 = i2 + (i27 << 3) | 0;
    d29 = +HEAPF32[i28 >> 2];
    if (!(d20 < d29)) {
     if (d29 < d20) break;
     if ((i21 | 0) >= (HEAP32[i2 + (i27 << 3) + 4 >> 2] | 0)) break;
    }
    i27 = i27 + -1 | 0;
   }
   if ((i24 | 0) > (i27 | 0)) {
    i30 = i24;
    i31 = i27;
   } else {
    HEAPF32[i25 >> 2] = d29;
    HEAPF32[i28 >> 2] = d26;
    i32 = i2 + (i24 << 3) + 4 | 0;
    i33 = i2 + (i27 << 3) + 4 | 0;
    i34 = HEAP32[i32 >> 2] | 0;
    HEAP32[i32 >> 2] = HEAP32[i33 >> 2];
    HEAP32[i33 >> 2] = i34;
    i30 = i24 + 1 | 0;
    i31 = i27 + -1 | 0;
   }
   if ((i30 | 0) > (i31 | 0)) break; else {
    i22 = i30;
    i23 = i31;
   }
  }
  i3 = (i31 | 0) < (i7 | 0) ? i30 : i3;
  i9 = (i30 | 0) < (i4 | 0) ? i9 : i31;
 } while ((i3 | 0) < (i9 | 0));
 i10 = i8;
 i11 = i10;
 i12 = HEAP32[i11 >> 2] | 0;
 i13 = i10 + 4 | 0;
 i14 = i13;
 i15 = HEAP32[i14 >> 2] | 0;
 i16 = i1;
 i17 = i16;
 HEAP32[i17 >> 2] = i12;
 i18 = i16 + 4 | 0;
 i19 = i18;
 HEAP32[i19 >> 2] = i15;
 STACKTOP = i5;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 L1 : do if (((((i1 | 0) != (i2 | 0) ? (HEAP8[i1 >> 0] | 0) == 90 : 0) ? (i6 = i1 + 1 | 0, i7 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i3) | 0, !((i7 | 0) == (i6 | 0) | (i7 | 0) == (i2 | 0))) : 0) ? (HEAP8[i7 >> 0] | 0) == 69 : 0) ? (i6 = i7 + 1 | 0, (i6 | 0) != (i2 | 0)) : 0) switch (HEAP8[i6 >> 0] | 0) {
 case 115:
  {
   i8 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_(i7 + 2 | 0, i2) | 0;
   i9 = HEAP32[i3 + 4 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i9 | 0)) {
    i10 = i8;
    break L1;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9 + -24 | 0, 51604) | 0;
   i10 = i8;
   break L1;
   break;
  }
 case 100:
  {
   i8 = i7 + 2 | 0;
   if ((i8 | 0) == (i2 | 0)) {
    i10 = i1;
    break L1;
   }
   i7 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i8, i2) | 0;
   if ((i7 | 0) == (i2 | 0)) {
    i10 = i1;
    break L1;
   }
   if ((HEAP8[i7 >> 0] | 0) != 95) {
    i10 = i1;
    break L1;
   }
   i8 = i7 + 1 | 0;
   i7 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i8, i2, i3) | 0;
   i9 = i3 + 4 | 0;
   if ((i7 | 0) == (i8 | 0)) {
    i8 = HEAP32[i9 >> 2] | 0;
    i11 = 0;
    while (1) {
     if ((i11 | 0) == -1) break;
     i12 = i11 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8 + (i12 * 24 | 0) | 0);
     i11 = i12;
    }
    HEAP32[i9 >> 2] = i8 + -24;
    i10 = i1;
    break L1;
   }
   i11 = HEAP32[i9 >> 2] | 0;
   if (((i11 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
    i10 = i1;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i11 + -24 | 0);
   i11 = HEAP32[i9 >> 2] | 0;
   i12 = 0;
   while (1) {
    if ((i12 | 0) == -1) break;
    i13 = i12 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11 + (i13 * 24 | 0) | 0);
    i12 = i13;
   }
   HEAP32[i9 >> 2] = i11 + -24;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11 + -48 | 0, 50317) | 0;
   i12 = HEAP8[i5 + 11 >> 0] | 0;
   i8 = i12 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i9 >> 2] | 0) + -24 | 0, i8 ? HEAP32[i5 >> 2] | 0 : i5, i8 ? HEAP32[i5 + 4 >> 2] | 0 : i12 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   i10 = i7;
   break L1;
   break;
  }
 default:
  {
   i12 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i3) | 0;
   if ((i12 | 0) == (i6 | 0)) {
    i8 = i3 + 4 | 0;
    i13 = HEAP32[i8 >> 2] | 0;
    i14 = 0;
    while (1) {
     if ((i14 | 0) == -1) break;
     i15 = i14 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13 + (i15 * 24 | 0) | 0);
     i14 = i15;
    }
    HEAP32[i8 >> 2] = i13 + -24;
    i10 = i1;
    break L1;
   }
   i14 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_(i12, i2) | 0;
   i6 = i3 + 4 | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   if (((i7 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
    i10 = i14;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i7 + -24 | 0);
   i7 = HEAP32[i6 >> 2] | 0;
   i9 = 0;
   while (1) {
    if ((i9 | 0) == -1) break;
    i11 = i9 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7 + (i11 * 24 | 0) | 0);
    i9 = i11;
   }
   HEAP32[i6 >> 2] = i7 + -24;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7 + -48 | 0, 50317) | 0;
   i9 = HEAP8[i5 + 11 >> 0] | 0;
   i12 = i9 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i6 >> 2] | 0) + -24 | 0, i12 ? HEAP32[i5 >> 2] | 0 : i5, i12 ? HEAP32[i5 + 4 >> 2] | 0 : i9 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   i10 = i14;
   break L1;
  }
 } else i10 = i1; while (0);
 STACKTOP = i4;
 return i10 | 0;
}

function ___cxa_demangle(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 4192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(4192);
 i6 = i5 + 4176 | 0;
 i7 = i5;
 i8 = i5 + 4112 | 0;
 if ((i1 | 0) != 0 ? (i9 = (i2 | 0) != 0, i10 = (i3 | 0) == 0, !(i9 & i10)) : 0) {
  if (i9) i11 = HEAP32[i3 >> 2] | 0; else i11 = 0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EEC2Ev(i7);
  __ZN10__cxxabiv112_GLOBAL__N_12DbC2ILm4096EEERNS0_5arenaIXT_EEE(i8, i7);
  i9 = i8 + 48 | 0;
  i12 = i8 + 61 | 0;
  HEAP32[i9 >> 2] = 0;
  HEAP32[i9 + 4 >> 2] = 0;
  HEAP32[i9 + 8 >> 2] = 0;
  HEAP8[i9 + 12 >> 0] = 0;
  HEAP8[i12 >> 0] = 1;
  i9 = i8 + 32 | 0;
  i13 = i8 + 36 | 0;
  i14 = HEAP32[i13 >> 2] | 0;
  if (i14 >>> 0 < (HEAP32[i8 + 40 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i6, i7);
   HEAP32[i14 >> 2] = 0;
   HEAP32[i14 + 4 >> 2] = 0;
   HEAP32[i14 + 8 >> 2] = 0;
   HEAP32[i14 + 12 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 16;
  } else __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILm4096EEEEEEvDpOT_(i9, i7);
  i14 = i8 + 62 | 0;
  HEAP8[i14 >> 0] = 0;
  HEAP8[i8 + 63 >> 0] = 1;
  HEAP32[i6 >> 2] = 0;
  i15 = i1 + (_strlen(i1) | 0) | 0;
  __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri(i1, i15, i8, i6);
  i16 = HEAP32[i6 >> 2] | 0;
  do if (!((i16 | 0) != 0 | (HEAP8[i14 >> 0] | 0) == 0)) {
   i17 = HEAP32[i9 >> 2] | 0;
   if ((i17 | 0) != (HEAP32[i13 >> 2] | 0) ? (HEAP32[i17 >> 2] | 0) != (HEAP32[i17 + 4 >> 2] | 0) : 0) {
    HEAP8[i14 >> 0] = 0;
    HEAP8[i12 >> 0] = 0;
    i17 = HEAP32[i8 >> 2] | 0;
    i18 = i8 + 4 | 0;
    i19 = HEAP32[i18 >> 2] | 0;
    while (1) {
     if ((i19 | 0) == (i17 | 0)) break;
     i20 = i19 + -24 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20);
     i19 = i20;
    }
    HEAP32[i18 >> 2] = i17;
    i19 = HEAP32[i8 + 16 >> 2] | 0;
    i20 = i8 + 20 | 0;
    i21 = HEAP32[i20 >> 2] | 0;
    while (1) {
     if ((i21 | 0) == (i19 | 0)) break;
     i22 = i21 + -16 | 0;
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i22);
     i21 = i22;
    }
    HEAP32[i20 >> 2] = i19;
    __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri(i1, i15, i8, i6);
    if (!(HEAP8[i14 >> 0] | 0)) {
     i23 = HEAP32[i6 >> 2] | 0;
     i24 = 22;
     break;
    } else {
     HEAP32[i6 >> 2] = -2;
     i25 = 0;
     i26 = -2;
     break;
    }
   } else i24 = 23;
  } else {
   i23 = i16;
   i24 = 22;
  } while (0);
  if ((i24 | 0) == 22) if (!i23) i24 = 23; else {
   i25 = 0;
   i26 = i23;
  }
  do if ((i24 | 0) == 23) {
   i23 = i8 + 4 | 0;
   i16 = __ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv((HEAP32[i23 >> 2] | 0) + -24 | 0) | 0;
   i14 = i16 + 1 | 0;
   if (i14 >>> 0 > i11 >>> 0) {
    i15 = _realloc(i2, i14) | 0;
    if (!i15) {
     HEAP32[i6 >> 2] = -1;
     i25 = 0;
     i26 = -1;
     break;
    }
    if (i10) i27 = i15; else {
     HEAP32[i3 >> 2] = i14;
     i27 = i15;
    }
   } else if (!i2) {
    i25 = 0;
    i26 = 0;
    break;
   } else i27 = i2;
   i15 = HEAP32[i23 >> 2] | 0;
   i14 = i15 + -12 | 0;
   i1 = HEAP8[i14 + 11 >> 0] | 0;
   i12 = i1 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i15 + -24 | 0, i12 ? HEAP32[i14 >> 2] | 0 : i14, i12 ? HEAP32[i15 + -8 >> 2] | 0 : i1 & 255) | 0;
   i1 = (HEAP32[i23 >> 2] | 0) + -24 | 0;
   if ((HEAP8[i1 + 11 >> 0] | 0) < 0) i28 = HEAP32[i1 >> 2] | 0; else i28 = i1;
   _memcpy(i27 | 0, i28 | 0, i16 | 0) | 0;
   HEAP8[i27 + i16 >> 0] = 0;
   i25 = i27;
   i26 = 0;
  } while (0);
  if (i4 | 0) HEAP32[i4 >> 2] = i26;
  __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev(i8);
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EED2Ev(i7);
  i29 = i25;
 } else if (!i4) i29 = 0; else {
  HEAP32[i4 >> 2] = -3;
  i29 = 0;
 }
 STACKTOP = i5;
 return i29 | 0;
}

function _jinit_master_decompress(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i2 = i1 + 4 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 28) | 0;
 HEAP32[i1 + 420 >> 2] = i3;
 HEAP32[i3 >> 2] = 120;
 HEAP32[i3 + 4 >> 2] = 121;
 HEAP32[i3 + 8 >> 2] = 0;
 _jpeg_calc_output_dimensions(i1);
 i4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1408) | 0;
 i5 = i4 + 256 | 0;
 i6 = i1 + 324 | 0;
 HEAP32[i6 >> 2] = i5;
 _memset(i4 | 0, 0, 256) | 0;
 i7 = 0;
 do {
  HEAP8[i5 + i7 >> 0] = i7;
  i7 = i7 + 1 | 0;
 } while ((i7 | 0) != 256);
 _memset(i4 + 512 | 0, -1, 384) | 0;
 _memset(i4 + 896 | 0, 0, 384) | 0;
 i7 = i4 + 1280 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 i6 = i7 + 128 | 0;
 do {
  HEAP8[i7 >> 0] = HEAP8[i4 >> 0] | 0;
  i7 = i7 + 1 | 0;
  i4 = i4 + 1 | 0;
 } while ((i7 | 0) < (i6 | 0));
 i4 = i1 + 120 | 0;
 i7 = i3 + 12 | 0;
 HEAP32[i7 >> 2] = 0;
 if ((((((((((((((HEAP32[i1 + 76 >> 2] | 0) == 0 ? (HEAP32[i1 + 300 >> 2] | 0) == 0 : 0) ? (HEAP32[i1 + 40 >> 2] | 0) == 3 : 0) ? (HEAP32[i1 + 36 >> 2] | 0) == 3 : 0) ? (HEAP32[i1 + 44 >> 2] | 0) == 2 : 0) ? (HEAP32[i4 >> 2] | 0) == 3 : 0) ? (i6 = HEAP32[i1 + 216 >> 2] | 0, (HEAP32[i6 + 8 >> 2] | 0) == 2) : 0) ? (HEAP32[i6 + 92 >> 2] | 0) == 1 : 0) ? (HEAP32[i6 + 176 >> 2] | 0) == 1 : 0) ? (HEAP32[i6 + 12 >> 2] | 0) <= 2 : 0) ? (HEAP32[i6 + 96 >> 2] | 0) == 1 : 0) ? (HEAP32[i6 + 180 >> 2] | 0) == 1 : 0) ? (i5 = HEAP32[i6 + 36 >> 2] | 0, (i5 | 0) == (HEAP32[i1 + 316 >> 2] | 0)) : 0) ? (HEAP32[i6 + 120 >> 2] | 0) == (i5 | 0) : 0) i8 = (HEAP32[i6 + 204 >> 2] | 0) == (i5 | 0) & 1; else i8 = 0;
 i5 = i3 + 16 | 0;
 HEAP32[i5 >> 2] = i8;
 i8 = i3 + 20 | 0;
 HEAP32[i8 >> 2] = 0;
 i6 = i3 + 24 | 0;
 HEAP32[i6 >> 2] = 0;
 do if (!(HEAP32[i1 + 84 >> 2] | 0)) {
  HEAP32[i1 + 100 >> 2] = 0;
  HEAP32[i1 + 104 >> 2] = 0;
  HEAP32[i1 + 108 >> 2] = 0;
  i9 = i1 + 68 | 0;
 } else {
  if (!(HEAP32[i1 + 64 >> 2] | 0)) {
   HEAP32[i1 + 100 >> 2] = 0;
   HEAP32[i1 + 104 >> 2] = 0;
   HEAP32[i1 + 108 >> 2] = 0;
  }
  i3 = i1 + 68 | 0;
  if (HEAP32[i3 >> 2] | 0) {
   i10 = HEAP32[i1 >> 2] | 0;
   HEAP32[i10 + 20 >> 2] = 47;
   FUNCTION_TABLE_vi[HEAP32[i10 >> 2] & 255](i1);
  }
  do if ((HEAP32[i4 >> 2] | 0) == 3) {
   if (HEAP32[i1 + 136 >> 2] | 0) {
    HEAP32[i1 + 104 >> 2] = 1;
    break;
   }
   if (!(HEAP32[i1 + 92 >> 2] | 0)) {
    HEAP32[i1 + 100 >> 2] = 1;
    break;
   } else {
    HEAP32[i1 + 108 >> 2] = 1;
    break;
   }
  } else {
   HEAP32[i1 + 100 >> 2] = 1;
   HEAP32[i1 + 104 >> 2] = 0;
   HEAP32[i1 + 108 >> 2] = 0;
   HEAP32[i1 + 136 >> 2] = 0;
  } while (0);
  if (HEAP32[i1 + 100 >> 2] | 0) {
   _jinit_1pass_quantizer(i1);
   HEAP32[i8 >> 2] = HEAP32[i1 + 460 >> 2];
  }
  if ((HEAP32[i1 + 108 >> 2] | 0) == 0 ? (HEAP32[i1 + 104 >> 2] | 0) == 0 : 0) {
   i9 = i3;
   break;
  }
  _jinit_2pass_quantizer(i1);
  HEAP32[i6 >> 2] = HEAP32[i1 + 460 >> 2];
  i9 = i3;
 } while (0);
 if (!(HEAP32[i9 >> 2] | 0)) {
  if (!(HEAP32[i5 >> 2] | 0)) {
   _jinit_color_deconverter(i1);
   _jinit_upsampler(i1);
  } else _jinit_merged_upsampler(i1);
  _jinit_d_post_controller(i1, HEAP32[i1 + 108 >> 2] | 0);
 }
 _jinit_inverse_dct(i1);
 do if (!(HEAP32[i1 + 224 >> 2] | 0)) if (!(HEAP32[i1 + 220 >> 2] | 0)) {
  _jinit_huff_decoder(i1);
  break;
 } else {
  _jinit_phuff_decoder(i1);
  break;
 } else {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i5 + 20 >> 2] = 1;
  FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i1);
 } while (0);
 i5 = i1 + 436 | 0;
 if (!(HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0)) i11 = (HEAP32[i1 + 64 >> 2] | 0) != 0 & 1; else i11 = 1;
 _jinit_d_coef_controller(i1, i11);
 if (!(HEAP32[i9 >> 2] | 0)) _jinit_d_main_controller(i1, 0);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 255](i1);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 255](i1);
 i2 = HEAP32[i1 + 8 >> 2] | 0;
 if (!i2) return;
 if (HEAP32[i1 + 64 >> 2] | 0) return;
 if (!(HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0)) return;
 i5 = HEAP32[i1 + 36 >> 2] | 0;
 i9 = (HEAP32[i1 + 220 >> 2] | 0) == 0 ? i5 : (i5 * 3 | 0) + 2 | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 i5 = Math_imul(i9, HEAP32[i1 + 320 >> 2] | 0) | 0;
 HEAP32[i2 + 8 >> 2] = i5;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = (HEAP32[i1 + 108 >> 2] | 0) == 0 ? 2 : 3;
 HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
 return;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryEPKh(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i1 + 8 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if (!i6) {
  i7 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30249, 34) | 0, 27249, 129) | 0, 33554, 6) | 0, 405) | 0, 33561, 2) | 0, 30284, 19) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i9) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i7) | 0;
  _abort();
 }
 HEAP32[i1 + 100 >> 2] = 0;
 i7 = i1 + 72 | 0;
 i9 = i1 + 76 | 0;
 HEAP32[i9 >> 2] = HEAP32[i7 >> 2];
 i4 = i1 + 84 | 0;
 i8 = HEAP32[i4 >> 2] | 0;
 i10 = i1 + 88 | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 if ((i8 | 0) == (i11 | 0)) {
  i12 = i6;
  __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh(i1, i4, i12, i2);
  i13 = HEAP32[i9 >> 2] | 0;
  i14 = HEAP32[i7 >> 2] | 0;
  i15 = i13 - i14 | 0;
  i16 = i15 >> 2;
  STACKTOP = i3;
  return i16 | 0;
 }
 i6 = i11;
 i11 = i8;
 do {
  i8 = i6 - i11 | 0;
  i17 = i8 >> 3;
  if ((i8 | 0) > 8 ? (i18 = i6 + -8 | 0, i19 = i11, i20 = HEAP32[i19 >> 2] | 0, i21 = HEAP32[i19 + 4 >> 2] | 0, i19 = i18, i22 = HEAP32[i19 + 4 >> 2] | 0, i23 = i11, HEAP32[i23 >> 2] = HEAP32[i19 >> 2], HEAP32[i23 + 4 >> 2] = i22, i22 = i18, HEAP32[i22 >> 2] = i20, HEAP32[i22 + 4 >> 2] = i21, i21 = i17 + -1 | 0, (i8 | 0) != 16) : 0) {
   i22 = (i17 + -3 | 0) / 2 | 0;
   i17 = i11 + 8 | 0;
   if ((i8 | 0) > 24) {
    i8 = (HEAP32[i11 + 12 >> 2] | 0) >>> 0 > (HEAP32[i11 + 20 >> 2] | 0) >>> 0;
    i24 = i8 ? 2 : 1;
    i25 = i8 ? i11 + 16 | 0 : i17;
   } else {
    i24 = 1;
    i25 = i17;
   }
   if ((HEAP32[i25 + 4 >> 2] | 0) >>> 0 <= (HEAP32[i11 + 4 >> 2] | 0) >>> 0) {
    i17 = i11;
    i8 = HEAP32[i17 >> 2] | 0;
    i20 = HEAP32[i17 + 4 >> 2] | 0;
    i17 = i24;
    i18 = i25;
    i23 = i11;
    while (1) {
     i19 = i23;
     i23 = i18;
     i26 = i23;
     i27 = HEAP32[i26 + 4 >> 2] | 0;
     i28 = i19;
     HEAP32[i28 >> 2] = HEAP32[i26 >> 2];
     HEAP32[i28 + 4 >> 2] = i27;
     if ((i22 | 0) < (i17 | 0)) break;
     i27 = i17 << 1 | 1;
     i28 = i11 + (i27 << 3) | 0;
     i26 = i28;
     i19 = i27 + 1 | 0;
     if ((i19 | 0) < (i21 | 0)) {
      i29 = i28 + 8 | 0;
      i28 = (HEAP32[i11 + (i27 << 3) + 4 >> 2] | 0) >>> 0 > (HEAP32[i29 + 4 >> 2] | 0) >>> 0;
      i30 = i28 ? i19 : i27;
      i31 = i28 ? i29 : i26;
     } else {
      i30 = i27;
      i31 = i26;
     }
     if ((HEAP32[i31 + 4 >> 2] | 0) >>> 0 > i20 >>> 0) break; else {
      i17 = i30;
      i18 = i31;
     }
    }
    i17 = i18;
    HEAP32[i17 >> 2] = i8;
    HEAP32[i17 + 4 >> 2] = i20;
   }
  }
  i6 = (HEAP32[i10 >> 2] | 0) + -8 | 0;
  HEAP32[i10 >> 2] = i6;
  i11 = HEAP32[i4 >> 2] | 0;
 } while ((i11 | 0) != (i6 | 0));
 i12 = HEAP32[i5 >> 2] | 0;
 __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh(i1, i4, i12, i2);
 i13 = HEAP32[i9 >> 2] | 0;
 i14 = HEAP32[i7 >> 2] | 0;
 i15 = i13 - i14 | 0;
 i16 = i15 >> 2;
 STACKTOP = i3;
 return i16 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i5 = i4 + 64 | 0;
 i6 = i4 + 40 | 0;
 i7 = i4 + 12 | 0;
 i8 = i4 + 24 | 0;
 i9 = i4;
 L1 : do if ((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 102 : 0) {
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 112:
   {
    i10 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1 + 2 | 0, i2, i5) | 0;
    i11 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i10, i2) | 0;
    if ((i11 | 0) != (i2 | 0) ? (HEAP8[i11 >> 0] | 0) == 95 : 0) {
     HEAP32[i8 >> 2] = 0;
     HEAP32[i8 + 4 >> 2] = 0;
     HEAP32[i8 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i8, i10, i11);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 51434) | 0;
     HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
     HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
     HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
     i10 = 0;
     while (1) {
      if ((i10 | 0) == 3) break;
      HEAP32[i8 + (i10 << 2) >> 2] = 0;
      i10 = i10 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
     i10 = i3 + 4 | 0;
     i12 = HEAP32[i10 >> 2] | 0;
     if (i12 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i12, i6);
      HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i6);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
     i13 = i11 + 1 | 0;
    } else i13 = i1;
    i14 = i13;
    break L1;
    break;
   }
  case 76:
   break;
  default:
   {
    i14 = i1;
    break L1;
   }
  }
  i10 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i1 + 2 | 0, i2) | 0;
  if ((((i10 | 0) != (i2 | 0) ? (HEAP8[i10 >> 0] | 0) == 112 : 0) ? (i12 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i10 + 1 | 0, i2, i5) | 0, i10 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i12, i2) | 0, (i10 | 0) != (i2 | 0)) : 0) ? (HEAP8[i10 >> 0] | 0) == 95 : 0) {
   HEAP32[i8 >> 2] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
   HEAP32[i8 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i8, i12, i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 51434) | 0;
   HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i8 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i9);
   i12 = i3 + 4 | 0;
   i11 = HEAP32[i12 >> 2] | 0;
   if (i11 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i11, i6);
    HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i6);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   i15 = i10 + 1 | 0;
  } else i15 = i1;
  i14 = i15;
 } else i14 = i1; while (0);
 STACKTOP = i4;
 return i14 | 0;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe(i1, i2, i3, i4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 992 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(992);
 i7 = i1 + 912 | 0;
 i8 = i1 + 904 | 0;
 i9 = i1 + 800 | 0;
 i10 = i1 + 984 | 0;
 i11 = i1 + 400 | 0;
 i12 = i1 + 980 | 0;
 i13 = i1 + 988 | 0;
 i14 = i1 + 976 | 0;
 i15 = i1 + 972 | 0;
 i16 = i1 + 960 | 0;
 i17 = i1 + 948 | 0;
 i18 = i1 + 936 | 0;
 i19 = i1 + 932 | 0;
 i20 = i1;
 i21 = i1 + 928 | 0;
 i22 = i1 + 920 | 0;
 i23 = i1 + 924 | 0;
 HEAP32[i10 >> 2] = i9;
 HEAPF64[i7 >> 3] = d6;
 i24 = _snprintf(i9, 100, 48850, i7) | 0;
 if (i24 >>> 0 > 99) {
  i9 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[i8 >> 3] = d6;
  i25 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i10, i9, 48850, i8) | 0;
  i8 = HEAP32[i10 >> 2] | 0;
  if (!i8) __ZSt17__throw_bad_allocv();
  i9 = _malloc(i25 << 2) | 0;
  if (!i9) __ZSt17__throw_bad_allocv(); else {
   i26 = i9;
   i27 = i25;
   i28 = i9;
   i29 = i8;
  }
 } else {
  i26 = i11;
  i27 = i24;
  i28 = 0;
  i29 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i12, i4);
 i24 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58516) | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i24 >> 2] | 0) + 48 >> 2] & 15](i24, i11, i11 + i27 | 0, i26) | 0;
 if (!i27) i30 = 0; else i30 = (HEAP8[HEAP32[i10 >> 2] >> 0] | 0) == 45;
 HEAP32[i16 >> 2] = 0;
 HEAP32[i16 + 4 >> 2] = 0;
 HEAP32[i16 + 8 >> 2] = 0;
 i10 = 0;
 while (1) {
  if ((i10 | 0) == 3) break;
  HEAP32[i16 + (i10 << 2) >> 2] = 0;
  i10 = i10 + 1 | 0;
 }
 HEAP32[i17 >> 2] = 0;
 HEAP32[i17 + 4 >> 2] = 0;
 HEAP32[i17 + 8 >> 2] = 0;
 i10 = 0;
 while (1) {
  if ((i10 | 0) == 3) break;
  HEAP32[i17 + (i10 << 2) >> 2] = 0;
  i10 = i10 + 1 | 0;
 }
 HEAP32[i18 >> 2] = 0;
 HEAP32[i18 + 4 >> 2] = 0;
 HEAP32[i18 + 8 >> 2] = 0;
 i10 = 0;
 while (1) {
  if ((i10 | 0) == 3) break;
  HEAP32[i18 + (i10 << 2) >> 2] = 0;
  i10 = i10 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i3, i30, i12, i13, i14, i15, i16, i17, i18, i19);
 i3 = HEAP32[i19 >> 2] | 0;
 if ((i27 | 0) > (i3 | 0)) {
  i19 = HEAP8[i18 + 8 + 3 >> 0] | 0;
  i10 = HEAP8[i17 + 8 + 3 >> 0] | 0;
  i31 = i10 << 24 >> 24 < 0 ? HEAP32[i17 + 4 >> 2] | 0 : i10 & 255;
  i32 = i3 + 1 + (i27 - i3 << 1) | 0;
  i33 = i19 << 24 >> 24 < 0 ? HEAP32[i18 + 4 >> 2] | 0 : i19 & 255;
 } else {
  i19 = HEAP8[i18 + 8 + 3 >> 0] | 0;
  i10 = HEAP8[i17 + 8 + 3 >> 0] | 0;
  i31 = i10 << 24 >> 24 < 0 ? HEAP32[i17 + 4 >> 2] | 0 : i10 & 255;
  i32 = i3 + 2 | 0;
  i33 = i19 << 24 >> 24 < 0 ? HEAP32[i18 + 4 >> 2] | 0 : i19 & 255;
 }
 i19 = i32 + i33 + i31 | 0;
 if (i19 >>> 0 > 100) {
  i31 = _malloc(i19 << 2) | 0;
  if (!i31) __ZSt17__throw_bad_allocv(); else {
   i34 = i31;
   i35 = i31;
  }
 } else {
  i34 = i20;
  i35 = 0;
 }
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i34, i21, i22, HEAP32[i4 + 4 >> 2] | 0, i26, i26 + (i27 << 2) | 0, i24, i30, i13, HEAP32[i14 >> 2] | 0, HEAP32[i15 >> 2] | 0, i16, i17, i18, i3);
 HEAP32[i23 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i21 >> 2] | 0;
 i21 = HEAP32[i22 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i23 >> 2];
 i23 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i34, i2, i21, i4, i5) | 0;
 if (i35 | 0) _free(i35);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i18);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i17);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i16);
 __ZNSt3__26localeD2Ev(i12);
 if (i28 | 0) _free(i28);
 if (i29 | 0) _free(i29);
 STACKTOP = i1;
 return i23 | 0;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5 + 20 | 0;
 i7 = i5 + 16 | 0;
 i8 = i5 + 12 | 0;
 i9 = i5 + 8 | 0;
 i10 = i5 + 4 | 0;
 i11 = i5;
 if (HEAP8[i3 + 100 >> 0] | 0) {
  HEAP32[i9 >> 2] = HEAP32[i1 + 76 >> 2];
  HEAP32[i10 >> 2] = HEAP32[i3 + 116 >> 2];
  HEAP32[i11 >> 2] = HEAP32[i3 + 120 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i7 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i6 >> 2] = HEAP32[i11 >> 2];
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPKiEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPiEEE4typeES8_SA_SA_(i1 + 72 | 0, i8, i7, i6) | 0;
  STACKTOP = i5;
  return;
 }
 HEAP32[i6 >> 2] = 0;
 i7 = i6 + 4 | 0;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 __ZNK6vision4NodeILi96EE7nearestERNSt3__26vectorIPKS1_NS2_9allocatorIS5_EEEERNS2_14priority_queueINS_17PriorityQueueItemILi96EEENS3_ISC_NS6_ISC_EEEENS2_4lessISC_EEEEPKh(i3, i6, i2, i4);
 i3 = HEAP32[i6 >> 2] | 0;
 i8 = i3;
 if ((HEAP32[i7 >> 2] | 0) == (i3 | 0)) i12 = i8; else {
  i3 = 0;
  i11 = i8;
  do {
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh(i1, i2, HEAP32[i11 + (i3 << 2) >> 2] | 0, i4);
   i3 = i3 + 1 | 0;
   i11 = HEAP32[i6 >> 2] | 0;
  } while (i3 >>> 0 < (HEAP32[i7 >> 2] | 0) - i11 >> 2 >>> 0);
  i12 = i11;
 }
 i11 = i1 + 100 | 0;
 if ((HEAP32[i11 >> 2] | 0) < (HEAP32[i1 + 104 >> 2] | 0) ? (i3 = HEAP32[i2 >> 2] | 0, i8 = i2 + 4 | 0, i10 = HEAP32[i8 >> 2] | 0, (i3 | 0) != (i10 | 0)) : 0) {
  i9 = HEAP32[i3 >> 2] | 0;
  i13 = i10 - i3 | 0;
  i14 = i13 >> 3;
  if ((i13 | 0) > 8 ? (i15 = i10 + -8 | 0, i10 = i3, i16 = HEAP32[i10 >> 2] | 0, i17 = HEAP32[i10 + 4 >> 2] | 0, i10 = i15, i18 = HEAP32[i10 + 4 >> 2] | 0, i19 = i3, HEAP32[i19 >> 2] = HEAP32[i10 >> 2], HEAP32[i19 + 4 >> 2] = i18, i18 = i15, HEAP32[i18 >> 2] = i16, HEAP32[i18 + 4 >> 2] = i17, i17 = i14 + -1 | 0, (i13 | 0) != 16) : 0) {
   i18 = (i14 + -3 | 0) / 2 | 0;
   i14 = i3 + 8 | 0;
   if ((i13 | 0) > 24) {
    i13 = (HEAP32[i3 + 12 >> 2] | 0) >>> 0 > (HEAP32[i3 + 20 >> 2] | 0) >>> 0;
    i20 = i13 ? 2 : 1;
    i21 = i13 ? i3 + 16 | 0 : i14;
   } else {
    i20 = 1;
    i21 = i14;
   }
   if ((HEAP32[i21 + 4 >> 2] | 0) >>> 0 <= (HEAP32[i3 + 4 >> 2] | 0) >>> 0) {
    i14 = i3;
    i13 = HEAP32[i14 >> 2] | 0;
    i16 = HEAP32[i14 + 4 >> 2] | 0;
    i14 = i20;
    i20 = i21;
    i21 = i3;
    while (1) {
     i15 = i21;
     i21 = i20;
     i19 = i21;
     i10 = HEAP32[i19 + 4 >> 2] | 0;
     i22 = i15;
     HEAP32[i22 >> 2] = HEAP32[i19 >> 2];
     HEAP32[i22 + 4 >> 2] = i10;
     if ((i18 | 0) < (i14 | 0)) break;
     i10 = i14 << 1 | 1;
     i22 = i3 + (i10 << 3) | 0;
     i19 = i22;
     i15 = i10 + 1 | 0;
     if ((i15 | 0) < (i17 | 0)) {
      i23 = i22 + 8 | 0;
      i22 = (HEAP32[i3 + (i10 << 3) + 4 >> 2] | 0) >>> 0 > (HEAP32[i23 + 4 >> 2] | 0) >>> 0;
      i24 = i22 ? i15 : i10;
      i25 = i22 ? i23 : i19;
     } else {
      i24 = i10;
      i25 = i19;
     }
     if ((HEAP32[i25 + 4 >> 2] | 0) >>> 0 > i16 >>> 0) break; else {
      i14 = i24;
      i20 = i25;
     }
    }
    i25 = i20;
    HEAP32[i25 >> 2] = i13;
    HEAP32[i25 + 4 >> 2] = i16;
   }
  }
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + -8;
  HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
  __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh(i1, i2, i9, i4);
  i26 = HEAP32[i6 >> 2] | 0;
 } else i26 = i12;
 if (i26 | 0) {
  HEAP32[i7 >> 2] = i26;
  __ZdlPv(i26);
 }
 STACKTOP = i5;
 return;
}

function _arglCameraFrustumRH(i1, d2, d3, i4) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, d27 = 0.0, i28 = 0, d29 = 0.0, i30 = 0, d31 = 0.0, i32 = 0, d33 = 0.0, i34 = 0, d35 = 0.0, i36 = 0, d37 = 0.0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 i6 = i5 + 224 | 0;
 i7 = i5 + 128 | 0;
 i8 = i5;
 i9 = HEAP32[i1 >> 2] | 0;
 i10 = HEAP32[i1 + 4 >> 2] | 0;
 if ((_arParamDecompMat(i1 + 8 | 0, i6, i7) | 0) < 0) {
  _arLog(0, 3, 18383, i5 + 320 | 0);
  STACKTOP = i5;
  return;
 } else {
  d11 = +(i10 + -1 | 0);
  i10 = i6 + 32 | 0;
  HEAPF64[i10 >> 3] = +HEAPF64[i6 + 64 >> 3] * d11 - +HEAPF64[i10 >> 3];
  i10 = i6 + 40 | 0;
  d12 = +HEAPF64[i6 + 72 >> 3] * d11 - +HEAPF64[i10 >> 3];
  HEAPF64[i10 >> 3] = d12;
  d13 = +HEAPF64[i6 + 80 >> 3];
  i10 = i6 + 48 | 0;
  d14 = d13 * d11 - +HEAPF64[i10 >> 3];
  HEAPF64[i10 >> 3] = d14;
  i10 = i6 + 56 | 0;
  HEAPF64[i10 >> 3] = +HEAPF64[i6 + 88 >> 3] * d11 - +HEAPF64[i10 >> 3];
  d15 = +HEAPF64[i6 + 8 >> 3] / d13;
  d16 = +HEAPF64[i6 + 16 >> 3] / d13;
  d17 = +(i9 + -1 | 0);
  d18 = +HEAPF64[i6 >> 3] / d13 * 2.0 / d17;
  HEAPF64[i8 >> 3] = d18;
  d19 = d15 * 2.0 / d17;
  HEAPF64[i8 + 8 >> 3] = d19;
  d15 = -(d16 * 2.0 / d17 + -1.0);
  HEAPF64[i8 + 16 >> 3] = d15;
  i6 = i8 + 24 | 0;
  d17 = -(d12 / d13 * 2.0 / d11);
  i9 = i8 + 40 | 0;
  HEAP32[i6 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  HEAP32[i6 + 8 >> 2] = 0;
  HEAP32[i6 + 12 >> 2] = 0;
  HEAPF64[i9 >> 3] = d17;
  d12 = -(d14 / d13 * 2.0 / d11 + -1.0);
  i6 = i8 + 48 | 0;
  HEAPF64[i6 >> 3] = d12;
  i10 = i8 + 56 | 0;
  d11 = d2 - d3;
  i1 = i8 + 80 | 0;
  HEAP32[i10 >> 2] = 0;
  HEAP32[i10 + 4 >> 2] = 0;
  HEAP32[i10 + 8 >> 2] = 0;
  HEAP32[i10 + 12 >> 2] = 0;
  HEAP32[i10 + 16 >> 2] = 0;
  HEAP32[i10 + 20 >> 2] = 0;
  HEAPF64[i1 >> 3] = (d2 + d3) / d11;
  i20 = i8 + 88 | 0;
  HEAPF64[i20 >> 3] = d3 * 2.0 * d2 / d11;
  i21 = i8 + 96 | 0;
  i22 = i8 + 112 | 0;
  HEAP32[i21 >> 2] = 0;
  HEAP32[i21 + 4 >> 2] = 0;
  HEAP32[i21 + 8 >> 2] = 0;
  HEAP32[i21 + 12 >> 2] = 0;
  HEAPF64[i22 >> 3] = -1.0;
  i23 = i8 + 120 | 0;
  HEAPF64[i23 >> 3] = 0.0;
  d11 = +HEAPF64[i7 + 24 >> 3];
  d2 = +HEAPF64[i7 + 56 >> 3];
  d3 = +HEAPF64[i7 + 88 >> 3];
  d13 = +HEAPF64[i7 >> 3];
  i24 = i7 + 32 | 0;
  d14 = +HEAPF64[i24 >> 3];
  i25 = i7 + 64 | 0;
  d16 = +HEAPF64[i25 >> 3];
  HEAPF64[i4 >> 3] = d18 * d13 + d19 * d14 + d16 * d15;
  i26 = i7 + 8 | 0;
  d27 = +HEAPF64[i26 >> 3];
  i28 = i7 + 40 | 0;
  d29 = +HEAPF64[i28 >> 3];
  i30 = i7 + 72 | 0;
  d31 = +HEAPF64[i30 >> 3];
  HEAPF64[i4 + 32 >> 3] = d18 * d27 + d19 * d29 + d31 * d15;
  i32 = i7 + 16 | 0;
  d33 = +HEAPF64[i32 >> 3];
  i34 = i7 + 48 | 0;
  d35 = +HEAPF64[i34 >> 3];
  i36 = i7 + 80 | 0;
  d37 = +HEAPF64[i36 >> 3];
  HEAPF64[i4 + 64 >> 3] = d18 * d33 + d19 * d35 + d37 * d15;
  HEAPF64[i4 + 96 >> 3] = d18 * d11 + d19 * d2 + d3 * d15 + 0.0;
  HEAPF64[i4 + 8 >> 3] = d13 * 0.0 + d14 * d17 + d16 * d12;
  HEAPF64[i4 + 40 >> 3] = d27 * 0.0 + d29 * d17 + d31 * d12;
  HEAPF64[i4 + 72 >> 3] = d33 * 0.0 + d35 * d17 + d37 * d12;
  HEAPF64[i4 + 104 >> 3] = +HEAPF64[i10 >> 3] + (d11 * 0.0 + +HEAPF64[i9 >> 3] * d2 + +HEAPF64[i6 >> 3] * d3);
  d12 = +HEAPF64[i8 + 64 >> 3];
  d17 = +HEAPF64[i8 + 72 >> 3];
  d15 = +HEAPF64[i1 >> 3];
  HEAPF64[i4 + 16 >> 3] = d12 * d13 + d17 * d14 + d15 * d16;
  HEAPF64[i4 + 48 >> 3] = d12 * d27 + d17 * d29 + d15 * d31;
  HEAPF64[i4 + 80 >> 3] = d12 * d33 + d17 * d35 + d15 * d37;
  HEAPF64[i4 + 112 >> 3] = +HEAPF64[i20 >> 3] + (d12 * d11 + d17 * d2 + d15 * d3);
  d15 = +HEAPF64[i21 >> 3];
  d17 = +HEAPF64[i8 + 104 >> 3];
  d12 = +HEAPF64[i22 >> 3];
  HEAPF64[i4 + 24 >> 3] = d15 * +HEAPF64[i7 >> 3] + d17 * +HEAPF64[i24 >> 3] + d12 * +HEAPF64[i25 >> 3];
  HEAPF64[i4 + 56 >> 3] = d15 * +HEAPF64[i26 >> 3] + d17 * +HEAPF64[i28 >> 3] + d12 * +HEAPF64[i30 >> 3];
  HEAPF64[i4 + 88 >> 3] = d15 * +HEAPF64[i32 >> 3] + d17 * +HEAPF64[i34 >> 3] + d12 * +HEAPF64[i36 >> 3];
  HEAPF64[i4 + 120 >> 3] = +HEAPF64[i23 >> 3] + (d15 * d11 + d17 * d2 + d12 * d3);
  STACKTOP = i5;
  return;
 }
}

function _try_realloc_chunk(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i4 & -8;
 i6 = i1 + i5 | 0;
 if (!(i4 & 3)) {
  if (i2 >>> 0 < 256) {
   i7 = 0;
   return i7 | 0;
  }
  if (i5 >>> 0 >= (i2 + 4 | 0) >>> 0 ? (i5 - i2 | 0) >>> 0 <= HEAP32[14350] << 1 >>> 0 : 0) {
   i7 = i1;
   return i7 | 0;
  }
  i7 = 0;
  return i7 | 0;
 }
 if (i5 >>> 0 >= i2 >>> 0) {
  i8 = i5 - i2 | 0;
  if (i8 >>> 0 <= 15) {
   i7 = i1;
   return i7 | 0;
  }
  i9 = i1 + i2 | 0;
  HEAP32[i3 >> 2] = i4 & 1 | i2 | 2;
  HEAP32[i9 + 4 >> 2] = i8 | 3;
  i10 = i6 + 4 | 0;
  HEAP32[i10 >> 2] = HEAP32[i10 >> 2] | 1;
  _dispose_chunk(i9, i8);
  i7 = i1;
  return i7 | 0;
 }
 if ((HEAP32[14236] | 0) == (i6 | 0)) {
  i8 = (HEAP32[14233] | 0) + i5 | 0;
  i9 = i8 - i2 | 0;
  i10 = i1 + i2 | 0;
  if (i8 >>> 0 <= i2 >>> 0) {
   i7 = 0;
   return i7 | 0;
  }
  HEAP32[i3 >> 2] = i4 & 1 | i2 | 2;
  HEAP32[i10 + 4 >> 2] = i9 | 1;
  HEAP32[14236] = i10;
  HEAP32[14233] = i9;
  i7 = i1;
  return i7 | 0;
 }
 if ((HEAP32[14235] | 0) == (i6 | 0)) {
  i9 = (HEAP32[14232] | 0) + i5 | 0;
  if (i9 >>> 0 < i2 >>> 0) {
   i7 = 0;
   return i7 | 0;
  }
  i10 = i9 - i2 | 0;
  if (i10 >>> 0 > 15) {
   i8 = i1 + i2 | 0;
   i11 = i1 + i9 | 0;
   HEAP32[i3 >> 2] = i4 & 1 | i2 | 2;
   HEAP32[i8 + 4 >> 2] = i10 | 1;
   HEAP32[i11 >> 2] = i10;
   i12 = i11 + 4 | 0;
   HEAP32[i12 >> 2] = HEAP32[i12 >> 2] & -2;
   i13 = i8;
   i14 = i10;
  } else {
   HEAP32[i3 >> 2] = i4 & 1 | i9 | 2;
   i10 = i1 + i9 + 4 | 0;
   HEAP32[i10 >> 2] = HEAP32[i10 >> 2] | 1;
   i13 = 0;
   i14 = 0;
  }
  HEAP32[14232] = i14;
  HEAP32[14235] = i13;
  i7 = i1;
  return i7 | 0;
 }
 i13 = HEAP32[i6 + 4 >> 2] | 0;
 if (i13 & 2 | 0) {
  i7 = 0;
  return i7 | 0;
 }
 i14 = (i13 & -8) + i5 | 0;
 if (i14 >>> 0 < i2 >>> 0) {
  i7 = 0;
  return i7 | 0;
 }
 i5 = i14 - i2 | 0;
 i10 = i13 >>> 3;
 do if (i13 >>> 0 < 256) {
  i9 = HEAP32[i6 + 8 >> 2] | 0;
  i8 = HEAP32[i6 + 12 >> 2] | 0;
  if ((i8 | 0) == (i9 | 0)) {
   HEAP32[14230] = HEAP32[14230] & ~(1 << i10);
   break;
  } else {
   HEAP32[i9 + 12 >> 2] = i8;
   HEAP32[i8 + 8 >> 2] = i9;
   break;
  }
 } else {
  i9 = HEAP32[i6 + 24 >> 2] | 0;
  i8 = HEAP32[i6 + 12 >> 2] | 0;
  do if ((i8 | 0) == (i6 | 0)) {
   i12 = i6 + 16 | 0;
   i11 = i12 + 4 | 0;
   i15 = HEAP32[i11 >> 2] | 0;
   if (!i15) {
    i16 = HEAP32[i12 >> 2] | 0;
    if (!i16) {
     i17 = 0;
     break;
    } else {
     i18 = i16;
     i19 = i12;
    }
   } else {
    i18 = i15;
    i19 = i11;
   }
   i11 = i18;
   i15 = i19;
   while (1) {
    i12 = i11 + 20 | 0;
    i16 = HEAP32[i12 >> 2] | 0;
    if (!i16) {
     i20 = i11 + 16 | 0;
     i21 = HEAP32[i20 >> 2] | 0;
     if (!i21) break; else {
      i22 = i21;
      i23 = i20;
     }
    } else {
     i22 = i16;
     i23 = i12;
    }
    i11 = i22;
    i15 = i23;
   }
   HEAP32[i15 >> 2] = 0;
   i17 = i11;
  } else {
   i12 = HEAP32[i6 + 8 >> 2] | 0;
   HEAP32[i12 + 12 >> 2] = i8;
   HEAP32[i8 + 8 >> 2] = i12;
   i17 = i8;
  } while (0);
  if (i9 | 0) {
   i8 = HEAP32[i6 + 28 >> 2] | 0;
   i12 = 57224 + (i8 << 2) | 0;
   if ((HEAP32[i12 >> 2] | 0) == (i6 | 0)) {
    HEAP32[i12 >> 2] = i17;
    if (!i17) {
     HEAP32[14231] = HEAP32[14231] & ~(1 << i8);
     break;
    }
   } else {
    i8 = i9 + 16 | 0;
    HEAP32[((HEAP32[i8 >> 2] | 0) == (i6 | 0) ? i8 : i9 + 20 | 0) >> 2] = i17;
    if (!i17) break;
   }
   HEAP32[i17 + 24 >> 2] = i9;
   i8 = i6 + 16 | 0;
   i12 = HEAP32[i8 >> 2] | 0;
   if (i12 | 0) {
    HEAP32[i17 + 16 >> 2] = i12;
    HEAP32[i12 + 24 >> 2] = i17;
   }
   i12 = HEAP32[i8 + 4 >> 2] | 0;
   if (i12 | 0) {
    HEAP32[i17 + 20 >> 2] = i12;
    HEAP32[i12 + 24 >> 2] = i17;
   }
  }
 } while (0);
 if (i5 >>> 0 < 16) {
  HEAP32[i3 >> 2] = i4 & 1 | i14 | 2;
  i17 = i1 + i14 + 4 | 0;
  HEAP32[i17 >> 2] = HEAP32[i17 >> 2] | 1;
  i7 = i1;
  return i7 | 0;
 } else {
  i17 = i1 + i2 | 0;
  HEAP32[i3 >> 2] = i4 & 1 | i2 | 2;
  HEAP32[i17 + 4 >> 2] = i5 | 3;
  i2 = i1 + i14 + 4 | 0;
  HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
  _dispose_chunk(i17, i5);
  i7 = i1;
  return i7 | 0;
 }
 return 0;
}

function _jpeg_idct_float(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i7 = i6;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i1 = i7;
 i9 = HEAP32[i2 + 80 >> 2] | 0;
 i2 = i3;
 i3 = 8;
 while (1) {
  i10 = HEAP16[i2 + 16 >> 1] | 0;
  i11 = HEAP16[i2 + 32 >> 1] | 0;
  if (!((i10 | i11) << 16 >> 16)) if (((((HEAP16[i2 + 48 >> 1] | 0) == 0 ? (HEAP16[i2 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[i2 + 112 >> 1] | 0) == 0 : 0) {
   d12 = +HEAPF32[i9 >> 2] * +(HEAP16[i2 >> 1] | 0);
   HEAPF32[i1 >> 2] = d12;
   HEAPF32[i1 + 32 >> 2] = d12;
   HEAPF32[i1 + 64 >> 2] = d12;
   HEAPF32[i1 + 96 >> 2] = d12;
   HEAPF32[i1 + 128 >> 2] = d12;
   HEAPF32[i1 + 160 >> 2] = d12;
   HEAPF32[i1 + 192 >> 2] = d12;
   d13 = d12;
   i14 = 56;
  } else {
   i15 = 0;
   i16 = 9;
  } else {
   i15 = i11;
   i16 = 9;
  }
  if ((i16 | 0) == 9) {
   i16 = 0;
   d12 = +HEAPF32[i9 >> 2] * +(HEAP16[i2 >> 1] | 0);
   d17 = +HEAPF32[i9 + 64 >> 2] * +(i15 << 16 >> 16);
   d18 = +HEAPF32[i9 + 128 >> 2] * +(HEAP16[i2 + 64 >> 1] | 0);
   d19 = +HEAPF32[i9 + 192 >> 2] * +(HEAP16[i2 + 96 >> 1] | 0);
   d20 = d12 + d18;
   d21 = d12 - d18;
   d18 = d17 + d19;
   d12 = (d17 - d19) * 1.4142135381698608 - d18;
   d19 = d20 + d18;
   d17 = d20 - d18;
   d18 = d21 + d12;
   d20 = d21 - d12;
   d12 = +HEAPF32[i9 + 32 >> 2] * +(i10 << 16 >> 16);
   d21 = +HEAPF32[i9 + 96 >> 2] * +(HEAP16[i2 + 48 >> 1] | 0);
   d22 = +HEAPF32[i9 + 160 >> 2] * +(HEAP16[i2 + 80 >> 1] | 0);
   d23 = +HEAPF32[i9 + 224 >> 2] * +(HEAP16[i2 + 112 >> 1] | 0);
   d24 = d21 + d22;
   d25 = d22 - d21;
   d21 = d12 + d23;
   d22 = d12 - d23;
   d23 = d24 + d21;
   d12 = (d25 + d22) * 1.8477590084075928;
   d26 = d12 - d25 * 2.613126039505005 - d23;
   d25 = (d21 - d24) * 1.4142135381698608 - d26;
   d24 = d22 * 1.0823922157287598 - d12 + d25;
   HEAPF32[i1 >> 2] = d19 + d23;
   HEAPF32[i1 + 224 >> 2] = d19 - d23;
   HEAPF32[i1 + 32 >> 2] = d18 + d26;
   HEAPF32[i1 + 192 >> 2] = d18 - d26;
   HEAPF32[i1 + 64 >> 2] = d20 + d25;
   HEAPF32[i1 + 160 >> 2] = d20 - d25;
   HEAPF32[i1 + 128 >> 2] = d17 + d24;
   d13 = d17 - d24;
   i14 = 24;
  }
  HEAPF32[i1 + (i14 << 2) >> 2] = d13;
  if (i3 >>> 0 > 1) {
   i1 = i1 + 4 | 0;
   i9 = i9 + 4 | 0;
   i2 = i2 + 2 | 0;
   i3 = i3 + -1 | 0;
  } else break;
 }
 i3 = i8 + 128 | 0;
 i8 = 0;
 i2 = i7;
 while (1) {
  i7 = (HEAP32[i4 + (i8 << 2) >> 2] | 0) + i5 | 0;
  d13 = +HEAPF32[i2 >> 2];
  d24 = +HEAPF32[i2 + 16 >> 2];
  d17 = d13 + d24;
  d25 = d13 - d24;
  d24 = +HEAPF32[i2 + 8 >> 2];
  d13 = +HEAPF32[i2 + 24 >> 2];
  d20 = d24 + d13;
  d26 = (d24 - d13) * 1.4142135381698608 - d20;
  d13 = d17 + d20;
  d24 = d17 - d20;
  d20 = d25 + d26;
  d17 = d25 - d26;
  d26 = +HEAPF32[i2 + 20 >> 2];
  d25 = +HEAPF32[i2 + 12 >> 2];
  d18 = d26 + d25;
  d23 = d26 - d25;
  d25 = +HEAPF32[i2 + 4 >> 2];
  d26 = +HEAPF32[i2 + 28 >> 2];
  d19 = d25 + d26;
  d12 = d25 - d26;
  d26 = d18 + d19;
  d25 = (d23 + d12) * 1.8477590084075928;
  d22 = d25 - d23 * 2.613126039505005 - d26;
  d23 = (d19 - d18) * 1.4142135381698608 - d22;
  d18 = d12 * 1.0823922157287598 - d25 + d23;
  HEAP8[i7 >> 0] = HEAP8[i3 + ((~~(d13 + d26) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i7 + 7 >> 0] = HEAP8[i3 + ((~~(d13 - d26) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i7 + 1 >> 0] = HEAP8[i3 + ((~~(d20 + d22) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i7 + 6 >> 0] = HEAP8[i3 + ((~~(d20 - d22) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i7 + 2 >> 0] = HEAP8[i3 + ((~~(d17 + d23) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i7 + 5 >> 0] = HEAP8[i3 + ((~~(d17 - d23) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i7 + 4 >> 0] = HEAP8[i3 + ((~~(d24 + d18) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[i7 + 3 >> 0] = HEAP8[i3 + ((~~(d24 - d18) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  i8 = i8 + 1 | 0;
  if ((i8 | 0) == 8) break; else i2 = i2 + 32 | 0;
 }
 STACKTOP = i6;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 48 | 0;
 i6 = i4 + 24 | 0;
 i7 = i4;
 i8 = i4 + 12 | 0;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 90 : 0) ? (i9 = i1 + 2 | 0, (HEAP8[i9 >> 0] | 0) == 84) : 0) ? (i10 = i3 + 4 | 0, i11 = ((HEAP32[i10 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0, i12 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i9, i2, i3) | 0, i2 = ((HEAP32[i10 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0, (i12 | 0) != (i9 | 0)) : 0) {
  HEAP32[i5 >> 2] = 0;
  HEAP32[i5 + 4 >> 2] = 0;
  HEAP32[i5 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, 50456, __ZNSt3__211char_traitsIcE6lengthEPKc(50456) | 0);
  L7 : do if ((i11 | 0) != (i2 | 0)) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i6, (HEAP32[i3 >> 2] | 0) + (i11 * 24 | 0) | 0);
   i9 = HEAP8[i6 + 11 >> 0] | 0;
   i13 = i9 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i5, i13 ? HEAP32[i6 >> 2] | 0 : i6, i13 ? HEAP32[i6 + 4 >> 2] | 0 : i9 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   i9 = i6 + 11 | 0;
   i13 = i6 + 4 | 0;
   i14 = i11;
   while (1) {
    i15 = i14 + 1 | 0;
    if ((i15 | 0) == (i2 | 0)) break L7;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, (HEAP32[i3 >> 2] | 0) + (i15 * 24 | 0) | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 50467) | 0;
    HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
    i16 = 0;
    while (1) {
     if ((i16 | 0) == 3) break;
     HEAP32[i7 + (i16 << 2) >> 2] = 0;
     i16 = i16 + 1 | 0;
    }
    i16 = HEAP8[i9 >> 0] | 0;
    i17 = i16 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i5, i17 ? HEAP32[i6 >> 2] | 0 : i6, i17 ? HEAP32[i13 >> 2] | 0 : i16 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    i14 = i15;
   }
  } while (0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5, 50243) | 0;
  i7 = i2;
  while (1) {
   if ((i7 | 0) == (i11 | 0)) break;
   i2 = HEAP32[i10 >> 2] | 0;
   i14 = 0;
   while (1) {
    if ((i14 | 0) == -1) break;
    i13 = i14 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i13 * 24 | 0) | 0);
    i14 = i13;
   }
   HEAP32[i10 >> 2] = i2 + -24;
   i7 = i7 + -1 | 0;
  }
  HEAP32[i8 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  i7 = 0;
  while (1) {
   if ((i7 | 0) == 3) break;
   HEAP32[i5 + (i7 << 2) >> 2] = 0;
   i7 = i7 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i8);
  i7 = HEAP32[i10 >> 2] | 0;
  if (i7 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i6);
   HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i6);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  i18 = i12;
 } else i18 = i1;
 STACKTOP = i4;
 return i18 | 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce(i1, i2, i3, i4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 i7 = i1 + 336 | 0;
 i8 = i1 + 328 | 0;
 i9 = i1 + 224 | 0;
 i10 = i1 + 400 | 0;
 i11 = i1 + 112 | 0;
 i12 = i1 + 396 | 0;
 i13 = i1 + 408 | 0;
 i14 = i1 + 405 | 0;
 i15 = i1 + 404 | 0;
 i16 = i1 + 384 | 0;
 i17 = i1 + 372 | 0;
 i18 = i1 + 360 | 0;
 i19 = i1 + 356 | 0;
 i20 = i1;
 i21 = i1 + 352 | 0;
 i22 = i1 + 344 | 0;
 i23 = i1 + 348 | 0;
 HEAP32[i10 >> 2] = i9;
 HEAPF64[i7 >> 3] = d6;
 i24 = _snprintf(i9, 100, 48850, i7) | 0;
 if (i24 >>> 0 > 99) {
  i9 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[i8 >> 3] = d6;
  i25 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i10, i9, 48850, i8) | 0;
  i8 = HEAP32[i10 >> 2] | 0;
  if (!i8) __ZSt17__throw_bad_allocv();
  i9 = _malloc(i25) | 0;
  if (!i9) __ZSt17__throw_bad_allocv(); else {
   i26 = i9;
   i27 = i25;
   i28 = i9;
   i29 = i8;
  }
 } else {
  i26 = i11;
  i27 = i24;
  i28 = 0;
  i29 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i12, i4);
 i24 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58484) | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i24 >> 2] | 0) + 32 >> 2] & 15](i24, i11, i11 + i27 | 0, i26) | 0;
 if (!i27) i30 = 0; else i30 = (HEAP8[HEAP32[i10 >> 2] >> 0] | 0) == 45;
 HEAP32[i16 >> 2] = 0;
 HEAP32[i16 + 4 >> 2] = 0;
 HEAP32[i16 + 8 >> 2] = 0;
 i10 = 0;
 while (1) {
  if ((i10 | 0) == 3) break;
  HEAP32[i16 + (i10 << 2) >> 2] = 0;
  i10 = i10 + 1 | 0;
 }
 HEAP32[i17 >> 2] = 0;
 HEAP32[i17 + 4 >> 2] = 0;
 HEAP32[i17 + 8 >> 2] = 0;
 i10 = 0;
 while (1) {
  if ((i10 | 0) == 3) break;
  HEAP32[i17 + (i10 << 2) >> 2] = 0;
  i10 = i10 + 1 | 0;
 }
 HEAP32[i18 >> 2] = 0;
 HEAP32[i18 + 4 >> 2] = 0;
 HEAP32[i18 + 8 >> 2] = 0;
 i10 = 0;
 while (1) {
  if ((i10 | 0) == 3) break;
  HEAP32[i18 + (i10 << 2) >> 2] = 0;
  i10 = i10 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i3, i30, i12, i13, i14, i15, i16, i17, i18, i19);
 i3 = HEAP32[i19 >> 2] | 0;
 if ((i27 | 0) > (i3 | 0)) {
  i19 = HEAP8[i18 + 11 >> 0] | 0;
  i10 = HEAP8[i17 + 11 >> 0] | 0;
  i31 = i10 << 24 >> 24 < 0 ? HEAP32[i17 + 4 >> 2] | 0 : i10 & 255;
  i32 = i3 + 1 + (i27 - i3 << 1) | 0;
  i33 = i19 << 24 >> 24 < 0 ? HEAP32[i18 + 4 >> 2] | 0 : i19 & 255;
 } else {
  i19 = HEAP8[i18 + 11 >> 0] | 0;
  i10 = HEAP8[i17 + 11 >> 0] | 0;
  i31 = i10 << 24 >> 24 < 0 ? HEAP32[i17 + 4 >> 2] | 0 : i10 & 255;
  i32 = i3 + 2 | 0;
  i33 = i19 << 24 >> 24 < 0 ? HEAP32[i18 + 4 >> 2] | 0 : i19 & 255;
 }
 i19 = i32 + i33 + i31 | 0;
 if (i19 >>> 0 > 100) {
  i31 = _malloc(i19) | 0;
  if (!i31) __ZSt17__throw_bad_allocv(); else {
   i34 = i31;
   i35 = i31;
  }
 } else {
  i34 = i20;
  i35 = 0;
 }
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i34, i21, i22, HEAP32[i4 + 4 >> 2] | 0, i26, i26 + i27 | 0, i24, i30, i13, HEAP8[i14 >> 0] | 0, HEAP8[i15 >> 0] | 0, i16, i17, i18, i3);
 HEAP32[i23 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i21 >> 2] | 0;
 i21 = HEAP32[i22 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i23 >> 2];
 i23 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i34, i2, i21, i4, i5) | 0;
 if (i35 | 0) _free(i35);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i16);
 __ZNSt3__26localeD2Ev(i12);
 if (i28 | 0) _free(i28);
 if (i29 | 0) _free(i29);
 STACKTOP = i1;
 return i23 | 0;
}

function _icpUpdateMat(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, i22 = 0, i23 = 0, d24 = 0.0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 i4 = i3 + 96 | 0;
 i5 = i3;
 d6 = +HEAPF64[i2 >> 3];
 d7 = +HEAPF64[i2 + 8 >> 3];
 d8 = +HEAPF64[i2 + 16 >> 3];
 d9 = d6 * d6 + d7 * d7 + d8 * d8;
 if (d9 == 0.0) {
  d10 = 0.0;
  d11 = 0.0;
  d12 = 1.0;
  d13 = 0.0;
 } else {
  d14 = +Math_sqrt(+d9);
  d10 = d14;
  d11 = d8 / d14;
  d12 = d6 / d14;
  d13 = d7 / d14;
 }
 d14 = +HEAPF64[i2 + 24 >> 3];
 d7 = +HEAPF64[i2 + 32 >> 3];
 d6 = +HEAPF64[i2 + 40 >> 3];
 d8 = +Math_cos(+d10);
 d9 = 1.0 - d8;
 d15 = +Math_sin(+d10);
 d10 = d8 + d12 * d12 * d9;
 HEAPF64[i4 >> 3] = d10;
 d16 = d13 * d12 * d9;
 d17 = d11 * d15;
 d18 = d16 - d17;
 i2 = i4 + 8 | 0;
 HEAPF64[i2 >> 3] = d18;
 d19 = d12 * d11 * d9;
 d20 = d13 * d15;
 d21 = d20 + d19;
 i22 = i4 + 16 | 0;
 HEAPF64[i22 >> 3] = d21;
 i23 = i4 + 24 | 0;
 HEAPF64[i23 >> 3] = d14;
 d24 = d17 + d16;
 i25 = i4 + 32 | 0;
 HEAPF64[i25 >> 3] = d24;
 d16 = d8 + d13 * d13 * d9;
 i26 = i4 + 40 | 0;
 HEAPF64[i26 >> 3] = d16;
 d17 = d13 * d11 * d9;
 d13 = d12 * d15;
 d15 = d17 - d13;
 i27 = i4 + 48 | 0;
 HEAPF64[i27 >> 3] = d15;
 i28 = i4 + 56 | 0;
 HEAPF64[i28 >> 3] = d7;
 d12 = d19 - d20;
 HEAPF64[i4 + 64 >> 3] = d12;
 d20 = d13 + d17;
 i29 = i4 + 72 | 0;
 HEAPF64[i29 >> 3] = d20;
 d17 = d8 + d11 * d11 * d9;
 i30 = i4 + 80 | 0;
 HEAPF64[i30 >> 3] = d17;
 i31 = i4 + 88 | 0;
 HEAPF64[i31 >> 3] = d6;
 d9 = +HEAPF64[i1 >> 3];
 d11 = +HEAPF64[i1 + 8 >> 3];
 d8 = +HEAPF64[i1 + 16 >> 3];
 HEAPF64[i5 >> 3] = d9 * d10 + d11 * d24 + d8 * d12;
 HEAPF64[i5 + 8 >> 3] = d9 * d18 + d11 * d16 + d8 * d20;
 HEAPF64[i5 + 16 >> 3] = d9 * d21 + d11 * d15 + d8 * d17;
 HEAPF64[i5 + 24 >> 3] = +HEAPF64[i1 + 24 >> 3] + (d9 * d14 + d11 * d7 + d8 * d6);
 i32 = i1 + 32 | 0;
 d8 = +HEAPF64[i32 >> 3];
 d11 = +HEAPF64[i1 + 40 >> 3];
 d9 = +HEAPF64[i1 + 48 >> 3];
 i33 = i5 + 32 | 0;
 HEAPF64[i33 >> 3] = d8 * d10 + d11 * d24 + d9 * d12;
 HEAPF64[i5 + 40 >> 3] = d8 * d18 + d11 * d16 + d9 * d20;
 HEAPF64[i5 + 48 >> 3] = d8 * d21 + d11 * d15 + d9 * d17;
 HEAPF64[i5 + 56 >> 3] = +HEAPF64[i1 + 56 >> 3] + (d8 * d14 + d11 * d7 + d9 * d6);
 i34 = i1 + 64 | 0;
 d6 = +HEAPF64[i34 >> 3];
 d9 = +HEAPF64[i1 + 72 >> 3];
 d7 = +HEAPF64[i1 + 80 >> 3];
 i35 = i5 + 64 | 0;
 HEAPF64[i35 >> 3] = d6 * +HEAPF64[i4 >> 3] + d9 * +HEAPF64[i25 >> 3] + d7 * d12;
 HEAPF64[i5 + 72 >> 3] = d6 * +HEAPF64[i2 >> 3] + d9 * +HEAPF64[i26 >> 3] + d7 * +HEAPF64[i29 >> 3];
 HEAPF64[i5 + 80 >> 3] = d6 * +HEAPF64[i22 >> 3] + d9 * +HEAPF64[i27 >> 3] + d7 * +HEAPF64[i30 >> 3];
 HEAPF64[i5 + 88 >> 3] = +HEAPF64[i1 + 88 >> 3] + (d6 * +HEAPF64[i23 >> 3] + d9 * +HEAPF64[i28 >> 3] + d7 * +HEAPF64[i31 >> 3]);
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i1 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
 HEAP32[i1 + 16 >> 2] = HEAP32[i5 + 16 >> 2];
 HEAP32[i1 + 20 >> 2] = HEAP32[i5 + 20 >> 2];
 HEAP32[i1 + 24 >> 2] = HEAP32[i5 + 24 >> 2];
 HEAP32[i1 + 28 >> 2] = HEAP32[i5 + 28 >> 2];
 HEAP32[i32 >> 2] = HEAP32[i33 >> 2];
 HEAP32[i32 + 4 >> 2] = HEAP32[i33 + 4 >> 2];
 HEAP32[i32 + 8 >> 2] = HEAP32[i33 + 8 >> 2];
 HEAP32[i32 + 12 >> 2] = HEAP32[i33 + 12 >> 2];
 HEAP32[i32 + 16 >> 2] = HEAP32[i33 + 16 >> 2];
 HEAP32[i32 + 20 >> 2] = HEAP32[i33 + 20 >> 2];
 HEAP32[i32 + 24 >> 2] = HEAP32[i33 + 24 >> 2];
 HEAP32[i32 + 28 >> 2] = HEAP32[i33 + 28 >> 2];
 HEAP32[i34 >> 2] = HEAP32[i35 >> 2];
 HEAP32[i34 + 4 >> 2] = HEAP32[i35 + 4 >> 2];
 HEAP32[i34 + 8 >> 2] = HEAP32[i35 + 8 >> 2];
 HEAP32[i34 + 12 >> 2] = HEAP32[i35 + 12 >> 2];
 HEAP32[i34 + 16 >> 2] = HEAP32[i35 + 16 >> 2];
 HEAP32[i34 + 20 >> 2] = HEAP32[i35 + 20 >> 2];
 HEAP32[i34 + 24 >> 2] = HEAP32[i35 + 24 >> 2];
 HEAP32[i34 + 28 >> 2] = HEAP32[i35 + 28 >> 2];
 STACKTOP = i3;
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4 + 16 | 0;
 i6 = i4;
 L1 : do if ((i2 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 84 : 0) {
  i7 = HEAP8[i1 + 1 >> 0] | 0;
  if (i7 << 24 >> 24 == 95) {
   i8 = HEAP32[i3 + 36 >> 2] | 0;
   if ((HEAP32[i3 + 32 >> 2] | 0) == (i8 | 0)) {
    i9 = i1;
    break;
   }
   i10 = HEAP32[i8 + -16 >> 2] | 0;
   if ((i10 | 0) == (HEAP32[i8 + -12 >> 2] | 0)) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm3EEERAT__Kc(i5);
    i8 = i3 + 4 | 0;
    i11 = HEAP32[i8 >> 2] | 0;
    if (i11 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i11, i5);
     HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    HEAP8[i3 + 62 >> 0] = 1;
    i9 = i1 + 2 | 0;
    break;
   }
   i8 = HEAP32[i10 + 4 >> 2] | 0;
   i11 = i3 + 4 | 0;
   i12 = i3 + 8 | 0;
   i13 = HEAP32[i10 >> 2] | 0;
   while (1) {
    if ((i13 | 0) == (i8 | 0)) break;
    i10 = HEAP32[i11 >> 2] | 0;
    if ((i10 | 0) == (HEAP32[i12 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i3, i13); else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i10, i13);
     HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 24;
    }
    i13 = i13 + 24 | 0;
   }
   i9 = i1 + 2 | 0;
   break;
  }
  i13 = (i7 << 24 >> 24) + -48 | 0;
  if (i13 >>> 0 < 10) {
   i11 = i13;
   i13 = i1 + 2 | 0;
   while (1) {
    if ((i13 | 0) == (i2 | 0)) {
     i9 = i1;
     break L1;
    }
    i14 = HEAP8[i13 >> 0] | 0;
    i12 = (i14 << 24 >> 24) + -48 | 0;
    if (i12 >>> 0 >= 10) break;
    i11 = i12 + (i11 * 10 | 0) | 0;
    i13 = i13 + 1 | 0;
   }
   if (i14 << 24 >> 24 == 95 ? (i7 = HEAP32[i3 + 36 >> 2] | 0, (HEAP32[i3 + 32 >> 2] | 0) != (i7 | 0)) : 0) {
    i12 = i11 + 1 | 0;
    i8 = HEAP32[i7 + -16 >> 2] | 0;
    i10 = i8;
    if (i12 >>> 0 >= (HEAP32[i7 + -12 >> 2] | 0) - i8 >> 4 >>> 0) {
     i8 = i13 + 1 | 0;
     HEAP32[i6 >> 2] = 0;
     HEAP32[i6 + 4 >> 2] = 0;
     HEAP32[i6 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i6, i1, i8);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
     i7 = i3 + 4 | 0;
     i15 = HEAP32[i7 >> 2] | 0;
     if (i15 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i15, i5);
      HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     HEAP8[i3 + 62 >> 0] = 1;
     i9 = i8;
     break;
    }
    i8 = HEAP32[i10 + (i12 << 4) + 4 >> 2] | 0;
    i7 = i3 + 4 | 0;
    i15 = i3 + 8 | 0;
    i16 = HEAP32[i10 + (i12 << 4) >> 2] | 0;
    while (1) {
     if ((i16 | 0) == (i8 | 0)) break;
     i12 = HEAP32[i7 >> 2] | 0;
     if ((i12 | 0) == (HEAP32[i15 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i3, i16); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i12, i16);
      HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
     }
     i16 = i16 + 24 | 0;
    }
    i9 = i13 + 1 | 0;
   } else i9 = i1;
  } else i9 = i1;
 } else i9 = i1; while (0);
 STACKTOP = i4;
 return i9 | 0;
}

function _ar2Tracking2d(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, d33 = 0.0, i34 = 0, i35 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i3 = i2 + 24 | 0;
 i4 = i2;
 i5 = i2 + 32 | 0;
 i6 = i2 + 28 | 0;
 i7 = _threadGetArg(i1) | 0;
 i8 = _threadGetID(i1) | 0;
 HEAP32[i4 >> 2] = i8;
 _arLog(0, 1, 19961, i4);
 if ((_threadStartWait(i1) | 0) < 0) {
  HEAP32[i3 >> 2] = i8;
  _arLog(0, 1, 19989, i3);
  STACKTOP = i2;
  return 0;
 }
 i9 = i7 + 4 | 0;
 i10 = i7 + 8 | 0;
 i11 = i7 + 12 | 0;
 i12 = i7 + 16 | 0;
 i13 = i7 + 20 | 0;
 i14 = i7 + 24 | 0;
 i15 = i7 + 48 | 0;
 i16 = i7 + 28 | 0;
 i17 = i7 + 32 | 0;
 i18 = i7 + 36 | 0;
 i19 = i7 + 40 | 0;
 i20 = i7 + 44 | 0;
 do {
  i21 = HEAP32[i7 >> 2] | 0;
  i22 = HEAP32[i9 >> 2] | 0;
  i23 = HEAP32[i10 >> 2] | 0;
  i24 = HEAP32[i11 >> 2] | 0;
  i25 = HEAP32[i12 >> 2] | 0;
  i26 = HEAP32[i23 >> 2] | 0;
  i27 = HEAP32[i23 + 4 >> 2] | 0;
  i28 = HEAP32[i23 + 8 >> 2] | 0;
  i23 = HEAP32[i13 >> 2] | 0;
  if (!i23) {
   i29 = _ar2GenTemplate(HEAP32[i21 + 28 >> 2] | 0, HEAP32[i21 + 32 >> 2] | 0) | 0;
   HEAP32[i13 >> 2] = i29;
   i30 = i29;
  } else i30 = i23;
  i23 = i21 + 12 | 0;
  i29 = i21 + 48 + (i26 * 48 | 0) | 0;
  i31 = HEAP32[i22 >> 2] | 0;
  if ((_ar2SetTemplateSub(HEAP32[i23 >> 2] | 0, i29, HEAP32[i31 + (i26 * 112 | 0) >> 2] | 0, (HEAP32[HEAP32[i31 + (i26 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i27 * 20 | 0) | 0, i28, i30) | 0) >= 0 ? (i31 = HEAP32[i13 >> 2] | 0, i32 = HEAP32[i31 + 28 >> 2] | 0, d33 = +(Math_imul(i32, i32) | 0), !(+(Math_imul((HEAP32[i31 + 16 >> 2] | 0) + 1 + (HEAP32[i31 + 20 >> 2] | 0) | 0, (HEAP32[i31 + 8 >> 2] | 0) + 1 + (HEAP32[i31 + 12 >> 2] | 0) | 0) | 0) * 5.0 * 5.0 > d33)) : 0) {
   i31 = HEAP32[i22 + 152 >> 2] | 0;
   do if ((i31 | 0) != 1) {
    i32 = HEAP32[i23 >> 2] | 0;
    i34 = i21 + 528 + (i26 * 48 | 0) | 0;
    if ((i31 | 0) == 2) {
     _ar2GetSearchPoint(i32, i29, i34, 0, (HEAP32[(HEAP32[HEAP32[(HEAP32[i22 >> 2] | 0) + (i26 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i27 * 20 | 0) >> 2] | 0) + (i28 * 20 | 0) | 0, i4);
     break;
    } else {
     _ar2GetSearchPoint(i32, i29, i34, i21 + 1008 + (i26 * 48 | 0) | 0, (HEAP32[(HEAP32[HEAP32[(HEAP32[i22 >> 2] | 0) + (i26 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i27 * 20 | 0) >> 2] | 0) + (i28 * 20 | 0) | 0, i4);
     break;
    }
   } else _ar2GetSearchPoint(HEAP32[i23 >> 2] | 0, i29, 0, 0, (HEAP32[(HEAP32[HEAP32[(HEAP32[i22 >> 2] | 0) + (i26 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i27 * 20 | 0) >> 2] | 0) + (i28 * 20 | 0) | 0, i4); while (0);
   i29 = HEAP32[i21 + 24 >> 2] | 0;
   if ((_ar2GetBestMatching(i24, i25, HEAP32[i21 + 4 >> 2] | 0, HEAP32[i21 + 8 >> 2] | 0, HEAP32[i21 + 20 >> 2] | 0, HEAP32[i13 >> 2] | 0, i29, i29, i4, i5, i6, i14) | 0) >= 0) {
    HEAPF32[i16 >> 2] = +(HEAP32[i5 >> 2] | 0);
    HEAPF32[i17 >> 2] = +(HEAP32[i6 >> 2] | 0);
    i29 = HEAP32[i22 >> 2] | 0;
    i23 = HEAP32[(HEAP32[HEAP32[i29 + (i26 * 112 | 0) + 4 >> 2] >> 2] | 0) + (i27 * 20 | 0) >> 2] | 0;
    i31 = i23 + (i28 * 20 | 0) + 8 | 0;
    i34 = i23 + (i28 * 20 | 0) + 12 | 0;
    HEAPF32[i18 >> 2] = +HEAPF32[i29 + (i26 * 112 | 0) + 24 >> 2] + (+HEAPF32[i29 + (i26 * 112 | 0) + 12 >> 2] * +HEAPF32[i31 >> 2] + +HEAPF32[i29 + (i26 * 112 | 0) + 16 >> 2] * +HEAPF32[i34 >> 2]);
    HEAPF32[i19 >> 2] = +HEAPF32[i29 + (i26 * 112 | 0) + 40 >> 2] + (+HEAPF32[i29 + (i26 * 112 | 0) + 28 >> 2] * +HEAPF32[i31 >> 2] + +HEAPF32[i29 + (i26 * 112 | 0) + 32 >> 2] * +HEAPF32[i34 >> 2]);
    HEAPF32[i20 >> 2] = +HEAPF32[i29 + (i26 * 112 | 0) + 56 >> 2] + (+HEAPF32[i29 + (i26 * 112 | 0) + 44 >> 2] * +HEAPF32[i31 >> 2] + +HEAPF32[i29 + (i26 * 112 | 0) + 48 >> 2] * +HEAPF32[i34 >> 2]);
    i35 = 0;
   } else i35 = -1;
  } else i35 = -1;
  HEAP32[i15 >> 2] = i35;
  _threadEndSignal(i1) | 0;
 } while ((_threadStartWait(i1) | 0) >= 0);
 HEAP32[i3 >> 2] = i8;
 _arLog(0, 1, 19989, i3);
 STACKTOP = i2;
 return 0;
}

function _process_data_context_main(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i5 = i1 + 424 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i7 = i6 + 48 | 0;
 do if (!(HEAP32[i7 >> 2] | 0)) if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 + 428 >> 2] | 0) + 12 >> 2] & 63](i1, HEAP32[i6 + 56 + (HEAP32[i6 + 64 >> 2] << 2) >> 2] | 0) | 0)) return; else {
  HEAP32[i7 >> 2] = 1;
  i8 = i6 + 76 | 0;
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
  break;
 } while (0);
 i8 = i6 + 68 | 0;
 switch (HEAP32[i8 >> 2] | 0) {
 case 2:
  {
   i9 = i6 + 52 | 0;
   i10 = i6 + 72 | 0;
   FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i1 + 432 >> 2] | 0) + 4 >> 2] & 7](i1, HEAP32[i6 + 56 + (HEAP32[i6 + 64 >> 2] << 2) >> 2] | 0, i9, HEAP32[i10 >> 2] | 0, i2, i3, i4);
   if ((HEAP32[i9 >> 2] | 0) >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) return;
   HEAP32[i8 >> 2] = 0;
   if ((HEAP32[i3 >> 2] | 0) >>> 0 < i4 >>> 0) {
    i11 = i9;
    i12 = i10;
    i13 = 9;
   } else return;
   break;
  }
 case 0:
  {
   i11 = i6 + 52 | 0;
   i12 = i6 + 72 | 0;
   i13 = 9;
   break;
  }
 case 1:
  {
   i14 = i6 + 52 | 0;
   i15 = i6 + 72 | 0;
   break;
  }
 default:
  return;
 }
 if ((i13 | 0) == 9) {
  HEAP32[i11 >> 2] = 0;
  i13 = HEAP32[i1 + 316 >> 2] | 0;
  HEAP32[i12 >> 2] = i13 + -1;
  if ((HEAP32[i6 + 76 >> 2] | 0) == (HEAP32[i1 + 320 >> 2] | 0) ? (i10 = HEAP32[i5 >> 2] | 0, i9 = HEAP32[i1 + 36 >> 2] | 0, (i9 | 0) > 0) : 0) {
   i16 = i10 + 72 | 0;
   i17 = i10 + 56 + (HEAP32[i10 + 64 >> 2] << 2) | 0;
   i10 = HEAP32[i1 + 216 >> 2] | 0;
   i18 = 0;
   while (1) {
    i19 = Math_imul(HEAP32[i10 + 36 >> 2] | 0, HEAP32[i10 + 12 >> 2] | 0) | 0;
    i20 = (i19 | 0) / (i13 | 0) | 0;
    i21 = ((HEAP32[i10 + 44 >> 2] | 0) >>> 0) % (i19 >>> 0) | 0;
    i22 = (i21 | 0) == 0 ? i19 : i21;
    if (!i18) HEAP32[i16 >> 2] = ((i22 + -1 | 0) / (i20 | 0) | 0) + 1;
    i21 = HEAP32[(HEAP32[i17 >> 2] | 0) + (i18 << 2) >> 2] | 0;
    i19 = i20 << 1;
    if ((i20 | 0) > 0) {
     i20 = i21 + (i22 + -1 << 2) | 0;
     i23 = 0;
     do {
      HEAP32[i21 + (i23 + i22 << 2) >> 2] = HEAP32[i20 >> 2];
      i23 = i23 + 1 | 0;
     } while ((i23 | 0) < (i19 | 0));
    }
    i18 = i18 + 1 | 0;
    if ((i18 | 0) == (i9 | 0)) break; else i10 = i10 + 84 | 0;
   }
  }
  HEAP32[i8 >> 2] = 1;
  i14 = i11;
  i15 = i12;
 }
 i12 = i6 + 64 | 0;
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i1 + 432 >> 2] | 0) + 4 >> 2] & 7](i1, HEAP32[i6 + 56 + (HEAP32[i12 >> 2] << 2) >> 2] | 0, i14, HEAP32[i15 >> 2] | 0, i2, i3, i4);
 if ((HEAP32[i14 >> 2] | 0) >>> 0 < (HEAP32[i15 >> 2] | 0) >>> 0) return;
 if ((HEAP32[i6 + 76 >> 2] | 0) == 1) {
  i6 = HEAP32[i5 >> 2] | 0;
  i5 = HEAP32[i1 + 316 >> 2] | 0;
  i4 = HEAP32[i1 + 36 >> 2] | 0;
  if ((i4 | 0) > 0) {
   i3 = i6 + 56 | 0;
   i2 = i6 + 60 | 0;
   i6 = i5 + 1 | 0;
   i11 = i5 + 2 | 0;
   i10 = HEAP32[i1 + 216 >> 2] | 0;
   i9 = 0;
   while (1) {
    i18 = (Math_imul(HEAP32[i10 + 36 >> 2] | 0, HEAP32[i10 + 12 >> 2] | 0) | 0) / (i5 | 0) | 0;
    i17 = HEAP32[(HEAP32[i3 >> 2] | 0) + (i9 << 2) >> 2] | 0;
    i16 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i9 << 2) >> 2] | 0;
    if ((i18 | 0) > 0) {
     i13 = Math_imul(i18, i6) | 0;
     i19 = Math_imul(i18, i11) | 0;
     i23 = 0;
     do {
      i20 = i23 + i13 | 0;
      i22 = i23 - i18 | 0;
      HEAP32[i17 + (i22 << 2) >> 2] = HEAP32[i17 + (i20 << 2) >> 2];
      HEAP32[i16 + (i22 << 2) >> 2] = HEAP32[i16 + (i20 << 2) >> 2];
      i20 = i23 + i19 | 0;
      HEAP32[i17 + (i20 << 2) >> 2] = HEAP32[i17 + (i23 << 2) >> 2];
      HEAP32[i16 + (i20 << 2) >> 2] = HEAP32[i16 + (i23 << 2) >> 2];
      i23 = i23 + 1 | 0;
     } while ((i23 | 0) != (i18 | 0));
    }
    i9 = i9 + 1 | 0;
    if ((i9 | 0) == (i4 | 0)) {
     i24 = i5;
     break;
    } else i10 = i10 + 84 | 0;
   }
  } else i24 = i5;
 } else i24 = HEAP32[i1 + 316 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i12 >> 2] ^ 1;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i14 >> 2] = i24 + 1;
 HEAP32[i15 >> 2] = i24 + 2;
 HEAP32[i8 >> 2] = 2;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector23findFeatureOrientationsEPKNS_25GaussianScaleSpacePyramidE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i3 + 36 | 0;
 i5 = i3;
 if (!(HEAP8[i1 + 28 >> 0] | 0)) {
  i6 = HEAP32[i1 + 64 >> 2] | 0;
  i7 = HEAP32[i1 + 60 >> 2] | 0;
  i8 = i7;
  if ((i6 | 0) == (i7 | 0)) {
   STACKTOP = i3;
   return;
  }
  i9 = (i6 - i7 | 0) / 36 | 0;
  i7 = 0;
  do {
   HEAPF32[i8 + (i7 * 36 | 0) + 8 >> 2] = 0.0;
   i7 = i7 + 1 | 0;
  } while (i7 >>> 0 < i9 >>> 0);
  STACKTOP = i3;
  return;
 }
 i9 = i1 + 72 | 0;
 i7 = i1 + 76 | 0;
 HEAP32[i7 >> 2] = HEAP32[i9 >> 2];
 i8 = i1 + 60 | 0;
 i6 = i1 + 64 | 0;
 __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm(i9, (HEAP32[i6 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) | 0);
 i10 = i1 + 92 | 0;
 __ZN6vision21OrientationAssignment16computeGradientsEPKNS_25GaussianScaleSpacePyramidE(i10, i2);
 i11 = HEAP32[i6 >> 2] | 0;
 i12 = HEAP32[i8 >> 2] | 0;
 if ((i11 | 0) == (i12 | 0)) {
  i13 = i11;
  i14 = i11;
  i15 = i1 + 80 | 0;
 } else {
  i11 = i1 + 144 | 0;
  i16 = i5 + 8 | 0;
  i17 = i1 + 80 | 0;
  i18 = 0;
  i19 = i12;
  while (1) {
   i12 = i19;
   i20 = HEAP32[i12 + (i18 * 36 | 0) + 12 >> 2] | 0;
   d21 = 1.0 / +(1 << i20 | 0);
   d22 = d21 * .5 + -.5;
   d23 = +HEAPF32[i12 + (i18 * 36 | 0) >> 2] * d21 + d22;
   d24 = +HEAPF32[i12 + (i18 * 36 | 0) + 4 >> 2] * d21 + d22;
   d22 = +HEAPF32[i12 + (i18 * 36 | 0) + 28 >> 2] * d21;
   i12 = (__ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, i20, 0) | 0) + 4 | 0;
   d21 = +(((HEAP32[i12 >> 2] | 0) + -1 | 0) >>> 0);
   if (!(d23 < 0.0)) if (d23 > d21) d25 = d21; else d25 = d23; else d25 = 0.0;
   i12 = (__ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, HEAP32[(HEAP32[i8 >> 2] | 0) + (i18 * 36 | 0) + 12 >> 2] | 0, 0) | 0) + 8 | 0;
   d23 = +(((HEAP32[i12 >> 2] | 0) + -1 | 0) >>> 0);
   if (!(d24 < 0.0)) if (d24 > d23) d26 = d23; else d26 = d24; else d26 = 0.0;
   i12 = HEAP32[i8 >> 2] | 0;
   __ZN6vision21OrientationAssignment7computeEPfRiiifff(i10, HEAP32[i11 >> 2] | 0, i4, HEAP32[i12 + (i18 * 36 | 0) + 12 >> 2] | 0, HEAP32[i12 + (i18 * 36 | 0) + 16 >> 2] | 0, d25, d26, d22);
   i12 = HEAP32[i4 >> 2] | 0;
   if ((i12 | 0) > 0) {
    i20 = 0;
    i27 = i12;
    while (1) {
     i12 = i5;
     i28 = (HEAP32[i8 >> 2] | 0) + (i18 * 36 | 0) | 0;
     i29 = i12 + 36 | 0;
     do {
      HEAP32[i12 >> 2] = HEAP32[i28 >> 2];
      i12 = i12 + 4 | 0;
      i28 = i28 + 4 | 0;
     } while ((i12 | 0) < (i29 | 0));
     HEAP32[i16 >> 2] = HEAP32[(HEAP32[i11 >> 2] | 0) + (i20 << 2) >> 2];
     i30 = HEAP32[i7 >> 2] | 0;
     if ((i30 | 0) == (HEAP32[i17 >> 2] | 0)) {
      __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i9, i5);
      i31 = HEAP32[i4 >> 2] | 0;
     } else {
      i12 = i30;
      i28 = i5;
      i29 = i12 + 36 | 0;
      do {
       HEAP32[i12 >> 2] = HEAP32[i28 >> 2];
       i12 = i12 + 4 | 0;
       i28 = i28 + 4 | 0;
      } while ((i12 | 0) < (i29 | 0));
      HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 36;
      i31 = i27;
     }
     i20 = i20 + 1 | 0;
     if ((i20 | 0) >= (i31 | 0)) break; else i27 = i31;
    }
   }
   i18 = i18 + 1 | 0;
   i27 = HEAP32[i6 >> 2] | 0;
   i20 = HEAP32[i8 >> 2] | 0;
   if (i18 >>> 0 >= ((i27 - i20 | 0) / 36 | 0) >>> 0) {
    i13 = i20;
    i14 = i27;
    i15 = i17;
    break;
   } else i19 = i20;
  }
 }
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i9 >> 2] = i13;
 HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i14;
 i14 = i1 + 68 | 0;
 i1 = HEAP32[i14 >> 2] | 0;
 HEAP32[i14 >> 2] = HEAP32[i15 >> 2];
 HEAP32[i15 >> 2] = i1;
 STACKTOP = i3;
 return;
}

function _ar2ReadFeatureSet(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 640 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(640);
 i4 = i3 + 624 | 0;
 i5 = i3 + 616 | 0;
 i6 = i3 + 608 | 0;
 i7 = i3 + 600 | 0;
 i8 = i3 + 592 | 0;
 i9 = i3 + 584 | 0;
 i10 = i3 + 576 | 0;
 i11 = i3 + 568 | 0;
 i12 = i3 + 560 | 0;
 i13 = i3 + 552 | 0;
 i14 = i3 + 544 | 0;
 i15 = i3 + 536 | 0;
 i16 = i3 + 520 | 0;
 i17 = i3 + 512 | 0;
 i18 = i3;
 HEAP32[i17 >> 2] = i1;
 HEAP32[i17 + 4 >> 2] = i2;
 _sprintf(i18, 20527, i17) | 0;
 i17 = _fopen(i18, 20119) | 0;
 if (!i17) {
  HEAP32[i16 >> 2] = i1;
  _arLog(0, 3, 19647, i16);
  i19 = 0;
  STACKTOP = i3;
  return i19 | 0;
 }
 i16 = _malloc(8) | 0;
 if (!i16) {
  _arLog(0, 3, 20510, i3 + 528 | 0);
  _exit(1);
 }
 i1 = i16 + 4 | 0;
 L8 : do if ((_fread(i1, 4, 1, i17) | 0) == 1) {
  i18 = HEAP32[i1 >> 2] | 0;
  i2 = _malloc(i18 * 20 | 0) | 0;
  HEAP32[i16 >> 2] = i2;
  if (!i2) {
   _arLog(0, 3, 20510, i14);
   _exit(1);
  }
  if ((i18 | 0) > 0) {
   i20 = 0;
   L14 : while (1) {
    if ((_fread(i2 + (i20 * 20 | 0) + 8 | 0, 4, 1, i17) | 0) != 1) {
     i21 = 12;
     break;
    }
    if ((_fread(i2 + (i20 * 20 | 0) + 12 | 0, 4, 1, i17) | 0) != 1) {
     i21 = 14;
     break;
    }
    if ((_fread(i2 + (i20 * 20 | 0) + 16 | 0, 4, 1, i17) | 0) != 1) {
     i21 = 16;
     break;
    }
    i22 = i2 + (i20 * 20 | 0) + 4 | 0;
    if ((_fread(i22, 4, 1, i17) | 0) != 1) {
     i21 = 18;
     break;
    }
    i23 = HEAP32[i22 >> 2] | 0;
    i24 = _malloc(i23 * 20 | 0) | 0;
    i25 = i2 + (i20 * 20 | 0) | 0;
    HEAP32[i25 >> 2] = i24;
    if (!i24) {
     i21 = 20;
     break;
    }
    L21 : do if ((i23 | 0) > 0) {
     if ((_fread(i24, 4, 1, i17) | 0) != 1) {
      i21 = 26;
      break L14;
     }
     i26 = 0;
     while (1) {
      if ((_fread((HEAP32[i25 >> 2] | 0) + (i26 * 20 | 0) + 4 | 0, 4, 1, i17) | 0) != 1) {
       i21 = 28;
       break L14;
      }
      if ((_fread((HEAP32[i25 >> 2] | 0) + (i26 * 20 | 0) + 8 | 0, 4, 1, i17) | 0) != 1) {
       i21 = 30;
       break L14;
      }
      if ((_fread((HEAP32[i25 >> 2] | 0) + (i26 * 20 | 0) + 12 | 0, 4, 1, i17) | 0) != 1) {
       i21 = 32;
       break L14;
      }
      if ((_fread((HEAP32[i25 >> 2] | 0) + (i26 * 20 | 0) + 16 | 0, 4, 1, i17) | 0) != 1) {
       i21 = 34;
       break L14;
      }
      i26 = i26 + 1 | 0;
      if ((i26 | 0) >= (HEAP32[i22 >> 2] | 0)) break L21;
      if ((_fread((HEAP32[i25 >> 2] | 0) + (i26 * 20 | 0) | 0, 4, 1, i17) | 0) != 1) {
       i21 = 26;
       break L14;
      }
     }
    } while (0);
    i25 = i20 + 1 | 0;
    if ((i25 | 0) < (i18 | 0)) i20 = i25; else {
     i27 = i16;
     break L8;
    }
   }
   switch (i21 | 0) {
   case 12:
    {
     _arLog(0, 3, 19668, i13);
     break;
    }
   case 14:
    {
     _arLog(0, 3, 19668, i12);
     break;
    }
   case 16:
    {
     _arLog(0, 3, 19668, i11);
     break;
    }
   case 18:
    {
     _arLog(0, 3, 19668, i10);
     break;
    }
   case 20:
    {
     _arLog(0, 3, 20510, i9);
     _exit(1);
     break;
    }
   case 26:
    {
     _arLog(0, 3, 19668, i8);
     break;
    }
   case 28:
    {
     _arLog(0, 3, 19668, i7);
     break;
    }
   case 30:
    {
     _arLog(0, 3, 19668, i6);
     break;
    }
   case 32:
    {
     _arLog(0, 3, 19668, i5);
     break;
    }
   case 34:
    {
     _arLog(0, 3, 19668, i4);
     break;
    }
   }
   if (i20 | 0) {
    i18 = 0;
    do {
     _free(HEAP32[i2 + (i18 * 20 | 0) >> 2] | 0);
     i18 = i18 + 1 | 0;
    } while ((i18 | 0) != (i20 | 0));
   }
   _free(i2);
   i21 = 40;
  } else i27 = i16;
 } else {
  _arLog(0, 3, 19668, i15);
  i21 = 40;
 } while (0);
 if ((i21 | 0) == 40) {
  _free(i16);
  i27 = 0;
 }
 _fclose(i17) | 0;
 i19 = i27;
 STACKTOP = i3;
 return i19 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4 + 12 | 0;
 i6 = i4;
 L1 : do if (((((i2 - i1 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 99 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 108 : 0) ? (i7 = i1 + 2 | 0, i8 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0, !((i8 | 0) == (i7 | 0) | (i8 | 0) == (i2 | 0))) : 0) ? (i7 = i3 + 4 | 0, i9 = HEAP32[i7 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i9 | 0)) : 0) {
  i10 = i9 + -12 | 0;
  i11 = HEAP8[i10 + 11 >> 0] | 0;
  i12 = i11 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9 + -24 | 0, i12 ? HEAP32[i10 >> 2] | 0 : i10, i12 ? HEAP32[i9 + -8 >> 2] | 0 : i11 & 255) | 0;
  HEAP32[i6 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  HEAP32[i6 + 8 >> 2] = 0;
  i11 = 0;
  while (1) {
   if ((i11 | 0) == 3) break;
   HEAP32[i6 + (i11 << 2) >> 2] = 0;
   i11 = i11 + 1 | 0;
  }
  i11 = HEAP32[i7 >> 2] | 0;
  i9 = i11 + -12 | 0;
  i12 = i9 + 11 | 0;
  if ((HEAP8[i12 >> 0] | 0) < 0) {
   i10 = HEAP32[i9 >> 2] | 0;
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i10, i5);
   HEAP32[i11 + -8 >> 2] = 0;
  } else {
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i5);
   HEAP8[i12 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i9);
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i9 = 0;
  while (1) {
   if ((i9 | 0) == 3) break;
   HEAP32[i6 + (i9 << 2) >> 2] = 0;
   i9 = i9 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i7 >> 2] | 0) + -24 | 0, 50245) | 0;
  i9 = i5 + 11 | 0;
  i12 = i5 + 4 | 0;
  i11 = 0;
  i10 = i8;
  while (1) {
   if ((HEAP8[i10 >> 0] | 0) == 69) break;
   i13 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i10, i2, i3) | 0;
   if ((i13 | 0) == (i10 | 0) | (i13 | 0) == (i2 | 0)) {
    i14 = i1;
    break L1;
   }
   i15 = HEAP32[i7 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i15 | 0)) {
    i14 = i1;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i15 + -24 | 0);
   i15 = HEAP32[i7 >> 2] | 0;
   i16 = 0;
   while (1) {
    if ((i16 | 0) == -1) break;
    i17 = i16 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i15 + (i17 * 24 | 0) | 0);
    i16 = i17;
   }
   i16 = i15 + -24 | 0;
   HEAP32[i7 >> 2] = i16;
   i17 = HEAP8[i9 >> 0] | 0;
   i18 = i17 << 24 >> 24 < 0;
   i19 = i18 ? HEAP32[i12 >> 2] | 0 : i17 & 255;
   if (i19) if ((HEAP32[i3 >> 2] | 0) == (i16 | 0)) {
    i20 = 0;
    i21 = i1;
    i22 = i10;
   } else {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i15 + -48 | 0, i18 ? HEAP32[i5 >> 2] | 0 : i5, i19) | 0;
    i20 = 1;
    i21 = i11;
    i22 = i13;
   } else {
    i20 = 1;
    i21 = i11;
    i22 = i13;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   if (i20) {
    i11 = i21;
    i10 = i22;
   } else {
    i14 = i21;
    break L1;
   }
  }
  i11 = HEAP32[i7 >> 2] | 0;
  if ((HEAP32[i3 >> 2] | 0) != (i11 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11 + -24 | 0, 50243) | 0;
   i14 = i10 + 1 | 0;
  } else i14 = i1;
 } else i14 = i1; while (0);
 STACKTOP = i4;
 return i14 | 0;
}

function _examine_app0(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i5 = i4 + i3 | 0;
 if (i3 >>> 0 > 13) {
  if ((HEAP8[i2 >> 0] | 0) == 74) if ((((HEAP8[i2 + 1 >> 0] | 0) == 70 ? (HEAP8[i2 + 2 >> 0] | 0) == 73 : 0) ? (HEAP8[i2 + 3 >> 0] | 0) == 70 : 0) ? (HEAP8[i2 + 4 >> 0] | 0) == 0 : 0) {
   HEAP32[i1 + 280 >> 2] = 1;
   i4 = HEAP8[i2 + 5 >> 0] | 0;
   i6 = i1 + 284 | 0;
   HEAP8[i6 >> 0] = i4;
   i7 = HEAP8[i2 + 6 >> 0] | 0;
   i8 = i1 + 285 | 0;
   HEAP8[i8 >> 0] = i7;
   i9 = HEAP8[i2 + 7 >> 0] | 0;
   i10 = i1 + 286 | 0;
   HEAP8[i10 >> 0] = i9;
   i11 = (HEAPU8[i2 + 8 >> 0] << 8 | HEAPU8[i2 + 9 >> 0]) & 65535;
   i12 = i1 + 288 | 0;
   HEAP16[i12 >> 1] = i11;
   i13 = (HEAPU8[i2 + 10 >> 0] << 8 | HEAPU8[i2 + 11 >> 0]) & 65535;
   i14 = i1 + 290 | 0;
   HEAP16[i14 >> 1] = i13;
   if (i4 << 24 >> 24 == 1) {
    i15 = i1;
    i16 = 1;
    i17 = i7;
    i18 = i11;
    i19 = i13;
    i20 = i9;
   } else {
    i9 = HEAP32[i1 >> 2] | 0;
    HEAP32[i9 + 20 >> 2] = 119;
    HEAP32[i9 + 24 >> 2] = i4 & 255;
    HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = HEAPU8[i8 >> 0];
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, -1);
    i15 = i1;
    i16 = HEAP8[i6 >> 0] | 0;
    i17 = HEAP8[i8 >> 0] | 0;
    i18 = HEAP16[i12 >> 1] | 0;
    i19 = HEAP16[i14 >> 1] | 0;
    i20 = HEAP8[i10 >> 0] | 0;
   }
   i10 = HEAP32[i1 >> 2] | 0;
   HEAP32[i10 + 24 >> 2] = i16 & 255;
   HEAP32[i10 + 28 >> 2] = i17 & 255;
   HEAP32[i10 + 32 >> 2] = i18 & 65535;
   HEAP32[i10 + 36 >> 2] = i19 & 65535;
   HEAP32[i10 + 40 >> 2] = i20 & 255;
   HEAP32[i10 + 20 >> 2] = 87;
   FUNCTION_TABLE_vii[HEAP32[i10 + 4 >> 2] & 63](i15, 1);
   i10 = i2 + 12 | 0;
   i20 = HEAP8[i10 >> 0] | 0;
   i19 = i2 + 13 | 0;
   i18 = HEAP8[i19 >> 0] | 0;
   if (!((i18 | i20) << 24 >> 24)) {
    i21 = i20;
    i22 = i18;
   } else {
    i18 = HEAP32[i1 >> 2] | 0;
    HEAP32[i18 + 20 >> 2] = 90;
    HEAP32[i18 + 24 >> 2] = HEAPU8[i10 >> 0];
    HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = HEAPU8[i19 >> 0];
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i15, 1);
    i21 = HEAP8[i10 >> 0] | 0;
    i22 = HEAP8[i19 >> 0] | 0;
   }
   i19 = i5 + -14 | 0;
   if ((i19 | 0) == (Math_imul((i21 & 255) * 3 | 0, i22 & 255) | 0)) return;
   i22 = HEAP32[i1 >> 2] | 0;
   HEAP32[i22 + 20 >> 2] = 88;
   HEAP32[i22 + 24 >> 2] = i19;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i15, 1);
   return;
  } else i23 = 16;
 } else if (i3 >>> 0 > 5 ? (HEAP8[i2 >> 0] | 0) == 74 : 0) i23 = 16;
 if (((((i23 | 0) == 16 ? (HEAP8[i2 + 1 >> 0] | 0) == 70 : 0) ? (HEAP8[i2 + 2 >> 0] | 0) == 88 : 0) ? (HEAP8[i2 + 3 >> 0] | 0) == 88 : 0) ? (HEAP8[i2 + 4 >> 0] | 0) == 0 : 0) {
  i23 = i2 + 5 | 0;
  switch (HEAP8[i23 >> 0] | 0) {
  case 16:
   {
    i2 = HEAP32[i1 >> 2] | 0;
    HEAP32[i2 + 20 >> 2] = 108;
    HEAP32[i2 + 24 >> 2] = i5;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
    return;
   }
  case 17:
   {
    i2 = HEAP32[i1 >> 2] | 0;
    HEAP32[i2 + 20 >> 2] = 109;
    HEAP32[i2 + 24 >> 2] = i5;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
    return;
   }
  case 19:
   {
    i2 = HEAP32[i1 >> 2] | 0;
    HEAP32[i2 + 20 >> 2] = 110;
    HEAP32[i2 + 24 >> 2] = i5;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
    return;
   }
  default:
   {
    i2 = HEAP32[i1 >> 2] | 0;
    HEAP32[i2 + 20 >> 2] = 89;
    HEAP32[i2 + 24 >> 2] = HEAPU8[i23 >> 0];
    HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i5;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
    return;
   }
  }
 }
 i23 = HEAP32[i1 >> 2] | 0;
 HEAP32[i23 + 20 >> 2] = 77;
 HEAP32[i23 + 24 >> 2] = i5;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i5 = i4 + 88 | 0;
 i6 = i4 + 64 | 0;
 i7 = i4 + 36 | 0;
 i8 = i4 + 48 | 0;
 i9 = i4 + 24 | 0;
 i10 = i4 + 12 | 0;
 i11 = i4;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 114 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i12 = i1 + 2 | 0, i13 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0, (i13 | 0) != (i12 | 0)) : 0) ? (i12 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i13, i2, i3) | 0, (i12 | 0) != (i13 | 0)) : 0) ? (i13 = i3 + 4 | 0, i2 = HEAP32[i13 >> 2] | 0, ((i2 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i2 + -24 | 0);
  i2 = HEAP32[i13 >> 2] | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == -1) break;
   i14 = i3 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i14 * 24 | 0) | 0);
   i3 = i14;
  }
  HEAP32[i13 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i2 + -48 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 50495) | 0;
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i11 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50492) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i10 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  i2 = HEAP8[i5 + 11 >> 0] | 0;
  i3 = i2 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i3 ? HEAP32[i5 >> 2] | 0 : i5, i3 ? HEAP32[i5 + 4 >> 2] | 0 : i2 & 255) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i9 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50243) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i8 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i13 >> 2] | 0) + -24 | 0, i6);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  i15 = i12;
 } else i15 = i1;
 STACKTOP = i4;
 return i15 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i5 = i4 + 88 | 0;
 i6 = i4 + 64 | 0;
 i7 = i4 + 36 | 0;
 i8 = i4 + 48 | 0;
 i9 = i4 + 24 | 0;
 i10 = i4 + 12 | 0;
 i11 = i4;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 100 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i12 = i1 + 2 | 0, i13 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0, (i13 | 0) != (i12 | 0)) : 0) ? (i12 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i13, i2, i3) | 0, (i12 | 0) != (i13 | 0)) : 0) ? (i13 = i3 + 4 | 0, i2 = HEAP32[i13 >> 2] | 0, ((i2 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i2 + -24 | 0);
  i2 = HEAP32[i13 >> 2] | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == -1) break;
   i14 = i3 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i14 * 24 | 0) | 0);
   i3 = i14;
  }
  HEAP32[i13 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i2 + -48 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 51395) | 0;
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i11 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50492) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i10 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  i2 = HEAP8[i5 + 11 >> 0] | 0;
  i3 = i2 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i3 ? HEAP32[i5 >> 2] | 0 : i5, i3 ? HEAP32[i5 + 4 >> 2] | 0 : i2 & 255) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i9 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50243) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i8 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i13 >> 2] | 0) + -24 | 0, i6);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  i15 = i12;
 } else i15 = i1;
 STACKTOP = i4;
 return i15 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i5 = i4 + 88 | 0;
 i6 = i4 + 64 | 0;
 i7 = i4 + 36 | 0;
 i8 = i4 + 48 | 0;
 i9 = i4 + 24 | 0;
 i10 = i4 + 12 | 0;
 i11 = i4;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i12 = i1 + 2 | 0, i13 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0, (i13 | 0) != (i12 | 0)) : 0) ? (i12 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i13, i2, i3) | 0, (i12 | 0) != (i13 | 0)) : 0) ? (i13 = i3 + 4 | 0, i2 = HEAP32[i13 >> 2] | 0, ((i2 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i2 + -24 | 0);
  i2 = HEAP32[i13 >> 2] | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == -1) break;
   i14 = i3 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i14 * 24 | 0) | 0);
   i3 = i14;
  }
  HEAP32[i13 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i2 + -48 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 50479) | 0;
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i11 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50492) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i10 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  i2 = HEAP8[i5 + 11 >> 0] | 0;
  i3 = i2 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i3 ? HEAP32[i5 >> 2] | 0 : i5, i3 ? HEAP32[i5 + 4 >> 2] | 0 : i2 & 255) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i9 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50243) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i8 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i13 >> 2] | 0) + -24 | 0, i6);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  i15 = i12;
 } else i15 = i1;
 STACKTOP = i4;
 return i15 | 0;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(480);
 i7 = i1 + 464 | 0;
 i8 = i1 + 460 | 0;
 i9 = i1 + 468 | 0;
 i10 = i1 + 456 | 0;
 i11 = i1 + 452 | 0;
 i12 = i1 + 440 | 0;
 i13 = i1 + 428 | 0;
 i14 = i1 + 416 | 0;
 i15 = i1 + 412 | 0;
 i16 = i1;
 i17 = i1 + 408 | 0;
 i18 = i1 + 404 | 0;
 i19 = i1 + 400 | 0;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58516) | 0;
 i21 = i6 + 8 + 3 | 0;
 i22 = HEAP8[i21 >> 0] | 0;
 i23 = i22 << 24 >> 24 < 0;
 i24 = i6 + 4 | 0;
 if (!((i23 ? HEAP32[i24 >> 2] | 0 : i22 & 255) | 0)) i25 = 0; else {
  i22 = HEAP32[(i23 ? HEAP32[i6 >> 2] | 0 : i6) >> 2] | 0;
  i25 = (i22 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 44 >> 2] & 63](i20, 45) | 0);
 };
 HEAP32[i12 >> 2] = 0;
 HEAP32[i12 + 4 >> 2] = 0;
 HEAP32[i12 + 8 >> 2] = 0;
 i22 = 0;
 while (1) {
  if ((i22 | 0) == 3) break;
  HEAP32[i12 + (i22 << 2) >> 2] = 0;
  i22 = i22 + 1 | 0;
 }
 HEAP32[i13 >> 2] = 0;
 HEAP32[i13 + 4 >> 2] = 0;
 HEAP32[i13 + 8 >> 2] = 0;
 i22 = 0;
 while (1) {
  if ((i22 | 0) == 3) break;
  HEAP32[i13 + (i22 << 2) >> 2] = 0;
  i22 = i22 + 1 | 0;
 }
 HEAP32[i14 >> 2] = 0;
 HEAP32[i14 + 4 >> 2] = 0;
 HEAP32[i14 + 8 >> 2] = 0;
 i22 = 0;
 while (1) {
  if ((i22 | 0) == 3) break;
  HEAP32[i14 + (i22 << 2) >> 2] = 0;
  i22 = i22 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i3, i25, i8, i9, i10, i11, i12, i13, i14, i15);
 i3 = HEAP8[i21 >> 0] | 0;
 i21 = i3 << 24 >> 24 < 0;
 i22 = i21 ? HEAP32[i24 >> 2] | 0 : i3 & 255;
 i3 = HEAP32[i15 >> 2] | 0;
 if ((i22 | 0) > (i3 | 0)) {
  i15 = HEAP8[i14 + 8 + 3 >> 0] | 0;
  i24 = HEAP8[i13 + 8 + 3 >> 0] | 0;
  i26 = i24 << 24 >> 24 < 0 ? HEAP32[i13 + 4 >> 2] | 0 : i24 & 255;
  i27 = i3 + 1 + (i22 - i3 << 1) | 0;
  i28 = i15 << 24 >> 24 < 0 ? HEAP32[i14 + 4 >> 2] | 0 : i15 & 255;
 } else {
  i15 = HEAP8[i14 + 8 + 3 >> 0] | 0;
  i24 = HEAP8[i13 + 8 + 3 >> 0] | 0;
  i26 = i24 << 24 >> 24 < 0 ? HEAP32[i13 + 4 >> 2] | 0 : i24 & 255;
  i27 = i3 + 2 | 0;
  i28 = i15 << 24 >> 24 < 0 ? HEAP32[i14 + 4 >> 2] | 0 : i15 & 255;
 }
 i15 = i27 + i28 + i26 | 0;
 if (i15 >>> 0 > 100) {
  i26 = _malloc(i15 << 2) | 0;
  if (!i26) __ZSt17__throw_bad_allocv(); else {
   i29 = i26;
   i30 = i26;
  }
 } else {
  i29 = i16;
  i30 = 0;
 }
 i16 = i21 ? HEAP32[i6 >> 2] | 0 : i6;
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i29, i17, i18, HEAP32[i4 + 4 >> 2] | 0, i16, i16 + (i22 << 2) | 0, i20, i25, i9, HEAP32[i10 >> 2] | 0, HEAP32[i11 >> 2] | 0, i12, i13, i14, i3);
 HEAP32[i19 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i17 >> 2] | 0;
 i17 = HEAP32[i18 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i19 >> 2];
 i19 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i29, i2, i17, i4, i5) | 0;
 if (i30 | 0) _free(i30);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i14);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 __ZNSt3__26localeD2Ev(i8);
 STACKTOP = i1;
 return i19 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i5 = i4 + 88 | 0;
 i6 = i4 + 64 | 0;
 i7 = i4 + 36 | 0;
 i8 = i4 + 48 | 0;
 i9 = i4 + 24 | 0;
 i10 = i4 + 12 | 0;
 i11 = i4;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 99 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i12 = i1 + 2 | 0, i13 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i12, i2, i3) | 0, (i13 | 0) != (i12 | 0)) : 0) ? (i12 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i13, i2, i3) | 0, (i12 | 0) != (i13 | 0)) : 0) ? (i13 = i3 + 4 | 0, i2 = HEAP32[i13 >> 2] | 0, ((i2 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i2 + -24 | 0);
  i2 = HEAP32[i13 >> 2] | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == -1) break;
   i14 = i3 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i14 * 24 | 0) | 0);
   i3 = i14;
  }
  HEAP32[i13 >> 2] = i2 + -24;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i11, i2 + -48 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i11, 0, 51412) | 0;
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i11 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i10, 50492) | 0;
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i10 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  i2 = HEAP8[i5 + 11 >> 0] | 0;
  i3 = i2 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i3 ? HEAP32[i5 >> 2] | 0 : i5, i3 ? HEAP32[i5 + 4 >> 2] | 0 : i2 & 255) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i9 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50243) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i8 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i13 >> 2] | 0) + -24 | 0, i6);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  i15 = i12;
 } else i15 = i1;
 STACKTOP = i4;
 return i15 | 0;
}

function _arGetLine(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, d23 = 0.0, d24 = 0.0, i25 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i3 + 4 | 0;
 i9 = i3;
 i10 = _arVecAlloc(2) | 0;
 i11 = _arVecAlloc(2) | 0;
 i12 = _arMatrixAlloc(2, 2) | 0;
 i13 = 0;
 L1 : while (1) {
  i14 = i13;
  i13 = i13 + 1 | 0;
  i15 = HEAP32[i4 + (i13 << 2) >> 2] | 0;
  i16 = HEAP32[i4 + (i14 << 2) >> 2] | 0;
  d17 = +(i15 + 1 - i16 | 0) * .05 + .5;
  i18 = ~~(d17 + +(i16 | 0));
  i16 = ~~(+(i15 | 0) - d17) - i18 | 0;
  i19 = _arMatrixAlloc(i16 + 1 | 0, 2) | 0;
  if ((i16 | 0) >= 0) {
   i15 = 0;
   while (1) {
    i20 = i15 + i18 | 0;
    if ((_arParamObserv2IdealLTf(i5, +(HEAP32[i1 + (i20 << 2) >> 2] | 0), +(HEAP32[i2 + (i20 << 2) >> 2] | 0), i8, i9) | 0) < 0) {
     i21 = 5;
     break L1;
    }
    i20 = HEAP32[i19 >> 2] | 0;
    i22 = i15 << 1;
    HEAPF64[i20 + (i22 << 3) >> 3] = +HEAPF32[i8 >> 2];
    HEAPF64[i20 + ((i22 | 1) << 3) >> 3] = +HEAPF32[i9 >> 2];
    if ((i15 | 0) < (i16 | 0)) i15 = i15 + 1 | 0; else break;
   }
  }
  if ((_arMatrixPCA(i19, i12, i10, i11) | 0) < 0) break;
  i15 = HEAP32[i12 >> 2] | 0;
  d17 = +HEAPF64[i15 + 8 >> 3];
  HEAPF64[i6 + (i14 * 24 | 0) >> 3] = d17;
  d23 = -+HEAPF64[i15 >> 3];
  HEAPF64[i6 + (i14 * 24 | 0) + 8 >> 3] = d23;
  i15 = HEAP32[i11 >> 2] | 0;
  HEAPF64[i6 + (i14 * 24 | 0) + 16 >> 3] = -(d17 * +HEAPF64[i15 >> 3] + +HEAPF64[i15 + 8 >> 3] * d23);
  _arMatrixFree(i19) | 0;
  if (i13 >>> 0 >= 4) {
   i21 = 9;
   break;
  }
 }
 if ((i21 | 0) != 5) if ((i21 | 0) == 9) {
  _arMatrixFree(i12) | 0;
  _arVecFree(i11) | 0;
  _arVecFree(i10) | 0;
  i21 = i6 + 72 | 0;
  i13 = i6 + 8 | 0;
  d23 = +HEAPF64[i13 >> 3];
  i9 = i6 + 80 | 0;
  d17 = +HEAPF64[i9 >> 3];
  d24 = +HEAPF64[i21 >> 3] * d23 - +HEAPF64[i6 >> 3] * d17;
  if (+Math_abs(+d24) < .0001) {
   i25 = -1;
   STACKTOP = i3;
   return i25 | 0;
  }
  i8 = i6 + 16 | 0;
  i2 = i6 + 88 | 0;
  HEAPF64[i7 >> 3] = (d17 * +HEAPF64[i8 >> 3] - d23 * +HEAPF64[i2 >> 3]) / d24;
  HEAPF64[i7 + 8 >> 3] = (+HEAPF64[i6 >> 3] * +HEAPF64[i2 >> 3] - +HEAPF64[i21 >> 3] * +HEAPF64[i8 >> 3]) / d24;
  i1 = i6 + 32 | 0;
  d24 = +HEAPF64[i1 >> 3];
  i5 = i6 + 24 | 0;
  d23 = +HEAPF64[i13 >> 3];
  d17 = +HEAPF64[i6 >> 3] * d24 - +HEAPF64[i5 >> 3] * d23;
  if (+Math_abs(+d17) < .0001) {
   i25 = -1;
   STACKTOP = i3;
   return i25 | 0;
  }
  i13 = i6 + 40 | 0;
  HEAPF64[i7 + 16 >> 3] = (d23 * +HEAPF64[i13 >> 3] - d24 * +HEAPF64[i8 >> 3]) / d17;
  HEAPF64[i7 + 24 >> 3] = (+HEAPF64[i5 >> 3] * +HEAPF64[i8 >> 3] - +HEAPF64[i6 >> 3] * +HEAPF64[i13 >> 3]) / d17;
  i8 = i6 + 56 | 0;
  d17 = +HEAPF64[i8 >> 3];
  i4 = i6 + 48 | 0;
  d24 = +HEAPF64[i1 >> 3];
  d23 = +HEAPF64[i5 >> 3] * d17 - +HEAPF64[i4 >> 3] * d24;
  if (+Math_abs(+d23) < .0001) {
   i25 = -1;
   STACKTOP = i3;
   return i25 | 0;
  }
  i1 = i6 + 64 | 0;
  HEAPF64[i7 + 32 >> 3] = (d24 * +HEAPF64[i1 >> 3] - d17 * +HEAPF64[i13 >> 3]) / d23;
  HEAPF64[i7 + 40 >> 3] = (+HEAPF64[i4 >> 3] * +HEAPF64[i13 >> 3] - +HEAPF64[i5 >> 3] * +HEAPF64[i1 >> 3]) / d23;
  d23 = +HEAPF64[i9 >> 3];
  d17 = +HEAPF64[i8 >> 3];
  d24 = +HEAPF64[i4 >> 3] * d23 - +HEAPF64[i21 >> 3] * d17;
  if (+Math_abs(+d24) < .0001) {
   i25 = -1;
   STACKTOP = i3;
   return i25 | 0;
  }
  HEAPF64[i7 + 48 >> 3] = (d17 * +HEAPF64[i2 >> 3] - d23 * +HEAPF64[i1 >> 3]) / d24;
  HEAPF64[i7 + 56 >> 3] = (+HEAPF64[i21 >> 3] * +HEAPF64[i1 >> 3] - +HEAPF64[i4 >> 3] * +HEAPF64[i2 >> 3]) / d24;
  i25 = 0;
  STACKTOP = i3;
  return i25 | 0;
 }
 _arMatrixFree(i19) | 0;
 _arMatrixFree(i12) | 0;
 _arVecFree(i11) | 0;
 _arVecFree(i10) | 0;
 i25 = -1;
 STACKTOP = i3;
 return i25 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 L1 : do if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i5) | 0)) {
  if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 >> 2] | 0, i5) | 0)) {
   i6 = HEAP32[i1 + 12 >> 2] | 0;
   i7 = i1 + 16 + (i6 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1 + 16 | 0, i2, i3, i4, i5);
   i8 = i1 + 24 | 0;
   if ((i6 | 0) <= 1) break;
   i6 = HEAP32[i1 + 8 >> 2] | 0;
   if ((i6 & 2 | 0) == 0 ? (i9 = i2 + 36 | 0, (HEAP32[i9 >> 2] | 0) != 1) : 0) {
    if (!(i6 & 1)) {
     i6 = i2 + 54 | 0;
     i10 = i8;
     while (1) {
      if (HEAP8[i6 >> 0] | 0) break L1;
      if ((HEAP32[i9 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i10, i2, i3, i4, i5);
      i10 = i10 + 8 | 0;
      if (i10 >>> 0 >= i7 >>> 0) break L1;
     }
    }
    i10 = i2 + 24 | 0;
    i6 = i2 + 54 | 0;
    i11 = i8;
    while (1) {
     if (HEAP8[i6 >> 0] | 0) break L1;
     if ((HEAP32[i9 >> 2] | 0) == 1 ? (HEAP32[i10 >> 2] | 0) == 1 : 0) break L1;
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i11, i2, i3, i4, i5);
     i11 = i11 + 8 | 0;
     if (i11 >>> 0 >= i7 >>> 0) break L1;
    }
   }
   i11 = i2 + 54 | 0;
   i10 = i8;
   while (1) {
    if (HEAP8[i11 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i10, i2, i3, i4, i5);
    i10 = i10 + 8 | 0;
    if (i10 >>> 0 >= i7 >>> 0) break L1;
   }
  }
  if ((HEAP32[i2 + 16 >> 2] | 0) != (i3 | 0) ? (i7 = i2 + 20 | 0, (HEAP32[i7 >> 2] | 0) != (i3 | 0)) : 0) {
   HEAP32[i2 + 32 >> 2] = i4;
   i10 = i2 + 44 | 0;
   if ((HEAP32[i10 >> 2] | 0) == 4) break;
   i11 = i1 + 16 + (HEAP32[i1 + 12 >> 2] << 3) | 0;
   i8 = i2 + 52 | 0;
   i9 = i2 + 53 | 0;
   i6 = i2 + 54 | 0;
   i12 = i1 + 8 | 0;
   i13 = i2 + 24 | 0;
   i14 = 0;
   i15 = i1 + 16 | 0;
   i16 = 0;
   L32 : while (1) {
    if (i15 >>> 0 >= i11 >>> 0) {
     i17 = i14;
     i18 = 18;
     break;
    }
    HEAP8[i8 >> 0] = 0;
    HEAP8[i9 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i15, i2, i3, i3, 1, i5);
    if (HEAP8[i6 >> 0] | 0) {
     i17 = i14;
     i18 = 18;
     break;
    }
    do if (HEAP8[i9 >> 0] | 0) {
     if (!(HEAP8[i8 >> 0] | 0)) if (!(HEAP32[i12 >> 2] & 1)) {
      i17 = 1;
      i18 = 18;
      break L32;
     } else {
      i19 = 1;
      i20 = i16;
      break;
     }
     if ((HEAP32[i13 >> 2] | 0) == 1) {
      i18 = 23;
      break L32;
     }
     if (!(HEAP32[i12 >> 2] & 2)) {
      i18 = 23;
      break L32;
     } else {
      i19 = 1;
      i20 = 1;
     }
    } else {
     i19 = i14;
     i20 = i16;
    } while (0);
    i14 = i19;
    i15 = i15 + 8 | 0;
    i16 = i20;
   }
   do if ((i18 | 0) == 18) {
    if ((!i16 ? (HEAP32[i7 >> 2] = i3, i15 = i2 + 40 | 0, HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + 1, (HEAP32[i2 + 36 >> 2] | 0) == 1) : 0) ? (HEAP32[i13 >> 2] | 0) == 2 : 0) {
     HEAP8[i6 >> 0] = 1;
     if (i17) {
      i18 = 23;
      break;
     } else {
      i21 = 4;
      break;
     }
    }
    if (i17) i18 = 23; else i21 = 4;
   } while (0);
   if ((i18 | 0) == 23) i21 = 3;
   HEAP32[i10 >> 2] = i21;
   break;
  }
  if ((i4 | 0) == 1) HEAP32[i2 + 32 >> 2] = 1;
 } else __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, i2, i3, i4); while (0);
 return;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i7 = i1 + 156 | 0;
 i8 = i1 + 152 | 0;
 i9 = i1 + 164 | 0;
 i10 = i1 + 161 | 0;
 i11 = i1 + 160 | 0;
 i12 = i1 + 140 | 0;
 i13 = i1 + 128 | 0;
 i14 = i1 + 116 | 0;
 i15 = i1 + 112 | 0;
 i16 = i1;
 i17 = i1 + 108 | 0;
 i18 = i1 + 104 | 0;
 i19 = i1 + 100 | 0;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
 i21 = i6 + 11 | 0;
 i22 = HEAP8[i21 >> 0] | 0;
 i23 = i22 << 24 >> 24 < 0;
 i24 = i6 + 4 | 0;
 if (!((i23 ? HEAP32[i24 >> 2] | 0 : i22 & 255) | 0)) i25 = 0; else {
  i22 = HEAP8[(i23 ? HEAP32[i6 >> 2] | 0 : i6) >> 0] | 0;
  i25 = i22 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 28 >> 2] & 63](i20, 45) | 0) << 24 >> 24;
 };
 HEAP32[i12 >> 2] = 0;
 HEAP32[i12 + 4 >> 2] = 0;
 HEAP32[i12 + 8 >> 2] = 0;
 i22 = 0;
 while (1) {
  if ((i22 | 0) == 3) break;
  HEAP32[i12 + (i22 << 2) >> 2] = 0;
  i22 = i22 + 1 | 0;
 }
 HEAP32[i13 >> 2] = 0;
 HEAP32[i13 + 4 >> 2] = 0;
 HEAP32[i13 + 8 >> 2] = 0;
 i22 = 0;
 while (1) {
  if ((i22 | 0) == 3) break;
  HEAP32[i13 + (i22 << 2) >> 2] = 0;
  i22 = i22 + 1 | 0;
 }
 HEAP32[i14 >> 2] = 0;
 HEAP32[i14 + 4 >> 2] = 0;
 HEAP32[i14 + 8 >> 2] = 0;
 i22 = 0;
 while (1) {
  if ((i22 | 0) == 3) break;
  HEAP32[i14 + (i22 << 2) >> 2] = 0;
  i22 = i22 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i3, i25, i8, i9, i10, i11, i12, i13, i14, i15);
 i3 = HEAP8[i21 >> 0] | 0;
 i21 = i3 << 24 >> 24 < 0;
 i22 = i21 ? HEAP32[i24 >> 2] | 0 : i3 & 255;
 i3 = HEAP32[i15 >> 2] | 0;
 if ((i22 | 0) > (i3 | 0)) {
  i15 = HEAP8[i14 + 11 >> 0] | 0;
  i24 = HEAP8[i13 + 11 >> 0] | 0;
  i26 = i24 << 24 >> 24 < 0 ? HEAP32[i13 + 4 >> 2] | 0 : i24 & 255;
  i27 = i3 + 1 + (i22 - i3 << 1) | 0;
  i28 = i15 << 24 >> 24 < 0 ? HEAP32[i14 + 4 >> 2] | 0 : i15 & 255;
 } else {
  i15 = HEAP8[i14 + 11 >> 0] | 0;
  i24 = HEAP8[i13 + 11 >> 0] | 0;
  i26 = i24 << 24 >> 24 < 0 ? HEAP32[i13 + 4 >> 2] | 0 : i24 & 255;
  i27 = i3 + 2 | 0;
  i28 = i15 << 24 >> 24 < 0 ? HEAP32[i14 + 4 >> 2] | 0 : i15 & 255;
 }
 i15 = i27 + i28 + i26 | 0;
 if (i15 >>> 0 > 100) {
  i26 = _malloc(i15) | 0;
  if (!i26) __ZSt17__throw_bad_allocv(); else {
   i29 = i26;
   i30 = i26;
  }
 } else {
  i29 = i16;
  i30 = 0;
 }
 i16 = i21 ? HEAP32[i6 >> 2] | 0 : i6;
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i29, i17, i18, HEAP32[i4 + 4 >> 2] | 0, i16, i16 + i22 | 0, i20, i25, i9, HEAP8[i10 >> 0] | 0, HEAP8[i11 >> 0] | 0, i12, i13, i14, i3);
 HEAP32[i19 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i17 >> 2] | 0;
 i17 = HEAP32[i18 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i19 >> 2];
 i19 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i29, i2, i17, i4, i5) | 0;
 if (i30 | 0) _free(i30);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 __ZNSt3__26localeD2Ev(i8);
 STACKTOP = i1;
 return i19 | 0;
}

function __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8;
 i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58516) | 0;
 i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58524) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i11 >> 2] | 0) + 20 >> 2] & 63](i9, i11);
 i7 = i9 + 11 | 0;
 i12 = HEAP8[i7 >> 0] | 0;
 i13 = i9 + 4 | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i13 >> 2] | 0 : i12 & 255) | 0) {
  HEAP32[i6 >> 2] = i4;
  i12 = HEAP8[i1 >> 0] | 0;
  switch (i12 << 24 >> 24) {
  case 43:
  case 45:
   {
    i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 63](i10, i12) | 0;
    i12 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i12 + 4;
    HEAP32[i12 >> 2] = i14;
    i15 = i1 + 1 | 0;
    break;
   }
  default:
   i15 = i1;
  }
  L7 : do if ((i3 - i15 | 0) > 1 ? (HEAP8[i15 >> 0] | 0) == 48 : 0) {
   i14 = i15 + 1 | 0;
   switch (HEAP8[i14 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     i16 = i15;
     break L7;
    }
   }
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 63](i10, 48) | 0;
   i17 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i17 + 4;
   HEAP32[i17 >> 2] = i12;
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 63](i10, HEAP8[i14 >> 0] | 0) | 0;
   i14 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i14 + 4;
   HEAP32[i14 >> 2] = i12;
   i16 = i15 + 2 | 0;
  } else i16 = i15; while (0);
  L12 : do if ((i16 | 0) != (i3 | 0)) {
   i15 = i3;
   i12 = i16;
   while (1) {
    i14 = i15 + -1 | 0;
    if (i12 >>> 0 >= i14 >>> 0) break L12;
    i17 = HEAP8[i12 >> 0] | 0;
    HEAP8[i12 >> 0] = HEAP8[i14 >> 0] | 0;
    HEAP8[i14 >> 0] = i17;
    i15 = i14;
    i12 = i12 + 1 | 0;
   }
  } while (0);
  i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 16 >> 2] & 127](i11) | 0;
  i11 = i16;
  i15 = 0;
  i14 = 0;
  while (1) {
   if (i11 >>> 0 >= i3 >>> 0) break;
   i17 = HEAP8[((HEAP8[i7 >> 0] | 0) < 0 ? HEAP32[i9 >> 2] | 0 : i9) + i15 >> 0] | 0;
   if (i17 << 24 >> 24 != 0 & (i14 | 0) == (i17 << 24 >> 24 | 0)) {
    i17 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i17 + 4;
    HEAP32[i17 >> 2] = i12;
    i17 = HEAP8[i7 >> 0] | 0;
    i18 = i15 + (i15 >>> 0 < ((i17 << 24 >> 24 < 0 ? HEAP32[i13 >> 2] | 0 : i17 & 255) + -1 | 0) >>> 0 & 1) | 0;
    i19 = 0;
   } else {
    i18 = i15;
    i19 = i14;
   }
   i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 63](i10, HEAP8[i11 >> 0] | 0) | 0;
   i20 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i20 + 4;
   HEAP32[i20 >> 2] = i17;
   i11 = i11 + 1 | 0;
   i15 = i18;
   i14 = i19 + 1 | 0;
  }
  i19 = i1;
  i14 = i4 + (i16 - i19 << 2) | 0;
  i16 = HEAP32[i6 >> 2] | 0;
  if ((i14 | 0) == (i16 | 0)) {
   i21 = i19;
   i22 = i14;
  } else {
   i18 = i16;
   i16 = i14;
   while (1) {
    i14 = i18 + -4 | 0;
    if (i16 >>> 0 >= i14 >>> 0) break;
    i15 = HEAP32[i16 >> 2] | 0;
    HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i14 >> 2] = i15;
    i18 = i14;
    i16 = i16 + 4 | 0;
   }
   i21 = i19;
   i22 = HEAP32[i6 >> 2] | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 48 >> 2] & 15](i10, i1, i3, i4) | 0;
  i10 = i1;
  i1 = i4 + (i3 - i10 << 2) | 0;
  HEAP32[i6 >> 2] = i1;
  i21 = i10;
  i22 = i1;
 }
 HEAP32[i5 >> 2] = (i2 | 0) == (i3 | 0) ? i22 : i4 + (i2 - i21 << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i8;
 return;
}

function __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8;
 i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
 i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58500) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i11 >> 2] | 0) + 20 >> 2] & 63](i9, i11);
 i7 = i9 + 11 | 0;
 i12 = HEAP8[i7 >> 0] | 0;
 i13 = i9 + 4 | 0;
 if ((i12 << 24 >> 24 < 0 ? HEAP32[i13 >> 2] | 0 : i12 & 255) | 0) {
  HEAP32[i6 >> 2] = i4;
  i12 = HEAP8[i1 >> 0] | 0;
  switch (i12 << 24 >> 24) {
  case 43:
  case 45:
   {
    i14 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, i12) | 0;
    i12 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i12 + 1;
    HEAP8[i12 >> 0] = i14;
    i15 = i1 + 1 | 0;
    break;
   }
  default:
   i15 = i1;
  }
  L7 : do if ((i3 - i15 | 0) > 1 ? (HEAP8[i15 >> 0] | 0) == 48 : 0) {
   i14 = i15 + 1 | 0;
   switch (HEAP8[i14 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     i16 = i15;
     break L7;
    }
   }
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 48) | 0;
   i17 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i17 + 1;
   HEAP8[i17 >> 0] = i12;
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, HEAP8[i14 >> 0] | 0) | 0;
   i14 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i14 + 1;
   HEAP8[i14 >> 0] = i12;
   i16 = i15 + 2 | 0;
  } else i16 = i15; while (0);
  L12 : do if ((i16 | 0) != (i3 | 0)) {
   i15 = i3;
   i12 = i16;
   while (1) {
    i14 = i15 + -1 | 0;
    if (i12 >>> 0 >= i14 >>> 0) break L12;
    i17 = HEAP8[i12 >> 0] | 0;
    HEAP8[i12 >> 0] = HEAP8[i14 >> 0] | 0;
    HEAP8[i14 >> 0] = i17;
    i15 = i14;
    i12 = i12 + 1 | 0;
   }
  } while (0);
  i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 16 >> 2] & 127](i11) | 0;
  i11 = i16;
  i15 = 0;
  i14 = 0;
  while (1) {
   if (i11 >>> 0 >= i3 >>> 0) break;
   i17 = HEAP8[((HEAP8[i7 >> 0] | 0) < 0 ? HEAP32[i9 >> 2] | 0 : i9) + i15 >> 0] | 0;
   if (i17 << 24 >> 24 != 0 & (i14 | 0) == (i17 << 24 >> 24 | 0)) {
    i17 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i17 + 1;
    HEAP8[i17 >> 0] = i12;
    i17 = HEAP8[i7 >> 0] | 0;
    i18 = i15 + (i15 >>> 0 < ((i17 << 24 >> 24 < 0 ? HEAP32[i13 >> 2] | 0 : i17 & 255) + -1 | 0) >>> 0 & 1) | 0;
    i19 = 0;
   } else {
    i18 = i15;
    i19 = i14;
   }
   i17 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, HEAP8[i11 >> 0] | 0) | 0;
   i20 = HEAP32[i6 >> 2] | 0;
   HEAP32[i6 >> 2] = i20 + 1;
   HEAP8[i20 >> 0] = i17;
   i11 = i11 + 1 | 0;
   i15 = i18;
   i14 = i19 + 1 | 0;
  }
  i19 = i1;
  i14 = i4 + (i16 - i19) | 0;
  i16 = HEAP32[i6 >> 2] | 0;
  if ((i14 | 0) == (i16 | 0)) {
   i21 = i19;
   i22 = i14;
  } else {
   i18 = i16;
   i16 = i14;
   while (1) {
    i14 = i18 + -1 | 0;
    if (i16 >>> 0 >= i14 >>> 0) break;
    i15 = HEAP8[i16 >> 0] | 0;
    HEAP8[i16 >> 0] = HEAP8[i14 >> 0] | 0;
    HEAP8[i14 >> 0] = i15;
    i18 = i14;
    i16 = i16 + 1 | 0;
   }
   i21 = i19;
   i22 = HEAP32[i6 >> 2] | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 32 >> 2] & 15](i10, i1, i3, i4) | 0;
  i10 = i1;
  i1 = i4 + (i3 - i10) | 0;
  HEAP32[i6 >> 2] = i1;
  i21 = i10;
  i22 = i1;
 }
 HEAP32[i5 >> 2] = (i2 | 0) == (i3 | 0) ? i22 : i4 + (i2 - i21) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i8;
 return;
}

function ___get_locale(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 i4 = i3;
 i5 = i3 + 256 | 0;
 do if (!(HEAP8[i2 >> 0] | 0)) {
  i6 = _getenv(46740) | 0;
  if (i6 | 0 ? HEAP8[i6 >> 0] | 0 : 0) {
   i7 = i6;
   break;
  }
  i6 = _getenv(6400 + (i1 * 12 | 0) | 0) | 0;
  if (i6 | 0 ? HEAP8[i6 >> 0] | 0 : 0) {
   i7 = i6;
   break;
  }
  i6 = _getenv(46747) | 0;
  if (i6 | 0 ? HEAP8[i6 >> 0] | 0 : 0) {
   i7 = i6;
   break;
  }
  i7 = 46752;
 } else i7 = i2; while (0);
 i2 = 0;
 L13 : while (1) {
  switch (HEAP8[i7 + i2 >> 0] | 0) {
  case 47:
  case 0:
   {
    i8 = i2;
    break L13;
    break;
   }
  default:
   {}
  }
  i2 = i2 + 1 | 0;
  if (i2 >>> 0 >= 15) {
   i8 = 15;
   break;
  }
 }
 i2 = HEAP8[i7 >> 0] | 0;
 if (i2 << 24 >> 24 != 46 ? (HEAP8[i7 + i8 >> 0] | 0) == 0 : 0) if (i2 << 24 >> 24 == 67) {
  i9 = i7;
  i10 = 15;
 } else {
  i11 = i7;
  i10 = 16;
 } else {
  i9 = 46752;
  i10 = 15;
 }
 if ((i10 | 0) == 15) if (!(HEAP8[i9 + 1 >> 0] | 0)) {
  i12 = i9;
  i10 = 18;
 } else {
  i11 = i9;
  i10 = 16;
 }
 L22 : do if ((i10 | 0) == 16) if ((_strcmp(i11, 46752) | 0) != 0 ? (_strcmp(i11, 46760) | 0) != 0 : 0) {
  i9 = HEAP32[14227] | 0;
  if (i9 | 0) {
   i7 = i9;
   do {
    if (!(_strcmp(i11, i7 + 8 | 0) | 0)) {
     i13 = i7;
     break L22;
    }
    i7 = HEAP32[i7 + 24 >> 2] | 0;
   } while ((i7 | 0) != 0);
  }
  ___lock(56912);
  i7 = HEAP32[14227] | 0;
  L32 : do if (i7 | 0) {
   i9 = i7;
   while (1) {
    if (!(_strcmp(i11, i9 + 8 | 0) | 0)) break;
    i2 = HEAP32[i9 + 24 >> 2] | 0;
    if (!i2) break L32; else i9 = i2;
   }
   ___unlock(56912);
   i13 = i9;
   break L22;
  } while (0);
  L39 : do if (((HEAP32[14200] | 0) == 0 ? (i7 = _getenv(46766) | 0, (i7 | 0) != 0) : 0) ? (HEAP8[i7 >> 0] | 0) != 0 : 0) {
   i2 = 254 - i8 | 0;
   i6 = i8 + 1 | 0;
   i14 = i7;
   while (1) {
    i7 = ___strchrnul(i14, 58) | 0;
    i15 = HEAP8[i7 >> 0] | 0;
    i16 = i7 - i14 + ((i15 << 24 >> 24 != 0) << 31 >> 31) | 0;
    if (i16 >>> 0 < i2 >>> 0) {
     _memcpy(i4 | 0, i14 | 0, i16 | 0) | 0;
     i17 = i4 + i16 | 0;
     HEAP8[i17 >> 0] = 47;
     _memcpy(i17 + 1 | 0, i11 | 0, i8 | 0) | 0;
     HEAP8[i4 + (i6 + i16) >> 0] = 0;
     i18 = ___map_file(i4 | 0, i5 | 0) | 0;
     if (i18 | 0) break;
     i19 = HEAP8[i7 >> 0] | 0;
    } else i19 = i15;
    i14 = i7 + (i19 << 24 >> 24 != 0 & 1) | 0;
    if (!(HEAP8[i14 >> 0] | 0)) {
     i10 = 41;
     break L39;
    }
   }
   i14 = _malloc(28) | 0;
   if (!i14) {
    ___munmap(i18, HEAP32[i5 >> 2] | 0) | 0;
    i10 = 41;
    break;
   } else {
    HEAP32[i14 >> 2] = i18;
    HEAP32[i14 + 4 >> 2] = HEAP32[i5 >> 2];
    i6 = i14 + 8 | 0;
    _memcpy(i6 | 0, i11 | 0, i8 | 0) | 0;
    HEAP8[i6 + i8 >> 0] = 0;
    HEAP32[i14 + 24 >> 2] = HEAP32[14227];
    HEAP32[14227] = i14;
    i20 = i14;
    break;
   }
  } else i10 = 41; while (0);
  if ((i10 | 0) == 41) {
   i14 = _malloc(28) | 0;
   if (!i14) i20 = i14; else {
    HEAP32[i14 >> 2] = HEAP32[3435];
    HEAP32[i14 + 4 >> 2] = HEAP32[3436];
    i6 = i14 + 8 | 0;
    _memcpy(i6 | 0, i11 | 0, i8 | 0) | 0;
    HEAP8[i6 + i8 >> 0] = 0;
    HEAP32[i14 + 24 >> 2] = HEAP32[14227];
    HEAP32[14227] = i14;
    i20 = i14;
   }
  }
  ___unlock(56912);
  i13 = (i1 | 0) == 0 & (i20 | 0) == 0 ? 13740 : i20;
 } else {
  i12 = i11;
  i10 = 18;
 } while (0);
 do if ((i10 | 0) == 18) {
  if ((i1 | 0) == 0 ? (HEAP8[i12 + 1 >> 0] | 0) == 46 : 0) {
   i13 = 13740;
   break;
  }
  i13 = 0;
 } while (0);
 STACKTOP = i3;
 return i13 | 0;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 592 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(592);
 i8 = i1 + 512 | 0;
 i9 = i1 + 552 | 0;
 i10 = i1 + 112 | 0;
 i11 = i1 + 568 | 0;
 i12 = i1 + 564 | 0;
 i13 = i1 + 560 | 0;
 i14 = i1 + 576 | 0;
 i15 = i1 + 556 | 0;
 i16 = i1;
 HEAP32[i11 >> 2] = i10;
 HEAP32[i11 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv(i13, i5);
 i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58516) | 0;
 HEAP8[i14 >> 0] = 0;
 HEAP32[i15 >> 2] = HEAP32[i3 >> 2];
 i18 = HEAP32[i5 + 4 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i15 >> 2];
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i2, i8, i4, i13, i18, i6, i14, i17, i11, i12, i10 + 400 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i17 >> 2] | 0) + 48 >> 2] & 15](i17, 48744, 48754, i8) | 0;
  i17 = HEAP32[i12 >> 2] | 0;
  i10 = HEAP32[i11 >> 2] | 0;
  i18 = i17 - i10 | 0;
  i4 = i10;
  i10 = i17;
  if ((i18 | 0) > 392) {
   i17 = _malloc((i18 >>> 2) + 2 | 0) | 0;
   if (!i17) __ZSt17__throw_bad_allocv(); else {
    i19 = i17;
    i20 = i17;
   }
  } else {
   i19 = i16;
   i20 = 0;
  }
  if (!(HEAP8[i14 >> 0] | 0)) i21 = i19; else {
   HEAP8[i19 >> 0] = 45;
   i21 = i19 + 1 | 0;
  }
  i19 = i8 + 40 | 0;
  i14 = i8;
  i17 = i4;
  i4 = i21;
  i21 = i10;
  while (1) {
   if (i17 >>> 0 >= i21 >>> 0) break;
   i10 = HEAP32[i17 >> 2] | 0;
   i18 = i8;
   while (1) {
    if ((i18 | 0) == (i19 | 0)) {
     i22 = i19;
     break;
    }
    if ((HEAP32[i18 >> 2] | 0) == (i10 | 0)) {
     i22 = i18;
     break;
    }
    i18 = i18 + 4 | 0;
   }
   HEAP8[i4 >> 0] = HEAP8[48744 + (i22 - i14 >> 2) >> 0] | 0;
   i17 = i17 + 4 | 0;
   i4 = i4 + 1 | 0;
   i21 = HEAP32[i12 >> 2] | 0;
  }
  HEAP8[i4 >> 0] = 0;
  HEAP32[i9 >> 2] = i7;
  if ((_sscanf(i16, 48645, i9) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if (i20 | 0) _free(i20);
 }
 i20 = HEAP32[i2 >> 2] | 0;
 do if (i20) {
  i9 = HEAP32[i20 + 12 >> 2] | 0;
  if ((i9 | 0) == (HEAP32[i20 + 16 >> 2] | 0)) i23 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i20 >> 2] | 0) + 36 >> 2] & 127](i20) | 0; else i23 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i9 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i23, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i24 = 1;
   break;
  } else {
   i24 = (HEAP32[i2 >> 2] | 0) == 0;
   break;
  }
 } else i24 = 1; while (0);
 i23 = HEAP32[i3 >> 2] | 0;
 do if (i23) {
  i20 = HEAP32[i23 + 12 >> 2] | 0;
  if ((i20 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i20 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i24) break; else {
   i26 = 34;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i26 = 32;
   break;
  }
 } else i26 = 32; while (0);
 if ((i26 | 0) == 32 ? i24 : 0) i26 = 34;
 if ((i26 | 0) == 34) HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 2;
 i6 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__26localeD2Ev(i13);
 i13 = HEAP32[i11 >> 2] | 0;
 HEAP32[i11 >> 2] = 0;
 if (i13 | 0) FUNCTION_TABLE_vi[HEAP32[i11 + 4 >> 2] & 255](i13);
 STACKTOP = i1;
 return i6 | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i8 = i1 + 240 | 0;
 i9 = i1 + 216 | 0;
 i10 = i1 + 112 | 0;
 i11 = i1 + 232 | 0;
 i12 = i1 + 228 | 0;
 i13 = i1 + 224 | 0;
 i14 = i1 + 250 | 0;
 i15 = i1 + 220 | 0;
 i16 = i1;
 HEAP32[i11 >> 2] = i10;
 HEAP32[i11 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv(i13, i5);
 i17 = __ZNKSt3__26locale9use_facetERNS0_2idE(i13, 58484) | 0;
 HEAP8[i14 >> 0] = 0;
 HEAP32[i15 >> 2] = HEAP32[i3 >> 2];
 i18 = HEAP32[i5 + 4 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i15 >> 2];
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i2, i8, i4, i13, i18, i6, i14, i17, i11, i12, i10 + 100 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i17 >> 2] | 0) + 32 >> 2] & 15](i17, 48634, 48644, i8) | 0;
  i17 = HEAP32[i12 >> 2] | 0;
  i10 = HEAP32[i11 >> 2] | 0;
  i18 = i17 - i10 | 0;
  i4 = i10;
  i10 = i17;
  if ((i18 | 0) > 98) {
   i17 = _malloc(i18 + 2 | 0) | 0;
   if (!i17) __ZSt17__throw_bad_allocv(); else {
    i19 = i17;
    i20 = i17;
   }
  } else {
   i19 = i16;
   i20 = 0;
  }
  if (!(HEAP8[i14 >> 0] | 0)) i21 = i19; else {
   HEAP8[i19 >> 0] = 45;
   i21 = i19 + 1 | 0;
  }
  i19 = i8 + 10 | 0;
  i14 = i8;
  i17 = i4;
  i4 = i21;
  i21 = i10;
  while (1) {
   if (i17 >>> 0 >= i21 >>> 0) break;
   i10 = HEAP8[i17 >> 0] | 0;
   i18 = i8;
   while (1) {
    if ((i18 | 0) == (i19 | 0)) {
     i22 = i19;
     break;
    }
    if ((HEAP8[i18 >> 0] | 0) == i10 << 24 >> 24) {
     i22 = i18;
     break;
    }
    i18 = i18 + 1 | 0;
   }
   HEAP8[i4 >> 0] = HEAP8[48634 + (i22 - i14) >> 0] | 0;
   i17 = i17 + 1 | 0;
   i4 = i4 + 1 | 0;
   i21 = HEAP32[i12 >> 2] | 0;
  }
  HEAP8[i4 >> 0] = 0;
  HEAP32[i9 >> 2] = i7;
  if ((_sscanf(i16, 48645, i9) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if (i20 | 0) _free(i20);
 }
 i20 = HEAP32[i2 >> 2] | 0;
 do if (i20) {
  i9 = HEAP32[i20 + 12 >> 2] | 0;
  if ((i9 | 0) == (HEAP32[i20 + 16 >> 2] | 0)) i23 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i20 >> 2] | 0) + 36 >> 2] & 127](i20) | 0; else i23 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i9 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i23, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i24 = 1;
   break;
  } else {
   i24 = (HEAP32[i2 >> 2] | 0) == 0;
   break;
  }
 } else i24 = 1; while (0);
 i23 = HEAP32[i3 >> 2] | 0;
 do if (i23) {
  i20 = HEAP32[i23 + 12 >> 2] | 0;
  if ((i20 | 0) == (HEAP32[i23 + 16 >> 2] | 0)) i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i23 >> 2] | 0) + 36 >> 2] & 127](i23) | 0; else i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i20 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i24) break; else {
   i26 = 34;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i26 = 32;
   break;
  }
 } else i26 = 32; while (0);
 if ((i26 | 0) == 32 ? i24 : 0) i26 = 34;
 if ((i26 | 0) == 34) HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 2;
 i6 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__26localeD2Ev(i13);
 i13 = HEAP32[i11 >> 2] | 0;
 HEAP32[i11 >> 2] = 0;
 if (i13 | 0) FUNCTION_TABLE_vi[HEAP32[i11 + 4 >> 2] & 255](i13);
 STACKTOP = i1;
 return i6 | 0;
}

function _consume_data(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i1 + 428 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = i1 + 328 | 0;
 if ((HEAP32[i6 >> 2] | 0) > 0) {
  i7 = i1 + 4 | 0;
  i8 = i1 + 148 | 0;
  i9 = 0;
  do {
   i10 = HEAP32[i1 + 332 + (i9 << 2) >> 2] | 0;
   i11 = HEAP32[i10 + 12 >> 2] | 0;
   i12 = Math_imul(i11, HEAP32[i8 >> 2] | 0) | 0;
   i13 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 32 >> 2] & 31](i1, HEAP32[i5 + 72 + (HEAP32[i10 + 4 >> 2] << 2) >> 2] | 0, i12, i11, 1) | 0;
   HEAP32[i3 + (i9 << 2) >> 2] = i13;
   i9 = i9 + 1 | 0;
  } while ((i9 | 0) < (HEAP32[i6 >> 2] | 0));
 }
 i9 = i5 + 24 | 0;
 i7 = HEAP32[i9 >> 2] | 0;
 i8 = i5 + 28 | 0;
 i13 = HEAP32[i8 >> 2] | 0;
 L6 : do if ((i7 | 0) < (i13 | 0)) {
  i11 = i5 + 20 | 0;
  i12 = i1 + 348 | 0;
  i10 = i1 + 444 | 0;
  i14 = i5 + 32 | 0;
  i15 = i7;
  i16 = HEAP32[i11 >> 2] | 0;
  i17 = HEAP32[i12 >> 2] | 0;
  i18 = i13;
  L8 : while (1) {
   if (i16 >>> 0 < i17 >>> 0) {
    i19 = i16;
    while (1) {
     i20 = HEAP32[i6 >> 2] | 0;
     if ((i20 | 0) > 0) {
      i21 = 0;
      i22 = 0;
      while (1) {
       i23 = HEAP32[i1 + 332 + (i22 << 2) >> 2] | 0;
       i24 = HEAP32[i23 + 52 >> 2] | 0;
       i25 = Math_imul(i24, i19) | 0;
       i26 = HEAP32[i23 + 56 >> 2] | 0;
       if ((i26 | 0) > 0 ? (i23 = HEAP32[i3 + (i22 << 2) >> 2] | 0, (i24 | 0) > 0) : 0) {
        i27 = 0;
        i28 = i21;
        while (1) {
         i29 = 0;
         i30 = (HEAP32[i23 + (i27 + i15 << 2) >> 2] | 0) + (i25 << 7) | 0;
         i31 = i28;
         while (1) {
          HEAP32[i5 + 32 + (i31 << 2) >> 2] = i30;
          i29 = i29 + 1 | 0;
          if ((i29 | 0) == (i24 | 0)) break; else {
           i30 = i30 + 128 | 0;
           i31 = i31 + 1 | 0;
          }
         }
         i31 = i24 + i28 | 0;
         i27 = i27 + 1 | 0;
         if ((i27 | 0) >= (i26 | 0)) {
          i32 = i31;
          break;
         } else i28 = i31;
        }
       } else i32 = i21;
       i22 = i22 + 1 | 0;
       if ((i22 | 0) >= (i20 | 0)) break; else i21 = i32;
      }
     }
     if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 4 >> 2] & 63](i1, i14) | 0)) break L8;
     i21 = i19 + 1 | 0;
     i33 = HEAP32[i12 >> 2] | 0;
     if (i21 >>> 0 < i33 >>> 0) i19 = i21; else break;
    }
    i34 = i33;
    i35 = HEAP32[i8 >> 2] | 0;
   } else {
    i34 = i17;
    i35 = i18;
   }
   HEAP32[i11 >> 2] = 0;
   i21 = i15 + 1 | 0;
   if ((i21 | 0) < (i35 | 0)) {
    i15 = i21;
    i16 = 0;
    i17 = i34;
    i18 = i35;
   } else break L6;
  }
  HEAP32[i9 >> 2] = i15;
  HEAP32[i11 >> 2] = i19;
  i36 = 0;
  STACKTOP = i2;
  return i36 | 0;
 } while (0);
 i19 = i1 + 148 | 0;
 i9 = (HEAP32[i19 >> 2] | 0) + 1 | 0;
 HEAP32[i19 >> 2] = i9;
 i19 = HEAP32[i1 + 320 >> 2] | 0;
 if (i9 >>> 0 >= i19 >>> 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 + 436 >> 2] | 0) + 12 >> 2] & 255](i1);
  i36 = 4;
  STACKTOP = i2;
  return i36 | 0;
 }
 i35 = HEAP32[i4 >> 2] | 0;
 if ((HEAP32[i6 >> 2] | 0) > 1) i37 = 1; else {
  i6 = HEAP32[i1 + 332 >> 2] | 0;
  i37 = HEAP32[(i9 >>> 0 < (i19 + -1 | 0) >>> 0 ? i6 + 12 | 0 : i6 + 72 | 0) >> 2] | 0;
 }
 HEAP32[i35 + 28 >> 2] = i37;
 HEAP32[i35 + 20 >> 2] = 0;
 HEAP32[i35 + 24 >> 2] = 0;
 i36 = 3;
 STACKTOP = i2;
 return i36 | 0;
}

function _icpPoint(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, d19 = 0.0, i20 = 0, i21 = 0, d22 = 0.0, i23 = 0, i24 = 0, i25 = 0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, i30 = 0, d31 = 0.0, i32 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i7 = i6 + 144 | 0;
 i8 = i6 + 48 | 0;
 i9 = i6;
 i10 = i2 + 8 | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 if ((i11 | 0) < 3) {
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 }
 i13 = _malloc(i11 * 96 | 0) | 0;
 if (!i13) {
  _arLog(0, 3, 18473, i6 + 160 | 0);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 }
 i14 = _malloc(i11 << 4) | 0;
 if (!i14) {
  _arLog(0, 3, 18473, i6 + 168 | 0);
  _free(i13);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 }
 HEAPF64[i4 >> 3] = +HEAPF64[i3 >> 3];
 HEAPF64[i4 + 8 >> 3] = +HEAPF64[i3 + 8 >> 3];
 HEAPF64[i4 + 16 >> 3] = +HEAPF64[i3 + 16 >> 3];
 HEAPF64[i4 + 24 >> 3] = +HEAPF64[i3 + 24 >> 3];
 HEAPF64[i4 + 32 >> 3] = +HEAPF64[i3 + 32 >> 3];
 HEAPF64[i4 + 40 >> 3] = +HEAPF64[i3 + 40 >> 3];
 HEAPF64[i4 + 48 >> 3] = +HEAPF64[i3 + 48 >> 3];
 HEAPF64[i4 + 56 >> 3] = +HEAPF64[i3 + 56 >> 3];
 HEAPF64[i4 + 64 >> 3] = +HEAPF64[i3 + 64 >> 3];
 HEAPF64[i4 + 72 >> 3] = +HEAPF64[i3 + 72 >> 3];
 HEAPF64[i4 + 80 >> 3] = +HEAPF64[i3 + 80 >> 3];
 HEAPF64[i4 + 88 >> 3] = +HEAPF64[i3 + 88 >> 3];
 i3 = i1 + 104 | 0;
 i11 = i2 + 4 | 0;
 i15 = i7 + 8 | 0;
 i16 = i1 + 96 | 0;
 i17 = i1 + 120 | 0;
 i18 = i1 + 112 | 0;
 d19 = 0.0;
 i20 = 0;
 L12 : while (1) {
  _arUtilMatMul(i1, i4, i8) | 0;
  i21 = HEAP32[i10 >> 2] | 0;
  if ((i21 | 0) > 0) {
   d22 = 0.0;
   i23 = 0;
   while (1) {
    if ((_icpGetU_from_X_by_MatX2U(i7, i8, (HEAP32[i11 >> 2] | 0) + (i23 * 24 | 0) | 0) | 0) < 0) {
     i24 = 10;
     break L12;
    }
    i25 = HEAP32[i2 >> 2] | 0;
    d26 = +HEAPF64[i25 + (i23 << 4) >> 3] - +HEAPF64[i7 >> 3];
    d27 = +HEAPF64[i25 + (i23 << 4) + 8 >> 3] - +HEAPF64[i15 >> 3];
    d28 = d22 + (d26 * d26 + d27 * d27);
    i25 = i23 << 1;
    HEAPF64[i14 + (i25 << 3) >> 3] = d26;
    HEAPF64[i14 + ((i25 | 1) << 3) >> 3] = d27;
    i23 = i23 + 1 | 0;
    i25 = HEAP32[i10 >> 2] | 0;
    if ((i23 | 0) >= (i25 | 0)) {
     d29 = d28;
     i30 = i25;
     break;
    } else d22 = d28;
   }
  } else {
   d29 = 0.0;
   i30 = i21;
  }
  d31 = d29 / +(i30 | 0);
  if (d31 < +HEAPF64[i3 >> 3]) {
   i24 = 25;
   break;
  }
  if ((i20 | 0 ? d31 < +HEAPF64[i17 >> 3] : 0) ? d31 / d19 > +HEAPF64[i18 >> 3] : 0) {
   i24 = 25;
   break;
  }
  if ((i20 | 0) == (HEAP32[i16 >> 2] | 0)) {
   i24 = 25;
   break;
  }
  if ((i30 | 0) > 0) {
   i23 = 0;
   while (1) {
    if ((_icpGetJ_U_S(i13 + (i23 * 12 << 3) | 0, i1, i4, (HEAP32[i11 >> 2] | 0) + (i23 * 24 | 0) | 0) | 0) < 0) {
     i24 = 21;
     break L12;
    }
    i23 = i23 + 1 | 0;
    i25 = HEAP32[i10 >> 2] | 0;
    if ((i23 | 0) >= (i25 | 0)) {
     i32 = i25;
     break;
    }
   }
  } else i32 = i30;
  if ((_icpGetDeltaS(i9, i14, i13, i32 << 1) | 0) < 0) {
   i24 = 23;
   break;
  }
  _icpUpdateMat(i4, i9) | 0;
  d19 = d31;
  i20 = i20 + 1 | 0;
 }
 if ((i24 | 0) == 10) {
  _free(i13);
  _free(i14);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 } else if ((i24 | 0) == 21) {
  _free(i13);
  _free(i14);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 } else if ((i24 | 0) == 23) {
  _free(i13);
  _free(i14);
  i12 = -1;
  STACKTOP = i6;
  return i12 | 0;
 } else if ((i24 | 0) == 25) {
  HEAPF64[i5 >> 3] = d31;
  _free(i13);
  _free(i14);
  i12 = 0;
  STACKTOP = i6;
  return i12 | 0;
 }
 return 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPKiEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPiEEE4typeES8_SA_SA_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i6 = i5;
 i7 = (HEAP32[i2 >> 2] | 0) - i6 | 0;
 i2 = i7 >> 2;
 i8 = i5 + (i2 << 2) | 0;
 i9 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i4 = i3 - i9 | 0;
 i10 = i4 >> 2;
 if ((i4 | 0) <= 0) {
  i11 = i8;
  return i11 | 0;
 }
 i4 = i1 + 8 | 0;
 i12 = HEAP32[i4 >> 2] | 0;
 i13 = i1 + 4 | 0;
 i14 = HEAP32[i13 >> 2] | 0;
 i15 = i14;
 if ((i10 | 0) > (i12 - i15 >> 2 | 0)) {
  i16 = (i15 - i6 >> 2) + i10 | 0;
  if (i16 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
  i17 = i12 - i6 | 0;
  i6 = i17 >> 1;
  i12 = i17 >> 2 >>> 0 < 536870911 ? (i6 >>> 0 < i16 >>> 0 ? i16 : i6) : 1073741823;
  i6 = i8;
  i16 = i7 >> 2;
  do if (i12) if (i12 >>> 0 > 1073741823) {
   i17 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc(i17, 40980);
   HEAP32[i17 >> 2] = 17420;
   ___cxa_throw(i17 | 0, 13288, 107);
  } else {
   i18 = __Znwm(i12 << 2) | 0;
   break;
  } else i18 = 0; while (0);
  i17 = i18 + (i16 << 2) | 0;
  i16 = i18 + (i12 << 2) | 0;
  i12 = i9;
  i18 = i3;
  if ((i12 | 0) == (i18 | 0)) i19 = i17; else {
   i20 = ((i18 + -4 - i9 | 0) >>> 2) + 1 | 0;
   i21 = i17;
   i22 = i12;
   while (1) {
    HEAP32[i21 >> 2] = HEAP32[i22 >> 2];
    i22 = i22 + 4 | 0;
    if ((i22 | 0) == (i18 | 0)) break; else i21 = i21 + 4 | 0;
   }
   i19 = i17 + (i20 << 2) | 0;
  }
  i20 = i17 + (0 - i2 << 2) | 0;
  if ((i7 | 0) > 0) _memcpy(i20 | 0, i5 | 0, i7 | 0) | 0;
  i7 = i15 - i6 | 0;
  if ((i7 | 0) > 0) {
   _memcpy(i19 | 0, i8 | 0, i7 | 0) | 0;
   i23 = i19 + (i7 >>> 2 << 2) | 0;
  } else i23 = i19;
  HEAP32[i1 >> 2] = i20;
  HEAP32[i13 >> 2] = i23;
  HEAP32[i4 >> 2] = i16;
  if (!i5) {
   i11 = i17;
   return i11 | 0;
  }
  __ZdlPv(i5);
  i11 = i17;
  return i11 | 0;
 }
 i17 = i8;
 i5 = i15 - i17 | 0;
 i16 = i5 >> 2;
 do if ((i10 | 0) > (i16 | 0)) {
  i4 = i9 + (i16 << 2) | 0;
  i23 = i4;
  i20 = i3;
  if ((i4 | 0) == (i20 | 0)) i24 = i14; else {
   i1 = i20 + -4 - i23 | 0;
   i19 = i4;
   i4 = i14;
   while (1) {
    HEAP32[i4 >> 2] = HEAP32[i19 >> 2];
    i19 = i19 + 4 | 0;
    if ((i19 | 0) == (i20 | 0)) break; else i4 = i4 + 4 | 0;
   }
   i4 = i14 + ((i1 >>> 2) + 1 << 2) | 0;
   HEAP32[i13 >> 2] = i4;
   i24 = i4;
  }
  if ((i5 | 0) > 0) {
   i25 = i24;
   i26 = i23;
   i27 = i24;
   break;
  } else {
   i11 = i8;
   return i11 | 0;
  }
 } else {
  i25 = i15;
  i26 = i3;
  i27 = i14;
 } while (0);
 i3 = i25 - (i8 + (i10 << 2)) | 0;
 i10 = i3 >> 2;
 i25 = i8 + (i10 << 2) | 0;
 if (i25 >>> 0 < i14 >>> 0) {
  i15 = (i14 + (0 - i10 << 2) + ~i17 | 0) >>> 2;
  i17 = i25;
  i25 = i27;
  while (1) {
   HEAP32[i25 >> 2] = HEAP32[i17 >> 2];
   i17 = i17 + 4 | 0;
   if (i17 >>> 0 >= i14 >>> 0) break; else i25 = i25 + 4 | 0;
  }
  HEAP32[i13 >> 2] = i27 + (i15 + 1 << 2);
 }
 if (i3 | 0) _memmove(i27 + (0 - i10 << 2) | 0, i8 | 0, i3 | 0) | 0;
 i3 = i9;
 i9 = i26;
 if ((i9 | 0) == (i3 | 0)) {
  i11 = i8;
  return i11 | 0;
 }
 i26 = i8;
 i10 = i3;
 while (1) {
  HEAP32[i26 >> 2] = HEAP32[i10 >> 2];
  i10 = i10 + 4 | 0;
  if ((i10 | 0) == (i9 | 0)) {
   i11 = i8;
   break;
  } else i26 = i26 + 4 | 0;
 }
 return i11 | 0;
}

function __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i6 >> 2] = i4;
 if (i8 & 4) {
  i8 = HEAP32[i3 >> 2] | 0;
  i4 = i2;
  if ((((i4 - i8 | 0) > 2 ? (HEAP8[i8 >> 0] | 0) == -17 : 0) ? (HEAP8[i8 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i8 + 2 >> 0] | 0) == -65 : 0) {
   HEAP32[i3 >> 2] = i8 + 3;
   i9 = i4;
  } else i9 = i4;
 } else i9 = i2;
 i4 = i5;
 L9 : while (1) {
  i8 = HEAP32[i3 >> 2] | 0;
  if (i8 >>> 0 >= i2 >>> 0) {
   i10 = 0;
   break;
  }
  i1 = HEAP32[i6 >> 2] | 0;
  if (i1 >>> 0 >= i5 >>> 0) {
   i10 = 1;
   break;
  }
  i11 = HEAP8[i8 >> 0] | 0;
  i12 = i11 & 255;
  if (i12 >>> 0 > i7 >>> 0) {
   i10 = 2;
   break;
  }
  do if (i11 << 24 >> 24 > -1) {
   HEAP16[i1 >> 1] = i11 & 255;
   i13 = i8 + 1 | 0;
  } else {
   if ((i11 & 255) < 194) {
    i10 = 2;
    break L9;
   }
   if ((i11 & 255) < 224) {
    if ((i9 - i8 | 0) < 2) {
     i10 = 1;
     break L9;
    }
    i14 = HEAPU8[i8 + 1 >> 0] | 0;
    if ((i14 & 192 | 0) != 128) {
     i10 = 2;
     break L9;
    }
    i15 = i14 & 63 | i12 << 6 & 1984;
    if (i15 >>> 0 > i7 >>> 0) {
     i10 = 2;
     break L9;
    }
    HEAP16[i1 >> 1] = i15;
    i13 = i8 + 2 | 0;
    break;
   }
   if ((i11 & 255) < 240) {
    if ((i9 - i8 | 0) < 3) {
     i10 = 1;
     break L9;
    }
    i15 = HEAP8[i8 + 1 >> 0] | 0;
    i14 = HEAP8[i8 + 2 >> 0] | 0;
    switch (i11 << 24 >> 24) {
    case -32:
     {
      if ((i15 & -32) << 24 >> 24 != -96) {
       i10 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if ((i15 & -32) << 24 >> 24 != -128) {
       i10 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i15 & -64) << 24 >> 24 != -128) {
      i10 = 2;
      break L9;
     }
    }
    i16 = i14 & 255;
    if ((i16 & 192 | 0) != 128) {
     i10 = 2;
     break L9;
    }
    i14 = (i15 & 63) << 6 | i12 << 12 | i16 & 63;
    if ((i14 & 65535) >>> 0 > i7 >>> 0) {
     i10 = 2;
     break L9;
    }
    HEAP16[i1 >> 1] = i14;
    i13 = i8 + 3 | 0;
    break;
   }
   if ((i11 & 255) >= 245) {
    i10 = 2;
    break L9;
   }
   if ((i9 - i8 | 0) < 4) {
    i10 = 1;
    break L9;
   }
   i14 = HEAP8[i8 + 1 >> 0] | 0;
   i16 = HEAP8[i8 + 2 >> 0] | 0;
   i15 = HEAP8[i8 + 3 >> 0] | 0;
   switch (i11 << 24 >> 24) {
   case -16:
    {
     if ((i14 + 112 & 255) >= 48) {
      i10 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if ((i14 & -16) << 24 >> 24 != -128) {
      i10 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i14 & -64) << 24 >> 24 != -128) {
     i10 = 2;
     break L9;
    }
   }
   i17 = i16 & 255;
   if ((i17 & 192 | 0) != 128) {
    i10 = 2;
    break L9;
   }
   i16 = i15 & 255;
   if ((i16 & 192 | 0) != 128) {
    i10 = 2;
    break L9;
   }
   if ((i4 - i1 | 0) < 4) {
    i10 = 1;
    break L9;
   }
   i15 = i12 & 7;
   i18 = i14 & 255;
   i14 = i17 << 6;
   i19 = i16 & 63;
   if ((i18 << 12 & 258048 | i15 << 18 | i14 & 4032 | i19) >>> 0 > i7 >>> 0) {
    i10 = 2;
    break L9;
   }
   HEAP16[i1 >> 1] = i18 << 2 & 60 | i17 >>> 4 & 3 | ((i18 >>> 4 & 3 | i15 << 2) << 6) + 16320 | 55296;
   i15 = i1 + 2 | 0;
   HEAP32[i6 >> 2] = i15;
   HEAP16[i15 >> 1] = i19 | i14 & 960 | 56320;
   i13 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
  } while (0);
  HEAP32[i3 >> 2] = i13;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 2;
 }
 return i10 | 0;
}

function _start_pass(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, i16 = 0, i17 = 0;
 i2 = HEAP32[i1 + 448 >> 2] | 0;
 i3 = i1 + 36 | 0;
 if ((HEAP32[i3 >> 2] | 0) <= 0) return;
 i4 = i1 + 72 | 0;
 i5 = 0;
 i6 = HEAP32[i1 + 216 >> 2] | 0;
 i7 = 0;
 i8 = 0;
 while (1) {
  i9 = HEAP32[i6 + 36 >> 2] | 0;
  L6 : do switch (i9 | 0) {
  case 1:
   {
    i10 = 0;
    i11 = 11;
    break;
   }
  case 2:
   {
    i10 = 0;
    i11 = 12;
    break;
   }
  case 4:
   {
    i10 = 0;
    i11 = 13;
    break;
   }
  case 8:
   {
    i12 = HEAP32[i4 >> 2] | 0;
    switch (i12 | 0) {
    case 0:
     {
      i10 = i12;
      i11 = 14;
      break L6;
      break;
     }
    case 1:
     {
      i10 = i12;
      i11 = 15;
      break L6;
      break;
     }
    case 2:
     {
      i10 = i12;
      i11 = 16;
      break L6;
      break;
     }
    default:
     {
      i12 = HEAP32[i1 >> 2] | 0;
      HEAP32[i12 + 20 >> 2] = 48;
      FUNCTION_TABLE_vi[HEAP32[i12 >> 2] & 255](i1);
      i10 = i7;
      i11 = i8;
      break L6;
     }
    }
    break;
   }
  default:
   {
    i12 = HEAP32[i1 >> 2] | 0;
    HEAP32[i12 + 20 >> 2] = 7;
    HEAP32[i12 + 24 >> 2] = i9;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
    i10 = i7;
    i11 = i8;
   }
  } while (0);
  HEAP32[i2 + 4 + (i5 << 2) >> 2] = i11;
  L16 : do if ((HEAP32[i6 + 48 >> 2] | 0 ? (i9 = i2 + 44 + (i5 << 2) | 0, (HEAP32[i9 >> 2] | 0) != (i10 | 0)) : 0) ? (i12 = HEAP32[i6 + 76 >> 2] | 0, i12 | 0) : 0) {
   HEAP32[i9 >> 2] = i10;
   switch (i10 | 0) {
   case 0:
    {
     i9 = HEAP32[i6 + 80 >> 2] | 0;
     i13 = 0;
     do {
      HEAP32[i9 + (i13 << 2) >> 2] = HEAPU16[i12 + (i13 << 1) >> 1];
      i13 = i13 + 1 | 0;
     } while ((i13 | 0) != 64);
     break;
    }
   case 1:
    {
     i13 = HEAP32[i6 + 80 >> 2] | 0;
     i9 = 0;
     do {
      i14 = (Math_imul(HEAP16[3008 + (i9 << 1) >> 1] | 0, HEAPU16[i12 + (i9 << 1) >> 1] | 0) | 0) + 2048 >> 12;
      HEAP32[i13 + (i9 << 2) >> 2] = i14;
      i9 = i9 + 1 | 0;
     } while ((i9 | 0) != 64);
     break;
    }
   case 2:
    {
     i9 = HEAP32[i6 + 80 >> 2] | 0;
     i13 = 0;
     i14 = 0;
     while (1) {
      d15 = +HEAPF64[3136 + (i13 << 3) >> 3];
      HEAPF32[i9 + (i14 << 2) >> 2] = d15 * +(HEAPU16[i12 + (i14 << 1) >> 1] | 0);
      i16 = i14 | 1;
      HEAPF32[i9 + (i16 << 2) >> 2] = d15 * +(HEAPU16[i12 + (i16 << 1) >> 1] | 0) * 1.387039845;
      i17 = i16 + 1 | 0;
      HEAPF32[i9 + (i17 << 2) >> 2] = d15 * +(HEAPU16[i12 + (i17 << 1) >> 1] | 0) * 1.306562965;
      i17 = i14 | 3;
      HEAPF32[i9 + (i17 << 2) >> 2] = d15 * +(HEAPU16[i12 + (i17 << 1) >> 1] | 0) * 1.175875602;
      i16 = i17 + 1 | 0;
      HEAPF32[i9 + (i16 << 2) >> 2] = d15 * +(HEAPU16[i12 + (i16 << 1) >> 1] | 0);
      i16 = i17 + 2 | 0;
      HEAPF32[i9 + (i16 << 2) >> 2] = d15 * +(HEAPU16[i12 + (i16 << 1) >> 1] | 0) * .785694958;
      i16 = i17 + 3 | 0;
      HEAPF32[i9 + (i16 << 2) >> 2] = d15 * +(HEAPU16[i12 + (i16 << 1) >> 1] | 0) * .5411961;
      i16 = i14 | 7;
      HEAPF32[i9 + (i16 << 2) >> 2] = d15 * +(HEAPU16[i12 + (i16 << 1) >> 1] | 0) * .275899379;
      i13 = i13 + 1 | 0;
      if ((i13 | 0) == 8) break; else i14 = i14 + 8 | 0;
     }
     break;
    }
   default:
    {
     i14 = HEAP32[i1 >> 2] | 0;
     HEAP32[i14 + 20 >> 2] = 48;
     FUNCTION_TABLE_vi[HEAP32[i14 >> 2] & 255](i1);
     break L16;
    }
   }
  } while (0);
  i5 = i5 + 1 | 0;
  if ((i5 | 0) >= (HEAP32[i3 >> 2] | 0)) break; else {
   i6 = i6 + 84 | 0;
   i7 = i10;
   i8 = i11;
  }
 }
 return;
}
function _getNFTMarkerInfo(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i4 = i3 + 112 | 0;
 i5 = i3 + 104 | 0;
 i6 = i3 + 96 | 0;
 i7 = i3 + 116 | 0;
 i8 = i3 + 120 | 0;
 i9 = i3 + 48 | 0;
 i10 = i3;
 HEAP32[i7 >> 2] = i1;
 i11 = HEAP32[14187] | 0;
 if (!i11) {
  i12 = -1;
  STACKTOP = i3;
  return i12 | 0;
 }
 i13 = i11 + -1 | 0;
 i14 = (i13 & i11 | 0) == 0;
 if (!i14) if (i11 >>> 0 > i1 >>> 0) i15 = i1; else i15 = (i1 >>> 0) % (i11 >>> 0) | 0; else i15 = i13 & i1;
 i16 = HEAP32[(HEAP32[14186] | 0) + (i15 << 2) >> 2] | 0;
 if (!i16) {
  i12 = -1;
  STACKTOP = i3;
  return i12 | 0;
 }
 i17 = HEAP32[i16 >> 2] | 0;
 if (!i17) {
  i12 = -1;
  STACKTOP = i3;
  return i12 | 0;
 }
 L15 : do if (i14) {
  i16 = i17;
  while (1) {
   i18 = HEAP32[i16 + 4 >> 2] | 0;
   i19 = (i18 | 0) == (i1 | 0);
   if (!(i19 | (i18 & i13 | 0) == (i15 | 0))) {
    i12 = -1;
    i20 = 30;
    break;
   }
   if (i19 ? (HEAP32[i16 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i16 = HEAP32[i16 >> 2] | 0;
   if (!i16) {
    i12 = -1;
    i20 = 30;
    break;
   }
  }
  if ((i20 | 0) == 30) {
   STACKTOP = i3;
   return i12 | 0;
  }
 } else {
  i16 = i17;
  while (1) {
   i19 = HEAP32[i16 + 4 >> 2] | 0;
   if ((i19 | 0) == (i1 | 0)) {
    if ((HEAP32[i16 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i19 >>> 0 < i11 >>> 0) i21 = i19; else i21 = (i19 >>> 0) % (i11 >>> 0) | 0;
    if ((i21 | 0) != (i15 | 0)) {
     i12 = -1;
     i20 = 30;
     break;
    }
   }
   i16 = HEAP32[i16 >> 2] | 0;
   if (!i16) {
    i12 = -1;
    i20 = 30;
    break;
   }
  }
  if ((i20 | 0) == 30) {
   STACKTOP = i3;
   return i12 | 0;
  }
 } while (0);
 i15 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i7) | 0;
 if ((HEAP32[i15 + 244 >> 2] | 0) <= (i2 | 0)) {
  i12 = -3;
  STACKTOP = i3;
  return i12 | 0;
 }
 i7 = _trackingInitGetResult(HEAP32[i15 + 240 >> 2] | 0, i10, i8) | 0;
 HEAP32[i6 >> 2] = i7;
 _arLog(0, 1, 41246, i6);
 do if ((i7 | 0) > 0) if ((HEAP32[i8 >> 2] | 0) == (i2 | 0)) _llvm_trap(); else {
  HEAP32[i5 >> 2] = i7;
  _arLog(0, 1, 41267, i5);
  i20 = 27;
  break;
 } else {
  HEAP32[i4 >> 2] = i7;
  _arLog(0, 1, 41267, i4);
  if ((i7 | 0) > -1) i20 = 27; else _emscripten_asm_const_ii(4, i2 | 0) | 0;
 } while (0);
 if ((i20 | 0) == 27) {
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  HEAP32[i9 + 12 >> 2] = HEAP32[i10 + 12 >> 2];
  i20 = i9 + 16 | 0;
  i7 = i10 + 16 | 0;
  HEAP32[i20 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i20 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i20 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  HEAP32[i20 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
  i7 = i9 + 32 | 0;
  i4 = i10 + 32 | 0;
  HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
  HEAP32[i7 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
  _emscripten_asm_const_iiddddddddddddd(3, i2 | 0, -1.0, +(+HEAPF32[i9 >> 2]), +(+HEAPF32[i9 + 4 >> 2]), +(+HEAPF32[i9 + 8 >> 2]), +(+HEAPF32[i9 + 12 >> 2]), +(+HEAPF32[i20 >> 2]), +(+HEAPF32[i9 + 20 >> 2]), +(+HEAPF32[i9 + 24 >> 2]), +(+HEAPF32[i9 + 28 >> 2]), +(+HEAPF32[i7 >> 2]), +(+HEAPF32[i9 + 36 >> 2]), +(+HEAPF32[i9 + 40 >> 2]), +(+HEAPF32[i9 + 44 >> 2])) | 0;
 }
 i12 = 0;
 STACKTOP = i3;
 return i12 | 0;
}

function _jpeg_consume_input(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i2 = i1 + 20 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 switch (i3 | 0) {
 case 200:
  {
   i4 = i1 + 436 | 0;
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] & 255](i1);
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 + 24 >> 2] | 0) + 8 >> 2] & 255](i1);
   HEAP32[i2 >> 2] = 201;
   i5 = i4;
   break;
  }
 case 201:
  {
   i5 = i1 + 436 | 0;
   break;
  }
 case 210:
 case 208:
 case 207:
 case 206:
 case 205:
 case 204:
 case 203:
  {
   i6 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i1 + 436 >> 2] >> 2] & 127](i1) | 0;
   return i6 | 0;
  }
 case 202:
  {
   i6 = 1;
   return i6 | 0;
  }
 default:
  {
   i4 = HEAP32[i1 >> 2] | 0;
   HEAP32[i4 + 20 >> 2] = 20;
   HEAP32[i4 + 24 >> 2] = i3;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   i6 = 0;
   return i6 | 0;
  }
 }
 i3 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i5 >> 2] >> 2] & 127](i1) | 0;
 if ((i3 | 0) != 1) {
  i6 = i3;
  return i6 | 0;
 }
 i3 = HEAP32[i1 + 36 >> 2] | 0;
 L13 : do switch (i3 | 0) {
 case 1:
  {
   i7 = i3;
   i8 = i3;
   break;
  }
 case 3:
  {
   if (!(HEAP32[i1 + 280 >> 2] | 0)) if (!(HEAP32[i1 + 292 >> 2] | 0)) {
    i5 = HEAP32[i1 + 216 >> 2] | 0;
    i4 = HEAP32[i5 >> 2] | 0;
    i9 = HEAP32[i5 + 84 >> 2] | 0;
    i10 = HEAP32[i5 + 168 >> 2] | 0;
    if ((i4 | 0) == 1 & (i9 | 0) == 2 & (i10 | 0) == 3) {
     i7 = 2;
     i8 = 3;
     break L13;
    }
    if ((i4 | 0) == 82 & (i9 | 0) == 71 & (i10 | 0) == 66) {
     i7 = 2;
     i8 = 2;
     break L13;
    }
    i5 = HEAP32[i1 >> 2] | 0;
    HEAP32[i5 + 24 >> 2] = i4;
    HEAP32[i5 + 28 >> 2] = i9;
    HEAP32[i5 + 32 >> 2] = i10;
    HEAP32[i5 + 20 >> 2] = 111;
    FUNCTION_TABLE_vii[HEAP32[i5 + 4 >> 2] & 63](i1, 1);
    i7 = 2;
    i8 = 3;
    break L13;
   } else {
    i5 = HEAP8[i1 + 296 >> 0] | 0;
    switch (i5 << 24 >> 24) {
    case 0:
     {
      i7 = 2;
      i8 = 2;
      break L13;
      break;
     }
    case 1:
     {
      i7 = 2;
      i8 = 3;
      break L13;
      break;
     }
    default:
     {
      i10 = HEAP32[i1 >> 2] | 0;
      HEAP32[i10 + 20 >> 2] = 114;
      HEAP32[i10 + 24 >> 2] = i5 & 255;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, -1);
      i7 = 2;
      i8 = 3;
      break L13;
     }
    }
   } else {
    i7 = 2;
    i8 = 3;
   }
   break;
  }
 case 4:
  {
   if (!(HEAP32[i1 + 292 >> 2] | 0)) {
    i7 = 4;
    i8 = 4;
   } else {
    i5 = HEAP8[i1 + 296 >> 0] | 0;
    switch (i5 << 24 >> 24) {
    case 0:
     {
      i7 = 4;
      i8 = 4;
      break L13;
      break;
     }
    case 2:
     {
      i7 = 4;
      i8 = 5;
      break L13;
      break;
     }
    default:
     {
      i10 = HEAP32[i1 >> 2] | 0;
      HEAP32[i10 + 20 >> 2] = 114;
      HEAP32[i10 + 24 >> 2] = i5 & 255;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, -1);
      i7 = 4;
      i8 = 5;
      break L13;
     }
    }
   }
   break;
  }
 default:
  {
   i7 = 0;
   i8 = 0;
  }
 } while (0);
 HEAP32[i1 + 40 >> 2] = i8;
 HEAP32[i1 + 44 >> 2] = i7;
 HEAP32[i1 + 48 >> 2] = 1;
 HEAP32[i1 + 52 >> 2] = 1;
 HEAPF64[i1 + 56 >> 3] = 1.0;
 HEAP32[i1 + 64 >> 2] = 0;
 HEAP32[i1 + 68 >> 2] = 0;
 HEAP32[i1 + 72 >> 2] = 0;
 HEAP32[i1 + 76 >> 2] = 1;
 HEAP32[i1 + 80 >> 2] = 1;
 HEAP32[i1 + 84 >> 2] = 0;
 HEAP32[i1 + 88 >> 2] = 2;
 HEAP32[i1 + 92 >> 2] = 1;
 HEAP32[i1 + 96 >> 2] = 256;
 HEAP32[i1 + 136 >> 2] = 0;
 HEAP32[i1 + 100 >> 2] = 0;
 HEAP32[i1 + 104 >> 2] = 0;
 HEAP32[i1 + 108 >> 2] = 0;
 HEAP32[i2 >> 2] = 202;
 i6 = 1;
 return i6 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = i1 + 4 | 0;
 if (!i2) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = 0;
  if (i4 | 0) __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
  return;
 }
 if (i2 >>> 0 > 1073741823) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 }
 i4 = __Znwm(i2 << 2) | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i4;
 if (i5 | 0) __ZdlPv(i5);
 HEAP32[i3 >> 2] = i2;
 i3 = 0;
 do {
  HEAP32[(HEAP32[i1 >> 2] | 0) + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != (i2 | 0));
 i3 = i1 + 8 | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 if (!i5) return;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i6 = i2 + -1 | 0;
 i7 = (i6 & i2 | 0) == 0;
 if (!i7) if (i4 >>> 0 < i2 >>> 0) i8 = i4; else i8 = (i4 >>> 0) % (i2 >>> 0) | 0; else i8 = i4 & i6;
 HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] = i3;
 i3 = HEAP32[i5 >> 2] | 0;
 if (!i3) return;
 if (i7) {
  i7 = i8;
  i4 = i3;
  i9 = i5;
  while (1) {
   i10 = HEAP32[i4 + 4 >> 2] & i6;
   do if ((i10 | 0) == (i7 | 0)) {
    i11 = i7;
    i12 = i4;
   } else {
    i13 = (HEAP32[i1 >> 2] | 0) + (i10 << 2) | 0;
    if (!(HEAP32[i13 >> 2] | 0)) {
     HEAP32[i13 >> 2] = i9;
     i11 = i10;
     i12 = i4;
     break;
    }
    i13 = HEAP32[i4 >> 2] | 0;
    L37 : do if (!i13) i14 = i4; else {
     i15 = HEAP32[i4 + 8 >> 2] | 0;
     i16 = i4;
     i17 = i13;
     while (1) {
      if ((i15 | 0) != (HEAP32[i17 + 8 >> 2] | 0)) {
       i14 = i16;
       break L37;
      }
      i18 = HEAP32[i17 >> 2] | 0;
      if (!i18) {
       i14 = i17;
       break;
      } else {
       i19 = i17;
       i17 = i18;
       i16 = i19;
      }
     }
    } while (0);
    HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i14 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2] = i4;
    i11 = i7;
    i12 = i9;
   } while (0);
   i4 = HEAP32[i12 >> 2] | 0;
   if (!i4) break; else {
    i7 = i11;
    i9 = i12;
   }
  }
  return;
 }
 i12 = i8;
 i8 = i3;
 i3 = i5;
 while (1) {
  i5 = HEAP32[i8 + 4 >> 2] | 0;
  if (i5 >>> 0 < i2 >>> 0) i20 = i5; else i20 = (i5 >>> 0) % (i2 >>> 0) | 0;
  do if ((i20 | 0) == (i12 | 0)) {
   i21 = i12;
   i22 = i8;
  } else {
   i5 = (HEAP32[i1 >> 2] | 0) + (i20 << 2) | 0;
   if (!(HEAP32[i5 >> 2] | 0)) {
    HEAP32[i5 >> 2] = i3;
    i21 = i20;
    i22 = i8;
    break;
   }
   i5 = HEAP32[i8 >> 2] | 0;
   L56 : do if (!i5) i23 = i8; else {
    i9 = HEAP32[i8 + 8 >> 2] | 0;
    i11 = i8;
    i7 = i5;
    while (1) {
     if ((i9 | 0) != (HEAP32[i7 + 8 >> 2] | 0)) {
      i23 = i11;
      break L56;
     }
     i4 = HEAP32[i7 >> 2] | 0;
     if (!i4) {
      i23 = i7;
      break;
     } else {
      i14 = i7;
      i7 = i4;
      i11 = i14;
     }
    }
   } while (0);
   HEAP32[i3 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i23 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2] = i8;
   i21 = i12;
   i22 = i3;
  } while (0);
  i8 = HEAP32[i22 >> 2] | 0;
  if (!i8) break; else {
   i12 = i21;
   i3 = i22;
  }
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = i1 + 4 | 0;
 if (!i2) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = 0;
  if (i4 | 0) __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
  return;
 }
 if (i2 >>> 0 > 1073741823) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 }
 i4 = __Znwm(i2 << 2) | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i4;
 if (i5 | 0) __ZdlPv(i5);
 HEAP32[i3 >> 2] = i2;
 i3 = 0;
 do {
  HEAP32[(HEAP32[i1 >> 2] | 0) + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != (i2 | 0));
 i3 = i1 + 8 | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 if (!i5) return;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i6 = i2 + -1 | 0;
 i7 = (i6 & i2 | 0) == 0;
 if (!i7) if (i4 >>> 0 < i2 >>> 0) i8 = i4; else i8 = (i4 >>> 0) % (i2 >>> 0) | 0; else i8 = i4 & i6;
 HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] = i3;
 i3 = HEAP32[i5 >> 2] | 0;
 if (!i3) return;
 if (i7) {
  i7 = i8;
  i4 = i3;
  i9 = i5;
  while (1) {
   i10 = HEAP32[i4 + 4 >> 2] & i6;
   do if ((i10 | 0) == (i7 | 0)) {
    i11 = i7;
    i12 = i4;
   } else {
    i13 = (HEAP32[i1 >> 2] | 0) + (i10 << 2) | 0;
    if (!(HEAP32[i13 >> 2] | 0)) {
     HEAP32[i13 >> 2] = i9;
     i11 = i10;
     i12 = i4;
     break;
    }
    i13 = HEAP32[i4 >> 2] | 0;
    L37 : do if (!i13) i14 = i4; else {
     i15 = HEAP32[i4 + 8 >> 2] | 0;
     i16 = i4;
     i17 = i13;
     while (1) {
      if ((i15 | 0) != (HEAP32[i17 + 8 >> 2] | 0)) {
       i14 = i16;
       break L37;
      }
      i18 = HEAP32[i17 >> 2] | 0;
      if (!i18) {
       i14 = i17;
       break;
      } else {
       i19 = i17;
       i17 = i18;
       i16 = i19;
      }
     }
    } while (0);
    HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i14 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2] = i4;
    i11 = i7;
    i12 = i9;
   } while (0);
   i4 = HEAP32[i12 >> 2] | 0;
   if (!i4) break; else {
    i7 = i11;
    i9 = i12;
   }
  }
  return;
 }
 i12 = i8;
 i8 = i3;
 i3 = i5;
 while (1) {
  i5 = HEAP32[i8 + 4 >> 2] | 0;
  if (i5 >>> 0 < i2 >>> 0) i20 = i5; else i20 = (i5 >>> 0) % (i2 >>> 0) | 0;
  do if ((i20 | 0) == (i12 | 0)) {
   i21 = i12;
   i22 = i8;
  } else {
   i5 = (HEAP32[i1 >> 2] | 0) + (i20 << 2) | 0;
   if (!(HEAP32[i5 >> 2] | 0)) {
    HEAP32[i5 >> 2] = i3;
    i21 = i20;
    i22 = i8;
    break;
   }
   i5 = HEAP32[i8 >> 2] | 0;
   L56 : do if (!i5) i23 = i8; else {
    i9 = HEAP32[i8 + 8 >> 2] | 0;
    i11 = i8;
    i7 = i5;
    while (1) {
     if ((i9 | 0) != (HEAP32[i7 + 8 >> 2] | 0)) {
      i23 = i11;
      break L56;
     }
     i4 = HEAP32[i7 >> 2] | 0;
     if (!i4) {
      i23 = i7;
      break;
     } else {
      i14 = i7;
      i7 = i4;
      i11 = i14;
     }
    }
   } while (0);
   HEAP32[i3 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i23 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2] = i8;
   i21 = i12;
   i22 = i3;
  } while (0);
  i8 = HEAP32[i22 >> 2] | 0;
  if (!i8) break; else {
   i12 = i21;
   i3 = i22;
  }
 }
 return;
}

function __ZNK6vision21HoughSimilarityVoting17mapCorrespondenceERfS1_S1_S1_ffffffff(i1, i2, i3, i4, i5, d6, d7, d8, d9, d10, d11, d12, d13) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 d9 = +d9;
 d10 = +d10;
 d11 = +d11;
 d12 = +d12;
 d13 = +d13;
 var i14 = 0, i15 = 0, d16 = 0.0, d17 = 0.0, i18 = 0, d19 = 0.0, i20 = 0, i21 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i15 = i14;
 d16 = d8 - d12;
 HEAPF32[i4 >> 2] = d16;
 d12 = d16;
 if (!(d12 <= -3.141592653589793)) if (d12 > 3.141592653589793) {
  d17 = d12 + -6.283185307179586;
  i18 = 5;
 } else d19 = d16; else {
  d17 = d12 + 6.283185307179586;
  i18 = 5;
 }
 if ((i18 | 0) == 5) {
  HEAPF32[i4 >> 2] = d17;
  d19 = d17;
 }
 d17 = d19;
 if (!(d17 > -3.141592653589793)) {
  i18 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30647, 34) | 0, 30394, 122) | 0, 33554, 6) | 0, 468) | 0, 33561, 2) | 0, 30682, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i15, i18 + (HEAP32[(HEAP32[i18 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58484) | 0;
  i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 28 >> 2] & 63](i20, 10) | 0;
  __ZNSt3__26localeD2Ev(i15);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i18, i21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i18) | 0;
  _abort();
 }
 if (!(d17 <= 3.141592653589793)) {
  i18 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30701, 34) | 0, 30394, 122) | 0, 33554, 6) | 0, 469) | 0, 33561, 2) | 0, 30682, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i15, i18 + (HEAP32[(HEAP32[i18 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i21 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58484) | 0;
  i20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i21 >> 2] | 0) + 28 >> 2] & 63](i21, 10) | 0;
  __ZNSt3__26localeD2Ev(i15);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i18, i20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i18) | 0;
  _abort();
 } else {
  d17 = d9 / (d13 == 0.0 ? 1.0 : d13);
  HEAPF32[i5 >> 2] = d17;
  d13 = +HEAPF32[i4 >> 2];
  d9 = d17 * +Math_cos(+d13);
  d19 = d17 * +Math_sin(+d13);
  d13 = -d19;
  d12 = +Math_log(+d17);
  HEAPF32[i5 >> 2] = d12 * +HEAPF32[i1 + 48 >> 2];
  i5 = i1 + 8 | 0;
  i4 = i1 + 12 | 0;
  HEAPF32[i2 >> 2] = d6 - (d9 * d10 + d13 * d11) + (d9 * +HEAPF32[i5 >> 2] + +HEAPF32[i4 >> 2] * d13);
  HEAPF32[i3 >> 2] = d7 - (d19 * d10 + d9 * d11) + (d19 * +HEAPF32[i5 >> 2] + d9 * +HEAPF32[i4 >> 2]);
  STACKTOP = i14;
  return;
 }
}

function __ZN6vision11PartialSortIfEET_PS1_ii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, d11 = 0.0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, i16 = 0, i17 = 0, i18 = 0, d19 = 0.0, i20 = 0, i21 = 0, i22 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if ((i2 | 0) <= 0) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31730, 28) | 0, 31759, 108) | 0, 33554, 6) | 0, 53) | 0, 33561, 2) | 0, 31868, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if ((i3 | 0) <= 0) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 31887, 28) | 0, 31759, 108) | 0, 33554, 6) | 0, 54) | 0, 33561, 2) | 0, 31916, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 i6 = i3 + -1 | 0;
 i7 = i1 + (i6 << 2) | 0;
 d9 = +HEAPF32[i7 >> 2];
 if ((i2 | 0) <= 1) {
  d10 = d9;
  STACKTOP = i4;
  return +d10;
 }
 i5 = i2 + -1 | 0;
 i2 = 0;
 d11 = d9;
 while (1) {
  i8 = i2;
  i12 = i5;
  while (1) {
   i13 = i8;
   while (1) {
    i14 = i1 + (i13 << 2) | 0;
    d15 = +HEAPF32[i14 >> 2];
    i16 = i13 + 1 | 0;
    if (d15 < d11) i13 = i16; else break;
   }
   i17 = i12;
   while (1) {
    i18 = i1 + (i17 << 2) | 0;
    d19 = +HEAPF32[i18 >> 2];
    i20 = i17 + -1 | 0;
    if (d11 < d19) i17 = i20; else break;
   }
   if ((i13 | 0) > (i17 | 0)) {
    i21 = i13;
    i22 = i17;
   } else {
    HEAPF32[i14 >> 2] = d19;
    HEAPF32[i18 >> 2] = d15;
    i21 = i16;
    i22 = i20;
   }
   if ((i21 | 0) > (i22 | 0)) break; else {
    i8 = i21;
    i12 = i22;
   }
  }
  i2 = (i22 | 0) < (i6 | 0) ? i21 : i2;
  i5 = (i21 | 0) < (i3 | 0) ? i5 : i22;
  d9 = +HEAPF32[i7 >> 2];
  if ((i2 | 0) >= (i5 | 0)) {
   d10 = d9;
   break;
  } else d11 = d9;
 }
 STACKTOP = i4;
 return +d10;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = i1 + 4 | 0;
 if (!i2) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = 0;
  if (i4 | 0) __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
  return;
 }
 if (i2 >>> 0 > 1073741823) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 }
 i4 = __Znwm(i2 << 2) | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i4;
 if (i5 | 0) __ZdlPv(i5);
 HEAP32[i3 >> 2] = i2;
 i3 = 0;
 do {
  HEAP32[(HEAP32[i1 >> 2] | 0) + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != (i2 | 0));
 i3 = i1 + 8 | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 if (!i5) return;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i6 = i2 + -1 | 0;
 i7 = (i6 & i2 | 0) == 0;
 if (!i7) if (i4 >>> 0 < i2 >>> 0) i8 = i4; else i8 = (i4 >>> 0) % (i2 >>> 0) | 0; else i8 = i4 & i6;
 HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] = i3;
 i3 = HEAP32[i5 >> 2] | 0;
 if (!i3) return;
 if (i7) {
  i7 = i8;
  i4 = i3;
  i9 = i5;
  while (1) {
   i10 = HEAP32[i4 + 4 >> 2] & i6;
   do if ((i10 | 0) == (i7 | 0)) {
    i11 = i7;
    i12 = i4;
   } else {
    i13 = (HEAP32[i1 >> 2] | 0) + (i10 << 2) | 0;
    if (!(HEAP32[i13 >> 2] | 0)) {
     HEAP32[i13 >> 2] = i9;
     i11 = i10;
     i12 = i4;
     break;
    }
    i13 = HEAP32[i4 >> 2] | 0;
    L37 : do if (!i13) i14 = i4; else {
     i15 = HEAP32[i4 + 8 >> 2] | 0;
     i16 = i4;
     i17 = i13;
     while (1) {
      if ((i15 | 0) != (HEAP32[i17 + 8 >> 2] | 0)) {
       i14 = i16;
       break L37;
      }
      i18 = HEAP32[i17 >> 2] | 0;
      if (!i18) {
       i14 = i17;
       break;
      } else {
       i19 = i17;
       i17 = i18;
       i16 = i19;
      }
     }
    } while (0);
    HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i14 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2] = i4;
    i11 = i7;
    i12 = i9;
   } while (0);
   i4 = HEAP32[i12 >> 2] | 0;
   if (!i4) break; else {
    i7 = i11;
    i9 = i12;
   }
  }
  return;
 }
 i12 = i8;
 i8 = i3;
 i3 = i5;
 while (1) {
  i5 = HEAP32[i8 + 4 >> 2] | 0;
  if (i5 >>> 0 < i2 >>> 0) i20 = i5; else i20 = (i5 >>> 0) % (i2 >>> 0) | 0;
  do if ((i20 | 0) == (i12 | 0)) {
   i21 = i12;
   i22 = i8;
  } else {
   i5 = (HEAP32[i1 >> 2] | 0) + (i20 << 2) | 0;
   if (!(HEAP32[i5 >> 2] | 0)) {
    HEAP32[i5 >> 2] = i3;
    i21 = i20;
    i22 = i8;
    break;
   }
   i5 = HEAP32[i8 >> 2] | 0;
   L56 : do if (!i5) i23 = i8; else {
    i9 = HEAP32[i8 + 8 >> 2] | 0;
    i11 = i8;
    i7 = i5;
    while (1) {
     if ((i9 | 0) != (HEAP32[i7 + 8 >> 2] | 0)) {
      i23 = i11;
      break L56;
     }
     i4 = HEAP32[i7 >> 2] | 0;
     if (!i4) {
      i23 = i7;
      break;
     } else {
      i14 = i7;
      i7 = i4;
      i11 = i14;
     }
    }
   } while (0);
   HEAP32[i3 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i23 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2] = i8;
   i21 = i12;
   i22 = i3;
  } while (0);
  i8 = HEAP32[i22 >> 2] | 0;
  if (!i8) break; else {
   i12 = i21;
   i3 = i22;
  }
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE8__rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = i1 + 4 | 0;
 if (!i2) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = 0;
  if (i4 | 0) __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
  return;
 }
 if (i2 >>> 0 > 1073741823) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 }
 i4 = __Znwm(i2 << 2) | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i4;
 if (i5 | 0) __ZdlPv(i5);
 HEAP32[i3 >> 2] = i2;
 i3 = 0;
 do {
  HEAP32[(HEAP32[i1 >> 2] | 0) + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != (i2 | 0));
 i3 = i1 + 8 | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 if (!i5) return;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i6 = i2 + -1 | 0;
 i7 = (i6 & i2 | 0) == 0;
 if (!i7) if (i4 >>> 0 < i2 >>> 0) i8 = i4; else i8 = (i4 >>> 0) % (i2 >>> 0) | 0; else i8 = i4 & i6;
 HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] = i3;
 i3 = HEAP32[i5 >> 2] | 0;
 if (!i3) return;
 if (i7) {
  i7 = i8;
  i4 = i3;
  i9 = i5;
  while (1) {
   i10 = HEAP32[i4 + 4 >> 2] & i6;
   do if ((i10 | 0) == (i7 | 0)) {
    i11 = i7;
    i12 = i4;
   } else {
    i13 = (HEAP32[i1 >> 2] | 0) + (i10 << 2) | 0;
    if (!(HEAP32[i13 >> 2] | 0)) {
     HEAP32[i13 >> 2] = i9;
     i11 = i10;
     i12 = i4;
     break;
    }
    i13 = HEAP32[i4 >> 2] | 0;
    L37 : do if (!i13) i14 = i4; else {
     i15 = HEAP32[i4 + 8 >> 2] | 0;
     i16 = i4;
     i17 = i13;
     while (1) {
      if ((i15 | 0) != (HEAP32[i17 + 8 >> 2] | 0)) {
       i14 = i16;
       break L37;
      }
      i18 = HEAP32[i17 >> 2] | 0;
      if (!i18) {
       i14 = i17;
       break;
      } else {
       i19 = i17;
       i17 = i18;
       i16 = i19;
      }
     }
    } while (0);
    HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i14 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2] = i4;
    i11 = i7;
    i12 = i9;
   } while (0);
   i4 = HEAP32[i12 >> 2] | 0;
   if (!i4) break; else {
    i7 = i11;
    i9 = i12;
   }
  }
  return;
 }
 i12 = i8;
 i8 = i3;
 i3 = i5;
 while (1) {
  i5 = HEAP32[i8 + 4 >> 2] | 0;
  if (i5 >>> 0 < i2 >>> 0) i20 = i5; else i20 = (i5 >>> 0) % (i2 >>> 0) | 0;
  do if ((i20 | 0) == (i12 | 0)) {
   i21 = i12;
   i22 = i8;
  } else {
   i5 = (HEAP32[i1 >> 2] | 0) + (i20 << 2) | 0;
   if (!(HEAP32[i5 >> 2] | 0)) {
    HEAP32[i5 >> 2] = i3;
    i21 = i20;
    i22 = i8;
    break;
   }
   i5 = HEAP32[i8 >> 2] | 0;
   L56 : do if (!i5) i23 = i8; else {
    i9 = HEAP32[i8 + 8 >> 2] | 0;
    i11 = i8;
    i7 = i5;
    while (1) {
     if ((i9 | 0) != (HEAP32[i7 + 8 >> 2] | 0)) {
      i23 = i11;
      break L56;
     }
     i4 = HEAP32[i7 >> 2] | 0;
     if (!i4) {
      i23 = i7;
      break;
     } else {
      i14 = i7;
      i7 = i4;
      i11 = i14;
     }
    }
   } while (0);
   HEAP32[i3 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i23 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2] = i8;
   i21 = i12;
   i22 = i3;
  } while (0);
  i8 = HEAP32[i22 >> 2] | 0;
  if (!i8) break; else {
   i12 = i21;
   i3 = i22;
  }
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = i1 + 4 | 0;
 if (!i2) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = 0;
  if (i4 | 0) __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
  return;
 }
 if (i2 >>> 0 > 1073741823) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 }
 i4 = __Znwm(i2 << 2) | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i4;
 if (i5 | 0) __ZdlPv(i5);
 HEAP32[i3 >> 2] = i2;
 i3 = 0;
 do {
  HEAP32[(HEAP32[i1 >> 2] | 0) + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != (i2 | 0));
 i3 = i1 + 8 | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 if (!i5) return;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i6 = i2 + -1 | 0;
 i7 = (i6 & i2 | 0) == 0;
 if (!i7) if (i4 >>> 0 < i2 >>> 0) i8 = i4; else i8 = (i4 >>> 0) % (i2 >>> 0) | 0; else i8 = i4 & i6;
 HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] = i3;
 i3 = HEAP32[i5 >> 2] | 0;
 if (!i3) return;
 if (i7) {
  i7 = i8;
  i4 = i3;
  i9 = i5;
  while (1) {
   i10 = HEAP32[i4 + 4 >> 2] & i6;
   do if ((i10 | 0) == (i7 | 0)) {
    i11 = i7;
    i12 = i4;
   } else {
    i13 = (HEAP32[i1 >> 2] | 0) + (i10 << 2) | 0;
    if (!(HEAP32[i13 >> 2] | 0)) {
     HEAP32[i13 >> 2] = i9;
     i11 = i10;
     i12 = i4;
     break;
    }
    i13 = HEAP32[i4 >> 2] | 0;
    L37 : do if (!i13) i14 = i4; else {
     i15 = HEAP32[i4 + 8 >> 2] | 0;
     i16 = i4;
     i17 = i13;
     while (1) {
      if ((i15 | 0) != (HEAP32[i17 + 8 >> 2] | 0)) {
       i14 = i16;
       break L37;
      }
      i18 = HEAP32[i17 >> 2] | 0;
      if (!i18) {
       i14 = i17;
       break;
      } else {
       i19 = i17;
       i17 = i18;
       i16 = i19;
      }
     }
    } while (0);
    HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i14 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2] = i4;
    i11 = i7;
    i12 = i9;
   } while (0);
   i4 = HEAP32[i12 >> 2] | 0;
   if (!i4) break; else {
    i7 = i11;
    i9 = i12;
   }
  }
  return;
 }
 i12 = i8;
 i8 = i3;
 i3 = i5;
 while (1) {
  i5 = HEAP32[i8 + 4 >> 2] | 0;
  if (i5 >>> 0 < i2 >>> 0) i20 = i5; else i20 = (i5 >>> 0) % (i2 >>> 0) | 0;
  do if ((i20 | 0) == (i12 | 0)) {
   i21 = i12;
   i22 = i8;
  } else {
   i5 = (HEAP32[i1 >> 2] | 0) + (i20 << 2) | 0;
   if (!(HEAP32[i5 >> 2] | 0)) {
    HEAP32[i5 >> 2] = i3;
    i21 = i20;
    i22 = i8;
    break;
   }
   i5 = HEAP32[i8 >> 2] | 0;
   L56 : do if (!i5) i23 = i8; else {
    i9 = HEAP32[i8 + 8 >> 2] | 0;
    i11 = i8;
    i7 = i5;
    while (1) {
     if ((i9 | 0) != (HEAP32[i7 + 8 >> 2] | 0)) {
      i23 = i11;
      break L56;
     }
     i4 = HEAP32[i7 >> 2] | 0;
     if (!i4) {
      i23 = i7;
      break;
     } else {
      i14 = i7;
      i7 = i4;
      i11 = i14;
     }
    }
   } while (0);
   HEAP32[i3 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i23 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2] = i8;
   i21 = i12;
   i22 = i3;
  } while (0);
  i8 = HEAP32[i22 >> 2] | 0;
  if (!i8) break; else {
   i12 = i21;
   i3 = i22;
  }
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = i1 + 4 | 0;
 if (!i2) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = 0;
  if (i4 | 0) __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
  return;
 }
 if (i2 >>> 0 > 1073741823) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 }
 i4 = __Znwm(i2 << 2) | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i4;
 if (i5 | 0) __ZdlPv(i5);
 HEAP32[i3 >> 2] = i2;
 i3 = 0;
 do {
  HEAP32[(HEAP32[i1 >> 2] | 0) + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != (i2 | 0));
 i3 = i1 + 8 | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 if (!i5) return;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i6 = i2 + -1 | 0;
 i7 = (i6 & i2 | 0) == 0;
 if (!i7) if (i4 >>> 0 < i2 >>> 0) i8 = i4; else i8 = (i4 >>> 0) % (i2 >>> 0) | 0; else i8 = i4 & i6;
 HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] = i3;
 i3 = HEAP32[i5 >> 2] | 0;
 if (!i3) return;
 if (i7) {
  i7 = i8;
  i4 = i3;
  i9 = i5;
  while (1) {
   i10 = HEAP32[i4 + 4 >> 2] & i6;
   do if ((i10 | 0) == (i7 | 0)) {
    i11 = i7;
    i12 = i4;
   } else {
    i13 = (HEAP32[i1 >> 2] | 0) + (i10 << 2) | 0;
    if (!(HEAP32[i13 >> 2] | 0)) {
     HEAP32[i13 >> 2] = i9;
     i11 = i10;
     i12 = i4;
     break;
    }
    i13 = HEAP32[i4 >> 2] | 0;
    L37 : do if (!i13) i14 = i4; else {
     i15 = HEAP32[i4 + 8 >> 2] | 0;
     i16 = i4;
     i17 = i13;
     while (1) {
      if ((i15 | 0) != (HEAP32[i17 + 8 >> 2] | 0)) {
       i14 = i16;
       break L37;
      }
      i18 = HEAP32[i17 >> 2] | 0;
      if (!i18) {
       i14 = i17;
       break;
      } else {
       i19 = i17;
       i17 = i18;
       i16 = i19;
      }
     }
    } while (0);
    HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i14 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2] = i4;
    i11 = i7;
    i12 = i9;
   } while (0);
   i4 = HEAP32[i12 >> 2] | 0;
   if (!i4) break; else {
    i7 = i11;
    i9 = i12;
   }
  }
  return;
 }
 i12 = i8;
 i8 = i3;
 i3 = i5;
 while (1) {
  i5 = HEAP32[i8 + 4 >> 2] | 0;
  if (i5 >>> 0 < i2 >>> 0) i20 = i5; else i20 = (i5 >>> 0) % (i2 >>> 0) | 0;
  do if ((i20 | 0) == (i12 | 0)) {
   i21 = i12;
   i22 = i8;
  } else {
   i5 = (HEAP32[i1 >> 2] | 0) + (i20 << 2) | 0;
   if (!(HEAP32[i5 >> 2] | 0)) {
    HEAP32[i5 >> 2] = i3;
    i21 = i20;
    i22 = i8;
    break;
   }
   i5 = HEAP32[i8 >> 2] | 0;
   L56 : do if (!i5) i23 = i8; else {
    i9 = HEAP32[i8 + 8 >> 2] | 0;
    i11 = i8;
    i7 = i5;
    while (1) {
     if ((i9 | 0) != (HEAP32[i7 + 8 >> 2] | 0)) {
      i23 = i11;
      break L56;
     }
     i4 = HEAP32[i7 >> 2] | 0;
     if (!i4) {
      i23 = i7;
      break;
     } else {
      i14 = i7;
      i7 = i4;
      i11 = i14;
     }
    }
   } while (0);
   HEAP32[i3 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i23 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2] = i8;
   i21 = i12;
   i22 = i3;
  } while (0);
  i8 = HEAP32[i22 >> 2] | 0;
  if (!i8) break; else {
   i12 = i21;
   i3 = i22;
  }
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = i1 + 4 | 0;
 if (!i2) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = 0;
  if (i4 | 0) __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
  return;
 }
 if (i2 >>> 0 > 1073741823) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 }
 i4 = __Znwm(i2 << 2) | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i4;
 if (i5 | 0) __ZdlPv(i5);
 HEAP32[i3 >> 2] = i2;
 i3 = 0;
 do {
  HEAP32[(HEAP32[i1 >> 2] | 0) + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != (i2 | 0));
 i3 = i1 + 8 | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 if (!i5) return;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i6 = i2 + -1 | 0;
 i7 = (i6 & i2 | 0) == 0;
 if (!i7) if (i4 >>> 0 < i2 >>> 0) i8 = i4; else i8 = (i4 >>> 0) % (i2 >>> 0) | 0; else i8 = i4 & i6;
 HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] = i3;
 i3 = HEAP32[i5 >> 2] | 0;
 if (!i3) return;
 if (i7) {
  i7 = i8;
  i4 = i3;
  i9 = i5;
  while (1) {
   i10 = HEAP32[i4 + 4 >> 2] & i6;
   do if ((i10 | 0) == (i7 | 0)) {
    i11 = i7;
    i12 = i4;
   } else {
    i13 = (HEAP32[i1 >> 2] | 0) + (i10 << 2) | 0;
    if (!(HEAP32[i13 >> 2] | 0)) {
     HEAP32[i13 >> 2] = i9;
     i11 = i10;
     i12 = i4;
     break;
    }
    i13 = HEAP32[i4 >> 2] | 0;
    L37 : do if (!i13) i14 = i4; else {
     i15 = HEAP32[i4 + 8 >> 2] | 0;
     i16 = i4;
     i17 = i13;
     while (1) {
      if ((i15 | 0) != (HEAP32[i17 + 8 >> 2] | 0)) {
       i14 = i16;
       break L37;
      }
      i18 = HEAP32[i17 >> 2] | 0;
      if (!i18) {
       i14 = i17;
       break;
      } else {
       i19 = i17;
       i17 = i18;
       i16 = i19;
      }
     }
    } while (0);
    HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i14 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i10 << 2) >> 2] >> 2] = i4;
    i11 = i7;
    i12 = i9;
   } while (0);
   i4 = HEAP32[i12 >> 2] | 0;
   if (!i4) break; else {
    i7 = i11;
    i9 = i12;
   }
  }
  return;
 }
 i12 = i8;
 i8 = i3;
 i3 = i5;
 while (1) {
  i5 = HEAP32[i8 + 4 >> 2] | 0;
  if (i5 >>> 0 < i2 >>> 0) i20 = i5; else i20 = (i5 >>> 0) % (i2 >>> 0) | 0;
  do if ((i20 | 0) == (i12 | 0)) {
   i21 = i12;
   i22 = i8;
  } else {
   i5 = (HEAP32[i1 >> 2] | 0) + (i20 << 2) | 0;
   if (!(HEAP32[i5 >> 2] | 0)) {
    HEAP32[i5 >> 2] = i3;
    i21 = i20;
    i22 = i8;
    break;
   }
   i5 = HEAP32[i8 >> 2] | 0;
   L56 : do if (!i5) i23 = i8; else {
    i9 = HEAP32[i8 + 8 >> 2] | 0;
    i11 = i8;
    i7 = i5;
    while (1) {
     if ((i9 | 0) != (HEAP32[i7 + 8 >> 2] | 0)) {
      i23 = i11;
      break L56;
     }
     i4 = HEAP32[i7 >> 2] | 0;
     if (!i4) {
      i23 = i7;
      break;
     } else {
      i14 = i7;
      i7 = i4;
      i11 = i14;
     }
    }
   } while (0);
   HEAP32[i3 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i23 >> 2] = HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[i1 >> 2] | 0) + (i20 << 2) >> 2] >> 2] = i8;
   i21 = i12;
   i22 = i3;
  } while (0);
  i8 = HEAP32[i22 >> 2] | 0;
  if (!i8) break; else {
   i12 = i21;
   i3 = i22;
  }
 }
 return;
}

function __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i2 = i1 + 4 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = (i4 | 0) == 0;
 L1 : do if (!i5) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (!i7) if (i3 >>> 0 < i4 >>> 0) i8 = i3; else i8 = (i3 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i3;
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] | 0;
  if ((i9 | 0) != 0 ? (i10 = HEAP32[i9 >> 2] | 0, (i10 | 0) != 0) : 0) {
   if (i7) {
    i7 = i10;
    while (1) {
     i9 = HEAP32[i7 + 4 >> 2] | 0;
     if (!((i9 | 0) == (i3 | 0) | (i9 & i6 | 0) == (i8 | 0))) {
      i11 = i8;
      break L1;
     }
     if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
      i12 = i7;
      break;
     }
     i7 = HEAP32[i7 >> 2] | 0;
     if (!i7) {
      i11 = i8;
      break L1;
     }
    }
    i13 = i12 + 16 | 0;
    return i13 | 0;
   }
   i7 = i10;
   while (1) {
    i6 = HEAP32[i7 + 4 >> 2] | 0;
    if ((i6 | 0) != (i3 | 0)) {
     if (i6 >>> 0 < i4 >>> 0) i14 = i6; else i14 = (i6 >>> 0) % (i4 >>> 0) | 0;
     if ((i14 | 0) != (i8 | 0)) {
      i11 = i8;
      break L1;
     }
    }
    if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
     i12 = i7;
     break;
    }
    i7 = HEAP32[i7 >> 2] | 0;
    if (!i7) {
     i11 = i8;
     break L1;
    }
   }
   i13 = i12 + 16 | 0;
   return i13 | 0;
  } else i11 = i8;
 } else i11 = 0; while (0);
 i8 = __Znwm(456) | 0;
 HEAP32[i8 + 8 >> 2] = i3;
 _memset(i8 + 16 | 0, 0, 440) | 0;
 HEAP32[i8 + 280 >> 2] = 1065353216;
 HEAPF64[i8 + 288 >> 3] = .0001;
 HEAPF64[i8 + 296 >> 3] = 1.0e3;
 i14 = i8 + 304 | 0;
 HEAP32[i14 >> 2] = 0;
 HEAP32[i14 + 4 >> 2] = 0;
 HEAP32[i14 + 8 >> 2] = 0;
 HEAP32[i14 + 12 >> 2] = 0;
 HEAP32[i8 + 448 >> 2] = 2;
 HEAP32[i8 + 4 >> 2] = i3;
 HEAP32[i8 >> 2] = 0;
 i14 = i1 + 12 | 0;
 d15 = +(((HEAP32[i14 >> 2] | 0) + 1 | 0) >>> 0);
 d16 = +HEAPF32[i1 + 16 >> 2];
 do if (i5 | d16 * +(i4 >>> 0) < d15) {
  i7 = i4 << 1 | (i4 >>> 0 < 3 | (i4 + -1 & i4 | 0) != 0) & 1;
  i10 = ~~+Math_ceil(+(d15 / d16)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm(i1, i7 >>> 0 < i10 >>> 0 ? i10 : i7);
  i7 = HEAP32[i2 >> 2] | 0;
  i10 = i7 + -1 | 0;
  if (!(i10 & i7)) {
   i17 = i7;
   i18 = i10 & i3;
   break;
  }
  if (i3 >>> 0 < i7 >>> 0) {
   i17 = i7;
   i18 = i3;
  } else {
   i17 = i7;
   i18 = (i3 >>> 0) % (i7 >>> 0) | 0;
  }
 } else {
  i17 = i4;
  i18 = i11;
 } while (0);
 i11 = (HEAP32[i1 >> 2] | 0) + (i18 << 2) | 0;
 i18 = HEAP32[i11 >> 2] | 0;
 if (!i18) {
  i4 = i1 + 8 | 0;
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i4 >> 2] = i8;
  HEAP32[i11 >> 2] = i4;
  i4 = HEAP32[i8 >> 2] | 0;
  if (i4 | 0) {
   i11 = HEAP32[i4 + 4 >> 2] | 0;
   i4 = i17 + -1 | 0;
   if (i4 & i17) if (i11 >>> 0 < i17 >>> 0) i19 = i11; else i19 = (i11 >>> 0) % (i17 >>> 0) | 0; else i19 = i11 & i4;
   i20 = (HEAP32[i1 >> 2] | 0) + (i19 << 2) | 0;
   i21 = 33;
  }
 } else {
  HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
  i20 = i18;
  i21 = 33;
 }
 if ((i21 | 0) == 33) HEAP32[i20 >> 2] = i8;
 HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
 i12 = i8;
 i13 = i12 + 16 | 0;
 return i13 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 L1 : do if ((i2 - i1 | 0) > 1) {
  i6 = HEAP8[i1 >> 0] | 0;
  switch (i6 << 24 >> 24) {
  case 100:
  case 111:
   {
    if ((HEAP8[i1 + 1 >> 0] | 0) == 110) {
     i7 = i1 + 2 | 0;
     if (i6 << 24 >> 24 != 111) {
      i6 = __ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0;
      i8 = (i6 | 0) == (i7 | 0) ? i1 : i6;
      break L1;
     }
     i6 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0;
     if ((i6 | 0) == (i7 | 0)) {
      i8 = i1;
      break L1;
     }
     i7 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i3) | 0;
     if ((i7 | 0) == (i6 | 0)) {
      i8 = i6;
      break L1;
     }
     i6 = i3 + 4 | 0;
     i9 = HEAP32[i6 >> 2] | 0;
     if (((i9 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i8 = i7;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i9 + -24 | 0);
     i9 = HEAP32[i6 >> 2] | 0;
     i10 = 0;
     while (1) {
      if ((i10 | 0) == -1) break;
      i11 = i10 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9 + (i11 * 24 | 0) | 0);
      i10 = i11;
     }
     HEAP32[i6 >> 2] = i9 + -24;
     i10 = HEAP8[i5 + 11 >> 0] | 0;
     i11 = i10 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9 + -48 | 0, i11 ? HEAP32[i5 >> 2] | 0 : i5, i11 ? HEAP32[i5 + 4 >> 2] | 0 : i10 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
     i8 = i7;
     break L1;
    }
    break;
   }
  default:
   {}
  }
  i10 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
  if ((i10 | 0) == (i1 | 0)) {
   i11 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   if ((i11 | 0) != (i1 | 0)) {
    i12 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i11, i2, i3) | 0;
    if ((i12 | 0) != (i11 | 0)) {
     i13 = i3 + 4 | 0;
     i14 = HEAP32[i13 >> 2] | 0;
     if (((i14 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) i8 = i12; else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i14 + -24 | 0);
      i14 = HEAP32[i13 >> 2] | 0;
      i15 = 0;
      while (1) {
       if ((i15 | 0) == -1) break;
       i16 = i15 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14 + (i16 * 24 | 0) | 0);
       i15 = i16;
      }
      HEAP32[i13 >> 2] = i14 + -24;
      i15 = HEAP8[i5 + 11 >> 0] | 0;
      i7 = i15 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i14 + -48 | 0, i7 ? HEAP32[i5 >> 2] | 0 : i5, i7 ? HEAP32[i5 + 4 >> 2] | 0 : i15 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
      i8 = i12;
     }
    } else i8 = i11;
   } else i8 = i1;
  } else i8 = i10;
 } else i8 = i1; while (0);
 STACKTOP = i4;
 return i8 | 0;
}

function __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i9;
 if ((i7 | 0) > 0 ? (i7 + 1 | 0) >>> 0 < (HEAP32[i6 + 4 >> 2] | 0) >>> 0 : 0) {
  i11 = i8 + -1 | 0;
  if ((i8 | 0) > 0 ? (i12 = i8 + 1 | 0, i12 >>> 0 < (HEAP32[i6 + 8 >> 2] | 0) >>> 0) : 0) {
   i13 = (__ZNK6vision5Image3getIfEEPKT_m(i6, i11) | 0) + (i7 << 2) | 0;
   i11 = (__ZNK6vision5Image3getIfEEPKT_m(i6, i8) | 0) + (i7 << 2) | 0;
   i8 = (__ZNK6vision5Image3getIfEEPKT_m(i6, i12) | 0) + (i7 << 2) | 0;
   i7 = i11 + 4 | 0;
   i12 = i11 + -4 | 0;
   HEAPF32[i1 >> 2] = (+HEAPF32[i7 >> 2] - +HEAPF32[i12 >> 2]) * .5;
   HEAPF32[i2 >> 2] = (+HEAPF32[i8 >> 2] - +HEAPF32[i13 >> 2]) * .5;
   HEAPF32[i3 >> 2] = +HEAPF32[i7 >> 2] + (+HEAPF32[i12 >> 2] - +HEAPF32[i11 >> 2] * 2.0);
   HEAPF32[i4 >> 2] = +HEAPF32[i8 >> 2] + (+HEAPF32[i13 >> 2] - +HEAPF32[i11 >> 2] * 2.0);
   HEAPF32[i5 >> 2] = (+HEAPF32[i13 + -4 >> 2] + +HEAPF32[i8 + 4 >> 2] - (+HEAPF32[i13 + 4 >> 2] + +HEAPF32[i8 + -4 >> 2])) * .25;
   STACKTOP = i9;
   return;
  }
  i9 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24040, 56) | 0, 22500, 128) | 0, 33554, 6) | 0, 285) | 0, 33561, 2) | 0, 22920, 15) | 0;
  __ZNKSt3__28ios_base6getlocEv(i10, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i8 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] & 63](i8, 10) | 0;
  __ZNSt3__26localeD2Ev(i10);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i13) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
  _abort();
 }
 i9 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 23984, 55) | 0, 22500, 128) | 0, 33554, 6) | 0, 284) | 0, 33561, 2) | 0, 22845, 15) | 0;
 __ZNKSt3__28ios_base6getlocEv(i10, i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0);
 i13 = __ZNKSt3__26locale9use_facetERNS0_2idE(i10, 58484) | 0;
 i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 63](i13, 10) | 0;
 __ZNSt3__26localeD2Ev(i10);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i9, i8) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i9) | 0;
 _abort();
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(432);
 i8 = i1 + 424 | 0;
 i9 = i1;
 i10 = i1 + 416 | 0;
 i11 = i1 + 408 | 0;
 i12 = i1 + 400 | 0;
 i13 = i1 + 428 | 0;
 i14 = i1 + 404 | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i10 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv(i12, i5);
 i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58516) | 0;
 HEAP8[i13 >> 0] = 0;
 i16 = HEAP32[i3 >> 2] | 0;
 HEAP32[i14 >> 2] = i16;
 i17 = HEAP32[i5 + 4 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i14 >> 2];
 i14 = i16;
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i2, i8, i4, i12, i17, i6, i13, i15, i10, i11, i9 + 400 | 0) | 0) {
  i9 = i7 + 8 + 3 | 0;
  if ((HEAP8[i9 >> 0] | 0) < 0) {
   i17 = HEAP32[i7 >> 2] | 0;
   HEAP32[i8 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i17, i8);
   HEAP32[i7 + 4 >> 2] = 0;
  } else {
   HEAP32[i8 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i7, i8);
   HEAP8[i9 >> 0] = 0;
  }
  if (HEAP8[i13 >> 0] | 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i7, FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 44 >> 2] & 63](i15, 45) | 0);
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 44 >> 2] & 63](i15, 48) | 0;
  i15 = HEAP32[i11 >> 2] | 0;
  i11 = i15 + -4 | 0;
  i9 = HEAP32[i10 >> 2] | 0;
  while (1) {
   if (i9 >>> 0 >= i11 >>> 0) break;
   if ((HEAP32[i9 >> 2] | 0) != (i13 | 0)) break;
   i9 = i9 + 4 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_(i7, i9, i15) | 0;
 }
 i15 = HEAP32[i2 >> 2] | 0;
 do if (i15) {
  i9 = HEAP32[i15 + 12 >> 2] | 0;
  if ((i9 | 0) == (HEAP32[i15 + 16 >> 2] | 0)) i18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i15 >> 2] | 0) + 36 >> 2] & 127](i15) | 0; else i18 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i9 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i18, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i19 = 1;
   break;
  } else {
   i19 = (HEAP32[i2 >> 2] | 0) == 0;
   break;
  }
 } else i19 = 1; while (0);
 do if (i16) {
  i18 = HEAP32[i14 + 12 >> 2] | 0;
  if ((i18 | 0) == (HEAP32[i14 + 16 >> 2] | 0)) i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i16 >> 2] | 0) + 36 >> 2] & 127](i14) | 0; else i20 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i18 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i20, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i19) break; else {
   i21 = 27;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i21 = 25;
   break;
  }
 } else i21 = 25; while (0);
 if ((i21 | 0) == 25 ? i19 : 0) i21 = 27;
 if ((i21 | 0) == 27) HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 2;
 i6 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__26localeD2Ev(i12);
 i12 = HEAP32[i10 >> 2] | 0;
 HEAP32[i10 >> 2] = 0;
 if (i12 | 0) FUNCTION_TABLE_vi[HEAP32[i10 + 4 >> 2] & 255](i12);
 STACKTOP = i1;
 return i6 | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i8 = i1 + 120 | 0;
 i9 = i1;
 i10 = i1 + 112 | 0;
 i11 = i1 + 108 | 0;
 i12 = i1 + 100 | 0;
 i13 = i1 + 124 | 0;
 i14 = i1 + 104 | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i10 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv(i12, i5);
 i15 = __ZNKSt3__26locale9use_facetERNS0_2idE(i12, 58484) | 0;
 HEAP8[i13 >> 0] = 0;
 i16 = HEAP32[i3 >> 2] | 0;
 HEAP32[i14 >> 2] = i16;
 i17 = HEAP32[i5 + 4 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i14 >> 2];
 i14 = i16;
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i2, i8, i4, i12, i17, i6, i13, i15, i10, i11, i9 + 100 | 0) | 0) {
  i9 = i7 + 11 | 0;
  if ((HEAP8[i9 >> 0] | 0) < 0) {
   i17 = HEAP32[i7 >> 2] | 0;
   HEAP8[i8 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i17, i8);
   HEAP32[i7 + 4 >> 2] = 0;
  } else {
   HEAP8[i8 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i8);
   HEAP8[i9 >> 0] = 0;
  }
  if (HEAP8[i13 >> 0] | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i7, FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 45) | 0);
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 63](i15, 48) | 0;
  i15 = HEAP32[i11 >> 2] | 0;
  i11 = i15 + -1 | 0;
  i9 = HEAP32[i10 >> 2] | 0;
  while (1) {
   if (i9 >>> 0 >= i11 >>> 0) break;
   if ((HEAP8[i9 >> 0] | 0) != i13 << 24 >> 24) break;
   i9 = i9 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_(i7, i9, i15) | 0;
 }
 i15 = HEAP32[i2 >> 2] | 0;
 do if (i15) {
  i9 = HEAP32[i15 + 12 >> 2] | 0;
  if ((i9 | 0) == (HEAP32[i15 + 16 >> 2] | 0)) i18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i15 >> 2] | 0) + 36 >> 2] & 127](i15) | 0; else i18 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i9 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i18, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i19 = 1;
   break;
  } else {
   i19 = (HEAP32[i2 >> 2] | 0) == 0;
   break;
  }
 } else i19 = 1; while (0);
 do if (i16) {
  i18 = HEAP32[i14 + 12 >> 2] | 0;
  if ((i18 | 0) == (HEAP32[i14 + 16 >> 2] | 0)) i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i16 >> 2] | 0) + 36 >> 2] & 127](i14) | 0; else i20 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i18 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i20, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i19) break; else {
   i21 = 27;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i21 = 25;
   break;
  }
 } else i21 = 25; while (0);
 if ((i21 | 0) == 25 ? i19 : 0) i21 = 27;
 if ((i21 | 0) == 27) HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | 2;
 i6 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__26localeD2Ev(i12);
 i12 = HEAP32[i10 >> 2] | 0;
 HEAP32[i10 >> 2] = 0;
 if (i12 | 0) FUNCTION_TABLE_vi[HEAP32[i10 + 4 >> 2] & 255](i12);
 STACKTOP = i1;
 return i6 | 0;
}

function _pass2_fs_dither(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0;
 i5 = HEAP32[i1 + 460 >> 2] | 0;
 i6 = HEAP32[i5 + 24 >> 2] | 0;
 i7 = HEAP32[i1 + 112 >> 2] | 0;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i9 = HEAP32[i5 + 40 >> 2] | 0;
 i10 = HEAP32[i1 + 136 >> 2] | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 i12 = HEAP32[i10 + 4 >> 2] | 0;
 i13 = HEAP32[i10 + 8 >> 2] | 0;
 if ((i4 | 0) <= 0) return;
 i10 = i5 + 36 | 0;
 i14 = i5 + 32 | 0;
 i5 = (i7 | 0) == 0;
 i15 = i7 + -1 | 0;
 i16 = i15 * 3 | 0;
 i17 = (i7 * 3 | 0) + 3 | 0;
 i18 = 0;
 do {
  i19 = HEAP32[i2 + (i18 << 2) >> 2] | 0;
  i20 = HEAP32[i3 + (i18 << 2) >> 2] | 0;
  if (!(HEAP32[i10 >> 2] | 0)) {
   i21 = 3;
   i22 = 1;
   i23 = HEAP32[i14 >> 2] | 0;
   i24 = i20;
   i25 = i19;
   i26 = 1;
  } else {
   i21 = -3;
   i22 = -1;
   i23 = (HEAP32[i14 >> 2] | 0) + (i17 << 1) | 0;
   i24 = i20 + i15 | 0;
   i25 = i19 + i16 | 0;
   i26 = 0;
  }
  HEAP32[i10 >> 2] = i26;
  if (i5) {
   i27 = 0;
   i28 = 0;
   i29 = 0;
   i30 = i23;
  } else {
   i19 = i21 + 1 | 0;
   i20 = i21 + 2 | 0;
   i31 = Math_imul(i7, i21) | 0;
   i32 = 0;
   i33 = 0;
   i34 = 0;
   i35 = 0;
   i36 = 0;
   i37 = 0;
   i38 = 0;
   i39 = 0;
   i40 = i7;
   i41 = 0;
   i42 = i24;
   i43 = i25;
   i44 = i23;
   while (1) {
    i45 = i44;
    i44 = i44 + (i21 << 1) | 0;
    i46 = HEAPU8[i8 + ((HEAP32[i9 + (i41 + 8 + (HEAP16[i44 >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[i43 >> 0] | 0)) >> 0] | 0;
    i47 = HEAPU8[i8 + ((HEAP32[i9 + (i32 + 8 + (HEAP16[i45 + (i19 << 1) >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[i43 + 1 >> 0] | 0)) >> 0] | 0;
    i48 = HEAPU8[i8 + ((HEAP32[i9 + (i33 + 8 + (HEAP16[i45 + (i20 << 1) >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[i43 + 2 >> 0] | 0)) >> 0] | 0;
    i49 = i46 >>> 3;
    i50 = i47 >>> 2;
    i51 = i48 >>> 3;
    i52 = (HEAP32[i6 + (i49 << 2) >> 2] | 0) + (i50 << 6) + (i51 << 1) | 0;
    i53 = HEAP16[i52 >> 1] | 0;
    if (!(i53 << 16 >> 16)) {
     _fill_inverse_cmap(i1, i49, i50, i51);
     i54 = HEAP16[i52 >> 1] | 0;
    } else i54 = i53;
    i53 = (i54 & 65535) + -1 | 0;
    HEAP8[i42 >> 0] = i53;
    i52 = i46 - (HEAPU8[i11 + i53 >> 0] | 0) | 0;
    i46 = i47 - (HEAPU8[i12 + i53 >> 0] | 0) | 0;
    i47 = i48 - (HEAPU8[i13 + i53 >> 0] | 0) | 0;
    HEAP16[i45 >> 1] = (i52 * 3 | 0) + i37;
    i37 = (i52 * 5 | 0) + i34 | 0;
    HEAP16[i45 + 2 >> 1] = (i46 * 3 | 0) + i38;
    i38 = (i46 * 5 | 0) + i35 | 0;
    HEAP16[i45 + 4 >> 1] = (i47 * 3 | 0) + i39;
    i39 = (i47 * 5 | 0) + i36 | 0;
    i40 = i40 + -1 | 0;
    if (!i40) break; else {
     i32 = i46 * 7 | 0;
     i33 = i47 * 7 | 0;
     i34 = i52;
     i35 = i46;
     i36 = i47;
     i41 = i52 * 7 | 0;
     i42 = i42 + i22 | 0;
     i43 = i43 + i21 | 0;
    }
   }
   i27 = i37;
   i28 = i38;
   i29 = i39;
   i30 = i23 + (i31 << 1) | 0;
  }
  HEAP16[i30 >> 1] = i27;
  HEAP16[i30 + 2 >> 1] = i28;
  HEAP16[i30 + 4 >> 1] = i29;
  i18 = i18 + 1 | 0;
 } while ((i18 | 0) != (i4 | 0));
 return;
}

function __ZN6vision21HoughSimilarityVoting4voteEPKfS2_i(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5 + 12 | 0;
 i7 = i5 + 8 | 0;
 i8 = i5 + 4 | 0;
 i9 = i5;
 i10 = i1 + 104 | 0;
 if (HEAP32[i10 >> 2] | 0) {
  i11 = i1 + 100 | 0;
  i12 = HEAP32[i11 >> 2] | 0;
  if (i12 | 0) {
   i13 = i12;
   do {
    i12 = i13;
    i13 = HEAP32[i13 >> 2] | 0;
    __ZdlPv(i12);
   } while ((i13 | 0) != 0);
  }
  HEAP32[i11 >> 2] = 0;
  i11 = HEAP32[i1 + 96 >> 2] | 0;
  if (i11 | 0) {
   i13 = i1 + 92 | 0;
   i12 = 0;
   do {
    HEAP32[(HEAP32[i13 >> 2] | 0) + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   } while ((i12 | 0) != (i11 | 0));
  }
  HEAP32[i10 >> 2] = 0;
 }
 if (!i4) {
  STACKTOP = i5;
  return;
 }
 i10 = i1 + 112 | 0;
 i11 = i4 << 2;
 i12 = i1 + 116 | 0;
 i13 = HEAP32[i10 >> 2] | 0;
 i14 = (HEAP32[i12 >> 2] | 0) - i13 >> 2;
 if (i11 >>> 0 <= i14 >>> 0) {
  if (i11 >>> 0 < i14 >>> 0) HEAP32[i12 >> 2] = i13 + (i11 << 2);
 } else __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i10, i11 - i14 | 0);
 i14 = i1 + 124 | 0;
 i11 = i1 + 128 | 0;
 i13 = HEAP32[i14 >> 2] | 0;
 i15 = (HEAP32[i11 >> 2] | 0) - i13 >> 2;
 if (i15 >>> 0 >= i4 >>> 0) {
  if (i15 >>> 0 > i4 >>> 0) HEAP32[i11 >> 2] = i13 + (i4 << 2);
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i14, i4 - i15 | 0);
 if (HEAP8[i1 + 16 >> 0] | 0) __ZN6vision21HoughSimilarityVoting19autoAdjustXYNumBinsEPKfS2_i(i1, i2, i3, i4);
 if ((i4 | 0) > 0) {
  i15 = i1 + 68 | 0;
  i13 = i1 + 72 | 0;
  i16 = i1 + 76 | 0;
  i17 = i1 + 80 | 0;
  i18 = 0;
  i19 = 0;
  while (1) {
   i20 = i18 << 2;
   i21 = i2 + (i20 << 2) | 0;
   i22 = i3 + (i20 << 2) | 0;
   __ZNK6vision21HoughSimilarityVoting17mapCorrespondenceERfS1_S1_S1_ffffffff(i1, i6, i7, i8, i9, +HEAPF32[i21 >> 2], +HEAPF32[i21 + 4 >> 2], +HEAPF32[i21 + 8 >> 2], +HEAPF32[i21 + 12 >> 2], +HEAPF32[i22 >> 2], +HEAPF32[i22 + 4 >> 2], +HEAPF32[i22 + 8 >> 2], +HEAPF32[i22 + 12 >> 2]);
   if (__ZN6vision21HoughSimilarityVoting4voteEffff(i1, +HEAPF32[i6 >> 2], +HEAPF32[i7 >> 2], +HEAPF32[i8 >> 2], +HEAPF32[i9 >> 2]) | 0) {
    i22 = (HEAP32[i10 >> 2] | 0) + (i19 << 2 << 2) | 0;
    HEAP32[i22 >> 2] = HEAP32[i15 >> 2];
    HEAP32[i22 + 4 >> 2] = HEAP32[i13 >> 2];
    HEAP32[i22 + 8 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i22 + 12 >> 2] = HEAP32[i17 >> 2];
    HEAP32[(HEAP32[i14 >> 2] | 0) + (i19 << 2) >> 2] = i18;
    i23 = i19 + 1 | 0;
   } else i23 = i19;
   i18 = i18 + 1 | 0;
   if ((i18 | 0) == (i4 | 0)) {
    i24 = i23;
    break;
   } else i19 = i23;
  }
 } else i24 = 0;
 i23 = i24 << 2;
 i19 = HEAP32[i10 >> 2] | 0;
 i4 = (HEAP32[i12 >> 2] | 0) - i19 >> 2;
 if (i23 >>> 0 <= i4 >>> 0) {
  if (i23 >>> 0 < i4 >>> 0) HEAP32[i12 >> 2] = i19 + (i23 << 2);
 } else __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i10, i23 - i4 | 0);
 i4 = HEAP32[i14 >> 2] | 0;
 i23 = (HEAP32[i11 >> 2] | 0) - i4 >> 2;
 if (i24 >>> 0 > i23 >>> 0) {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i14, i24 - i23 | 0);
  STACKTOP = i5;
  return;
 }
 if (i24 >>> 0 >= i23 >>> 0) {
  STACKTOP = i5;
  return;
 }
 HEAP32[i11 >> 2] = i4 + (i24 << 2);
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i1 = i5 + 8 | 0;
 L1 : while (1) {
  i5 = HEAP32[i2 >> 2] | 0;
  do if (i5) {
   i6 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i7 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i6 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i7, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i8 = 1;
    break;
   } else {
    i8 = (HEAP32[i2 >> 2] | 0) == 0;
    break;
   }
  } else i8 = 1; while (0);
  i5 = HEAP32[i3 >> 2] | 0;
  do if (i5) {
   i6 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i9 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i6 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i9, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i8) {
    i10 = i5;
    break;
   } else {
    i11 = i5;
    break L1;
   } else {
    HEAP32[i3 >> 2] = 0;
    i12 = 15;
    break;
   }
  } else i12 = 15; while (0);
  if ((i12 | 0) == 15) {
   i12 = 0;
   if (i8) {
    i11 = 0;
    break;
   } else i10 = 0;
  }
  i5 = HEAP32[i2 >> 2] | 0;
  i6 = HEAP32[i5 + 12 >> 2] | 0;
  if ((i6 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i13 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i6 >> 0] | 0) | 0;
  if ((i13 & 255) << 24 >> 24 <= -1) {
   i11 = i10;
   break;
  }
  if (!(HEAP16[(HEAP32[i1 >> 2] | 0) + (i13 << 24 >> 24 << 1) >> 1] & 8192)) {
   i11 = i10;
   break;
  }
  i6 = HEAP32[i2 >> 2] | 0;
  i5 = i6 + 12 | 0;
  i14 = HEAP32[i5 >> 2] | 0;
  if ((i14 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 127](i6) | 0; else {
   HEAP32[i5 >> 2] = i14 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i14 >> 0] | 0) | 0;
  }
 }
 i10 = HEAP32[i2 >> 2] | 0;
 do if (i10) {
  i13 = HEAP32[i10 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i10 + 16 >> 2] | 0)) i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 36 >> 2] & 127](i10) | 0; else i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i13 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i16 = 1;
   break;
  } else {
   i16 = (HEAP32[i2 >> 2] | 0) == 0;
   break;
  }
 } else i16 = 1; while (0);
 do if (i11) {
  i2 = HEAP32[i11 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i11 + 16 >> 2] | 0)) i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 127](i11) | 0; else i17 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i2 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i17, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i16) break; else {
   i12 = 41;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i12 = 39;
   break;
  }
 } else i12 = 39; while (0);
 if ((i12 | 0) == 39 ? i16 : 0) i12 = 41;
 if ((i12 | 0) == 41) HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 2;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i6 = i5 + 24 | 0;
 i7 = i5;
 i8 = i5 + 12 | 0;
 i9 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i1, i2) | 0;
 if (!((i9 | 0) == (i1 | 0) | (i9 | 0) == (i2 | 0)) ? (HEAP8[i9 >> 0] | 0) == 69 : 0) {
  i2 = i3 + 11 | 0;
  i10 = HEAP8[i2 >> 0] | 0;
  i11 = i3 + 4 | 0;
  do if ((i10 << 24 >> 24 < 0 ? HEAP32[i11 >> 2] | 0 : i10 & 255) >>> 0 <= 3) {
   i12 = i4 + 4 | 0;
   i13 = HEAP32[i12 >> 2] | 0;
   if (i13 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    HEAP32[i13 >> 2] = 0;
    HEAP32[i13 + 4 >> 2] = 0;
    HEAP32[i13 + 8 >> 2] = 0;
    HEAP32[i13 + 12 >> 2] = 0;
    HEAP32[i13 + 16 >> 2] = 0;
    HEAP32[i13 + 20 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i13);
    HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 24;
    break;
   } else {
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_(i4);
    break;
   }
  } else {
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i8, 50245, i3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50243) | 0;
   HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i8 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
   i12 = i4 + 4 | 0;
   i13 = HEAP32[i12 >> 2] | 0;
   if (i13 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i13, i6);
    HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i4, i6);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  } while (0);
  i8 = i4 + 4 | 0;
  if ((HEAP8[i1 >> 0] | 0) == 110) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[i8 >> 2] | 0) + -24 | 0, 45);
   i14 = i1 + 1 | 0;
  } else i14 = i1;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_((HEAP32[i8 >> 2] | 0) + -24 | 0, i14, i9);
  i14 = HEAP8[i2 >> 0] | 0;
  i2 = i14 << 24 >> 24 < 0;
  i4 = i2 ? HEAP32[i11 >> 2] | 0 : i14 & 255;
  if (i4 >>> 0 < 4) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i8 >> 2] | 0) + -24 | 0, i2 ? HEAP32[i3 >> 2] | 0 : i3, i4) | 0;
  i15 = i9 + 1 | 0;
 } else i15 = i1;
 STACKTOP = i5;
 return i15 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 do if (i1) {
  i6 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i6 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i7 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i6 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i7, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i8 = 1;
   break;
  } else {
   i8 = (HEAP32[i2 >> 2] | 0) == 0;
   break;
  }
 } else i8 = 1; while (0);
 i7 = HEAP32[i3 >> 2] | 0;
 do if (i7) {
  i1 = HEAP32[i7 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i7 + 16 >> 2] | 0)) i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i7) | 0; else i9 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i9, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i8) {
   i10 = i7;
   i11 = 17;
   break;
  } else {
   i11 = 16;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i11 = 14;
   break;
  }
 } else i11 = 14; while (0);
 if ((i11 | 0) == 14) if (i8) i11 = 16; else {
  i10 = 0;
  i11 = 17;
 }
 L22 : do if ((i11 | 0) == 16) HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 6; else if ((i11 | 0) == 17) {
  i8 = HEAP32[i2 >> 2] | 0;
  i7 = HEAP32[i8 + 12 >> 2] | 0;
  if ((i7 | 0) == (HEAP32[i8 + 16 >> 2] | 0)) i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 36 >> 2] & 127](i8) | 0; else i12 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i7 >> 2] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 52 >> 2] & 63](i5, i12, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 4;
   break;
  }
  i7 = HEAP32[i2 >> 2] | 0;
  i8 = i7 + 12 | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  if ((i9 | 0) == (HEAP32[i7 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] & 127](i7) | 0; else {
   HEAP32[i8 >> 2] = i9 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i9 >> 2] | 0) | 0;
  }
  i9 = HEAP32[i2 >> 2] | 0;
  do if (i9) {
   i8 = HEAP32[i9 + 12 >> 2] | 0;
   if ((i8 | 0) == (HEAP32[i9 + 16 >> 2] | 0)) i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 127](i9) | 0; else i13 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i8 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i13, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i14 = 1;
    break;
   } else {
    i14 = (HEAP32[i2 >> 2] | 0) == 0;
    break;
   }
  } else i14 = 1; while (0);
  do if (i10) {
   i9 = HEAP32[i10 + 12 >> 2] | 0;
   if ((i9 | 0) == (HEAP32[i10 + 16 >> 2] | 0)) i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 36 >> 2] & 127](i10) | 0; else i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i9 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i14) break L22; else break; else {
    HEAP32[i3 >> 2] = 0;
    i11 = 38;
    break;
   }
  } else i11 = 38; while (0);
  if ((i11 | 0) == 38 ? !i14 : 0) break;
  HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 2;
 } while (0);
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 do if (i1) {
  i6 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i6 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i7 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i6 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i7, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i8 = 1;
   break;
  } else {
   i8 = (HEAP32[i2 >> 2] | 0) == 0;
   break;
  }
 } else i8 = 1; while (0);
 i7 = HEAP32[i3 >> 2] | 0;
 do if (i7) {
  i1 = HEAP32[i7 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i7 + 16 >> 2] | 0)) i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] & 127](i7) | 0; else i9 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i9, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i8) {
   i10 = i7;
   i11 = 17;
   break;
  } else {
   i11 = 16;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i11 = 14;
   break;
  }
 } else i11 = 14; while (0);
 if ((i11 | 0) == 14) if (i8) i11 = 16; else {
  i10 = 0;
  i11 = 17;
 }
 L22 : do if ((i11 | 0) == 16) HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 6; else if ((i11 | 0) == 17) {
  i8 = HEAP32[i2 >> 2] | 0;
  i7 = HEAP32[i8 + 12 >> 2] | 0;
  if ((i7 | 0) == (HEAP32[i8 + 16 >> 2] | 0)) i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 36 >> 2] & 127](i8) | 0; else i12 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i7 >> 0] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 63](i5, i12 & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 4;
   break;
  }
  i7 = HEAP32[i2 >> 2] | 0;
  i8 = i7 + 12 | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  if ((i9 | 0) == (HEAP32[i7 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] & 127](i7) | 0; else {
   HEAP32[i8 >> 2] = i9 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i9 >> 0] | 0) | 0;
  }
  i9 = HEAP32[i2 >> 2] | 0;
  do if (i9) {
   i8 = HEAP32[i9 + 12 >> 2] | 0;
   if ((i8 | 0) == (HEAP32[i9 + 16 >> 2] | 0)) i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 127](i9) | 0; else i13 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i8 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i13, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i14 = 1;
    break;
   } else {
    i14 = (HEAP32[i2 >> 2] | 0) == 0;
    break;
   }
  } else i14 = 1; while (0);
  do if (i10) {
   i9 = HEAP32[i10 + 12 >> 2] | 0;
   if ((i9 | 0) == (HEAP32[i10 + 16 >> 2] | 0)) i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 36 >> 2] & 127](i10) | 0; else i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i9 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if (i14) break L22; else break; else {
    HEAP32[i3 >> 2] = 0;
    i11 = 38;
    break;
   }
  } else i11 = 38; while (0);
  if ((i11 | 0) == 38 ? !i14 : 0) break;
  HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 2;
 } while (0);
 return;
}

function __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i6 >> 2] = i4;
 i1 = i5;
 if (i8 & 2) if ((i1 - i4 | 0) < 3) i9 = 1; else {
  HEAP32[i6 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -17;
  i4 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -69;
  i4 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -65;
  i10 = 4;
 } else i10 = 4;
 L4 : do if ((i10 | 0) == 4) {
  i4 = i2;
  i8 = HEAP32[i3 >> 2] | 0;
  while (1) {
   if (i8 >>> 0 >= i2 >>> 0) {
    i9 = 0;
    break L4;
   }
   i5 = HEAP16[i8 >> 1] | 0;
   i11 = i5 & 65535;
   if (i11 >>> 0 > i7 >>> 0) {
    i9 = 2;
    break L4;
   }
   do if ((i5 & 65535) < 128) {
    i12 = HEAP32[i6 >> 2] | 0;
    if ((i1 - i12 | 0) < 1) {
     i9 = 1;
     break L4;
    }
    HEAP32[i6 >> 2] = i12 + 1;
    HEAP8[i12 >> 0] = i5;
   } else {
    if ((i5 & 65535) < 2048) {
     i12 = HEAP32[i6 >> 2] | 0;
     if ((i1 - i12 | 0) < 2) {
      i9 = 1;
      break L4;
     }
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i11 >>> 6 | 192;
     i12 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i11 & 63 | 128;
     break;
    }
    if ((i5 & 65535) < 55296) {
     i12 = HEAP32[i6 >> 2] | 0;
     if ((i1 - i12 | 0) < 3) {
      i9 = 1;
      break L4;
     }
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i11 >>> 12 | 224;
     i12 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i11 >>> 6 & 63 | 128;
     i12 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i11 & 63 | 128;
     break;
    }
    if ((i5 & 65535) >= 56320) {
     if ((i5 & 65535) < 57344) {
      i9 = 2;
      break L4;
     }
     i12 = HEAP32[i6 >> 2] | 0;
     if ((i1 - i12 | 0) < 3) {
      i9 = 1;
      break L4;
     }
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i11 >>> 12 | 224;
     i12 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i11 >>> 6 & 63 | 128;
     i12 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i11 & 63 | 128;
     break;
    }
    if ((i4 - i8 | 0) < 4) {
     i9 = 1;
     break L4;
    }
    i12 = i8 + 2 | 0;
    i13 = HEAPU16[i12 >> 1] | 0;
    if ((i13 & 64512 | 0) != 56320) {
     i9 = 2;
     break L4;
    }
    if ((i1 - (HEAP32[i6 >> 2] | 0) | 0) < 4) {
     i9 = 1;
     break L4;
    }
    i14 = i11 & 960;
    if (((i14 << 10) + 65536 | i11 << 10 & 64512 | i13 & 1023) >>> 0 > i7 >>> 0) {
     i9 = 2;
     break L4;
    }
    HEAP32[i3 >> 2] = i12;
    i12 = (i14 >>> 6) + 1 | 0;
    i14 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i14 + 1;
    HEAP8[i14 >> 0] = i12 >>> 2 | 240;
    i14 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i14 + 1;
    HEAP8[i14 >> 0] = i11 >>> 2 & 15 | i12 << 4 & 48 | 128;
    i12 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i12 + 1;
    HEAP8[i12 >> 0] = i11 << 4 & 48 | i13 >>> 6 & 15 | 128;
    i12 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i12 + 1;
    HEAP8[i12 >> 0] = i13 & 63 | 128;
   } while (0);
   i11 = (HEAP32[i3 >> 2] | 0) + 2 | 0;
   HEAP32[i3 >> 2] = i11;
   i8 = i11;
  }
 } while (0);
 return i9 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 L1 : while (1) {
  i1 = HEAP32[i2 >> 2] | 0;
  do if (i1) {
   i6 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i7 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i6 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i7, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[i2 >> 2] = 0;
    i8 = 1;
    break;
   } else {
    i8 = (HEAP32[i2 >> 2] | 0) == 0;
    break;
   }
  } else i8 = 1; while (0);
  i1 = HEAP32[i3 >> 2] | 0;
  do if (i1) {
   i6 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i9 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i6 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i9, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i8) {
    i10 = i1;
    break;
   } else {
    i11 = i1;
    break L1;
   } else {
    HEAP32[i3 >> 2] = 0;
    i12 = 15;
    break;
   }
  } else i12 = 15; while (0);
  if ((i12 | 0) == 15) {
   i12 = 0;
   if (i8) {
    i11 = 0;
    break;
   } else i10 = 0;
  }
  i1 = HEAP32[i2 >> 2] | 0;
  i6 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i6 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i13 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i6 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 63](i5, 8192, i13) | 0)) {
   i11 = i10;
   break;
  }
  i6 = HEAP32[i2 >> 2] | 0;
  i1 = i6 + 12 | 0;
  i14 = HEAP32[i1 >> 2] | 0;
  if ((i14 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 127](i6) | 0; else {
   HEAP32[i1 >> 2] = i14 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i14 >> 2] | 0) | 0;
  }
 }
 i10 = HEAP32[i2 >> 2] | 0;
 do if (i10) {
  i13 = HEAP32[i10 + 12 >> 2] | 0;
  if ((i13 | 0) == (HEAP32[i10 + 16 >> 2] | 0)) i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 36 >> 2] & 127](i10) | 0; else i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i13 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[i2 >> 2] = 0;
   i16 = 1;
   break;
  } else {
   i16 = (HEAP32[i2 >> 2] | 0) == 0;
   break;
  }
 } else i16 = 1; while (0);
 do if (i11) {
  i2 = HEAP32[i11 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i11 + 16 >> 2] | 0)) i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 127](i11) | 0; else i17 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i2 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i17, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if (i16) break; else {
   i12 = 40;
   break;
  } else {
   HEAP32[i3 >> 2] = 0;
   i12 = 38;
   break;
  }
 } else i12 = 38; while (0);
 if ((i12 | 0) == 38 ? i16 : 0) i12 = 40;
 if ((i12 | 0) == 40) HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 2;
 return;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i2 = i1 + 4 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = (i4 | 0) == 0;
 L1 : do if (!i5) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (!i7) if (i3 >>> 0 < i4 >>> 0) i8 = i3; else i8 = (i3 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i3;
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] | 0;
  if ((i9 | 0) != 0 ? (i10 = HEAP32[i9 >> 2] | 0, (i10 | 0) != 0) : 0) {
   if (i7) {
    i7 = i10;
    while (1) {
     i9 = HEAP32[i7 + 4 >> 2] | 0;
     if (!((i9 | 0) == (i3 | 0) | (i9 & i6 | 0) == (i8 | 0))) {
      i11 = i8;
      break L1;
     }
     if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
      i12 = i7;
      break;
     }
     i7 = HEAP32[i7 >> 2] | 0;
     if (!i7) {
      i11 = i8;
      break L1;
     }
    }
    i13 = i12 + 12 | 0;
    return i13 | 0;
   }
   i7 = i10;
   while (1) {
    i6 = HEAP32[i7 + 4 >> 2] | 0;
    if ((i6 | 0) != (i3 | 0)) {
     if (i6 >>> 0 < i4 >>> 0) i14 = i6; else i14 = (i6 >>> 0) % (i4 >>> 0) | 0;
     if ((i14 | 0) != (i8 | 0)) {
      i11 = i8;
      break L1;
     }
    }
    if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
     i12 = i7;
     break;
    }
    i7 = HEAP32[i7 >> 2] | 0;
    if (!i7) {
     i11 = i8;
     break L1;
    }
   }
   i13 = i12 + 12 | 0;
   return i13 | 0;
  } else i11 = i8;
 } else i11 = 0; while (0);
 i8 = __Znwm(24) | 0;
 HEAP32[i8 + 8 >> 2] = i3;
 HEAP32[i8 + 12 >> 2] = 0;
 HEAP32[i8 + 16 >> 2] = 0;
 HEAP32[i8 + 20 >> 2] = 0;
 HEAP32[i8 + 4 >> 2] = i3;
 HEAP32[i8 >> 2] = 0;
 i14 = i1 + 12 | 0;
 d15 = +(((HEAP32[i14 >> 2] | 0) + 1 | 0) >>> 0);
 d16 = +HEAPF32[i1 + 16 >> 2];
 do if (i5 | d16 * +(i4 >>> 0) < d15) {
  i7 = i4 << 1 | (i4 >>> 0 < 3 | (i4 + -1 & i4 | 0) != 0) & 1;
  i10 = ~~+Math_ceil(+(d15 / d16)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE6rehashEm(i1, i7 >>> 0 < i10 >>> 0 ? i10 : i7);
  i7 = HEAP32[i2 >> 2] | 0;
  i10 = i7 + -1 | 0;
  if (!(i10 & i7)) {
   i17 = i7;
   i18 = i10 & i3;
   break;
  }
  if (i3 >>> 0 < i7 >>> 0) {
   i17 = i7;
   i18 = i3;
  } else {
   i17 = i7;
   i18 = (i3 >>> 0) % (i7 >>> 0) | 0;
  }
 } else {
  i17 = i4;
  i18 = i11;
 } while (0);
 i11 = (HEAP32[i1 >> 2] | 0) + (i18 << 2) | 0;
 i18 = HEAP32[i11 >> 2] | 0;
 if (!i18) {
  i4 = i1 + 8 | 0;
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i4 >> 2] = i8;
  HEAP32[i11 >> 2] = i4;
  i4 = HEAP32[i8 >> 2] | 0;
  if (i4 | 0) {
   i11 = HEAP32[i4 + 4 >> 2] | 0;
   i4 = i17 + -1 | 0;
   if (i4 & i17) if (i11 >>> 0 < i17 >>> 0) i19 = i11; else i19 = (i11 >>> 0) % (i17 >>> 0) | 0; else i19 = i11 & i4;
   i20 = (HEAP32[i1 >> 2] | 0) + (i19 << 2) | 0;
   i21 = 33;
  }
 } else {
  HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
  i20 = i18;
  i21 = 33;
 }
 if ((i21 | 0) == 33) HEAP32[i20 >> 2] = i8;
 HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
 i12 = i8;
 i13 = i12 + 12 | 0;
 return i13 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5 + 16 | 0;
 i7 = i5 + 4 | 0;
 i8 = i5;
 i9 = i1 + 11 | 0;
 i10 = HEAP8[i9 >> 0] | 0;
 i11 = i10 << 24 >> 24 < 0;
 if (i11) i12 = HEAP32[i1 >> 2] | 0; else i12 = i1;
 i13 = HEAP32[i2 >> 2] | 0;
 i2 = i13 - i12 | 0;
 i12 = i4 - i3 | 0;
 do if (!i12) {
  i14 = i10;
  i15 = 27;
 } else {
  if (i11) {
   i16 = HEAP32[i1 >> 2] | 0;
   i17 = HEAP32[i1 + 4 >> 2] | 0;
  } else {
   i16 = i1;
   i17 = i10 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_(i3, i16, i16 + i17 | 0) | 0) {
   HEAP32[i7 >> 2] = 0;
   HEAP32[i7 + 4 >> 2] = 0;
   HEAP32[i7 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i7, i3, i4);
   HEAP32[i8 >> 2] = i13;
   i18 = HEAP8[i7 + 11 >> 0] | 0;
   i19 = i18 << 24 >> 24 < 0;
   i20 = i19 ? HEAP32[i7 >> 2] | 0 : i7;
   i21 = i20 + (i19 ? HEAP32[i7 + 4 >> 2] | 0 : i18 & 255) | 0;
   HEAP32[i6 >> 2] = HEAP32[i8 >> 2];
   i18 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_(i1, i6, i20, i21) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   i22 = i18;
   break;
  }
  i18 = HEAP8[i9 >> 0] | 0;
  i21 = i18 << 24 >> 24 < 0;
  if (i21) {
   i23 = HEAP32[i1 + 4 >> 2] | 0;
   i24 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   i23 = i18 & 255;
   i24 = 10;
  }
  if ((i24 - i23 | 0) >>> 0 >= i12 >>> 0) {
   if (i21) i25 = HEAP32[i1 >> 2] | 0; else i25 = i1;
   i21 = i23 - i2 | 0;
   if (!i21) i26 = i25; else {
    i18 = i25 + i2 | 0;
    __ZNSt3__211char_traitsIcE4moveEPcPKcm(i18 + i12 | 0, i18, i21) | 0;
    i26 = i25;
   }
  } else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm(i1, i24, i23 + i12 - i24 | 0, i23, i2, i12);
   i26 = HEAP32[i1 >> 2] | 0;
  }
  i21 = i23 + i12 | 0;
  if ((HEAP8[i9 >> 0] | 0) < 0) HEAP32[i1 + 4 >> 2] = i21; else HEAP8[i9 >> 0] = i21;
  HEAP8[i6 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i26 + i21 | 0, i6);
  i21 = i3;
  i18 = i26 + i2 | 0;
  while (1) {
   if ((i21 | 0) == (i4 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i18, i21);
   i21 = i21 + 1 | 0;
   i18 = i18 + 1 | 0;
  }
  i14 = HEAP8[i9 >> 0] | 0;
  i15 = 27;
 } while (0);
 if ((i15 | 0) == 27) {
  if (i14 << 24 >> 24 < 0) i27 = HEAP32[i1 >> 2] | 0; else i27 = i1;
  i22 = i27 + i2 | 0;
 }
 STACKTOP = i5;
 return i22 | 0;
}

function __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEEixERSC_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i2 = i1 + 4 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = (i4 | 0) == 0;
 L1 : do if (!i5) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (!i7) if (i3 >>> 0 < i4 >>> 0) i8 = i3; else i8 = (i3 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i3;
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] | 0;
  if ((i9 | 0) != 0 ? (i10 = HEAP32[i9 >> 2] | 0, (i10 | 0) != 0) : 0) {
   if (i7) {
    i7 = i10;
    while (1) {
     i9 = HEAP32[i7 + 4 >> 2] | 0;
     if (!((i9 | 0) == (i3 | 0) | (i9 & i6 | 0) == (i8 | 0))) {
      i11 = i8;
      break L1;
     }
     if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
      i12 = i7;
      break;
     }
     i7 = HEAP32[i7 >> 2] | 0;
     if (!i7) {
      i11 = i8;
      break L1;
     }
    }
    i13 = i12 + 12 | 0;
    return i13 | 0;
   }
   i7 = i10;
   while (1) {
    i6 = HEAP32[i7 + 4 >> 2] | 0;
    if ((i6 | 0) != (i3 | 0)) {
     if (i6 >>> 0 < i4 >>> 0) i14 = i6; else i14 = (i6 >>> 0) % (i4 >>> 0) | 0;
     if ((i14 | 0) != (i8 | 0)) {
      i11 = i8;
      break L1;
     }
    }
    if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
     i12 = i7;
     break;
    }
    i7 = HEAP32[i7 >> 2] | 0;
    if (!i7) {
     i11 = i8;
     break L1;
    }
   }
   i13 = i12 + 12 | 0;
   return i13 | 0;
  } else i11 = i8;
 } else i11 = 0; while (0);
 i8 = __Znwm(20) | 0;
 HEAP32[i8 + 8 >> 2] = i3;
 HEAP32[i8 + 12 >> 2] = 0;
 HEAP32[i8 + 16 >> 2] = 0;
 HEAP32[i8 + 4 >> 2] = i3;
 HEAP32[i8 >> 2] = 0;
 i14 = i1 + 12 | 0;
 d15 = +(((HEAP32[i14 >> 2] | 0) + 1 | 0) >>> 0);
 d16 = +HEAPF32[i1 + 16 >> 2];
 do if (i5 | d16 * +(i4 >>> 0) < d15) {
  i7 = i4 << 1 | (i4 >>> 0 < 3 | (i4 + -1 & i4 | 0) != 0) & 1;
  i10 = ~~+Math_ceil(+(d15 / d16)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE6rehashEm(i1, i7 >>> 0 < i10 >>> 0 ? i10 : i7);
  i7 = HEAP32[i2 >> 2] | 0;
  i10 = i7 + -1 | 0;
  if (!(i10 & i7)) {
   i17 = i7;
   i18 = i10 & i3;
   break;
  }
  if (i3 >>> 0 < i7 >>> 0) {
   i17 = i7;
   i18 = i3;
  } else {
   i17 = i7;
   i18 = (i3 >>> 0) % (i7 >>> 0) | 0;
  }
 } else {
  i17 = i4;
  i18 = i11;
 } while (0);
 i11 = (HEAP32[i1 >> 2] | 0) + (i18 << 2) | 0;
 i18 = HEAP32[i11 >> 2] | 0;
 if (!i18) {
  i4 = i1 + 8 | 0;
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i4 >> 2] = i8;
  HEAP32[i11 >> 2] = i4;
  i4 = HEAP32[i8 >> 2] | 0;
  if (i4 | 0) {
   i11 = HEAP32[i4 + 4 >> 2] | 0;
   i4 = i17 + -1 | 0;
   if (i4 & i17) if (i11 >>> 0 < i17 >>> 0) i19 = i11; else i19 = (i11 >>> 0) % (i17 >>> 0) | 0; else i19 = i11 & i4;
   i20 = (HEAP32[i1 >> 2] | 0) + (i19 << 2) | 0;
   i21 = 33;
  }
 } else {
  HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
  i20 = i18;
  i21 = 33;
 }
 if ((i21 | 0) == 33) HEAP32[i20 >> 2] = i8;
 HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
 i12 = i8;
 i13 = i12 + 12 | 0;
 return i13 | 0;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEEixERSA_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i2 = i1 + 4 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = (i4 | 0) == 0;
 L1 : do if (!i5) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (!i7) if (i3 >>> 0 < i4 >>> 0) i8 = i3; else i8 = (i3 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i3;
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] | 0;
  if ((i9 | 0) != 0 ? (i10 = HEAP32[i9 >> 2] | 0, (i10 | 0) != 0) : 0) {
   if (i7) {
    i7 = i10;
    while (1) {
     i9 = HEAP32[i7 + 4 >> 2] | 0;
     if (!((i9 | 0) == (i3 | 0) | (i9 & i6 | 0) == (i8 | 0))) {
      i11 = i8;
      break L1;
     }
     if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
      i12 = i7;
      break;
     }
     i7 = HEAP32[i7 >> 2] | 0;
     if (!i7) {
      i11 = i8;
      break L1;
     }
    }
    i13 = i12 + 12 | 0;
    return i13 | 0;
   }
   i7 = i10;
   while (1) {
    i6 = HEAP32[i7 + 4 >> 2] | 0;
    if ((i6 | 0) != (i3 | 0)) {
     if (i6 >>> 0 < i4 >>> 0) i14 = i6; else i14 = (i6 >>> 0) % (i4 >>> 0) | 0;
     if ((i14 | 0) != (i8 | 0)) {
      i11 = i8;
      break L1;
     }
    }
    if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
     i12 = i7;
     break;
    }
    i7 = HEAP32[i7 >> 2] | 0;
    if (!i7) {
     i11 = i8;
     break L1;
    }
   }
   i13 = i12 + 12 | 0;
   return i13 | 0;
  } else i11 = i8;
 } else i11 = 0; while (0);
 i8 = __Znwm(24) | 0;
 HEAP32[i8 + 8 >> 2] = i3;
 HEAP32[i8 + 12 >> 2] = 0;
 HEAP32[i8 + 16 >> 2] = 0;
 HEAP32[i8 + 20 >> 2] = 0;
 HEAP32[i8 + 4 >> 2] = i3;
 HEAP32[i8 >> 2] = 0;
 i14 = i1 + 12 | 0;
 d15 = +(((HEAP32[i14 >> 2] | 0) + 1 | 0) >>> 0);
 d16 = +HEAPF32[i1 + 16 >> 2];
 do if (i5 | d16 * +(i4 >>> 0) < d15) {
  i7 = i4 << 1 | (i4 >>> 0 < 3 | (i4 + -1 & i4 | 0) != 0) & 1;
  i10 = ~~+Math_ceil(+(d15 / d16)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE6rehashEm(i1, i7 >>> 0 < i10 >>> 0 ? i10 : i7);
  i7 = HEAP32[i2 >> 2] | 0;
  i10 = i7 + -1 | 0;
  if (!(i10 & i7)) {
   i17 = i7;
   i18 = i10 & i3;
   break;
  }
  if (i3 >>> 0 < i7 >>> 0) {
   i17 = i7;
   i18 = i3;
  } else {
   i17 = i7;
   i18 = (i3 >>> 0) % (i7 >>> 0) | 0;
  }
 } else {
  i17 = i4;
  i18 = i11;
 } while (0);
 i11 = (HEAP32[i1 >> 2] | 0) + (i18 << 2) | 0;
 i18 = HEAP32[i11 >> 2] | 0;
 if (!i18) {
  i4 = i1 + 8 | 0;
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i4 >> 2] = i8;
  HEAP32[i11 >> 2] = i4;
  i4 = HEAP32[i8 >> 2] | 0;
  if (i4 | 0) {
   i11 = HEAP32[i4 + 4 >> 2] | 0;
   i4 = i17 + -1 | 0;
   if (i4 & i17) if (i11 >>> 0 < i17 >>> 0) i19 = i11; else i19 = (i11 >>> 0) % (i17 >>> 0) | 0; else i19 = i11 & i4;
   i20 = (HEAP32[i1 >> 2] | 0) + (i19 << 2) | 0;
   i21 = 33;
  }
 } else {
  HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
  i20 = i18;
  i21 = 33;
 }
 if ((i21 | 0) == 33) HEAP32[i20 >> 2] = i8;
 HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
 i12 = i8;
 i13 = i12 + 12 | 0;
 return i13 | 0;
}

function _kpmLoadRefDataSet(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 56 | 0;
 i6 = i4 + 48 | 0;
 i7 = i4 + 40 | 0;
 i8 = i4 + 32 | 0;
 i9 = i4 + 8 | 0;
 i10 = i4 + 60 | 0;
 HEAP8[i10 >> 0] = HEAP8[20119] | 0;
 HEAP8[i10 + 1 >> 0] = HEAP8[20120] | 0;
 HEAP8[i10 + 2 >> 0] = HEAP8[20121] | 0;
 if (!((i1 | 0) != 0 & (i3 | 0) != 0)) {
  _arLog(0, 3, 20122, i4);
  i11 = -1;
  STACKTOP = i4;
  return i11 | 0;
 }
 i12 = _kpmFopen(i1, i2, i10) | 0;
 if (!i12) {
  i10 = (i2 | 0) != 0;
  HEAP32[i9 >> 2] = i1;
  HEAP32[i9 + 4 >> 2] = i10 ? 50534 : 58932;
  HEAP32[i9 + 8 >> 2] = i10 ? i2 : 58932;
  _arLog(0, 3, 20173, i9);
  i11 = -1;
  STACKTOP = i4;
  return i11 | 0;
 }
 i9 = _calloc(1, 16) | 0;
 if (!i9) {
  _arLog(0, 3, 20510, i4 + 24 | 0);
  _exit(1);
 }
 i2 = i9 + 4 | 0;
 L12 : do if ((_fread(i2, 4, 1, i12) | 0) == 1 ? (i10 = HEAP32[i2 >> 2] | 0, (i10 | 0) >= 1) : 0) {
  i1 = _malloc(i10 * 132 | 0) | 0;
  HEAP32[i9 >> 2] = i1;
  if (!i1) {
   _arLog(0, 3, 20510, i8);
   _exit(1);
  }
  if ((_fread(i1, 8, 1, i12) | 0) == 1) {
   i1 = 0;
   while (1) {
    if ((_fread((HEAP32[i9 >> 2] | 0) + (i1 * 132 | 0) + 8 | 0, 8, 1, i12) | 0) != 1) break L12;
    if ((_fread((HEAP32[i9 >> 2] | 0) + (i1 * 132 | 0) + 16 | 0, 108, 1, i12) | 0) != 1) break L12;
    if ((_fread((HEAP32[i9 >> 2] | 0) + (i1 * 132 | 0) + 124 | 0, 4, 1, i12) | 0) != 1) break L12;
    if ((_fread((HEAP32[i9 >> 2] | 0) + (i1 * 132 | 0) + 128 | 0, 4, 1, i12) | 0) != 1) break L12;
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= (HEAP32[i2 >> 2] | 0)) break;
    if ((_fread((HEAP32[i9 >> 2] | 0) + (i1 * 132 | 0) | 0, 8, 1, i12) | 0) != 1) break L12;
   }
   i1 = i9 + 12 | 0;
   if ((_fread(i1, 4, 1, i12) | 0) == 1) {
    i10 = HEAP32[i1 >> 2] | 0;
    if ((i10 | 0) < 1) {
     HEAP32[i9 + 8 >> 2] = 0;
     break;
    }
    i13 = _malloc(i10 * 12 | 0) | 0;
    i10 = i9 + 8 | 0;
    HEAP32[i10 >> 2] = i13;
    if (!i13) {
     _arLog(0, 3, 20510, i7);
     _exit(1);
    }
    if ((_fread(i13 + 8 | 0, 4, 1, i12) | 0) == 1) {
     i13 = 0;
     while (1) {
      if ((_fread((HEAP32[i10 >> 2] | 0) + (i13 * 12 | 0) + 4 | 0, 4, 1, i12) | 0) != 1) break L12;
      i14 = HEAP32[i10 >> 2] | 0;
      i15 = HEAP32[i14 + (i13 * 12 | 0) + 4 >> 2] | 0;
      i16 = _malloc(i15 * 12 | 0) | 0;
      HEAP32[i14 + (i13 * 12 | 0) >> 2] = i16;
      if (!i16) {
       i17 = 30;
       break;
      }
      i13 = i13 + 1 | 0;
      if ((_fread(i16, 12, i15, i12) | 0) != (i15 | 0)) break L12;
      if ((i13 | 0) >= (HEAP32[i1 >> 2] | 0)) break;
      if ((_fread((HEAP32[i10 >> 2] | 0) + (i13 * 12 | 0) + 8 | 0, 4, 1, i12) | 0) != 1) break L12;
     }
     if ((i17 | 0) == 30) {
      _arLog(0, 3, 20510, i6);
      _exit(1);
     }
     HEAP32[i3 >> 2] = i9;
     _fclose(i12) | 0;
     i11 = 0;
     STACKTOP = i4;
     return i11 | 0;
    }
   }
  }
 } while (0);
 _arLog(0, 3, 20240, i5);
 i5 = HEAP32[i9 + 8 >> 2] | 0;
 if (i5 | 0) _free(i5);
 i5 = HEAP32[i9 >> 2] | 0;
 if (i5 | 0) _free(i5);
 _free(i9);
 _fclose(i12) | 0;
 i11 = -1;
 STACKTOP = i4;
 return i11 | 0;
}

function _h2v2_merged_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0;
 i5 = HEAP32[i1 + 452 >> 2] | 0;
 i6 = HEAP32[i1 + 324 >> 2] | 0;
 i7 = HEAP32[i5 + 16 >> 2] | 0;
 i8 = HEAP32[i5 + 20 >> 2] | 0;
 i9 = HEAP32[i5 + 24 >> 2] | 0;
 i10 = HEAP32[i5 + 28 >> 2] | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 i11 = i3 << 1;
 i12 = HEAP32[i5 + (i11 << 2) >> 2] | 0;
 i13 = HEAP32[i5 + ((i11 | 1) << 2) >> 2] | 0;
 i11 = HEAP32[(HEAP32[i2 + 4 >> 2] | 0) + (i3 << 2) >> 2] | 0;
 i5 = HEAP32[(HEAP32[i2 + 8 >> 2] | 0) + (i3 << 2) >> 2] | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i4 + 4 >> 2] | 0;
 i4 = i1 + 112 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i14 = i1 >>> 1;
 if (!i14) {
  i15 = i5;
  i16 = i11;
  i17 = i13;
  i18 = i12;
  i19 = i2;
  i20 = i3;
  i21 = i1;
 } else {
  i22 = i11 + i14 | 0;
  i23 = i1 & -2;
  i1 = i14 * 6 | 0;
  i24 = i13 + i23 | 0;
  i25 = i5;
  i26 = i11;
  i11 = i13;
  i13 = i12;
  i27 = i2;
  i28 = i3;
  i29 = i14;
  while (1) {
   i30 = HEAPU8[i26 >> 0] | 0;
   i31 = HEAPU8[i25 >> 0] | 0;
   i32 = HEAP32[i7 + (i31 << 2) >> 2] | 0;
   i33 = (HEAP32[i9 + (i31 << 2) >> 2] | 0) + (HEAP32[i10 + (i30 << 2) >> 2] | 0) >> 16;
   i31 = HEAP32[i8 + (i30 << 2) >> 2] | 0;
   i30 = HEAPU8[i13 >> 0] | 0;
   HEAP8[i28 >> 0] = HEAP8[i6 + (i32 + i30) >> 0] | 0;
   HEAP8[i28 + 1 >> 0] = HEAP8[i6 + (i33 + i30) >> 0] | 0;
   HEAP8[i28 + 2 >> 0] = HEAP8[i6 + (i31 + i30) >> 0] | 0;
   i30 = HEAPU8[i13 + 1 >> 0] | 0;
   HEAP8[i28 + 3 >> 0] = HEAP8[i6 + (i32 + i30) >> 0] | 0;
   HEAP8[i28 + 4 >> 0] = HEAP8[i6 + (i33 + i30) >> 0] | 0;
   HEAP8[i28 + 5 >> 0] = HEAP8[i6 + (i31 + i30) >> 0] | 0;
   i30 = HEAPU8[i11 >> 0] | 0;
   HEAP8[i27 >> 0] = HEAP8[i6 + (i32 + i30) >> 0] | 0;
   HEAP8[i27 + 1 >> 0] = HEAP8[i6 + (i33 + i30) >> 0] | 0;
   HEAP8[i27 + 2 >> 0] = HEAP8[i6 + (i31 + i30) >> 0] | 0;
   i30 = HEAPU8[i11 + 1 >> 0] | 0;
   HEAP8[i27 + 3 >> 0] = HEAP8[i6 + (i32 + i30) >> 0] | 0;
   HEAP8[i27 + 4 >> 0] = HEAP8[i6 + (i33 + i30) >> 0] | 0;
   HEAP8[i27 + 5 >> 0] = HEAP8[i6 + (i31 + i30) >> 0] | 0;
   i29 = i29 + -1 | 0;
   if (!i29) break; else {
    i25 = i25 + 1 | 0;
    i26 = i26 + 1 | 0;
    i11 = i11 + 2 | 0;
    i13 = i13 + 2 | 0;
    i27 = i27 + 6 | 0;
    i28 = i28 + 6 | 0;
   }
  }
  i15 = i5 + i14 | 0;
  i16 = i22;
  i17 = i24;
  i18 = i12 + i23 | 0;
  i19 = i2 + i1 | 0;
  i20 = i3 + i1 | 0;
  i21 = HEAP32[i4 >> 2] | 0;
 }
 if (!(i21 & 1)) return;
 i21 = HEAPU8[i16 >> 0] | 0;
 i16 = HEAPU8[i15 >> 0] | 0;
 i15 = HEAP32[i7 + (i16 << 2) >> 2] | 0;
 i7 = (HEAP32[i9 + (i16 << 2) >> 2] | 0) + (HEAP32[i10 + (i21 << 2) >> 2] | 0) >> 16;
 i10 = HEAP32[i8 + (i21 << 2) >> 2] | 0;
 i21 = HEAPU8[i18 >> 0] | 0;
 HEAP8[i20 >> 0] = HEAP8[i6 + (i15 + i21) >> 0] | 0;
 HEAP8[i20 + 1 >> 0] = HEAP8[i6 + (i7 + i21) >> 0] | 0;
 HEAP8[i20 + 2 >> 0] = HEAP8[i6 + (i10 + i21) >> 0] | 0;
 i21 = HEAPU8[i17 >> 0] | 0;
 HEAP8[i19 >> 0] = HEAP8[i6 + (i15 + i21) >> 0] | 0;
 HEAP8[i19 + 1 >> 0] = HEAP8[i6 + (i7 + i21) >> 0] | 0;
 HEAP8[i19 + 2 >> 0] = HEAP8[i6 + (i10 + i21) >> 0] | 0;
 return;
}

function __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i6 >> 2] = i4;
 if (i8 & 4) {
  i8 = HEAP32[i3 >> 2] | 0;
  i4 = i2;
  if ((((i4 - i8 | 0) > 2 ? (HEAP8[i8 >> 0] | 0) == -17 : 0) ? (HEAP8[i8 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i8 + 2 >> 0] | 0) == -65 : 0) {
   HEAP32[i3 >> 2] = i8 + 3;
   i9 = i4;
  } else i9 = i4;
 } else i9 = i2;
 L9 : while (1) {
  i4 = HEAP32[i3 >> 2] | 0;
  if (i4 >>> 0 >= i2 >>> 0) {
   i10 = 0;
   break;
  }
  i8 = HEAP32[i6 >> 2] | 0;
  if (i8 >>> 0 >= i5 >>> 0) {
   i10 = 1;
   break;
  }
  i1 = HEAP8[i4 >> 0] | 0;
  i11 = i1 & 255;
  do if (i1 << 24 >> 24 > -1) if (i11 >>> 0 > i7 >>> 0) {
   i10 = 2;
   break L9;
  } else {
   i12 = i11;
   i13 = 1;
  } else {
   if ((i1 & 255) < 194) {
    i10 = 2;
    break L9;
   }
   if ((i1 & 255) < 224) {
    if ((i9 - i4 | 0) < 2) {
     i10 = 1;
     break L9;
    }
    i14 = HEAPU8[i4 + 1 >> 0] | 0;
    if ((i14 & 192 | 0) != 128) {
     i10 = 2;
     break L9;
    }
    i15 = i14 & 63 | i11 << 6 & 1984;
    if (i15 >>> 0 > i7 >>> 0) {
     i10 = 2;
     break L9;
    } else {
     i12 = i15;
     i13 = 2;
     break;
    }
   }
   if ((i1 & 255) < 240) {
    if ((i9 - i4 | 0) < 3) {
     i10 = 1;
     break L9;
    }
    i15 = HEAP8[i4 + 1 >> 0] | 0;
    i14 = HEAP8[i4 + 2 >> 0] | 0;
    switch (i1 << 24 >> 24) {
    case -32:
     {
      if ((i15 & -32) << 24 >> 24 != -96) {
       i10 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if ((i15 & -32) << 24 >> 24 != -128) {
       i10 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i15 & -64) << 24 >> 24 != -128) {
      i10 = 2;
      break L9;
     }
    }
    i16 = i14 & 255;
    if ((i16 & 192 | 0) != 128) {
     i10 = 2;
     break L9;
    }
    i14 = (i15 & 63) << 6 | i11 << 12 & 61440 | i16 & 63;
    if (i14 >>> 0 > i7 >>> 0) {
     i10 = 2;
     break L9;
    } else {
     i12 = i14;
     i13 = 3;
     break;
    }
   }
   if ((i1 & 255) >= 245) {
    i10 = 2;
    break L9;
   }
   if ((i9 - i4 | 0) < 4) {
    i10 = 1;
    break L9;
   }
   i14 = HEAP8[i4 + 1 >> 0] | 0;
   i16 = HEAP8[i4 + 2 >> 0] | 0;
   i15 = HEAP8[i4 + 3 >> 0] | 0;
   switch (i1 << 24 >> 24) {
   case -16:
    {
     if ((i14 + 112 & 255) >= 48) {
      i10 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if ((i14 & -16) << 24 >> 24 != -128) {
      i10 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i14 & -64) << 24 >> 24 != -128) {
     i10 = 2;
     break L9;
    }
   }
   i17 = i16 & 255;
   if ((i17 & 192 | 0) != 128) {
    i10 = 2;
    break L9;
   }
   i16 = i15 & 255;
   if ((i16 & 192 | 0) != 128) {
    i10 = 2;
    break L9;
   }
   i15 = (i14 & 63) << 12 | i11 << 18 & 1835008 | i17 << 6 & 4032 | i16 & 63;
   if (i15 >>> 0 > i7 >>> 0) {
    i10 = 2;
    break L9;
   } else {
    i12 = i15;
    i13 = 4;
   }
  } while (0);
  HEAP32[i8 >> 2] = i12;
  HEAP32[i3 >> 2] = i4 + i13;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
 }
 return i10 | 0;
}

function _arParamLoad(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, d21 = 0.0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i6 = i5 + 248 | 0;
 i7 = i5 + 240 | 0;
 i8 = i5 + 232 | 0;
 i9 = i5 + 224 | 0;
 i10 = i5 + 216 | 0;
 i11 = i5 + 208 | 0;
 i12 = i5 + 200 | 0;
 i13 = i5;
 i14 = i5 + 16 | 0;
 if (!((i1 | 0) != 0 & (i2 | 0) > 0 & (i3 | 0) != 0)) {
  i15 = -1;
  STACKTOP = i5;
  return i15 | 0;
 }
 i16 = _fopen(i1, 20119) | 0;
 if (!i16) {
  i17 = ___errno_location() | 0;
  HEAP32[i12 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i12 + 4 >> 2] = i1;
  _arLog(0, 3, 18151, i12);
  i12 = ___errno_location() | 0;
  i1 = _strerror(HEAP32[i12 >> 2] | 0) | 0;
  HEAP32[i11 >> 2] = 58932;
  HEAP32[i11 + 4 >> 2] = i1;
  _arLog(0, 3, 19710, i11);
  i15 = -1;
  STACKTOP = i5;
  return i15 | 0;
 }
 _fseek(i16, 0, 2) | 0;
 L8 : do if (!(_ferror(i16) | 0)) {
  i11 = _ftell(i16) | 0;
  _rewind(i16);
  if ((i11 | 0) % 136 | 0) if ((i11 | 0) % 144 | 0) if ((i11 | 0) % 152 | 0) if (!((i11 | 0) % 176 | 0)) {
   i18 = 3;
   i19 = 4;
  } else {
   _arLog(0, 3, 18265, i8);
   i20 = -1;
   break;
  } else {
   i18 = 2;
   i19 = 3;
  } else {
   i18 = 1;
   i19 = 2;
  } else {
   i18 = 0;
   i19 = 1;
  }
  if ((_fread(i14, HEAP32[1712 + (i18 << 3) + 4 >> 2] | 0, 1, i16) | 0) != 1) {
   i11 = ___errno_location() | 0;
   HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
   _arLog(0, 3, 18345, i7);
   i11 = ___errno_location() | 0;
   i1 = _strerror(HEAP32[i11 >> 2] | 0) | 0;
   HEAP32[i6 >> 2] = 58932;
   HEAP32[i6 + 4 >> 2] = i1;
   _arLog(0, 3, 19710, i6);
   i20 = -1;
   break;
  }
  i1 = i14 + 176 | 0;
  HEAP32[i1 >> 2] = i19;
  _byteswap(i14);
  i11 = (i18 | 0) == 0;
  if (i11) {
   i12 = i14 + 120 | 0;
   d21 = +HEAPF64[i12 >> 3];
   i17 = i14 + 128 | 0;
   HEAPF64[i12 >> 3] = +HEAPF64[i17 >> 3];
   HEAPF64[i17 >> 3] = d21;
  }
  _memcpy(i3 | 0, i14 | 0, 184) | 0;
  HEAP32[i13 >> 2] = i4;
  if ((i2 | 0) > 1) {
   i17 = i3 + 176 | 0;
   i12 = i14 + 120 | 0;
   i22 = i14 + 128 | 0;
   i23 = 1;
   while (1) {
    i24 = (HEAP32[i13 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i25 = HEAP32[i24 >> 2] | 0;
    HEAP32[i13 >> 2] = i24 + 4;
    HEAP32[i25 + 176 >> 2] = HEAP32[i17 >> 2];
    if ((_fread(i14, HEAP32[1712 + ((HEAP32[i17 >> 2] | 0) + -1 << 3) + 4 >> 2] | 0, 1, i16) | 0) != 1) {
     i20 = -1;
     break L8;
    }
    HEAP32[i1 >> 2] = i19;
    _byteswap(i14);
    if (i11) {
     d21 = +HEAPF64[i12 >> 3];
     HEAPF64[i12 >> 3] = +HEAPF64[i22 >> 3];
     HEAPF64[i22 >> 3] = d21;
    }
    _memcpy(i25 | 0, i14 | 0, 184) | 0;
    i23 = i23 + 1 | 0;
    if ((i23 | 0) >= (i2 | 0)) {
     i20 = 0;
     break;
    }
   }
  } else i20 = 0;
 } else {
  i23 = ___errno_location() | 0;
  HEAP32[i10 >> 2] = HEAP32[i23 >> 2];
  _arLog(0, 3, 18220, i10);
  i23 = ___errno_location() | 0;
  i22 = _strerror(HEAP32[i23 >> 2] | 0) | 0;
  HEAP32[i9 >> 2] = 58932;
  HEAP32[i9 + 4 >> 2] = i22;
  _arLog(0, 3, 19710, i9);
  i20 = -1;
 } while (0);
 _fclose(i16) | 0;
 i15 = i20;
 STACKTOP = i5;
 return i15 | 0;
}

function _get_interesting_appn(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i1 + 24 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = i5 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 do if (!i7) if (!(FUNCTION_TABLE_ii[HEAP32[i5 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  STACKTOP = i2;
  return i8 | 0;
 } else {
  i9 = HEAP32[i6 >> 2] | 0;
  break;
 } else i9 = i7; while (0);
 i7 = HEAP32[i5 >> 2] | 0;
 i10 = i9 + -1 | 0;
 i9 = i7 + 1 | 0;
 i11 = HEAPU8[i7 >> 0] << 8;
 do if (!i10) if (!(FUNCTION_TABLE_ii[HEAP32[i5 + 12 >> 2] & 127](i1) | 0)) {
  i8 = 0;
  STACKTOP = i2;
  return i8 | 0;
 } else {
  i12 = HEAP32[i6 >> 2] | 0;
  i13 = HEAP32[i5 >> 2] | 0;
  break;
 } else {
  i12 = i10;
  i13 = i9;
 } while (0);
 i9 = i11 | HEAPU8[i13 >> 0];
 i11 = i9 + -2 | 0;
 i10 = i9 >>> 0 > 15 ? 14 : i9 >>> 0 > 2 ? i11 : 0;
 i9 = i12 + -1 | 0;
 i12 = i13 + 1 | 0;
 L13 : do if (!i10) {
  i14 = i9;
  i15 = i12;
 } else {
  i13 = i5 + 12 | 0;
  i7 = 0;
  i16 = i12;
  i17 = i9;
  while (1) {
   if (!i17) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i13 >> 2] & 127](i1) | 0)) {
     i8 = 0;
     break;
    }
    i18 = HEAP32[i6 >> 2] | 0;
    i19 = HEAP32[i5 >> 2] | 0;
   } else {
    i18 = i17;
    i19 = i16;
   }
   HEAP8[i3 + i7 >> 0] = HEAP8[i19 >> 0] | 0;
   i7 = i7 + 1 | 0;
   i20 = i18 + -1 | 0;
   i21 = i19 + 1 | 0;
   if (i7 >>> 0 >= i10 >>> 0) {
    i14 = i20;
    i15 = i21;
    break L13;
   } else {
    i16 = i21;
    i17 = i20;
   }
  }
  STACKTOP = i2;
  return i8 | 0;
 } while (0);
 i19 = i11 - i10 | 0;
 i18 = HEAP32[i1 + 416 >> 2] | 0;
 L23 : do switch (i18 | 0) {
 case 224:
  {
   _examine_app0(i1, i3, i10, i19);
   break;
  }
 case 238:
  {
   if ((((i10 >>> 0 > 11 & (HEAP8[i3 >> 0] | 0) == 65 ? (HEAP8[i3 + 1 >> 0] | 0) == 100 : 0) ? (HEAP8[i3 + 2 >> 0] | 0) == 111 : 0) ? (HEAP8[i3 + 3 >> 0] | 0) == 98 : 0) ? (HEAP8[i3 + 4 >> 0] | 0) == 101 : 0) {
    i9 = HEAPU8[i3 + 7 >> 0] << 8 | HEAPU8[i3 + 8 >> 0];
    i12 = HEAPU8[i3 + 9 >> 0] << 8 | HEAPU8[i3 + 10 >> 0];
    i17 = HEAP8[i3 + 11 >> 0] | 0;
    i16 = HEAP32[i1 >> 2] | 0;
    HEAP32[i16 + 24 >> 2] = HEAPU8[i3 + 5 >> 0] << 8 | HEAPU8[i3 + 6 >> 0];
    HEAP32[i16 + 28 >> 2] = i9;
    HEAP32[i16 + 32 >> 2] = i12;
    HEAP32[i16 + 36 >> 2] = i17 & 255;
    HEAP32[i16 + 20 >> 2] = 76;
    FUNCTION_TABLE_vii[HEAP32[i16 + 4 >> 2] & 63](i1, 1);
    HEAP32[i1 + 292 >> 2] = 1;
    HEAP8[i1 + 296 >> 0] = i17;
    break L23;
   }
   i17 = HEAP32[i1 >> 2] | 0;
   HEAP32[i17 + 20 >> 2] = 78;
   HEAP32[i17 + 24 >> 2] = i11;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
   break;
  }
 default:
  {
   i17 = HEAP32[i1 >> 2] | 0;
   HEAP32[i17 + 20 >> 2] = 68;
   HEAP32[i17 + 24 >> 2] = i18;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
  }
 } while (0);
 HEAP32[i5 >> 2] = i15;
 HEAP32[i6 >> 2] = i14;
 if ((i19 | 0) <= 0) {
  i8 = 1;
  STACKTOP = i2;
  return i8 | 0;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 16 >> 2] & 63](i1, i19);
 i8 = 1;
 STACKTOP = i2;
 return i8 | 0;
}

function _start_pass_1_quant(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i2 = i1 + 460 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 + 136 >> 2] = HEAP32[i3 + 16 >> 2];
 HEAP32[i1 + 132 >> 2] = HEAP32[i3 + 20 >> 2];
 switch (HEAP32[i1 + 88 >> 2] | 0) {
 case 0:
  {
   i4 = i3 + 4 | 0;
   if ((HEAP32[i1 + 120 >> 2] | 0) == 3) {
    HEAP32[i4 >> 2] = 24;
    return;
   } else {
    HEAP32[i4 >> 2] = 25;
    return;
   }
   break;
  }
 case 1:
  {
   i4 = i1 + 120 | 0;
   HEAP32[i3 + 4 >> 2] = (HEAP32[i4 >> 2] | 0) == 3 ? 27 : 26;
   HEAP32[i3 + 48 >> 2] = 0;
   if (!(HEAP32[i3 + 28 >> 2] | 0)) _create_colorindex(i1);
   if (HEAP32[i3 + 52 >> 2] | 0) return;
   i5 = HEAP32[i2 >> 2] | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) <= 0) return;
   i6 = i1 + 4 | 0;
   i7 = 0;
   i8 = i2;
   while (1) {
    i2 = HEAP32[i5 + 32 + (i7 << 2) >> 2] | 0;
    L22 : do if (i7) {
     i9 = 0;
     while (1) {
      if ((i2 | 0) == (HEAP32[i5 + 32 + (i9 << 2) >> 2] | 0)) break;
      i10 = i9 + 1 | 0;
      if (i10 >>> 0 < i7 >>> 0) i9 = i10; else {
       i11 = 15;
       break L22;
      }
     }
     i10 = HEAP32[i5 + 52 + (i9 << 2) >> 2] | 0;
     if (i10) {
      i12 = i10;
      i13 = i8;
     } else i11 = 15;
    } else i11 = 15; while (0);
    if ((i11 | 0) == 15) {
     i11 = 0;
     i10 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i6 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
     i14 = (i2 << 9) + -512 | 0;
     i15 = 0;
     do {
      i16 = 0;
      do {
       i17 = 255 - ((HEAPU8[3200 + (i15 << 4) + i16 >> 0] | 0) << 1) | 0;
       i18 = i17 * 255 | 0;
       if ((i17 | 0) < 0) i19 = 0 - ((0 - i18 | 0) / (i14 | 0) | 0) | 0; else i19 = (i18 | 0) / (i14 | 0) | 0;
       HEAP32[i10 + (i15 << 6) + (i16 << 2) >> 2] = i19;
       i16 = i16 + 1 | 0;
      } while ((i16 | 0) != 16);
      i15 = i15 + 1 | 0;
     } while ((i15 | 0) != 16);
     i12 = i10;
     i13 = HEAP32[i4 >> 2] | 0;
    }
    HEAP32[i5 + 52 + (i7 << 2) >> 2] = i12;
    i7 = i7 + 1 | 0;
    if ((i7 | 0) >= (i13 | 0)) break; else i8 = i13;
   }
   return;
  }
 case 2:
  {
   HEAP32[i3 + 4 >> 2] = 28;
   HEAP32[i3 + 84 >> 2] = 0;
   if (!(HEAP32[i3 + 68 >> 2] | 0)) {
    i13 = i1 + 112 | 0;
    i8 = (HEAP32[i13 >> 2] << 1) + 4 | 0;
    i7 = i1 + 120 | 0;
    if ((HEAP32[i7 >> 2] | 0) <= 0) return;
    i12 = i1 + 4 | 0;
    i5 = 0;
    do {
     i4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 4 >> 2] & 63](i1, 1, i8) | 0;
     HEAP32[i3 + 68 + (i5 << 2) >> 2] = i4;
     i5 = i5 + 1 | 0;
     i4 = HEAP32[i7 >> 2] | 0;
    } while ((i5 | 0) < (i4 | 0));
    i20 = i7;
    i21 = i13;
    i22 = i4;
   } else {
    i13 = i1 + 120 | 0;
    i20 = i13;
    i21 = i1 + 112 | 0;
    i22 = HEAP32[i13 >> 2] | 0;
   }
   i13 = (HEAP32[i21 >> 2] << 1) + 4 | 0;
   if ((i22 | 0) <= 0) return;
   i22 = 0;
   do {
    _jzero_far(HEAP32[i3 + 68 + (i22 << 2) >> 2] | 0, i13);
    i22 = i22 + 1 | 0;
   } while ((i22 | 0) < (HEAP32[i20 >> 2] | 0));
   return;
  }
 default:
  {
   i20 = HEAP32[i1 >> 2] | 0;
   HEAP32[i20 + 20 >> 2] = 48;
   FUNCTION_TABLE_vi[HEAP32[i20 >> 2] & 255](i1);
   return;
  }
 }
}

function __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i7 = i6 + 32 | 0;
 i8 = i6 + 28 | 0;
 i9 = i6 + 24 | 0;
 i10 = i6 + 20 | 0;
 i11 = i6 + 16 | 0;
 i12 = i6 + 12 | 0;
 i13 = i6 + 8 | 0;
 i14 = i6 + 4 | 0;
 i15 = i6;
 __ZNK6vision21HoughSimilarityVoting16getBinsFromIndexERiS1_S1_S1_i(i2, i12, i13, i14, i15, i4);
 i4 = i1 + 4 | 0;
 HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
 i16 = i2 + 124 | 0;
 i17 = (HEAP32[i2 + 128 >> 2] | 0) - (HEAP32[i16 >> 2] | 0) | 0;
 i18 = i17 >> 2;
 if (i18 >>> 0 > (HEAP32[i3 + 4 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) >> 3 >>> 0) {
  i19 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30109, 45) | 0, 28198, 114) | 0, 33554, 6) | 0, 342) | 0, 33561, 2) | 0, 30155, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i7, i19 + (HEAP32[(HEAP32[i19 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
  i21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i20 >> 2] | 0) + 28 >> 2] & 63](i20, 10) | 0;
  __ZNSt3__26localeD2Ev(i7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i19, i21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i19) | 0;
  _abort();
 }
 if ((i17 | 0) <= 0) {
  STACKTOP = i6;
  return;
 }
 i17 = i1 + 8 | 0;
 i19 = 0;
 i21 = HEAP32[i2 + 112 >> 2] | 0;
 while (1) {
  __ZNK6vision21HoughSimilarityVoting14getBinDistanceERfS1_S1_S1_ffffffff(i2, i8, i9, i10, i11, +HEAPF32[i21 >> 2], +HEAPF32[i21 + 4 >> 2], +HEAPF32[i21 + 8 >> 2], +HEAPF32[i21 + 12 >> 2], +(HEAP32[i12 >> 2] | 0) + .5, +(HEAP32[i13 >> 2] | 0) + .5, +(HEAP32[i14 >> 2] | 0) + .5, +(HEAP32[i15 >> 2] | 0) + .5);
  do if ((+HEAPF32[i8 >> 2] < d5 ? +HEAPF32[i9 >> 2] < d5 : 0) & +HEAPF32[i10 >> 2] < d5 & +HEAPF32[i11 >> 2] < d5) {
   i7 = (HEAP32[i3 >> 2] | 0) + (HEAP32[(HEAP32[i16 >> 2] | 0) + (i19 << 2) >> 2] << 3) | 0;
   i20 = HEAP32[i4 >> 2] | 0;
   if ((i20 | 0) == (HEAP32[i17 >> 2] | 0)) {
    __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i1, i7);
    break;
   } else {
    i22 = i7;
    i7 = HEAP32[i22 + 4 >> 2] | 0;
    i23 = i20;
    HEAP32[i23 >> 2] = HEAP32[i22 >> 2];
    HEAP32[i23 + 4 >> 2] = i7;
    HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 8;
    break;
   }
  } while (0);
  i19 = i19 + 1 | 0;
  if ((i19 | 0) >= (i18 | 0)) break; else i21 = i21 + 16 | 0;
 }
 STACKTOP = i6;
 return;
}

function __ZNSt3__213unordered_mapIiP14AR2SurfaceSetTNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS2_EEEEEixERS9_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i2 = i1 + 4 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = (i4 | 0) == 0;
 L1 : do if (!i5) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (!i7) if (i3 >>> 0 < i4 >>> 0) i8 = i3; else i8 = (i3 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i3;
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] | 0;
  if ((i9 | 0) != 0 ? (i10 = HEAP32[i9 >> 2] | 0, (i10 | 0) != 0) : 0) {
   if (i7) {
    i7 = i10;
    while (1) {
     i9 = HEAP32[i7 + 4 >> 2] | 0;
     if (!((i9 | 0) == (i3 | 0) | (i9 & i6 | 0) == (i8 | 0))) {
      i11 = i8;
      break L1;
     }
     if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
      i12 = i7;
      break;
     }
     i7 = HEAP32[i7 >> 2] | 0;
     if (!i7) {
      i11 = i8;
      break L1;
     }
    }
    i13 = i12 + 12 | 0;
    return i13 | 0;
   }
   i7 = i10;
   while (1) {
    i6 = HEAP32[i7 + 4 >> 2] | 0;
    if ((i6 | 0) != (i3 | 0)) {
     if (i6 >>> 0 < i4 >>> 0) i14 = i6; else i14 = (i6 >>> 0) % (i4 >>> 0) | 0;
     if ((i14 | 0) != (i8 | 0)) {
      i11 = i8;
      break L1;
     }
    }
    if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
     i12 = i7;
     break;
    }
    i7 = HEAP32[i7 >> 2] | 0;
    if (!i7) {
     i11 = i8;
     break L1;
    }
   }
   i13 = i12 + 12 | 0;
   return i13 | 0;
  } else i11 = i8;
 } else i11 = 0; while (0);
 i8 = __Znwm(16) | 0;
 HEAP32[i8 + 8 >> 2] = i3;
 HEAP32[i8 + 12 >> 2] = 0;
 HEAP32[i8 + 4 >> 2] = i3;
 HEAP32[i8 >> 2] = 0;
 i14 = i1 + 12 | 0;
 d15 = +(((HEAP32[i14 >> 2] | 0) + 1 | 0) >>> 0);
 d16 = +HEAPF32[i1 + 16 >> 2];
 do if (i5 | d16 * +(i4 >>> 0) < d15) {
  i7 = i4 << 1 | (i4 >>> 0 < 3 | (i4 + -1 & i4 | 0) != 0) & 1;
  i10 = ~~+Math_ceil(+(d15 / d16)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE6rehashEm(i1, i7 >>> 0 < i10 >>> 0 ? i10 : i7);
  i7 = HEAP32[i2 >> 2] | 0;
  i10 = i7 + -1 | 0;
  if (!(i10 & i7)) {
   i17 = i7;
   i18 = i10 & i3;
   break;
  }
  if (i3 >>> 0 < i7 >>> 0) {
   i17 = i7;
   i18 = i3;
  } else {
   i17 = i7;
   i18 = (i3 >>> 0) % (i7 >>> 0) | 0;
  }
 } else {
  i17 = i4;
  i18 = i11;
 } while (0);
 i11 = (HEAP32[i1 >> 2] | 0) + (i18 << 2) | 0;
 i18 = HEAP32[i11 >> 2] | 0;
 if (!i18) {
  i4 = i1 + 8 | 0;
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i4 >> 2] = i8;
  HEAP32[i11 >> 2] = i4;
  i4 = HEAP32[i8 >> 2] | 0;
  if (i4 | 0) {
   i11 = HEAP32[i4 + 4 >> 2] | 0;
   i4 = i17 + -1 | 0;
   if (i4 & i17) if (i11 >>> 0 < i17 >>> 0) i19 = i11; else i19 = (i11 >>> 0) % (i17 >>> 0) | 0; else i19 = i11 & i4;
   i20 = (HEAP32[i1 >> 2] | 0) + (i19 << 2) | 0;
   i21 = 33;
  }
 } else {
  HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
  i20 = i18;
  i21 = 33;
 }
 if ((i21 | 0) == 33) HEAP32[i20 >> 2] = i8;
 HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
 i12 = i8;
 i13 = i12 + 12 | 0;
 return i13 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 40 | 0;
 i6 = i4 + 16 | 0;
 i7 = i4;
 L1 : do if (((i1 | 0) != (i2 | 0) ? (i8 = (HEAP8[i1 >> 0] | 0) + -48 | 0, i8 >>> 0 < 10) : 0) ? (i9 = i1 + 1 | 0, (i9 | 0) != (i2 | 0)) : 0) {
  i10 = i8;
  i8 = i9;
  while (1) {
   i9 = (HEAP8[i8 >> 0] | 0) + -48 | 0;
   if (i9 >>> 0 >= 10) break;
   i11 = i8 + 1 | 0;
   if ((i11 | 0) == (i2 | 0)) {
    i12 = i1;
    break L1;
   }
   i10 = i9 + (i10 * 10 | 0) | 0;
   i8 = i11;
  }
  if ((i2 - i8 | 0) >>> 0 >= i10 >>> 0) {
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i5, i8, i10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i6, i5, 10);
   i11 = __ZNSt3__211char_traitsIcE6lengthEPKc(51625) | 0;
   i9 = HEAP8[i6 + 11 >> 0] | 0;
   if ((i11 | 0) == ((i9 << 24 >> 24 < 0 ? HEAP32[i6 + 4 >> 2] | 0 : i9 & 255) | 0)) i13 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i6, 51625, i11) | 0) == 0; else i13 = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   if (i13) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm22EEERAT__Kc(i6);
    i11 = i3 + 4 | 0;
    i9 = HEAP32[i11 >> 2] | 0;
    if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i6);
     HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i6);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
   } else {
    HEAP32[i7 >> 2] = HEAP32[i5 >> 2];
    HEAP32[i7 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
    HEAP32[i7 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
    i11 = 0;
    while (1) {
     if ((i11 | 0) == 3) break;
     HEAP32[i5 + (i11 << 2) >> 2] = 0;
     i11 = i11 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
    i11 = i3 + 4 | 0;
    i9 = HEAP32[i11 >> 2] | 0;
    if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i6);
     HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i6);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   i12 = i8 + i10 | 0;
  } else i12 = i1;
 } else i12 = i1; while (0);
 STACKTOP = i4;
 return i12 | 0;
}

function __ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i2 = i1 + 4 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = (i4 | 0) == 0;
 L1 : do if (!i5) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (!i7) if (i3 >>> 0 < i4 >>> 0) i8 = i3; else i8 = (i3 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i3;
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + (i8 << 2) >> 2] | 0;
  if ((i9 | 0) != 0 ? (i10 = HEAP32[i9 >> 2] | 0, (i10 | 0) != 0) : 0) {
   if (i7) {
    i7 = i10;
    while (1) {
     i9 = HEAP32[i7 + 4 >> 2] | 0;
     if (!((i9 | 0) == (i3 | 0) | (i9 & i6 | 0) == (i8 | 0))) {
      i11 = i8;
      break L1;
     }
     if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
      i12 = i7;
      break;
     }
     i7 = HEAP32[i7 >> 2] | 0;
     if (!i7) {
      i11 = i8;
      break L1;
     }
    }
    i13 = i12 + 16 | 0;
    return i13 | 0;
   }
   i7 = i10;
   while (1) {
    i6 = HEAP32[i7 + 4 >> 2] | 0;
    if ((i6 | 0) != (i3 | 0)) {
     if (i6 >>> 0 < i4 >>> 0) i14 = i6; else i14 = (i6 >>> 0) % (i4 >>> 0) | 0;
     if ((i14 | 0) != (i8 | 0)) {
      i11 = i8;
      break L1;
     }
    }
    if ((HEAP32[i7 + 8 >> 2] | 0) == (i3 | 0)) {
     i12 = i7;
     break;
    }
    i7 = HEAP32[i7 >> 2] | 0;
    if (!i7) {
     i11 = i8;
     break L1;
    }
   }
   i13 = i12 + 16 | 0;
   return i13 | 0;
  } else i11 = i8;
 } else i11 = 0; while (0);
 i8 = __Znwm(200) | 0;
 HEAP32[i8 + 8 >> 2] = i3;
 _memset(i8 + 16 | 0, 0, 184) | 0;
 HEAP32[i8 + 4 >> 2] = i3;
 HEAP32[i8 >> 2] = 0;
 i14 = i1 + 12 | 0;
 d15 = +(((HEAP32[i14 >> 2] | 0) + 1 | 0) >>> 0);
 d16 = +HEAPF32[i1 + 16 >> 2];
 do if (i5 | d16 * +(i4 >>> 0) < d15) {
  i7 = i4 << 1 | (i4 >>> 0 < 3 | (i4 + -1 & i4 | 0) != 0) & 1;
  i10 = ~~+Math_ceil(+(d15 / d16)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm(i1, i7 >>> 0 < i10 >>> 0 ? i10 : i7);
  i7 = HEAP32[i2 >> 2] | 0;
  i10 = i7 + -1 | 0;
  if (!(i10 & i7)) {
   i17 = i7;
   i18 = i10 & i3;
   break;
  }
  if (i3 >>> 0 < i7 >>> 0) {
   i17 = i7;
   i18 = i3;
  } else {
   i17 = i7;
   i18 = (i3 >>> 0) % (i7 >>> 0) | 0;
  }
 } else {
  i17 = i4;
  i18 = i11;
 } while (0);
 i11 = (HEAP32[i1 >> 2] | 0) + (i18 << 2) | 0;
 i18 = HEAP32[i11 >> 2] | 0;
 if (!i18) {
  i4 = i1 + 8 | 0;
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i4 >> 2] = i8;
  HEAP32[i11 >> 2] = i4;
  i4 = HEAP32[i8 >> 2] | 0;
  if (i4 | 0) {
   i11 = HEAP32[i4 + 4 >> 2] | 0;
   i4 = i17 + -1 | 0;
   if (i4 & i17) if (i11 >>> 0 < i17 >>> 0) i19 = i11; else i19 = (i11 >>> 0) % (i17 >>> 0) | 0; else i19 = i11 & i4;
   i20 = (HEAP32[i1 >> 2] | 0) + (i19 << 2) | 0;
   i21 = 33;
  }
 } else {
  HEAP32[i8 >> 2] = HEAP32[i18 >> 2];
  i20 = i18;
  i21 = 33;
 }
 if ((i21 | 0) == 33) HEAP32[i20 >> 2] = i8;
 HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
 i12 = i8;
 i13 = i12 + 16 | 0;
 return i13 | 0;
}

function __ZN6vision29SolveNullVector8x9DestructiveIfEEbPT_S2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i4 = i3;
 if (!(__ZN6vision27OrthogonalizePivot8x9Basis0IfEEbPT_S2_(i4, i2) | 0)) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 if (!(__ZN6vision27OrthogonalizePivot8x9Basis1IfEEbPT_S2_(i4, i2) | 0)) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 if (!(__ZN6vision27OrthogonalizePivot8x9Basis2IfEEbPT_S2_(i4, i2) | 0)) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 if (!(__ZN6vision27OrthogonalizePivot8x9Basis3IfEEbPT_S2_(i4, i2) | 0)) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 if (!(__ZN6vision27OrthogonalizePivot8x9Basis4IfEEbPT_S2_(i4, i2) | 0)) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 if (!(__ZN6vision27OrthogonalizePivot8x9Basis5IfEEbPT_S2_(i4, i2) | 0)) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 if (!(__ZN6vision27OrthogonalizePivot8x9Basis6IfEEbPT_S2_(i4, i2) | 0)) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 i6 = i4 + 252 | 0;
 d7 = +HEAPF32[i4 + 216 >> 2];
 d8 = +HEAPF32[i4 + 220 >> 2];
 d9 = +HEAPF32[i4 + 224 >> 2];
 d10 = +HEAPF32[i4 + 228 >> 2];
 d11 = +HEAPF32[i4 + 232 >> 2];
 d12 = +HEAPF32[i4 + 236 >> 2];
 d13 = +HEAPF32[i4 + 240 >> 2];
 d14 = +HEAPF32[i4 + 244 >> 2];
 d15 = +HEAPF32[i4 + 248 >> 2];
 d16 = +HEAPF32[i2 + 252 >> 2] * d7 + +HEAPF32[i2 + 256 >> 2] * d8 + +HEAPF32[i2 + 260 >> 2] * d9 + +HEAPF32[i2 + 264 >> 2] * d10 + +HEAPF32[i2 + 268 >> 2] * d11 + +HEAPF32[i2 + 272 >> 2] * d12 + +HEAPF32[i2 + 276 >> 2] * d13 + +HEAPF32[i2 + 280 >> 2] * d14 + +HEAPF32[i2 + 284 >> 2] * d15;
 d17 = +HEAPF32[i6 >> 2] - d7 * d16;
 HEAPF32[i6 >> 2] = d17;
 i2 = i4 + 256 | 0;
 d7 = +HEAPF32[i2 >> 2] - d8 * d16;
 HEAPF32[i2 >> 2] = d7;
 i18 = i4 + 260 | 0;
 d8 = +HEAPF32[i18 >> 2] - d9 * d16;
 HEAPF32[i18 >> 2] = d8;
 i19 = i4 + 264 | 0;
 d9 = +HEAPF32[i19 >> 2] - d10 * d16;
 HEAPF32[i19 >> 2] = d9;
 i20 = i4 + 268 | 0;
 d10 = +HEAPF32[i20 >> 2] - d11 * d16;
 HEAPF32[i20 >> 2] = d10;
 i21 = i4 + 272 | 0;
 d11 = +HEAPF32[i21 >> 2] - d12 * d16;
 HEAPF32[i21 >> 2] = d11;
 i22 = i4 + 276 | 0;
 d12 = +HEAPF32[i22 >> 2] - d13 * d16;
 HEAPF32[i22 >> 2] = d12;
 i23 = i4 + 280 | 0;
 d13 = +HEAPF32[i23 >> 2] - d14 * d16;
 HEAPF32[i23 >> 2] = d13;
 i24 = i4 + 284 | 0;
 d14 = +HEAPF32[i24 >> 2] - d15 * d16;
 HEAPF32[i24 >> 2] = d14;
 d16 = d17 * d17 + d7 * d7 + d8 * d8 + d9 * d9 + d10 * d10 + d11 * d11 + d12 * d12 + d13 * d13 + d14 * d14;
 if (d16 == 0.0) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 d15 = 1.0 / +Math_sqrt(+d16);
 HEAPF32[i6 >> 2] = d17 * d15;
 HEAPF32[i2 >> 2] = d7 * d15;
 HEAPF32[i18 >> 2] = d8 * d15;
 HEAPF32[i19 >> 2] = d9 * d15;
 HEAPF32[i20 >> 2] = d10 * d15;
 HEAPF32[i21 >> 2] = d11 * d15;
 HEAPF32[i22 >> 2] = d12 * d15;
 HEAPF32[i23 >> 2] = d13 * d15;
 HEAPF32[i24 >> 2] = d14 * d15;
 i5 = __ZN6vision24OrthogonalizeIdentity8x9IfEEbPT_PKS1_(i1, i4) | 0;
 STACKTOP = i3;
 return i5 | 0;
}

function _h2v2_fancy_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i4 = i1 + 312 | 0;
 if ((HEAP32[i4 >> 2] | 0) <= 0) return;
 i1 = i2 + 40 | 0;
 i2 = 0;
 i6 = 0;
 do {
  i7 = i3 + (i6 << 2) | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  i9 = HEAP32[i3 + (i6 + -1 << 2) >> 2] | 0;
  i10 = i2 | 1;
  i11 = HEAP32[i5 + (i2 << 2) >> 2] | 0;
  i12 = ((HEAPU8[i8 >> 0] | 0) * 3 | 0) + (HEAPU8[i9 >> 0] | 0) | 0;
  i13 = ((HEAPU8[i8 + 1 >> 0] | 0) * 3 | 0) + (HEAPU8[i9 + 1 >> 0] | 0) | 0;
  HEAP8[i11 >> 0] = ((i12 << 2) + 8 | 0) >>> 4;
  HEAP8[i11 + 1 >> 0] = ((i12 * 3 | 0) + 7 + i13 | 0) >>> 4;
  i14 = HEAP32[i1 >> 2] | 0;
  i15 = i14 + -2 | 0;
  i16 = i11 + 2 | 0;
  if (!i15) {
   i17 = i12;
   i18 = i13;
   i19 = i16;
   i20 = i11;
  } else {
   i21 = i14 << 1;
   i14 = i11 + -2 | 0;
   i22 = i15;
   i15 = i12;
   i12 = i13;
   i13 = i16;
   i16 = i8 + 2 | 0;
   i8 = i9 + 2 | 0;
   i9 = i11;
   while (1) {
    i23 = ((HEAPU8[i16 >> 0] | 0) * 3 | 0) + (HEAPU8[i8 >> 0] | 0) | 0;
    i24 = i12 * 3 | 0;
    HEAP8[i13 >> 0] = (i15 + 8 + i24 | 0) >>> 4;
    HEAP8[i9 + 3 >> 0] = (i24 + 7 + i23 | 0) >>> 4;
    i22 = i22 + -1 | 0;
    if (!i22) break; else {
     i24 = i13;
     i25 = i12;
     i12 = i23;
     i13 = i13 + 2 | 0;
     i16 = i16 + 1 | 0;
     i8 = i8 + 1 | 0;
     i9 = i24;
     i15 = i25;
    }
   }
   i17 = i12;
   i18 = i23;
   i19 = i14 + i21 | 0;
   i20 = i11 + -4 + i21 | 0;
  }
  HEAP8[i19 >> 0] = (i17 + 8 + (i18 * 3 | 0) | 0) >>> 4;
  HEAP8[i20 + 3 >> 0] = ((i18 << 2) + 7 | 0) >>> 4;
  i15 = HEAP32[i7 >> 2] | 0;
  i6 = i6 + 1 | 0;
  i9 = HEAP32[i3 + (i6 << 2) >> 2] | 0;
  i8 = HEAP32[i5 + (i10 << 2) >> 2] | 0;
  i16 = ((HEAPU8[i15 >> 0] | 0) * 3 | 0) + (HEAPU8[i9 >> 0] | 0) | 0;
  i13 = ((HEAPU8[i15 + 1 >> 0] | 0) * 3 | 0) + (HEAPU8[i9 + 1 >> 0] | 0) | 0;
  HEAP8[i8 >> 0] = ((i16 << 2) + 8 | 0) >>> 4;
  HEAP8[i8 + 1 >> 0] = ((i16 * 3 | 0) + 7 + i13 | 0) >>> 4;
  i22 = HEAP32[i1 >> 2] | 0;
  i25 = i22 + -2 | 0;
  i24 = i8 + 2 | 0;
  if (!i25) {
   i26 = i16;
   i27 = i13;
   i28 = i24;
   i29 = i8;
  } else {
   i30 = i22 << 1;
   i22 = i8 + -2 | 0;
   i31 = i25;
   i25 = i16;
   i16 = i13;
   i13 = i24;
   i24 = i15 + 2 | 0;
   i15 = i9 + 2 | 0;
   i9 = i8;
   while (1) {
    i32 = ((HEAPU8[i24 >> 0] | 0) * 3 | 0) + (HEAPU8[i15 >> 0] | 0) | 0;
    i33 = i16 * 3 | 0;
    HEAP8[i13 >> 0] = (i25 + 8 + i33 | 0) >>> 4;
    HEAP8[i9 + 3 >> 0] = (i33 + 7 + i32 | 0) >>> 4;
    i31 = i31 + -1 | 0;
    if (!i31) break; else {
     i33 = i13;
     i34 = i16;
     i16 = i32;
     i13 = i13 + 2 | 0;
     i24 = i24 + 1 | 0;
     i15 = i15 + 1 | 0;
     i9 = i33;
     i25 = i34;
    }
   }
   i26 = i16;
   i27 = i32;
   i28 = i22 + i30 | 0;
   i29 = i8 + -4 + i30 | 0;
  }
  HEAP8[i28 >> 0] = (i26 + 8 + (i27 * 3 | 0) | 0) >>> 4;
  HEAP8[i29 + 3 >> 0] = ((i27 << 2) + 7 | 0) >>> 4;
  i2 = i2 + 2 | 0;
 } while ((i2 | 0) < (HEAP32[i4 >> 2] | 0));
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i9;
 i11 = i9 + 8 | 0;
 i12 = i3;
 while (1) {
  if ((i12 | 0) == (i4 | 0)) {
   i13 = i4;
   break;
  }
  if (!(HEAP32[i12 >> 2] | 0)) {
   i13 = i12;
   break;
  }
  i12 = i12 + 4 | 0;
 }
 HEAP32[i8 >> 2] = i6;
 HEAP32[i5 >> 2] = i3;
 i12 = i7;
 i14 = i1 + 8 | 0;
 i1 = i3;
 i3 = i6;
 i6 = i13;
 L6 : while (1) {
  if ((i3 | 0) == (i7 | 0) | (i1 | 0) == (i4 | 0)) {
   i15 = i1;
   i16 = 36;
   break;
  }
  i13 = i2;
  i17 = HEAP32[i13 + 4 >> 2] | 0;
  i18 = i10;
  HEAP32[i18 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i18 + 4 >> 2] = i17;
  i17 = ___uselocale(HEAP32[i14 >> 2] | 0) | 0;
  i18 = _wcsnrtombs(i3, i5, i6 - i1 >> 2, i12 - i3 | 0, i2) | 0;
  if (i17 | 0) ___uselocale(i17) | 0;
  switch (i18 | 0) {
  case -1:
   {
    i16 = 10;
    break L6;
    break;
   }
  case 0:
   {
    i19 = 1;
    i16 = 33;
    break L6;
    break;
   }
  default:
   {}
  }
  i17 = (HEAP32[i8 >> 2] | 0) + i18 | 0;
  HEAP32[i8 >> 2] = i17;
  if ((i17 | 0) == (i7 | 0)) {
   i16 = 34;
   break;
  }
  if ((i6 | 0) == (i4 | 0)) {
   i20 = i4;
   i21 = i17;
   i22 = HEAP32[i5 >> 2] | 0;
  } else {
   i17 = ___uselocale(HEAP32[i14 >> 2] | 0) | 0;
   i18 = _wcrtomb(i11, 0, i2) | 0;
   if (i17 | 0) ___uselocale(i17) | 0;
   if ((i18 | 0) == -1) {
    i23 = 2;
    i16 = 32;
    break;
   }
   if (i18 >>> 0 > (i12 - (HEAP32[i8 >> 2] | 0) | 0) >>> 0) {
    i23 = 1;
    i16 = 32;
    break;
   }
   i17 = i11;
   i13 = i18;
   while (1) {
    if (!i13) break;
    i18 = HEAP8[i17 >> 0] | 0;
    i24 = HEAP32[i8 >> 2] | 0;
    HEAP32[i8 >> 2] = i24 + 1;
    HEAP8[i24 >> 0] = i18;
    i17 = i17 + 1 | 0;
    i13 = i13 + -1 | 0;
   }
   i13 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i13;
   i17 = i13;
   while (1) {
    if ((i17 | 0) == (i4 | 0)) {
     i25 = i4;
     break;
    }
    if (!(HEAP32[i17 >> 2] | 0)) {
     i25 = i17;
     break;
    }
    i17 = i17 + 4 | 0;
   }
   i20 = i25;
   i21 = HEAP32[i8 >> 2] | 0;
   i22 = i13;
  }
  i1 = i22;
  i3 = i21;
  i6 = i20;
 }
 if ((i16 | 0) == 10) {
  HEAP32[i8 >> 2] = i3;
  i20 = i1;
  i1 = i3;
  while (1) {
   if ((i20 | 0) == (HEAP32[i5 >> 2] | 0)) break;
   i3 = HEAP32[i20 >> 2] | 0;
   i6 = ___uselocale(HEAP32[i14 >> 2] | 0) | 0;
   i21 = _wcrtomb(i1, i3, i10) | 0;
   if (i6 | 0) ___uselocale(i6) | 0;
   if ((i21 | 0) == -1) break;
   i6 = (HEAP32[i8 >> 2] | 0) + i21 | 0;
   HEAP32[i8 >> 2] = i6;
   i20 = i20 + 4 | 0;
   i1 = i6;
  }
  HEAP32[i5 >> 2] = i20;
  i19 = 2;
  i16 = 33;
 } else if ((i16 | 0) == 32) {
  i19 = i23;
  i16 = 33;
 } else if ((i16 | 0) == 34) {
  i15 = HEAP32[i5 >> 2] | 0;
  i16 = 36;
 }
 if ((i16 | 0) == 33) i26 = i19; else if ((i16 | 0) == 36) i26 = (i15 | 0) != (i4 | 0) & 1;
 STACKTOP = i9;
 return i26 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i9;
 i11 = i3;
 while (1) {
  if ((i11 | 0) == (i4 | 0)) {
   i12 = i4;
   break;
  }
  if (!(HEAP8[i11 >> 0] | 0)) {
   i12 = i11;
   break;
  }
  i11 = i11 + 1 | 0;
 }
 HEAP32[i8 >> 2] = i6;
 HEAP32[i5 >> 2] = i3;
 i11 = i7;
 i13 = i1 + 8 | 0;
 i1 = i3;
 i3 = i6;
 i6 = i12;
 while (1) {
  if ((i3 | 0) == (i7 | 0) | (i1 | 0) == (i4 | 0)) {
   i14 = i1;
   i15 = 33;
   break;
  }
  i12 = i2;
  i16 = HEAP32[i12 + 4 >> 2] | 0;
  i17 = i10;
  HEAP32[i17 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i17 + 4 >> 2] = i16;
  i16 = ___uselocale(HEAP32[i13 >> 2] | 0) | 0;
  i17 = _mbsnrtowcs(i3, i5, i6 - i1 | 0, i11 - i3 >> 2, i2) | 0;
  if (i16 | 0) ___uselocale(i16) | 0;
  if ((i17 | 0) == -1) {
   i15 = 10;
   break;
  }
  i16 = (HEAP32[i8 >> 2] | 0) + (i17 << 2) | 0;
  HEAP32[i8 >> 2] = i16;
  if ((i16 | 0) == (i7 | 0)) {
   i15 = 30;
   break;
  }
  i17 = HEAP32[i5 >> 2] | 0;
  if ((i6 | 0) == (i4 | 0)) {
   i18 = i4;
   i19 = i16;
   i20 = i17;
  } else {
   i12 = ___uselocale(HEAP32[i13 >> 2] | 0) | 0;
   i21 = _mbrtowc(i16, i17, 1, i2) | 0;
   if (i12 | 0) ___uselocale(i12) | 0;
   if (i21 | 0) {
    i22 = 2;
    i15 = 29;
    break;
   }
   HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 4;
   i21 = (HEAP32[i5 >> 2] | 0) + 1 | 0;
   HEAP32[i5 >> 2] = i21;
   i12 = i21;
   while (1) {
    if ((i12 | 0) == (i4 | 0)) {
     i23 = i4;
     break;
    }
    if (!(HEAP8[i12 >> 0] | 0)) {
     i23 = i12;
     break;
    }
    i12 = i12 + 1 | 0;
   }
   i18 = i23;
   i19 = HEAP32[i8 >> 2] | 0;
   i20 = i21;
  }
  i1 = i20;
  i3 = i19;
  i6 = i18;
 }
 do if ((i15 | 0) == 10) {
  i18 = i6;
  i19 = i1;
  i20 = i3;
  L29 : while (1) {
   HEAP32[i8 >> 2] = i20;
   if ((i19 | 0) == (HEAP32[i5 >> 2] | 0)) {
    i15 = 19;
    break;
   }
   i23 = ___uselocale(HEAP32[i13 >> 2] | 0) | 0;
   i2 = _mbrtowc(i20, i19, i18 - i19 | 0, i10) | 0;
   if (i23 | 0) ___uselocale(i23) | 0;
   switch (i2 | 0) {
   case -1:
    {
     i15 = 15;
     break L29;
     break;
    }
   case -2:
    {
     i15 = 16;
     break L29;
     break;
    }
   case 0:
    {
     i24 = 1;
     break;
    }
   default:
    i24 = i2;
   }
   i19 = i19 + i24 | 0;
   i20 = (HEAP32[i8 >> 2] | 0) + 4 | 0;
  }
  if ((i15 | 0) == 15) {
   HEAP32[i5 >> 2] = i19;
   i22 = 2;
   i15 = 29;
   break;
  } else if ((i15 | 0) == 16) {
   HEAP32[i5 >> 2] = i19;
   i22 = 1;
   i15 = 29;
   break;
  } else if ((i15 | 0) == 19) {
   HEAP32[i5 >> 2] = i19;
   i22 = (i19 | 0) != (i4 | 0) & 1;
   i15 = 29;
   break;
  }
 } else if ((i15 | 0) == 30) {
  i14 = HEAP32[i5 >> 2] | 0;
  i15 = 33;
 } while (0);
 if ((i15 | 0) == 29) i25 = i22; else if ((i15 | 0) == 33) i25 = (i14 | 0) != (i4 | 0) & 1;
 STACKTOP = i9;
 return i25 | 0;
}

function _getMultiEachMarkerInfo(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 i8 = i6 + -1 | 0;
 i9 = (i8 & i6 | 0) == 0;
 if (!i9) if (i6 >>> 0 > i1 >>> 0) i10 = i1; else i10 = (i1 >>> 0) % (i6 >>> 0) | 0; else i10 = i8 & i1;
 i11 = HEAP32[(HEAP32[14186] | 0) + (i10 << 2) >> 2] | 0;
 if (!i11) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 i12 = HEAP32[i11 >> 2] | 0;
 if (!i12) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 L15 : do if (i9) {
  i11 = i12;
  while (1) {
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i14 = (i13 | 0) == (i1 | 0);
   if (!(i14 | (i13 & i8 | 0) == (i10 | 0))) {
    i7 = -1;
    i15 = 24;
    break;
   }
   if (i14 ? (HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 24;
    break;
   }
  }
  if ((i15 | 0) == 24) {
   STACKTOP = i4;
   return i7 | 0;
  }
 } else {
  i11 = i12;
  while (1) {
   i14 = HEAP32[i11 + 4 >> 2] | 0;
   if ((i14 | 0) == (i1 | 0)) {
    if ((HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i14 >>> 0 < i6 >>> 0) i16 = i14; else i16 = (i14 >>> 0) % (i6 >>> 0) | 0;
    if ((i16 | 0) != (i10 | 0)) {
     i7 = -1;
     i15 = 24;
     break;
    }
   }
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 24;
    break;
   }
  }
  if ((i15 | 0) == 24) {
   STACKTOP = i4;
   return i7 | 0;
  }
 } while (0);
 i15 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0;
 i5 = HEAP32[i15 + 288 >> 2] | 0;
 if ((i2 | 0) < 0 ? 1 : (HEAP32[i15 + 292 >> 2] | 0) - i5 >> 3 >>> 0 <= i2 >>> 0) {
  i7 = -2;
  STACKTOP = i4;
  return i7 | 0;
 }
 i15 = HEAP32[i5 + (i2 << 3) + 4 >> 2] | 0;
 if ((i3 | 0) < 0 ? 1 : (HEAP32[i15 + 4 >> 2] | 0) <= (i3 | 0)) {
  i7 = -3;
  STACKTOP = i4;
  return i7 | 0;
 }
 i2 = HEAP32[i15 >> 2] | 0;
 HEAPF64[6516] = +HEAPF64[i2 + (i3 * 320 | 0) + 16 >> 3];
 HEAPF64[6517] = +HEAPF64[i2 + (i3 * 320 | 0) + 24 >> 3];
 HEAPF64[6518] = +HEAPF64[i2 + (i3 * 320 | 0) + 32 >> 3];
 HEAPF64[6519] = +HEAPF64[i2 + (i3 * 320 | 0) + 40 >> 3];
 HEAPF64[6520] = +HEAPF64[i2 + (i3 * 320 | 0) + 48 >> 3];
 HEAPF64[6521] = +HEAPF64[i2 + (i3 * 320 | 0) + 56 >> 3];
 HEAPF64[6522] = +HEAPF64[i2 + (i3 * 320 | 0) + 64 >> 3];
 HEAPF64[6523] = +HEAPF64[i2 + (i3 * 320 | 0) + 72 >> 3];
 HEAPF64[6524] = +HEAPF64[i2 + (i3 * 320 | 0) + 80 >> 3];
 HEAPF64[6525] = +HEAPF64[i2 + (i3 * 320 | 0) + 88 >> 3];
 HEAPF64[6526] = +HEAPF64[i2 + (i3 * 320 | 0) + 96 >> 3];
 HEAPF64[6527] = +HEAPF64[i2 + (i3 * 320 | 0) + 104 >> 3];
 _emscripten_asm_const_iiiid(1, HEAP32[i2 + (i3 * 320 | 0) + 304 >> 2] | 0, HEAP32[i2 + (i3 * 320 | 0) >> 2] | 0, HEAP32[i2 + (i3 * 320 | 0) + 4 >> 2] | 0, +(+HEAPF64[i2 + (i3 * 320 | 0) + 8 >> 3])) | 0;
 i7 = 0;
 STACKTOP = i4;
 return i7 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 40 | 0;
 i6 = i4 + 24 | 0;
 i7 = i4;
 i8 = i4 + 12 | 0;
 L1 : do if ((i2 - i1 | 0) > 1 ? (i9 = i3 + 4 | 0, i10 = HEAP32[i9 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i10 | 0)) : 0) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 67:
   {
    switch (HEAP8[i1 + 1 >> 0] | 0) {
    case 53:
    case 51:
    case 50:
    case 49:
     break;
    default:
     {
      i11 = i1;
      break L1;
     }
    }
    __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_(i6, i10 + -24 | 0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
    i12 = HEAP32[i9 >> 2] | 0;
    if (i12 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i12, i5);
     HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    HEAP8[i3 + 60 >> 0] = 1;
    i11 = i1 + 2 | 0;
    break L1;
    break;
   }
  case 68:
   break;
  default:
   {
    i11 = i1;
    break L1;
   }
  }
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 53:
  case 50:
  case 49:
  case 48:
   break;
  default:
   {
    i11 = i1;
    break L1;
   }
  }
  __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_(i8, i10 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 50315) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i10 = 0;
  while (1) {
   if ((i10 | 0) == 3) break;
   HEAP32[i8 + (i10 << 2) >> 2] = 0;
   i10 = i10 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i7);
  i10 = HEAP32[i9 >> 2] | 0;
  if (i10 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i5);
   HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  HEAP8[i3 + 60 >> 0] = 1;
  i11 = i1 + 2 | 0;
 } else i11 = i1; while (0);
 STACKTOP = i4;
 return i11 | 0;
}

function __ZN6vision10DoGPyramid5allocEPKNS_25GaussianScaleSpacePyramidE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 if ((HEAP32[i2 + 8 >> 2] | 0) == (HEAP32[i2 + 4 >> 2] | 0)) {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 20533, 42) | 0, 20576, 130) | 0, 33554, 6) | 0, 53) | 0, 33561, 2) | 0, 20707, 24) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 i5 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, 0, 0) | 0;
 i7 = HEAP32[i5 >> 2] | 0;
 i5 = (__ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, 0, 0) | 0) + 4 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 i5 = (__ZNK6vision25GaussianScaleSpacePyramid3getEmm(i2, 0, 0) | 0) + 8 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i5 = HEAP32[i2 + 16 >> 2] | 0;
 i8 = i1 + 12 | 0;
 HEAP32[i8 >> 2] = i5;
 i9 = (HEAP32[i2 + 20 >> 2] | 0) + -1 | 0;
 i2 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = i9;
 i10 = Math_imul(i9, i5) | 0;
 i5 = i1 + 4 | 0;
 i9 = HEAP32[i5 >> 2] | 0;
 i11 = HEAP32[i1 >> 2] | 0;
 i12 = i9 - i11 >> 5;
 i13 = i11;
 i11 = i9;
 if (i10 >>> 0 <= i12 >>> 0) {
  if (i10 >>> 0 < i12 >>> 0) {
   i9 = i13 + (i10 << 5) | 0;
   if ((i9 | 0) != (i11 | 0)) {
    i13 = i11;
    do {
     i13 = i13 + -32 | 0;
     __ZN6vision5ImageD2Ev(i13);
    } while ((i13 | 0) != (i9 | 0));
   }
   HEAP32[i5 >> 2] = i9;
  }
 } else __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8__appendEm(i1, i10 - i12 | 0);
 i12 = HEAP32[i8 >> 2] | 0;
 if (!i12) {
  STACKTOP = i3;
  return;
 }
 i10 = 0;
 i9 = HEAP32[i2 >> 2] | 0;
 i5 = i12;
 while (1) {
  if (!i9) {
   i14 = i5;
   i15 = 0;
  } else {
   i12 = i4 >>> i10;
   i13 = i6 >>> i10;
   i11 = 0;
   i16 = i9;
   do {
    i17 = (Math_imul(i16, i10) | 0) + i11 | 0;
    __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[i1 >> 2] | 0) + (i17 << 5) | 0, i7, i12, i13, -1, 1);
    i11 = i11 + 1 | 0;
    i16 = HEAP32[i2 >> 2] | 0;
   } while (i11 >>> 0 < i16 >>> 0);
   i14 = HEAP32[i8 >> 2] | 0;
   i15 = i16;
  }
  i10 = i10 + 1 | 0;
  if (i10 >>> 0 >= i14 >>> 0) break; else {
   i9 = i15;
   i5 = i14;
  }
 }
 STACKTOP = i3;
 return;
}

function __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if ((HEAP32[i2 >> 2] | 0) != 2) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25626, 46) | 0, 25032, 130) | 0, 33554, 6) | 0, 357) | 0, 33561, 2) | 0, 25673, 35) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 switch (HEAP32[i3 >> 2] | 0) {
 case 1:
  {
   __ZN6vision18binomial_4th_orderEPfPtPKhmm(HEAP32[i2 + 24 >> 2] | 0, HEAP32[i1 + 32 >> 2] | 0, HEAP32[i3 + 24 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i3 + 8 >> 2] | 0);
   STACKTOP = i4;
   return;
  }
 case 2:
  {
   __ZN6vision18binomial_4th_orderEPfS0_PKfmm(HEAP32[i2 + 24 >> 2] | 0, HEAP32[i1 + 44 >> 2] | 0, HEAP32[i3 + 24 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i3 + 8 >> 2] | 0);
   STACKTOP = i4;
   return;
  }
 case 0:
  {
   i4 = ___cxa_allocate_exception(16) | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   i3 = __Znwm(32) | 0;
   HEAP32[i5 >> 2] = i3;
   HEAP32[i5 + 8 >> 2] = -2147483616;
   HEAP32[i5 + 4 >> 2] = 18;
   i9 = i3;
   i10 = 25709;
   i11 = i9 + 18 | 0;
   do {
    HEAP8[i9 >> 0] = HEAP8[i10 >> 0] | 0;
    i9 = i9 + 1 | 0;
    i10 = i10 + 1 | 0;
   } while ((i9 | 0) < (i11 | 0));
   HEAP8[i3 + 18 >> 0] = 0;
   HEAP32[i4 >> 2] = 13516;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4 + 4 | 0, i5);
   ___cxa_throw(i4 | 0, 11016, 5);
   break;
  }
 default:
  {
   i4 = ___cxa_allocate_exception(16) | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   i3 = __Znwm(32) | 0;
   HEAP32[i5 >> 2] = i3;
   HEAP32[i5 + 8 >> 2] = -2147483616;
   HEAP32[i5 + 4 >> 2] = 22;
   i9 = i3;
   i10 = 25728;
   i11 = i9 + 22 | 0;
   do {
    HEAP8[i9 >> 0] = HEAP8[i10 >> 0] | 0;
    i9 = i9 + 1 | 0;
    i10 = i10 + 1 | 0;
   } while ((i9 | 0) < (i11 | 0));
   HEAP8[i3 + 22 >> 0] = 0;
   HEAP32[i4 >> 2] = 13516;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4 + 4 | 0, i5);
   ___cxa_throw(i4 | 0, 11016, 5);
  }
 }
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_25GaussianScaleSpacePyramidE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i4 = i3 + 16 | 0;
 i5 = i3;
 i6 = i3 + 56 | 0;
 i7 = i3 + 48 | 0;
 i8 = i1 + 160 | 0;
 i9 = i2 + 4 | 0;
 i10 = HEAP32[i9 >> 2] | 0;
 if (!((HEAP32[i8 >> 2] | 0) == (HEAP32[i10 + 4 >> 2] | 0) ? (HEAP32[i1 + 164 >> 2] | 0) == (HEAP32[i10 + 8 >> 2] | 0) : 0)) __ZN6vision25DoGScaleInvariantDetector5allocEPKNS_25GaussianScaleSpacePyramidE(i8, i2);
 i10 = i1 + 64 | 0;
 i11 = __Znwm(148) | 0;
 i12 = i11 + 36 | 0;
 i13 = i11;
 i14 = i13 + 36 | 0;
 do {
  HEAP32[i13 >> 2] = 0;
  i13 = i13 + 4 | 0;
 } while ((i13 | 0) < (i14 | 0));
 __ZN6vision28BinaryHierarchicalClusteringILi96EEC2Ev(i12);
 HEAP32[i7 >> 2] = 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE(i6, i11, i4);
 i11 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i10 >> 2] = i11;
 i11 = i6 + 4 | 0;
 i6 = i1 + 68 | 0;
 i7 = HEAP32[i11 >> 2] | 0;
 i12 = HEAP32[i6 >> 2] | 0;
 HEAP32[i11 >> 2] = i12;
 HEAP32[i6 >> 2] = i7;
 i7 = i12;
 if (i12 | 0 ? (i6 = i7 + 4 | 0, i11 = HEAP32[i6 >> 2] | 0, HEAP32[i6 >> 2] = i11 + -1, (i11 | 0) == 0) : 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 255](i7);
  __ZNSt3__219__shared_weak_count14__release_weakEv(i7);
 }
 i7 = HEAP32[i10 >> 2] | 0;
 i12 = HEAP32[i9 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i12 + 4 >> 2];
 HEAP32[i7 + 4 >> 2] = HEAP32[i12 + 8 >> 2];
 __ZN6vision11ScopedTimerC2EPKc(i4, 27176);
 __ZN6vision12FindFeaturesINS_14FREAKExtractorELi96EEEvPNS_8KeyframeIXT0_EEEPKNS_25GaussianScaleSpacePyramidEPNS_25DoGScaleInvariantDetectorEPT_(HEAP32[i10 >> 2] | 0, i2, i8, i1 + 316 | 0);
 __ZN6vision11ScopedTimerD2Ev(i4);
 if ((HEAP8[55808] | 0) == 0 ? ___cxa_guard_acquire(55808) | 0 : 0) __ZN6vision6LoggerC2Ev(56732);
 __ZN6vision15get_pretty_timeEv(i4);
 i8 = i4 + 11 | 0;
 i2 = (HEAP8[i8 >> 0] | 0) < 0 ? HEAP32[i4 >> 2] | 0 : i4;
 i12 = HEAP32[i10 >> 2] | 0;
 i7 = ((HEAP32[i12 + 28 >> 2] | 0) - (HEAP32[i12 + 24 >> 2] | 0) | 0) / 20 | 0;
 HEAP32[i5 >> 2] = 33683;
 HEAP32[i5 + 4 >> 2] = i2;
 HEAP32[i5 + 8 >> 2] = 28813;
 HEAP32[i5 + 12 >> 2] = i7;
 __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz(56732, 8, 28769, i5);
 if ((HEAP8[i8 >> 0] | 0) >= 0) {
  i15 = HEAP32[i10 >> 2] | 0;
  i16 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_8KeyframeILi96EEE(i1, i15) | 0;
  STACKTOP = i3;
  return i16 | 0;
 }
 __ZdlPv(HEAP32[i4 >> 2] | 0);
 i15 = HEAP32[i10 >> 2] | 0;
 i16 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_8KeyframeILi96EEE(i1, i15) | 0;
 STACKTOP = i3;
 return i16 | 0;
}

function _arMatrixPCA(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, d21 = 0.0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = HEAP32[i1 + 8 >> 2] | 0;
 i7 = (i5 | 0) < (i6 | 0) ? i5 : i6;
 if ((i5 | 0) < 2 | (i6 | 0) < 2) {
  i8 = -1;
  return i8 | 0;
 }
 if ((HEAP32[i2 + 8 >> 2] | 0) != (i6 | 0)) {
  i8 = -1;
  return i8 | 0;
 }
 if ((HEAP32[i2 + 4 >> 2] | 0) != (i7 | 0)) {
  i8 = -1;
  return i8 | 0;
 }
 i9 = i3 + 4 | 0;
 if ((HEAP32[i9 >> 2] | 0) != (i7 | 0)) {
  i8 = -1;
  return i8 | 0;
 }
 i7 = i4 + 4 | 0;
 if ((HEAP32[i7 >> 2] | 0) != (i6 | 0)) {
  i8 = -1;
  return i8 | 0;
 }
 i10 = _arMatrixAllocDup(i1) | 0;
 if (!i10) {
  i8 = -1;
  return i8 | 0;
 }
 d11 = +Math_sqrt(+(+(i5 | 0)));
 i1 = i10 + 4 | 0;
 i12 = HEAP32[i1 >> 2] | 0;
 i13 = i10 + 8 | 0;
 i14 = HEAP32[i13 >> 2] | 0;
 if (!((i12 | 0) < 1 | (i14 | 0) < 1) ? (HEAP32[i7 >> 2] | 0) == (i14 | 0) : 0) {
  _memset(HEAP32[i4 >> 2] | 0, 0, i14 << 3 | 0) | 0;
  i15 = HEAP32[i10 >> 2] | 0;
  i16 = HEAP32[i4 >> 2] | 0;
  i4 = i15;
  i17 = 0;
  while (1) {
   i18 = i16;
   i19 = 0;
   i20 = i4;
   while (1) {
    HEAPF64[i18 >> 3] = +HEAPF64[i20 >> 3] + +HEAPF64[i18 >> 3];
    i19 = i19 + 1 | 0;
    if ((i19 | 0) == (i14 | 0)) break; else {
     i18 = i18 + 8 | 0;
     i20 = i20 + 8 | 0;
    }
   }
   i17 = i17 + 1 | 0;
   if ((i17 | 0) == (i12 | 0)) break; else i4 = i4 + (i14 << 3) | 0;
  }
  d21 = +(i12 | 0);
  i12 = 0;
  do {
   i4 = i16 + (i12 << 3) | 0;
   HEAPF64[i4 >> 3] = +HEAPF64[i4 >> 3] / d21;
   i12 = i12 + 1 | 0;
  } while ((i12 | 0) != (i14 | 0));
  i14 = HEAP32[i1 >> 2] | 0;
  i1 = HEAP32[i13 >> 2] | 0;
  if ((HEAP32[i7 >> 2] | 0) != (i1 | 0)) {
   _arMatrixFree(i10) | 0;
   i8 = -1;
   return i8 | 0;
  }
  if ((i14 | 0) > 0 & (i1 | 0) > 0) {
   i7 = 0;
   i13 = i15;
   while (1) {
    i12 = i16;
    i4 = 0;
    i17 = i13;
    while (1) {
     HEAPF64[i17 >> 3] = +HEAPF64[i17 >> 3] - +HEAPF64[i12 >> 3];
     i4 = i4 + 1 | 0;
     if ((i4 | 0) == (i1 | 0)) break; else {
      i12 = i12 + 8 | 0;
      i17 = i17 + 8 | 0;
     }
    }
    i7 = i7 + 1 | 0;
    if ((i7 | 0) == (i14 | 0)) break; else i13 = i13 + (i1 << 3) | 0;
   }
  }
  i1 = Math_imul(i6, i5) | 0;
  if ((i1 | 0) > 0) {
   i5 = 0;
   do {
    i6 = i15 + (i5 << 3) | 0;
    HEAPF64[i6 >> 3] = +HEAPF64[i6 >> 3] / d11;
    i5 = i5 + 1 | 0;
   } while ((i5 | 0) != (i1 | 0));
  }
  i1 = _PCA(i10, i2, i3) | 0;
  _arMatrixFree(i10) | 0;
  i2 = HEAP32[i9 >> 2] | 0;
  i9 = (i2 | 0) > 0;
  if (!i9) {
   i8 = i1;
   return i8 | 0;
  }
  i5 = HEAP32[i3 >> 2] | 0;
  d11 = 0.0;
  i15 = 0;
  do {
   d11 = d11 + +HEAPF64[i5 + (i15 << 3) >> 3];
   i15 = i15 + 1 | 0;
  } while ((i15 | 0) < (i2 | 0));
  if (!i9) {
   i8 = i1;
   return i8 | 0;
  }
  i9 = HEAP32[i3 >> 2] | 0;
  i3 = 0;
  do {
   i15 = i9 + (i3 << 3) | 0;
   HEAPF64[i15 >> 3] = +HEAPF64[i15 >> 3] / d11;
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i2 | 0));
  i8 = i1;
  return i8 | 0;
 }
 _arMatrixFree(i10) | 0;
 i8 = -1;
 return i8 | 0;
}

function _addMultiMarker(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 16 | 0;
 i5 = i3 + 8 | 0;
 i6 = i3 + 20 | 0;
 i7 = i3;
 HEAP32[i6 >> 2] = i1;
 i8 = HEAP32[14187] | 0;
 if (!i8) {
  i9 = -1;
  STACKTOP = i3;
  return i9 | 0;
 }
 i10 = i8 + -1 | 0;
 i11 = (i10 & i8 | 0) == 0;
 if (!i11) if (i8 >>> 0 > i1 >>> 0) i12 = i1; else i12 = (i1 >>> 0) % (i8 >>> 0) | 0; else i12 = i10 & i1;
 i13 = HEAP32[(HEAP32[14186] | 0) + (i12 << 2) >> 2] | 0;
 if (!i13) {
  i9 = -1;
  STACKTOP = i3;
  return i9 | 0;
 }
 i14 = HEAP32[i13 >> 2] | 0;
 if (!i14) {
  i9 = -1;
  STACKTOP = i3;
  return i9 | 0;
 }
 L15 : do if (i11) {
  i13 = i14;
  while (1) {
   i15 = HEAP32[i13 + 4 >> 2] | 0;
   i16 = (i15 | 0) == (i1 | 0);
   if (!(i16 | (i15 & i10 | 0) == (i12 | 0))) {
    i9 = -1;
    i17 = 34;
    break;
   }
   if (i16 ? (HEAP32[i13 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i13 = HEAP32[i13 >> 2] | 0;
   if (!i13) {
    i9 = -1;
    i17 = 34;
    break;
   }
  }
  if ((i17 | 0) == 34) {
   STACKTOP = i3;
   return i9 | 0;
  }
 } else {
  i13 = i14;
  while (1) {
   i16 = HEAP32[i13 + 4 >> 2] | 0;
   if ((i16 | 0) == (i1 | 0)) {
    if ((HEAP32[i13 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i16 >>> 0 < i8 >>> 0) i18 = i16; else i18 = (i16 >>> 0) % (i8 >>> 0) | 0;
    if ((i18 | 0) != (i12 | 0)) {
     i9 = -1;
     i17 = 34;
     break;
    }
   }
   i13 = HEAP32[i13 >> 2] | 0;
   if (!i13) {
    i9 = -1;
    i17 = 34;
    break;
   }
  }
  if ((i17 | 0) == 34) {
   STACKTOP = i3;
   return i9 | 0;
  }
 } while (0);
 i17 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i6) | 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) < 0) i19 = HEAP32[i2 >> 2] | 0; else i19 = i2;
 i2 = HEAP32[i17 + 216 >> 2] | 0;
 i6 = i17 + 220 | 0;
 i12 = i17 + 224 | 0;
 i18 = _arMultiReadConfigFile(i19, HEAP32[i6 >> 2] | 0) | 0;
 HEAP32[i12 >> 2] = i18;
 if (!i18) {
  _arLog(0, 3, 44681, i5);
  _arPattDeleteHandle(HEAP32[i6 >> 2] | 0) | 0;
  _arLog(0, 3, 44708, i4);
  i9 = -1;
  STACKTOP = i3;
  return i9 | 0;
 }
 switch (HEAP32[i18 + 108 >> 2] | 0) {
 case 0:
  {
   _arSetPatternDetectionMode(i2, 0) | 0;
   break;
  }
 case 1:
  {
   _arSetPatternDetectionMode(i2, 2) | 0;
   break;
  }
 default:
  _arSetPatternDetectionMode(i2, 3) | 0;
 }
 i2 = i17 + 288 | 0;
 i18 = i17 + 292 | 0;
 i4 = HEAP32[i18 >> 2] | 0;
 HEAP32[i7 >> 2] = i4 - (HEAP32[i2 >> 2] | 0) >> 3;
 HEAP32[i7 + 4 >> 2] = HEAP32[i12 >> 2];
 if ((HEAP32[i17 + 296 >> 2] | 0) == (i4 | 0)) __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(i2, i7); else {
  i2 = i7;
  i17 = HEAP32[i2 + 4 >> 2] | 0;
  i12 = i4;
  HEAP32[i12 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i12 + 4 >> 2] = i17;
  HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + 8;
 }
 i9 = HEAP32[i7 >> 2] | 0;
 STACKTOP = i3;
 return i9 | 0;
}

function _jpeg_start_decompress(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i2 = i1 + 20 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 L1 : do switch (i3 | 0) {
 case 202:
  {
   _jinit_master_decompress(i1);
   if (!(HEAP32[i1 + 64 >> 2] | 0)) {
    HEAP32[i2 >> 2] = 203;
    i4 = 6;
    break L1;
   }
   HEAP32[i2 >> 2] = 207;
   i5 = 1;
   return i5 | 0;
  }
 case 203:
  {
   i4 = 6;
   break;
  }
 case 204:
  {
   i6 = i1 + 420 | 0;
   break;
  }
 default:
  {
   i7 = HEAP32[i1 >> 2] | 0;
   HEAP32[i7 + 20 >> 2] = 20;
   HEAP32[i7 + 24 >> 2] = i3;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   i4 = 17;
  }
 } while (0);
 if ((i4 | 0) == 6) {
  i3 = i1 + 436 | 0;
  L11 : do if (HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] | 0) {
   i7 = i1 + 8 | 0;
   i8 = i1 + 320 | 0;
   i9 = HEAP32[i7 >> 2] | 0;
   L13 : while (1) {
    if (i9 | 0) FUNCTION_TABLE_vi[HEAP32[i9 >> 2] & 255](i1);
    i10 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i3 >> 2] >> 2] & 127](i1) | 0;
    switch (i10 | 0) {
    case 2:
     {
      break L11;
      break;
     }
    case 0:
     {
      i5 = i10;
      break L13;
      break;
     }
    default:
     {}
    }
    i11 = HEAP32[i7 >> 2] | 0;
    if ((i10 | 2 | 0) == 3 & (i11 | 0) != 0 ? (i10 = i11 + 4 | 0, i12 = (HEAP32[i10 >> 2] | 0) + 1 | 0, HEAP32[i10 >> 2] = i12, i10 = i11 + 8 | 0, i13 = HEAP32[i10 >> 2] | 0, (i12 | 0) >= (i13 | 0)) : 0) HEAP32[i10 >> 2] = (HEAP32[i8 >> 2] | 0) + i13;
    i9 = i11;
   }
   return i5 | 0;
  } while (0);
  HEAP32[i1 + 152 >> 2] = HEAP32[i1 + 144 >> 2];
  i4 = 17;
 }
 if ((i4 | 0) == 17) {
  i4 = i1 + 420 | 0;
  if ((HEAP32[i2 >> 2] | 0) == 204) i6 = i4; else {
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i4 >> 2] >> 2] & 255](i1);
   HEAP32[i1 + 140 >> 2] = 0;
   HEAP32[i2 >> 2] = 204;
   i6 = i4;
  }
 }
 i4 = HEAP32[i6 >> 2] | 0;
 L29 : do if (HEAP32[i4 + 8 >> 2] | 0) {
  i3 = i1 + 140 | 0;
  i9 = i1 + 116 | 0;
  i8 = i1 + 8 | 0;
  i7 = i1 + 424 | 0;
  i11 = HEAP32[i3 >> 2] | 0;
  i13 = i4;
  L31 : while (1) {
   i10 = HEAP32[i9 >> 2] | 0;
   if (i11 >>> 0 < i10 >>> 0) {
    i12 = i11;
    i14 = i10;
    do {
     i10 = HEAP32[i8 >> 2] | 0;
     if (!i10) i15 = i12; else {
      HEAP32[i10 + 4 >> 2] = i12;
      HEAP32[i10 + 8 >> 2] = i14;
      FUNCTION_TABLE_vi[HEAP32[i10 >> 2] & 255](i1);
      i15 = HEAP32[i3 >> 2] | 0;
     }
     FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 4 >> 2] & 31](i1, 0, i3, 0);
     i12 = HEAP32[i3 >> 2] | 0;
     if ((i12 | 0) == (i15 | 0)) {
      i5 = 0;
      break L31;
     }
     i14 = HEAP32[i9 >> 2] | 0;
    } while (i12 >>> 0 < i14 >>> 0);
    i16 = HEAP32[i6 >> 2] | 0;
   } else i16 = i13;
   FUNCTION_TABLE_vi[HEAP32[i16 + 4 >> 2] & 255](i1);
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i6 >> 2] >> 2] & 255](i1);
   HEAP32[i3 >> 2] = 0;
   i13 = HEAP32[i6 >> 2] | 0;
   if (!(HEAP32[i13 + 8 >> 2] | 0)) break L29; else i11 = 0;
  }
  return i5 | 0;
 } while (0);
 HEAP32[i2 >> 2] = (HEAP32[i1 + 68 >> 2] | 0) == 0 ? 205 : 206;
 i5 = 1;
 return i5 | 0;
}

function _jpeg_fill_bit_buffer(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i6 = i1 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = HEAP32[i1 + 16 >> 2] | 0;
 i9 = i8 + 416 | 0;
 L1 : do if (!(HEAP32[i9 >> 2] | 0)) if ((i3 | 0) < 25) {
  i10 = i8 + 24 | 0;
  i11 = i7;
  i12 = i5;
  i13 = i2;
  i14 = i3;
  L4 : while (1) {
   if (!i11) {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 127](i8) | 0)) {
     i15 = 0;
     i16 = 20;
     break;
    }
    i17 = HEAP32[i10 >> 2] | 0;
    i18 = HEAP32[i17 + 4 >> 2] | 0;
    i19 = HEAP32[i17 >> 2] | 0;
   } else {
    i18 = i11;
    i19 = i12;
   }
   i17 = i18 + -1 | 0;
   i20 = i19 + 1 | 0;
   i21 = HEAP8[i19 >> 0] | 0;
   i22 = i21 & 255;
   L10 : do if (i21 << 24 >> 24 == -1) {
    i23 = i17;
    i24 = i20;
    while (1) {
     if (!i23) {
      if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 127](i8) | 0)) {
       i15 = 0;
       i16 = 20;
       break L4;
      }
      i25 = HEAP32[i10 >> 2] | 0;
      i26 = HEAP32[i25 + 4 >> 2] | 0;
      i27 = HEAP32[i25 >> 2] | 0;
     } else {
      i26 = i23;
      i27 = i24;
     }
     i28 = i26 + -1 | 0;
     i29 = i27 + 1 | 0;
     i30 = HEAP8[i27 >> 0] | 0;
     switch (i30 << 24 >> 24) {
     case 0:
      {
       i31 = 255;
       i32 = i28;
       i33 = i29;
       break L10;
       break;
      }
     case -1:
      {
       i23 = i28;
       i24 = i29;
       break;
      }
     default:
      {
       i16 = 13;
       break L4;
      }
     }
    }
   } else {
    i31 = i22;
    i32 = i17;
    i33 = i20;
   } while (0);
   i20 = i31 | i13 << 8;
   i17 = i14 + 8 | 0;
   if ((i14 | 0) < 17) {
    i11 = i32;
    i12 = i33;
    i13 = i20;
    i14 = i17;
   } else {
    i34 = i20;
    i35 = i17;
    i36 = i32;
    i37 = i33;
    break L1;
   }
  }
  if ((i16 | 0) == 13) {
   HEAP32[i9 >> 2] = i30 & 255;
   i38 = i13;
   i39 = i14;
   i40 = i28;
   i41 = i29;
   i16 = 15;
   break;
  } else if ((i16 | 0) == 20) return i15 | 0;
 } else {
  i34 = i2;
  i35 = i3;
  i36 = i7;
  i37 = i5;
 } else {
  i38 = i2;
  i39 = i3;
  i40 = i7;
  i41 = i5;
  i16 = 15;
 } while (0);
 if ((i16 | 0) == 15) if ((i39 | 0) < (i4 | 0)) {
  i4 = i8 + 444 | 0;
  if (!(HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] | 0)) {
   i16 = HEAP32[i8 >> 2] | 0;
   HEAP32[i16 + 20 >> 2] = 117;
   FUNCTION_TABLE_vii[HEAP32[i16 + 4 >> 2] & 63](i8, -1);
   HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] = 1;
  }
  i34 = i38 << 25 - i39;
  i35 = 25;
  i36 = i40;
  i37 = i41;
 } else {
  i34 = i38;
  i35 = i39;
  i36 = i40;
  i37 = i41;
 }
 HEAP32[i1 >> 2] = i37;
 HEAP32[i6 >> 2] = i36;
 HEAP32[i1 + 8 >> 2] = i34;
 HEAP32[i1 + 12 >> 2] = i35;
 i15 = 1;
 return i15 | 0;
}

function _getMarkerInfo(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 23;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 23;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i4) | 0) + 216 | 0;
 i4 = HEAP32[i14 >> 2] | 0;
 if ((HEAP32[i4 + 44 >> 2] | 0) <= (i2 | 0)) {
  i6 = -3;
  STACKTOP = i3;
  return i6 | 0;
 }
 i14 = (i2 | 0) < 0 ? 55816 : i4 + 48 + (i2 << 8) | 0;
 _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi(2, HEAP32[i14 >> 2] | 0, HEAP32[i14 + 4 >> 2] | 0, HEAP32[i14 + 8 >> 2] | 0, HEAP32[i14 + 12 >> 2] | 0, HEAP32[i14 + 16 >> 2] | 0, HEAP32[i14 + 20 >> 2] | 0, HEAP32[i14 + 24 >> 2] | 0, +(+HEAPF64[i14 + 32 >> 3]), +(+HEAPF64[i14 + 40 >> 3]), +(+HEAPF64[i14 + 48 >> 3]), +(+HEAPF64[i14 + 56 >> 3]), +(+HEAPF64[i14 + 64 >> 3]), +(+HEAPF64[i14 + 72 >> 3]), +(+HEAPF64[i14 + 80 >> 3]), +(+HEAPF64[i14 + 88 >> 3]), +(+HEAPF64[i14 + 96 >> 3]), +(+HEAPF64[i14 + 104 >> 3]), +(+HEAPF64[i14 + 112 >> 3]), +(+HEAPF64[i14 + 120 >> 3]), +(+HEAPF64[i14 + 128 >> 3]), +(+HEAPF64[i14 + 136 >> 3]), +(+HEAPF64[i14 + 144 >> 3]), +(+HEAPF64[i14 + 152 >> 3]), +(+HEAPF64[i14 + 160 >> 3]), +(+HEAPF64[i14 + 168 >> 3]), +(+HEAPF64[i14 + 176 >> 3]), +(+HEAPF64[i14 + 184 >> 3]), +(+HEAPF64[i14 + 192 >> 3]), +(+HEAPF64[i14 + 200 >> 3]), +(+HEAPF64[i14 + 208 >> 3]), +(+HEAPF64[i14 + 216 >> 3]), +(+HEAPF64[i14 + 224 >> 3]), HEAP32[i14 + 240 >> 2] | 0) | 0;
 i6 = 0;
 STACKTOP = i3;
 return i6 | 0;
}

function _setupAR2(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i2 + 16 | 0;
 i4 = i2 + 8 | 0;
 i5 = i2;
 i6 = i2 + 20 | 0;
 HEAP32[i6 >> 2] = i1;
 i7 = HEAP32[14187] | 0;
 if (!i7) {
  i8 = -1;
  STACKTOP = i2;
  return i8 | 0;
 }
 i9 = i7 + -1 | 0;
 i10 = (i9 & i7 | 0) == 0;
 if (!i10) if (i7 >>> 0 > i1 >>> 0) i11 = i1; else i11 = (i1 >>> 0) % (i7 >>> 0) | 0; else i11 = i9 & i1;
 i12 = HEAP32[(HEAP32[14186] | 0) + (i11 << 2) >> 2] | 0;
 if (!i12) {
  i8 = -1;
  STACKTOP = i2;
  return i8 | 0;
 }
 i13 = HEAP32[i12 >> 2] | 0;
 if (!i13) {
  i8 = -1;
  STACKTOP = i2;
  return i8 | 0;
 }
 L15 : do if (i10) {
  i12 = i13;
  while (1) {
   i14 = HEAP32[i12 + 4 >> 2] | 0;
   i15 = (i14 | 0) == (i1 | 0);
   if (!(i15 | (i14 & i9 | 0) == (i11 | 0))) {
    i8 = -1;
    i16 = 26;
    break;
   }
   if (i15 ? (HEAP32[i12 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i12 = HEAP32[i12 >> 2] | 0;
   if (!i12) {
    i8 = -1;
    i16 = 26;
    break;
   }
  }
  if ((i16 | 0) == 26) {
   STACKTOP = i2;
   return i8 | 0;
  }
 } else {
  i12 = i13;
  while (1) {
   i15 = HEAP32[i12 + 4 >> 2] | 0;
   if ((i15 | 0) == (i1 | 0)) {
    if ((HEAP32[i12 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i15 >>> 0 < i7 >>> 0) i17 = i15; else i17 = (i15 >>> 0) % (i7 >>> 0) | 0;
    if ((i17 | 0) != (i11 | 0)) {
     i8 = -1;
     i16 = 26;
     break;
    }
   }
   i12 = HEAP32[i12 >> 2] | 0;
   if (!i12) {
    i8 = -1;
    i16 = 26;
    break;
   }
  }
  if ((i16 | 0) == 26) {
   STACKTOP = i2;
   return i8 | 0;
  }
 } while (0);
 i16 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i6) | 0;
 i6 = i16 + 192 | 0;
 i11 = _kpmCreateHandle(HEAP32[i6 >> 2] | 0) | 0;
 HEAP32[i16 + 232 >> 2] = i11;
 i11 = _ar2CreateHandle(HEAP32[i6 >> 2] | 0, HEAP32[i16 + 432 >> 2] | 0, -1) | 0;
 i6 = i16 + 236 | 0;
 HEAP32[i6 >> 2] = i11;
 if (!i11) {
  _arLog(0, 3, 44847, i5);
  i8 = 0;
  STACKTOP = i2;
  return i8 | 0;
 }
 if ((_threadGetCPU() | 0) < 2) {
  _arLog(0, 1, 44872, i4);
  _ar2SetTrackingThresh(HEAP32[i6 >> 2] | 0, 5.0) | 0;
  _ar2SetSimThresh(HEAP32[i6 >> 2] | 0, .5) | 0;
  _ar2SetSearchFeatureNum(HEAP32[i6 >> 2] | 0, 16) | 0;
  _ar2SetSearchSize(HEAP32[i6 >> 2] | 0, 6) | 0;
  _ar2SetTemplateSize1(HEAP32[i6 >> 2] | 0, 6) | 0;
  _ar2SetTemplateSize2(HEAP32[i6 >> 2] | 0, 6) | 0;
  i8 = 0;
  STACKTOP = i2;
  return i8 | 0;
 } else {
  _arLog(0, 1, 44919, i3);
  _ar2SetTrackingThresh(HEAP32[i6 >> 2] | 0, 5.0) | 0;
  _ar2SetSimThresh(HEAP32[i6 >> 2] | 0, .5) | 0;
  _ar2SetSearchFeatureNum(HEAP32[i6 >> 2] | 0, 16) | 0;
  _ar2SetSearchSize(HEAP32[i6 >> 2] | 0, 12) | 0;
  _ar2SetTemplateSize1(HEAP32[i6 >> 2] | 0, 6) | 0;
  _ar2SetTemplateSize2(HEAP32[i6 >> 2] | 0, 6) | 0;
  i8 = 0;
  STACKTOP = i2;
  return i8 | 0;
 }
 return 0;
}

function __ZNSt3__210__stdinbufIcE9__getcharEb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 16 | 0;
 i5 = i3 + 8 | 0;
 i6 = i3 + 4 | 0;
 i7 = i3;
 i8 = i1 + 52 | 0;
 if (HEAP8[i8 >> 0] | 0) {
  i9 = i1 + 48 | 0;
  i10 = HEAP32[i9 >> 2] | 0;
  if (i2) {
   i11 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   HEAP32[i9 >> 2] = i11;
   HEAP8[i8 >> 0] = 0;
   i12 = i10;
  } else i12 = i10;
 } else {
  i10 = HEAP32[i1 + 44 >> 2] | 0;
  i8 = (i10 | 0) > 1 ? i10 : 1;
  i10 = i1 + 32 | 0;
  i11 = 0;
  while (1) {
   if (i11 >>> 0 >= i8 >>> 0) {
    i13 = 9;
    break;
   }
   i9 = _getc(HEAP32[i10 >> 2] | 0) | 0;
   if ((i9 | 0) == -1) {
    i13 = 8;
    break;
   }
   HEAP8[i4 + i11 >> 0] = i9;
   i11 = i11 + 1 | 0;
  }
  if ((i13 | 0) == 8) i14 = __ZNSt3__211char_traitsIcE3eofEv() | 0; else if ((i13 | 0) == 9) {
   do if (!(HEAP8[i1 + 53 >> 0] | 0)) {
    i11 = i1 + 40 | 0;
    i9 = i1 + 36 | 0;
    i15 = i5 + 1 | 0;
    i16 = i8;
    L11 : while (1) {
     i17 = HEAP32[i11 >> 2] | 0;
     i18 = i17;
     i19 = HEAP32[i18 >> 2] | 0;
     i20 = HEAP32[i18 + 4 >> 2] | 0;
     i18 = HEAP32[i9 >> 2] | 0;
     i21 = i4 + i16 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i4, i21, i6, i5, i15, i7) | 0) {
     case 3:
      {
       i13 = 15;
       break L11;
       break;
      }
     case 2:
      {
       i13 = 17;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i17 = HEAP32[i11 >> 2] | 0;
     HEAP32[i17 >> 2] = i19;
     HEAP32[i17 + 4 >> 2] = i20;
     if ((i16 | 0) == 8) {
      i13 = 17;
      break;
     }
     i20 = _getc(HEAP32[i10 >> 2] | 0) | 0;
     if ((i20 | 0) == -1) {
      i13 = 17;
      break;
     }
     HEAP8[i21 >> 0] = i20;
     i16 = i16 + 1 | 0;
    }
    if ((i13 | 0) == 15) HEAP8[i5 >> 0] = HEAP8[i4 >> 0] | 0; else if ((i13 | 0) == 17) {
     i22 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break;
    }
    i23 = i16;
    i13 = 19;
   } else {
    HEAP8[i5 >> 0] = HEAP8[i4 >> 0] | 0;
    i23 = i8;
    i13 = 19;
   } while (0);
   L21 : do if ((i13 | 0) == 19) {
    L23 : do if (i2) {
     i8 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i5 >> 0] | 0) | 0;
     HEAP32[i1 + 48 >> 2] = i8;
    } else {
     i8 = i23;
     do {
      if ((i8 | 0) <= 0) break L23;
      i8 = i8 + -1 | 0;
      i7 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i4 + i8 >> 0] | 0) | 0;
     } while ((_ungetc(i7, HEAP32[i10 >> 2] | 0) | 0) != -1);
     i22 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break L21;
    } while (0);
    i22 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i5 >> 0] | 0) | 0;
   } while (0);
   i14 = i22;
  }
  i12 = i14;
 }
 STACKTOP = i3;
 return i12 | 0;
}

function __ZNSt3__210__stdinbufIwE9__getcharEb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 16 | 0;
 i5 = i3 + 8 | 0;
 i6 = i3 + 4 | 0;
 i7 = i3;
 i8 = i1 + 52 | 0;
 if (HEAP8[i8 >> 0] | 0) {
  i9 = i1 + 48 | 0;
  i10 = HEAP32[i9 >> 2] | 0;
  if (i2) {
   i11 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   HEAP32[i9 >> 2] = i11;
   HEAP8[i8 >> 0] = 0;
   i12 = i10;
  } else i12 = i10;
 } else {
  i10 = HEAP32[i1 + 44 >> 2] | 0;
  i8 = (i10 | 0) > 1 ? i10 : 1;
  i10 = i1 + 32 | 0;
  i11 = 0;
  while (1) {
   if (i11 >>> 0 >= i8 >>> 0) {
    i13 = 9;
    break;
   }
   i9 = _getc(HEAP32[i10 >> 2] | 0) | 0;
   if ((i9 | 0) == -1) {
    i13 = 8;
    break;
   }
   HEAP8[i4 + i11 >> 0] = i9;
   i11 = i11 + 1 | 0;
  }
  if ((i13 | 0) == 8) i14 = __ZNSt3__211char_traitsIwE3eofEv() | 0; else if ((i13 | 0) == 9) {
   do if (!(HEAP8[i1 + 53 >> 0] | 0)) {
    i11 = i1 + 40 | 0;
    i9 = i1 + 36 | 0;
    i15 = i5 + 4 | 0;
    i16 = i8;
    L11 : while (1) {
     i17 = HEAP32[i11 >> 2] | 0;
     i18 = i17;
     i19 = HEAP32[i18 >> 2] | 0;
     i20 = HEAP32[i18 + 4 >> 2] | 0;
     i18 = HEAP32[i9 >> 2] | 0;
     i21 = i4 + i16 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i4, i21, i6, i5, i15, i7) | 0) {
     case 3:
      {
       i13 = 15;
       break L11;
       break;
      }
     case 2:
      {
       i13 = 17;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i17 = HEAP32[i11 >> 2] | 0;
     HEAP32[i17 >> 2] = i19;
     HEAP32[i17 + 4 >> 2] = i20;
     if ((i16 | 0) == 8) {
      i13 = 17;
      break;
     }
     i20 = _getc(HEAP32[i10 >> 2] | 0) | 0;
     if ((i20 | 0) == -1) {
      i13 = 17;
      break;
     }
     HEAP8[i21 >> 0] = i20;
     i16 = i16 + 1 | 0;
    }
    if ((i13 | 0) == 15) HEAP32[i5 >> 2] = HEAP8[i4 >> 0]; else if ((i13 | 0) == 17) {
     i22 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break;
    }
    i23 = i16;
    i13 = 19;
   } else {
    HEAP32[i5 >> 2] = HEAP8[i4 >> 0];
    i23 = i8;
    i13 = 19;
   } while (0);
   L21 : do if ((i13 | 0) == 19) {
    L23 : do if (i2) {
     i8 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i5 >> 2] | 0) | 0;
     HEAP32[i1 + 48 >> 2] = i8;
    } else {
     i8 = i23;
     do {
      if ((i8 | 0) <= 0) break L23;
      i8 = i8 + -1 | 0;
      i7 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP8[i4 + i8 >> 0] | 0) | 0;
     } while ((_ungetc(i7, HEAP32[i10 >> 2] | 0) | 0) != -1);
     i22 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break L21;
    } while (0);
    i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i5 >> 2] | 0) | 0;
   } while (0);
   i14 = i22;
  }
  i12 = i14;
 }
 STACKTOP = i3;
 return i12 | 0;
}

function __ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i7 = i2 + 168 | 0;
 i8 = i2;
 i9 = i2 + 164 | 0;
 i10 = i2 + 160 | 0;
 i11 = i2 + 128 | 0;
 i12 = i2 + 152 | 0;
 i13 = i2 + 144 | 0;
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 i14 = 0;
 while (1) {
  if ((i14 | 0) == 3) break;
  HEAP32[i11 + (i14 << 2) >> 2] = 0;
  i14 = i14 + 1 | 0;
 }
 HEAP32[i12 + 4 >> 2] = 0;
 HEAP32[i12 >> 2] = 16672;
 i14 = HEAP8[i6 + 8 + 3 >> 0] | 0;
 i15 = i14 << 24 >> 24 < 0;
 i16 = i15 ? HEAP32[i6 >> 2] | 0 : i6;
 i17 = i16 + ((i15 ? HEAP32[i6 + 4 >> 2] | 0 : i14 & 255) << 2) | 0;
 i14 = i8 + 32 | 0;
 i6 = i16;
 i16 = 0;
 while (1) {
  if (!((i16 | 0) != 2 & i6 >>> 0 < i17 >>> 0)) break;
  HEAP32[i10 >> 2] = i6;
  i15 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 15](i12, i7, i6, i17, i10, i8, i14, i9) | 0;
  if ((i15 | 0) == 2 ? 1 : (HEAP32[i10 >> 2] | 0) == (i6 | 0)) {
   i18 = 8;
   break;
  }
  i19 = i8;
  while (1) {
   if (i19 >>> 0 >= (HEAP32[i9 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i11, HEAP8[i19 >> 0] | 0);
   i19 = i19 + 1 | 0;
  }
  i6 = HEAP32[i10 >> 2] | 0;
  i16 = i15;
 }
 if ((i18 | 0) == 8) __ZNSt3__221__throw_runtime_errorEPKc(0);
 __ZNSt3__26locale5facetD2Ev(i12);
 i12 = (HEAP8[i11 + 11 >> 0] | 0) < 0 ? HEAP32[i11 >> 2] | 0 : i11;
 i16 = _catgets((i3 | 0) == -1 ? -1 : i3 << 1, i4, i5, i12) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i5 = 0;
 while (1) {
  if ((i5 | 0) == 3) break;
  HEAP32[i1 + (i5 << 2) >> 2] = 0;
  i5 = i5 + 1 | 0;
 }
 HEAP32[i13 + 4 >> 2] = 0;
 HEAP32[i13 >> 2] = 16720;
 i5 = i12 + (_strlen(i16) | 0) | 0;
 i16 = i5;
 i4 = i8 + 128 | 0;
 i3 = i12;
 i12 = 0;
 while (1) {
  if (!((i12 | 0) != 2 & i3 >>> 0 < i5 >>> 0)) {
   i18 = 23;
   break;
  }
  HEAP32[i10 >> 2] = i3;
  i6 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 16 >> 2] & 15](i13, i7, i3, (i16 - i3 | 0) > 32 ? i3 + 32 | 0 : i5, i10, i8, i4, i9) | 0;
  if ((i6 | 0) == 2 ? 1 : (HEAP32[i10 >> 2] | 0) == (i3 | 0)) {
   i18 = 19;
   break;
  }
  i14 = i8;
  while (1) {
   if (i14 >>> 0 >= (HEAP32[i9 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i1, HEAP32[i14 >> 2] | 0);
   i14 = i14 + 4 | 0;
  }
  i3 = HEAP32[i10 >> 2] | 0;
  i12 = i6;
 }
 if ((i18 | 0) == 19) __ZNSt3__221__throw_runtime_errorEPKc(0); else if ((i18 | 0) == 23) {
  __ZNSt3__26locale5facetD2Ev(i13);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  STACKTOP = i2;
  return;
 }
}

function _arGetMarkerInfo(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, d11, i12, i13, i14) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 d11 = +d11;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 var i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i16 = i15 + 4 | 0;
 i17 = i15;
 if ((i6 | 0) <= 0) {
  i18 = 0;
  HEAP32[i13 >> 2] = i18;
  STACKTOP = i15;
  return 0;
 }
 i19 = i9 >>> 0 < 2;
 i20 = (i9 | 0) == 2;
 i21 = 0;
 i22 = 0;
 while (1) {
  HEAP32[i12 + (i21 << 8) >> 2] = HEAP32[i5 + (i22 * 80048 | 0) >> 2];
  if ((_arParamObserv2IdealLTf(i10, +HEAPF64[i5 + (i22 * 80048 | 0) + 8 >> 3], +HEAPF64[i5 + (i22 * 80048 | 0) + 16 >> 3], i16, i17) | 0) >= 0 ? (HEAPF64[i12 + (i21 << 8) + 56 >> 3] = +HEAPF32[i16 >> 2], HEAPF64[i12 + (i21 << 8) + 64 >> 3] = +HEAPF32[i17 >> 2], i23 = i12 + (i21 << 8) + 168 | 0, (_arGetLine(i5 + (i22 * 80048 | 0) + 28 | 0, i5 + (i22 * 80048 | 0) + 40028 | 0, HEAP32[i5 + (i22 * 80048 | 0) + 24 >> 2] | 0, i5 + (i22 * 80048 | 0) + 80028 | 0, i10, i12 + (i21 << 8) + 72 | 0, i23) | 0) >= 0) : 0) {
   i24 = i12 + (i21 << 8) + 8 | 0;
   i25 = i12 + (i21 << 8) + 20 | 0;
   i26 = i12 + (i21 << 8) + 40 | 0;
   i27 = i12 + (i21 << 8) + 12 | 0;
   i28 = i12 + (i21 << 8) + 24 | 0;
   i29 = i12 + (i21 << 8) + 48 | 0;
   i30 = _arPattGetIDGlobal(i7, i8, i9, i1, i2, i3, i4, i10, i23, d11, i24, i25, i26, i27, i28, i29, i14, i12 + (i21 << 8) + 240 | 0, i12 + (i21 << 8) + 248 | 0) | 0;
   switch (i30 | 0) {
   case 0:
    {
     i31 = i30;
     i32 = 12;
     break;
    }
   case -1:
    {
     i31 = 2;
     i32 = 12;
     break;
    }
   case -2:
    {
     i31 = 3;
     i32 = 12;
     break;
    }
   case -3:
    {
     i31 = 4;
     i32 = 12;
     break;
    }
   case -4:
    {
     i31 = 5;
     i32 = 12;
     break;
    }
   case -5:
    {
     i31 = 9;
     i32 = 12;
     break;
    }
   case -6:
    {
     i31 = 1;
     i32 = 12;
     break;
    }
   default:
    {}
   }
   if ((i32 | 0) == 12) {
    i32 = 0;
    HEAP32[i12 + (i21 << 8) + 236 >> 2] = i31;
   }
   if (!i19) {
    if (i20) {
     HEAP32[i12 + (i21 << 8) + 4 >> 2] = HEAP32[i27 >> 2];
     i33 = i29;
     i34 = i28;
     i32 = 17;
    }
   } else {
    HEAP32[i12 + (i21 << 8) + 4 >> 2] = HEAP32[i24 >> 2];
    i33 = i26;
    i34 = i25;
    i32 = 17;
   }
   if ((i32 | 0) == 17) {
    i32 = 0;
    HEAP32[i12 + (i21 << 8) + 16 >> 2] = HEAP32[i34 >> 2];
    HEAPF64[i12 + (i21 << 8) + 32 >> 3] = +HEAPF64[i33 >> 3];
   }
   i35 = i21 + 1 | 0;
  } else i35 = i21;
  i22 = i22 + 1 | 0;
  if ((i22 | 0) == (i6 | 0)) {
   i18 = i35;
   break;
  } else i21 = i35;
 }
 HEAP32[i13 >> 2] = i18;
 STACKTOP = i15;
 return 0;
}

function _scanexp(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 104 | 0;
 if (i4 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
  HEAP32[i3 >> 2] = i4 + 1;
  i6 = HEAPU8[i4 >> 0] | 0;
 } else i6 = ___shgetc(i1) | 0;
 switch (i6 | 0) {
 case 43:
 case 45:
  {
   i4 = (i6 | 0) == 45 & 1;
   i7 = HEAP32[i3 >> 2] | 0;
   if (i7 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
    HEAP32[i3 >> 2] = i7 + 1;
    i8 = HEAPU8[i7 >> 0] | 0;
   } else i8 = ___shgetc(i1) | 0;
   i7 = i8 + -48 | 0;
   if ((i2 | 0) != 0 & i7 >>> 0 > 9) if (!(HEAP32[i5 >> 2] | 0)) {
    i9 = 0;
    i10 = -2147483648;
   } else {
    HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + -1;
    i11 = 14;
   } else {
    i12 = i4;
    i13 = i8;
    i14 = i7;
    i11 = 12;
   }
   break;
  }
 default:
  {
   i12 = 0;
   i13 = i6;
   i14 = i6 + -48 | 0;
   i11 = 12;
  }
 }
 if ((i11 | 0) == 12) if (i14 >>> 0 > 9) i11 = 14; else {
  i14 = 0;
  i6 = i13;
  while (1) {
   i14 = i6 + -48 + (i14 * 10 | 0) | 0;
   i13 = HEAP32[i3 >> 2] | 0;
   if (i13 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
    HEAP32[i3 >> 2] = i13 + 1;
    i15 = HEAPU8[i13 >> 0] | 0;
   } else i15 = ___shgetc(i1) | 0;
   i16 = i15 + -48 | 0;
   if (!(i16 >>> 0 < 10 & (i14 | 0) < 214748364)) break; else i6 = i15;
  }
  i6 = ((i14 | 0) < 0) << 31 >> 31;
  if (i16 >>> 0 < 10) {
   i16 = i15;
   i15 = i14;
   i13 = i6;
   while (1) {
    i7 = ___muldi3(i15 | 0, i13 | 0, 10, 0) | 0;
    i8 = getTempRet0() | 0;
    i4 = _i64Add(i16 | 0, ((i16 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    i15 = _i64Add(i4 | 0, getTempRet0() | 0, i7 | 0, i8 | 0) | 0;
    i13 = getTempRet0() | 0;
    i8 = HEAP32[i3 >> 2] | 0;
    if (i8 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
     HEAP32[i3 >> 2] = i8 + 1;
     i17 = HEAPU8[i8 >> 0] | 0;
    } else i17 = ___shgetc(i1) | 0;
    i18 = i17 + -48 | 0;
    if (!(i18 >>> 0 < 10 & ((i13 | 0) < 21474836 | (i13 | 0) == 21474836 & i15 >>> 0 < 2061584302))) break; else i16 = i17;
   }
   if (i18 >>> 0 < 10) {
    do {
     i18 = HEAP32[i3 >> 2] | 0;
     if (i18 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
      HEAP32[i3 >> 2] = i18 + 1;
      i19 = HEAPU8[i18 >> 0] | 0;
     } else i19 = ___shgetc(i1) | 0;
    } while ((i19 + -48 | 0) >>> 0 < 10);
    i20 = i15;
    i21 = i13;
   } else {
    i20 = i15;
    i21 = i13;
   }
  } else {
   i20 = i14;
   i21 = i6;
  }
  if (HEAP32[i5 >> 2] | 0) HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + -1;
  i6 = (i12 | 0) == 0;
  i12 = _i64Subtract(0, 0, i20 | 0, i21 | 0) | 0;
  i14 = getTempRet0() | 0;
  i9 = i6 ? i20 : i12;
  i10 = i6 ? i21 : i14;
 }
 if ((i11 | 0) == 14) if (!(HEAP32[i5 >> 2] | 0)) {
  i9 = 0;
  i10 = -2147483648;
 } else {
  HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + -1;
  i9 = 0;
  i10 = -2147483648;
 }
 setTempRet0(i10 | 0);
 return i9 | 0;
}

function __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, d26 = 0.0, d27 = 0.0, d28 = 0.0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i10 = i9 + 8 | 0;
 i11 = i9 + 4 | 0;
 i12 = i9;
 i13 = i4 + 4 | 0;
 i14 = HEAP32[i4 >> 2] | 0;
 i15 = (HEAP32[i13 >> 2] | 0) - i14 | 0;
 i16 = i15 >> 3;
 i17 = i15 >> 1;
 HEAP32[i10 >> 2] = 0;
 i18 = i10 + 4 | 0;
 HEAP32[i18 >> 2] = 0;
 i19 = i10 + 8 | 0;
 HEAP32[i19 >> 2] = 0;
 i20 = i14;
 if (!i15) {
  i21 = 0;
  i22 = 0;
 } else {
  if (i17 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i10);
  i14 = i15 << 1;
  i23 = __Znwm(i14) | 0;
  HEAP32[i10 >> 2] = i23;
  i24 = i23 + (i17 << 2) | 0;
  HEAP32[i19 >> 2] = i24;
  _memset(i23 | 0, 0, i14 | 0) | 0;
  HEAP32[i18 >> 2] = i24;
  i24 = i15 << 1;
  i15 = __Znwm(i24) | 0;
  _memset(i15 | 0, 0, i24 | 0) | 0;
  i24 = HEAP32[i2 >> 2] | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  i3 = 0;
  do {
   i14 = HEAP32[i20 + (i3 << 3) >> 2] | 0;
   i19 = HEAP32[i20 + (i3 << 3) + 4 >> 2] | 0;
   i17 = i3 << 2;
   i25 = i23 + (i17 << 2) | 0;
   HEAP32[i25 >> 2] = HEAP32[i24 + (i14 * 20 | 0) >> 2];
   HEAP32[i25 + 4 >> 2] = HEAP32[i24 + (i14 * 20 | 0) + 4 >> 2];
   HEAP32[i25 + 8 >> 2] = HEAP32[i24 + (i14 * 20 | 0) + 8 >> 2];
   HEAP32[i25 + 12 >> 2] = HEAP32[i24 + (i14 * 20 | 0) + 12 >> 2];
   i14 = i15 + (i17 << 2) | 0;
   HEAP32[i14 >> 2] = HEAP32[i2 + (i19 * 20 | 0) >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i2 + (i19 * 20 | 0) + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i2 + (i19 * 20 | 0) + 8 >> 2];
   HEAP32[i14 + 12 >> 2] = HEAP32[i2 + (i19 * 20 | 0) + 12 >> 2];
   i3 = i3 + 1 | 0;
  } while (i3 >>> 0 < i16 >>> 0);
  i21 = i15;
  i22 = i15;
 }
 d26 = +(i5 | 0);
 d27 = d26 * .20000000298023224 + d26;
 d26 = +(i6 | 0);
 d28 = d26 * .20000000298023224 + d26;
 __ZN6vision21HoughSimilarityVoting4initEffffiiii(i1, -d27, d27, -d28, d28, 0, 0, 12, 10);
 HEAPF32[i1 + 8 >> 2] = +(i7 >> 1 | 0);
 HEAPF32[i1 + 12 >> 2] = +(i8 >> 1 | 0);
 HEAP32[i1 >> 2] = i7;
 HEAP32[i1 + 4 >> 2] = i8;
 __ZN6vision21HoughSimilarityVoting4voteEPKfS2_i(i1, HEAP32[i10 >> 2] | 0, i21, (HEAP32[i13 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) >> 3);
 __ZNK6vision21HoughSimilarityVoting23getMaximumNumberOfVotesERfRi(i1, i11, i12);
 i1 = +HEAPF32[i11 >> 2] < 3.0 ? -1 : HEAP32[i12 >> 2] | 0;
 if (i21 | 0) __ZdlPv(i22);
 i22 = HEAP32[i10 >> 2] | 0;
 if (!i22) {
  STACKTOP = i9;
  return i1 | 0;
 }
 HEAP32[i18 >> 2] = i22;
 __ZdlPv(i22);
 STACKTOP = i9;
 return i1 | 0;
}

function __Z21kpmUtilGetPose_binaryP9ARParamLTRKNSt3__26vectorIN6vision7match_tENS1_9allocatorIS4_EEEERKNS2_INS3_7Point3dIfEENS5_ISB_EEEERKNS2_INS3_12FeaturePointENS5_ISG_EEEEPA4_fPf(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, d21 = 0.0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i8 = i7 + 224 | 0;
 i9 = i7 + 212 | 0;
 i10 = i7 + 96 | 0;
 i11 = i7 + 192 | 0;
 i12 = i7;
 i13 = HEAP32[i2 >> 2] | 0;
 i14 = (HEAP32[i2 + 4 >> 2] | 0) - i13 | 0;
 i2 = i14 >> 3;
 i15 = i13;
 if (i2 >>> 0 < 4) {
  i16 = -1;
  STACKTOP = i7;
  return i16 | 0;
 }
 i13 = _malloc(i14 << 1) | 0;
 if (!i13) {
  _arLog(0, 3, 20510, i7 + 200 | 0);
  _exit(1);
 }
 i17 = _malloc(i2 * 24 | 0) | 0;
 if (!i17) {
  _arLog(0, 3, 20510, i7 + 208 | 0);
  _exit(1);
 }
 if (!i14) i18 = 0; else {
  i14 = HEAP32[i4 >> 2] | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  i3 = 0;
  do {
   i19 = HEAP32[i15 + (i3 << 3) >> 2] | 0;
   HEAPF64[i13 + (i3 << 4) >> 3] = +HEAPF32[i14 + (i19 * 20 | 0) >> 2];
   HEAPF64[i13 + (i3 << 4) + 8 >> 3] = +HEAPF32[i14 + (i19 * 20 | 0) + 4 >> 2];
   i19 = HEAP32[i15 + (i3 << 3) + 4 >> 2] | 0;
   HEAPF64[i17 + (i3 * 24 | 0) >> 3] = +HEAPF32[i4 + (i19 * 12 | 0) >> 2];
   HEAPF64[i17 + (i3 * 24 | 0) + 8 >> 3] = +HEAPF32[i4 + (i19 * 12 | 0) + 4 >> 2];
   HEAPF64[i17 + (i3 * 24 | 0) + 16 >> 3] = 0.0;
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i2 | 0));
  i18 = i2;
 }
 HEAP32[i9 + 8 >> 2] = i18;
 HEAP32[i9 >> 2] = i13;
 HEAP32[i9 + 4 >> 2] = i17;
 i18 = i1 + 8 | 0;
 if ((_icpGetInitXw2Xc_from_PlanarData(i18, i13, i17, i2, i10) | 0) < 0) {
  _free(i13);
  _free(i17);
  i16 = -1;
  STACKTOP = i7;
  return i16 | 0;
 }
 i2 = _icpCreateHandle(i18) | 0;
 HEAP32[i8 >> 2] = i2;
 if (!i2) {
  _free(i13);
  _free(i17);
  i16 = -1;
  STACKTOP = i7;
  return i16 | 0;
 }
 if ((_icpPoint(i2, i9, i10, i12, i11) | 0) < 0) {
  _free(i13);
  _free(i17);
  _icpDeleteHandle(i8) | 0;
  i20 = -1;
 } else {
  HEAPF32[i5 >> 2] = +HEAPF64[i12 >> 3];
  HEAPF32[i5 + 4 >> 2] = +HEAPF64[i12 + 8 >> 3];
  HEAPF32[i5 + 8 >> 2] = +HEAPF64[i12 + 16 >> 3];
  HEAPF32[i5 + 12 >> 2] = +HEAPF64[i12 + 24 >> 3];
  HEAPF32[i5 + 16 >> 2] = +HEAPF64[i12 + 32 >> 3];
  HEAPF32[i5 + 20 >> 2] = +HEAPF64[i12 + 40 >> 3];
  HEAPF32[i5 + 24 >> 2] = +HEAPF64[i12 + 48 >> 3];
  HEAPF32[i5 + 28 >> 2] = +HEAPF64[i12 + 56 >> 3];
  HEAPF32[i5 + 32 >> 2] = +HEAPF64[i12 + 64 >> 3];
  HEAPF32[i5 + 36 >> 2] = +HEAPF64[i12 + 72 >> 3];
  HEAPF32[i5 + 40 >> 2] = +HEAPF64[i12 + 80 >> 3];
  HEAPF32[i5 + 44 >> 2] = +HEAPF64[i12 + 88 >> 3];
  _icpDeleteHandle(i8) | 0;
  _free(i13);
  _free(i17);
  d21 = +HEAPF64[i11 >> 3];
  HEAPF32[i6 >> 2] = d21;
  i20 = (d21 > 10.0) << 31 >> 31;
 }
 i16 = i20;
 STACKTOP = i7;
 return i16 | 0;
}

function __ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 L1 : do if (i1 << 24 >> 24 == i6 << 24 >> 24) if (HEAP8[i2 >> 0] | 0) {
  HEAP8[i2 >> 0] = 0;
  i13 = HEAP32[i5 >> 2] | 0;
  HEAP32[i5 >> 2] = i13 + 1;
  HEAP8[i13 >> 0] = 46;
  i13 = HEAP8[i8 + 11 >> 0] | 0;
  if (((i13 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i13 & 255) | 0) != 0 ? (i13 = HEAP32[i10 >> 2] | 0, (i13 - i9 | 0) < 160) : 0) {
   i14 = HEAP32[i11 >> 2] | 0;
   HEAP32[i10 >> 2] = i13 + 4;
   HEAP32[i13 >> 2] = i14;
   i15 = 0;
  } else i15 = 0;
 } else i15 = -1; else {
  if (i1 << 24 >> 24 == i7 << 24 >> 24 ? (i14 = HEAP8[i8 + 11 >> 0] | 0, (i14 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i14 & 255) | 0) : 0) {
   if (!(HEAP8[i2 >> 0] | 0)) {
    i15 = -1;
    break;
   }
   i14 = HEAP32[i10 >> 2] | 0;
   if ((i14 - i9 | 0) >= 160) {
    i15 = 0;
    break;
   }
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i10 >> 2] = i14 + 4;
   HEAP32[i14 >> 2] = i13;
   HEAP32[i11 >> 2] = 0;
   i15 = 0;
   break;
  }
  i13 = i12 + 32 | 0;
  i14 = 0;
  while (1) {
   i16 = i12 + i14 | 0;
   if ((i14 | 0) == 32) {
    i17 = i13;
    break;
   }
   if ((HEAP8[i16 >> 0] | 0) == i1 << 24 >> 24) {
    i17 = i16;
    break;
   } else i14 = i14 + 1 | 0;
  }
  i14 = i17 - i12 | 0;
  if ((i14 | 0) > 31) i15 = -1; else {
   i13 = HEAP8[10736 + i14 >> 0] | 0;
   switch (i14 | 0) {
   case 24:
   case 25:
    {
     i16 = HEAP32[i5 >> 2] | 0;
     if ((i16 | 0) != (i4 | 0) ? (HEAP8[i16 + -1 >> 0] & 95) != (HEAP8[i3 >> 0] & 127) : 0) {
      i15 = -1;
      break L1;
     }
     HEAP32[i5 >> 2] = i16 + 1;
     HEAP8[i16 >> 0] = i13;
     i15 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[i3 >> 0] = 80;
     i16 = HEAP32[i5 >> 2] | 0;
     HEAP32[i5 >> 2] = i16 + 1;
     HEAP8[i16 >> 0] = i13;
     i15 = 0;
     break L1;
     break;
    }
   default:
    {
     i16 = i13 & 95;
     if ((((i16 | 0) == (HEAP8[i3 >> 0] | 0) ? (HEAP8[i3 >> 0] = i16 | 128, HEAP8[i2 >> 0] | 0) : 0) ? (HEAP8[i2 >> 0] = 0, i16 = HEAP8[i8 + 11 >> 0] | 0, (i16 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i16 & 255) | 0) : 0) ? (i16 = HEAP32[i10 >> 2] | 0, (i16 - i9 | 0) < 160) : 0) {
      i18 = HEAP32[i11 >> 2] | 0;
      HEAP32[i10 >> 2] = i16 + 4;
      HEAP32[i16 >> 2] = i18;
     }
     i18 = HEAP32[i5 >> 2] | 0;
     HEAP32[i5 >> 2] = i18 + 1;
     HEAP8[i18 >> 0] = i13;
     if ((i14 | 0) > 21) {
      i15 = 0;
      break L1;
     }
     HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
     i15 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return i15 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i6 = i5 + 48 | 0;
 i7 = i5 + 36 | 0;
 i8 = i5 + 24 | 0;
 i9 = i5 + 12 | 0;
 i10 = i5;
 i11 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i4) | 0;
 if ((i11 | 0) != (i1 | 0) ? (i2 = i4 + 4 | 0, (HEAP32[i4 >> 2] | 0) != (HEAP32[i2 >> 2] | 0)) : 0) {
  __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i9, i3, 50245);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i10, (HEAP32[i2 >> 2] | 0) + -24 | 0);
  i3 = HEAP8[i10 + 11 >> 0] | 0;
  i4 = i3 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i9, i4 ? HEAP32[i10 >> 2] | 0 : i10, i4 ? HEAP32[i10 + 4 >> 2] | 0 : i3 & 255) | 0;
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i3 = 0;
  while (1) {
   if ((i3 | 0) == 3) break;
   HEAP32[i9 + (i3 << 2) >> 2] = 0;
   i3 = i3 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 50243) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i3 = 0;
  while (1) {
   if ((i3 | 0) == 3) break;
   HEAP32[i8 + (i3 << 2) >> 2] = 0;
   i3 = i3 + 1 | 0;
  }
  i3 = HEAP32[i2 >> 2] | 0;
  i2 = i3 + -24 | 0;
  i4 = i2 + 11 | 0;
  if ((HEAP8[i4 >> 0] | 0) < 0) {
   i12 = HEAP32[i2 >> 2] | 0;
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i12, i6);
   HEAP32[i3 + -20 >> 2] = 0;
  } else {
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i6);
   HEAP8[i4 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
  HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i7 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
  i13 = i11;
 } else i13 = i1;
 STACKTOP = i5;
 return i13 | 0;
}

function _trackingInitMain(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, d23 = 0.0, i24 = 0, i25 = 0, d26 = 0.0, i27 = 0, i28 = 0, d29 = 0.0, i30 = 0, d31 = 0.0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i3 = i2 + 24 | 0;
 i4 = i2 + 32 | 0;
 i5 = i2 + 28 | 0;
 HEAP32[i4 >> 2] = 0;
 if (!i1) {
  _arLog(0, 3, 38355, i2);
  STACKTOP = i2;
  return 0;
 }
 i6 = _threadGetArg(i1) | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = HEAP32[i6 + 4 >> 2] | 0;
 if (!((i7 | 0) != 0 & (i8 | 0) != 0)) {
  _arLog(0, 3, 38411, i2 + 8 | 0);
  STACKTOP = i2;
  return 0;
 }
 _arLog(0, 1, 38474, i2 + 16 | 0);
 _kpmGetResult(i7, i4, i5) | 0;
 if ((_threadStartWait(i1) | 0) >= 0) {
  i9 = i6 + 64 | 0;
  i10 = i6 + 60 | 0;
  i11 = i6 + 12 | 0;
  i12 = i6 + 16 | 0;
  i13 = i6 + 20 | 0;
  i14 = i6 + 24 | 0;
  i15 = i6 + 28 | 0;
  i16 = i6 + 32 | 0;
  i17 = i6 + 36 | 0;
  i18 = i6 + 40 | 0;
  i19 = i6 + 44 | 0;
  i20 = i6 + 48 | 0;
  i21 = i6 + 52 | 0;
  i22 = i6 + 56 | 0;
  d23 = 0.0;
  while (1) {
   _kpmMatching(i7, i8) | 0;
   HEAP32[i9 >> 2] = 0;
   i6 = HEAP32[i5 >> 2] | 0;
   if ((i6 | 0) > 0) {
    i24 = HEAP32[i4 >> 2] | 0;
    i25 = 0;
    d26 = d23;
    i27 = 0;
    while (1) {
     do if (!(HEAP32[i24 + (i25 * 68 | 0) + 60 >> 2] | 0)) {
      i28 = i24 + (i25 * 68 | 0) + 52 | 0;
      if (i27 | 0 ? !(d26 > +HEAPF32[i28 >> 2]) : 0) {
       d29 = d26;
       i30 = i27;
       break;
      }
      HEAP32[i9 >> 2] = 1;
      HEAP32[i10 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 48 >> 2];
      HEAP32[i11 >> 2] = HEAP32[i24 + (i25 * 68 | 0) >> 2];
      HEAP32[i12 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 4 >> 2];
      HEAP32[i13 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 8 >> 2];
      HEAP32[i14 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 12 >> 2];
      HEAP32[i15 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 16 >> 2];
      HEAP32[i16 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 20 >> 2];
      HEAP32[i17 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 24 >> 2];
      HEAP32[i18 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 28 >> 2];
      HEAP32[i19 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 32 >> 2];
      HEAP32[i20 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 36 >> 2];
      HEAP32[i21 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 40 >> 2];
      HEAP32[i22 >> 2] = HEAP32[i24 + (i25 * 68 | 0) + 44 >> 2];
      d29 = +HEAPF32[i28 >> 2];
      i30 = 1;
     } else {
      d29 = d26;
      i30 = i27;
     } while (0);
     i25 = i25 + 1 | 0;
     if ((i25 | 0) >= (i6 | 0)) {
      d31 = d29;
      break;
     } else {
      d26 = d29;
      i27 = i30;
     }
    }
   } else d31 = d23;
   _threadEndSignal(i1) | 0;
   if ((_threadStartWait(i1) | 0) < 0) break; else d23 = d31;
  }
 }
 _arLog(0, 1, 38498, i3);
 STACKTOP = i2;
 return 0;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE11addKeyframeENSt3__210shared_ptrINS_8KeyframeILi96EEEEEi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i4 + 4 | 0;
 HEAP32[i5 >> 2] = i3;
 i7 = i1 + 72 | 0;
 i8 = HEAP32[i1 + 76 >> 2] | 0;
 L1 : do if (i8 | 0) {
  i1 = i8 + -1 | 0;
  i9 = (i1 & i8 | 0) == 0;
  if (!i9) if (i8 >>> 0 > i3 >>> 0) i10 = i3; else i10 = (i3 >>> 0) % (i8 >>> 0) | 0; else i10 = i1 & i3;
  i11 = HEAP32[(HEAP32[i7 >> 2] | 0) + (i10 << 2) >> 2] | 0;
  if (i11 | 0 ? (i12 = HEAP32[i11 >> 2] | 0, i12 | 0) : 0) {
   L10 : do if (i9) {
    i11 = i12;
    while (1) {
     i13 = HEAP32[i11 + 4 >> 2] | 0;
     i14 = (i13 | 0) == (i3 | 0);
     if (!(i14 | (i13 & i1 | 0) == (i10 | 0))) break L1;
     if (i14 ? (HEAP32[i11 + 8 >> 2] | 0) == (i3 | 0) : 0) break L10;
     i11 = HEAP32[i11 >> 2] | 0;
     if (!i11) break L1;
    }
   } else {
    i11 = i12;
    while (1) {
     i14 = HEAP32[i11 + 4 >> 2] | 0;
     if ((i14 | 0) == (i3 | 0)) {
      if ((HEAP32[i11 + 8 >> 2] | 0) == (i3 | 0)) break L10;
     } else {
      if (i14 >>> 0 < i8 >>> 0) i15 = i14; else i15 = (i14 >>> 0) % (i8 >>> 0) | 0;
      if ((i15 | 0) != (i10 | 0)) break L1;
     }
     i11 = HEAP32[i11 >> 2] | 0;
     if (!i11) break L1;
    }
   } while (0);
   i12 = ___cxa_allocate_exception(16) | 0;
   HEAP32[i6 >> 2] = 0;
   HEAP32[i6 + 4 >> 2] = 0;
   HEAP32[i6 + 8 >> 2] = 0;
   i1 = __Znwm(32) | 0;
   HEAP32[i6 >> 2] = i1;
   HEAP32[i6 + 8 >> 2] = -2147483616;
   HEAP32[i6 + 4 >> 2] = 17;
   i9 = i1;
   i11 = 27144;
   i14 = i9 + 17 | 0;
   do {
    HEAP8[i9 >> 0] = HEAP8[i11 >> 0] | 0;
    i9 = i9 + 1 | 0;
    i11 = i11 + 1 | 0;
   } while ((i9 | 0) < (i14 | 0));
   HEAP8[i1 + 17 >> 0] = 0;
   HEAP32[i12 >> 2] = 13516;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i12 + 4 | 0, i6);
   ___cxa_throw(i12 | 0, 11016, 5);
  }
 } while (0);
 i6 = __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEEixERSC_(i7, i5) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 if (i7 | 0) {
  i2 = i7 + 4 | 0;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 }
 HEAP32[i6 >> 2] = i5;
 i5 = i6 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i7;
 if (!i6) {
  STACKTOP = i4;
  return;
 }
 i7 = i6 + 4 | 0;
 i5 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = i5 + -1;
 if (i5 | 0) {
  STACKTOP = i4;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 255](i6);
 __ZNSt3__219__shared_weak_count14__release_weakEv(i6);
 STACKTOP = i4;
 return;
}

function _arImageProcLumaHistAndBoxFilterWithBias(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  i5 = -1;
  return i5 | 0;
 }
 _memset(i1 + 12 | 0, 0, 1024) | 0;
 i6 = i1 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = i1 + 8 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = Math_imul(i9, i7) | 0;
 if ((i10 | 0) > 0) {
  i11 = i2 + i10 | 0;
  i12 = i2;
  do {
   i13 = i1 + 12 + ((HEAPU8[i12 >> 0] | 0) << 2) | 0;
   HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 1;
   i12 = i12 + 1 | 0;
  } while (i12 >>> 0 < i11 >>> 0);
 }
 if ((HEAP32[i1 >> 2] | 0) == 0 ? (i11 = _malloc(i10) | 0, HEAP32[i1 >> 2] = i11, (i11 | 0) == 0) : 0) {
  i5 = -1;
  return i5 | 0;
 }
 i11 = i3 >> 1;
 if ((i9 | 0) > 0) {
  i3 = 0 - i11 | 0;
  i10 = (i11 | 0) < (i3 | 0);
  i12 = 0;
  i13 = i7;
  i14 = i9;
  while (1) {
   if ((i13 | 0) < 1 | i10) {
    i15 = i14;
    i16 = i13;
   } else {
    i17 = 0;
    i18 = i13;
    do {
     i19 = i3;
     i20 = 0;
     i21 = 0;
     while (1) {
      i22 = i19 + i12 | 0;
      if ((i22 | 0) >= 0 ? (i22 | 0) < (HEAP32[i8 >> 2] | 0) : 0) {
       i23 = Math_imul(i22, i18) | 0;
       i22 = i3;
       i24 = i20;
       i25 = i21;
       while (1) {
        i26 = i22 + i17 | 0;
        if ((i26 | 0) > -1 & (i26 | 0) < (i18 | 0)) {
         i27 = i24 + 1 | 0;
         i28 = i25 + (HEAPU8[i2 + (i26 + i23) >> 0] | 0) | 0;
        } else {
         i27 = i24;
         i28 = i25;
        }
        if ((i22 | 0) < (i11 | 0)) {
         i22 = i22 + 1 | 0;
         i24 = i27;
         i25 = i28;
        } else {
         i29 = i27;
         i30 = i28;
         break;
        }
       }
      } else {
       i29 = i20;
       i30 = i21;
      }
      if ((i19 | 0) < (i11 | 0)) {
       i19 = i19 + 1 | 0;
       i20 = i29;
       i21 = i30;
      } else break;
     }
     i21 = (HEAP32[i1 >> 2] | 0) + ((Math_imul(i18, i12) | 0) + i17) | 0;
     HEAP8[i21 >> 0] = (i30 | 0) / (i29 | 0) | 0;
     i17 = i17 + 1 | 0;
     i18 = HEAP32[i6 >> 2] | 0;
    } while ((i17 | 0) < (i18 | 0));
    i15 = HEAP32[i8 >> 2] | 0;
    i16 = i18;
   }
   i12 = i12 + 1 | 0;
   if ((i12 | 0) >= (i15 | 0)) {
    i31 = i16;
    i32 = i15;
    break;
   } else {
    i13 = i16;
    i14 = i15;
   }
  }
 } else {
  i31 = i7;
  i32 = i9;
 }
 if (!((i4 | 0) != 0 & (Math_imul(i32, i31) | 0) > 0)) {
  i5 = 0;
  return i5 | 0;
 }
 i31 = 0;
 do {
  i32 = (HEAP32[i1 >> 2] | 0) + i31 | 0;
  HEAP8[i32 >> 0] = (HEAPU8[i32 >> 0] | 0) + i4;
  i31 = i31 + 1 | 0;
 } while ((i31 | 0) < (Math_imul(HEAP32[i8 >> 2] | 0, HEAP32[i6 >> 2] | 0) | 0));
 i5 = 0;
 return i5 | 0;
}

function __ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, d20 = 0.0, i21 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i9 = i8 + 32 | 0;
 i10 = i8;
 i11 = HEAP32[i4 >> 2] | 0;
 i12 = (HEAP32[i4 + 4 >> 2] | 0) - i11 | 0;
 i4 = i12 >> 3;
 HEAP32[i9 >> 2] = 0;
 i13 = i9 + 4 | 0;
 HEAP32[i13 >> 2] = 0;
 i14 = i9 + 8 | 0;
 HEAP32[i14 >> 2] = 0;
 i15 = i11;
 if (!i12) {
  i16 = 0;
  i17 = 0;
  i18 = 0;
 } else {
  if (i4 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i9);
  i11 = __Znwm(i12) | 0;
  HEAP32[i9 >> 2] = i11;
  i19 = i11 + (i4 << 3) | 0;
  HEAP32[i14 >> 2] = i19;
  _memset(i11 | 0, 0, i12 | 0) | 0;
  HEAP32[i13 >> 2] = i19;
  i19 = __Znwm(i12) | 0;
  _memset(i19 | 0, 0, i12 | 0) | 0;
  i12 = HEAP32[i2 >> 2] | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  i3 = 0;
  do {
   i14 = HEAP32[i15 + (i3 << 3) >> 2] | 0;
   HEAP32[i19 + (i3 << 3) >> 2] = HEAP32[i12 + (i14 * 20 | 0) >> 2];
   HEAP32[i19 + (i3 << 3) + 4 >> 2] = HEAP32[i12 + (i14 * 20 | 0) + 4 >> 2];
   i14 = HEAP32[i15 + (i3 << 3) + 4 >> 2] | 0;
   HEAP32[i11 + (i3 << 3) >> 2] = HEAP32[i2 + (i14 * 20 | 0) >> 2];
   HEAP32[i11 + (i3 << 3) + 4 >> 2] = HEAP32[i2 + (i14 * 20 | 0) + 4 >> 2];
   i3 = i3 + 1 | 0;
  } while (i3 >>> 0 < i4 >>> 0);
  i16 = i11;
  i17 = i19;
  i18 = i19;
 }
 HEAPF32[i10 >> 2] = 0.0;
 HEAPF32[i10 + 4 >> 2] = 0.0;
 d20 = +(i6 | 0);
 HEAPF32[i10 + 8 >> 2] = d20;
 HEAPF32[i10 + 12 >> 2] = 0.0;
 HEAPF32[i10 + 16 >> 2] = d20;
 d20 = +(i7 | 0);
 HEAPF32[i10 + 20 >> 2] = d20;
 HEAPF32[i10 + 24 >> 2] = 0.0;
 HEAPF32[i10 + 28 >> 2] = d20;
 i19 = i5 + 12 | 0;
 i11 = i5 + 16 | 0;
 i3 = HEAP32[i19 >> 2] | 0;
 i2 = (HEAP32[i11 >> 2] | 0) - i3 >> 2;
 if (i4 >>> 0 <= i2 >>> 0) {
  if (i4 >>> 0 < i2 >>> 0) HEAP32[i11 >> 2] = i3 + (i4 << 2);
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i19, i4 - i2 | 0);
 if (__ZN6vision26PreemptiveRobustHomographyIfEEbPT_PKS1_S4_iS4_iRNSt3__26vectorIS1_NS5_9allocatorIS1_EEEERNS6_IiNS7_IiEEEERNS6_INS5_4pairIS1_iEENS7_ISF_EEEES1_iii(i1, i16, i17, i4, i10, 4, i5, i19, i5 + 24 | 0, +HEAPF32[i5 + 36 >> 2], HEAP32[i5 + 40 >> 2] | 0, HEAP32[i5 + 44 >> 2] | 0, HEAP32[i5 + 48 >> 2] | 0) | 0) i21 = __ZN6vision25CheckHomographyHeuristicsEPfii(i1, i6, i7) | 0; else i21 = 0;
 if (i17 | 0) __ZdlPv(i18);
 i18 = HEAP32[i9 >> 2] | 0;
 if (!i18) {
  STACKTOP = i8;
  return i21 | 0;
 }
 HEAP32[i13 >> 2] = i18;
 __ZdlPv(i18);
 STACKTOP = i8;
 return i21 | 0;
}

function _start_pass_2_quant(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i3 = HEAP32[i1 + 460 >> 2] | 0;
 i4 = HEAP32[i3 + 24 >> 2] | 0;
 i5 = i1 + 88 | 0;
 if (!(HEAP32[i5 >> 2] | 0)) i6 = 0; else {
  HEAP32[i5 >> 2] = 2;
  i6 = 2;
 }
 if (!i2) {
  HEAP32[i3 + 4 >> 2] = (i6 | 0) == 2 ? 23 : 22;
  HEAP32[i3 + 8 >> 2] = 134;
  i6 = HEAP32[i1 + 132 >> 2] | 0;
  if ((i6 | 0) >= 1) {
   if ((i6 | 0) > 256) {
    i6 = HEAP32[i1 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 57;
    HEAP32[i6 + 24 >> 2] = 256;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   }
  } else {
   i6 = HEAP32[i1 >> 2] | 0;
   HEAP32[i6 + 20 >> 2] = 56;
   HEAP32[i6 + 24 >> 2] = 1;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
  }
  if ((HEAP32[i5 >> 2] | 0) == 2) {
   i5 = ((HEAP32[i1 + 112 >> 2] | 0) * 6 | 0) + 12 | 0;
   i6 = i3 + 32 | 0;
   i2 = HEAP32[i6 >> 2] | 0;
   if (!i2) {
    i7 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 4 >> 2] & 63](i1, 1, i5) | 0;
    HEAP32[i6 >> 2] = i7;
    i8 = i7;
   } else i8 = i2;
   _jzero_far(i8, i5);
   if (!(HEAP32[i3 + 40 >> 2] | 0)) _init_error_limit(i1);
   HEAP32[i3 + 36 >> 2] = 0;
  }
 } else {
  HEAP32[i3 + 4 >> 2] = 21;
  HEAP32[i3 + 8 >> 2] = 133;
  HEAP32[i3 + 28 >> 2] = 1;
 }
 i1 = i3 + 28 | 0;
 if (!(HEAP32[i1 >> 2] | 0)) return;
 _jzero_far(HEAP32[i4 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 4 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 8 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 12 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 16 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 20 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 24 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 28 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 32 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 36 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 40 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 44 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 48 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 52 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 56 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 60 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 64 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 68 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 72 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 76 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 80 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 84 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 88 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 92 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 96 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 100 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 104 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 108 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 112 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 116 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 120 >> 2] | 0, 4096);
 _jzero_far(HEAP32[i4 + 124 >> 2] | 0, 4096);
 HEAP32[i1 >> 2] = 0;
 return;
}

function _jinit_upsampler(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0;
 i2 = i1 + 4 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 160) | 0;
 HEAP32[i1 + 452 >> 2] = i3;
 HEAP32[i3 >> 2] = 127;
 HEAP32[i3 + 4 >> 2] = 3;
 i4 = i3 + 8 | 0;
 HEAP32[i4 >> 2] = 0;
 if (HEAP32[i1 + 300 >> 2] | 0) {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i5 + 20 >> 2] = 25;
  FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i1);
 }
 if (!(HEAP32[i1 + 76 >> 2] | 0)) i6 = 0; else i6 = (HEAP32[i1 + 316 >> 2] | 0) > 1;
 i5 = i1 + 36 | 0;
 if ((HEAP32[i5 >> 2] | 0) <= 0) return;
 i7 = i1 + 316 | 0;
 i8 = i1 + 308 | 0;
 i9 = i1 + 312 | 0;
 i10 = i3 + 100 | 0;
 i11 = i3 + 52 | 0;
 i12 = i1 + 112 | 0;
 i13 = i3 + 12 | 0;
 i14 = i3 + 140 | 0;
 i15 = i3 + 150 | 0;
 i3 = HEAP32[i1 + 216 >> 2] | 0;
 i16 = 0;
 while (1) {
  i17 = HEAP32[i3 + 36 >> 2] | 0;
  i18 = Math_imul(i17, HEAP32[i3 + 8 >> 2] | 0) | 0;
  i19 = HEAP32[i7 >> 2] | 0;
  i20 = (i18 | 0) / (i19 | 0) | 0;
  i18 = (Math_imul(HEAP32[i3 + 12 >> 2] | 0, i17) | 0) / (i19 | 0) | 0;
  i19 = HEAP32[i8 >> 2] | 0;
  i17 = HEAP32[i9 >> 2] | 0;
  HEAP32[i10 + (i16 << 2) >> 2] = i18;
  do if (!(HEAP32[i3 + 48 >> 2] | 0)) HEAP32[i11 + (i16 << 2) >> 2] = 11; else {
   i21 = (i18 | 0) == (i17 | 0);
   if ((i20 | 0) == (i19 | 0) & i21) {
    HEAP32[i11 + (i16 << 2) >> 2] = 12;
    break;
   }
   i22 = (i20 << 1 | 0) == (i19 | 0);
   do if (!(i22 & i21)) if (i22 & (i18 << 1 | 0) == (i17 | 0)) {
    if (i6 ? (HEAP32[i3 + 40 >> 2] | 0) >>> 0 > 2 : 0) {
     HEAP32[i11 + (i16 << 2) >> 2] = 15;
     HEAP32[i4 >> 2] = 1;
     break;
    }
    HEAP32[i11 + (i16 << 2) >> 2] = 16;
    break;
   } else {
    i23 = (i19 | 0) / (i20 | 0) | 0;
    if ((i19 - (Math_imul(i23, i20) | 0) | 0) == 0 ? (i24 = (i17 | 0) / (i18 | 0) | 0, (i17 - (Math_imul(i24, i18) | 0) | 0) == 0) : 0) {
     HEAP32[i11 + (i16 << 2) >> 2] = 17;
     HEAP8[i14 + i16 >> 0] = i23;
     HEAP8[i15 + i16 >> 0] = i24;
     break;
    }
    i24 = HEAP32[i1 >> 2] | 0;
    HEAP32[i24 + 20 >> 2] = 38;
    FUNCTION_TABLE_vi[HEAP32[i24 >> 2] & 255](i1);
    break;
   } else {
    if (i6 ? (HEAP32[i3 + 40 >> 2] | 0) >>> 0 > 2 : 0) {
     HEAP32[i11 + (i16 << 2) >> 2] = 13;
     break;
    }
    HEAP32[i11 + (i16 << 2) >> 2] = 14;
   } while (0);
   i22 = HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] | 0;
   i21 = _jround_up(HEAP32[i12 >> 2] | 0, HEAP32[i8 >> 2] | 0) | 0;
   i24 = FUNCTION_TABLE_iiiii[i22 & 15](i1, 1, i21, HEAP32[i9 >> 2] | 0) | 0;
   HEAP32[i13 + (i16 << 2) >> 2] = i24;
  } while (0);
  i16 = i16 + 1 | 0;
  if ((i16 | 0) >= (HEAP32[i5 >> 2] | 0)) break; else i3 = i3 + 84 | 0;
 }
 return;
}

function __ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 var i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 L1 : do if ((i1 | 0) == (i6 | 0)) if (HEAP8[i2 >> 0] | 0) {
  HEAP8[i2 >> 0] = 0;
  i13 = HEAP32[i5 >> 2] | 0;
  HEAP32[i5 >> 2] = i13 + 1;
  HEAP8[i13 >> 0] = 46;
  i13 = HEAP8[i8 + 11 >> 0] | 0;
  if (((i13 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i13 & 255) | 0) != 0 ? (i13 = HEAP32[i10 >> 2] | 0, (i13 - i9 | 0) < 160) : 0) {
   i14 = HEAP32[i11 >> 2] | 0;
   HEAP32[i10 >> 2] = i13 + 4;
   HEAP32[i13 >> 2] = i14;
   i15 = 0;
  } else i15 = 0;
 } else i15 = -1; else {
  if ((i1 | 0) == (i7 | 0) ? (i14 = HEAP8[i8 + 11 >> 0] | 0, (i14 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i14 & 255) | 0) : 0) {
   if (!(HEAP8[i2 >> 0] | 0)) {
    i15 = -1;
    break;
   }
   i14 = HEAP32[i10 >> 2] | 0;
   if ((i14 - i9 | 0) >= 160) {
    i15 = 0;
    break;
   }
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i10 >> 2] = i14 + 4;
   HEAP32[i14 >> 2] = i13;
   HEAP32[i11 >> 2] = 0;
   i15 = 0;
   break;
  }
  i13 = i12 + 128 | 0;
  i14 = 0;
  while (1) {
   i16 = i12 + (i14 << 2) | 0;
   if ((i14 | 0) == 32) {
    i17 = i13;
    break;
   }
   if ((HEAP32[i16 >> 2] | 0) == (i1 | 0)) {
    i17 = i16;
    break;
   } else i14 = i14 + 1 | 0;
  }
  i14 = i17 - i12 | 0;
  if ((i14 | 0) <= 124) {
   i13 = HEAP8[10736 + (i14 >> 2) >> 0] | 0;
   i16 = i14 + -88 | 0;
   switch (i16 >>> 2 | i16 << 30 | 0) {
   case 2:
   case 3:
    {
     i16 = HEAP32[i5 >> 2] | 0;
     if ((i16 | 0) != (i4 | 0) ? (HEAP8[i16 + -1 >> 0] & 95) != (HEAP8[i3 >> 0] & 127) : 0) {
      i15 = -1;
      break L1;
     }
     HEAP32[i5 >> 2] = i16 + 1;
     HEAP8[i16 >> 0] = i13;
     i15 = 0;
     break L1;
     break;
    }
   case 1:
   case 0:
    {
     HEAP8[i3 >> 0] = 80;
     break;
    }
   default:
    {
     i16 = i13 & 95;
     if ((((i16 | 0) == (HEAP8[i3 >> 0] | 0) ? (HEAP8[i3 >> 0] = i16 | 128, HEAP8[i2 >> 0] | 0) : 0) ? (HEAP8[i2 >> 0] = 0, i16 = HEAP8[i8 + 11 >> 0] | 0, (i16 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i16 & 255) | 0) : 0) ? (i16 = HEAP32[i10 >> 2] | 0, (i16 - i9 | 0) < 160) : 0) {
      i18 = HEAP32[i11 >> 2] | 0;
      HEAP32[i10 >> 2] = i16 + 4;
      HEAP32[i16 >> 2] = i18;
     }
    }
   }
   i18 = HEAP32[i5 >> 2] | 0;
   HEAP32[i5 >> 2] = i18 + 1;
   HEAP8[i18 >> 0] = i13;
   if ((i14 | 0) > 84) i15 = 0; else {
    HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
    i15 = 0;
   }
  } else i15 = -1;
 } while (0);
 return i15 | 0;
}

function __ZNSt3__28ios_base4InitC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = HEAP32[3448] | 0;
 __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(58116, i1, 58172);
 HEAP32[14359] = 14228;
 HEAP32[14361] = 14248;
 HEAP32[14360] = 0;
 __ZNSt3__28ios_base4initEPv(57444, 58116);
 HEAP32[14379] = 0;
 i2 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14380] = i2;
 __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(58180, i1, 58236);
 HEAP32[14381] = 14276;
 HEAP32[14383] = 14296;
 HEAP32[14382] = 0;
 __ZNSt3__28ios_base4initEPv(57532, 58180);
 HEAP32[14401] = 0;
 i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14402] = i1;
 i1 = HEAP32[3450] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(58244, i1, 58292);
 HEAP32[14403] = 14324;
 HEAP32[14404] = 14344;
 __ZNSt3__28ios_base4initEPv(57616, 58244);
 HEAP32[14422] = 0;
 i2 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14423] = i2;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(58300, i1, 58348);
 HEAP32[14424] = 14372;
 HEAP32[14425] = 14392;
 __ZNSt3__28ios_base4initEPv(57700, 58300);
 HEAP32[14443] = 0;
 i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14444] = i1;
 i1 = HEAP32[3449] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(58356, i1, 58404);
 HEAP32[14445] = 14324;
 HEAP32[14446] = 14344;
 __ZNSt3__28ios_base4initEPv(57784, 58356);
 HEAP32[14464] = 0;
 i2 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14465] = i2;
 i2 = HEAP32[57780 + (HEAP32[(HEAP32[14445] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[14487] = 14324;
 HEAP32[14488] = 14344;
 __ZNSt3__28ios_base4initEPv(57952, i2);
 HEAP32[14506] = 0;
 i2 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14507] = i2;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(58412, i1, 58460);
 HEAP32[14466] = 14372;
 HEAP32[14467] = 14392;
 __ZNSt3__28ios_base4initEPv(57868, 58412);
 HEAP32[14485] = 0;
 i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14486] = i1;
 i1 = HEAP32[57864 + (HEAP32[(HEAP32[14466] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[14508] = 14372;
 HEAP32[14509] = 14392;
 __ZNSt3__28ios_base4initEPv(58036, i1);
 HEAP32[14527] = 0;
 i1 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14528] = i1;
 HEAP32[57436 + (HEAP32[(HEAP32[14359] | 0) + -12 >> 2] | 0) + 72 >> 2] = 57612;
 HEAP32[57524 + (HEAP32[(HEAP32[14381] | 0) + -12 >> 2] | 0) + 72 >> 2] = 57696;
 i1 = (HEAP32[14445] | 0) + -12 | 0;
 i2 = 57780 + (HEAP32[i1 >> 2] | 0) + 4 | 0;
 HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 8192;
 i2 = (HEAP32[14466] | 0) + -12 | 0;
 i3 = 57864 + (HEAP32[i2 >> 2] | 0) + 4 | 0;
 HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 8192;
 HEAP32[57780 + (HEAP32[i1 >> 2] | 0) + 72 >> 2] = 57612;
 HEAP32[57864 + (HEAP32[i2 >> 2] | 0) + 72 >> 2] = 57696;
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 i6 = i1 + 344 | 0;
 i7 = i1 + 320 | 0;
 i8 = i1 + 304 | 0;
 i9 = i1 + 296 | 0;
 i10 = i1 + 280 | 0;
 i11 = i1 + 272 | 0;
 i12 = i1 + 240 | 0;
 i13 = i1 + 340 | 0;
 i14 = i1;
 i15 = i1 + 336 | 0;
 i16 = i1 + 332 | 0;
 i17 = i1 + 328 | 0;
 i18 = i11;
 HEAP32[i18 >> 2] = 37;
 HEAP32[i18 + 4 >> 2] = 0;
 i18 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i11 + 1 | 0, 47584, HEAP32[i3 + 4 >> 2] | 0) | 0;
 HEAP32[i13 >> 2] = i12;
 i19 = __ZNSt3__26__clocEv() | 0;
 if (i18) {
  HEAP32[i10 >> 2] = HEAP32[i3 + 8 >> 2];
  HEAPF64[i10 + 8 >> 3] = d5;
  i20 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i12, 30, i19, i11, i10) | 0;
 } else {
  HEAPF64[i9 >> 3] = d5;
  i20 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i12, 30, i19, i11, i9) | 0;
 }
 if ((i20 | 0) > 29) {
  i9 = __ZNSt3__26__clocEv() | 0;
  if (i18) {
   HEAP32[i8 >> 2] = HEAP32[i3 + 8 >> 2];
   HEAPF64[i8 + 8 >> 3] = d5;
   i21 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i13, i9, i11, i8) | 0;
  } else {
   HEAPF64[i7 >> 3] = d5;
   i21 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i13, i9, i11, i7) | 0;
  }
  i7 = HEAP32[i13 >> 2] | 0;
  if (!i7) __ZSt17__throw_bad_allocv(); else {
   i22 = i21;
   i23 = i7;
   i24 = i7;
  }
 } else {
  i22 = i20;
  i23 = 0;
  i24 = HEAP32[i13 >> 2] | 0;
 }
 i13 = i24 + i22 | 0;
 i20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i24, i13, i3) | 0;
 do if ((i24 | 0) != (i12 | 0)) {
  i7 = _malloc(i22 << 3) | 0;
  if (!i7) __ZSt17__throw_bad_allocv(); else {
   i25 = i7;
   i26 = 0;
   i27 = i7;
   break;
  }
 } else {
  i25 = i14;
  i26 = 1;
  i27 = 0;
 } while (0);
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i24, i20, i13, i25, i15, i16, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i17 >> 2] = HEAP32[i2 >> 2];
 i13 = HEAP32[i15 >> 2] | 0;
 i15 = HEAP32[i16 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i17 >> 2];
 i17 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i25, i13, i15, i3, i4) | 0;
 HEAP32[i2 >> 2] = i17;
 if (!i26) _free(i27);
 _free(i23);
 STACKTOP = i1;
 return i17 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 i6 = i1 + 344 | 0;
 i7 = i1 + 320 | 0;
 i8 = i1 + 304 | 0;
 i9 = i1 + 296 | 0;
 i10 = i1 + 280 | 0;
 i11 = i1 + 272 | 0;
 i12 = i1 + 240 | 0;
 i13 = i1 + 340 | 0;
 i14 = i1;
 i15 = i1 + 336 | 0;
 i16 = i1 + 332 | 0;
 i17 = i1 + 328 | 0;
 i18 = i11;
 HEAP32[i18 >> 2] = 37;
 HEAP32[i18 + 4 >> 2] = 0;
 i18 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i11 + 1 | 0, 58932, HEAP32[i3 + 4 >> 2] | 0) | 0;
 HEAP32[i13 >> 2] = i12;
 i19 = __ZNSt3__26__clocEv() | 0;
 if (i18) {
  HEAP32[i10 >> 2] = HEAP32[i3 + 8 >> 2];
  HEAPF64[i10 + 8 >> 3] = d5;
  i20 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i12, 30, i19, i11, i10) | 0;
 } else {
  HEAPF64[i9 >> 3] = d5;
  i20 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i12, 30, i19, i11, i9) | 0;
 }
 if ((i20 | 0) > 29) {
  i9 = __ZNSt3__26__clocEv() | 0;
  if (i18) {
   HEAP32[i8 >> 2] = HEAP32[i3 + 8 >> 2];
   HEAPF64[i8 + 8 >> 3] = d5;
   i21 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i13, i9, i11, i8) | 0;
  } else {
   HEAPF64[i7 >> 3] = d5;
   i21 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i13, i9, i11, i7) | 0;
  }
  i7 = HEAP32[i13 >> 2] | 0;
  if (!i7) __ZSt17__throw_bad_allocv(); else {
   i22 = i21;
   i23 = i7;
   i24 = i7;
  }
 } else {
  i22 = i20;
  i23 = 0;
  i24 = HEAP32[i13 >> 2] | 0;
 }
 i13 = i24 + i22 | 0;
 i20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i24, i13, i3) | 0;
 do if ((i24 | 0) != (i12 | 0)) {
  i7 = _malloc(i22 << 3) | 0;
  if (!i7) __ZSt17__throw_bad_allocv(); else {
   i25 = i7;
   i26 = 0;
   i27 = i7;
   break;
  }
 } else {
  i25 = i14;
  i26 = 1;
  i27 = 0;
 } while (0);
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i24, i20, i13, i25, i15, i16, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i17 >> 2] = HEAP32[i2 >> 2];
 i13 = HEAP32[i15 >> 2] | 0;
 i15 = HEAP32[i16 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i17 >> 2];
 i17 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i25, i13, i15, i3, i4) | 0;
 HEAP32[i2 >> 2] = i17;
 if (!i26) _free(i27);
 _free(i23);
 STACKTOP = i1;
 return i17 | 0;
}

function _getTransMatMultiSquareRobust(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 23;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 23;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } while (0);
 i14 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i4) | 0;
 i4 = HEAP32[i14 + 288 >> 2] | 0;
 if ((i2 | 0) < 0 ? 1 : (HEAP32[i14 + 292 >> 2] | 0) - i4 >> 3 >>> 0 <= i2 >>> 0) {
  i6 = -2;
  STACKTOP = i3;
  return i6 | 0;
 }
 i9 = HEAP32[i4 + (i2 << 3) + 4 >> 2] | 0;
 i2 = HEAP32[i14 + 216 >> 2] | 0;
 +_arGetTransMatMultiSquareRobust(HEAP32[i14 + 228 >> 2] | 0, i2 + 48 | 0, HEAP32[i2 + 44 >> 2] | 0, i9);
 HEAPF64[6516] = +HEAPF64[i9 + 8 >> 3];
 HEAPF64[6517] = +HEAPF64[i9 + 16 >> 3];
 HEAPF64[6518] = +HEAPF64[i9 + 24 >> 3];
 HEAPF64[6519] = +HEAPF64[i9 + 32 >> 3];
 HEAPF64[6520] = +HEAPF64[i9 + 40 >> 3];
 HEAPF64[6521] = +HEAPF64[i9 + 48 >> 3];
 HEAPF64[6522] = +HEAPF64[i9 + 56 >> 3];
 HEAPF64[6523] = +HEAPF64[i9 + 64 >> 3];
 HEAPF64[6524] = +HEAPF64[i9 + 72 >> 3];
 HEAPF64[6525] = +HEAPF64[i9 + 80 >> 3];
 HEAPF64[6526] = +HEAPF64[i9 + 88 >> 3];
 HEAPF64[6527] = +HEAPF64[i9 + 96 >> 3];
 i6 = 0;
 STACKTOP = i3;
 return i6 | 0;
}

function _create_colorindex(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i2 = HEAP32[i1 + 460 >> 2] | 0;
 i3 = (HEAP32[i1 + 88 >> 2] | 0) == 1;
 HEAP32[i2 + 28 >> 2] = i3 & 1;
 i4 = i1 + 120 | 0;
 i5 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 8 >> 2] & 15](i1, 1, i3 ? 766 : 256, HEAP32[i4 >> 2] | 0) | 0;
 i1 = i2 + 24 | 0;
 HEAP32[i1 >> 2] = i5;
 i6 = HEAP32[i2 + 20 >> 2] | 0;
 if ((HEAP32[i4 >> 2] | 0) <= 0) return;
 if (!i3) {
  i3 = i6;
  i7 = 0;
  i8 = i5;
  while (1) {
   i9 = HEAP32[i2 + 32 + (i7 << 2) >> 2] | 0;
   i10 = (i3 | 0) / (i9 | 0) | 0;
   i11 = HEAP32[i8 + (i7 << 2) >> 2] | 0;
   i12 = i9 + -1 | 0;
   i13 = i12 << 1;
   i14 = 0;
   i15 = (i9 + 254 | 0) / (i13 | 0) | 0;
   i9 = 0;
   while (1) {
    if ((i9 | 0) > (i15 | 0)) {
     i16 = i14;
     while (1) {
      i17 = i16 + 1 | 0;
      i18 = (((i17 << 1 | 1) * 255 | 0) + i12 | 0) / (i13 | 0) | 0;
      if ((i9 | 0) > (i18 | 0)) i16 = i17; else {
       i19 = i17;
       i20 = i18;
       break;
      }
     }
    } else {
     i19 = i14;
     i20 = i15;
    }
    i16 = (Math_imul(i19, i10) | 0) & 255;
    HEAP8[i11 + i9 >> 0] = i16;
    i9 = i9 + 1 | 0;
    if ((i9 | 0) == 256) break; else {
     i14 = i19;
     i15 = i20;
    }
   }
   i15 = i7 + 1 | 0;
   if ((i15 | 0) >= (HEAP32[i4 >> 2] | 0)) break;
   i3 = i10;
   i7 = i15;
   i8 = HEAP32[i1 >> 2] | 0;
  }
  return;
 }
 i8 = i6;
 i6 = 0;
 i7 = i5;
 while (1) {
  i5 = HEAP32[i2 + 32 + (i6 << 2) >> 2] | 0;
  i3 = (i8 | 0) / (i5 | 0) | 0;
  i20 = i7 + (i6 << 2) | 0;
  HEAP32[i20 >> 2] = (HEAP32[i20 >> 2] | 0) + 255;
  i20 = HEAP32[(HEAP32[i1 >> 2] | 0) + (i6 << 2) >> 2] | 0;
  i19 = i5 + -1 | 0;
  i15 = i19 << 1;
  i14 = 0;
  i9 = (i5 + 254 | 0) / (i15 | 0) | 0;
  i5 = 0;
  while (1) {
   if ((i5 | 0) > (i9 | 0)) {
    i11 = i14;
    while (1) {
     i13 = i11 + 1 | 0;
     i12 = (((i13 << 1 | 1) * 255 | 0) + i19 | 0) / (i15 | 0) | 0;
     if ((i5 | 0) > (i12 | 0)) i11 = i13; else {
      i21 = i13;
      i22 = i12;
      break;
     }
    }
   } else {
    i21 = i14;
    i22 = i9;
   }
   i11 = (Math_imul(i21, i3) | 0) & 255;
   HEAP8[i20 + i5 >> 0] = i11;
   i5 = i5 + 1 | 0;
   if ((i5 | 0) == 256) break; else {
    i14 = i21;
    i9 = i22;
   }
  }
  i9 = i20 + 255 | 0;
  i14 = 1;
  do {
   HEAP8[i20 + (0 - i14) >> 0] = HEAP8[i20 >> 0] | 0;
   HEAP8[i20 + (i14 + 255) >> 0] = HEAP8[i9 >> 0] | 0;
   i14 = i14 + 1 | 0;
  } while ((i14 | 0) != 256);
  i14 = i6 + 1 | 0;
  if ((i14 | 0) >= (HEAP32[i4 >> 2] | 0)) break;
  i8 = i3;
  i6 = i14;
  i7 = HEAP32[i1 >> 2] | 0;
 }
 return;
}

function _getTransMatMultiSquare(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 23;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 23;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } while (0);
 i14 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i4) | 0;
 i4 = HEAP32[i14 + 288 >> 2] | 0;
 if ((i2 | 0) < 0 ? 1 : (HEAP32[i14 + 292 >> 2] | 0) - i4 >> 3 >>> 0 <= i2 >>> 0) {
  i6 = -2;
  STACKTOP = i3;
  return i6 | 0;
 }
 i9 = HEAP32[i4 + (i2 << 3) + 4 >> 2] | 0;
 i2 = HEAP32[i14 + 216 >> 2] | 0;
 +_arGetTransMatMultiSquare(HEAP32[i14 + 228 >> 2] | 0, i2 + 48 | 0, HEAP32[i2 + 44 >> 2] | 0, i9);
 HEAPF64[6516] = +HEAPF64[i9 + 8 >> 3];
 HEAPF64[6517] = +HEAPF64[i9 + 16 >> 3];
 HEAPF64[6518] = +HEAPF64[i9 + 24 >> 3];
 HEAPF64[6519] = +HEAPF64[i9 + 32 >> 3];
 HEAPF64[6520] = +HEAPF64[i9 + 40 >> 3];
 HEAPF64[6521] = +HEAPF64[i9 + 48 >> 3];
 HEAPF64[6522] = +HEAPF64[i9 + 56 >> 3];
 HEAPF64[6523] = +HEAPF64[i9 + 64 >> 3];
 HEAPF64[6524] = +HEAPF64[i9 + 72 >> 3];
 HEAPF64[6525] = +HEAPF64[i9 + 80 >> 3];
 HEAPF64[6526] = +HEAPF64[i9 + 88 >> 3];
 HEAPF64[6527] = +HEAPF64[i9 + 96 >> 3];
 i6 = 0;
 STACKTOP = i3;
 return i6 | 0;
}

function __ZNSt3__2L12init_wmonthsEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56216] | 0) == 0 ? ___cxa_guard_acquire(56216) | 0 : 0) {
  i1 = 55344;
  do {
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i1 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 12 | 0;
  } while ((i1 | 0) != 55632);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55344, 15356) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55356, 15388) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55368, 15424) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55380, 15448) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55392, 15472) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55404, 15488) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55416, 15508) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55428, 15528) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55440, 15556) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55452, 15596) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55464, 15628) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55476, 15664) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55488, 15700) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55500, 15716) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55512, 15732) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55524, 15748) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55536, 15472) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55548, 15764) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55560, 15780) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55572, 15796) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55584, 15812) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55596, 15828) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55608, 15844) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55620, 15860) | 0;
 return;
}

function __ZNSt3__2L11init_monthsEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56136] | 0) == 0 ? ___cxa_guard_acquire(56136) | 0 : 0) {
  i1 = 54592;
  do {
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i1 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 12 | 0;
  } while ((i1 | 0) != 54880);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54592, 47854) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54604, 47862) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54616, 47871) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54628, 47877) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54640, 47883) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54652, 47887) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54664, 47892) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54676, 47897) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54688, 47904) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54700, 47914) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54712, 47922) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54724, 47931) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54736, 47940) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54748, 47944) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54760, 47948) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54772, 47952) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54784, 47883) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54796, 47956) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54808, 47960) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54820, 47964) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54832, 47968) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54844, 47972) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54856, 47976) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54868, 47980) | 0;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector5allocEPKNS_25GaussianScaleSpacePyramidE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 __ZN6vision10DoGPyramid5allocEPKNS_25GaussianScaleSpacePyramidE(i1 + 32 | 0, i2);
 i3 = i2 + 4 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 __ZN6vision21OrientationAssignment5allocEmmiiiffif(i1 + 92 | 0, HEAP32[i4 + 4 >> 2] | 0, HEAP32[i4 + 8 >> 2] | 0, HEAP32[i2 + 16 >> 2] | 0, HEAP32[i2 + 20 >> 2] | 0, 36, 3.0, 1.5, 5, .800000011920929);
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 8 >> 2];
 i2 = i1 + 16 | 0;
 i3 = HEAP32[i1 + 8 >> 2] | 0;
 i4 = i1 + 20 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = HEAP32[i2 >> 2] | 0;
 i7 = (i5 - i6 | 0) / 12 | 0;
 i8 = i6;
 i6 = i5;
 if (i3 >>> 0 <= i7 >>> 0) if (i3 >>> 0 < i7 >>> 0) {
  i9 = i8 + (i3 * 12 | 0) | 0;
  if ((i9 | 0) != (i6 | 0)) {
   i8 = i6;
   do {
    i6 = i8;
    i8 = i8 + -12 | 0;
    i10 = HEAP32[i8 >> 2] | 0;
    if (i10 | 0) {
     i11 = i6 + -8 | 0;
     i6 = HEAP32[i11 >> 2] | 0;
     if ((i6 | 0) == (i10 | 0)) i12 = i10; else {
      i13 = i6;
      do {
       i6 = i13;
       i13 = i13 + -12 | 0;
       i14 = HEAP32[i13 >> 2] | 0;
       if (i14 | 0) {
        HEAP32[i6 + -8 >> 2] = i14;
        __ZdlPv(i14);
       }
      } while ((i13 | 0) != (i10 | 0));
      i12 = HEAP32[i8 >> 2] | 0;
     }
     HEAP32[i11 >> 2] = i10;
     __ZdlPv(i12);
    }
   } while ((i8 | 0) != (i9 | 0));
  }
  HEAP32[i4 >> 2] = i9;
  i15 = i9;
 } else i15 = i5; else {
  __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8__appendEm(i2, i3 - i7 | 0);
  i15 = HEAP32[i4 >> 2] | 0;
 }
 i7 = HEAP32[i2 >> 2] | 0;
 if ((i15 | 0) == (i7 | 0)) return;
 i15 = i1 + 12 | 0;
 i1 = 0;
 i3 = i7;
 do {
  i7 = i3;
  i5 = i7 + (i1 * 12 | 0) | 0;
  i9 = HEAP32[i15 >> 2] | 0;
  i8 = i7 + (i1 * 12 | 0) + 4 | 0;
  i7 = HEAP32[i8 >> 2] | 0;
  i12 = HEAP32[i5 >> 2] | 0;
  i13 = (i7 - i12 | 0) / 12 | 0;
  i14 = i12;
  i12 = i7;
  if (i9 >>> 0 <= i13 >>> 0) {
   if (i9 >>> 0 < i13 >>> 0) {
    i7 = i14 + (i9 * 12 | 0) | 0;
    if ((i7 | 0) != (i12 | 0)) {
     i14 = i12;
     do {
      i12 = i14;
      i14 = i14 + -12 | 0;
      i6 = HEAP32[i14 >> 2] | 0;
      if (i6 | 0) {
       HEAP32[i12 + -8 >> 2] = i6;
       __ZdlPv(i6);
      }
     } while ((i14 | 0) != (i7 | 0));
    }
    HEAP32[i8 >> 2] = i7;
   }
  } else __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEm(i5, i9 - i13 | 0);
  i1 = i1 + 1 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
 } while (i1 >>> 0 < (((HEAP32[i4 >> 2] | 0) - i3 | 0) / 12 | 0) >>> 0);
 return;
}

function _setMarkerInfoVertex(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 23;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 23;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i4) | 0) + 216 | 0;
 i4 = HEAP32[i14 >> 2] | 0;
 if ((HEAP32[i4 + 44 >> 2] | 0) <= (i2 | 0)) {
  i6 = -3;
  STACKTOP = i3;
  return i6 | 0;
 }
 i14 = (i2 | 0) < 0 ? 55816 : i4 + 48 + (i2 << 8) | 0;
 d16 = +HEAPF64[6516];
 HEAPF64[i14 + 168 >> 3] = d16;
 d17 = +HEAPF64[6517];
 HEAPF64[i14 + 176 >> 3] = d17;
 d18 = +HEAPF64[6518];
 HEAPF64[i14 + 184 >> 3] = d18;
 d19 = +HEAPF64[6519];
 HEAPF64[i14 + 192 >> 3] = d19;
 d20 = +HEAPF64[6520];
 HEAPF64[i14 + 200 >> 3] = d20;
 d21 = +HEAPF64[6521];
 HEAPF64[i14 + 208 >> 3] = d21;
 d22 = +HEAPF64[6522];
 HEAPF64[i14 + 216 >> 3] = d22;
 d23 = +HEAPF64[6523];
 HEAPF64[i14 + 224 >> 3] = d23;
 HEAPF64[i14 + 56 >> 3] = (d16 + d18 + d20 + d22) * .25;
 HEAPF64[i14 + 64 >> 3] = (d17 + d19 + d21 + d23) * .25;
 i6 = 0;
 STACKTOP = i3;
 return i6 | 0;
}

function _decode_mcu_DC_refine(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = HEAP32[i1 + 444 >> 2] | 0;
 i6 = 1 << HEAP32[i1 + 412 >> 2];
 i7 = i1 + 276 | 0;
 if (HEAP32[i7 >> 2] | 0 ? (i8 = i5 + 40 | 0, (HEAP32[i8 >> 2] | 0) == 0) : 0) {
  i9 = i5 + 16 | 0;
  i10 = HEAP32[i1 + 440 >> 2] | 0;
  i11 = i10 + 24 | 0;
  HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + ((HEAP32[i9 >> 2] | 0) / 8 | 0);
  HEAP32[i9 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[i10 + 8 >> 2] & 127](i1) | 0)) {
   i12 = 0;
   STACKTOP = i3;
   return i12 | 0;
  }
  i10 = i1 + 328 | 0;
  if ((HEAP32[i10 >> 2] | 0) > 0) {
   i9 = 0;
   do {
    HEAP32[i5 + 24 + (i9 << 2) >> 2] = 0;
    i9 = i9 + 1 | 0;
   } while ((i9 | 0) < (HEAP32[i10 >> 2] | 0));
  }
  HEAP32[i5 + 20 >> 2] = 0;
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  if (!(HEAP32[i1 + 416 >> 2] | 0)) HEAP32[i5 + 8 >> 2] = 0;
 }
 HEAP32[i4 + 16 >> 2] = i1;
 i7 = i1 + 24 | 0;
 i8 = HEAP32[i7 >> 2] | 0;
 i10 = HEAP32[i8 >> 2] | 0;
 HEAP32[i4 >> 2] = i10;
 i9 = HEAP32[i8 + 4 >> 2] | 0;
 i11 = i4 + 4 | 0;
 HEAP32[i11 >> 2] = i9;
 i13 = i5 + 12 | 0;
 i14 = HEAP32[i13 >> 2] | 0;
 i15 = i5 + 16 | 0;
 i16 = HEAP32[i15 >> 2] | 0;
 i17 = i1 + 356 | 0;
 do if ((HEAP32[i17 >> 2] | 0) > 0) {
  i1 = i4 + 8 | 0;
  i18 = i4 + 12 | 0;
  i19 = i14;
  i20 = 0;
  i21 = i16;
  while (1) {
   i22 = HEAP32[i2 + (i20 << 2) >> 2] | 0;
   if ((i21 | 0) < 1) {
    if (!(_jpeg_fill_bit_buffer(i4, i19, i21, 1) | 0)) {
     i12 = 0;
     i23 = 19;
     break;
    }
    i24 = HEAP32[i18 >> 2] | 0;
    i25 = HEAP32[i1 >> 2] | 0;
   } else {
    i24 = i21;
    i25 = i19;
   }
   i21 = i24 + -1 | 0;
   if (1 << i21 & i25 | 0) HEAP16[i22 >> 1] = i6 | (HEAPU16[i22 >> 1] | 0);
   i20 = i20 + 1 | 0;
   if ((i20 | 0) >= (HEAP32[i17 >> 2] | 0)) {
    i23 = 17;
    break;
   } else i19 = i25;
  }
  if ((i23 | 0) == 17) {
   i26 = i21;
   i27 = i25;
   i28 = HEAP32[i7 >> 2] | 0;
   i29 = HEAP32[i4 >> 2] | 0;
   i30 = HEAP32[i11 >> 2] | 0;
   break;
  } else if ((i23 | 0) == 19) {
   STACKTOP = i3;
   return i12 | 0;
  }
 } else {
  i26 = i16;
  i27 = i14;
  i28 = i8;
  i29 = i10;
  i30 = i9;
 } while (0);
 HEAP32[i28 >> 2] = i29;
 HEAP32[i28 + 4 >> 2] = i30;
 HEAP32[i13 >> 2] = i27;
 HEAP32[i15 >> 2] = i26;
 i26 = i5 + 40 | 0;
 HEAP32[i26 >> 2] = (HEAP32[i26 >> 2] | 0) + -1;
 i12 = 1;
 STACKTOP = i3;
 return i12 | 0;
}

function _ar2GenImageLayer2(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i1 + 4 | 0;
 i5 = i1 + 12 | 0;
 d6 = +HEAPF32[i5 >> 2];
 i7 = _lroundf(+(HEAP32[i4 >> 2] | 0) * d2 / d6) | 0;
 i8 = i1 + 8 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = _lroundf(+(i9 | 0) * d2 / d6) | 0;
 i11 = _malloc(16) | 0;
 if (!i11) {
  _arLog(0, 3, 20510, i3);
  _exit(1);
 }
 HEAP32[i11 + 4 >> 2] = i7;
 HEAP32[i11 + 8 >> 2] = i10;
 HEAPF32[i11 + 12 >> 2] = d2;
 i12 = _malloc(Math_imul(i10, i7) | 0) | 0;
 HEAP32[i11 >> 2] = i12;
 if (!i12) {
  _arLog(0, 3, 20510, i3 + 8 | 0);
  _exit(1);
 }
 if ((i10 | 0) <= 0) {
  STACKTOP = i3;
  return i11 | 0;
 }
 i13 = (i7 | 0) > 0;
 i14 = 0;
 i15 = i12;
 d16 = d6;
 i12 = i9;
 while (1) {
  i9 = _lroundf(d16 * +(i14 | 0) / d2) | 0;
  i17 = i14 + 1 | 0;
  i18 = _lroundf(d16 * +(i17 | 0) / d2) | 0;
  i19 = (i18 | 0) > (i12 | 0) ? i12 : i18;
  do if (i13) {
   if ((i9 | 0) >= (i19 | 0)) {
    i20 = i15 + i7 | 0;
    break;
   }
   i21 = -2 - i9 - ~((i18 | 0) > (i12 | 0) ? i12 : i18) | 0;
   i22 = 0;
   i23 = i15;
   d6 = d16;
   while (1) {
    i24 = _lroundf(d6 * +(i22 | 0) / d2) | 0;
    i25 = i22 + 1 | 0;
    i26 = _lroundf(d6 * +(i25 | 0) / d2) | 0;
    i27 = HEAP32[i4 >> 2] | 0;
    i28 = (i26 | 0) > (i27 | 0) ? i27 : i26;
    i29 = HEAP32[i1 >> 2] | 0;
    if ((i24 | 0) < (i28 | 0)) {
     i30 = ~((i26 | 0) > (i27 | 0) ? i27 : i26);
     i26 = (Math_imul(i21, ~i24 - i30 | 0) | 0) + -1 - i24 | 0;
     i31 = 0;
     i32 = i9;
     while (1) {
      i33 = i24;
      i34 = i29 + ((Math_imul(i32, i27) | 0) + i24) | 0;
      i35 = i31;
      while (1) {
       i35 = i35 + (HEAPU8[i34 >> 0] | 0) | 0;
       i33 = i33 + 1 | 0;
       if ((i33 | 0) >= (i28 | 0)) break; else i34 = i34 + 1 | 0;
      }
      i32 = i32 + 1 | 0;
      if ((i32 | 0) >= (i19 | 0)) break; else i31 = i35;
     }
     i36 = i26 - i30 | 0;
     i37 = i35;
    } else {
     i36 = 0;
     i37 = 0;
    }
    HEAP8[i23 >> 0] = (i37 | 0) / (i36 | 0) | 0;
    if ((i25 | 0) == (i7 | 0)) break;
    i22 = i25;
    i23 = i23 + 1 | 0;
    d6 = +HEAPF32[i5 >> 2];
   }
   i20 = i15 + i7 | 0;
  } else i20 = i15; while (0);
  if ((i17 | 0) == (i10 | 0)) break;
  i14 = i17;
  i15 = i20;
  d16 = +HEAPF32[i5 >> 2];
  i12 = HEAP32[i8 >> 2] | 0;
 }
 STACKTOP = i3;
 return i11 | 0;
}

function _decompress_data(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i3 = HEAP32[i1 + 428 >> 2] | 0;
 i4 = i1 + 320 | 0;
 i5 = (HEAP32[i4 >> 2] | 0) + -1 | 0;
 i6 = i1 + 144 | 0;
 i7 = i1 + 152 | 0;
 i8 = i1 + 436 | 0;
 i9 = i1 + 148 | 0;
 i10 = i1 + 156 | 0;
 while (1) {
  i11 = HEAP32[i6 >> 2] | 0;
  i12 = HEAP32[i7 >> 2] | 0;
  if ((i11 | 0) >= (i12 | 0)) {
   if ((i11 | 0) != (i12 | 0)) break;
   if ((HEAP32[i9 >> 2] | 0) >>> 0 > (HEAP32[i10 >> 2] | 0) >>> 0) break;
  }
  if (!(FUNCTION_TABLE_ii[HEAP32[HEAP32[i8 >> 2] >> 2] & 127](i1) | 0)) {
   i13 = 0;
   i14 = 21;
   break;
  }
 }
 if ((i14 | 0) == 21) return i13 | 0;
 i14 = i1 + 36 | 0;
 if ((HEAP32[i14 >> 2] | 0) > 0) {
  i8 = i1 + 4 | 0;
  i9 = i1 + 448 | 0;
  i7 = HEAP32[i1 + 216 >> 2] | 0;
  i6 = 0;
  while (1) {
   if (HEAP32[i7 + 48 >> 2] | 0) {
    i12 = i7 + 12 | 0;
    i11 = HEAP32[i12 >> 2] | 0;
    i15 = Math_imul(i11, HEAP32[i10 >> 2] | 0) | 0;
    i16 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 32 >> 2] & 31](i1, HEAP32[i3 + 72 + (i6 << 2) >> 2] | 0, i15, i11, 0) | 0;
    if ((HEAP32[i10 >> 2] | 0) >>> 0 < i5 >>> 0) i17 = HEAP32[i12 >> 2] | 0; else {
     i11 = HEAP32[i12 >> 2] | 0;
     i12 = ((HEAP32[i7 + 32 >> 2] | 0) >>> 0) % (i11 >>> 0) | 0;
     i17 = (i12 | 0) == 0 ? i11 : i12;
    }
    i12 = HEAP32[(HEAP32[i9 >> 2] | 0) + 4 + (i6 << 2) >> 2] | 0;
    if ((i17 | 0) > 0) {
     i11 = i7 + 28 | 0;
     i15 = i7 + 36 | 0;
     i18 = HEAP32[i2 + (i6 << 2) >> 2] | 0;
     i19 = 0;
     i20 = HEAP32[i11 >> 2] | 0;
     while (1) {
      if (!i20) {
       i21 = HEAP32[i15 >> 2] | 0;
       i22 = 0;
      } else {
       i23 = 0;
       i24 = HEAP32[i16 + (i19 << 2) >> 2] | 0;
       i25 = 0;
       while (1) {
        FUNCTION_TABLE_viiiii[i12 & 31](i1, i7, i24, i18, i23);
        i26 = HEAP32[i15 >> 2] | 0;
        i25 = i25 + 1 | 0;
        i27 = HEAP32[i11 >> 2] | 0;
        if (i25 >>> 0 >= i27 >>> 0) {
         i21 = i26;
         i22 = i27;
         break;
        } else {
         i23 = i26 + i23 | 0;
         i24 = i24 + 128 | 0;
        }
       }
      }
      i19 = i19 + 1 | 0;
      if ((i19 | 0) == (i17 | 0)) break; else {
       i18 = i18 + (i21 << 2) | 0;
       i20 = i22;
      }
     }
    }
   }
   i6 = i6 + 1 | 0;
   if ((i6 | 0) >= (HEAP32[i14 >> 2] | 0)) break; else i7 = i7 + 84 | 0;
  }
 }
 i7 = (HEAP32[i10 >> 2] | 0) + 1 | 0;
 HEAP32[i10 >> 2] = i7;
 i13 = i7 >>> 0 < (HEAP32[i4 >> 2] | 0) >>> 0 ? 3 : 4;
 return i13 | 0;
}

function _wcsrtombs(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 L1 : do if (!i1) {
  i6 = HEAP32[i2 >> 2] | 0;
  i7 = HEAP32[i6 >> 2] | 0;
  if (!i7) i8 = 0; else {
   i9 = i6;
   i6 = 0;
   i10 = i7;
   while (1) {
    if (i10 >>> 0 > 127) {
     i7 = _wcrtomb(i5, i10, 0) | 0;
     if ((i7 | 0) == -1) {
      i8 = -1;
      break L1;
     } else i11 = i7;
    } else i11 = 1;
    i7 = i11 + i6 | 0;
    i9 = i9 + 4 | 0;
    i10 = HEAP32[i9 >> 2] | 0;
    if (!i10) {
     i8 = i7;
     break;
    } else i6 = i7;
   }
  }
 } else {
  L10 : do if (i3 >>> 0 > 3) {
   i6 = i1;
   i10 = i3;
   i9 = HEAP32[i2 >> 2] | 0;
   while (1) {
    i7 = HEAP32[i9 >> 2] | 0;
    if ((i7 + -1 | 0) >>> 0 > 126) {
     if (!i7) break;
     i12 = _wcrtomb(i6, i7, 0) | 0;
     if ((i12 | 0) == -1) {
      i8 = -1;
      break L1;
     }
     i13 = i6 + i12 | 0;
     i14 = i10 - i12 | 0;
     i15 = i9;
    } else {
     HEAP8[i6 >> 0] = i7;
     i13 = i6 + 1 | 0;
     i14 = i10 + -1 | 0;
     i15 = HEAP32[i2 >> 2] | 0;
    }
    i9 = i15 + 4 | 0;
    HEAP32[i2 >> 2] = i9;
    if (i14 >>> 0 <= 3) {
     i16 = i13;
     i17 = i14;
     break L10;
    } else {
     i6 = i13;
     i10 = i14;
    }
   }
   HEAP8[i6 >> 0] = 0;
   HEAP32[i2 >> 2] = 0;
   i8 = i3 - i10 | 0;
   break L1;
  } else {
   i16 = i1;
   i17 = i3;
  } while (0);
  if (i17) {
   i9 = i16;
   i7 = i17;
   i12 = HEAP32[i2 >> 2] | 0;
   while (1) {
    i18 = HEAP32[i12 >> 2] | 0;
    if ((i18 + -1 | 0) >>> 0 > 126) {
     if (!i18) {
      i19 = 20;
      break;
     }
     i20 = _wcrtomb(i5, i18, 0) | 0;
     if ((i20 | 0) == -1) {
      i8 = -1;
      break L1;
     }
     if (i7 >>> 0 < i20 >>> 0) {
      i19 = 23;
      break;
     }
     _wcrtomb(i9, HEAP32[i12 >> 2] | 0, 0) | 0;
     i21 = i9 + i20 | 0;
     i22 = i7 - i20 | 0;
     i23 = i12;
    } else {
     HEAP8[i9 >> 0] = i18;
     i21 = i9 + 1 | 0;
     i22 = i7 + -1 | 0;
     i23 = HEAP32[i2 >> 2] | 0;
    }
    i12 = i23 + 4 | 0;
    HEAP32[i2 >> 2] = i12;
    if (!i22) {
     i8 = i3;
     break L1;
    } else {
     i9 = i21;
     i7 = i22;
    }
   }
   if ((i19 | 0) == 20) {
    HEAP8[i9 >> 0] = 0;
    HEAP32[i2 >> 2] = 0;
    i8 = i3 - i7 | 0;
    break;
   } else if ((i19 | 0) == 23) {
    i8 = i3 - i7 | 0;
    break;
   }
  } else i8 = i3;
 } while (0);
 STACKTOP = i4;
 return i8 | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid3getEmm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if ((HEAP32[i1 + 16 >> 2] | 0) >>> 0 <= i2 >>> 0) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32499, 43) | 0, 32346, 128) | 0, 33554, 6) | 0, 218) | 0, 33561, 2) | 0, 20732, 19) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 i6 = HEAP32[i1 + 20 >> 2] | 0;
 if (i6 >>> 0 > i3 >>> 0) {
  i8 = (Math_imul(i6, i2) | 0) + i3 | 0;
  STACKTOP = i4;
  return (HEAP32[i1 + 4 >> 2] | 0) + (i8 << 5) | 0;
 } else {
  i8 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32643, 50) | 0, 32346, 128) | 0, 33554, 6) | 0, 219) | 0, 33561, 2) | 0, 20752, 18) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i4) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  _abort();
 }
 return 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i6 = i1 + 168 | 0;
 i7 = i1 + 144 | 0;
 i8 = i1 + 128 | 0;
 i9 = i1 + 120 | 0;
 i10 = i1 + 104 | 0;
 i11 = i1 + 96 | 0;
 i12 = i1 + 64 | 0;
 i13 = i1 + 164 | 0;
 i14 = i1;
 i15 = i1 + 160 | 0;
 i16 = i1 + 156 | 0;
 i17 = i1 + 152 | 0;
 i18 = i11;
 HEAP32[i18 >> 2] = 37;
 HEAP32[i18 + 4 >> 2] = 0;
 i18 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i11 + 1 | 0, 47584, HEAP32[i3 + 4 >> 2] | 0) | 0;
 HEAP32[i13 >> 2] = i12;
 i19 = __ZNSt3__26__clocEv() | 0;
 if (i18) {
  HEAP32[i10 >> 2] = HEAP32[i3 + 8 >> 2];
  HEAPF64[i10 + 8 >> 3] = d5;
  i20 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i12, 30, i19, i11, i10) | 0;
 } else {
  HEAPF64[i9 >> 3] = d5;
  i20 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i12, 30, i19, i11, i9) | 0;
 }
 if ((i20 | 0) > 29) {
  i9 = __ZNSt3__26__clocEv() | 0;
  if (i18) {
   HEAP32[i8 >> 2] = HEAP32[i3 + 8 >> 2];
   HEAPF64[i8 + 8 >> 3] = d5;
   i21 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i13, i9, i11, i8) | 0;
  } else {
   HEAPF64[i7 >> 3] = d5;
   i21 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i13, i9, i11, i7) | 0;
  }
  i7 = HEAP32[i13 >> 2] | 0;
  if (!i7) __ZSt17__throw_bad_allocv(); else {
   i22 = i21;
   i23 = i7;
   i24 = i7;
  }
 } else {
  i22 = i20;
  i23 = 0;
  i24 = HEAP32[i13 >> 2] | 0;
 }
 i13 = i24 + i22 | 0;
 i20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i24, i13, i3) | 0;
 if ((i24 | 0) != (i12 | 0)) {
  i12 = _malloc(i22 << 1) | 0;
  if (!i12) __ZSt17__throw_bad_allocv(); else {
   i25 = i12;
   i26 = i12;
  }
 } else {
  i25 = i14;
  i26 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i24, i20, i13, i25, i15, i16, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i17 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i15 >> 2] | 0;
 i15 = HEAP32[i16 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i17 >> 2];
 i17 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i25, i2, i15, i3, i4) | 0;
 _free(i26);
 _free(i23);
 STACKTOP = i1;
 return i17 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 i6 = i1 + 168 | 0;
 i7 = i1 + 144 | 0;
 i8 = i1 + 128 | 0;
 i9 = i1 + 120 | 0;
 i10 = i1 + 104 | 0;
 i11 = i1 + 96 | 0;
 i12 = i1 + 64 | 0;
 i13 = i1 + 164 | 0;
 i14 = i1;
 i15 = i1 + 160 | 0;
 i16 = i1 + 156 | 0;
 i17 = i1 + 152 | 0;
 i18 = i11;
 HEAP32[i18 >> 2] = 37;
 HEAP32[i18 + 4 >> 2] = 0;
 i18 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i11 + 1 | 0, 58932, HEAP32[i3 + 4 >> 2] | 0) | 0;
 HEAP32[i13 >> 2] = i12;
 i19 = __ZNSt3__26__clocEv() | 0;
 if (i18) {
  HEAP32[i10 >> 2] = HEAP32[i3 + 8 >> 2];
  HEAPF64[i10 + 8 >> 3] = d5;
  i20 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i12, 30, i19, i11, i10) | 0;
 } else {
  HEAPF64[i9 >> 3] = d5;
  i20 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i12, 30, i19, i11, i9) | 0;
 }
 if ((i20 | 0) > 29) {
  i9 = __ZNSt3__26__clocEv() | 0;
  if (i18) {
   HEAP32[i8 >> 2] = HEAP32[i3 + 8 >> 2];
   HEAPF64[i8 + 8 >> 3] = d5;
   i21 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i13, i9, i11, i8) | 0;
  } else {
   HEAPF64[i7 >> 3] = d5;
   i21 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i13, i9, i11, i7) | 0;
  }
  i7 = HEAP32[i13 >> 2] | 0;
  if (!i7) __ZSt17__throw_bad_allocv(); else {
   i22 = i21;
   i23 = i7;
   i24 = i7;
  }
 } else {
  i22 = i20;
  i23 = 0;
  i24 = HEAP32[i13 >> 2] | 0;
 }
 i13 = i24 + i22 | 0;
 i20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i24, i13, i3) | 0;
 if ((i24 | 0) != (i12 | 0)) {
  i12 = _malloc(i22 << 1) | 0;
  if (!i12) __ZSt17__throw_bad_allocv(); else {
   i25 = i12;
   i26 = i12;
  }
 } else {
  i25 = i14;
  i26 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i24, i20, i13, i25, i15, i16, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i17 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i15 >> 2] | 0;
 i15 = HEAP32[i16 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i17 >> 2];
 i17 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i25, i2, i15, i3, i4) | 0;
 _free(i26);
 _free(i23);
 STACKTOP = i1;
 return i17 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 i5 = i4 + 40 | 0;
 i6 = i4 + 32 | 0;
 i7 = i4;
 i8 = i4 + 64 | 0;
 L1 : do if ((i2 - i1 | 0) >>> 0 > 16) {
  i9 = 0;
  i10 = i6;
  while (1) {
   i11 = HEAP8[i1 + i9 >> 0] | 0;
   i12 = i11 << 24 >> 24;
   if ((i9 | 0) == 16) {
    i13 = 6;
    break;
   }
   if (!(_isxdigit(i12) | 0)) break;
   i14 = HEAP8[i1 + (i9 | 1) >> 0] | 0;
   HEAP8[i10 >> 0] = (((i12 + -48 | 0) >>> 0 < 10 ? 0 : 9) + i12 << 4) + i14 + ((i14 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   i9 = i9 + 2 | 0;
   i10 = i10 + 1 | 0;
  }
  do if ((i13 | 0) == 6) {
   if (i11 << 24 >> 24 == 69) {
    L11 : do if ((i10 | 0) != (i6 | 0)) {
     i9 = i10;
     i14 = i6;
     while (1) {
      i12 = i9 + -1 | 0;
      if (i14 >>> 0 >= i12 >>> 0) break L11;
      i15 = HEAP8[i14 >> 0] | 0;
      HEAP8[i14 >> 0] = HEAP8[i12 >> 0] | 0;
      HEAP8[i12 >> 0] = i15;
      i9 = i12;
      i14 = i14 + 1 | 0;
     }
    } while (0);
    HEAP32[i7 >> 2] = 0;
    HEAP32[i7 + 4 >> 2] = 0;
    HEAP32[i7 + 8 >> 2] = 0;
    HEAP32[i7 + 12 >> 2] = 0;
    HEAP32[i7 + 16 >> 2] = 0;
    HEAP32[i7 + 20 >> 2] = 0;
    HEAP32[i7 + 24 >> 2] = 0;
    HEAP32[i7 + 28 >> 2] = 0;
    HEAPF64[i5 >> 3] = +HEAPF64[i6 >> 3];
    i14 = _snprintf(i7, 32, 51554, i5) | 0;
    if (i14 >>> 0 > 31) break;
    HEAP32[i8 >> 2] = 0;
    HEAP32[i8 + 4 >> 2] = 0;
    HEAP32[i8 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i8, i7, i14);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i8);
    i14 = i3 + 4 | 0;
    i9 = HEAP32[i14 >> 2] | 0;
    if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
     HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    i16 = i1 + 17 | 0;
   } else i16 = i1;
   i17 = i16;
   break L1;
  } while (0);
  i17 = i1;
 } else i17 = i1; while (0);
 STACKTOP = i4;
 return i17 | 0;
}

function _quantize_fs_dither(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0;
 i5 = HEAP32[i1 + 460 >> 2] | 0;
 i6 = HEAP32[i1 + 120 >> 2] | 0;
 i7 = HEAP32[i1 + 112 >> 2] | 0;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 if ((i4 | 0) <= 0) return;
 i1 = (i6 | 0) > 0;
 i9 = i5 + 84 | 0;
 i10 = i5 + 24 | 0;
 i11 = i5 + 16 | 0;
 i12 = (i7 | 0) == 0;
 i13 = i7 + -1 | 0;
 i14 = Math_imul(i13, i6) | 0;
 i15 = 0 - i6 | 0;
 i16 = i7 + 1 | 0;
 i17 = 0;
 do {
  i18 = i3 + (i17 << 2) | 0;
  _jzero_far(HEAP32[i18 >> 2] | 0, i7);
  L6 : do if (i1) {
   i19 = i2 + (i17 << 2) | 0;
   if (i12) {
    i20 = (HEAP32[i9 >> 2] | 0) == 0;
    i21 = 0;
    while (1) {
     i22 = HEAP32[i5 + 68 + (i21 << 2) >> 2] | 0;
     HEAP16[(i20 ? i22 : i22 + (i16 << 1) | 0) >> 1] = 0;
     i21 = i21 + 1 | 0;
     if ((i21 | 0) == (i6 | 0)) break L6;
    }
   }
   i21 = 0;
   do {
    i20 = (HEAP32[i19 >> 2] | 0) + i21 | 0;
    i22 = HEAP32[i18 >> 2] | 0;
    if (!(HEAP32[i9 >> 2] | 0)) {
     i23 = i6;
     i24 = 1;
     i25 = HEAP32[i5 + 68 + (i21 << 2) >> 2] | 0;
     i26 = i20;
     i27 = i22;
    } else {
     i23 = i15;
     i24 = -1;
     i25 = (HEAP32[i5 + 68 + (i21 << 2) >> 2] | 0) + (i16 << 1) | 0;
     i26 = i20 + i14 | 0;
     i27 = i22 + i13 | 0;
    }
    i22 = HEAP32[(HEAP32[i10 >> 2] | 0) + (i21 << 2) >> 2] | 0;
    i20 = HEAP32[(HEAP32[i11 >> 2] | 0) + (i21 << 2) >> 2] | 0;
    i28 = Math_imul(i7, i24) | 0;
    i29 = 0;
    i30 = i7;
    i31 = 0;
    i32 = 0;
    i33 = i26;
    i34 = i27;
    i35 = i25;
    while (1) {
     i36 = i35;
     i35 = i35 + (i24 << 1) | 0;
     i37 = HEAPU8[i8 + ((i32 + 8 + (HEAP16[i35 >> 1] | 0) >> 4) + (HEAPU8[i33 >> 0] | 0)) >> 0] | 0;
     i38 = HEAPU8[i22 + i37 >> 0] | 0;
     HEAP8[i34 >> 0] = (HEAPU8[i34 >> 0] | 0) + i38;
     i39 = i37 - (HEAPU8[i20 + i38 >> 0] | 0) | 0;
     HEAP16[i36 >> 1] = (i39 * 3 | 0) + i31;
     i31 = (i39 * 5 | 0) + i29 | 0;
     i30 = i30 + -1 | 0;
     if (!i30) break; else {
      i29 = i39;
      i32 = i39 * 7 | 0;
      i33 = i33 + i23 | 0;
      i34 = i34 + i24 | 0;
     }
    }
    HEAP16[i25 + (i28 << 1) >> 1] = i31;
    i21 = i21 + 1 | 0;
   } while ((i21 | 0) != (i6 | 0));
  } while (0);
  HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) == 0 & 1;
  i17 = i17 + 1 | 0;
 } while ((i17 | 0) != (i4 | 0));
 return;
}

function _arParamIdeal2Observ(i1, d2, d3, i4, i5, i6) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, i18 = 0, i19 = 0;
 L1 : do switch (i6 | 0) {
 case 4:
  {
   d7 = +HEAPF64[i1 + 16 >> 3];
   d8 = +HEAPF64[i1 + 24 >> 3];
   d9 = +HEAPF64[i1 + 32 >> 3];
   d10 = +HEAPF64[i1 + 40 >> 3];
   d11 = +HEAPF64[i1 + 48 >> 3];
   d12 = +HEAPF64[i1 + 56 >> 3];
   d13 = +HEAPF64[i1 + 64 >> 3];
   d14 = (d2 - d11) * d13 / d9;
   d15 = (d3 - d12) * d13 / d10;
   d13 = d14 * d14 + d15 * d15;
   d16 = +HEAPF64[i1 >> 3] * d13 + 1.0 + d13 * (+HEAPF64[i1 + 8 >> 3] * d13);
   HEAPF64[i4 >> 3] = d11 + d9 * (d8 * (d13 + d14 * (d14 * 2.0)) + (d15 * (d7 * 2.0 * d14) + d14 * d16));
   d17 = d12 + d10 * (d15 * (d8 * 2.0 * d14) + (d7 * (d13 + d15 * (d15 * 2.0)) + d15 * d16));
   break;
  }
 case 3:
  {
   d16 = +HEAPF64[i1 >> 3];
   d15 = +HEAPF64[i1 + 16 >> 3];
   d13 = (d2 - d16) * d15;
   i18 = i1 + 8 | 0;
   d7 = d15 * (d3 - +HEAPF64[i18 >> 3]);
   if (d13 == 0.0 & d7 == 0.0) {
    HEAPF64[i4 >> 3] = d16;
    d17 = +HEAPF64[i18 >> 3];
    break L1;
   } else {
    d15 = d13 * d13 + d7 * d7;
    d14 = 1.0 - d15 * (+HEAPF64[i1 + 32 >> 3] / 1.0e8) - d15 * (d15 * (+HEAPF64[i1 + 40 >> 3] / 1.0e8 / 1.0e5));
    HEAPF64[i4 >> 3] = d16 + +HEAPF64[i1 + 24 >> 3] * (d13 * d14);
    d17 = +HEAPF64[i18 >> 3] + d7 * d14;
    break L1;
   }
   break;
  }
 case 2:
  {
   d14 = +HEAPF64[i1 >> 3];
   d7 = +HEAPF64[i1 + 16 >> 3];
   d13 = (d2 - d14) * d7;
   i18 = i1 + 8 | 0;
   d16 = d7 * (d3 - +HEAPF64[i18 >> 3]);
   if (d13 == 0.0 & d16 == 0.0) {
    HEAPF64[i4 >> 3] = d14;
    d17 = +HEAPF64[i18 >> 3];
    break L1;
   } else {
    d7 = d13 * d13 + d16 * d16;
    d15 = 1.0 - d7 * (+HEAPF64[i1 + 24 >> 3] / 1.0e8) - d7 * (d7 * (+HEAPF64[i1 + 32 >> 3] / 1.0e8 / 1.0e5));
    HEAPF64[i4 >> 3] = d14 + d13 * d15;
    d17 = +HEAPF64[i18 >> 3] + d16 * d15;
    break L1;
   }
   break;
  }
 case 1:
  {
   d15 = +HEAPF64[i1 >> 3];
   d16 = +HEAPF64[i1 + 16 >> 3];
   d13 = (d2 - d15) * d16;
   i18 = i1 + 8 | 0;
   d14 = d16 * (d3 - +HEAPF64[i18 >> 3]);
   if (d13 == 0.0 & d14 == 0.0) {
    HEAPF64[i4 >> 3] = d15;
    d17 = +HEAPF64[i18 >> 3];
    break L1;
   } else {
    d16 = 1.0 - (d13 * d13 + d14 * d14) * (+HEAPF64[i1 + 24 >> 3] / 1.0e8);
    HEAPF64[i4 >> 3] = d15 + d13 * d16;
    d17 = +HEAPF64[i18 >> 3] + d14 * d16;
    break L1;
   }
   break;
  }
 default:
  {
   i19 = -1;
   return i19 | 0;
  }
 } while (0);
 HEAPF64[i5 >> 3] = d17;
 i19 = 0;
 return i19 | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if (!(d3 >= 0.0)) {
  i6 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32586, 33) | 0, 32346, 128) | 0, 33554, 6) | 0, 232) | 0, 33561, 2) | 0, 32620, 22) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 63](i7, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
  _abort();
 }
 if (+(HEAP32[i1 + 20 >> 2] | 0) > d3) {
  d9 = +Math_pow(+(+HEAPF32[i1 + 24 >> 2]), +d3) * +(1 << i2 | 0);
  STACKTOP = i4;
  return +d9;
 } else {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32643, 50) | 0, 32346, 128) | 0, 33554, 6) | 0, 233) | 0, 33561, 2) | 0, 32694, 50) | 0;
  __ZNKSt3__28ios_base6getlocEv(i5, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i1) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 return +(0.0);
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4 + 36 | 0;
 i6 = i4 + 24 | 0;
 i7 = i4 + 12 | 0;
 i8 = i4;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 97 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 122 : 0) ? (i9 = i1 + 2 | 0, i10 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i9, i2, i3) | 0, (i10 | 0) != (i9 | 0)) : 0) ? (i9 = i3 + 4 | 0, i2 = HEAP32[i9 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i2 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i2 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 51424) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i8 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50243) | 0;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i7 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  i2 = HEAP32[i9 >> 2] | 0;
  i9 = i2 + -24 | 0;
  i3 = i9 + 11 | 0;
  if ((HEAP8[i3 >> 0] | 0) < 0) {
   i11 = HEAP32[i9 >> 2] | 0;
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i11, i5);
   HEAP32[i2 + -20 >> 2] = 0;
  } else {
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i5);
   HEAP8[i3 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i9);
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i9 = 0;
  while (1) {
   if ((i9 | 0) == 3) break;
   HEAP32[i6 + (i9 << 2) >> 2] = 0;
   i9 = i9 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i12 = i10;
 } else i12 = i1;
 STACKTOP = i4;
 return i12 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4 + 36 | 0;
 i6 = i4 + 24 | 0;
 i7 = i4 + 12 | 0;
 i8 = i4;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 97 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i9 = i1 + 2 | 0, i10 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i9, i2, i3) | 0, (i10 | 0) != (i9 | 0)) : 0) ? (i9 = i3 + 4 | 0, i2 = HEAP32[i9 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i2 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i2 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 51424) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i8 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50243) | 0;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i7 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  i2 = HEAP32[i9 >> 2] | 0;
  i9 = i2 + -24 | 0;
  i3 = i9 + 11 | 0;
  if ((HEAP8[i3 >> 0] | 0) < 0) {
   i11 = HEAP32[i9 >> 2] | 0;
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i11, i5);
   HEAP32[i2 + -20 >> 2] = 0;
  } else {
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i9, i5);
   HEAP8[i3 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i9);
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i9 = 0;
  while (1) {
   if ((i9 | 0) == 3) break;
   HEAP32[i6 + (i9 << 2) >> 2] = 0;
   i9 = i9 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i12 = i10;
 } else i12 = i1;
 STACKTOP = i4;
 return i12 | 0;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i7 = i6;
 if (((i4 - i6 | 0) / 12 | 0) >>> 0 >= i2 >>> 0) {
  _memset(i6 | 0, 0, i2 * 12 | 0) | 0;
  HEAP32[i5 >> 2] = i7 + (i2 * 12 | 0);
  return;
 }
 i8 = HEAP32[i1 >> 2] | 0;
 i9 = (i6 - i8 | 0) / 12 | 0;
 i6 = i9 + i2 | 0;
 i10 = i8;
 if (i6 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i11 = (i4 - i8 | 0) / 12 | 0;
 i4 = i11 << 1;
 i12 = i11 >>> 0 < 178956970 ? (i4 >>> 0 < i6 >>> 0 ? i6 : i4) : 357913941;
 do if (i12) if (i12 >>> 0 > 357913941) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 } else {
  i13 = __Znwm(i12 * 12 | 0) | 0;
  break;
 } else i13 = 0; while (0);
 i4 = i13 + (i9 * 12 | 0) | 0;
 i9 = i13 + (i12 * 12 | 0) | 0;
 _memset(i4 | 0, 0, i2 * 12 | 0) | 0;
 i12 = i4 + (i2 * 12 | 0) | 0;
 if ((i7 | 0) == (i10 | 0)) {
  i14 = i4;
  i15 = i10;
  i16 = i7;
  i17 = i8;
 } else {
  i8 = i7;
  i7 = i4;
  do {
   i4 = i7;
   i7 = i7 + -12 | 0;
   i2 = i8;
   i8 = i8 + -12 | 0;
   HEAP32[i7 >> 2] = 0;
   i13 = i4 + -8 | 0;
   HEAP32[i13 >> 2] = 0;
   i6 = i4 + -4 | 0;
   HEAP32[i6 >> 2] = 0;
   HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
   i4 = i2 + -8 | 0;
   HEAP32[i13 >> 2] = HEAP32[i4 >> 2];
   i13 = i2 + -4 | 0;
   HEAP32[i6 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i13 >> 2] = 0;
   HEAP32[i4 >> 2] = 0;
   HEAP32[i8 >> 2] = 0;
  } while ((i8 | 0) != (i10 | 0));
  i10 = HEAP32[i1 >> 2] | 0;
  i14 = i7;
  i15 = i10;
  i16 = HEAP32[i5 >> 2] | 0;
  i17 = i10;
 }
 HEAP32[i1 >> 2] = i14;
 HEAP32[i5 >> 2] = i12;
 HEAP32[i3 >> 2] = i9;
 if ((i16 | 0) != (i15 | 0)) {
  i9 = i16;
  do {
   i16 = i9;
   i9 = i9 + -12 | 0;
   i3 = HEAP32[i9 >> 2] | 0;
   if (i3 | 0) {
    i12 = i16 + -8 | 0;
    i16 = HEAP32[i12 >> 2] | 0;
    if ((i16 | 0) == (i3 | 0)) i18 = i3; else {
     i5 = i16;
     do {
      i16 = i5;
      i5 = i5 + -12 | 0;
      i14 = HEAP32[i5 >> 2] | 0;
      if (i14 | 0) {
       HEAP32[i16 + -8 >> 2] = i14;
       __ZdlPv(i14);
      }
     } while ((i5 | 0) != (i3 | 0));
     i18 = HEAP32[i9 >> 2] | 0;
    }
    HEAP32[i12 >> 2] = i3;
    __ZdlPv(i18);
   }
  } while ((i9 | 0) != (i15 | 0));
 }
 if (!i17) return;
 __ZdlPv(i17);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 24 | 0;
 i6 = i4 + 60 | 0;
 i7 = i4;
 i8 = i4 + 48 | 0;
 L1 : do if ((i2 - i1 | 0) >>> 0 > 8) {
  i9 = 0;
  i10 = i6;
  while (1) {
   i11 = HEAP8[i1 + i9 >> 0] | 0;
   i12 = i11 << 24 >> 24;
   if ((i9 | 0) == 8) {
    i13 = 6;
    break;
   }
   if (!(_isxdigit(i12) | 0)) break;
   i14 = HEAP8[i1 + (i9 | 1) >> 0] | 0;
   HEAP8[i10 >> 0] = (((i12 + -48 | 0) >>> 0 < 10 ? 0 : 9) + i12 << 4) + i14 + ((i14 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   i9 = i9 + 2 | 0;
   i10 = i10 + 1 | 0;
  }
  do if ((i13 | 0) == 6) {
   if (i11 << 24 >> 24 == 69) {
    L11 : do if ((i10 | 0) != (i6 | 0)) {
     i9 = i10;
     i14 = i6;
     while (1) {
      i12 = i9 + -1 | 0;
      if (i14 >>> 0 >= i12 >>> 0) break L11;
      i15 = HEAP8[i14 >> 0] | 0;
      HEAP8[i14 >> 0] = HEAP8[i12 >> 0] | 0;
      HEAP8[i12 >> 0] = i15;
      i9 = i12;
      i14 = i14 + 1 | 0;
     }
    } while (0);
    HEAP32[i7 >> 2] = 0;
    HEAP32[i7 + 4 >> 2] = 0;
    HEAP32[i7 + 8 >> 2] = 0;
    HEAP32[i7 + 12 >> 2] = 0;
    HEAP32[i7 + 16 >> 2] = 0;
    HEAP32[i7 + 20 >> 2] = 0;
    HEAPF64[i5 >> 3] = +HEAPF32[i6 >> 2];
    i14 = _snprintf(i7, 24, 51557, i5) | 0;
    if (i14 >>> 0 > 23) break;
    HEAP32[i8 >> 2] = 0;
    HEAP32[i8 + 4 >> 2] = 0;
    HEAP32[i8 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i8, i7, i14);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i8);
    i14 = i3 + 4 | 0;
    i9 = HEAP32[i14 >> 2] | 0;
    if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
     HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    i16 = i1 + 9 | 0;
   } else i16 = i1;
   i17 = i16;
   break L1;
  } while (0);
  i17 = i1;
 } else i17 = i1; while (0);
 STACKTOP = i4;
 return i17 | 0;
}

function _qsort(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i6 = i5;
 i7 = i5 + 192 | 0;
 i8 = Math_imul(i3, i2) | 0;
 i2 = i7;
 HEAP32[i2 >> 2] = 1;
 HEAP32[i2 + 4 >> 2] = 0;
 L1 : do if (i8 | 0) {
  i2 = 0 - i3 | 0;
  HEAP32[i6 + 4 >> 2] = i3;
  HEAP32[i6 >> 2] = i3;
  i9 = 2;
  i10 = i3;
  i11 = i3;
  while (1) {
   i12 = i10 + i3 + i11 | 0;
   HEAP32[i6 + (i9 << 2) >> 2] = i12;
   if (i12 >>> 0 < i8 >>> 0) {
    i13 = i11;
    i9 = i9 + 1 | 0;
    i11 = i12;
    i10 = i13;
   } else break;
  }
  i10 = i1 + i8 + i2 | 0;
  if (i10 >>> 0 > i1 >>> 0) {
   i11 = i10;
   i9 = 1;
   i13 = i1;
   i12 = 1;
   while (1) {
    do if ((i12 & 3 | 0) != 3) {
     i14 = i9 + -1 | 0;
     if ((HEAP32[i6 + (i14 << 2) >> 2] | 0) >>> 0 < (i11 - i13 | 0) >>> 0) _sift(i13, i3, i4, i9, i6); else _trinkle(i13, i3, i4, i7, i9, 0, i6);
     if ((i9 | 0) == 1) {
      _shl(i7, 1);
      i15 = 0;
      break;
     } else {
      _shl(i7, i14);
      i15 = 1;
      break;
     }
    } else {
     _sift(i13, i3, i4, i9, i6);
     _shr(i7, 2);
     i15 = i9 + 2 | 0;
    } while (0);
    i14 = HEAP32[i7 >> 2] | 1;
    HEAP32[i7 >> 2] = i14;
    i16 = i13 + i3 | 0;
    if (i16 >>> 0 < i10 >>> 0) {
     i9 = i15;
     i13 = i16;
     i12 = i14;
    } else {
     i17 = i15;
     i18 = i16;
     i19 = i14;
     break;
    }
   }
  } else {
   i17 = 1;
   i18 = i1;
   i19 = 1;
  }
  _trinkle(i18, i3, i4, i7, i17, 0, i6);
  i12 = i7 + 4 | 0;
  i13 = i18;
  i9 = i17;
  i10 = i19;
  while (1) {
   if ((i9 | 0) == 1 & (i10 | 0) == 1) if (!(HEAP32[i12 >> 2] | 0)) break L1; else i20 = 19; else if ((i9 | 0) < 2) i20 = 19; else {
    _shl(i7, 2);
    i11 = i9 + -2 | 0;
    HEAP32[i7 >> 2] = HEAP32[i7 >> 2] ^ 7;
    _shr(i7, 1);
    _trinkle(i13 + (0 - (HEAP32[i6 + (i11 << 2) >> 2] | 0)) + i2 | 0, i3, i4, i7, i9 + -1 | 0, 1, i6);
    _shl(i7, 1);
    i14 = HEAP32[i7 >> 2] | 1;
    HEAP32[i7 >> 2] = i14;
    i16 = i13 + i2 | 0;
    _trinkle(i16, i3, i4, i7, i11, 1, i6);
    i21 = i16;
    i22 = i11;
    i23 = i14;
   }
   if ((i20 | 0) == 19) {
    i20 = 0;
    i14 = _pntz(i7) | 0;
    _shr(i7, i14);
    i21 = i13 + i2 | 0;
    i22 = i14 + i9 | 0;
    i23 = HEAP32[i7 >> 2] | 0;
   }
   i13 = i21;
   i9 = i22;
   i10 = i23;
  }
 } while (0);
 STACKTOP = i5;
 return;
}

function _arUtilMatMul(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0, i18 = 0;
 i4 = i1 + 8 | 0;
 i5 = i1 + 16 | 0;
 i6 = i2 + 32 | 0;
 i7 = i2 + 64 | 0;
 HEAPF64[i3 >> 3] = +HEAPF64[i1 >> 3] * +HEAPF64[i2 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i6 >> 3] + +HEAPF64[i5 >> 3] * +HEAPF64[i7 >> 3];
 i8 = i2 + 8 | 0;
 i9 = i2 + 40 | 0;
 i10 = i2 + 72 | 0;
 HEAPF64[i3 + 8 >> 3] = +HEAPF64[i1 >> 3] * +HEAPF64[i8 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i9 >> 3] + +HEAPF64[i5 >> 3] * +HEAPF64[i10 >> 3];
 i11 = i2 + 16 | 0;
 i12 = i2 + 48 | 0;
 i13 = i2 + 80 | 0;
 HEAPF64[i3 + 16 >> 3] = +HEAPF64[i1 >> 3] * +HEAPF64[i11 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i12 >> 3] + +HEAPF64[i5 >> 3] * +HEAPF64[i13 >> 3];
 i14 = i2 + 24 | 0;
 i15 = i2 + 56 | 0;
 i16 = i2 + 88 | 0;
 d17 = +HEAPF64[i1 >> 3] * +HEAPF64[i14 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i15 >> 3] + +HEAPF64[i5 >> 3] * +HEAPF64[i16 >> 3];
 i5 = i3 + 24 | 0;
 HEAPF64[i5 >> 3] = d17;
 HEAPF64[i5 >> 3] = +HEAPF64[i1 + 24 >> 3] + d17;
 i5 = i1 + 32 | 0;
 i4 = i1 + 40 | 0;
 i18 = i1 + 48 | 0;
 HEAPF64[i3 + 32 >> 3] = +HEAPF64[i5 >> 3] * +HEAPF64[i2 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i6 >> 3] + +HEAPF64[i18 >> 3] * +HEAPF64[i7 >> 3];
 HEAPF64[i3 + 40 >> 3] = +HEAPF64[i5 >> 3] * +HEAPF64[i8 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i9 >> 3] + +HEAPF64[i18 >> 3] * +HEAPF64[i10 >> 3];
 HEAPF64[i3 + 48 >> 3] = +HEAPF64[i5 >> 3] * +HEAPF64[i11 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i12 >> 3] + +HEAPF64[i18 >> 3] * +HEAPF64[i13 >> 3];
 d17 = +HEAPF64[i5 >> 3] * +HEAPF64[i14 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i15 >> 3] + +HEAPF64[i18 >> 3] * +HEAPF64[i16 >> 3];
 i18 = i3 + 56 | 0;
 HEAPF64[i18 >> 3] = d17;
 HEAPF64[i18 >> 3] = +HEAPF64[i1 + 56 >> 3] + d17;
 i18 = i1 + 64 | 0;
 i4 = i1 + 72 | 0;
 i5 = i1 + 80 | 0;
 HEAPF64[i3 + 64 >> 3] = +HEAPF64[i18 >> 3] * +HEAPF64[i2 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i6 >> 3] + +HEAPF64[i5 >> 3] * +HEAPF64[i7 >> 3];
 HEAPF64[i3 + 72 >> 3] = +HEAPF64[i18 >> 3] * +HEAPF64[i8 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i9 >> 3] + +HEAPF64[i5 >> 3] * +HEAPF64[i10 >> 3];
 HEAPF64[i3 + 80 >> 3] = +HEAPF64[i18 >> 3] * +HEAPF64[i11 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i12 >> 3] + +HEAPF64[i5 >> 3] * +HEAPF64[i13 >> 3];
 d17 = +HEAPF64[i18 >> 3] * +HEAPF64[i14 >> 3] + +HEAPF64[i4 >> 3] * +HEAPF64[i15 >> 3] + +HEAPF64[i5 >> 3] * +HEAPF64[i16 >> 3];
 i16 = i3 + 88 | 0;
 HEAPF64[i16 >> 3] = d17;
 HEAPF64[i16 >> 3] = +HEAPF64[i1 + 88 >> 3] + d17;
 return 0;
}

function _arParamChangeSize(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var d5 = 0.0, d6 = 0.0, i7 = 0;
 d5 = +(i2 | 0) / +(HEAP32[i1 >> 2] | 0);
 d6 = +(i3 | 0) / +(HEAP32[i1 + 4 >> 2] | 0);
 HEAP32[i4 >> 2] = i2;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAPF64[i4 + 8 >> 3] = d5 * +HEAPF64[i1 + 8 >> 3];
 HEAPF64[i4 + 40 >> 3] = d6 * +HEAPF64[i1 + 40 >> 3];
 HEAPF64[i4 + 72 >> 3] = +HEAPF64[i1 + 72 >> 3];
 HEAPF64[i4 + 16 >> 3] = d5 * +HEAPF64[i1 + 16 >> 3];
 HEAPF64[i4 + 48 >> 3] = d6 * +HEAPF64[i1 + 48 >> 3];
 HEAPF64[i4 + 80 >> 3] = +HEAPF64[i1 + 80 >> 3];
 HEAPF64[i4 + 24 >> 3] = d5 * +HEAPF64[i1 + 24 >> 3];
 HEAPF64[i4 + 56 >> 3] = d6 * +HEAPF64[i1 + 56 >> 3];
 HEAPF64[i4 + 88 >> 3] = +HEAPF64[i1 + 88 >> 3];
 HEAPF64[i4 + 32 >> 3] = d5 * +HEAPF64[i1 + 32 >> 3];
 HEAPF64[i4 + 64 >> 3] = d6 * +HEAPF64[i1 + 64 >> 3];
 HEAPF64[i4 + 96 >> 3] = +HEAPF64[i1 + 96 >> 3];
 i3 = HEAP32[i1 + 176 >> 2] | 0;
 switch (i3 | 0) {
 case 4:
  {
   HEAPF64[i4 + 104 >> 3] = +HEAPF64[i1 + 104 >> 3];
   HEAPF64[i4 + 112 >> 3] = +HEAPF64[i1 + 112 >> 3];
   HEAPF64[i4 + 120 >> 3] = +HEAPF64[i1 + 120 >> 3];
   HEAPF64[i4 + 128 >> 3] = +HEAPF64[i1 + 128 >> 3];
   HEAPF64[i4 + 136 >> 3] = d5 * +HEAPF64[i1 + 136 >> 3];
   HEAPF64[i4 + 144 >> 3] = d6 * +HEAPF64[i1 + 144 >> 3];
   HEAPF64[i4 + 152 >> 3] = d5 * +HEAPF64[i1 + 152 >> 3];
   HEAPF64[i4 + 160 >> 3] = d6 * +HEAPF64[i1 + 160 >> 3];
   HEAPF64[i4 + 168 >> 3] = +HEAPF64[i1 + 168 >> 3];
   break;
  }
 case 3:
  {
   HEAPF64[i4 + 104 >> 3] = d5 * +HEAPF64[i1 + 104 >> 3];
   HEAPF64[i4 + 112 >> 3] = d6 * +HEAPF64[i1 + 112 >> 3];
   HEAPF64[i4 + 120 >> 3] = +HEAPF64[i1 + 120 >> 3];
   HEAPF64[i4 + 128 >> 3] = +HEAPF64[i1 + 128 >> 3];
   HEAPF64[i4 + 136 >> 3] = +HEAPF64[i1 + 136 >> 3] / (d5 * d6);
   HEAPF64[i4 + 144 >> 3] = +HEAPF64[i1 + 144 >> 3] / (d6 * (d5 * d5 * d6));
   break;
  }
 case 2:
  {
   HEAPF64[i4 + 104 >> 3] = d5 * +HEAPF64[i1 + 104 >> 3];
   HEAPF64[i4 + 112 >> 3] = d6 * +HEAPF64[i1 + 112 >> 3];
   HEAPF64[i4 + 120 >> 3] = +HEAPF64[i1 + 120 >> 3];
   HEAPF64[i4 + 128 >> 3] = +HEAPF64[i1 + 128 >> 3] / (d5 * d6);
   HEAPF64[i4 + 136 >> 3] = +HEAPF64[i1 + 136 >> 3] / (d6 * (d5 * d5 * d6));
   break;
  }
 case 1:
  {
   HEAPF64[i4 + 104 >> 3] = d5 * +HEAPF64[i1 + 104 >> 3];
   HEAPF64[i4 + 112 >> 3] = d6 * +HEAPF64[i1 + 112 >> 3];
   HEAPF64[i4 + 120 >> 3] = +HEAPF64[i1 + 120 >> 3];
   HEAPF64[i4 + 128 >> 3] = +HEAPF64[i1 + 128 >> 3] / (d5 * d6);
   break;
  }
 default:
  {
   i7 = -1;
   return i7 | 0;
  }
 }
 HEAP32[i4 + 176 >> 2] = i3;
 i7 = 0;
 return i7 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i5 = i4 + 48 | 0;
 i6 = i4 + 40 | 0;
 i7 = i4;
 i8 = i4 + 72 | 0;
 L1 : do if ((i2 - i1 | 0) >>> 0 > 20) {
  i9 = 0;
  i10 = i6;
  while (1) {
   i11 = HEAP8[i1 + i9 >> 0] | 0;
   i12 = i11 << 24 >> 24;
   if ((i9 | 0) == 20) {
    i13 = 6;
    break;
   }
   if (!(_isxdigit(i12) | 0)) break;
   i14 = HEAP8[i1 + (i9 | 1) >> 0] | 0;
   HEAP8[i10 >> 0] = (((i12 + -48 | 0) >>> 0 < 10 ? 0 : 9) + i12 << 4) + i14 + ((i14 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   i9 = i9 + 2 | 0;
   i10 = i10 + 1 | 0;
  }
  do if ((i13 | 0) == 6) {
   if (i11 << 24 >> 24 == 69) {
    L11 : do if ((i10 | 0) != (i6 | 0)) {
     i9 = i10;
     i14 = i6;
     while (1) {
      i12 = i9 + -1 | 0;
      if (i14 >>> 0 >= i12 >>> 0) break L11;
      i15 = HEAP8[i14 >> 0] | 0;
      HEAP8[i14 >> 0] = HEAP8[i12 >> 0] | 0;
      HEAP8[i12 >> 0] = i15;
      i9 = i12;
      i14 = i14 + 1 | 0;
     }
    } while (0);
    i14 = i7;
    i9 = i14 + 40 | 0;
    do {
     HEAP32[i14 >> 2] = 0;
     i14 = i14 + 4 | 0;
    } while ((i14 | 0) < (i9 | 0));
    HEAPF64[i5 >> 3] = +HEAPF64[i6 >> 3];
    i14 = _snprintf(i7, 40, 51549, i5) | 0;
    if (i14 >>> 0 > 39) break;
    HEAP32[i8 >> 2] = 0;
    HEAP32[i8 + 4 >> 2] = 0;
    HEAP32[i8 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i8, i7, i14);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i8);
    i14 = i3 + 4 | 0;
    i9 = HEAP32[i14 >> 2] | 0;
    if (i9 >>> 0 < (HEAP32[i3 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i5);
     HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i3, i5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    i16 = i1 + 21 | 0;
   } else i16 = i1;
   i17 = i16;
   break L1;
  } while (0);
  i17 = i1;
 } else i17 = i1; while (0);
 STACKTOP = i4;
 return i17 | 0;
}

function _arPattCreateHandle2(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i4 = i3 + 56 | 0;
 i5 = i3 + 48 | 0;
 if ((i1 + -16 | 0) >>> 0 > 48 | (i2 | 0) < 1) {
  i6 = 0;
  STACKTOP = i3;
  return i6 | 0;
 }
 i7 = _malloc(32) | 0;
 if (!i7) {
  _arLog(0, 3, 20510, i3);
  _exit(1);
 }
 HEAP32[i7 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = i2;
 HEAP32[i7 + 28 >> 2] = i1;
 i8 = _malloc(i2 << 2) | 0;
 HEAP32[i7 + 8 >> 2] = i8;
 if (!i8) {
  _arLog(0, 3, 20510, i3 + 8 | 0);
  _exit(1);
 }
 i9 = i2 << 4;
 i10 = _malloc(i9) | 0;
 HEAP32[i7 + 12 >> 2] = i10;
 if (!i10) {
  _arLog(0, 3, 20510, i3 + 16 | 0);
  _exit(1);
 }
 i11 = _malloc(i9) | 0;
 HEAP32[i7 + 20 >> 2] = i11;
 if (!i11) {
  _arLog(0, 3, 20510, i3 + 24 | 0);
  _exit(1);
 }
 i9 = i2 << 5;
 i12 = _malloc(i9) | 0;
 HEAP32[i7 + 16 >> 2] = i12;
 if (!i12) {
  _arLog(0, 3, 20510, i3 + 32 | 0);
  _exit(1);
 }
 i12 = _malloc(i9) | 0;
 HEAP32[i7 + 24 >> 2] = i12;
 if (!i12) {
  _arLog(0, 3, 20510, i3 + 40 | 0);
  _exit(1);
 }
 i12 = Math_imul(i1, i1) | 0;
 i1 = i12 * 12 | 0;
 i9 = i12 << 2;
 i12 = 0;
 while (1) {
  HEAP32[i8 + (i12 << 2) >> 2] = 0;
  i13 = i12 << 2;
  i14 = _malloc(i1) | 0;
  HEAP32[i10 + (i13 << 2) >> 2] = i14;
  if (!i14) {
   i15 = 17;
   break;
  }
  i14 = _malloc(i9) | 0;
  HEAP32[i11 + (i13 << 2) >> 2] = i14;
  if (!i14) {
   i15 = 19;
   break;
  }
  i14 = _malloc(i1) | 0;
  i16 = i13 | 1;
  HEAP32[i10 + (i16 << 2) >> 2] = i14;
  if (!i14) {
   i15 = 17;
   break;
  }
  i14 = _malloc(i9) | 0;
  HEAP32[i11 + (i16 << 2) >> 2] = i14;
  if (!i14) {
   i15 = 19;
   break;
  }
  i14 = _malloc(i1) | 0;
  i16 = i13 | 2;
  HEAP32[i10 + (i16 << 2) >> 2] = i14;
  if (!i14) {
   i15 = 17;
   break;
  }
  i14 = _malloc(i9) | 0;
  HEAP32[i11 + (i16 << 2) >> 2] = i14;
  if (!i14) {
   i15 = 19;
   break;
  }
  i14 = _malloc(i1) | 0;
  i16 = i13 | 3;
  HEAP32[i10 + (i16 << 2) >> 2] = i14;
  if (!i14) {
   i15 = 17;
   break;
  }
  i14 = _malloc(i9) | 0;
  HEAP32[i11 + (i16 << 2) >> 2] = i14;
  if (!i14) {
   i15 = 19;
   break;
  }
  i12 = i12 + 1 | 0;
  if ((i12 | 0) >= (i2 | 0)) {
   i6 = i7;
   i15 = 20;
   break;
  }
 }
 if ((i15 | 0) == 17) {
  _arLog(0, 3, 20510, i5);
  _exit(1);
 } else if ((i15 | 0) == 19) {
  _arLog(0, 3, 20510, i4);
  _exit(1);
 } else if ((i15 | 0) == 20) {
  STACKTOP = i3;
  return i6 | 0;
 }
 return 0;
}

function __ZNK6vision5Timer19duration_in_secondsEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, d8 = 0.0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 d4 = +HEAPF64[i1 >> 3];
 if (!(d4 >= 0.0)) {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 33406, 38) | 0, 33445, 108) | 0, 33554, 6) | 0, 80) | 0, 33561, 2) | 0, 33564, 26) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 d8 = +HEAPF64[i1 + 8 >> 3];
 if (!(d8 >= 0.0)) {
  i1 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 33591, 37) | 0, 33445, 108) | 0, 33554, 6) | 0, 81) | 0, 33561, 2) | 0, 33629, 26) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58484) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i1, i7) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  _abort();
 } else {
  STACKTOP = i2;
  return +(d8 - d4);
 }
 return +(0.0);
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKcm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i1 + 11 | 0;
 i6 = HEAP8[i5 >> 0] | 0;
 i7 = i6 << 24 >> 24 < 0;
 if (i7) {
  i8 = HEAP32[i1 + 4 >> 2] | 0;
  i9 = i8 >>> 0 < 11 ? i8 : 11;
  i10 = i8;
  i11 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i8 = i6 & 255;
  i9 = i8 >>> 0 < 11 ? i8 : 11;
  i10 = i8;
  i11 = 10;
 }
 if ((i9 - i10 + i11 | 0) >>> 0 < i2 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i1, i11, i2 - i9 + i10 - i11 | 0, i10, 0, i9, i2, 51664); else {
  if (i7) i12 = HEAP32[i1 >> 2] | 0; else i12 = i1;
  do if ((i9 | 0) != (i2 | 0)) {
   i7 = i10 - i9 | 0;
   if (!i7) {
    i13 = i9;
    i14 = 0;
    i15 = 51664;
    i16 = i2;
    i17 = 17;
   } else {
    if (i9 >>> 0 > i2 >>> 0) {
     __ZNSt3__211char_traitsIcE4moveEPcPKcm(i12, 51664, i2) | 0;
     __ZNSt3__211char_traitsIcE4moveEPcPKcm(i12 + i2 | 0, i12 + i9 | 0, i7) | 0;
     i18 = i9;
     i19 = i2;
     break;
    }
    do if (i12 >>> 0 < 51664 >>> 0 & (i12 + i10 | 0) >>> 0 > 51664 >>> 0) if ((i12 + i9 | 0) >>> 0 > 51664 >>> 0) {
     __ZNSt3__211char_traitsIcE4moveEPcPKcm(i12, 51664, i9) | 0;
     i20 = 0;
     i21 = i9;
     i22 = 51664 + i2 | 0;
     i23 = i2 - i9 | 0;
     break;
    } else {
     i20 = i9;
     i21 = 0;
     i22 = 51664 + (i2 - i9) | 0;
     i23 = i2;
     break;
    } else {
     i20 = i9;
     i21 = 0;
     i22 = 51664;
     i23 = i2;
    } while (0);
    i11 = i12 + i21 | 0;
    __ZNSt3__211char_traitsIcE4moveEPcPKcm(i11 + i23 | 0, i11 + i20 | 0, i7) | 0;
    i13 = i20;
    i14 = i21;
    i15 = i22;
    i16 = i23;
    i17 = 17;
   }
  } else {
   i13 = i2;
   i14 = 0;
   i15 = 51664;
   i16 = i2;
   i17 = 17;
  } while (0);
  if ((i17 | 0) == 17) {
   __ZNSt3__211char_traitsIcE4moveEPcPKcm(i12 + i14 | 0, i15, i16) | 0;
   i18 = i13;
   i19 = i16;
  }
  i16 = i19 - i18 + i10 | 0;
  if ((HEAP8[i5 >> 0] | 0) < 0) HEAP32[i1 + 4 >> 2] = i16; else HEAP8[i5 >> 0] = i16;
  HEAP8[i4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i12 + i16 | 0, i4);
 }
 STACKTOP = i3;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4 + 36 | 0;
 i6 = i4 + 24 | 0;
 i7 = i4 + 12 | 0;
 i8 = i4;
 i9 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
 if ((i9 | 0) != (i1 | 0) ? (i2 = i3 + 4 | 0, i10 = HEAP32[i2 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i10 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i10 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 50516) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i10 = 0;
  while (1) {
   if ((i10 | 0) == 3) break;
   HEAP32[i8 + (i10 << 2) >> 2] = 0;
   i10 = i10 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50243) | 0;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i10 = 0;
  while (1) {
   if ((i10 | 0) == 3) break;
   HEAP32[i7 + (i10 << 2) >> 2] = 0;
   i10 = i10 + 1 | 0;
  }
  i10 = HEAP32[i2 >> 2] | 0;
  i2 = i10 + -24 | 0;
  i3 = i2 + 11 | 0;
  if ((HEAP8[i3 >> 0] | 0) < 0) {
   i11 = HEAP32[i2 >> 2] | 0;
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i11, i5);
   HEAP32[i10 + -20 >> 2] = 0;
  } else {
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i5);
   HEAP8[i3 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i2);
  HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i6 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i12 = i9;
 } else i12 = i1;
 STACKTOP = i4;
 return i12 | 0;
}

function _jinit_d_main_controller(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i3 = i1 + 4 | 0;
 i4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 80) | 0;
 i5 = i1 + 424 | 0;
 HEAP32[i5 >> 2] = i4;
 HEAP32[i4 >> 2] = 45;
 if (i2 | 0) {
  i2 = HEAP32[i1 >> 2] | 0;
  HEAP32[i2 + 20 >> 2] = 4;
  FUNCTION_TABLE_vi[HEAP32[i2 >> 2] & 255](i1);
 }
 i2 = i1 + 316 | 0;
 i6 = HEAP32[i2 >> 2] | 0;
 if (!(HEAP32[(HEAP32[i1 + 452 >> 2] | 0) + 8 >> 2] | 0)) {
  i7 = i1 + 36 | 0;
  i8 = i6;
  i9 = i7;
  i10 = HEAP32[i7 >> 2] | 0;
  i11 = i6;
 } else {
  if ((i6 | 0) < 2) {
   i7 = HEAP32[i1 >> 2] | 0;
   HEAP32[i7 + 20 >> 2] = 47;
   FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i1);
   i12 = HEAP32[i2 >> 2] | 0;
  } else i12 = i6;
  i6 = HEAP32[i5 >> 2] | 0;
  i5 = i1 + 36 | 0;
  i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, HEAP32[i5 >> 2] << 3) | 0;
  i13 = i6 + 56 | 0;
  HEAP32[i13 >> 2] = i7;
  i14 = HEAP32[i5 >> 2] | 0;
  i15 = i6 + 60 | 0;
  HEAP32[i15 >> 2] = i7 + (i14 << 2);
  if ((i14 | 0) > 0) {
   i7 = i12 + 4 | 0;
   i12 = HEAP32[i1 + 216 >> 2] | 0;
   i6 = 0;
   while (1) {
    i16 = Math_imul(HEAP32[i12 + 36 >> 2] | 0, HEAP32[i12 + 12 >> 2] | 0) | 0;
    i17 = (i16 | 0) / (HEAP32[i2 >> 2] | 0) | 0;
    i16 = Math_imul(i17, i7) | 0;
    i18 = (FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, i16 << 3) | 0) + (i17 << 2) | 0;
    HEAP32[(HEAP32[i13 >> 2] | 0) + (i6 << 2) >> 2] = i18;
    HEAP32[(HEAP32[i15 >> 2] | 0) + (i6 << 2) >> 2] = i18 + (i16 << 2);
    i6 = i6 + 1 | 0;
    i16 = HEAP32[i5 >> 2] | 0;
    if ((i6 | 0) >= (i16 | 0)) {
     i19 = i16;
     break;
    } else i12 = i12 + 84 | 0;
   }
  } else i19 = i14;
  i14 = HEAP32[i2 >> 2] | 0;
  i8 = i14 + 2 | 0;
  i9 = i5;
  i10 = i19;
  i11 = i14;
 }
 if ((i10 | 0) <= 0) return;
 i10 = i4 + 8 | 0;
 i4 = 0;
 i14 = HEAP32[i1 + 216 >> 2] | 0;
 i19 = i11;
 while (1) {
  i11 = HEAP32[i14 + 36 >> 2] | 0;
  i5 = (Math_imul(i11, HEAP32[i14 + 12 >> 2] | 0) | 0) / (i19 | 0) | 0;
  i12 = Math_imul(HEAP32[i14 + 28 >> 2] | 0, i11) | 0;
  i11 = Math_imul(i5, i8) | 0;
  i5 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 15](i1, 1, i12, i11) | 0;
  HEAP32[i10 + (i4 << 2) >> 2] = i5;
  i5 = i4 + 1 | 0;
  if ((i5 | 0) >= (HEAP32[i9 >> 2] | 0)) break;
  i4 = i5;
  i14 = i14 + 84 | 0;
  i19 = HEAP32[i2 >> 2] | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 40 | 0;
 i6 = i4 + 12 | 0;
 i7 = i4 + 24 | 0;
 i8 = i4;
 L1 : do if ((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 116 : 0) {
  i9 = HEAP8[i1 + 1 >> 0] | 0;
  switch (i9 << 24 >> 24) {
  case 105:
  case 101:
   break;
  default:
   {
    i10 = i1;
    break L1;
   }
  }
  i11 = i1 + 2 | 0;
  if (i9 << 24 >> 24 == 101) i12 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i11, i2, i3) | 0; else i12 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i11, i2, i3) | 0;
  if ((i12 | 0) != (i11 | 0) ? (i11 = i3 + 4 | 0, i9 = HEAP32[i11 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i9 | 0)) : 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i9 + -24 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 50448) | 0;
   HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i9 = 0;
   while (1) {
    if ((i9 | 0) == 3) break;
    HEAP32[i8 + (i9 << 2) >> 2] = 0;
    i9 = i9 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50243) | 0;
   HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   i9 = 0;
   while (1) {
    if ((i9 | 0) == 3) break;
    HEAP32[i7 + (i9 << 2) >> 2] = 0;
    i9 = i9 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i11 >> 2] | 0) + -24 | 0, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   i10 = i12;
  } else i10 = i1;
 } else i10 = i1; while (0);
 STACKTOP = i4;
 return i10 | 0;
}

function _next_marker(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i2 = HEAP32[i1 + 24 >> 2] | 0;
 i3 = i2 + 4 | 0;
 i4 = i2 + 12 | 0;
 i5 = i1 + 440 | 0;
 i6 = HEAP32[i3 >> 2] | 0;
 i7 = HEAP32[i2 >> 2] | 0;
 L1 : while (1) {
  if (!i6) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i4 >> 2] & 127](i1) | 0)) {
    i8 = 0;
    i9 = 21;
    break;
   }
   i10 = HEAP32[i3 >> 2] | 0;
   i11 = HEAP32[i2 >> 2] | 0;
  } else {
   i10 = i6;
   i11 = i7;
  }
  i12 = i10 + -1 | 0;
  i13 = i11 + 1 | 0;
  if ((HEAP8[i11 >> 0] | 0) == -1) {
   i14 = i12;
   i15 = i13;
  } else {
   i16 = i13;
   i13 = i12;
   while (1) {
    i12 = (HEAP32[i5 >> 2] | 0) + 24 | 0;
    HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 1;
    HEAP32[i2 >> 2] = i16;
    HEAP32[i3 >> 2] = i13;
    if (!i13) {
     if (!(FUNCTION_TABLE_ii[HEAP32[i4 >> 2] & 127](i1) | 0)) {
      i8 = 0;
      i9 = 21;
      break L1;
     }
     i17 = HEAP32[i3 >> 2] | 0;
     i18 = HEAP32[i2 >> 2] | 0;
    } else {
     i17 = i13;
     i18 = i16;
    }
    i12 = i17 + -1 | 0;
    i19 = i18 + 1 | 0;
    if ((HEAP8[i18 >> 0] | 0) == -1) {
     i14 = i12;
     i15 = i19;
     break;
    } else {
     i16 = i19;
     i13 = i12;
    }
   }
  }
  i20 = i14;
  i21 = i15;
  do {
   if (!i20) {
    if (!(FUNCTION_TABLE_ii[HEAP32[i4 >> 2] & 127](i1) | 0)) {
     i8 = 0;
     i9 = 21;
     break L1;
    }
    i22 = HEAP32[i3 >> 2] | 0;
    i23 = HEAP32[i2 >> 2] | 0;
   } else {
    i22 = i20;
    i23 = i21;
   }
   i20 = i22 + -1 | 0;
   i21 = i23 + 1 | 0;
   i24 = HEAP8[i23 >> 0] | 0;
  } while (i24 << 24 >> 24 == -1);
  i13 = (HEAP32[i5 >> 2] | 0) + 24 | 0;
  i25 = HEAP32[i13 >> 2] | 0;
  if (i24 << 24 >> 24) {
   i9 = 18;
   break;
  }
  HEAP32[i13 >> 2] = i25 + 2;
  HEAP32[i2 >> 2] = i21;
  HEAP32[i3 >> 2] = i20;
  i6 = i20;
  i7 = i21;
 }
 if ((i9 | 0) == 18) {
  i7 = i24 & 255;
  if (i25 | 0) {
   i24 = HEAP32[i1 >> 2] | 0;
   HEAP32[i24 + 20 >> 2] = 116;
   HEAP32[i24 + 24 >> 2] = i25;
   HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i7;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, -1);
   HEAP32[(HEAP32[i5 >> 2] | 0) + 24 >> 2] = 0;
  }
  HEAP32[i1 + 416 >> 2] = i7;
  HEAP32[i2 >> 2] = i21;
  HEAP32[i3 >> 2] = i20;
  i8 = 1;
  return i8 | 0;
 } else if ((i9 | 0) == 21) return i8 | 0;
 return 0;
}

function __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i6 = i2;
 if ((((i5 & 4 | 0) != 0 ? (i6 - i1 | 0) > 2 : 0) ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) i7 = (HEAP8[i1 + 2 >> 0] | 0) == -65 ? i1 + 3 | 0 : i1; else i7 = i1;
 i5 = 0;
 i8 = i7;
 L7 : while (1) {
  if (!(i5 >>> 0 < i3 >>> 0 & i8 >>> 0 < i2 >>> 0)) break;
  i7 = HEAP8[i8 >> 0] | 0;
  i9 = i7 & 255;
  if (i9 >>> 0 > i4 >>> 0) break;
  do if (i7 << 24 >> 24 <= -1) {
   if ((i7 & 255) < 194) break L7;
   if ((i7 & 255) < 224) {
    if ((i6 - i8 | 0) < 2) break L7;
    i10 = HEAPU8[i8 + 1 >> 0] | 0;
    if ((i10 & 192 | 0) != 128) break L7;
    if ((i10 & 63 | i9 << 6 & 1984) >>> 0 > i4 >>> 0) break L7; else {
     i11 = i5;
     i12 = i8 + 2 | 0;
     break;
    }
   }
   if ((i7 & 255) < 240) {
    if ((i6 - i8 | 0) < 3) break L7;
    i10 = HEAP8[i8 + 1 >> 0] | 0;
    i13 = HEAP8[i8 + 2 >> 0] | 0;
    switch (i7 << 24 >> 24) {
    case -32:
     {
      if ((i10 & -32) << 24 >> 24 != -96) break L7;
      break;
     }
    case -19:
     {
      if ((i10 & -32) << 24 >> 24 != -128) break L7;
      break;
     }
    default:
     if ((i10 & -64) << 24 >> 24 != -128) break L7;
    }
    i14 = i13 & 255;
    if ((i14 & 192 | 0) != 128) break L7;
    if (((i10 & 63) << 6 | i9 << 12 & 61440 | i14 & 63) >>> 0 > i4 >>> 0) break L7; else {
     i11 = i5;
     i12 = i8 + 3 | 0;
     break;
    }
   }
   if ((i7 & 255) >= 245) break L7;
   if ((i3 - i5 | 0) >>> 0 < 2 | (i6 - i8 | 0) < 4) break L7;
   i14 = HEAP8[i8 + 1 >> 0] | 0;
   i10 = HEAP8[i8 + 2 >> 0] | 0;
   i13 = HEAP8[i8 + 3 >> 0] | 0;
   switch (i7 << 24 >> 24) {
   case -16:
    {
     if ((i14 + 112 & 255) >= 48) break L7;
     break;
    }
   case -12:
    {
     if ((i14 & -16) << 24 >> 24 != -128) break L7;
     break;
    }
   default:
    if ((i14 & -64) << 24 >> 24 != -128) break L7;
   }
   i15 = i10 & 255;
   if ((i15 & 192 | 0) != 128) break L7;
   i10 = i13 & 255;
   if ((i10 & 192 | 0) != 128) break L7;
   if (((i14 & 63) << 12 | i9 << 18 & 1835008 | i15 << 6 & 4032 | i10 & 63) >>> 0 > i4 >>> 0) break L7; else {
    i11 = i5 + 1 | 0;
    i12 = i8 + 4 | 0;
   }
  } else {
   i11 = i5;
   i12 = i8 + 1 | 0;
  } while (0);
  i5 = i11 + 1 | 0;
  i8 = i12;
 }
 return i8 - i1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i5 = HEAP32[i3 + 4 >> 2] | 0;
 i6 = i4 + -1 | 0;
 i7 = (i6 & i4 | 0) == 0;
 if (!i7) if (i5 >>> 0 < i4 >>> 0) i8 = i5; else i8 = (i5 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i5;
 i5 = (HEAP32[i1 >> 2] | 0) + (i8 << 2) | 0;
 i9 = HEAP32[i5 >> 2] | 0;
 while (1) {
  i10 = HEAP32[i9 >> 2] | 0;
  if ((i10 | 0) == (i3 | 0)) break; else i9 = i10;
 }
 if ((i9 | 0) != (i1 + 8 | 0)) {
  i10 = HEAP32[i9 + 4 >> 2] | 0;
  if (!i7) if (i10 >>> 0 < i4 >>> 0) i11 = i10; else i11 = (i10 >>> 0) % (i4 >>> 0) | 0; else i11 = i10 & i6;
  if ((i11 | 0) == (i8 | 0)) {
   i12 = i2;
   i13 = 21;
  } else i13 = 13;
 } else i13 = 13;
 do if ((i13 | 0) == 13) {
  if (i2 | 0) {
   i11 = HEAP32[i2 + 4 >> 2] | 0;
   if (!i7) if (i11 >>> 0 < i4 >>> 0) i14 = i11; else i14 = (i11 >>> 0) % (i4 >>> 0) | 0; else i14 = i11 & i6;
   if ((i14 | 0) == (i8 | 0)) {
    i15 = i2;
    i16 = i2;
    i13 = 22;
    break;
   }
  }
  HEAP32[i5 >> 2] = 0;
  i12 = HEAP32[i3 >> 2] | 0;
  i13 = 21;
 } while (0);
 if ((i13 | 0) == 21) {
  i5 = i12;
  if (!i12) i17 = i5; else {
   i15 = i12;
   i16 = i5;
   i13 = 22;
  }
 }
 if ((i13 | 0) == 22) {
  i13 = HEAP32[i15 + 4 >> 2] | 0;
  if (!i7) if (i13 >>> 0 < i4 >>> 0) i18 = i13; else i18 = (i13 >>> 0) % (i4 >>> 0) | 0; else i18 = i13 & i6;
  if ((i18 | 0) == (i8 | 0)) i17 = i16; else {
   HEAP32[(HEAP32[i1 >> 2] | 0) + (i18 << 2) >> 2] = i9;
   i17 = HEAP32[i3 >> 2] | 0;
  }
 }
 HEAP32[i9 >> 2] = i17;
 HEAP32[i3 >> 2] = 0;
 i17 = i1 + 12 | 0;
 HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + -1;
 if (!i3) return i2 | 0;
 i17 = HEAP32[i3 + 304 >> 2] | 0;
 if (i17 | 0) {
  HEAP32[i3 + 308 >> 2] = i17;
  __ZdlPv(i17);
 }
 i17 = HEAP32[i3 + 272 >> 2] | 0;
 if (i17 | 0) {
  i1 = i17;
  do {
   i17 = i1;
   i1 = HEAP32[i1 >> 2] | 0;
   __ZdlPv(i17);
  } while ((i1 | 0) != 0);
 }
 i1 = i3 + 264 | 0;
 i17 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 if (i17 | 0) __ZdlPv(i17);
 __ZdlPv(i3);
 return i2 | 0;
}

function _start_output_pass(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i2 = HEAP32[i1 + 428 >> 2] | 0;
 if (!(HEAP32[i2 + 16 >> 2] | 0)) {
  i3 = i1 + 156 | 0;
  HEAP32[i3 >> 2] = 0;
  return;
 }
 L4 : do if (((HEAP32[i1 + 80 >> 2] | 0) != 0 ? (HEAP32[i1 + 220 >> 2] | 0) != 0 : 0) ? (i4 = i1 + 160 | 0, (HEAP32[i4 >> 2] | 0) != 0) : 0) {
  i5 = i2 + 112 | 0;
  i6 = HEAP32[i5 >> 2] | 0;
  if (!i6) {
   i7 = i1 + 36 | 0;
   i8 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, (HEAP32[i7 >> 2] | 0) * 24 | 0) | 0;
   HEAP32[i5 >> 2] = i8;
   i9 = i7;
   i10 = i8;
  } else {
   i9 = i1 + 36 | 0;
   i10 = i6;
  }
  if ((HEAP32[i9 >> 2] | 0) > 0) {
   i6 = 0;
   i8 = HEAP32[i1 + 216 >> 2] | 0;
   i7 = 0;
   i5 = i10;
   while (1) {
    i11 = HEAP32[i8 + 76 >> 2] | 0;
    if (!i11) {
     i12 = 20;
     break L4;
    }
    if (!(HEAP16[i11 >> 1] | 0)) {
     i12 = 20;
     break L4;
    }
    if (!(HEAP16[i11 + 2 >> 1] | 0)) {
     i12 = 20;
     break L4;
    }
    if (!(HEAP16[i11 + 16 >> 1] | 0)) {
     i12 = 20;
     break L4;
    }
    if (!(HEAP16[i11 + 32 >> 1] | 0)) {
     i12 = 20;
     break L4;
    }
    if (!(HEAP16[i11 + 18 >> 1] | 0)) {
     i12 = 20;
     break L4;
    }
    if (!(HEAP16[i11 + 4 >> 1] | 0)) {
     i12 = 20;
     break L4;
    }
    i11 = HEAP32[i4 >> 2] | 0;
    if ((HEAP32[i11 + (i7 << 8) >> 2] | 0) < 0) {
     i12 = 20;
     break L4;
    }
    i13 = i11 + (i7 << 8) + 4 | 0;
    HEAP32[i5 + 4 >> 2] = HEAP32[i13 >> 2];
    i14 = HEAP32[i13 >> 2] | 0;
    i13 = i11 + (i7 << 8) + 8 | 0;
    HEAP32[i5 + 8 >> 2] = HEAP32[i13 >> 2];
    i15 = HEAP32[i13 >> 2] | i14;
    i14 = i11 + (i7 << 8) + 12 | 0;
    HEAP32[i5 + 12 >> 2] = HEAP32[i14 >> 2];
    i13 = i15 | HEAP32[i14 >> 2];
    i14 = i11 + (i7 << 8) + 16 | 0;
    HEAP32[i5 + 16 >> 2] = HEAP32[i14 >> 2];
    i15 = i13 | HEAP32[i14 >> 2];
    i14 = i11 + (i7 << 8) + 20 | 0;
    HEAP32[i5 + 20 >> 2] = HEAP32[i14 >> 2];
    i6 = (i15 | HEAP32[i14 >> 2] | 0) == 0 ? i6 : 1;
    i7 = i7 + 1 | 0;
    if ((i7 | 0) >= (HEAP32[i9 >> 2] | 0)) break; else {
     i8 = i8 + 84 | 0;
     i5 = i5 + 24 | 0;
    }
   }
   if (i6) i16 = 23; else i12 = 20;
  } else i12 = 20;
 } else i12 = 20; while (0);
 if ((i12 | 0) == 20) i16 = 21;
 HEAP32[i2 + 12 >> 2] = i16;
 i3 = i1 + 156 | 0;
 HEAP32[i3 >> 2] = 0;
 return;
}

function _mbsnrtowcs(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1040);
 i7 = i6;
 i8 = i6 + 1024 | 0;
 i9 = HEAP32[i2 >> 2] | 0;
 HEAP32[i8 >> 2] = i9;
 i10 = (i1 | 0) != 0;
 i11 = i10 ? i4 : 256;
 i4 = i10 ? i1 : i7;
 i1 = i9;
 L1 : do if ((i11 | 0) != 0 & (i9 | 0) != 0) {
  i12 = 0;
  i13 = i3;
  i14 = i11;
  i15 = i4;
  i16 = i1;
  while (1) {
   i17 = i13 >>> 2;
   i18 = i17 >>> 0 >= i14 >>> 0;
   if (!(i13 >>> 0 > 131 | i18)) {
    i19 = i12;
    i20 = i13;
    i21 = i15;
    i22 = i14;
    i23 = i16;
    break L1;
   }
   i24 = i18 ? i14 : i17;
   i25 = i13 - i24 | 0;
   i17 = _mbsrtowcs(i15, i8, i24, i5) | 0;
   if ((i17 | 0) == -1) break;
   i24 = (i15 | 0) == (i7 | 0);
   i18 = i14 - (i24 ? 0 : i17) | 0;
   i26 = i24 ? i15 : i15 + (i17 << 2) | 0;
   i24 = i17 + i12 | 0;
   i17 = HEAP32[i8 >> 2] | 0;
   if ((i18 | 0) != 0 & (i17 | 0) != 0) {
    i12 = i24;
    i13 = i25;
    i14 = i18;
    i15 = i26;
    i16 = i17;
   } else {
    i19 = i24;
    i20 = i25;
    i21 = i26;
    i22 = i18;
    i23 = i17;
    break L1;
   }
  }
  i19 = -1;
  i20 = i25;
  i21 = i15;
  i22 = 0;
  i23 = HEAP32[i8 >> 2] | 0;
 } else {
  i19 = 0;
  i20 = i3;
  i21 = i4;
  i22 = i11;
  i23 = i1;
 } while (0);
 L9 : do if ((i23 | 0) != 0 ? (i22 | 0) != 0 & (i20 | 0) != 0 : 0) {
  i1 = i19;
  i11 = i20;
  i4 = i21;
  i3 = i22;
  i25 = i23;
  while (1) {
   i27 = _mbrtowc(i4, i25, i11, i5) | 0;
   if ((i27 + 2 | 0) >>> 0 < 3) break;
   i25 = (HEAP32[i8 >> 2] | 0) + i27 | 0;
   HEAP32[i8 >> 2] = i25;
   i11 = i11 - i27 | 0;
   i3 = i3 + -1 | 0;
   i7 = i1 + 1 | 0;
   if (!((i3 | 0) != 0 & (i11 | 0) != 0)) {
    i28 = i7;
    break L9;
   } else {
    i1 = i7;
    i4 = i4 + 4 | 0;
   }
  }
  switch (i27 | 0) {
  case -1:
   {
    i28 = i27;
    break L9;
    break;
   }
  case 0:
   {
    HEAP32[i8 >> 2] = 0;
    i28 = i1;
    break L9;
    break;
   }
  default:
   {
    HEAP32[i5 >> 2] = 0;
    i28 = i1;
    break L9;
   }
  }
 } else i28 = i19; while (0);
 if (i10) HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
 STACKTOP = i6;
 return i28 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 40 | 0;
 i6 = i4 + 12 | 0;
 i7 = i4 + 24 | 0;
 i8 = i4;
 L1 : do if ((i2 - i1 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 68 : 0) {
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 84:
  case 116:
   break;
  default:
   {
    i9 = i1;
    break L1;
   }
  }
  i10 = i1 + 2 | 0;
  i11 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i10, i2, i3) | 0;
  if ((!((i11 | 0) == (i10 | 0) | (i11 | 0) == (i2 | 0)) ? (HEAP8[i11 >> 0] | 0) == 69 : 0) ? (i10 = i3 + 4 | 0, i12 = HEAP32[i10 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i12 | 0)) : 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i12 + -24 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 51561) | 0;
   HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i8 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50243) | 0;
   HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   i12 = 0;
   while (1) {
    if ((i12 | 0) == 3) break;
    HEAP32[i7 + (i12 << 2) >> 2] = 0;
    i12 = i12 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i10 >> 2] | 0) + -24 | 0, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   i9 = i11 + 1 | 0;
  } else i9 = i1;
 } else i9 = i1; while (0);
 STACKTOP = i4;
 return i9 | 0;
}

function __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i6 >> 2] = i4;
 i1 = i5;
 if (i8 & 2) if ((i1 - i4 | 0) < 3) i9 = 1; else {
  HEAP32[i6 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -17;
  i4 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -69;
  i4 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -65;
  i10 = 4;
 } else i10 = 4;
 L4 : do if ((i10 | 0) == 4) {
  i4 = HEAP32[i3 >> 2] | 0;
  while (1) {
   if (i4 >>> 0 >= i2 >>> 0) {
    i9 = 0;
    break L4;
   }
   i8 = HEAP32[i4 >> 2] | 0;
   if (i8 >>> 0 > i7 >>> 0 | (i8 & -2048 | 0) == 55296) {
    i9 = 2;
    break L4;
   }
   do if (i8 >>> 0 >= 128) {
    if (i8 >>> 0 < 2048) {
     i5 = HEAP32[i6 >> 2] | 0;
     if ((i1 - i5 | 0) < 2) {
      i9 = 1;
      break L4;
     }
     HEAP32[i6 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i8 >>> 6 | 192;
     i5 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i8 & 63 | 128;
     break;
    }
    i5 = HEAP32[i6 >> 2] | 0;
    i11 = i1 - i5 | 0;
    if (i8 >>> 0 < 65536) {
     if ((i11 | 0) < 3) {
      i9 = 1;
      break L4;
     }
     HEAP32[i6 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i8 >>> 12 | 224;
     i12 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i8 >>> 6 & 63 | 128;
     i12 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i12 + 1;
     HEAP8[i12 >> 0] = i8 & 63 | 128;
     break;
    } else {
     if ((i11 | 0) < 4) {
      i9 = 1;
      break L4;
     }
     HEAP32[i6 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i8 >>> 18 | 240;
     i5 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i8 >>> 12 & 63 | 128;
     i5 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i8 >>> 6 & 63 | 128;
     i5 = HEAP32[i6 >> 2] | 0;
     HEAP32[i6 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i8 & 63 | 128;
     break;
    }
   } else {
    i5 = HEAP32[i6 >> 2] | 0;
    if ((i1 - i5 | 0) < 1) {
     i9 = 1;
     break L4;
    }
    HEAP32[i6 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i8;
   } while (0);
   i8 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
   HEAP32[i3 >> 2] = i8;
   i4 = i8;
  }
 } while (0);
 return i9 | 0;
}

function _pop_arg_731(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0;
 L1 : do if (i2 >>> 0 <= 20) do switch (i2 | 0) {
 case 9:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i6 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   HEAP32[i1 >> 2] = i6;
   break L1;
   break;
  }
 case 10:
  {
   i6 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i5 = HEAP32[i6 >> 2] | 0;
   HEAP32[i3 >> 2] = i6 + 4;
   i6 = i1;
   HEAP32[i6 >> 2] = i5;
   HEAP32[i6 + 4 >> 2] = ((i5 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 11:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i6 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   i5 = i1;
   HEAP32[i5 >> 2] = i6;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 12:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   i6 = i5;
   i7 = HEAP32[i6 >> 2] | 0;
   i8 = HEAP32[i6 + 4 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 8;
   i5 = i1;
   HEAP32[i5 >> 2] = i7;
   HEAP32[i5 + 4 >> 2] = i8;
   break L1;
   break;
  }
 case 13:
  {
   i8 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i5 = HEAP32[i8 >> 2] | 0;
   HEAP32[i3 >> 2] = i8 + 4;
   i8 = (i5 & 65535) << 16 >> 16;
   i5 = i1;
   HEAP32[i5 >> 2] = i8;
   HEAP32[i5 + 4 >> 2] = ((i8 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 14:
  {
   i8 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i5 = HEAP32[i8 >> 2] | 0;
   HEAP32[i3 >> 2] = i8 + 4;
   i8 = i1;
   HEAP32[i8 >> 2] = i5 & 65535;
   HEAP32[i8 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 15:
  {
   i8 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i5 = HEAP32[i8 >> 2] | 0;
   HEAP32[i3 >> 2] = i8 + 4;
   i8 = (i5 & 255) << 24 >> 24;
   i5 = i1;
   HEAP32[i5 >> 2] = i8;
   HEAP32[i5 + 4 >> 2] = ((i8 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 16:
  {
   i8 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i5 = HEAP32[i8 >> 2] | 0;
   HEAP32[i3 >> 2] = i8 + 4;
   i8 = i1;
   HEAP32[i8 >> 2] = i5 & 255;
   HEAP32[i8 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 17:
  {
   i8 = (HEAP32[i3 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d9 = +HEAPF64[i8 >> 3];
   HEAP32[i3 >> 2] = i8 + 8;
   HEAPF64[i1 >> 3] = d9;
   break L1;
   break;
  }
 case 18:
  {
   FUNCTION_TABLE_vii[i4 & 63](i1, i3);
   break L1;
   break;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var d5 = 0.0, d6 = 0.0, i7 = 0, d8 = 0.0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 d5 = +HEAPF32[i2 >> 2];
 d6 = +HEAPF32[i4 >> 2];
 if (!(d5 < d6)) if (d6 < d5) i7 = 0; else i7 = (HEAP32[i2 + 4 >> 2] | 0) >>> 0 < (HEAP32[i4 + 4 >> 2] | 0) >>> 0; else i7 = 1;
 i1 = HEAP32[i3 >> 2] | 0;
 d8 = +HEAPF32[i1 >> 2];
 if (!(d6 < d8)) if (d8 < d6) i9 = 0; else i9 = (HEAP32[i4 + 4 >> 2] | 0) >>> 0 < (HEAP32[i1 + 4 >> 2] | 0) >>> 0; else i9 = 1;
 if (!i7) {
  if (!i9) {
   i10 = 0;
   return i10 | 0;
  }
  HEAPF32[i4 >> 2] = d8;
  HEAPF32[i1 >> 2] = d6;
  i7 = i4 + 4 | 0;
  i3 = i1 + 4 | 0;
  i11 = HEAP32[i7 >> 2] | 0;
  HEAP32[i7 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i3 >> 2] = i11;
  d12 = +HEAPF32[i2 >> 2];
  d13 = +HEAPF32[i4 >> 2];
  if (!(d12 < d13)) {
   if (d13 < d12) {
    i10 = 1;
    return i10 | 0;
   }
   i11 = i2 + 4 | 0;
   i3 = HEAP32[i11 >> 2] | 0;
   i14 = HEAP32[i7 >> 2] | 0;
   if (i3 >>> 0 < i14 >>> 0) {
    i15 = i11;
    i16 = i14;
    i17 = i3;
   } else {
    i10 = 1;
    return i10 | 0;
   }
  } else {
   i3 = i2 + 4 | 0;
   i15 = i3;
   i16 = HEAP32[i7 >> 2] | 0;
   i17 = HEAP32[i3 >> 2] | 0;
  }
  HEAPF32[i2 >> 2] = d13;
  HEAPF32[i4 >> 2] = d12;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i7 >> 2] = i17;
  i10 = 2;
  return i10 | 0;
 }
 if (i9) {
  HEAPF32[i2 >> 2] = d8;
  HEAPF32[i1 >> 2] = d5;
  i9 = i2 + 4 | 0;
  i17 = i1 + 4 | 0;
  i7 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i17 >> 2] = i7;
  i10 = 1;
  return i10 | 0;
 }
 HEAPF32[i2 >> 2] = d6;
 HEAPF32[i4 >> 2] = d5;
 i7 = i2 + 4 | 0;
 i2 = i4 + 4 | 0;
 i17 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i17;
 d6 = +HEAPF32[i1 >> 2];
 if (!(d5 < d6)) {
  if (d6 < d5) {
   i10 = 1;
   return i10 | 0;
  }
  i7 = i1 + 4 | 0;
  i9 = HEAP32[i7 >> 2] | 0;
  if (i17 >>> 0 < i9 >>> 0) {
   i18 = i7;
   i19 = i9;
  } else {
   i10 = 1;
   return i10 | 0;
  }
 } else {
  i9 = i1 + 4 | 0;
  i18 = i9;
  i19 = HEAP32[i9 >> 2] | 0;
 }
 HEAPF32[i4 >> 2] = d6;
 HEAPF32[i1 >> 2] = d5;
 HEAP32[i2 >> 2] = i19;
 HEAP32[i18 >> 2] = i17;
 i10 = 2;
 return i10 | 0;
}

function _mbrtowc(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 i7 = (i4 | 0) == 0 ? 56896 : i4;
 i4 = HEAP32[i7 >> 2] | 0;
 L1 : do if (!i2) if (!i4) i8 = 0; else i9 = 19; else {
  i10 = (i1 | 0) == 0 ? i6 : i1;
  if (!i3) i8 = -2; else {
   if (!i4) {
    i11 = HEAP8[i2 >> 0] | 0;
    if (i11 << 24 >> 24 > -1) {
     HEAP32[i10 >> 2] = i11 & 255;
     i8 = i11 << 24 >> 24 != 0 & 1;
     break;
    }
    i11 = (___pthread_self_303() | 0) + 188 | 0;
    i12 = HEAP8[i2 >> 0] | 0;
    if (!(HEAP32[HEAP32[i11 >> 2] >> 2] | 0)) {
     HEAP32[i10 >> 2] = i12 << 24 >> 24 & 57343;
     i8 = 1;
     break;
    }
    i11 = (i12 & 255) + -194 | 0;
    if (i11 >>> 0 > 50) {
     i9 = 19;
     break;
    }
    i12 = HEAP32[3472 + (i11 << 2) >> 2] | 0;
    i11 = i3 + -1 | 0;
    if (!i11) i13 = i12; else {
     i14 = i2 + 1 | 0;
     i15 = i12;
     i16 = i11;
     i9 = 11;
    }
   } else {
    i14 = i2;
    i15 = i4;
    i16 = i3;
    i9 = 11;
   }
   L14 : do if ((i9 | 0) == 11) {
    i11 = HEAPU8[i14 >> 0] | 0;
    i12 = i11 >>> 3;
    if ((i12 + -16 | i12 + (i15 >> 26)) >>> 0 > 7) {
     i9 = 19;
     break L1;
    }
    i12 = i11 + -128 | i15 << 6;
    i11 = i16 + -1 | 0;
    if ((i12 | 0) < 0) {
     i17 = i14;
     i18 = i12;
     i19 = i11;
     while (1) {
      i17 = i17 + 1 | 0;
      if (!i19) {
       i13 = i18;
       break L14;
      }
      i20 = HEAP8[i17 >> 0] | 0;
      if ((i20 & -64) << 24 >> 24 != -128) {
       i9 = 19;
       break L1;
      }
      i21 = (i20 & 255) + -128 | i18 << 6;
      i20 = i19 + -1 | 0;
      if ((i21 | 0) >= 0) {
       i22 = i20;
       i23 = i21;
       break;
      } else {
       i18 = i21;
       i19 = i20;
      }
     }
    } else {
     i22 = i11;
     i23 = i12;
    }
    HEAP32[i7 >> 2] = 0;
    HEAP32[i10 >> 2] = i23;
    i8 = i3 - i22 | 0;
    break L1;
   } while (0);
   HEAP32[i7 >> 2] = i13;
   i8 = -2;
  }
 } while (0);
 if ((i9 | 0) == 19) {
  HEAP32[i7 >> 2] = 0;
  i7 = ___errno_location() | 0;
  HEAP32[i7 >> 2] = 84;
  i8 = -1;
 }
 STACKTOP = i5;
 return i8 | 0;
}

function __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 2096 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2096);
 i6 = i5 + 16 | 0;
 i7 = i5;
 i8 = i5 + 2076 | 0;
 i9 = i5 + 2064 | 0;
 HEAP32[i7 >> 2] = i4;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 + 8 >> 2] = 0;
 i4 = _strlen(i3) | 0;
 if (i4 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i9);
 if (i4 >>> 0 < 11) {
  i10 = i9 + 11 | 0;
  HEAP8[i10 >> 0] = i4;
  if (!i4) {
   i11 = i9;
   i12 = i10;
  } else {
   i13 = i9;
   i14 = i10;
   i15 = 6;
  }
 } else {
  i10 = i4 + 16 & -16;
  i16 = __Znwm(i10) | 0;
  HEAP32[i9 >> 2] = i16;
  HEAP32[i9 + 8 >> 2] = i10 | -2147483648;
  HEAP32[i9 + 4 >> 2] = i4;
  i13 = i16;
  i14 = i9 + 11 | 0;
  i15 = 6;
 }
 if ((i15 | 0) == 6) {
  _memcpy(i13 | 0, i3 | 0, i4 | 0) | 0;
  i11 = i13;
  i12 = i14;
 }
 HEAP8[i11 + i4 >> 0] = 0;
 _vsnprintf(i6, 2048, (HEAP8[i12 >> 0] | 0) < 0 ? HEAP32[i9 >> 2] | 0 : i9, i7) | 0;
 HEAP32[i8 >> 2] = 0;
 HEAP32[i8 + 4 >> 2] = 0;
 HEAP32[i8 + 8 >> 2] = 0;
 i7 = _strlen(i6) | 0;
 if (i7 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i8);
 if (i7 >>> 0 < 11) {
  HEAP8[i8 + 11 >> 0] = i7;
  if (!i7) i17 = i8; else {
   i18 = i8;
   i15 = 12;
  }
 } else {
  i4 = i7 + 16 & -16;
  i11 = __Znwm(i4) | 0;
  HEAP32[i8 >> 2] = i11;
  HEAP32[i8 + 8 >> 2] = i4 | -2147483648;
  HEAP32[i8 + 4 >> 2] = i7;
  i18 = i11;
  i15 = 12;
 }
 if ((i15 | 0) == 12) {
  _memcpy(i18 | 0, i6 | 0, i7 | 0) | 0;
  i17 = i18;
 }
 HEAP8[i17 + i7 >> 0] = 0;
 i7 = i1 + 4 | 0;
 i17 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i7 >> 2] | 0) != (i17 | 0)) {
  i18 = 0;
  i6 = i17;
  do {
   i17 = HEAP32[i6 + (i18 << 3) >> 2] | 0;
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[i17 >> 2] | 0) + 8 >> 2] & 3](i17, i2, i8);
   i18 = i18 + 1 | 0;
   i6 = HEAP32[i1 >> 2] | 0;
  } while (i18 >>> 0 < (HEAP32[i7 >> 2] | 0) - i6 >> 3 >>> 0);
 }
 if ((HEAP8[i8 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[i8 >> 2] | 0);
 if ((HEAP8[i12 >> 0] | 0) >= 0) {
  STACKTOP = i5;
  return;
 }
 __ZdlPv(HEAP32[i9 >> 2] | 0);
 STACKTOP = i5;
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = i2;
 i5 = (i3 - i4 | 0) / 20 | 0;
 i6 = i1 + 8 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = HEAP32[i1 >> 2] | 0;
 i9 = i8;
 if (i5 >>> 0 <= ((i7 - i8 | 0) / 20 | 0) >>> 0) {
  i10 = i1 + 4 | 0;
  i11 = ((HEAP32[i10 >> 2] | 0) - i8 | 0) / 20 | 0;
  i12 = i5 >>> 0 > i11 >>> 0;
  i13 = i2 + (i11 * 20 | 0) | 0;
  i11 = i12 ? i13 : i3;
  i14 = i11 - i4 | 0;
  if (i14 | 0) _memmove(i8 | 0, i2 | 0, i14 | 0) | 0;
  if (!i12) {
   HEAP32[i10 >> 2] = i9 + (((i14 | 0) / 20 | 0) * 20 | 0);
   return;
  }
  if ((i11 | 0) == (i3 | 0)) return;
  i11 = i13;
  i13 = HEAP32[i10 >> 2] | 0;
  do {
   HEAP32[i13 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   HEAP32[i13 + 12 >> 2] = HEAP32[i11 + 12 >> 2];
   HEAP32[i13 + 16 >> 2] = HEAP32[i11 + 16 >> 2];
   i11 = i11 + 20 | 0;
   i13 = (HEAP32[i10 >> 2] | 0) + 20 | 0;
   HEAP32[i10 >> 2] = i13;
  } while ((i11 | 0) != (i3 | 0));
  return;
 }
 if (!i8) i15 = i7; else {
  i7 = i1 + 4 | 0;
  HEAP32[i7 >> 2] = i8;
  __ZdlPv(i8);
  HEAP32[i6 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i1 >> 2] = 0;
  i15 = 0;
 }
 if (i5 >>> 0 > 214748364) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i7 = (i15 | 0) / 20 | 0;
 i15 = i7 << 1;
 i8 = i7 >>> 0 < 107374182 ? (i15 >>> 0 < i5 >>> 0 ? i5 : i15) : 214748364;
 if (i8 >>> 0 > 214748364) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i15 = __Znwm(i8 * 20 | 0) | 0;
 i5 = i1 + 4 | 0;
 HEAP32[i5 >> 2] = i15;
 HEAP32[i1 >> 2] = i15;
 HEAP32[i6 >> 2] = i15 + (i8 * 20 | 0);
 if ((i2 | 0) == (i3 | 0)) return;
 i8 = i2;
 i2 = i15;
 do {
  HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  HEAP32[i2 + 12 >> 2] = HEAP32[i8 + 12 >> 2];
  HEAP32[i2 + 16 >> 2] = HEAP32[i8 + 16 >> 2];
  i8 = i8 + 20 | 0;
  i2 = (HEAP32[i5 >> 2] | 0) + 20 | 0;
  HEAP32[i5 >> 2] = i2;
 } while ((i8 | 0) != (i3 | 0));
 return;
}

function _h2v1_merged_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i5 = HEAP32[i1 + 452 >> 2] | 0;
 i6 = HEAP32[i1 + 324 >> 2] | 0;
 i7 = HEAP32[i5 + 16 >> 2] | 0;
 i8 = HEAP32[i5 + 20 >> 2] | 0;
 i9 = HEAP32[i5 + 24 >> 2] | 0;
 i10 = HEAP32[i5 + 28 >> 2] | 0;
 i5 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i3 << 2) >> 2] | 0;
 i11 = HEAP32[(HEAP32[i2 + 4 >> 2] | 0) + (i3 << 2) >> 2] | 0;
 i12 = HEAP32[(HEAP32[i2 + 8 >> 2] | 0) + (i3 << 2) >> 2] | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i4 = i1 + 112 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = i1 >>> 1;
 if (!i2) {
  i13 = i12;
  i14 = i11;
  i15 = i5;
  i16 = i3;
  i17 = i1;
 } else {
  i18 = i11 + i2 | 0;
  i19 = i1 & -2;
  i1 = i2 * 6 | 0;
  i20 = i12;
  i21 = i11;
  i11 = i5;
  i22 = i3;
  i23 = i2;
  while (1) {
   i24 = HEAPU8[i21 >> 0] | 0;
   i25 = HEAPU8[i20 >> 0] | 0;
   i26 = HEAP32[i7 + (i25 << 2) >> 2] | 0;
   i27 = (HEAP32[i9 + (i25 << 2) >> 2] | 0) + (HEAP32[i10 + (i24 << 2) >> 2] | 0) >> 16;
   i25 = HEAP32[i8 + (i24 << 2) >> 2] | 0;
   i24 = HEAPU8[i11 >> 0] | 0;
   HEAP8[i22 >> 0] = HEAP8[i6 + (i26 + i24) >> 0] | 0;
   HEAP8[i22 + 1 >> 0] = HEAP8[i6 + (i27 + i24) >> 0] | 0;
   HEAP8[i22 + 2 >> 0] = HEAP8[i6 + (i25 + i24) >> 0] | 0;
   i24 = HEAPU8[i11 + 1 >> 0] | 0;
   HEAP8[i22 + 3 >> 0] = HEAP8[i6 + (i26 + i24) >> 0] | 0;
   HEAP8[i22 + 4 >> 0] = HEAP8[i6 + (i27 + i24) >> 0] | 0;
   HEAP8[i22 + 5 >> 0] = HEAP8[i6 + (i25 + i24) >> 0] | 0;
   i23 = i23 + -1 | 0;
   if (!i23) break; else {
    i20 = i20 + 1 | 0;
    i21 = i21 + 1 | 0;
    i11 = i11 + 2 | 0;
    i22 = i22 + 6 | 0;
   }
  }
  i13 = i12 + i2 | 0;
  i14 = i18;
  i15 = i5 + i19 | 0;
  i16 = i3 + i1 | 0;
  i17 = HEAP32[i4 >> 2] | 0;
 }
 if (!(i17 & 1)) return;
 i17 = HEAPU8[i14 >> 0] | 0;
 i14 = HEAPU8[i13 >> 0] | 0;
 i13 = (HEAP32[i9 + (i14 << 2) >> 2] | 0) + (HEAP32[i10 + (i17 << 2) >> 2] | 0) >> 16;
 i10 = HEAP32[i8 + (i17 << 2) >> 2] | 0;
 i17 = HEAPU8[i15 >> 0] | 0;
 HEAP8[i16 >> 0] = HEAP8[i6 + ((HEAP32[i7 + (i14 << 2) >> 2] | 0) + i17) >> 0] | 0;
 HEAP8[i16 + 1 >> 0] = HEAP8[i6 + (i13 + i17) >> 0] | 0;
 HEAP8[i16 + 2 >> 0] = HEAP8[i6 + (i10 + i17) >> 0] | 0;
 return;
}

function __ZN6vision25CheckHomographyHeuristicsEPfii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4;
 if (!(__ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_(i5, i1, 9.999999747378752e-06) | 0)) {
  i6 = 0;
  STACKTOP = i4;
  return i6 | 0;
 }
 d7 = +(i2 | 0);
 d8 = +(i3 | 0);
 d9 = +HEAPF32[i5 + 24 >> 2];
 d10 = d9 * 0.0;
 d11 = +HEAPF32[i5 + 28 >> 2];
 d12 = d11 * 0.0;
 d13 = +HEAPF32[i5 + 32 >> 2];
 d14 = d13 + (d10 + d12);
 d15 = +HEAPF32[i5 >> 2];
 d16 = d15 * 0.0;
 d17 = +HEAPF32[i5 + 4 >> 2];
 d18 = d17 * 0.0;
 d19 = +HEAPF32[i5 + 8 >> 2];
 d20 = (d19 + (d16 + d18)) / d14;
 d21 = +HEAPF32[i5 + 12 >> 2];
 d22 = d21 * 0.0;
 d23 = +HEAPF32[i5 + 16 >> 2];
 d24 = d23 * 0.0;
 d25 = +HEAPF32[i5 + 20 >> 2];
 d26 = (d25 + (d22 + d24)) / d14;
 d14 = d9 * d7;
 d9 = d13 + (d14 + d12);
 d12 = d15 * d7;
 d15 = (d19 + (d12 + d18)) / d9;
 d18 = d21 * d7;
 d7 = (d25 + (d18 + d24)) / d9;
 d9 = d11 * d8;
 d11 = d13 + (d14 + d9);
 d14 = d17 * d8;
 d17 = (d19 + (d12 + d14)) / d11;
 d12 = d23 * d8;
 d8 = (d25 + (d18 + d12)) / d11;
 d11 = d13 + (d10 + d9);
 d9 = (d19 + (d16 + d14)) / d11;
 d14 = (d25 + (d22 + d12)) / d11;
 d11 = +(Math_imul(i3, i2) | 0) * .0001;
 d12 = d15 - d20;
 d22 = d7 - d26;
 d25 = d17 - d20;
 d16 = d8 - d26;
 d19 = d9 - d20;
 d10 = d14 - d26;
 d13 = d9 - d17;
 d18 = d14 - d8;
 d23 = d12 * d16 - d25 * d22;
 d24 = +Math_abs(+d23) * .5;
 d21 = +Math_abs(+(d25 * d10 - d19 * d16)) * .5;
 d16 = +Math_abs(+(d12 * d10 - d19 * d22)) * .5;
 d22 = +Math_abs(+((d15 - d17) * d18 - d13 * (d7 - d8))) * .5;
 d19 = d24 < d21 ? d24 : d21;
 d21 = d19 < d16 ? d19 : d16;
 if ((d21 < d22 ? d21 : d22) < d11) {
  i6 = 0;
  STACKTOP = i4;
  return i6 | 0;
 }
 i2 = ((d17 - d15) * (d14 - d7) - (d9 - d15) * (d8 - d7) > 0.0 ? 1 : -1) + (d23 > 0.0 ? 1 : -1) + (d13 * (d26 - d8) - (d20 - d17) * d18 > 0.0 ? 1 : -1) + ((d20 - d9) * (d7 - d14) - (d15 - d9) * (d26 - d14) > 0.0 ? 1 : -1) | 0;
 i6 = (((i2 | 0) > -1 ? i2 : 0 - i2 | 0) | 0) == 4;
 STACKTOP = i4;
 return i6 | 0;
}

function __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i6 = i2;
 if ((((i5 & 4 | 0) != 0 ? (i6 - i1 | 0) > 2 : 0) ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) i7 = (HEAP8[i1 + 2 >> 0] | 0) == -65 ? i1 + 3 | 0 : i1; else i7 = i1;
 i5 = 0;
 i8 = i7;
 L7 : while (1) {
  if (!(i5 >>> 0 < i3 >>> 0 & i8 >>> 0 < i2 >>> 0)) break;
  i7 = HEAP8[i8 >> 0] | 0;
  i9 = i7 & 255;
  do if (i7 << 24 >> 24 <= -1) {
   if ((i7 & 255) < 194) break L7;
   if ((i7 & 255) < 224) {
    if ((i6 - i8 | 0) < 2) break L7;
    i10 = HEAPU8[i8 + 1 >> 0] | 0;
    if ((i10 & 192 | 0) != 128) break L7;
    if ((i10 & 63 | i9 << 6 & 1984) >>> 0 > i4 >>> 0) break L7;
    i11 = i8 + 2 | 0;
    break;
   }
   if ((i7 & 255) < 240) {
    if ((i6 - i8 | 0) < 3) break L7;
    i10 = HEAP8[i8 + 1 >> 0] | 0;
    i12 = HEAP8[i8 + 2 >> 0] | 0;
    switch (i7 << 24 >> 24) {
    case -32:
     {
      if ((i10 & -32) << 24 >> 24 != -96) break L7;
      break;
     }
    case -19:
     {
      if ((i10 & -32) << 24 >> 24 != -128) break L7;
      break;
     }
    default:
     if ((i10 & -64) << 24 >> 24 != -128) break L7;
    }
    i13 = i12 & 255;
    if ((i13 & 192 | 0) != 128) break L7;
    if (((i10 & 63) << 6 | i9 << 12 & 61440 | i13 & 63) >>> 0 > i4 >>> 0) break L7; else {
     i11 = i8 + 3 | 0;
     break;
    }
   }
   if ((i7 & 255) >= 245) break L7;
   if ((i6 - i8 | 0) < 4) break L7;
   i13 = HEAP8[i8 + 1 >> 0] | 0;
   i10 = HEAP8[i8 + 2 >> 0] | 0;
   i12 = HEAP8[i8 + 3 >> 0] | 0;
   switch (i7 << 24 >> 24) {
   case -16:
    {
     if ((i13 + 112 & 255) >= 48) break L7;
     break;
    }
   case -12:
    {
     if ((i13 & -16) << 24 >> 24 != -128) break L7;
     break;
    }
   default:
    if ((i13 & -64) << 24 >> 24 != -128) break L7;
   }
   i14 = i10 & 255;
   if ((i14 & 192 | 0) != 128) break L7;
   i10 = i12 & 255;
   if ((i10 & 192 | 0) != 128) break L7;
   if (((i13 & 63) << 12 | i9 << 18 & 1835008 | i14 << 6 & 4032 | i10 & 63) >>> 0 > i4 >>> 0) break L7; else i11 = i8 + 4 | 0;
  } else {
   if (i9 >>> 0 > i4 >>> 0) break L7;
   i11 = i8 + 1 | 0;
  } while (0);
  i5 = i5 + 1 | 0;
  i8 = i11;
 }
 return i8 - i1 | 0;
}

function __ZN6vision18BinomialPyramid32f5allocEmmi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 HEAP32[i1 + 16 >> 2] = i4;
 i5 = i1 + 20 | 0;
 HEAP32[i5 >> 2] = 3;
 HEAPF32[i1 + 24 >> 2] = 1.4142135381698608;
 HEAPF32[i1 + 28 >> 2] = 2.885390281677246;
 i6 = i1 + 4 | 0;
 i7 = i4 * 3 | 0;
 i8 = i1 + 8 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = HEAP32[i6 >> 2] | 0;
 i11 = i9 - i10 >> 5;
 i12 = i10;
 i10 = i9;
 if (i7 >>> 0 <= i11 >>> 0) {
  if (i7 >>> 0 < i11 >>> 0) {
   i9 = i12 + (i7 << 5) | 0;
   if ((i9 | 0) != (i10 | 0)) {
    i12 = i10;
    do {
     i12 = i12 + -32 | 0;
     __ZN6vision5ImageD2Ev(i12);
    } while ((i12 | 0) != (i9 | 0));
   }
   HEAP32[i8 >> 2] = i9;
  }
 } else __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8__appendEm(i6, i7 - i11 | 0);
 if ((i4 | 0) > 0) {
  i11 = 0;
  i7 = HEAP32[i5 >> 2] | 0;
  while (1) {
   if (!i7) i13 = 0; else {
    i9 = i2 >>> i11;
    i8 = i3 >>> i11;
    i12 = 0;
    i10 = i7;
    while (1) {
     i14 = (Math_imul(i10, i11) | 0) + i12 | 0;
     __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[i6 >> 2] | 0) + (i14 << 5) | 0, 2, i9, i8, -1, 1);
     i12 = i12 + 1 | 0;
     i14 = HEAP32[i5 >> 2] | 0;
     if (i12 >>> 0 >= i14 >>> 0) {
      i13 = i14;
      break;
     } else i10 = i14;
    }
   }
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i4 | 0)) break; else i7 = i13;
  }
 }
 i13 = i1 + 32 | 0;
 i7 = Math_imul(i3, i2) | 0;
 i2 = i1 + 36 | 0;
 i3 = HEAP32[i13 >> 2] | 0;
 i4 = (HEAP32[i2 >> 2] | 0) - i3 >> 1;
 if (i7 >>> 0 <= i4 >>> 0) {
  if (i7 >>> 0 < i4 >>> 0) HEAP32[i2 >> 2] = i3 + (i7 << 1);
 } else __ZNSt3__26vectorItNS_9allocatorItEEE8__appendEm(i13, i7 - i4 | 0);
 i4 = i1 + 44 | 0;
 i13 = i1 + 48 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i2 = (HEAP32[i13 >> 2] | 0) - i3 >> 2;
 if (i7 >>> 0 <= i2 >>> 0) {
  if (i7 >>> 0 < i2 >>> 0) HEAP32[i13 >> 2] = i3 + (i7 << 2);
 } else __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i4, i7 - i2 | 0);
 i2 = i1 + 56 | 0;
 i4 = i1 + 60 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i3 = (HEAP32[i4 >> 2] | 0) - i1 >> 2;
 if (i7 >>> 0 > i3 >>> 0) {
  __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i2, i7 - i3 | 0);
  return;
 }
 if (i7 >>> 0 >= i3 >>> 0) return;
 HEAP32[i4 >> 2] = i1 + (i7 << 2);
 return;
}

function __ZN6vision25DoGScaleInvariantDetector6detectEPKNS_25GaussianScaleSpacePyramidE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 if ((HEAP32[i2 + 16 >> 2] | 0) > 0) {
  __ZN6vision11ScopedTimerC2EPKc(i4, 21838);
  i5 = i1 + 32 | 0;
  __ZN6vision10DoGPyramid7computeEPKNS_25GaussianScaleSpacePyramidE(i5, i2);
  __ZN6vision11ScopedTimerD2Ev(i4);
  __ZN6vision11ScopedTimerC2EPKc(i4, 21850);
  __ZN6vision25DoGScaleInvariantDetector15extractFeaturesEPKNS_25GaussianScaleSpacePyramidEPKNS_10DoGPyramidE(i1, i2, i5);
  __ZN6vision11ScopedTimerD2Ev(i4);
  __ZN6vision11ScopedTimerC2EPKc(i4, 21870);
  __ZN6vision25DoGScaleInvariantDetector21findSubpixelLocationsEPKNS_25GaussianScaleSpacePyramidE(i1, i2);
  __ZN6vision11ScopedTimerD2Ev(i4);
  __ZN6vision11ScopedTimerC2EPKc(i4, 21879);
  __ZN6vision25DoGScaleInvariantDetector13pruneFeaturesEv(i1);
  __ZN6vision11ScopedTimerD2Ev(i4);
  __ZN6vision11ScopedTimerC2EPKc(i4, 21893);
  __ZN6vision25DoGScaleInvariantDetector23findFeatureOrientationsEPKNS_25GaussianScaleSpacePyramidE(i1, i2);
  __ZN6vision11ScopedTimerD2Ev(i4);
  STACKTOP = i3;
  return;
 } else {
  i3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 20854, 48) | 0, 20576, 130) | 0, 33554, 6) | 0, 147) | 0, 33561, 2) | 0, 20903, 35) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i2, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i1) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 }
}

function _addMarker(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3 + 8 | 0;
 i5 = i3;
 i6 = i3 + 12 | 0;
 HEAP32[i6 >> 2] = i1;
 i7 = HEAP32[14187] | 0;
 if (!i7) {
  i8 = -1;
  STACKTOP = i3;
  return i8 | 0;
 }
 i9 = i7 + -1 | 0;
 i10 = (i9 & i7 | 0) == 0;
 if (!i10) if (i7 >>> 0 > i1 >>> 0) i11 = i1; else i11 = (i1 >>> 0) % (i7 >>> 0) | 0; else i11 = i9 & i1;
 i12 = HEAP32[(HEAP32[14186] | 0) + (i11 << 2) >> 2] | 0;
 if (!i12) {
  i8 = -1;
  STACKTOP = i3;
  return i8 | 0;
 }
 i13 = HEAP32[i12 >> 2] | 0;
 if (!i13) {
  i8 = -1;
  STACKTOP = i3;
  return i8 | 0;
 }
 L15 : do if (i10) {
  i12 = i13;
  while (1) {
   i14 = HEAP32[i12 + 4 >> 2] | 0;
   i15 = (i14 | 0) == (i1 | 0);
   if (!(i15 | (i14 & i9 | 0) == (i11 | 0))) {
    i8 = -1;
    i16 = 26;
    break;
   }
   if (i15 ? (HEAP32[i12 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i12 = HEAP32[i12 >> 2] | 0;
   if (!i12) {
    i8 = -1;
    i16 = 26;
    break;
   }
  }
  if ((i16 | 0) == 26) {
   STACKTOP = i3;
   return i8 | 0;
  }
 } else {
  i12 = i13;
  while (1) {
   i15 = HEAP32[i12 + 4 >> 2] | 0;
   if ((i15 | 0) == (i1 | 0)) {
    if ((HEAP32[i12 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i15 >>> 0 < i7 >>> 0) i17 = i15; else i17 = (i15 >>> 0) % (i7 >>> 0) | 0;
    if ((i17 | 0) != (i11 | 0)) {
     i8 = -1;
     i16 = 26;
     break;
    }
   }
   i12 = HEAP32[i12 >> 2] | 0;
   if (!i12) {
    i8 = -1;
    i16 = 26;
    break;
   }
  }
  if ((i16 | 0) == 26) {
   STACKTOP = i3;
   return i8 | 0;
  }
 } while (0);
 i16 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i6) | 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) < 0) i18 = HEAP32[i2 >> 2] | 0; else i18 = i2;
 i2 = i16 + 220 | 0;
 i6 = _arPattLoad(HEAP32[i2 >> 2] | 0, i18) | 0;
 HEAP32[i16 + 300 >> 2] = i6;
 if ((i6 | 0) >= 0) {
  i8 = i6;
  STACKTOP = i3;
  return i8 | 0;
 }
 HEAP32[i5 >> 2] = i18;
 _arLog(0, 3, 44757, i5);
 _arPattDeleteHandle(HEAP32[i2 >> 2] | 0) | 0;
 _arLog(0, 3, 44803, i4);
 i8 = -1;
 STACKTOP = i3;
 return i8 | 0;
}

function _start_pass_main_28(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i3 = HEAP32[i1 + 424 >> 2] | 0;
 switch (i2 | 0) {
 case 0:
  {
   i2 = i3 + 4 | 0;
   if (!(HEAP32[(HEAP32[i1 + 452 >> 2] | 0) + 8 >> 2] | 0)) HEAP32[i2 >> 2] = 19; else {
    HEAP32[i2 >> 2] = 18;
    i2 = HEAP32[i1 + 316 >> 2] | 0;
    i4 = HEAP32[i1 + 36 >> 2] | 0;
    if ((i4 | 0) > 0) {
     i5 = i3 + 56 | 0;
     i6 = i3 + 60 | 0;
     i7 = i2 + 2 | 0;
     i8 = i2 + -2 | 0;
     i9 = HEAP32[i1 + 216 >> 2] | 0;
     i10 = 0;
     while (1) {
      i11 = (Math_imul(HEAP32[i9 + 36 >> 2] | 0, HEAP32[i9 + 12 >> 2] | 0) | 0) / (i2 | 0) | 0;
      i12 = HEAP32[(HEAP32[i5 >> 2] | 0) + (i10 << 2) >> 2] | 0;
      i13 = HEAP32[(HEAP32[i6 >> 2] | 0) + (i10 << 2) >> 2] | 0;
      i14 = HEAP32[i3 + 8 + (i10 << 2) >> 2] | 0;
      i15 = Math_imul(i11, i7) | 0;
      if ((i15 | 0) > 0) {
       i16 = 0;
       do {
        i17 = HEAP32[i14 + (i16 << 2) >> 2] | 0;
        HEAP32[i13 + (i16 << 2) >> 2] = i17;
        HEAP32[i12 + (i16 << 2) >> 2] = i17;
        i16 = i16 + 1 | 0;
       } while ((i16 | 0) != (i15 | 0));
      }
      i15 = i11 << 1;
      if ((i11 | 0) > 0) {
       i16 = Math_imul(i11, i2) | 0;
       i17 = Math_imul(i11, i8) | 0;
       i18 = 0;
       do {
        i19 = i18 + i16 | 0;
        i20 = i18 + i17 | 0;
        HEAP32[i13 + (i20 << 2) >> 2] = HEAP32[i14 + (i19 << 2) >> 2];
        HEAP32[i13 + (i19 << 2) >> 2] = HEAP32[i14 + (i20 << 2) >> 2];
        i18 = i18 + 1 | 0;
       } while ((i18 | 0) < (i15 | 0));
       i15 = 0;
       do {
        HEAP32[i12 + (i15 - i11 << 2) >> 2] = HEAP32[i12 >> 2];
        i15 = i15 + 1 | 0;
       } while ((i15 | 0) != (i11 | 0));
      }
      i10 = i10 + 1 | 0;
      if ((i10 | 0) == (i4 | 0)) break; else i9 = i9 + 84 | 0;
     }
    }
    HEAP32[i3 + 64 >> 2] = 0;
    HEAP32[i3 + 68 >> 2] = 0;
    HEAP32[i3 + 76 >> 2] = 0;
   }
   HEAP32[i3 + 48 >> 2] = 0;
   HEAP32[i3 + 52 >> 2] = 0;
   return;
  }
 case 2:
  {
   HEAP32[i3 + 4 >> 2] = 20;
   return;
  }
 default:
  {
   i3 = HEAP32[i1 >> 2] | 0;
   HEAP32[i3 + 20 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[i3 >> 2] & 255](i1);
   return;
  }
 }
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i2;
 i6 = i4;
 i7 = i1 + 11 | 0;
 i8 = HEAP8[i7 >> 0] | 0;
 i9 = i8 << 24 >> 24 < 0;
 if (i9) {
  i10 = HEAP32[i1 + 4 >> 2] | 0;
  i11 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i10 = i8 & 255;
  i11 = 10;
 }
 i12 = i3 - i5 | 0;
 do if (i12 | 0) {
  if (i9) {
   i13 = HEAP32[i1 >> 2] | 0;
   i14 = HEAP32[i1 + 4 >> 2] | 0;
  } else {
   i13 = i1;
   i14 = i8 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_(i2, i13, i13 + i14 | 0) | 0) {
   HEAP32[i6 >> 2] = 0;
   HEAP32[i6 + 4 >> 2] = 0;
   HEAP32[i6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i6, i2, i3);
   i15 = HEAP8[i6 + 11 >> 0] | 0;
   i16 = i15 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i1, i16 ? HEAP32[i6 >> 2] | 0 : i6, i16 ? HEAP32[i6 + 4 >> 2] | 0 : i15 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   break;
  }
  if ((i11 - i10 | 0) >>> 0 < i12 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm(i1, i11, i10 + i12 - i11 | 0, i10, i10, 0);
  if ((HEAP8[i7 >> 0] | 0) < 0) i17 = HEAP32[i1 >> 2] | 0; else i17 = i1;
  i15 = i3 + (i10 - i5) | 0;
  i16 = i17 + i10 | 0;
  i18 = i2;
  while (1) {
   if ((i18 | 0) == (i3 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i18);
   i16 = i16 + 1 | 0;
   i18 = i18 + 1 | 0;
  }
  HEAP8[i6 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i17 + i15 | 0, i6);
  i18 = i10 + i12 | 0;
  if ((HEAP8[i7 >> 0] | 0) < 0) {
   HEAP32[i1 + 4 >> 2] = i18;
   break;
  } else {
   HEAP8[i7 >> 0] = i18;
   break;
  }
 } while (0);
 STACKTOP = i4;
 return;
}

function _int_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i5 = HEAP32[i1 + 452 >> 2] | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 i4 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = HEAP8[i5 + 140 + i4 >> 0] | 0;
 i7 = i2 & 255;
 i8 = HEAP8[i5 + 150 + i4 >> 0] | 0;
 i4 = i8 & 255;
 i5 = i1 + 312 | 0;
 i9 = HEAP32[i5 >> 2] | 0;
 if ((i9 | 0) <= 0) return;
 i10 = i1 + 112 | 0;
 i1 = i2 << 24 >> 24 != 0;
 i11 = i4 + -1 | 0;
 if ((i8 & 255) > 1) {
  i8 = (i2 << 24 >> 24 == 0 ? ~i7 : -2) + i7 + 2 | 0;
  i2 = 0;
  i12 = 0;
  while (1) {
   i13 = HEAP32[i6 + (i12 << 2) >> 2] | 0;
   i14 = HEAP32[i10 >> 2] | 0;
   i15 = i13 + i14 | 0;
   if ((i14 | 0) > 0) {
    if (!i1) break;
    i16 = HEAP32[i3 + (i2 << 2) >> 2] | 0;
    i17 = i13;
    while (1) {
     _memset(i17 | 0, HEAP8[i16 >> 0] | 0, i8 | 0) | 0;
     i13 = i7;
     i18 = i17;
     while (1) {
      i18 = i18 + 1 | 0;
      if ((i13 | 0) <= 1) break; else i13 = i13 + -1 | 0;
     }
     if (i18 >>> 0 < i15 >>> 0) {
      i16 = i16 + 1 | 0;
      i17 = i18;
     } else break;
    }
    i19 = HEAP32[i10 >> 2] | 0;
   } else i19 = i14;
   _jcopy_sample_rows(i6, i12, i6, i12 + 1 | 0, i11, i19);
   i12 = i12 + i4 | 0;
   if ((i12 | 0) >= (HEAP32[i5 >> 2] | 0)) {
    i20 = 27;
    break;
   } else i2 = i2 + 1 | 0;
  }
  if ((i20 | 0) == 27) return;
  while (1) {}
 }
 if (!i1) {
  i1 = (HEAP32[i10 >> 2] | 0) > 0;
  i2 = 0;
  while (1) {
   if (i1) break;
   i2 = i2 + i4 | 0;
   if ((i2 | 0) >= (i9 | 0)) {
    i20 = 27;
    break;
   }
  }
  if ((i20 | 0) == 27) return;
  while (1) {}
 }
 i20 = 0;
 i9 = 0;
 while (1) {
  i2 = HEAP32[i6 + (i9 << 2) >> 2] | 0;
  i1 = HEAP32[i10 >> 2] | 0;
  i12 = i2 + i1 | 0;
  if ((i1 | 0) > 0) {
   i1 = HEAP32[i3 + (i20 << 2) >> 2] | 0;
   i19 = i2;
   while (1) {
    _memset(i19 | 0, HEAP8[i1 >> 0] | 0, i7 | 0) | 0;
    i2 = i7;
    i11 = i19;
    while (1) {
     i11 = i11 + 1 | 0;
     if ((i2 | 0) <= 1) break; else i2 = i2 + -1 | 0;
    }
    if (i11 >>> 0 < i12 >>> 0) {
     i1 = i1 + 1 | 0;
     i19 = i11;
    } else break;
   }
  }
  i9 = i9 + i4 | 0;
  if ((i9 | 0) >= (HEAP32[i5 >> 2] | 0)) break; else i20 = i20 + 1 | 0;
 }
 return;
}

function __ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i11 = HEAP32[i4 >> 2] | 0;
 i12 = (i11 | 0) == (i3 | 0);
 do if (i12) {
  i13 = (HEAP32[i10 + 96 >> 2] | 0) == (i1 | 0);
  if (!i13 ? (HEAP32[i10 + 100 >> 2] | 0) != (i1 | 0) : 0) {
   i14 = 5;
   break;
  }
  HEAP32[i4 >> 2] = i3 + 1;
  HEAP8[i3 >> 0] = i13 ? 43 : 45;
  HEAP32[i5 >> 2] = 0;
  i15 = 0;
 } else i14 = 5; while (0);
 L6 : do if ((i14 | 0) == 5) {
  i13 = HEAP8[i7 + 11 >> 0] | 0;
  if ((i1 | 0) == (i6 | 0) ? ((i13 << 24 >> 24 < 0 ? HEAP32[i7 + 4 >> 2] | 0 : i13 & 255) | 0) != 0 : 0) {
   i13 = HEAP32[i9 >> 2] | 0;
   if ((i13 - i8 | 0) >= 160) {
    i15 = 0;
    break;
   }
   i16 = HEAP32[i5 >> 2] | 0;
   HEAP32[i9 >> 2] = i13 + 4;
   HEAP32[i13 >> 2] = i16;
   HEAP32[i5 >> 2] = 0;
   i15 = 0;
   break;
  }
  i16 = i10 + 104 | 0;
  i13 = 0;
  while (1) {
   i17 = i10 + (i13 << 2) | 0;
   if ((i13 | 0) == 26) {
    i18 = i16;
    break;
   }
   if ((HEAP32[i17 >> 2] | 0) == (i1 | 0)) {
    i18 = i17;
    break;
   } else i13 = i13 + 1 | 0;
  }
  i13 = i18 - i10 | 0;
  i16 = i13 >> 2;
  if ((i13 | 0) > 92) i15 = -1; else {
   switch (i2 | 0) {
   case 10:
   case 8:
    {
     if ((i16 | 0) >= (i2 | 0)) {
      i15 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i13 | 0) >= 88) {
      if (i12) {
       i15 = -1;
       break L6;
      }
      if ((i11 - i3 | 0) >= 3) {
       i15 = -1;
       break L6;
      }
      if ((HEAP8[i11 + -1 >> 0] | 0) != 48) {
       i15 = -1;
       break L6;
      }
      HEAP32[i5 >> 2] = 0;
      i13 = HEAP8[10736 + i16 >> 0] | 0;
      HEAP32[i4 >> 2] = i11 + 1;
      HEAP8[i11 >> 0] = i13;
      i15 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i13 = HEAP8[10736 + i16 >> 0] | 0;
   HEAP32[i4 >> 2] = i11 + 1;
   HEAP8[i11 >> 0] = i13;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
   i15 = 0;
  }
 } while (0);
 return i15 | 0;
}

function __ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i11 = HEAP32[i4 >> 2] | 0;
 i12 = (i11 | 0) == (i3 | 0);
 do if (i12) {
  i13 = (HEAP8[i10 + 24 >> 0] | 0) == i1 << 24 >> 24;
  if (!i13 ? (HEAP8[i10 + 25 >> 0] | 0) != i1 << 24 >> 24 : 0) {
   i14 = 5;
   break;
  }
  HEAP32[i4 >> 2] = i3 + 1;
  HEAP8[i3 >> 0] = i13 ? 43 : 45;
  HEAP32[i5 >> 2] = 0;
  i15 = 0;
 } else i14 = 5; while (0);
 L6 : do if ((i14 | 0) == 5) {
  i13 = HEAP8[i7 + 11 >> 0] | 0;
  if (i1 << 24 >> 24 == i6 << 24 >> 24 ? ((i13 << 24 >> 24 < 0 ? HEAP32[i7 + 4 >> 2] | 0 : i13 & 255) | 0) != 0 : 0) {
   i13 = HEAP32[i9 >> 2] | 0;
   if ((i13 - i8 | 0) >= 160) {
    i15 = 0;
    break;
   }
   i16 = HEAP32[i5 >> 2] | 0;
   HEAP32[i9 >> 2] = i13 + 4;
   HEAP32[i13 >> 2] = i16;
   HEAP32[i5 >> 2] = 0;
   i15 = 0;
   break;
  }
  i16 = i10 + 26 | 0;
  i13 = 0;
  while (1) {
   i17 = i10 + i13 | 0;
   if ((i13 | 0) == 26) {
    i18 = i16;
    break;
   }
   if ((HEAP8[i17 >> 0] | 0) == i1 << 24 >> 24) {
    i18 = i17;
    break;
   } else i13 = i13 + 1 | 0;
  }
  i13 = i18 - i10 | 0;
  if ((i13 | 0) > 23) i15 = -1; else {
   switch (i2 | 0) {
   case 10:
   case 8:
    {
     if ((i13 | 0) >= (i2 | 0)) {
      i15 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i13 | 0) >= 22) {
      if (i12) {
       i15 = -1;
       break L6;
      }
      if ((i11 - i3 | 0) >= 3) {
       i15 = -1;
       break L6;
      }
      if ((HEAP8[i11 + -1 >> 0] | 0) != 48) {
       i15 = -1;
       break L6;
      }
      HEAP32[i5 >> 2] = 0;
      i16 = HEAP8[10736 + i13 >> 0] | 0;
      HEAP32[i4 >> 2] = i11 + 1;
      HEAP8[i11 >> 0] = i16;
      i15 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i16 = HEAP8[10736 + i13 >> 0] | 0;
   HEAP32[i4 >> 2] = i11 + 1;
   HEAP8[i11 >> 0] = i16;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
   i15 = 0;
  }
 } while (0);
 return i15 | 0;
}

function _addNFTMarker(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 4 | 0;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  i7 = -1;
  STACKTOP = i3;
  return i7 | 0;
 }
 i8 = i6 + -1 | 0;
 i9 = (i8 & i6 | 0) == 0;
 if (!i9) if (i6 >>> 0 > i1 >>> 0) i10 = i1; else i10 = (i1 >>> 0) % (i6 >>> 0) | 0; else i10 = i8 & i1;
 i11 = HEAP32[(HEAP32[14186] | 0) + (i10 << 2) >> 2] | 0;
 if (!i11) {
  i7 = -1;
  STACKTOP = i3;
  return i7 | 0;
 }
 i12 = HEAP32[i11 >> 2] | 0;
 if (!i12) {
  i7 = -1;
  STACKTOP = i3;
  return i7 | 0;
 }
 L15 : do if (i9) {
  i11 = i12;
  while (1) {
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i14 = (i13 | 0) == (i1 | 0);
   if (!(i14 | (i13 & i8 | 0) == (i10 | 0))) {
    i7 = -1;
    i15 = 27;
    break;
   }
   if (i14 ? (HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 27;
    break;
   }
  }
  if ((i15 | 0) == 27) {
   STACKTOP = i3;
   return i7 | 0;
  }
 } else {
  i11 = i12;
  while (1) {
   i14 = HEAP32[i11 + 4 >> 2] | 0;
   if ((i14 | 0) == (i1 | 0)) {
    if ((HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i14 >>> 0 < i6 >>> 0) i16 = i14; else i16 = (i14 >>> 0) % (i6 >>> 0) | 0;
    if ((i16 | 0) != (i10 | 0)) {
     i7 = -1;
     i15 = 27;
     break;
    }
   }
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 27;
    break;
   }
  }
  if ((i15 | 0) == 27) {
   STACKTOP = i3;
   return i7 | 0;
  }
 } while (0);
 i15 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0;
 i5 = i15 + 244 | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) < 0) i17 = HEAP32[i2 >> 2] | 0; else i17 = i2;
 if (!(_loadNFTMarker(i15, i10, i17) | 0)) {
  _arLog(0, 3, 44366, i4);
  i7 = -1;
  STACKTOP = i3;
  return i7 | 0;
 } else {
  HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
  i7 = i10;
  STACKTOP = i3;
  return i7 | 0;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 40 | 0;
 i6 = i4 + 12 | 0;
 i7 = i4 + 24 | 0;
 i8 = i4;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 90 : 0) ? (i9 = i1 + 2 | 0, (HEAP8[i9 >> 0] | 0) == 102) : 0) ? (i10 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_(i9, i2, i3) | 0, (i10 | 0) != (i9 | 0)) : 0) ? (i9 = i3 + 4 | 0, i2 = HEAP32[i9 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i2 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i2 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 50456) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i8 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50243) | 0;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i7 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i9 >> 2] | 0) + -24 | 0, i5);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i11 = i10;
 } else i11 = i1;
 STACKTOP = i4;
 return i11 | 0;
}

function _trinkle(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i9 = i8 + 232 | 0;
 i10 = i8;
 i11 = HEAP32[i4 >> 2] | 0;
 HEAP32[i9 >> 2] = i11;
 i12 = HEAP32[i4 + 4 >> 2] | 0;
 i4 = i9 + 4 | 0;
 HEAP32[i4 >> 2] = i12;
 HEAP32[i10 >> 2] = i1;
 L1 : do if ((i11 | 0) != 1 | (i12 | 0) != 0 ? (i13 = 0 - i2 | 0, i14 = i1 + (0 - (HEAP32[i7 + (i5 << 2) >> 2] | 0)) | 0, (FUNCTION_TABLE_iii[i3 & 63](i14, i1) | 0) >= 1) : 0) {
  i15 = 1;
  i16 = i5;
  i17 = (i6 | 0) == 0;
  i18 = i1;
  i19 = i14;
  while (1) {
   if (i17 & (i16 | 0) > 1) {
    i14 = i18 + i13 | 0;
    i20 = HEAP32[i7 + (i16 + -2 << 2) >> 2] | 0;
    if ((FUNCTION_TABLE_iii[i3 & 63](i14, i19) | 0) > -1) {
     i21 = i15;
     i22 = i16;
     i23 = i18;
     i24 = 10;
     break L1;
    }
    if ((FUNCTION_TABLE_iii[i3 & 63](i14 + (0 - i20) | 0, i19) | 0) > -1) {
     i21 = i15;
     i22 = i16;
     i23 = i18;
     i24 = 10;
     break L1;
    }
   }
   i20 = i15 + 1 | 0;
   HEAP32[i10 + (i15 << 2) >> 2] = i19;
   i14 = _pntz(i9) | 0;
   _shr(i9, i14);
   i25 = i14 + i16 | 0;
   if (!((HEAP32[i9 >> 2] | 0) != 1 | (HEAP32[i4 >> 2] | 0) != 0)) {
    i21 = i20;
    i22 = i25;
    i23 = i19;
    i24 = 10;
    break L1;
   }
   i14 = i19 + (0 - (HEAP32[i7 + (i25 << 2) >> 2] | 0)) | 0;
   if ((FUNCTION_TABLE_iii[i3 & 63](i14, HEAP32[i10 >> 2] | 0) | 0) < 1) {
    i26 = i19;
    i27 = i20;
    i28 = i25;
    i29 = 0;
    i24 = 9;
    break;
   } else {
    i30 = i19;
    i15 = i20;
    i16 = i25;
    i17 = 1;
    i19 = i14;
    i18 = i30;
   }
  }
 } else {
  i26 = i1;
  i27 = 1;
  i28 = i5;
  i29 = i6;
  i24 = 9;
 } while (0);
 if ((i24 | 0) == 9 ? (i29 | 0) == 0 : 0) {
  i21 = i27;
  i22 = i28;
  i23 = i26;
  i24 = 10;
 }
 if ((i24 | 0) == 10) {
  _cycle(i2, i10, i21);
  _sift(i23, i2, i3, i22, i7);
 }
 STACKTOP = i8;
 return;
}

function ___stpncpy(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i4 = i2;
 L1 : do if (!((i4 ^ i1) & 3)) {
  i5 = (i3 | 0) != 0;
  if (i5 & (i4 & 3 | 0) != 0) {
   i6 = i3;
   i7 = i2;
   i8 = i1;
   while (1) {
    i9 = HEAP8[i7 >> 0] | 0;
    HEAP8[i8 >> 0] = i9;
    if (!(i9 << 24 >> 24)) {
     i10 = i8;
     i11 = i6;
     break L1;
    }
    i9 = i6 + -1 | 0;
    i12 = i7 + 1 | 0;
    i13 = i8 + 1 | 0;
    i14 = (i9 | 0) != 0;
    if (i14 & (i12 & 3 | 0) != 0) {
     i6 = i9;
     i7 = i12;
     i8 = i13;
    } else {
     i15 = i9;
     i16 = i12;
     i17 = i13;
     i18 = i14;
     break;
    }
   }
  } else {
   i15 = i3;
   i16 = i2;
   i17 = i1;
   i18 = i5;
  }
  if (i18) if (!(HEAP8[i16 >> 0] | 0)) {
   i10 = i17;
   i11 = i15;
  } else {
   L11 : do if (i15 >>> 0 > 3) {
    i8 = i17;
    i7 = i16;
    i6 = i15;
    while (1) {
     i14 = HEAP32[i7 >> 2] | 0;
     if ((i14 & -2139062144 ^ -2139062144) & i14 + -16843009 | 0) {
      i19 = i7;
      i20 = i8;
      i21 = i6;
      break L11;
     }
     HEAP32[i8 >> 2] = i14;
     i14 = i6 + -4 | 0;
     i13 = i7 + 4 | 0;
     i12 = i8 + 4 | 0;
     if (i14 >>> 0 > 3) {
      i8 = i12;
      i7 = i13;
      i6 = i14;
     } else {
      i19 = i13;
      i20 = i12;
      i21 = i14;
      break;
     }
    }
   } else {
    i19 = i16;
    i20 = i17;
    i21 = i15;
   } while (0);
   i22 = i19;
   i23 = i20;
   i24 = i21;
   i25 = 13;
  } else {
   i10 = i17;
   i11 = 0;
  }
 } else {
  i22 = i2;
  i23 = i1;
  i24 = i3;
  i25 = 13;
 } while (0);
 L17 : do if ((i25 | 0) == 13) if (!i24) {
  i10 = i23;
  i11 = 0;
 } else {
  i3 = i22;
  i1 = i23;
  i2 = i24;
  while (1) {
   i17 = HEAP8[i3 >> 0] | 0;
   HEAP8[i1 >> 0] = i17;
   if (!(i17 << 24 >> 24)) {
    i10 = i1;
    i11 = i2;
    break L17;
   }
   i2 = i2 + -1 | 0;
   i17 = i1 + 1 | 0;
   if (!i2) {
    i10 = i17;
    i11 = 0;
    break;
   } else {
    i3 = i3 + 1 | 0;
    i1 = i17;
   }
  }
 } while (0);
 _memset(i10 | 0, 0, i11 | 0) | 0;
 return i10 | 0;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i7 = i6;
 if (((i4 - i6 | 0) / 12 | 0) >>> 0 >= i2 >>> 0) {
  _memset(i6 | 0, 0, i2 * 12 | 0) | 0;
  HEAP32[i5 >> 2] = i7 + (i2 * 12 | 0);
  return;
 }
 i8 = HEAP32[i1 >> 2] | 0;
 i9 = (i6 - i8 | 0) / 12 | 0;
 i6 = i9 + i2 | 0;
 i10 = i8;
 if (i6 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i11 = (i4 - i8 | 0) / 12 | 0;
 i4 = i11 << 1;
 i12 = i11 >>> 0 < 178956970 ? (i4 >>> 0 < i6 >>> 0 ? i6 : i4) : 357913941;
 do if (i12) if (i12 >>> 0 > 357913941) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 } else {
  i13 = __Znwm(i12 * 12 | 0) | 0;
  break;
 } else i13 = 0; while (0);
 i4 = i13 + (i9 * 12 | 0) | 0;
 i9 = i13 + (i12 * 12 | 0) | 0;
 _memset(i4 | 0, 0, i2 * 12 | 0) | 0;
 i12 = i4 + (i2 * 12 | 0) | 0;
 if ((i7 | 0) == (i10 | 0)) {
  i14 = i4;
  i15 = i10;
  i16 = i7;
  i17 = i8;
 } else {
  i8 = i7;
  i7 = i4;
  do {
   i4 = i7;
   i7 = i7 + -12 | 0;
   i2 = i8;
   i8 = i8 + -12 | 0;
   HEAP32[i7 >> 2] = 0;
   i13 = i4 + -8 | 0;
   HEAP32[i13 >> 2] = 0;
   i6 = i4 + -4 | 0;
   HEAP32[i6 >> 2] = 0;
   HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
   i4 = i2 + -8 | 0;
   HEAP32[i13 >> 2] = HEAP32[i4 >> 2];
   i13 = i2 + -4 | 0;
   HEAP32[i6 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i13 >> 2] = 0;
   HEAP32[i4 >> 2] = 0;
   HEAP32[i8 >> 2] = 0;
  } while ((i8 | 0) != (i10 | 0));
  i10 = HEAP32[i1 >> 2] | 0;
  i14 = i7;
  i15 = i10;
  i16 = HEAP32[i5 >> 2] | 0;
  i17 = i10;
 }
 HEAP32[i1 >> 2] = i14;
 HEAP32[i5 >> 2] = i12;
 HEAP32[i3 >> 2] = i9;
 if ((i16 | 0) != (i15 | 0)) {
  i9 = i16;
  do {
   i16 = i9;
   i9 = i9 + -12 | 0;
   i3 = HEAP32[i9 >> 2] | 0;
   if (i3 | 0) {
    HEAP32[i16 + -8 >> 2] = i3;
    __ZdlPv(i3);
   }
  } while ((i9 | 0) != (i15 | 0));
 }
 if (!i17) return;
 __ZdlPv(i17);
 return;
}

function _wcsnrtombs(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 i6 = i5;
 i7 = i5 + 256 | 0;
 i8 = HEAP32[i2 >> 2] | 0;
 HEAP32[i7 >> 2] = i8;
 i9 = (i1 | 0) != 0;
 i10 = i9 ? i4 : 256;
 i4 = i9 ? i1 : i6;
 i1 = i8;
 L1 : do if ((i10 | 0) != 0 & (i8 | 0) != 0) {
  i11 = 0;
  i12 = i3;
  i13 = i10;
  i14 = i4;
  i15 = i1;
  while (1) {
   i16 = i12 >>> 0 >= i13 >>> 0;
   if (!(i16 | i12 >>> 0 > 32)) {
    i17 = i11;
    i18 = i12;
    i19 = i14;
    i20 = i13;
    i21 = i15;
    break L1;
   }
   i22 = i16 ? i13 : i12;
   i23 = i12 - i22 | 0;
   i16 = _wcsrtombs(i14, i7, i22, 0) | 0;
   if ((i16 | 0) == -1) break;
   i22 = (i14 | 0) == (i6 | 0);
   i24 = i13 - (i22 ? 0 : i16) | 0;
   i25 = i22 ? i14 : i14 + i16 | 0;
   i22 = i16 + i11 | 0;
   i16 = HEAP32[i7 >> 2] | 0;
   if ((i24 | 0) != 0 & (i16 | 0) != 0) {
    i11 = i22;
    i12 = i23;
    i13 = i24;
    i14 = i25;
    i15 = i16;
   } else {
    i17 = i22;
    i18 = i23;
    i19 = i25;
    i20 = i24;
    i21 = i16;
    break L1;
   }
  }
  i17 = -1;
  i18 = i23;
  i19 = i14;
  i20 = 0;
  i21 = HEAP32[i7 >> 2] | 0;
 } else {
  i17 = 0;
  i18 = i3;
  i19 = i4;
  i20 = i10;
  i21 = i1;
 } while (0);
 L9 : do if ((i21 | 0) != 0 ? (i20 | 0) != 0 & (i18 | 0) != 0 : 0) {
  i1 = i17;
  i10 = i18;
  i4 = i19;
  i3 = i20;
  i23 = i21;
  while (1) {
   i26 = _wcrtomb(i4, HEAP32[i23 >> 2] | 0, 0) | 0;
   if ((i26 + 1 | 0) >>> 0 < 2) break;
   i23 = (HEAP32[i7 >> 2] | 0) + 4 | 0;
   HEAP32[i7 >> 2] = i23;
   i10 = i10 + -1 | 0;
   i3 = i3 - i26 | 0;
   i6 = i26 + i1 | 0;
   if (!((i3 | 0) != 0 & (i10 | 0) != 0)) {
    i27 = i6;
    break L9;
   } else {
    i1 = i6;
    i4 = i4 + i26 | 0;
   }
  }
  if (!i26) {
   HEAP32[i7 >> 2] = 0;
   i27 = i1;
  } else i27 = -1;
 } else i27 = i17; while (0);
 if (i9) HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
 STACKTOP = i5;
 return i27 | 0;
}

function __ZN6vision24OrthogonalizeIdentity8x9IfEEbPT_PKS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, d14 = 0.0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(384);
 i4 = i3 + 336 | 0;
 i5 = i3;
 d6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i5, i2, 0);
 HEAPF32[i4 >> 2] = d6;
 d7 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i5 + 36 | 0, i2, 1);
 i8 = i4 + 4 | 0;
 HEAPF32[i8 >> 2] = d7;
 d7 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i5 + 72 | 0, i2, 2);
 i9 = i4 + 8 | 0;
 HEAPF32[i9 >> 2] = d7;
 d7 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i5 + 108 | 0, i2, 3);
 i10 = i4 + 12 | 0;
 HEAPF32[i10 >> 2] = d7;
 d7 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i5 + 144 | 0, i2, 4);
 i11 = i4 + 16 | 0;
 HEAPF32[i11 >> 2] = d7;
 d7 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i5 + 180 | 0, i2, 5);
 i12 = i4 + 20 | 0;
 HEAPF32[i12 >> 2] = d7;
 d7 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i5 + 216 | 0, i2, 6);
 HEAPF32[i4 + 24 >> 2] = d7;
 d13 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i5 + 252 | 0, i2, 7);
 HEAPF32[i4 + 28 >> 2] = d13;
 d14 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i(i5 + 288 | 0, i2, 8);
 HEAPF32[i4 + 32 >> 2] = d14;
 i2 = +HEAPF32[i8 >> 2] > d6 & 1;
 i8 = +HEAPF32[i9 >> 2] > +HEAPF32[i4 + (i2 << 2) >> 2] ? 2 : i2;
 i2 = +HEAPF32[i10 >> 2] > +HEAPF32[i4 + (i8 << 2) >> 2] ? 3 : i8;
 i8 = +HEAPF32[i11 >> 2] > +HEAPF32[i4 + (i2 << 2) >> 2] ? 4 : i2;
 i2 = +HEAPF32[i12 >> 2] > +HEAPF32[i4 + (i8 << 2) >> 2] ? 5 : i8;
 i8 = d7 > +HEAPF32[i4 + (i2 << 2) >> 2] ? 6 : i2;
 i2 = d13 > +HEAPF32[i4 + (i8 << 2) >> 2] ? 7 : i8;
 i8 = d14 > +HEAPF32[i4 + (i2 << 2) >> 2] ? 8 : i2;
 if (+HEAPF32[i4 + (i8 << 2) >> 2] == 0.0) {
  i15 = 0;
  STACKTOP = i3;
  return i15 | 0;
 }
 i4 = i1;
 i1 = i5 + (i8 * 9 << 2) | 0;
 i8 = i4 + 36 | 0;
 do {
  HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
  i4 = i4 + 4 | 0;
  i1 = i1 + 4 | 0;
 } while ((i4 | 0) < (i8 | 0));
 i15 = 1;
 STACKTOP = i3;
 return i15 | 0;
}

function _alloc_small(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 if (i3 >>> 0 > 999999984) {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i5 + 20 >> 2] = 54;
  HEAP32[i5 + 24 >> 2] = 1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i5 = i3 & 7;
 i6 = ((i5 | 0) == 0 ? 0 : 8 - i5 | 0) + i3 | 0;
 if (i2 >>> 0 > 1) {
  i3 = HEAP32[i1 >> 2] | 0;
  HEAP32[i3 + 20 >> 2] = 14;
  HEAP32[i3 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i3 = i4 + 52 + (i2 << 2) | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 L7 : do if (!i5) {
  i7 = 0;
  i8 = 9;
 } else {
  i9 = i5;
  while (1) {
   if ((HEAP32[i9 + 8 >> 2] | 0) >>> 0 >= i6 >>> 0) {
    i10 = i9;
    break L7;
   }
   i11 = HEAP32[i9 >> 2] | 0;
   if (!i11) {
    i7 = i9;
    i8 = 9;
    break;
   } else i9 = i11;
  }
 } while (0);
 do if ((i8 | 0) == 9) {
  i5 = (i7 | 0) == 0;
  i9 = HEAP32[(i5 ? 13612 : 13620) + (i2 << 2) >> 2] | 0;
  i11 = 999999984 - i6 | 0;
  i12 = i9 >>> 0 > i11 >>> 0 ? i11 : i9;
  i9 = i12 + i6 | 0;
  i11 = i9 + 16 | 0;
  i13 = _jpeg_get_small(i1, i11) | 0;
  if (!i13) {
   i14 = i12;
   do {
    if (i14 >>> 0 < 100) {
     i12 = HEAP32[i1 >> 2] | 0;
     HEAP32[i12 + 20 >> 2] = 54;
     HEAP32[i12 + 24 >> 2] = 2;
     FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
    }
    i14 = i14 >>> 1;
    i12 = i14 + i6 | 0;
    i15 = i12 + 16 | 0;
    i16 = _jpeg_get_small(i1, i15) | 0;
   } while (!(i16 | 0));
   i17 = i16;
   i18 = i15;
   i19 = i12;
  } else {
   i17 = i13;
   i18 = i11;
   i19 = i9;
  }
  i14 = i4 + 76 | 0;
  HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + i18;
  HEAP32[i17 >> 2] = 0;
  HEAP32[i17 + 4 >> 2] = 0;
  HEAP32[i17 + 8 >> 2] = i19;
  if (i5) {
   HEAP32[i3 >> 2] = i17;
   i10 = i17;
   break;
  } else {
   HEAP32[i7 >> 2] = i17;
   i10 = i17;
   break;
  }
 } while (0);
 i17 = i10 + 4 | 0;
 i7 = HEAP32[i17 >> 2] | 0;
 HEAP32[i17 >> 2] = i7 + i6;
 i17 = i10 + 8 | 0;
 HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) - i6;
 return i10 + 16 + i7 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i2;
 i6 = i4;
 i7 = i1 + 11 | 0;
 i8 = HEAP8[i7 >> 0] | 0;
 i9 = i8 << 24 >> 24 < 0;
 if (i9) {
  i10 = HEAP32[i1 + 4 >> 2] | 0;
  i11 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i10 = i8 & 255;
  i11 = 10;
 }
 i12 = i3 - i5 | 0;
 do if (i12 | 0) {
  if (i9) {
   i13 = HEAP32[i1 >> 2] | 0;
   i14 = HEAP32[i1 + 4 >> 2] | 0;
  } else {
   i13 = i1;
   i14 = i8 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_(i2, i13, i13 + i14 | 0) | 0) {
   HEAP32[i6 >> 2] = 0;
   HEAP32[i6 + 4 >> 2] = 0;
   HEAP32[i6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i6, i2, i3);
   i15 = HEAP8[i6 + 11 >> 0] | 0;
   i16 = i15 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(i1, i16 ? HEAP32[i6 >> 2] | 0 : i6, i16 ? HEAP32[i6 + 4 >> 2] | 0 : i15 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
   break;
  }
  if ((i11 - i10 | 0) >>> 0 < i12 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(i1, i11, i10 + i12 - i11 | 0, i10, i10, 0, 0);
  if ((HEAP8[i7 >> 0] | 0) < 0) i17 = HEAP32[i1 >> 2] | 0; else i17 = i1;
  i15 = i3 + (i10 - i5) | 0;
  i16 = i17 + i10 | 0;
  i18 = i2;
  while (1) {
   if ((i18 | 0) == (i3 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i16, i18);
   i16 = i16 + 1 | 0;
   i18 = i18 + 1 | 0;
  }
  HEAP8[i6 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i17 + i15 | 0, i6);
  i18 = i10 + i12 | 0;
  if ((HEAP8[i7 >> 0] | 0) < 0) {
   HEAP32[i1 + 4 >> 2] = i18;
   break;
  } else {
   HEAP8[i7 >> 0] = i18;
   break;
  }
 } while (0);
 STACKTOP = i4;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 40 | 0;
 i6 = i4 + 12 | 0;
 i7 = i4 + 24 | 0;
 i8 = i4;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 122 : 0) ? (i9 = i1 + 2 | 0, i10 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i9, i2, i3) | 0, (i10 | 0) != (i9 | 0)) : 0) ? (i9 = i3 + 4 | 0, i2 = HEAP32[i9 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i2 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i2 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 50470) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i8 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50243) | 0;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i7 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i9 >> 2] | 0) + -24 | 0, i5);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i11 = i10;
 } else i11 = i1;
 STACKTOP = i4;
 return i11 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4 + 40 | 0;
 i6 = i4 + 12 | 0;
 i7 = i4 + 24 | 0;
 i8 = i4;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i9 = i1 + 2 | 0, i10 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i9, i2, i3) | 0, (i10 | 0) != (i9 | 0)) : 0) ? (i9 = i3 + 4 | 0, i2 = HEAP32[i9 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i2 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i8, i2 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i8, 0, 50470) | 0;
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i8 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 50243) | 0;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i7 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i9 >> 2] | 0) + -24 | 0, i5);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  i11 = i10;
 } else i11 = i1;
 STACKTOP = i4;
 return i11 | 0;
}

function _getTransMatSquareCont(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 i8 = i6 + -1 | 0;
 i9 = (i8 & i6 | 0) == 0;
 if (!i9) if (i6 >>> 0 > i1 >>> 0) i10 = i1; else i10 = (i1 >>> 0) % (i6 >>> 0) | 0; else i10 = i8 & i1;
 i11 = HEAP32[(HEAP32[14186] | 0) + (i10 << 2) >> 2] | 0;
 if (!i11) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 i12 = HEAP32[i11 >> 2] | 0;
 if (!i12) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 L15 : do if (i9) {
  i11 = i12;
  while (1) {
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i14 = (i13 | 0) == (i1 | 0);
   if (!(i14 | (i13 & i8 | 0) == (i10 | 0))) {
    i7 = -1;
    i15 = 23;
    break;
   }
   if (i14 ? (HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 23;
    break;
   }
  }
  if ((i15 | 0) == 23) {
   STACKTOP = i4;
   return i7 | 0;
  }
 } else {
  i11 = i12;
  while (1) {
   i14 = HEAP32[i11 + 4 >> 2] | 0;
   if ((i14 | 0) == (i1 | 0)) {
    if ((HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i14 >>> 0 < i6 >>> 0) i16 = i14; else i16 = (i14 >>> 0) % (i6 >>> 0) | 0;
    if ((i16 | 0) != (i10 | 0)) {
     i7 = -1;
     i15 = 23;
     break;
    }
   }
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 23;
    break;
   }
  }
  if ((i15 | 0) == 23) {
   STACKTOP = i4;
   return i7 | 0;
  }
 } while (0);
 i15 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0;
 i5 = HEAP32[i15 + 216 >> 2] | 0;
 if ((HEAP32[i5 + 44 >> 2] | 0) <= (i2 | 0)) {
  i7 = -3;
  STACKTOP = i4;
  return i7 | 0;
 }
 +_arGetTransMatSquareCont(HEAP32[i15 + 228 >> 2] | 0, (i2 | 0) < 0 ? 55816 : i5 + 48 + (i2 << 8) | 0, 52128, +(i3 | 0), 52128);
 i7 = 0;
 STACKTOP = i4;
 return i7 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 8 | 0;
 i7 = i6 + 3 | 0;
 i8 = HEAP8[i7 >> 0] | 0;
 i9 = i8 << 24 >> 24 < 0;
 if (i9) {
  i10 = HEAP32[i1 + 4 >> 2] | 0;
  i11 = (HEAP32[i6 >> 2] & 2147483647) + -1 | 0;
 } else {
  i10 = i8 & 255;
  i11 = 1;
 }
 i6 = i3 - i2 | 0;
 i12 = i6 >> 2;
 do if (i6 | 0) {
  if (i9) {
   i13 = HEAP32[i1 >> 2] | 0;
   i14 = HEAP32[i1 + 4 >> 2] | 0;
  } else {
   i13 = i1;
   i14 = i8 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_(i2, i13, i13 + (i14 << 2) | 0) | 0) {
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i5, i2, i3);
   i15 = HEAP8[i5 + 8 + 3 >> 0] | 0;
   i16 = i15 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm(i1, i16 ? HEAP32[i5 >> 2] | 0 : i5, i16 ? HEAP32[i5 + 4 >> 2] | 0 : i15 & 255) | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i5);
   break;
  }
  if ((i11 - i10 | 0) >>> 0 < i12 >>> 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm(i1, i11, i10 + i12 - i11 | 0, i10, i10, 0, 0);
  if ((HEAP8[i7 >> 0] | 0) < 0) i17 = HEAP32[i1 >> 2] | 0; else i17 = i1;
  i15 = i17 + (i10 << 2) | 0;
  i16 = i2;
  while (1) {
   if ((i16 | 0) == (i3 | 0)) break;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i15, i16);
   i15 = i15 + 4 | 0;
   i16 = i16 + 4 | 0;
  }
  HEAP32[i5 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw(i15, i5);
  i16 = i10 + i12 | 0;
  if ((HEAP8[i7 >> 0] | 0) < 0) {
   HEAP32[i1 + 4 >> 2] = i16;
   break;
  } else {
   HEAP8[i7 >> 0] = i16;
   break;
  }
 } while (0);
 STACKTOP = i4;
 return i1 | 0;
}

function _detectMarker(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i3 = i2 + 40 | 0;
 i4 = i2;
 HEAP32[i3 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 22;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 22;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } while (0);
 i14 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0;
 i3 = i4;
 i9 = i3 + 40 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i9 | 0));
 HEAP32[i4 >> 2] = HEAP32[i14 + 196 >> 2];
 HEAP32[i4 + 16 >> 2] = 1;
 HEAP32[i4 + 12 >> 2] = HEAP32[i14 + 204 >> 2];
 i6 = _arDetectMarker(HEAP32[i14 + 216 >> 2] | 0, i4) | 0;
 STACKTOP = i2;
 return i6 | 0;
}

function _getMultiMarkerNum(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 24;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 24;
    break;
   }
  }
  if ((i14 | 0) == 24) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 24;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 24;
    break;
   }
  }
  if ((i14 | 0) == 24) {
   STACKTOP = i3;
   return i6 | 0;
  }
 } while (0);
 i14 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i4) | 0;
 if ((i2 | 0) < 0) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i4 = HEAP32[i14 + 288 >> 2] | 0;
 if ((HEAP32[i14 + 292 >> 2] | 0) - i4 >> 3 >>> 0 <= i2 >>> 0) {
  i6 = -1;
  STACKTOP = i3;
  return i6 | 0;
 }
 i6 = HEAP32[(HEAP32[i4 + (i2 << 3) + 4 >> 2] | 0) + 4 >> 2] | 0;
 STACKTOP = i3;
 return i6 | 0;
}

function _getTransMatSquare(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 i8 = i6 + -1 | 0;
 i9 = (i8 & i6 | 0) == 0;
 if (!i9) if (i6 >>> 0 > i1 >>> 0) i10 = i1; else i10 = (i1 >>> 0) % (i6 >>> 0) | 0; else i10 = i8 & i1;
 i11 = HEAP32[(HEAP32[14186] | 0) + (i10 << 2) >> 2] | 0;
 if (!i11) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 i12 = HEAP32[i11 >> 2] | 0;
 if (!i12) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 L15 : do if (i9) {
  i11 = i12;
  while (1) {
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i14 = (i13 | 0) == (i1 | 0);
   if (!(i14 | (i13 & i8 | 0) == (i10 | 0))) {
    i7 = -1;
    i15 = 23;
    break;
   }
   if (i14 ? (HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 23;
    break;
   }
  }
  if ((i15 | 0) == 23) {
   STACKTOP = i4;
   return i7 | 0;
  }
 } else {
  i11 = i12;
  while (1) {
   i14 = HEAP32[i11 + 4 >> 2] | 0;
   if ((i14 | 0) == (i1 | 0)) {
    if ((HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i14 >>> 0 < i6 >>> 0) i16 = i14; else i16 = (i14 >>> 0) % (i6 >>> 0) | 0;
    if ((i16 | 0) != (i10 | 0)) {
     i7 = -1;
     i15 = 23;
     break;
    }
   }
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 23;
    break;
   }
  }
  if ((i15 | 0) == 23) {
   STACKTOP = i4;
   return i7 | 0;
  }
 } while (0);
 i15 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0;
 i5 = HEAP32[i15 + 216 >> 2] | 0;
 if ((HEAP32[i5 + 44 >> 2] | 0) <= (i2 | 0)) {
  i7 = -3;
  STACKTOP = i4;
  return i7 | 0;
 }
 +_arGetTransMatSquare(HEAP32[i15 + 228 >> 2] | 0, (i2 | 0) < 0 ? 55816 : i5 + 48 + (i2 << 8) | 0, +(i3 | 0), 52128);
 i7 = 0;
 STACKTOP = i4;
 return i7 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if (((i4 - i6 | 0) / 20 | 0) >>> 0 >= i2 >>> 0) {
  i7 = i2;
  i8 = i6;
  do {
   HEAP32[i8 >> 2] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
   HEAP32[i8 + 8 >> 2] = 0;
   HEAP32[i8 + 12 >> 2] = 0;
   HEAP8[i8 + 16 >> 0] = 1;
   i8 = (HEAP32[i5 >> 2] | 0) + 20 | 0;
   HEAP32[i5 >> 2] = i8;
   i7 = i7 + -1 | 0;
  } while ((i7 | 0) != 0);
  return;
 }
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = (i6 - i7 | 0) / 20 | 0;
 i6 = i8 + i2 | 0;
 if (i6 >>> 0 > 214748364) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i9 = (i4 - i7 | 0) / 20 | 0;
 i7 = i9 << 1;
 i4 = i9 >>> 0 < 107374182 ? (i7 >>> 0 < i6 >>> 0 ? i6 : i7) : 214748364;
 do if (i4) if (i4 >>> 0 > 214748364) {
  i7 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i7, 40980);
  HEAP32[i7 >> 2] = 17420;
  ___cxa_throw(i7 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i4 * 20 | 0) | 0;
  break;
 } else i10 = 0; while (0);
 i7 = i10 + (i8 * 20 | 0) | 0;
 i8 = i10 + (i4 * 20 | 0) | 0;
 i4 = i2;
 i2 = i7;
 while (1) {
  HEAP32[i2 >> 2] = 0;
  HEAP32[i2 + 4 >> 2] = 0;
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i2 + 12 >> 2] = 0;
  HEAP8[i2 + 16 >> 0] = 1;
  i4 = i4 + -1 | 0;
  if (!i4) break; else i2 = i2 + 20 | 0;
 }
 i2 = i8;
 i8 = i10 + (i6 * 20 | 0) | 0;
 i6 = HEAP32[i1 >> 2] | 0;
 i10 = HEAP32[i5 >> 2] | 0;
 if ((i10 | 0) == (i6 | 0)) {
  i11 = i7;
  i12 = i6;
 } else {
  i4 = i10;
  i10 = i7;
  do {
   i10 = i10 + -20 | 0;
   i4 = i4 + -20 | 0;
   HEAP32[i10 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
   HEAP32[i10 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
   HEAP32[i10 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
  } while ((i4 | 0) != (i6 | 0));
  i11 = i10;
  i12 = HEAP32[i1 >> 2] | 0;
 }
 HEAP32[i1 >> 2] = i11;
 HEAP32[i5 >> 2] = i8;
 HEAP32[i3 >> 2] = i2;
 if (!i12) return;
 __ZdlPv(i12);
 return;
}

function _detectNFTMarker(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i3 = i2 + 52 | 0;
 i4 = i2;
 i5 = i2 + 48 | 0;
 HEAP32[i3 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  i7 = -1;
  STACKTOP = i2;
  return i7 | 0;
 }
 i8 = i6 + -1 | 0;
 i9 = (i8 & i6 | 0) == 0;
 if (!i9) if (i6 >>> 0 > i1 >>> 0) i10 = i1; else i10 = (i1 >>> 0) % (i6 >>> 0) | 0; else i10 = i8 & i1;
 i11 = HEAP32[(HEAP32[14186] | 0) + (i10 << 2) >> 2] | 0;
 if (!i11) {
  i7 = -1;
  STACKTOP = i2;
  return i7 | 0;
 }
 i12 = HEAP32[i11 >> 2] | 0;
 if (!i12) {
  i7 = -1;
  STACKTOP = i2;
  return i7 | 0;
 }
 L15 : do if (i9) {
  i11 = i12;
  while (1) {
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i14 = (i13 | 0) == (i1 | 0);
   if (!(i14 | (i13 & i8 | 0) == (i10 | 0))) {
    i7 = -1;
    i15 = 24;
    break;
   }
   if (i14 ? (HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 24;
    break;
   }
  }
  if ((i15 | 0) == 24) {
   STACKTOP = i2;
   return i7 | 0;
  }
 } else {
  i11 = i12;
  while (1) {
   i14 = HEAP32[i11 + 4 >> 2] | 0;
   if ((i14 | 0) == (i1 | 0)) {
    if ((HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i14 >>> 0 < i6 >>> 0) i16 = i14; else i16 = (i14 >>> 0) % (i6 >>> 0) | 0;
    if ((i16 | 0) != (i10 | 0)) {
     i7 = -1;
     i15 = 24;
     break;
    }
   }
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 24;
    break;
   }
  }
  if ((i15 | 0) == 24) {
   STACKTOP = i2;
   return i7 | 0;
  }
 } while (0);
 i15 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0;
 i3 = i15 + 240 | 0;
 i10 = HEAP32[i3 >> 2] | 0;
 if (!i10) i17 = -1; else {
  _trackingInitStart(i10, HEAP32[i15 + 204 >> 2] | 0) | 0;
  i17 = _trackingInitGetResult(HEAP32[i3 >> 2] | 0, i4, i5) | 0;
 }
 i7 = i17;
 STACKTOP = i2;
 return i7 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4 + 24 | 0;
 i6 = i4 + 12 | 0;
 i7 = i4;
 if (((i1 | 0) != (i2 | 0) ? (HEAP8[i1 >> 0] | 0) == 46 : 0) ? (i8 = i3 + 4 | 0, (HEAP32[i3 >> 2] | 0) != (HEAP32[i8 >> 2] | 0)) : 0) {
  HEAP32[i7 >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  HEAP32[i7 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i7, i1, i2);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 50240) | 0;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i3 = 0;
  while (1) {
   if ((i3 | 0) == 3) break;
   HEAP32[i7 + (i3 << 2) >> 2] = 0;
   i3 = i3 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i6, 50243) | 0;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i3 = 0;
  while (1) {
   if ((i3 | 0) == 3) break;
   HEAP32[i6 + (i3 << 2) >> 2] = 0;
   i3 = i3 + 1 | 0;
  }
  i3 = HEAP8[i5 + 11 >> 0] | 0;
  i9 = i3 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i8 >> 2] | 0) + -24 | 0, i9 ? HEAP32[i5 >> 2] | 0 : i5, i9 ? HEAP32[i5 + 4 >> 2] | 0 : i3 & 255) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  i10 = i2;
 } else i10 = i1;
 STACKTOP = i4;
 return i10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i8 = i7 + 40 | 0;
 i9 = i7;
 i10 = i7 + 32 | 0;
 i11 = i7 + 36 | 0;
 i12 = i7 + 28 | 0;
 i13 = i7 + 24 | 0;
 if (!(HEAP32[i4 + 4 >> 2] & 1)) {
  HEAP32[i10 >> 2] = -1;
  i14 = HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i12 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i12 >> 2];
  i12 = FUNCTION_TABLE_iiiiiii[i14 & 63](i1, i9, i8, i4, i5, i10) | 0;
  HEAP32[i2 >> 2] = i12;
  switch (HEAP32[i10 >> 2] | 0) {
  case 0:
   {
    HEAP8[i6 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i6 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i6 >> 0] = 1;
    HEAP32[i5 >> 2] = 4;
   }
  }
  i15 = HEAP32[i2 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv(i8, i4);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58516) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNKSt3__28ios_base6getlocEv(i8, i4);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58524) | 0;
  __ZNSt3__26localeD2Ev(i8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 63](i9, i4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i9 + 12 | 0, i4);
  HEAP32[i13 >> 2] = HEAP32[i3 >> 2];
  i3 = i9 + 24 | 0;
  HEAP32[i8 >> 2] = HEAP32[i13 >> 2];
  i13 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i9, i3, i10, i5, 1) | 0) == (i9 | 0) & 1;
  HEAP8[i6 >> 0] = i13;
  i13 = HEAP32[i2 >> 2] | 0;
  i2 = i3;
  do {
   i2 = i2 + -12 | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i2);
  } while ((i2 | 0) != (i9 | 0));
  i15 = i13;
 }
 STACKTOP = i7;
 return i15 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i8 = i7 + 40 | 0;
 i9 = i7;
 i10 = i7 + 32 | 0;
 i11 = i7 + 36 | 0;
 i12 = i7 + 28 | 0;
 i13 = i7 + 24 | 0;
 if (!(HEAP32[i4 + 4 >> 2] & 1)) {
  HEAP32[i10 >> 2] = -1;
  i14 = HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i12 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i12 >> 2];
  i12 = FUNCTION_TABLE_iiiiiii[i14 & 63](i1, i9, i8, i4, i5, i10) | 0;
  HEAP32[i2 >> 2] = i12;
  switch (HEAP32[i10 >> 2] | 0) {
  case 0:
   {
    HEAP8[i6 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i6 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i6 >> 0] = 1;
    HEAP32[i5 >> 2] = 4;
   }
  }
  i15 = HEAP32[i2 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv(i8, i4);
  i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
  __ZNSt3__26localeD2Ev(i8);
  __ZNKSt3__28ios_base6getlocEv(i8, i4);
  i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58500) | 0;
  __ZNSt3__26localeD2Ev(i8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 63](i9, i4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i9 + 12 | 0, i4);
  HEAP32[i13 >> 2] = HEAP32[i3 >> 2];
  i3 = i9 + 24 | 0;
  HEAP32[i8 >> 2] = HEAP32[i13 >> 2];
  i13 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i9, i3, i10, i5, 1) | 0) == (i9 | 0) & 1;
  HEAP8[i6 >> 0] = i13;
  i13 = HEAP32[i2 >> 2] | 0;
  i2 = i3;
  do {
   i2 = i2 + -12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
  } while ((i2 | 0) != (i9 | 0));
  i15 = i13;
 }
 STACKTOP = i7;
 return i15 | 0;
}

function __ZN6vision21OrientationAssignment16computeGradientsEPKNS_25GaussianScaleSpacePyramidE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i2 + 4 | 0;
 i6 = i2 + 8 | 0;
 i2 = HEAP32[i5 >> 2] | 0;
 if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) {
  STACKTOP = i3;
  return;
 }
 i7 = i1 + 40 | 0;
 i1 = 0;
 i8 = i2;
 while (1) {
  i2 = i8;
  i9 = HEAP32[i2 + (i1 << 5) + 4 >> 2] | 0;
  if ((i9 | 0) != ((HEAP32[i2 + (i1 << 5) + 12 >> 2] | 0) >>> 2 | 0)) {
   i10 = 5;
   break;
  }
  __ZN6vision21ComputePolarGradientsEPfPKfmm(HEAP32[(HEAP32[i7 >> 2] | 0) + (i1 << 5) + 24 >> 2] | 0, HEAP32[i2 + (i1 << 5) + 24 >> 2] | 0, i9, HEAP32[i2 + (i1 << 5) + 8 >> 2] | 0);
  i1 = i1 + 1 | 0;
  i8 = HEAP32[i5 >> 2] | 0;
  if (i1 >>> 0 >= (HEAP32[i6 >> 2] | 0) - i8 >> 5 >>> 0) {
   i10 = 3;
   break;
  }
 }
 if ((i10 | 0) == 3) {
  STACKTOP = i3;
  return;
 } else if ((i10 | 0) == 5) {
  i10 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 25771, 60) | 0, 25832, 124) | 0, 33554, 6) | 0, 96) | 0, 33561, 2) | 0, 25957, 40) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i10, i8) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i10) | 0;
  _abort();
 }
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6 + 4 | 0;
 i8 = i6;
 if (!(HEAP32[i3 + 4 >> 2] & 1)) {
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  i10 = FUNCTION_TABLE_iiiiii[i9 & 31](i1, i7, i3, i4, i5 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv(i7, i3);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58524) | 0;
  __ZNSt3__26localeD2Ev(i7);
  i4 = HEAP32[i3 >> 2] | 0;
  if (i5) FUNCTION_TABLE_vii[HEAP32[i4 + 24 >> 2] & 63](i7, i3); else FUNCTION_TABLE_vii[HEAP32[i4 + 28 >> 2] & 63](i7, i3);
  i3 = i7 + 8 + 3 | 0;
  i4 = HEAP8[i3 >> 0] | 0;
  i5 = HEAP32[i7 >> 2] | 0;
  i1 = i7 + 4 | 0;
  i9 = i4 << 24 >> 24 < 0 ? i5 : i7;
  i8 = i4;
  i4 = i5;
  while (1) {
   i5 = i8 << 24 >> 24 < 0;
   if ((i9 | 0) == ((i5 ? i4 : i7) + ((i5 ? HEAP32[i1 >> 2] | 0 : i8 & 255) << 2) | 0)) break;
   i5 = HEAP32[i9 >> 2] | 0;
   i11 = HEAP32[i2 >> 2] | 0;
   if (i11 | 0) {
    i12 = i11 + 24 | 0;
    i13 = HEAP32[i12 >> 2] | 0;
    if ((i13 | 0) == (HEAP32[i11 + 28 >> 2] | 0)) {
     i14 = HEAP32[(HEAP32[i11 >> 2] | 0) + 52 >> 2] | 0;
     i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(i5) | 0;
     i16 = FUNCTION_TABLE_iii[i14 & 63](i11, i15) | 0;
    } else {
     HEAP32[i12 >> 2] = i13 + 4;
     HEAP32[i13 >> 2] = i5;
     i16 = __ZNSt3__211char_traitsIwE11to_int_typeEw(i5) | 0;
    }
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i16, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) HEAP32[i2 >> 2] = 0;
   }
   i9 = i9 + 4 | 0;
   i8 = HEAP8[i3 >> 0] | 0;
   i4 = HEAP32[i7 >> 2] | 0;
  }
  i4 = HEAP32[i2 >> 2] | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i7);
  i10 = i4;
 }
 STACKTOP = i6;
 return i10 | 0;
}

function _setMarkerInfoDir(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 i8 = i6 + -1 | 0;
 i9 = (i8 & i6 | 0) == 0;
 if (!i9) if (i6 >>> 0 > i1 >>> 0) i10 = i1; else i10 = (i1 >>> 0) % (i6 >>> 0) | 0; else i10 = i8 & i1;
 i11 = HEAP32[(HEAP32[14186] | 0) + (i10 << 2) >> 2] | 0;
 if (!i11) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 i12 = HEAP32[i11 >> 2] | 0;
 if (!i12) {
  i7 = -1;
  STACKTOP = i4;
  return i7 | 0;
 }
 L15 : do if (i9) {
  i11 = i12;
  while (1) {
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i14 = (i13 | 0) == (i1 | 0);
   if (!(i14 | (i13 & i8 | 0) == (i10 | 0))) {
    i7 = -1;
    i15 = 23;
    break;
   }
   if (i14 ? (HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 23;
    break;
   }
  }
  if ((i15 | 0) == 23) {
   STACKTOP = i4;
   return i7 | 0;
  }
 } else {
  i11 = i12;
  while (1) {
   i14 = HEAP32[i11 + 4 >> 2] | 0;
   if ((i14 | 0) == (i1 | 0)) {
    if ((HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i14 >>> 0 < i6 >>> 0) i16 = i14; else i16 = (i14 >>> 0) % (i6 >>> 0) | 0;
    if ((i16 | 0) != (i10 | 0)) {
     i7 = -1;
     i15 = 23;
     break;
    }
   }
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = -1;
    i15 = 23;
    break;
   }
  }
  if ((i15 | 0) == 23) {
   STACKTOP = i4;
   return i7 | 0;
  }
 } while (0);
 i15 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0) + 216 | 0;
 i5 = HEAP32[i15 >> 2] | 0;
 if ((HEAP32[i5 + 44 >> 2] | 0) <= (i2 | 0)) {
  i7 = -3;
  STACKTOP = i4;
  return i7 | 0;
 }
 HEAP32[((i2 | 0) < 0 ? 55816 : i5 + 48 + (i2 << 8) | 0) + 16 >> 2] = i3;
 i7 = 0;
 STACKTOP = i4;
 return i7 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6 + 4 | 0;
 i8 = i6;
 if (!(HEAP32[i3 + 4 >> 2] & 1)) {
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  i10 = FUNCTION_TABLE_iiiiii[i9 & 31](i1, i7, i3, i4, i5 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv(i7, i3);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58500) | 0;
  __ZNSt3__26localeD2Ev(i7);
  i4 = HEAP32[i3 >> 2] | 0;
  if (i5) FUNCTION_TABLE_vii[HEAP32[i4 + 24 >> 2] & 63](i7, i3); else FUNCTION_TABLE_vii[HEAP32[i4 + 28 >> 2] & 63](i7, i3);
  i3 = i7 + 11 | 0;
  i4 = HEAP8[i3 >> 0] | 0;
  i5 = HEAP32[i7 >> 2] | 0;
  i1 = i7 + 4 | 0;
  i9 = i4 << 24 >> 24 < 0 ? i5 : i7;
  i8 = i4;
  i4 = i5;
  while (1) {
   i5 = i8 << 24 >> 24 < 0;
   if ((i9 | 0) == ((i5 ? i4 : i7) + (i5 ? HEAP32[i1 >> 2] | 0 : i8 & 255) | 0)) break;
   i5 = HEAP8[i9 >> 0] | 0;
   i11 = HEAP32[i2 >> 2] | 0;
   if (i11 | 0) {
    i12 = i11 + 24 | 0;
    i13 = HEAP32[i12 >> 2] | 0;
    if ((i13 | 0) == (HEAP32[i11 + 28 >> 2] | 0)) {
     i14 = HEAP32[(HEAP32[i11 >> 2] | 0) + 52 >> 2] | 0;
     i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i5) | 0;
     i16 = FUNCTION_TABLE_iii[i14 & 63](i11, i15) | 0;
    } else {
     HEAP32[i12 >> 2] = i13 + 1;
     HEAP8[i13 >> 0] = i5;
     i16 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i5) | 0;
    }
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i16, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) HEAP32[i2 >> 2] = 0;
   }
   i9 = i9 + 1 | 0;
   i8 = HEAP8[i3 >> 0] | 0;
   i4 = HEAP32[i7 >> 2] | 0;
  }
  i4 = HEAP32[i2 >> 2] | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
  i10 = i4;
 }
 STACKTOP = i6;
 return i10 | 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = 0;
 i6 = i5 + 4 | 0;
 HEAP32[i6 >> 2] = 0;
 i7 = i5 + 8 | 0;
 HEAP32[i7 >> 2] = 0;
 do if (i3) if (i3 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i5); else {
  i8 = i3 << 2;
  i9 = __Znwm(i8) | 0;
  HEAP32[i5 >> 2] = i9;
  i10 = i9 + (i3 << 2) | 0;
  HEAP32[i7 >> 2] = i10;
  _memset(i9 | 0, 0, i8 | 0) | 0;
  HEAP32[i6 >> 2] = i10;
  i11 = i10;
  i12 = i9;
  break;
 } else {
  i11 = 0;
  i12 = 0;
 } while (0);
 i7 = i12;
 if ((i11 | 0) != (i12 | 0)) {
  i9 = i11 - i12 >> 2;
  i11 = i12;
  HEAP32[i7 >> 2] = 0;
  if (i9 >>> 0 > 1) {
   i12 = 1;
   do {
    HEAP32[i11 + (i12 << 2) >> 2] = i12;
    i12 = i12 + 1 | 0;
   } while (i12 >>> 0 < i9 >>> 0);
   i13 = i11;
   i14 = i9;
  } else {
   i13 = i11;
   i14 = i9;
  }
 } else {
  i13 = i7;
  i14 = 0;
 }
 i7 = __Znwm(128) | 0;
 i9 = i1 + 4 | 0;
 i11 = HEAP32[i9 >> 2] | 0;
 HEAP32[i9 >> 2] = i11 + 1;
 HEAP32[i7 >> 2] = i11;
 HEAP8[i7 + 100 >> 0] = 1;
 i11 = i7 + 104 | 0;
 i9 = i7 + 4 | 0;
 i12 = i9 + 96 | 0;
 do {
  HEAP8[i9 >> 0] = 0;
  i9 = i9 + 1 | 0;
 } while ((i9 | 0) < (i12 | 0));
 HEAP32[i11 >> 2] = 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP32[i11 + 8 >> 2] = 0;
 HEAP32[i11 + 12 >> 2] = 0;
 HEAP32[i11 + 16 >> 2] = 0;
 HEAP32[i11 + 20 >> 2] = 0;
 i11 = i1 + 8 | 0;
 i9 = HEAP32[i11 >> 2] | 0;
 HEAP32[i11 >> 2] = i7;
 if (!i9) i15 = i7; else {
  __ZN6vision4NodeILi96EED2Ev(i9);
  __ZdlPv(i9);
  i15 = HEAP32[i11 >> 2] | 0;
 }
 HEAP8[i15 + 100 >> 0] = 0;
 __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii(i1, i15, i2, i3, i13, i14);
 i14 = HEAP32[i5 >> 2] | 0;
 if (!i14) {
  STACKTOP = i4;
  return;
 }
 HEAP32[i6 >> 2] = i14;
 __ZdlPv(i14);
 STACKTOP = i4;
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i1;
 i7 = i1 + 16 | 0;
 i8 = i1 + 12 | 0;
 i9 = i1 + 4 | 0;
 i10 = i1 + 8 | 0;
 HEAP8[i7 >> 0] = HEAP8[47586] | 0;
 HEAP8[i7 + 1 >> 0] = HEAP8[47587] | 0;
 HEAP8[i7 + 2 >> 0] = HEAP8[47588] | 0;
 HEAP8[i7 + 3 >> 0] = HEAP8[47589] | 0;
 HEAP8[i7 + 4 >> 0] = HEAP8[47590] | 0;
 HEAP8[i7 + 5 >> 0] = HEAP8[47591] | 0;
 i11 = i3 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i7 + 1 | 0, 51510, 1, HEAP32[i11 >> 2] | 0);
 i12 = (HEAP32[i11 >> 2] | 0) >>> 9 & 1;
 i11 = i12 + 13 | 0;
 i13 = _llvm_stacksave() | 0;
 i14 = i11;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i14 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i14 | 0) + 15 & -16 | 0);
 i14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i5;
 i5 = i15 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i15, i11, i14, i7, i6) | 0) | 0;
 i7 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i15, i5, i3) | 0;
 i14 = (i12 << 1 | 24) + -1 << 2;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i14 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i14 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i15, i7, i5, i12, i8, i9, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i8 >> 2] | 0;
 i8 = HEAP32[i9 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i10 >> 2];
 i10 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i12, i2, i8, i3, i4) | 0;
 _llvm_stackrestore(i13 | 0);
 STACKTOP = i1;
 return i10 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i1;
 i7 = i1 + 16 | 0;
 i8 = i1 + 12 | 0;
 i9 = i1 + 4 | 0;
 i10 = i1 + 8 | 0;
 HEAP8[i7 >> 0] = HEAP8[47586] | 0;
 HEAP8[i7 + 1 >> 0] = HEAP8[47587] | 0;
 HEAP8[i7 + 2 >> 0] = HEAP8[47588] | 0;
 HEAP8[i7 + 3 >> 0] = HEAP8[47589] | 0;
 HEAP8[i7 + 4 >> 0] = HEAP8[47590] | 0;
 HEAP8[i7 + 5 >> 0] = HEAP8[47591] | 0;
 i11 = i3 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i7 + 1 | 0, 51510, 1, HEAP32[i11 >> 2] | 0);
 i12 = (HEAP32[i11 >> 2] | 0) >>> 9 & 1;
 i11 = i12 + 13 | 0;
 i13 = _llvm_stacksave() | 0;
 i14 = i11;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i14 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i14 | 0) + 15 & -16 | 0);
 i14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i5;
 i5 = i15 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i15, i11, i14, i7, i6) | 0) | 0;
 i7 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i15, i5, i3) | 0;
 i14 = (i12 << 1 | 24) + -1 | 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i14 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i14 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i15, i7, i5, i12, i8, i9, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i8 >> 2] | 0;
 i8 = HEAP32[i9 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i10 >> 2];
 i10 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i12, i2, i8, i3, i4) | 0;
 _llvm_stackrestore(i13 | 0);
 STACKTOP = i1;
 return i10 | 0;
}

function __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7;
 i9 = HEAP32[i1 >> 2] | 0;
 if (!i9) {
  i10 = 0;
  STACKTOP = i7;
  return i10 | 0;
 }
 i11 = i4;
 i4 = i2;
 i12 = i11 - i4 | 0;
 i13 = i5 + 12 | 0;
 i5 = HEAP32[i13 >> 2] | 0;
 i14 = (i5 | 0) > (i12 | 0) ? i5 - i12 | 0 : 0;
 i12 = i3;
 i5 = i12 - i4 | 0;
 if ((i5 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 63](i9, i2, i5) | 0) != (i5 | 0) : 0) {
  HEAP32[i1 >> 2] = 0;
  i10 = 0;
  STACKTOP = i7;
  return i10 | 0;
 }
 do if ((i14 | 0) > 0) {
  HEAP32[i8 >> 2] = 0;
  HEAP32[i8 + 4 >> 2] = 0;
  HEAP32[i8 + 8 >> 2] = 0;
  if (i14 >>> 0 < 11) {
   i5 = i8 + 11 | 0;
   HEAP8[i5 >> 0] = i14;
   i15 = i8;
   i16 = i5;
   i17 = i8;
  } else {
   i5 = i14 + 16 & -16;
   i2 = __Znwm(i5) | 0;
   HEAP32[i8 >> 2] = i2;
   HEAP32[i8 + 8 >> 2] = i5 | -2147483648;
   HEAP32[i8 + 4 >> 2] = i14;
   i15 = i2;
   i16 = i8 + 11 | 0;
   i17 = i8;
  }
  _memset(i15 | 0, i6 | 0, i14 | 0) | 0;
  HEAP8[i15 + i14 >> 0] = 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 63](i9, (HEAP8[i16 >> 0] | 0) < 0 ? HEAP32[i17 >> 2] | 0 : i8, i14) | 0) == (i14 | 0)) {
   if ((HEAP8[i16 >> 0] | 0) < 0) __ZdlPv(HEAP32[i17 >> 2] | 0);
   break;
  }
  HEAP32[i1 >> 2] = 0;
  if ((HEAP8[i16 >> 0] | 0) < 0) __ZdlPv(HEAP32[i17 >> 2] | 0);
  i10 = 0;
  STACKTOP = i7;
  return i10 | 0;
 } while (0);
 i17 = i11 - i12 | 0;
 if ((i17 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 63](i9, i3, i17) | 0) != (i17 | 0) : 0) {
  HEAP32[i1 >> 2] = 0;
  i10 = 0;
  STACKTOP = i7;
  return i10 | 0;
 }
 HEAP32[i13 >> 2] = 0;
 i10 = i9;
 STACKTOP = i7;
 return i10 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i1;
 i7 = i1 + 16 | 0;
 i8 = i1 + 12 | 0;
 i9 = i1 + 4 | 0;
 i10 = i1 + 8 | 0;
 HEAP8[i7 >> 0] = HEAP8[47586] | 0;
 HEAP8[i7 + 1 >> 0] = HEAP8[47587] | 0;
 HEAP8[i7 + 2 >> 0] = HEAP8[47588] | 0;
 HEAP8[i7 + 3 >> 0] = HEAP8[47589] | 0;
 HEAP8[i7 + 4 >> 0] = HEAP8[47590] | 0;
 HEAP8[i7 + 5 >> 0] = HEAP8[47591] | 0;
 i11 = i3 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i7 + 1 | 0, 51510, 0, HEAP32[i11 >> 2] | 0);
 i12 = (HEAP32[i11 >> 2] | 0) >>> 9 & 1;
 i11 = i12 | 12;
 i13 = _llvm_stacksave() | 0;
 i14 = i11;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i14 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i14 | 0) + 15 & -16 | 0);
 i14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i5;
 i5 = i15 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i15, i11, i14, i7, i6) | 0) | 0;
 i7 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i15, i5, i3) | 0;
 i14 = (i12 << 1 | 21) << 2;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i14 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i14 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i15, i7, i5, i12, i8, i9, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i8 >> 2] | 0;
 i8 = HEAP32[i9 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i10 >> 2];
 i10 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i12, i2, i8, i3, i4) | 0;
 _llvm_stackrestore(i13 | 0);
 STACKTOP = i1;
 return i10 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i1;
 i7 = i1 + 16 | 0;
 i8 = i1 + 12 | 0;
 i9 = i1 + 4 | 0;
 i10 = i1 + 8 | 0;
 HEAP8[i7 >> 0] = HEAP8[47586] | 0;
 HEAP8[i7 + 1 >> 0] = HEAP8[47587] | 0;
 HEAP8[i7 + 2 >> 0] = HEAP8[47588] | 0;
 HEAP8[i7 + 3 >> 0] = HEAP8[47589] | 0;
 HEAP8[i7 + 4 >> 0] = HEAP8[47590] | 0;
 HEAP8[i7 + 5 >> 0] = HEAP8[47591] | 0;
 i11 = i3 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i7 + 1 | 0, 51510, 0, HEAP32[i11 >> 2] | 0);
 i12 = (HEAP32[i11 >> 2] | 0) >>> 9 & 1;
 i11 = i12 | 12;
 i13 = _llvm_stacksave() | 0;
 i14 = i11;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i14 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i14 | 0) + 15 & -16 | 0);
 i14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i5;
 i5 = i15 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i15, i11, i14, i7, i6) | 0) | 0;
 i7 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i15, i5, i3) | 0;
 i14 = i12 << 1 | 21;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i14 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i14 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i15, i7, i5, i12, i8, i9, i6);
 __ZNSt3__26localeD2Ev(i6);
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i8 >> 2] | 0;
 i8 = HEAP32[i9 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i10 >> 2];
 i10 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i12, i2, i8, i3, i4) | 0;
 _llvm_stackrestore(i13 | 0);
 STACKTOP = i1;
 return i10 | 0;
}

function _setDebugMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 4 | 0;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  i7 = 0;
  STACKTOP = i3;
  return i7 | 0;
 }
 i8 = i6 + -1 | 0;
 i9 = (i8 & i6 | 0) == 0;
 if (!i9) if (i6 >>> 0 > i1 >>> 0) i10 = i1; else i10 = (i1 >>> 0) % (i6 >>> 0) | 0; else i10 = i8 & i1;
 i11 = HEAP32[(HEAP32[14186] | 0) + (i10 << 2) >> 2] | 0;
 if (!i11) {
  i7 = 0;
  STACKTOP = i3;
  return i7 | 0;
 }
 i12 = HEAP32[i11 >> 2] | 0;
 if (!i12) {
  i7 = 0;
  STACKTOP = i3;
  return i7 | 0;
 }
 L15 : do if (i9) {
  i11 = i12;
  while (1) {
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i14 = (i13 | 0) == (i1 | 0);
   if (!(i14 | (i13 & i8 | 0) == (i10 | 0))) {
    i7 = 0;
    i15 = 22;
    break;
   }
   if (i14 ? (HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = 0;
    i15 = 22;
    break;
   }
  }
  if ((i15 | 0) == 22) {
   STACKTOP = i3;
   return i7 | 0;
  }
 } else {
  i11 = i12;
  while (1) {
   i14 = HEAP32[i11 + 4 >> 2] | 0;
   if ((i14 | 0) == (i1 | 0)) {
    if ((HEAP32[i11 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i14 >>> 0 < i6 >>> 0) i16 = i14; else i16 = (i14 >>> 0) % (i6 >>> 0) | 0;
    if ((i16 | 0) != (i10 | 0)) {
     i7 = 0;
     i15 = 22;
     break;
    }
   }
   i11 = HEAP32[i11 >> 2] | 0;
   if (!i11) {
    i7 = 0;
    i15 = 22;
    break;
   }
  }
  if ((i15 | 0) == 22) {
   STACKTOP = i3;
   return i7 | 0;
  }
 } while (0);
 i15 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0) + 216 | 0;
 i5 = (i2 | 0) != 0;
 _arSetDebugMode(HEAP32[i15 >> 2] | 0, i5 & 1) | 0;
 HEAP32[i4 >> 2] = i5 ? 41215 : 41219;
 _arLog(0, 1, 41224, i4);
 i7 = i2;
 STACKTOP = i3;
 return i7 | 0;
}

function _getPattRatio(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2 + 8 | 0;
 i4 = i2;
 HEAP32[i3 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  d6 = -1.0;
  STACKTOP = i2;
  return +d6;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  d6 = -1.0;
  STACKTOP = i2;
  return +d6;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  d6 = -1.0;
  STACKTOP = i2;
  return +d6;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    d6 = -1.0;
    i14 = 24;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    d6 = -1.0;
    i14 = 24;
    break;
   }
  }
  if ((i14 | 0) == 24) {
   STACKTOP = i2;
   return +d6;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     d6 = -1.0;
     i14 = 24;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    d6 = -1.0;
    i14 = 24;
    break;
   }
  }
  if ((i14 | 0) == 24) {
   STACKTOP = i2;
   return +d6;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
 i3 = HEAP32[i14 >> 2] | 0;
 if (!i3) d16 = -1.0; else {
  i14 = (_arGetPattRatio(i3, i4) | 0) == 0;
  d16 = i14 ? +HEAPF64[i4 >> 3] : -1.0;
 }
 d6 = d16;
 STACKTOP = i2;
 return +d6;
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if (i4 - i6 >> 5 >>> 0 >= i2 >>> 0) {
  i7 = i2;
  i8 = i6;
  do {
   __ZN6vision5ImageC2Ev(i8);
   i8 = (HEAP32[i5 >> 2] | 0) + 32 | 0;
   HEAP32[i5 >> 2] = i8;
   i7 = i7 + -1 | 0;
  } while ((i7 | 0) != 0);
  return;
 }
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = i6 - i7 >> 5;
 i6 = i8 + i2 | 0;
 if (i6 >>> 0 > 134217727) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i9 = i4 - i7 | 0;
 i7 = i9 >> 4;
 i4 = i9 >> 5 >>> 0 < 67108863 ? (i7 >>> 0 < i6 >>> 0 ? i6 : i7) : 134217727;
 do if (i4) if (i4 >>> 0 > 134217727) {
  i7 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i7, 40980);
  HEAP32[i7 >> 2] = 17420;
  ___cxa_throw(i7 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i4 << 5) | 0;
  break;
 } else i10 = 0; while (0);
 i7 = i10 + (i8 << 5) | 0;
 i8 = i7;
 i6 = i10 + (i4 << 5) | 0;
 i4 = i2;
 i2 = i8;
 i10 = i7;
 while (1) {
  __ZN6vision5ImageC2Ev(i10);
  i11 = i2 + 32 | 0;
  i9 = i4 + -1 | 0;
  if (!i9) break; else {
   i4 = i9;
   i2 = i11;
   i10 = i11;
  }
 }
 i10 = i11;
 i11 = HEAP32[i1 >> 2] | 0;
 i2 = HEAP32[i5 >> 2] | 0;
 if ((i2 | 0) == (i11 | 0)) {
  i12 = i8;
  i13 = i11;
  i14 = i11;
 } else {
  i4 = i2;
  i2 = i8;
  i8 = i7;
  while (1) {
   i7 = i4 + -32 | 0;
   __ZN6vision5ImageC2ERKS0_(i8 + -32 | 0, i7);
   i15 = i2 + -32 | 0;
   if ((i7 | 0) == (i11 | 0)) break; else {
    i4 = i7;
    i2 = i15;
    i8 = i15;
   }
  }
  i12 = i15;
  i13 = HEAP32[i1 >> 2] | 0;
  i14 = HEAP32[i5 >> 2] | 0;
 }
 HEAP32[i1 >> 2] = i12;
 HEAP32[i5 >> 2] = i10;
 HEAP32[i3 >> 2] = i6;
 i6 = i13;
 if ((i14 | 0) != (i6 | 0)) {
  i3 = i14;
  do {
   i3 = i3 + -32 | 0;
   __ZN6vision5ImageD2Ev(i3);
  } while ((i3 | 0) != (i6 | 0));
 }
 if (!i13) return;
 __ZdlPv(i13);
 return;
}

function _setPattRatio(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 8 | 0;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  STACKTOP = i3;
  return;
 }
 i7 = i6 + -1 | 0;
 i8 = (i7 & i6 | 0) == 0;
 if (!i8) if (i6 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i6 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  STACKTOP = i3;
  return;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  STACKTOP = i3;
  return;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i14 = 25;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 25;
    break;
   }
  }
  if ((i14 | 0) == 25) {
   STACKTOP = i3;
   return;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i6 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i6 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i14 = 25;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 25;
    break;
   }
  }
  if ((i14 | 0) == 25) {
   STACKTOP = i3;
   return;
  }
 } while (0);
 i14 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0;
 if (d2 <= 0.0 | d2 >= 1.0) {
  STACKTOP = i3;
  return;
 }
 d16 = d2;
 i5 = HEAP32[i14 + 216 >> 2] | 0;
 if (!i5) {
  STACKTOP = i3;
  return;
 }
 if (_arSetPattRatio(i5, d16) | 0) {
  STACKTOP = i3;
  return;
 }
 HEAPF64[i4 >> 3] = d16;
 _arLog(0, 1, 41102, i4);
 STACKTOP = i3;
 return;
}

function __ZN6vision14CompareFREAK84EPhPKf(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i1;
 i6 = i5 + 84 | 0;
 do {
  HEAP8[i5 >> 0] = 0;
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) < (i6 | 0));
 i5 = 0;
 i6 = 0;
 while (1) {
  i7 = i5;
  i5 = i5 + 1 | 0;
  if (i5 >>> 0 < 37) {
   i8 = i2 + (i7 << 2) | 0;
   i7 = i5;
   i9 = i6;
   while (1) {
    i10 = i1 + ((i9 | 0) / 8 | 0) | 0;
    HEAP8[i10 >> 0] = (+HEAPF32[i8 >> 2] < +HEAPF32[i2 + (i7 << 2) >> 2] & 1) << (i9 & 7) | (HEAPU8[i10 >> 0] | 0);
    i10 = i9 + 1 | 0;
    if (i7 >>> 0 < 36) {
     i7 = i7 + 1 | 0;
     i9 = i10;
    } else {
     i11 = i10;
     break;
    }
   }
  } else i11 = i6;
  if ((i5 | 0) == 37) break; else i6 = i11;
 }
 if ((i11 | 0) == 666) {
  STACKTOP = i3;
  return;
 } else {
  i3 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 32248, 33) | 0, 31966, 104) | 0, 33554, 6) | 0, 410) | 0, 33561, 2) | 0, 32282, 28) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 63](i11, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  _abort();
 }
}

function __ZNSt3__210__stdinbufIwE9pbackfailEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 16 | 0;
 i5 = i3 + 8 | 0;
 i6 = i3 + 4 | 0;
 i7 = i3;
 i8 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
 i9 = i1 + 52 | 0;
 i10 = (HEAP8[i9 >> 0] | 0) != 0;
 do if (i8) if (i10) i11 = i2; else {
  i12 = HEAP32[i1 + 48 >> 2] | 0;
  i13 = ((__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i12, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) ^ 1) & 1;
  HEAP8[i9 >> 0] = i13;
  i11 = i12;
 } else {
  if (i10) {
   i12 = i1 + 48 | 0;
   i13 = __ZNSt3__211char_traitsIwE12to_char_typeEj(HEAP32[i12 >> 2] | 0) | 0;
   HEAP32[i6 >> 2] = i13;
   i13 = HEAP32[i1 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 15](i13, HEAP32[i1 + 40 >> 2] | 0, i6, i6 + 4 | 0, i7, i4, i4 + 8 | 0, i5) | 0) {
   case 1:
   case 2:
    {
     i14 = 11;
     break;
    }
   case 3:
    {
     HEAP8[i4 >> 0] = HEAP32[i12 >> 2];
     HEAP32[i5 >> 2] = i4 + 1;
     i14 = 8;
     break;
    }
   default:
    i14 = 8;
   }
   L9 : do if ((i14 | 0) == 8) {
    i13 = i1 + 32 | 0;
    while (1) {
     i15 = HEAP32[i5 >> 2] | 0;
     if (i15 >>> 0 <= i4 >>> 0) {
      i16 = 1;
      i17 = 0;
      break L9;
     }
     i18 = i15 + -1 | 0;
     HEAP32[i5 >> 2] = i18;
     if ((_ungetc(HEAP8[i18 >> 0] | 0, HEAP32[i13 >> 2] | 0) | 0) == -1) {
      i14 = 11;
      break;
     }
    }
   } while (0);
   if ((i14 | 0) == 11) {
    i16 = 0;
    i17 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   }
   if (i16) i19 = i12; else {
    i11 = i17;
    break;
   }
  } else i19 = i1 + 48 | 0;
  HEAP32[i19 >> 2] = i2;
  HEAP8[i9 >> 0] = 1;
  i11 = i2;
 } while (0);
 STACKTOP = i3;
 return i11 | 0;
}

function _getPatternDetectionMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 22;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 22;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
 i3 = (_arGetPatternDetectionMode(HEAP32[i14 >> 2] | 0, i4) | 0) == 0;
 i6 = i3 ? HEAP32[i4 >> 2] | 0 : -1;
 STACKTOP = i2;
 return i6 | 0;
}

function __ZNSt3__210__stdinbufIcE9pbackfailEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 16 | 0;
 i5 = i3 + 4 | 0;
 i6 = i3 + 8 | 0;
 i7 = i3;
 i8 = __ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
 i9 = i1 + 52 | 0;
 i10 = (HEAP8[i9 >> 0] | 0) != 0;
 do if (i8) if (i10) i11 = i2; else {
  i12 = HEAP32[i1 + 48 >> 2] | 0;
  i13 = ((__ZNSt3__211char_traitsIcE11eq_int_typeEii(i12, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) ^ 1) & 1;
  HEAP8[i9 >> 0] = i13;
  i11 = i12;
 } else {
  if (i10) {
   i12 = i1 + 48 | 0;
   i13 = __ZNSt3__211char_traitsIcE12to_char_typeEi(HEAP32[i12 >> 2] | 0) | 0;
   HEAP8[i6 >> 0] = i13;
   i13 = HEAP32[i1 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 15](i13, HEAP32[i1 + 40 >> 2] | 0, i6, i6 + 1 | 0, i7, i4, i4 + 8 | 0, i5) | 0) {
   case 1:
   case 2:
    {
     i14 = 11;
     break;
    }
   case 3:
    {
     HEAP8[i4 >> 0] = HEAP32[i12 >> 2];
     HEAP32[i5 >> 2] = i4 + 1;
     i14 = 8;
     break;
    }
   default:
    i14 = 8;
   }
   L9 : do if ((i14 | 0) == 8) {
    i13 = i1 + 32 | 0;
    while (1) {
     i15 = HEAP32[i5 >> 2] | 0;
     if (i15 >>> 0 <= i4 >>> 0) {
      i16 = 1;
      i17 = 0;
      break L9;
     }
     i18 = i15 + -1 | 0;
     HEAP32[i5 >> 2] = i18;
     if ((_ungetc(HEAP8[i18 >> 0] | 0, HEAP32[i13 >> 2] | 0) | 0) == -1) {
      i14 = 11;
      break;
     }
    }
   } while (0);
   if ((i14 | 0) == 11) {
    i16 = 0;
    i17 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   }
   if (i16) i19 = i12; else {
    i11 = i17;
    break;
   }
  } else i19 = i1 + 48 | 0;
  HEAP32[i19 >> 2] = i2;
  HEAP8[i9 >> 0] = 1;
  i11 = i2;
 } while (0);
 STACKTOP = i3;
 return i11 | 0;
}

function _start_pass_huff_decoder(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i2 = HEAP32[i1 + 444 >> 2] | 0;
 if (!((((HEAP32[i1 + 400 >> 2] | 0) == 0 ? (HEAP32[i1 + 404 >> 2] | 0) == 63 : 0) ? (HEAP32[i1 + 408 >> 2] | 0) == 0 : 0) ? !(HEAP32[i1 + 412 >> 2] | 0) : 0)) {
  i3 = HEAP32[i1 >> 2] | 0;
  HEAP32[i3 + 20 >> 2] = 122;
  FUNCTION_TABLE_vii[HEAP32[i3 + 4 >> 2] & 63](i1, -1);
 }
 i3 = i1 + 328 | 0;
 if ((HEAP32[i3 >> 2] | 0) > 0) {
  i4 = 0;
  do {
   i5 = HEAP32[i1 + 332 + (i4 << 2) >> 2] | 0;
   i6 = HEAP32[i5 + 20 >> 2] | 0;
   i7 = HEAP32[i5 + 24 >> 2] | 0;
   _jpeg_make_d_derived_tbl(i1, 1, i6, i2 + 40 + (i6 << 2) | 0);
   _jpeg_make_d_derived_tbl(i1, 0, i7, i2 + 56 + (i7 << 2) | 0);
   HEAP32[i2 + 20 + (i4 << 2) >> 2] = 0;
   i4 = i4 + 1 | 0;
  } while ((i4 | 0) < (HEAP32[i3 >> 2] | 0));
 }
 i3 = i1 + 356 | 0;
 if ((HEAP32[i3 >> 2] | 0) <= 0) {
  i8 = i2 + 16 | 0;
  HEAP32[i8 >> 2] = 0;
  i9 = i2 + 12 | 0;
  HEAP32[i9 >> 2] = 0;
  i10 = i2 + 8 | 0;
  HEAP32[i10 >> 2] = 0;
  i11 = i1 + 276 | 0;
  i12 = HEAP32[i11 >> 2] | 0;
  i13 = i2 + 36 | 0;
  HEAP32[i13 >> 2] = i12;
  return;
 }
 i4 = 0;
 do {
  i7 = HEAP32[i1 + 332 + (HEAP32[i1 + 360 + (i4 << 2) >> 2] << 2) >> 2] | 0;
  HEAP32[i2 + 72 + (i4 << 2) >> 2] = HEAP32[i2 + 40 + (HEAP32[i7 + 20 >> 2] << 2) >> 2];
  HEAP32[i2 + 112 + (i4 << 2) >> 2] = HEAP32[i2 + 56 + (HEAP32[i7 + 24 >> 2] << 2) >> 2];
  i6 = i2 + 152 + (i4 << 2) | 0;
  if (!(HEAP32[i7 + 48 >> 2] | 0)) {
   HEAP32[i6 >> 2] = 0;
   i14 = 0;
  } else {
   HEAP32[i6 >> 2] = 1;
   i14 = (HEAP32[i7 + 36 >> 2] | 0) > 1 & 1;
  }
  HEAP32[i2 + 192 + (i4 << 2) >> 2] = i14;
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) < (HEAP32[i3 >> 2] | 0));
 i8 = i2 + 16 | 0;
 HEAP32[i8 >> 2] = 0;
 i9 = i2 + 12 | 0;
 HEAP32[i9 >> 2] = 0;
 i10 = i2 + 8 | 0;
 HEAP32[i10 >> 2] = 0;
 i11 = i1 + 276 | 0;
 i12 = HEAP32[i11 >> 2] | 0;
 i13 = i2 + 36 | 0;
 HEAP32[i13 >> 2] = i12;
 return;
}

function _getThresholdMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 22;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 22;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
 i3 = (_arGetLabelingThreshMode(HEAP32[i14 >> 2] | 0, i4) | 0) == 0;
 i6 = i3 ? HEAP32[i4 >> 2] | 0 : -1;
 STACKTOP = i2;
 return i6 | 0;
}

function _getImageProcMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 22;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 22;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
 i3 = (_arGetImageProcMode(HEAP32[i14 >> 2] | 0, i4) | 0) == 0;
 i6 = i3 ? HEAP32[i4 >> 2] | 0 : -1;
 STACKTOP = i2;
 return i6 | 0;
}

function _arGetTransMatSquare(i1, i2, d3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, d14 = 0.0, d15 = 0.0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 i6 = i5 + 192 | 0;
 i7 = i5 + 96 | 0;
 i8 = i5 + 264 | 0;
 i9 = i5;
 i10 = i5 + 256 | 0;
 do if ((HEAP32[i2 + 12 >> 2] | 0) >= 0) if ((HEAP32[i2 + 8 >> 2] | 0) < 0) {
  i11 = i2 + 24 | 0;
  break;
 } else {
  i11 = i2 + 16 | 0;
  break;
 } else i11 = i2 + 20 | 0; while (0);
 i12 = HEAP32[i11 >> 2] | 0;
 i11 = (4 - i12 | 0) % 4 | 0;
 HEAPF64[i6 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) >> 3];
 HEAPF64[i6 + 8 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) + 8 >> 3];
 i11 = (5 - i12 | 0) % 4 | 0;
 HEAPF64[i6 + 16 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) >> 3];
 HEAPF64[i6 + 24 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) + 8 >> 3];
 i11 = (6 - i12 | 0) % 4 | 0;
 HEAPF64[i6 + 32 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) >> 3];
 HEAPF64[i6 + 40 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) + 8 >> 3];
 i11 = (7 - i12 | 0) % 4 | 0;
 HEAPF64[i6 + 48 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) >> 3];
 HEAPF64[i6 + 56 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) + 8 >> 3];
 d13 = d3 * -.5;
 HEAPF64[i7 >> 3] = d13;
 d14 = d3 * .5;
 HEAPF64[i7 + 8 >> 3] = d14;
 HEAPF64[i7 + 16 >> 3] = 0.0;
 HEAPF64[i7 + 24 >> 3] = d14;
 HEAPF64[i7 + 32 >> 3] = d14;
 HEAPF64[i7 + 40 >> 3] = 0.0;
 HEAPF64[i7 + 48 >> 3] = d14;
 HEAPF64[i7 + 56 >> 3] = d13;
 HEAPF64[i7 + 64 >> 3] = 0.0;
 HEAPF64[i7 + 72 >> 3] = d13;
 HEAPF64[i7 + 80 >> 3] = d13;
 HEAPF64[i7 + 88 >> 3] = 0.0;
 HEAP32[i8 >> 2] = i6;
 HEAP32[i8 + 4 >> 2] = i7;
 HEAP32[i8 + 8 >> 2] = 4;
 if ((_icpGetInitXw2Xc_from_PlanarData(HEAP32[i1 >> 2] | 0, i6, i7, 4, i9) | 0) < 0) {
  d15 = 1.0e8;
  STACKTOP = i5;
  return +d15;
 }
 i7 = (_icpPoint(HEAP32[i1 >> 2] | 0, i8, i9, i4, i10) | 0) < 0;
 d15 = i7 ? 1.0e8 : +HEAPF64[i10 >> 3];
 STACKTOP = i5;
 return +d15;
}

function _getLabelingMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 22;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 22;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
 i3 = (_arGetLabelingMode(HEAP32[i14 >> 2] | 0, i4) | 0) == 0;
 i6 = i3 ? HEAP32[i4 >> 2] | 0 : -1;
 STACKTOP = i2;
 return i6 | 0;
}

function _getThreshold(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 22;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 22;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
 i3 = (_arGetLabelingThresh(HEAP32[i14 >> 2] | 0, i4) | 0) == 0;
 i6 = i3 ? HEAP32[i4 >> 2] | 0 : -1;
 STACKTOP = i2;
 return i6 | 0;
}

function _arUtilMatMuldff(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d4 = 0.0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 d4 = +HEAPF64[i1 >> 3];
 d5 = +HEAPF64[i1 + 8 >> 3];
 d6 = +HEAPF64[i1 + 16 >> 3];
 i7 = i2 + 16 | 0;
 i8 = i2 + 32 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i2 >> 2] * d4 + +HEAPF32[i7 >> 2] * d5 + +HEAPF32[i8 >> 2] * d6;
 i9 = i2 + 4 | 0;
 i10 = i2 + 20 | 0;
 i11 = i2 + 36 | 0;
 HEAPF32[i3 + 4 >> 2] = +HEAPF32[i9 >> 2] * d4 + +HEAPF32[i10 >> 2] * d5 + +HEAPF32[i11 >> 2] * d6;
 i12 = i2 + 8 | 0;
 i13 = i2 + 24 | 0;
 i14 = i2 + 40 | 0;
 HEAPF32[i3 + 8 >> 2] = +HEAPF32[i12 >> 2] * d4 + +HEAPF32[i13 >> 2] * d5 + +HEAPF32[i14 >> 2] * d6;
 i15 = i2 + 12 | 0;
 i16 = i2 + 28 | 0;
 i17 = i2 + 44 | 0;
 HEAPF32[i3 + 12 >> 2] = +HEAPF32[i15 >> 2] * d4 + +HEAPF32[i16 >> 2] * d5 + +HEAPF32[i17 >> 2] * d6 + +HEAPF64[i1 + 24 >> 3];
 d6 = +HEAPF64[i1 + 32 >> 3];
 d5 = +HEAPF64[i1 + 40 >> 3];
 d4 = +HEAPF64[i1 + 48 >> 3];
 HEAPF32[i3 + 16 >> 2] = +HEAPF32[i2 >> 2] * d6 + +HEAPF32[i7 >> 2] * d5 + +HEAPF32[i8 >> 2] * d4;
 HEAPF32[i3 + 20 >> 2] = +HEAPF32[i9 >> 2] * d6 + +HEAPF32[i10 >> 2] * d5 + +HEAPF32[i11 >> 2] * d4;
 HEAPF32[i3 + 24 >> 2] = +HEAPF32[i12 >> 2] * d6 + +HEAPF32[i13 >> 2] * d5 + +HEAPF32[i14 >> 2] * d4;
 HEAPF32[i3 + 28 >> 2] = +HEAPF32[i15 >> 2] * d6 + +HEAPF32[i16 >> 2] * d5 + +HEAPF32[i17 >> 2] * d4 + +HEAPF64[i1 + 56 >> 3];
 d4 = +HEAPF64[i1 + 64 >> 3];
 d5 = +HEAPF64[i1 + 72 >> 3];
 d6 = +HEAPF64[i1 + 80 >> 3];
 HEAPF32[i3 + 32 >> 2] = +HEAPF32[i2 >> 2] * d4 + +HEAPF32[i7 >> 2] * d5 + +HEAPF32[i8 >> 2] * d6;
 HEAPF32[i3 + 36 >> 2] = +HEAPF32[i9 >> 2] * d4 + +HEAPF32[i10 >> 2] * d5 + +HEAPF32[i11 >> 2] * d6;
 HEAPF32[i3 + 40 >> 2] = +HEAPF32[i12 >> 2] * d4 + +HEAPF32[i13 >> 2] * d5 + +HEAPF32[i14 >> 2] * d6;
 HEAPF32[i3 + 44 >> 2] = +HEAPF32[i15 >> 2] * d4 + +HEAPF32[i16 >> 2] * d5 + +HEAPF32[i17 >> 2] * d6 + +HEAPF64[i1 + 88 >> 3];
 return 0;
}

function _getMatrixCodeType(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = -1;
  STACKTOP = i2;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = -1;
    i14 = 22;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = -1;
     i14 = 22;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = -1;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
 _arGetMatrixCodeType(HEAP32[i14 >> 2] | 0, i4) | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 STACKTOP = i2;
 return i6 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i7 = i1 + 8 | 0;
 i8 = i1;
 i9 = i1 + 24 | 0;
 i10 = i1 + 16 | 0;
 i11 = i1 + 20 | 0;
 i12 = i8;
 HEAP32[i12 >> 2] = 37;
 HEAP32[i12 + 4 >> 2] = 0;
 i12 = i3 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i8 + 1 | 0, 51515, 1, HEAP32[i12 >> 2] | 0);
 i13 = (HEAP32[i12 >> 2] | 0) >>> 9 & 1;
 i12 = i13 + 23 | 0;
 i14 = _llvm_stacksave() | 0;
 i15 = i12;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i15 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i15 | 0) + 15 & -16 | 0);
 i15 = __ZNSt3__26__clocEv() | 0;
 i17 = i7;
 HEAP32[i17 >> 2] = i5;
 HEAP32[i17 + 4 >> 2] = i6;
 i6 = i16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i16, i12, i15, i8, i7) | 0) | 0;
 i8 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i16, i6, i3) | 0;
 i15 = (i13 << 1 | 44) + -1 << 2;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i15 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i15 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i7, i3);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i16, i8, i6, i13, i9, i10, i7);
 __ZNSt3__26localeD2Ev(i7);
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i9 >> 2] | 0;
 i9 = HEAP32[i10 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i13, i2, i9, i3, i4) | 0;
 _llvm_stackrestore(i14 | 0);
 STACKTOP = i1;
 return i11 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i7 = i1 + 8 | 0;
 i8 = i1;
 i9 = i1 + 24 | 0;
 i10 = i1 + 16 | 0;
 i11 = i1 + 20 | 0;
 i12 = i8;
 HEAP32[i12 >> 2] = 37;
 HEAP32[i12 + 4 >> 2] = 0;
 i12 = i3 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i8 + 1 | 0, 51515, 1, HEAP32[i12 >> 2] | 0);
 i13 = (HEAP32[i12 >> 2] | 0) >>> 9 & 1;
 i12 = i13 + 23 | 0;
 i14 = _llvm_stacksave() | 0;
 i15 = i12;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i15 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i15 | 0) + 15 & -16 | 0);
 i15 = __ZNSt3__26__clocEv() | 0;
 i17 = i7;
 HEAP32[i17 >> 2] = i5;
 HEAP32[i17 + 4 >> 2] = i6;
 i6 = i16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i16, i12, i15, i8, i7) | 0) | 0;
 i8 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i16, i6, i3) | 0;
 i15 = (i13 << 1 | 44) + -1 | 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i15 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i15 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i7, i3);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i16, i8, i6, i13, i9, i10, i7);
 __ZNSt3__26localeD2Ev(i7);
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i9 >> 2] | 0;
 i9 = HEAP32[i10 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i13, i2, i9, i3, i4) | 0;
 _llvm_stackrestore(i14 | 0);
 STACKTOP = i1;
 return i11 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i7 = i1 + 8 | 0;
 i8 = i1;
 i9 = i1 + 24 | 0;
 i10 = i1 + 16 | 0;
 i11 = i1 + 20 | 0;
 i12 = i8;
 HEAP32[i12 >> 2] = 37;
 HEAP32[i12 + 4 >> 2] = 0;
 i12 = i3 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i8 + 1 | 0, 51515, 0, HEAP32[i12 >> 2] | 0);
 i13 = (HEAP32[i12 >> 2] | 0) >>> 9 & 1 | 22;
 i12 = i13 + 1 | 0;
 i14 = _llvm_stacksave() | 0;
 i15 = i12;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i15 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i15 | 0) + 15 & -16 | 0);
 i15 = __ZNSt3__26__clocEv() | 0;
 i17 = i7;
 HEAP32[i17 >> 2] = i5;
 HEAP32[i17 + 4 >> 2] = i6;
 i6 = i16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i16, i12, i15, i8, i7) | 0) | 0;
 i8 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i16, i6, i3) | 0;
 i15 = (i13 << 1) + -1 << 2;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i15 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i15 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i7, i3);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i16, i8, i6, i13, i9, i10, i7);
 __ZNSt3__26localeD2Ev(i7);
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i9 >> 2] | 0;
 i9 = HEAP32[i10 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i13, i2, i9, i3, i4) | 0;
 _llvm_stackrestore(i14 | 0);
 STACKTOP = i1;
 return i11 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i7 = i1 + 8 | 0;
 i8 = i1;
 i9 = i1 + 24 | 0;
 i10 = i1 + 16 | 0;
 i11 = i1 + 20 | 0;
 i12 = i8;
 HEAP32[i12 >> 2] = 37;
 HEAP32[i12 + 4 >> 2] = 0;
 i12 = i3 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i8 + 1 | 0, 51515, 0, HEAP32[i12 >> 2] | 0);
 i13 = (HEAP32[i12 >> 2] | 0) >>> 9 & 1 | 22;
 i12 = i13 + 1 | 0;
 i14 = _llvm_stacksave() | 0;
 i15 = i12;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i15 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i15 | 0) + 15 & -16 | 0);
 i15 = __ZNSt3__26__clocEv() | 0;
 i17 = i7;
 HEAP32[i17 >> 2] = i5;
 HEAP32[i17 + 4 >> 2] = i6;
 i6 = i16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i16, i12, i15, i8, i7) | 0) | 0;
 i8 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i16, i6, i3) | 0;
 i15 = (i13 << 1) + -1 | 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * i15 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * i15 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv(i7, i3);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i16, i8, i6, i13, i9, i10, i7);
 __ZNSt3__26localeD2Ev(i7);
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP32[i9 >> 2] | 0;
 i9 = HEAP32[i10 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i7, i13, i2, i9, i3, i4) | 0;
 _llvm_stackrestore(i14 | 0);
 STACKTOP = i1;
 return i11 | 0;
}

function ___stdio_write(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4 + 32 | 0;
 i6 = i4 + 16 | 0;
 i7 = i4;
 i8 = i1 + 28 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 HEAP32[i7 >> 2] = i9;
 i10 = i1 + 20 | 0;
 i11 = (HEAP32[i10 >> 2] | 0) - i9 | 0;
 HEAP32[i7 + 4 >> 2] = i11;
 HEAP32[i7 + 8 >> 2] = i2;
 HEAP32[i7 + 12 >> 2] = i3;
 i2 = i11 + i3 | 0;
 i11 = i1 + 60 | 0;
 HEAP32[i6 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i6 + 4 >> 2] = i7;
 HEAP32[i6 + 8 >> 2] = 2;
 i9 = ___syscall_ret(___syscall146(146, i6 | 0) | 0) | 0;
 L1 : do if ((i2 | 0) != (i9 | 0)) {
  i6 = 2;
  i12 = i2;
  i13 = i7;
  i14 = i9;
  while (1) {
   if ((i14 | 0) < 0) break;
   i12 = i12 - i14 | 0;
   i15 = HEAP32[i13 + 4 >> 2] | 0;
   i16 = i14 >>> 0 > i15 >>> 0;
   i17 = i16 ? i13 + 8 | 0 : i13;
   i18 = i6 + (i16 << 31 >> 31) | 0;
   i19 = i14 - (i16 ? i15 : 0) | 0;
   HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + i19;
   i15 = i17 + 4 | 0;
   HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) - i19;
   HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i5 + 4 >> 2] = i17;
   HEAP32[i5 + 8 >> 2] = i18;
   i14 = ___syscall_ret(___syscall146(146, i5 | 0) | 0) | 0;
   if ((i12 | 0) == (i14 | 0)) {
    i20 = 3;
    break L1;
   } else {
    i6 = i18;
    i13 = i17;
   }
  }
  HEAP32[i1 + 16 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i10 >> 2] = 0;
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 32;
  if ((i6 | 0) == 2) i21 = 0; else i21 = i3 - (HEAP32[i13 + 4 >> 2] | 0) | 0;
 } else i20 = 3; while (0);
 if ((i20 | 0) == 3) {
  i20 = HEAP32[i1 + 44 >> 2] | 0;
  HEAP32[i1 + 16 >> 2] = i20 + (HEAP32[i1 + 48 >> 2] | 0);
  i1 = i20;
  HEAP32[i8 >> 2] = i1;
  HEAP32[i10 >> 2] = i1;
  i21 = i3;
 }
 STACKTOP = i4;
 return i21 | 0;
}

function _getDebugMode(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  i6 = 0;
  STACKTOP = i2;
  return i6 | 0;
 }
 i7 = i5 + -1 | 0;
 i8 = (i7 & i5 | 0) == 0;
 if (!i8) if (i5 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i5 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  i6 = 0;
  STACKTOP = i2;
  return i6 | 0;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  i6 = 0;
  STACKTOP = i2;
  return i6 | 0;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i6 = 0;
    i14 = 22;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = 0;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i5 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i5 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i6 = 0;
     i14 = 22;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i6 = 0;
    i14 = 22;
    break;
   }
  }
  if ((i14 | 0) == 22) {
   STACKTOP = i2;
   return i6 | 0;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
 _arGetDebugMode(HEAP32[i14 >> 2] | 0, i4) | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 STACKTOP = i2;
 return i6 | 0;
}

function _setThreshold(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 4 | 0;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  STACKTOP = i3;
  return;
 }
 i7 = i6 + -1 | 0;
 i8 = (i7 & i6 | 0) == 0;
 if (!i8) if (i6 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i6 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  STACKTOP = i3;
  return;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  STACKTOP = i3;
  return;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i14 = 24;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 24;
    break;
   }
  }
  if ((i14 | 0) == 24) {
   STACKTOP = i3;
   return;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i6 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i6 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i14 = 24;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 24;
    break;
   }
  }
  if ((i14 | 0) == 24) {
   STACKTOP = i3;
   return;
  }
 } while (0);
 i14 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0;
 if (i2 >>> 0 > 255) {
  STACKTOP = i3;
  return;
 }
 if (_arSetLabelingThresh(HEAP32[i14 + 216 >> 2] | 0, i2) | 0) {
  STACKTOP = i3;
  return;
 }
 HEAP32[i4 >> 2] = i2;
 _arLog(0, 1, 41168, i4);
 STACKTOP = i3;
 return;
}

function _prepare_for_output_pass(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 420 >> 2] | 0;
 i3 = i2 + 8 | 0;
 if (!(HEAP32[i3 >> 2] | 0)) {
  i4 = i1 + 84 | 0;
  do if (HEAP32[i4 >> 2] | 0 ? (HEAP32[i1 + 136 >> 2] | 0) == 0 : 0) {
   if (HEAP32[i1 + 92 >> 2] | 0 ? HEAP32[i1 + 108 >> 2] | 0 : 0) {
    HEAP32[i1 + 460 >> 2] = HEAP32[i2 + 24 >> 2];
    HEAP32[i3 >> 2] = 1;
    break;
   }
   if (!(HEAP32[i1 + 100 >> 2] | 0)) {
    i5 = HEAP32[i1 >> 2] | 0;
    HEAP32[i5 + 20 >> 2] = 46;
    FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i1);
    break;
   } else {
    HEAP32[i1 + 460 >> 2] = HEAP32[i2 + 20 >> 2];
    break;
   }
  } while (0);
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 + 448 >> 2] >> 2] & 255](i1);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 + 428 >> 2] | 0) + 8 >> 2] & 255](i1);
  if (!(HEAP32[i1 + 68 >> 2] | 0)) {
   if (!(HEAP32[i2 + 16 >> 2] | 0)) FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 + 456 >> 2] >> 2] & 255](i1);
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 + 452 >> 2] >> 2] & 255](i1);
   if (HEAP32[i4 >> 2] | 0) FUNCTION_TABLE_vii[HEAP32[HEAP32[i1 + 460 >> 2] >> 2] & 63](i1, HEAP32[i3 >> 2] | 0);
   FUNCTION_TABLE_vii[HEAP32[HEAP32[i1 + 432 >> 2] >> 2] & 63](i1, (HEAP32[i3 >> 2] | 0) == 0 ? 0 : 3);
   FUNCTION_TABLE_vii[HEAP32[HEAP32[i1 + 424 >> 2] >> 2] & 63](i1, 0);
  }
 } else {
  HEAP32[i3 >> 2] = 0;
  FUNCTION_TABLE_vii[HEAP32[HEAP32[i1 + 460 >> 2] >> 2] & 63](i1, 0);
  FUNCTION_TABLE_vii[HEAP32[HEAP32[i1 + 432 >> 2] >> 2] & 63](i1, 2);
  FUNCTION_TABLE_vii[HEAP32[HEAP32[i1 + 424 >> 2] >> 2] & 63](i1, 2);
 }
 i4 = HEAP32[i1 + 8 >> 2] | 0;
 if (!i4) return;
 i5 = HEAP32[i2 + 12 >> 2] | 0;
 HEAP32[i4 + 12 >> 2] = i5;
 i2 = ((HEAP32[i3 >> 2] | 0) == 0 ? 1 : 2) + i5 | 0;
 i5 = i4 + 16 | 0;
 HEAP32[i5 >> 2] = i2;
 if (!(HEAP32[i1 + 64 >> 2] | 0)) return;
 if (HEAP32[(HEAP32[i1 + 436 >> 2] | 0) + 20 >> 2] | 0) return;
 HEAP32[i5 >> 2] = ((HEAP32[i1 + 108 >> 2] | 0) == 0 ? 1 : 2) + i2;
 return;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILm4096EEEEEEvDpOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 20 | 0;
 i5 = i3;
 i6 = i1 + 4 | 0;
 i7 = ((HEAP32[i6 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 4) + 1 | 0;
 i8 = __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i8 >>> 0 < i7 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i9 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i9 | 0;
  i11 = i10 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEEC2EmmSB_(i5, i10 >> 4 >>> 0 < i8 >>> 1 >>> 0 ? (i11 >>> 0 < i7 >>> 0 ? i7 : i11) : i8, (HEAP32[i6 >> 2] | 0) - i9 >> 4, i1 + 12 | 0);
  i9 = i5 + 8 | 0;
  i6 = HEAP32[i9 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i4, i2);
  HEAP32[i6 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  HEAP32[i6 + 8 >> 2] = 0;
  HEAP32[i6 + 12 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i9 >> 2] = i6 + 16;
  __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(i1, i5);
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEED2Ev(i5);
  STACKTOP = i3;
  return;
 }
}

function _setPatternDetectionMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 4 | 0;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  STACKTOP = i3;
  return;
 }
 i7 = i6 + -1 | 0;
 i8 = (i7 & i6 | 0) == 0;
 if (!i8) if (i6 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i6 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  STACKTOP = i3;
  return;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  STACKTOP = i3;
  return;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i14 = 23;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i6 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i6 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i14 = 23;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0) + 216 | 0;
 if (_arSetPatternDetectionMode(HEAP32[i14 >> 2] | 0, i2) | 0) {
  STACKTOP = i3;
  return;
 }
 HEAP32[i4 >> 2] = i2;
 _arLog(0, 1, 41133, i4);
 STACKTOP = i3;
 return;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 20 | 0;
 i5 = i3;
 i6 = i1 + 4 | 0;
 i7 = ((HEAP32[i6 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 4) + 1 | 0;
 i8 = __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i8 >>> 0 < i7 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i9 = HEAP32[i1 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] | 0) - i9 | 0;
  i11 = i10 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEEC2EmmSB_(i5, i10 >> 4 >>> 0 < i8 >>> 1 >>> 0 ? (i11 >>> 0 < i7 >>> 0 ? i7 : i11) : i8, (HEAP32[i6 >> 2] | 0) - i9 >> 4, i1 + 12 | 0);
  i9 = i5 + 8 | 0;
  i6 = HEAP32[i9 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2IS4_EERKNS1_IT_Lm4096EEE(i4, i2);
  HEAP32[i6 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  HEAP32[i6 + 8 >> 2] = 0;
  HEAP32[i6 + 12 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i9 >> 2] = i6 + 16;
  __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(i1, i5);
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEED2Ev(i5);
  STACKTOP = i3;
  return;
 }
}

function _setThresholdMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 4 | 0;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  STACKTOP = i3;
  return;
 }
 i7 = i6 + -1 | 0;
 i8 = (i7 & i6 | 0) == 0;
 if (!i8) if (i6 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i6 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  STACKTOP = i3;
  return;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  STACKTOP = i3;
  return;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i14 = 23;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i6 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i6 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i14 = 23;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0) + 216 | 0;
 if (_arSetLabelingThreshMode(HEAP32[i14 >> 2] | 0, i2) | 0) {
  STACKTOP = i3;
  return;
 }
 HEAP32[i4 >> 2] = i2;
 _arLog(0, 1, 41189, i4);
 STACKTOP = i3;
 return;
}

function _getMultiMarkerCount(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 HEAP32[i3 >> 2] = i1;
 i4 = HEAP32[14187] | 0;
 if (!i4) {
  i5 = -1;
  STACKTOP = i2;
  return i5 | 0;
 }
 i6 = i4 + -1 | 0;
 i7 = (i6 & i4 | 0) == 0;
 if (!i7) if (i4 >>> 0 > i1 >>> 0) i8 = i1; else i8 = (i1 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i1;
 i9 = HEAP32[(HEAP32[14186] | 0) + (i8 << 2) >> 2] | 0;
 if (!i9) {
  i5 = -1;
  STACKTOP = i2;
  return i5 | 0;
 }
 i10 = HEAP32[i9 >> 2] | 0;
 if (!i10) {
  i5 = -1;
  STACKTOP = i2;
  return i5 | 0;
 }
 L15 : do if (i7) {
  i9 = i10;
  while (1) {
   i11 = HEAP32[i9 + 4 >> 2] | 0;
   i12 = (i11 | 0) == (i1 | 0);
   if (!(i12 | (i11 & i6 | 0) == (i8 | 0))) {
    i5 = -1;
    i13 = 22;
    break;
   }
   if (i12 ? (HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i5 = -1;
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i2;
   return i5 | 0;
  }
 } else {
  i9 = i10;
  while (1) {
   i12 = HEAP32[i9 + 4 >> 2] | 0;
   if ((i12 | 0) == (i1 | 0)) {
    if ((HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i12 >>> 0 < i4 >>> 0) i14 = i12; else i14 = (i12 >>> 0) % (i4 >>> 0) | 0;
    if ((i14 | 0) != (i8 | 0)) {
     i5 = -1;
     i13 = 22;
     break;
    }
   }
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i5 = -1;
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i2;
   return i5 | 0;
  }
 } while (0);
 i13 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0;
 i5 = (HEAP32[i13 + 292 >> 2] | 0) - (HEAP32[i13 + 288 >> 2] | 0) >> 3;
 STACKTOP = i2;
 return i5 | 0;
}

function _memchr(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i4 = i2 & 255;
 i5 = (i3 | 0) != 0;
 L1 : do if (i5 & (i1 & 3 | 0) != 0) {
  i6 = i2 & 255;
  i7 = i1;
  i8 = i3;
  while (1) {
   if ((HEAP8[i7 >> 0] | 0) == i6 << 24 >> 24) {
    i9 = i7;
    i10 = i8;
    i11 = 6;
    break L1;
   }
   i12 = i7 + 1 | 0;
   i13 = i8 + -1 | 0;
   i14 = (i13 | 0) != 0;
   if (i14 & (i12 & 3 | 0) != 0) {
    i7 = i12;
    i8 = i13;
   } else {
    i15 = i12;
    i16 = i13;
    i17 = i14;
    i11 = 5;
    break;
   }
  }
 } else {
  i15 = i1;
  i16 = i3;
  i17 = i5;
  i11 = 5;
 } while (0);
 if ((i11 | 0) == 5) if (i17) {
  i9 = i15;
  i10 = i16;
  i11 = 6;
 } else i11 = 16;
 L8 : do if ((i11 | 0) == 6) {
  i16 = i2 & 255;
  if ((HEAP8[i9 >> 0] | 0) == i16 << 24 >> 24) if (!i10) {
   i11 = 16;
   break;
  } else {
   i18 = i9;
   break;
  }
  i15 = Math_imul(i4, 16843009) | 0;
  L13 : do if (i10 >>> 0 > 3) {
   i17 = i9;
   i5 = i10;
   while (1) {
    i3 = HEAP32[i17 >> 2] ^ i15;
    if ((i3 & -2139062144 ^ -2139062144) & i3 + -16843009 | 0) {
     i19 = i5;
     i20 = i17;
     break L13;
    }
    i3 = i17 + 4 | 0;
    i1 = i5 + -4 | 0;
    if (i1 >>> 0 > 3) {
     i17 = i3;
     i5 = i1;
    } else {
     i21 = i3;
     i22 = i1;
     i11 = 11;
     break;
    }
   }
  } else {
   i21 = i9;
   i22 = i10;
   i11 = 11;
  } while (0);
  if ((i11 | 0) == 11) if (!i22) {
   i11 = 16;
   break;
  } else {
   i19 = i22;
   i20 = i21;
  }
  i15 = i20;
  i5 = i19;
  while (1) {
   if ((HEAP8[i15 >> 0] | 0) == i16 << 24 >> 24) {
    i18 = i15;
    break L8;
   }
   i5 = i5 + -1 | 0;
   if (!i5) {
    i11 = 16;
    break;
   } else i15 = i15 + 1 | 0;
  }
 } while (0);
 if ((i11 | 0) == 16) i18 = 0;
 return i18 | 0;
}

function _setImageProcMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 4 | 0;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  STACKTOP = i3;
  return;
 }
 i7 = i6 + -1 | 0;
 i8 = (i7 & i6 | 0) == 0;
 if (!i8) if (i6 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i6 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  STACKTOP = i3;
  return;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  STACKTOP = i3;
  return;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i14 = 23;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i6 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i6 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i14 = 23;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0) + 216 | 0;
 if (_arSetImageProcMode(HEAP32[i14 >> 2] | 0, i2) | 0) {
  STACKTOP = i3;
  return;
 }
 HEAP32[i4 >> 2] = i2;
 _arLog(0, 1, 41048, i4);
 STACKTOP = i3;
 return;
}

function _setLabelingMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 4 | 0;
 HEAP32[i5 >> 2] = i1;
 i6 = HEAP32[14187] | 0;
 if (!i6) {
  STACKTOP = i3;
  return;
 }
 i7 = i6 + -1 | 0;
 i8 = (i7 & i6 | 0) == 0;
 if (!i8) if (i6 >>> 0 > i1 >>> 0) i9 = i1; else i9 = (i1 >>> 0) % (i6 >>> 0) | 0; else i9 = i7 & i1;
 i10 = HEAP32[(HEAP32[14186] | 0) + (i9 << 2) >> 2] | 0;
 if (!i10) {
  STACKTOP = i3;
  return;
 }
 i11 = HEAP32[i10 >> 2] | 0;
 if (!i11) {
  STACKTOP = i3;
  return;
 }
 L15 : do if (i8) {
  i10 = i11;
  while (1) {
   i12 = HEAP32[i10 + 4 >> 2] | 0;
   i13 = (i12 | 0) == (i1 | 0);
   if (!(i13 | (i12 & i7 | 0) == (i9 | 0))) {
    i14 = 23;
    break;
   }
   if (i13 ? (HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return;
  }
 } else {
  i10 = i11;
  while (1) {
   i13 = HEAP32[i10 + 4 >> 2] | 0;
   if ((i13 | 0) == (i1 | 0)) {
    if ((HEAP32[i10 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i13 >>> 0 < i6 >>> 0) i15 = i13; else i15 = (i13 >>> 0) % (i6 >>> 0) | 0;
    if ((i15 | 0) != (i9 | 0)) {
     i14 = 23;
     break;
    }
   }
   i10 = HEAP32[i10 >> 2] | 0;
   if (!i10) {
    i14 = 23;
    break;
   }
  }
  if ((i14 | 0) == 23) {
   STACKTOP = i3;
   return;
  }
 } while (0);
 i14 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i5) | 0) + 216 | 0;
 if (_arSetLabelingMode(HEAP32[i14 >> 2] | 0, i2) | 0) {
  STACKTOP = i3;
  return;
 }
 HEAP32[i4 >> 2] = i2;
 _arLog(0, 1, 41077, i4);
 STACKTOP = i3;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i2 = i1 + 11 | 0;
 i3 = HEAP8[i2 >> 0] | 0;
 i4 = i3 << 24 >> 24 < 0;
 if (i4) {
  i5 = HEAP32[i1 + 4 >> 2] | 0;
  i6 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i5 = i3 & 255;
  i6 = 10;
 }
 i7 = i5 >>> 0 < 11;
 i8 = i7 ? 10 : (i5 + 16 & -16) + -1 | 0;
 L5 : do if ((i8 | 0) != (i6 | 0)) {
  do if (i7) {
   i9 = HEAP32[i1 >> 2] | 0;
   if (i4) {
    i10 = 0;
    i11 = i9;
    i12 = i1;
    i13 = 12;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm(i1, i9, (i3 & 255) + 1 | 0) | 0;
    __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i9);
    i13 = 15;
   }
  } else {
   i9 = i8 + 1 | 0;
   i14 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i9) | 0;
   if (i8 >>> 0 <= i6 >>> 0 & (i14 | 0) == 0) break L5;
   i15 = HEAP8[i2 >> 0] | 0;
   if (i15 << 24 >> 24 < 0) {
    i10 = 1;
    i11 = HEAP32[i1 >> 2] | 0;
    i12 = i14;
    i13 = 12;
    break;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm(i14, i1, (i15 & 255) + 1 | 0) | 0;
    i16 = i14;
    i17 = i9;
    i18 = i1 + 4 | 0;
    i13 = 14;
    break;
   }
  } while (0);
  if ((i13 | 0) == 12) {
   i9 = i1 + 4 | 0;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i12, i11, (HEAP32[i9 >> 2] | 0) + 1 | 0) | 0;
   __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i11);
   if (i10) {
    i16 = i12;
    i17 = i8 + 1 | 0;
    i18 = i9;
    i13 = 14;
   } else i13 = 15;
  }
  if ((i13 | 0) == 14) {
   HEAP32[i1 + 8 >> 2] = i17 | -2147483648;
   HEAP32[i18 >> 2] = i5;
   HEAP32[i1 >> 2] = i16;
   break;
  } else if ((i13 | 0) == 15) {
   HEAP8[i2 >> 0] = i5;
   break;
  }
 } while (0);
 return;
}

function _arParamLTCreate(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, d20 = 0.0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i4 = i3 + 24 | 0;
 i5 = i3 + 16 | 0;
 i6 = i3 + 8 | 0;
 i7 = i3;
 i8 = _malloc(208) | 0;
 if (!i8) {
  _arLog(0, 3, 20510, i3 + 32 | 0);
  _exit(1);
 }
 _memcpy(i8 | 0, i1 | 0, 184) | 0;
 i9 = HEAP32[i1 >> 2] | 0;
 i10 = i2 << 1;
 i11 = i9 + i10 | 0;
 HEAP32[i8 + 192 >> 2] = i11;
 i12 = (HEAP32[i1 + 4 >> 2] | 0) + i10 | 0;
 HEAP32[i8 + 196 >> 2] = i12;
 HEAP32[i8 + 200 >> 2] = i2;
 HEAP32[i8 + 204 >> 2] = i2;
 i10 = Math_imul(i11 << 3, i12) | 0;
 i13 = _malloc(i10) | 0;
 HEAP32[i8 + 184 >> 2] = i13;
 if (!i13) {
  _arLog(0, 3, 20510, i3 + 40 | 0);
  _exit(1);
 }
 i14 = _malloc(i10) | 0;
 HEAP32[i8 + 188 >> 2] = i14;
 if (!i14) {
  _arLog(0, 3, 20510, i3 + 48 | 0);
  _exit(1);
 }
 i10 = i1 + 104 | 0;
 i15 = HEAP32[i1 + 176 >> 2] | 0;
 if (!((i12 | 0) > 0 & (i11 | 0) > 0)) {
  STACKTOP = i3;
  return i8 | 0;
 }
 i1 = (i2 << 2) + (i9 << 1) | 0;
 i9 = i14;
 i14 = i13;
 i13 = 0;
 while (1) {
  d16 = +(i13 - i2 | 0);
  i17 = 0;
  i18 = i14;
  i14 = i14 + (i1 << 2) | 0;
  i19 = i9;
  while (1) {
   d20 = +(i17 - i2 | 0);
   _arParamIdeal2Observ(i10, d20, d16, i6, i7, i15) | 0;
   HEAPF32[i18 >> 2] = +HEAPF64[i6 >> 3];
   HEAPF32[i18 + 4 >> 2] = +HEAPF64[i7 >> 3];
   _arParamObserv2Ideal(i10, d20, d16, i4, i5, i15) | 0;
   HEAPF32[i19 >> 2] = +HEAPF64[i4 >> 3];
   HEAPF32[i19 + 4 >> 2] = +HEAPF64[i5 >> 3];
   i17 = i17 + 1 | 0;
   if ((i17 | 0) == (i11 | 0)) break; else {
    i18 = i18 + 8 | 0;
    i19 = i19 + 8 | 0;
   }
  }
  i13 = i13 + 1 | 0;
  if ((i13 | 0) == (i12 | 0)) break; else i9 = i9 + (i1 << 2) | 0;
 }
 STACKTOP = i3;
 return i8 | 0;
}

function __ZNSt3__211__stdoutbufIwE8overflowEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 16 | 0;
 i5 = i3 + 8 | 0;
 i6 = i3 + 4 | 0;
 i7 = i3;
 do if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i2, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) {
  i8 = __ZNSt3__211char_traitsIwE12to_char_typeEj(i2) | 0;
  HEAP32[i5 >> 2] = i8;
  if (HEAP8[i1 + 44 >> 0] | 0) {
   if ((_fwrite(i5, 4, 1, HEAP32[i1 + 32 >> 2] | 0) | 0) == 1) {
    i9 = 15;
    break;
   }
   i10 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
  HEAP32[i6 >> 2] = i4;
  i8 = i5 + 4 | 0;
  i11 = i1 + 36 | 0;
  i12 = i1 + 40 | 0;
  i13 = i4 + 8 | 0;
  i14 = i4;
  i15 = i1 + 32 | 0;
  i16 = i5;
  while (1) {
   i17 = HEAP32[i11 >> 2] | 0;
   i18 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i17 >> 2] | 0) + 12 >> 2] & 15](i17, HEAP32[i12 >> 2] | 0, i16, i8, i7, i4, i13, i6) | 0;
   if ((HEAP32[i7 >> 2] | 0) == (i16 | 0)) {
    i9 = 14;
    break;
   }
   if ((i18 | 0) == 3) {
    i9 = 8;
    break;
   }
   if (i18 >>> 0 >= 2) {
    i9 = 14;
    break;
   }
   i17 = (HEAP32[i6 >> 2] | 0) - i14 | 0;
   if ((_fwrite(i4, 1, i17, HEAP32[i15 >> 2] | 0) | 0) != (i17 | 0)) {
    i9 = 14;
    break;
   }
   if ((i18 | 0) == 1) i16 = HEAP32[i7 >> 2] | 0; else {
    i9 = 13;
    break;
   }
  }
  if ((i9 | 0) == 8) if ((_fwrite(i16, 1, 1, HEAP32[i15 >> 2] | 0) | 0) == 1) i9 = 13; else i9 = 14;
  if ((i9 | 0) == 13) {
   i9 = 15;
   break;
  } else if ((i9 | 0) == 14) {
   i10 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
 } else i9 = 15; while (0);
 if ((i9 | 0) == 15) i10 = __ZNSt3__211char_traitsIwE7not_eofEj(i2) | 0;
 STACKTOP = i3;
 return i10 | 0;
}

function _getProcessingImage(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 HEAP32[i3 >> 2] = i1;
 i4 = HEAP32[14187] | 0;
 if (!i4) {
  i5 = 0;
  STACKTOP = i2;
  return i5 | 0;
 }
 i6 = i4 + -1 | 0;
 i7 = (i6 & i4 | 0) == 0;
 if (!i7) if (i4 >>> 0 > i1 >>> 0) i8 = i1; else i8 = (i1 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i1;
 i9 = HEAP32[(HEAP32[14186] | 0) + (i8 << 2) >> 2] | 0;
 if (!i9) {
  i5 = 0;
  STACKTOP = i2;
  return i5 | 0;
 }
 i10 = HEAP32[i9 >> 2] | 0;
 if (!i10) {
  i5 = 0;
  STACKTOP = i2;
  return i5 | 0;
 }
 L15 : do if (i7) {
  i9 = i10;
  while (1) {
   i11 = HEAP32[i9 + 4 >> 2] | 0;
   i12 = (i11 | 0) == (i1 | 0);
   if (!(i12 | (i11 & i6 | 0) == (i8 | 0))) {
    i5 = 0;
    i13 = 22;
    break;
   }
   if (i12 ? (HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i5 = 0;
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i2;
   return i5 | 0;
  }
 } else {
  i9 = i10;
  while (1) {
   i12 = HEAP32[i9 + 4 >> 2] | 0;
   if ((i12 | 0) == (i1 | 0)) {
    if ((HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i12 >>> 0 < i4 >>> 0) i14 = i12; else i14 = (i12 >>> 0) % (i4 >>> 0) | 0;
    if ((i14 | 0) != (i8 | 0)) {
     i5 = 0;
     i13 = 22;
     break;
    }
   }
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i5 = 0;
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i2;
   return i5 | 0;
  }
 } while (0);
 i13 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
 i5 = HEAP32[(HEAP32[i13 >> 2] | 0) + 4834148 >> 2] | 0;
 STACKTOP = i2;
 return i5 | 0;
}

function __ZNSt3__211__stdoutbufIcE8overflowEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3 + 16 | 0;
 i5 = i3 + 8 | 0;
 i6 = i3 + 4 | 0;
 i7 = i3;
 do if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i2, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) {
  i8 = __ZNSt3__211char_traitsIcE12to_char_typeEi(i2) | 0;
  HEAP8[i5 >> 0] = i8;
  if (HEAP8[i1 + 44 >> 0] | 0) {
   if ((_fwrite(i5, 1, 1, HEAP32[i1 + 32 >> 2] | 0) | 0) == 1) {
    i9 = 15;
    break;
   }
   i10 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
  HEAP32[i6 >> 2] = i4;
  i8 = i5 + 1 | 0;
  i11 = i1 + 36 | 0;
  i12 = i1 + 40 | 0;
  i13 = i4 + 8 | 0;
  i14 = i4;
  i15 = i1 + 32 | 0;
  i16 = i5;
  while (1) {
   i17 = HEAP32[i11 >> 2] | 0;
   i18 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i17 >> 2] | 0) + 12 >> 2] & 15](i17, HEAP32[i12 >> 2] | 0, i16, i8, i7, i4, i13, i6) | 0;
   if ((HEAP32[i7 >> 2] | 0) == (i16 | 0)) {
    i9 = 14;
    break;
   }
   if ((i18 | 0) == 3) {
    i9 = 8;
    break;
   }
   if (i18 >>> 0 >= 2) {
    i9 = 14;
    break;
   }
   i17 = (HEAP32[i6 >> 2] | 0) - i14 | 0;
   if ((_fwrite(i4, 1, i17, HEAP32[i15 >> 2] | 0) | 0) != (i17 | 0)) {
    i9 = 14;
    break;
   }
   if ((i18 | 0) == 1) i16 = HEAP32[i7 >> 2] | 0; else {
    i9 = 13;
    break;
   }
  }
  if ((i9 | 0) == 8) if ((_fwrite(i16, 1, 1, HEAP32[i15 >> 2] | 0) | 0) == 1) i9 = 13; else i9 = 14;
  if ((i9 | 0) == 13) {
   i9 = 15;
   break;
  } else if ((i9 | 0) == 14) {
   i10 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
 } else i9 = 15; while (0);
 if ((i9 | 0) == 15) i10 = __ZNSt3__211char_traitsIcE7not_eofEi(i2) | 0;
 STACKTOP = i3;
 return i10 | 0;
}
function __ZNK6vision21HoughSimilarityVoting14getBinDistanceERfS1_S1_S1_ffffffff(i1, i2, i3, i4, i5, d6, d7, d8, d9, d10, d11, d12, d13) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 d9 = +d9;
 d10 = +d10;
 d11 = +d11;
 d12 = +d12;
 d13 = +d13;
 var i14 = 0, i15 = 0, d16 = 0.0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i15 = i14;
 d16 = +Math_abs(+(d6 - d10));
 HEAPF32[i2 >> 2] = d16;
 d16 = +Math_abs(+(d7 - d11));
 HEAPF32[i3 >> 2] = d16;
 d16 = +Math_abs(+(d9 - d13));
 HEAPF32[i5 >> 2] = d16;
 d16 = +Math_abs(+(d8 - d12));
 d12 = +(HEAP32[i1 + 60 >> 2] | 0) - d16;
 d8 = d16 < d12 ? d16 : d12;
 HEAPF32[i4 >> 2] = d8;
 if (!(d8 >= 0.0)) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 30174, 40) | 0, 30394, 122) | 0, 33554, 6) | 0, 333) | 0, 33561, 2) | 0, 30215, 33) | 0;
  __ZNKSt3__28ios_base6getlocEv(i15, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i1 = __ZNKSt3__26locale9use_facetERNS0_2idE(i15, 58484) | 0;
  i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 63](i1, 10) | 0;
  __ZNSt3__26localeD2Ev(i15);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i5) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 } else {
  STACKTOP = i14;
  return;
 }
}

function _getProjectionNearPlane(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 HEAP32[i3 >> 2] = i1;
 i4 = HEAP32[14187] | 0;
 if (!i4) {
  d5 = -1.0;
  STACKTOP = i2;
  return +d5;
 }
 i6 = i4 + -1 | 0;
 i7 = (i6 & i4 | 0) == 0;
 if (!i7) if (i4 >>> 0 > i1 >>> 0) i8 = i1; else i8 = (i1 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i1;
 i9 = HEAP32[(HEAP32[14186] | 0) + (i8 << 2) >> 2] | 0;
 if (!i9) {
  d5 = -1.0;
  STACKTOP = i2;
  return +d5;
 }
 i10 = HEAP32[i9 >> 2] | 0;
 if (!i10) {
  d5 = -1.0;
  STACKTOP = i2;
  return +d5;
 }
 L15 : do if (i7) {
  i9 = i10;
  while (1) {
   i11 = HEAP32[i9 + 4 >> 2] | 0;
   i12 = (i11 | 0) == (i1 | 0);
   if (!(i12 | (i11 & i6 | 0) == (i8 | 0))) {
    d5 = -1.0;
    i13 = 22;
    break;
   }
   if (i12 ? (HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    d5 = -1.0;
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i2;
   return +d5;
  }
 } else {
  i9 = i10;
  while (1) {
   i12 = HEAP32[i9 + 4 >> 2] | 0;
   if ((i12 | 0) == (i1 | 0)) {
    if ((HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i12 >>> 0 < i4 >>> 0) i14 = i12; else i14 = (i12 >>> 0) % (i4 >>> 0) | 0;
    if ((i14 | 0) != (i8 | 0)) {
     d5 = -1.0;
     i13 = 22;
     break;
    }
   }
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    d5 = -1.0;
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i2;
   return +d5;
  }
 } while (0);
 i13 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 272 | 0;
 d5 = +HEAPF64[i13 >> 3];
 STACKTOP = i2;
 return +d5;
}

function _getProjectionFarPlane(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 HEAP32[i3 >> 2] = i1;
 i4 = HEAP32[14187] | 0;
 if (!i4) {
  d5 = -1.0;
  STACKTOP = i2;
  return +d5;
 }
 i6 = i4 + -1 | 0;
 i7 = (i6 & i4 | 0) == 0;
 if (!i7) if (i4 >>> 0 > i1 >>> 0) i8 = i1; else i8 = (i1 >>> 0) % (i4 >>> 0) | 0; else i8 = i6 & i1;
 i9 = HEAP32[(HEAP32[14186] | 0) + (i8 << 2) >> 2] | 0;
 if (!i9) {
  d5 = -1.0;
  STACKTOP = i2;
  return +d5;
 }
 i10 = HEAP32[i9 >> 2] | 0;
 if (!i10) {
  d5 = -1.0;
  STACKTOP = i2;
  return +d5;
 }
 L15 : do if (i7) {
  i9 = i10;
  while (1) {
   i11 = HEAP32[i9 + 4 >> 2] | 0;
   i12 = (i11 | 0) == (i1 | 0);
   if (!(i12 | (i11 & i6 | 0) == (i8 | 0))) {
    d5 = -1.0;
    i13 = 22;
    break;
   }
   if (i12 ? (HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    d5 = -1.0;
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i2;
   return +d5;
  }
 } else {
  i9 = i10;
  while (1) {
   i12 = HEAP32[i9 + 4 >> 2] | 0;
   if ((i12 | 0) == (i1 | 0)) {
    if ((HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i12 >>> 0 < i4 >>> 0) i14 = i12; else i14 = (i12 >>> 0) % (i4 >>> 0) | 0;
    if ((i14 | 0) != (i8 | 0)) {
     d5 = -1.0;
     i13 = 22;
     break;
    }
   }
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    d5 = -1.0;
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i2;
   return +d5;
  }
 } while (0);
 i13 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 280 | 0;
 d5 = +HEAPF64[i13 >> 3];
 STACKTOP = i2;
 return +d5;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = i1 + 4 | 0;
 i6 = ((HEAP32[i5 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 4) + 1 | 0;
 i7 = __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i7 >>> 0 < i6 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i9 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i10 = i9 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEEC2EmmS9_(i4, i9 >> 4 >>> 0 < i7 >>> 1 >>> 0 ? (i10 >>> 0 < i6 >>> 0 ? i6 : i10) : i7, (HEAP32[i5 >> 2] | 0) - i8 >> 4, i1 + 12 | 0);
  i8 = i4 + 8 | 0;
  i5 = HEAP32[i8 >> 2] | 0;
  HEAP32[i5 >> 2] = 0;
  i7 = i5 + 4 | 0;
  HEAP32[i7 >> 2] = 0;
  i10 = i5 + 8 | 0;
  HEAP32[i10 >> 2] = 0;
  HEAP32[i5 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
  HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
  i6 = i2 + 4 | 0;
  HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
  i7 = i2 + 8 | 0;
  HEAP32[i10 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i7 >> 2] = 0;
  HEAP32[i6 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i8 >> 2] = i5 + 16;
  __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i1, i4);
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEED2Ev(i4);
  STACKTOP = i3;
  return;
 }
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = i3;
 i5 = i2;
 i6 = i4 - i5 | 0;
 i7 = (i6 | 0) / 12 | 0;
 i8 = i1 + 8 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = HEAP32[i1 >> 2] | 0;
 i11 = i10;
 if (i7 >>> 0 <= ((i9 - i10 | 0) / 12 | 0) >>> 0) {
  i12 = i1 + 4 | 0;
  i13 = ((HEAP32[i12 >> 2] | 0) - i10 | 0) / 12 | 0;
  i14 = i7 >>> 0 > i13 >>> 0;
  i15 = i14 ? i2 + (i13 * 12 | 0) | 0 : i3;
  i3 = i15;
  i13 = i3 - i5 | 0;
  if (i13 | 0) _memmove(i10 | 0, i2 | 0, i13 | 0) | 0;
  if (!i14) {
   HEAP32[i12 >> 2] = i11 + (((i13 | 0) / 12 | 0) * 12 | 0);
   return;
  }
  i13 = i4 - i3 | 0;
  if ((i13 | 0) <= 0) return;
  _memcpy(HEAP32[i12 >> 2] | 0, i15 | 0, i13 | 0) | 0;
  HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + (((i13 >>> 0) / 12 | 0) * 12 | 0);
  return;
 }
 if (!i10) i16 = i9; else {
  i9 = i1 + 4 | 0;
  HEAP32[i9 >> 2] = i10;
  __ZdlPv(i10);
  HEAP32[i8 >> 2] = 0;
  HEAP32[i9 >> 2] = 0;
  HEAP32[i1 >> 2] = 0;
  i16 = 0;
 }
 if (i7 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i9 = (i16 | 0) / 12 | 0;
 i16 = i9 << 1;
 i10 = i9 >>> 0 < 178956970 ? (i16 >>> 0 < i7 >>> 0 ? i7 : i16) : 357913941;
 if (i10 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i16 = __Znwm(i10 * 12 | 0) | 0;
 i7 = i1 + 4 | 0;
 HEAP32[i7 >> 2] = i16;
 HEAP32[i1 >> 2] = i16;
 HEAP32[i8 >> 2] = i16 + (i10 * 12 | 0);
 if ((i6 | 0) <= 0) return;
 _memcpy(i16 | 0, i2 | 0, i6 | 0) | 0;
 HEAP32[i7 >> 2] = i16 + (((i6 >>> 0) / 12 | 0) * 12 | 0);
 return;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEEC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 i2 = i1 + 64 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i1 + 88 >> 2] = 1065353216;
 __ZN6vision18BinomialPyramid32fC2Ev(i1 + 92 | 0);
 __ZN6vision25DoGScaleInvariantDetectorC2Ev(i1 + 160 | 0);
 __ZN6vision14FREAKExtractorC2Ev(i1 + 316 | 0);
 HEAP32[i1 + 636 >> 2] = 0;
 HEAP32[i1 + 640 >> 2] = 0;
 HEAP32[i1 + 644 >> 2] = 0;
 HEAPF32[i1 + 648 >> 2] = .699999988079071;
 __ZN6vision21HoughSimilarityVotingC2Ev(i1 + 652 | 0);
 __ZN6vision16RobustHomographyIfEC2Efiii(i1 + 788 | 0, .009999999776482582, 1024, 1064, 50);
 HEAPF32[i1 + 212 >> 2] = 3.0;
 HEAPF32[i1 + 216 >> 2] = 4.0;
 HEAP32[i1 + 244 >> 2] = 500;
 i2 = i1 + 220 | 0;
 i3 = i1 + 228 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 if ((((HEAP32[i3 >> 2] | 0) - i4 | 0) / 36 | 0) >>> 0 >= 500) {
  i5 = i1 + 4 | 0;
  HEAPF32[i5 >> 2] = 3.0;
  HEAP32[i1 >> 2] = 8;
  i6 = i1 + 8 | 0;
  HEAP8[i6 >> 0] = 1;
  return;
 }
 i7 = i1 + 224 | 0;
 i8 = (HEAP32[i7 >> 2] | 0) - i4 | 0;
 i9 = __Znwm(18e3) | 0;
 i10 = i9 + (((i8 | 0) / 36 | 0) * 36 | 0) | 0;
 i11 = i10 + (((i8 | 0) / -36 | 0) * 36 | 0) | 0;
 if ((i8 | 0) > 0) _memcpy(i11 | 0, i4 | 0, i8 | 0) | 0;
 HEAP32[i2 >> 2] = i11;
 HEAP32[i7 >> 2] = i10;
 HEAP32[i3 >> 2] = i9 + 18e3;
 if (!i4) {
  i5 = i1 + 4 | 0;
  HEAPF32[i5 >> 2] = 3.0;
  HEAP32[i1 >> 2] = 8;
  i6 = i1 + 8 | 0;
  HEAP8[i6 >> 0] = 1;
  return;
 }
 __ZdlPv(i4);
 i5 = i1 + 4 | 0;
 HEAPF32[i5 >> 2] = 3.0;
 HEAP32[i1 >> 2] = 8;
 i6 = i1 + 8 | 0;
 HEAP8[i6 >> 0] = 1;
 return;
}

function _fgets(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 if ((HEAP32[i3 + 76 >> 2] | 0) > -1) i4 = ___lockfile(i3) | 0; else i4 = 0;
 i5 = i2 + -1 | 0;
 if ((i2 | 0) < 2) {
  i2 = i3 + 74 | 0;
  i6 = HEAP8[i2 >> 0] | 0;
  HEAP8[i2 >> 0] = i6 + 255 | i6;
  if (i4 | 0) ___unlockfile(i3);
  if (!i5) {
   HEAP8[i1 >> 0] = 0;
   i7 = i1;
  } else i7 = 0;
 } else {
  L11 : do if (i5) {
   i6 = i3 + 4 | 0;
   i2 = i3 + 8 | 0;
   i8 = i5;
   i9 = i1;
   while (1) {
    i10 = HEAP32[i6 >> 2] | 0;
    i11 = i10;
    i12 = (HEAP32[i2 >> 2] | 0) - i11 | 0;
    i13 = _memchr(i10, 10, i12) | 0;
    i14 = (i13 | 0) == 0;
    i15 = i14 ? i12 : 1 - i11 + i13 | 0;
    i13 = i15 >>> 0 < i8 >>> 0 ? i15 : i8;
    _memcpy(i9 | 0, i10 | 0, i13 | 0) | 0;
    i10 = (HEAP32[i6 >> 2] | 0) + i13 | 0;
    HEAP32[i6 >> 2] = i10;
    i16 = i9 + i13 | 0;
    i15 = i8 - i13 | 0;
    if (!(i14 & (i15 | 0) != 0)) {
     i17 = i16;
     i18 = 17;
     break L11;
    }
    if (i10 >>> 0 >= (HEAP32[i2 >> 2] | 0) >>> 0) {
     i14 = ___uflow(i3) | 0;
     if ((i14 | 0) < 0) break; else i19 = i14;
    } else {
     HEAP32[i6 >> 2] = i10 + 1;
     i19 = HEAPU8[i10 >> 0] | 0;
    }
    i10 = i16 + 1 | 0;
    HEAP8[i16 >> 0] = i19;
    i8 = i15 + -1 | 0;
    if ((i19 & 255 | 0) == 10 | (i8 | 0) == 0) {
     i17 = i10;
     i18 = 17;
     break L11;
    } else i9 = i10;
   }
   if ((i16 | 0) != (i1 | 0) ? (HEAP32[i3 >> 2] & 16 | 0) != 0 : 0) {
    i17 = i16;
    i18 = 17;
   } else i20 = 0;
  } else {
   i17 = i1;
   i18 = 17;
  } while (0);
  if ((i18 | 0) == 17) if (!i1) i20 = 0; else {
   HEAP8[i17 >> 0] = 0;
   i20 = i1;
  }
  if (!i4) i7 = i20; else {
   ___unlockfile(i3);
   i7 = i20;
  }
 }
 return i7 | 0;
}

function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(i1) {
 i1 = i1 | 0;
 __embind_register_void(13352, 51682);
 __embind_register_bool(13360, 51687, 1, 1, 0);
 __embind_register_integer(13368, 51456, 1, -128, 127);
 __embind_register_integer(13384, 51461, 1, -128, 127);
 __embind_register_integer(13376, 51473, 1, 0, 255);
 __embind_register_integer(13392, 51487, 2, -32768, 32767);
 __embind_register_integer(13400, 51493, 2, 0, 65535);
 __embind_register_integer(13408, 51692, 4, -2147483648, 2147483647);
 __embind_register_integer(13416, 51696, 4, 0, -1);
 __embind_register_integer(13424, 51709, 4, -2147483648, 2147483647);
 __embind_register_integer(13432, 51714, 4, 0, -1);
 __embind_register_float(13440, 51738, 4);
 __embind_register_float(13448, 51850, 8);
 __embind_register_std_string(11080, 51065);
 __embind_register_std_string(11112, 45475);
 __embind_register_std_wstring(11136, 4, 45508);
 __embind_register_emval(11160, 45521);
 __embind_register_memory_view(11168, 0, 45537);
 __embind_register_memory_view(11176, 0, 45567);
 __embind_register_memory_view(11184, 1, 45604);
 __embind_register_memory_view(11192, 2, 45643);
 __embind_register_memory_view(11200, 3, 45674);
 __embind_register_memory_view(11208, 4, 45714);
 __embind_register_memory_view(11216, 5, 45743);
 __embind_register_memory_view(11224, 4, 45781);
 __embind_register_memory_view(11232, 5, 45811);
 __embind_register_memory_view(11176, 0, 45850);
 __embind_register_memory_view(11184, 1, 45882);
 __embind_register_memory_view(11192, 2, 45915);
 __embind_register_memory_view(11200, 3, 45948);
 __embind_register_memory_view(11208, 4, 45982);
 __embind_register_memory_view(11216, 5, 46015);
 __embind_register_memory_view(11240, 6, 46049);
 __embind_register_memory_view(11248, 7, 46080);
 __embind_register_memory_view(11256, 7, 46112);
 return;
}

function ___shgetc(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i2 = i1 + 112 | 0;
 i3 = i2;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = HEAP32[i3 + 4 >> 2] | 0;
 if (!((i4 | 0) == 0 & (i5 | 0) == 0) ? (i3 = i1 + 120 | 0, i6 = HEAP32[i3 + 4 >> 2] | 0, !((i6 | 0) < (i5 | 0) | ((i6 | 0) == (i5 | 0) ? (HEAP32[i3 >> 2] | 0) >>> 0 < i4 >>> 0 : 0))) : 0) i7 = 4; else {
  i4 = ___uflow(i1) | 0;
  if ((i4 | 0) >= 0) {
   i3 = i2;
   i2 = HEAP32[i3 >> 2] | 0;
   i5 = HEAP32[i3 + 4 >> 2] | 0;
   i3 = HEAP32[i1 + 8 >> 2] | 0;
   if (!((i2 | 0) == 0 & (i5 | 0) == 0)) {
    i6 = HEAP32[i1 + 4 >> 2] | 0;
    i8 = i3 - i6 | 0;
    i9 = ((i8 | 0) < 0) << 31 >> 31;
    i10 = i1 + 120 | 0;
    i11 = _i64Subtract(i2 | 0, i5 | 0, HEAP32[i10 >> 2] | 0, HEAP32[i10 + 4 >> 2] | 0) | 0;
    i10 = getTempRet0() | 0;
    i5 = i3;
    if ((i10 | 0) > (i9 | 0) | (i10 | 0) == (i9 | 0) & i11 >>> 0 > i8 >>> 0) {
     i12 = i5;
     i7 = 9;
    } else {
     HEAP32[i1 + 104 >> 2] = i6 + (i11 + -1);
     i13 = i5;
    }
   } else {
    i12 = i3;
    i7 = 9;
   }
   if ((i7 | 0) == 9) {
    HEAP32[i1 + 104 >> 2] = i3;
    i13 = i12;
   }
   i12 = i1 + 4 | 0;
   if (!i13) i14 = HEAP32[i12 >> 2] | 0; else {
    i3 = HEAP32[i12 >> 2] | 0;
    i12 = i13 + 1 - i3 | 0;
    i13 = i1 + 120 | 0;
    i5 = i13;
    i11 = _i64Add(HEAP32[i5 >> 2] | 0, HEAP32[i5 + 4 >> 2] | 0, i12 | 0, ((i12 | 0) < 0) << 31 >> 31 | 0) | 0;
    i12 = getTempRet0() | 0;
    i5 = i13;
    HEAP32[i5 >> 2] = i11;
    HEAP32[i5 + 4 >> 2] = i12;
    i14 = i3;
   }
   i3 = i14 + -1 | 0;
   if ((i4 | 0) == (HEAPU8[i3 >> 0] | 0 | 0)) i15 = i4; else {
    HEAP8[i3 >> 0] = i4;
    i15 = i4;
   }
  } else i7 = 4;
 }
 if ((i7 | 0) == 4) {
  HEAP32[i1 + 104 >> 2] = 0;
  i15 = -1;
 }
 return i15 | 0;
}

function _loadNFTMarker(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i5 = i4 + 56 | 0;
 i6 = i4 + 48 | 0;
 i7 = i4 + 16 | 0;
 i8 = i4 + 8 | 0;
 i9 = i4;
 i10 = i4 + 88 | 0;
 i11 = i4 + 92 | 0;
 i12 = i4 + 84 | 0;
 HEAP32[i10 >> 2] = i2;
 i13 = HEAP32[i1 + 232 >> 2] | 0;
 i14 = _trackingInitInit(i13) | 0;
 if (!i14) _exit(-1);
 HEAP32[i1 + 240 >> 2] = i14;
 HEAP32[i11 >> 2] = 0;
 HEAP32[i9 >> 2] = i3;
 _arLog(0, 1, 44411, i9);
 if ((_kpmLoadRefDataSet(i3, 44429, i12) | 0) < 0) {
  HEAP32[i8 >> 2] = i3;
  _arLog(0, 3, 44435, i8);
  i15 = 0;
  STACKTOP = i4;
  return i15 | 0;
 }
 HEAP32[i7 >> 2] = i2;
 _arLog(0, 1, 44473, i7);
 if ((_kpmChangePageNoOfRefDataSet(HEAP32[i12 >> 2] | 0, -1, i2) | 0) < 0) {
  _arLog(0, 3, 44498, i4 + 24 | 0);
  i15 = 0;
  STACKTOP = i4;
  return i15 | 0;
 }
 if ((_kpmMergeRefDataSet(i11, i12) | 0) < 0) {
  _arLog(0, 3, 44534, i4 + 32 | 0);
  i15 = 0;
  STACKTOP = i4;
  return i15 | 0;
 }
 _arLog(0, 1, 44561, i4 + 40 | 0);
 HEAP32[i6 >> 2] = i3;
 _arLog(0, 1, 44570, i6);
 i6 = _ar2ReadSurfaceSet(i3, 44587, 0) | 0;
 if (!i6) {
  HEAP32[i5 >> 2] = i3;
  _arLog(0, 3, 44592, i5);
 }
 _arLog(0, 1, 44561, i4 + 64 | 0);
 i5 = __ZNSt3__213unordered_mapIiP14AR2SurfaceSetTNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS2_EEEEEixERS9_(i1 + 248 | 0, i10) | 0;
 HEAP32[i5 >> 2] = i6;
 if ((_kpmSetRefDataSet(i13, HEAP32[i11 >> 2] | 0) | 0) < 0) {
  _arLog(0, 3, 44625, i4 + 72 | 0);
  i15 = 0;
  STACKTOP = i4;
  return i15 | 0;
 } else {
  _kpmDeleteRefDataSet(i11) | 0;
  _arLog(0, 1, 44650, i4 + 80 | 0);
  i15 = 1;
  STACKTOP = i4;
  return i15 | 0;
 }
 return 0;
}

function _arGetTransMatSquareCont(i1, i2, i3, d4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, d14 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 i7 = i6 + 96 | 0;
 i8 = i6;
 i9 = i6 + 168 | 0;
 i10 = i6 + 160 | 0;
 do if ((HEAP32[i2 + 12 >> 2] | 0) >= 0) if ((HEAP32[i2 + 8 >> 2] | 0) < 0) {
  i11 = i2 + 24 | 0;
  break;
 } else {
  i11 = i2 + 16 | 0;
  break;
 } else i11 = i2 + 20 | 0; while (0);
 i12 = HEAP32[i11 >> 2] | 0;
 i11 = (4 - i12 | 0) % 4 | 0;
 HEAPF64[i7 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) >> 3];
 HEAPF64[i7 + 8 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) + 8 >> 3];
 i11 = (5 - i12 | 0) % 4 | 0;
 HEAPF64[i7 + 16 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) >> 3];
 HEAPF64[i7 + 24 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) + 8 >> 3];
 i11 = (6 - i12 | 0) % 4 | 0;
 HEAPF64[i7 + 32 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) >> 3];
 HEAPF64[i7 + 40 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) + 8 >> 3];
 i11 = (7 - i12 | 0) % 4 | 0;
 HEAPF64[i7 + 48 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) >> 3];
 HEAPF64[i7 + 56 >> 3] = +HEAPF64[i2 + 168 + (i11 << 4) + 8 >> 3];
 d13 = d4 * -.5;
 HEAPF64[i8 >> 3] = d13;
 d14 = d4 * .5;
 HEAPF64[i8 + 8 >> 3] = d14;
 HEAPF64[i8 + 16 >> 3] = 0.0;
 HEAPF64[i8 + 24 >> 3] = d14;
 HEAPF64[i8 + 32 >> 3] = d14;
 HEAPF64[i8 + 40 >> 3] = 0.0;
 HEAPF64[i8 + 48 >> 3] = d14;
 HEAPF64[i8 + 56 >> 3] = d13;
 HEAPF64[i8 + 64 >> 3] = 0.0;
 HEAPF64[i8 + 72 >> 3] = d13;
 HEAPF64[i8 + 80 >> 3] = d13;
 HEAPF64[i8 + 88 >> 3] = 0.0;
 HEAP32[i9 >> 2] = i7;
 HEAP32[i9 + 4 >> 2] = i8;
 HEAP32[i9 + 8 >> 2] = 4;
 i8 = (_icpPoint(HEAP32[i1 >> 2] | 0, i9, i3, i5, i10) | 0) < 0;
 STACKTOP = i6;
 return +(i8 ? 1.0e8 : +HEAPF64[i10 >> 3]);
}

function _memcpy(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 if ((i3 | 0) >= 8192) {
  _emscripten_memcpy_big(i1 | 0, i2 | 0, i3 | 0) | 0;
  return i1 | 0;
 }
 i4 = i1 | 0;
 i5 = i1 + i3 | 0;
 if ((i1 & 3) == (i2 & 3)) {
  while (i1 & 3) {
   if (!i3) return i4 | 0;
   HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
   i1 = i1 + 1 | 0;
   i2 = i2 + 1 | 0;
   i3 = i3 - 1 | 0;
  }
  i6 = i5 & -4 | 0;
  i3 = i6 - 64 | 0;
  while ((i1 | 0) <= (i3 | 0)) {
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   HEAP32[i1 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
   HEAP32[i1 + 16 >> 2] = HEAP32[i2 + 16 >> 2];
   HEAP32[i1 + 20 >> 2] = HEAP32[i2 + 20 >> 2];
   HEAP32[i1 + 24 >> 2] = HEAP32[i2 + 24 >> 2];
   HEAP32[i1 + 28 >> 2] = HEAP32[i2 + 28 >> 2];
   HEAP32[i1 + 32 >> 2] = HEAP32[i2 + 32 >> 2];
   HEAP32[i1 + 36 >> 2] = HEAP32[i2 + 36 >> 2];
   HEAP32[i1 + 40 >> 2] = HEAP32[i2 + 40 >> 2];
   HEAP32[i1 + 44 >> 2] = HEAP32[i2 + 44 >> 2];
   HEAP32[i1 + 48 >> 2] = HEAP32[i2 + 48 >> 2];
   HEAP32[i1 + 52 >> 2] = HEAP32[i2 + 52 >> 2];
   HEAP32[i1 + 56 >> 2] = HEAP32[i2 + 56 >> 2];
   HEAP32[i1 + 60 >> 2] = HEAP32[i2 + 60 >> 2];
   i1 = i1 + 64 | 0;
   i2 = i2 + 64 | 0;
  }
  while ((i1 | 0) < (i6 | 0)) {
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   i1 = i1 + 4 | 0;
   i2 = i2 + 4 | 0;
  }
 } else {
  i6 = i5 - 4 | 0;
  while ((i1 | 0) < (i6 | 0)) {
   HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
   HEAP8[i1 + 1 >> 0] = HEAP8[i2 + 1 >> 0] | 0;
   HEAP8[i1 + 2 >> 0] = HEAP8[i2 + 2 >> 0] | 0;
   HEAP8[i1 + 3 >> 0] = HEAP8[i2 + 3 >> 0] | 0;
   i1 = i1 + 4 | 0;
   i2 = i2 + 4 | 0;
  }
 }
 while ((i1 | 0) < (i5 | 0)) {
  HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 return i4 | 0;
}

function __ZN6vision21OrientationAssignment5allocEmmiiiffif(i1, i2, i3, i4, i5, i6, d7, d8, i9, d10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 d8 = +d8;
 i9 = i9 | 0;
 d10 = +d10;
 var i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 HEAP32[i1 >> 2] = i4;
 i11 = i1 + 4 | 0;
 HEAP32[i11 >> 2] = i5;
 HEAP32[i1 + 8 >> 2] = i6;
 HEAPF32[i1 + 12 >> 2] = d7;
 HEAPF32[i1 + 16 >> 2] = d8;
 HEAP32[i1 + 20 >> 2] = i9;
 HEAPF32[i1 + 24 >> 2] = d10;
 i9 = i1 + 28 | 0;
 i12 = i1 + 32 | 0;
 i13 = HEAP32[i9 >> 2] | 0;
 i14 = (HEAP32[i12 >> 2] | 0) - i13 >> 2;
 if (i14 >>> 0 >= i6 >>> 0) if (i14 >>> 0 > i6 >>> 0) {
  HEAP32[i12 >> 2] = i13 + (i6 << 2);
  i15 = i4;
  i16 = i5;
 } else {
  i15 = i4;
  i16 = i5;
 } else {
  __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i9, i6 - i14 | 0);
  i15 = HEAP32[i1 >> 2] | 0;
  i16 = HEAP32[i11 >> 2] | 0;
 }
 i11 = i1 + 40 | 0;
 i14 = Math_imul(i16, i15) | 0;
 i15 = i1 + 44 | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 i16 = HEAP32[i11 >> 2] | 0;
 i6 = i1 - i16 >> 5;
 i9 = i16;
 i16 = i1;
 if (i14 >>> 0 <= i6 >>> 0) {
  if (i14 >>> 0 < i6 >>> 0) {
   i1 = i9 + (i14 << 5) | 0;
   if ((i1 | 0) != (i16 | 0)) {
    i9 = i16;
    do {
     i9 = i9 + -32 | 0;
     __ZN6vision5ImageD2Ev(i9);
    } while ((i9 | 0) != (i1 | 0));
   }
   HEAP32[i15 >> 2] = i1;
  }
 } else __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8__appendEm(i11, i14 - i6 | 0);
 if (!i4) return;
 if (!i5) return;
 i6 = 0;
 do {
  i14 = Math_imul(i6, i5) | 0;
  i1 = i2 >>> i6;
  i15 = i3 >>> i6;
  i9 = 0;
  do {
   __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[i11 >> 2] | 0) + (i9 + i14 << 5) | 0, 2, i1, i15, -1, 2);
   i9 = i9 + 1 | 0;
  } while ((i9 | 0) != (i5 | 0));
  i6 = i6 + 1 | 0;
 } while ((i6 | 0) != (i4 | 0));
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 if (i2 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 i3 = i1 + 8 | 0;
 i4 = i3 + 3 | 0;
 i5 = HEAP8[i4 >> 0] | 0;
 i6 = i5 << 24 >> 24 < 0;
 if (i6) {
  i7 = HEAP32[i1 + 4 >> 2] | 0;
  i8 = (HEAP32[i3 >> 2] & 2147483647) + -1 | 0;
 } else {
  i7 = i5 & 255;
  i8 = 1;
 }
 i9 = i7 >>> 0 > i2 >>> 0 ? i7 : i2;
 i2 = i9 >>> 0 < 2;
 i10 = i2 ? 1 : (i9 + 4 & -4) + -1 | 0;
 do if ((i10 | 0) != (i8 | 0)) {
  do if (i2) {
   i9 = HEAP32[i1 >> 2] | 0;
   if (i6) {
    i11 = 0;
    i12 = i9;
    i13 = i1;
    i14 = 15;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwm(i1, i9, (i5 & 255) + 1 | 0) | 0;
    __ZdlPv(i9);
    i14 = 18;
   }
  } else {
   i9 = i10 + 1 | 0;
   if (i9 >>> 0 > 1073741823) _abort();
   i15 = __Znwm(i9 << 2) | 0;
   if (i6) {
    i11 = 1;
    i12 = HEAP32[i1 >> 2] | 0;
    i13 = i15;
    i14 = 15;
    break;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwm(i15, i1, (i5 & 255) + 1 | 0) | 0;
    i16 = i15;
    i17 = i9;
    i18 = i1 + 4 | 0;
    i14 = 17;
    break;
   }
  } while (0);
  if ((i14 | 0) == 15) {
   i9 = i1 + 4 | 0;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm(i13, i12, (HEAP32[i9 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv(i12);
   if (i11) {
    i16 = i13;
    i17 = i10 + 1 | 0;
    i18 = i9;
    i14 = 17;
   } else i14 = 18;
  }
  if ((i14 | 0) == 17) {
   HEAP32[i3 >> 2] = i17 | -2147483648;
   HEAP32[i18 >> 2] = i7;
   HEAP32[i1 >> 2] = i16;
   break;
  } else if ((i14 | 0) == 18) {
   HEAP8[i4 >> 0] = i7;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7;
 i9 = HEAP32[i1 >> 2] | 0;
 L1 : do if (!i9) i10 = 0; else {
  i11 = i4;
  i12 = i2;
  i13 = i11 - i12 >> 2;
  i14 = i5 + 12 | 0;
  i15 = HEAP32[i14 >> 2] | 0;
  i16 = (i15 | 0) > (i13 | 0) ? i15 - i13 | 0 : 0;
  i13 = i3;
  i15 = i13 - i12 | 0;
  i12 = i15 >> 2;
  if ((i15 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 63](i9, i2, i12) | 0) != (i12 | 0) : 0) {
   HEAP32[i1 >> 2] = 0;
   i10 = 0;
   break;
  }
  do if ((i16 | 0) > 0) {
   HEAP32[i8 >> 2] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
   HEAP32[i8 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw(i8, i16, i6);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 63](i9, (HEAP8[i8 + 8 + 3 >> 0] | 0) < 0 ? HEAP32[i8 >> 2] | 0 : i8, i16) | 0) == (i16 | 0)) {
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
    break;
   } else {
    HEAP32[i1 >> 2] = 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
    i10 = 0;
    break L1;
   }
  } while (0);
  i16 = i11 - i13 | 0;
  i12 = i16 >> 2;
  if ((i16 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 63](i9, i3, i12) | 0) != (i12 | 0) : 0) {
   HEAP32[i1 >> 2] = 0;
   i10 = 0;
   break;
  }
  HEAP32[i14 >> 2] = 0;
  i10 = i9;
 } while (0);
 STACKTOP = i7;
 return i10 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 do if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i5) | 0)) {
  if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 >> 2] | 0, i5) | 0)) {
   i6 = HEAP32[i1 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 24 >> 2] & 31](i6, i2, i3, i4, i5);
   break;
  }
  if ((HEAP32[i2 + 16 >> 2] | 0) != (i3 | 0) ? (i6 = i2 + 20 | 0, (HEAP32[i6 >> 2] | 0) != (i3 | 0)) : 0) {
   HEAP32[i2 + 32 >> 2] = i4;
   i7 = i2 + 44 | 0;
   if ((HEAP32[i7 >> 2] | 0) == 4) break;
   i8 = i2 + 52 | 0;
   HEAP8[i8 >> 0] = 0;
   i9 = i2 + 53 | 0;
   HEAP8[i9 >> 0] = 0;
   i10 = HEAP32[i1 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 20 >> 2] & 7](i10, i2, i3, i3, 1, i5);
   if (HEAP8[i9 >> 0] | 0) if (!(HEAP8[i8 >> 0] | 0)) {
    i11 = 1;
    i12 = 11;
   } else i12 = 15; else {
    i11 = 0;
    i12 = 11;
   }
   do if ((i12 | 0) == 11) {
    HEAP32[i6 >> 2] = i3;
    i8 = i2 + 40 | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
    if ((HEAP32[i2 + 36 >> 2] | 0) == 1 ? (HEAP32[i2 + 24 >> 2] | 0) == 2 : 0) {
     HEAP8[i2 + 54 >> 0] = 1;
     if (i11) {
      i12 = 15;
      break;
     } else {
      i13 = 4;
      break;
     }
    }
    if (i11) i12 = 15; else i13 = 4;
   } while (0);
   if ((i12 | 0) == 15) i13 = 3;
   HEAP32[i7 >> 2] = i13;
   break;
  }
  if ((i4 | 0) == 1) HEAP32[i2 + 32 >> 2] = 1;
 } else __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, i2, i3, i4); while (0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4 + 12 | 0;
 i6 = i4;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 100 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 115 : 0) ? (i7 = i1 + 2 | 0, i8 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0, (i8 | 0) != (i7 | 0)) : 0) ? (i7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i8, i2, i3) | 0, (i7 | 0) != (i8 | 0)) : 0) ? (i8 = i3 + 4 | 0, i2 = HEAP32[i8 >> 2] | 0, ((i2 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i2 + -24 | 0);
  i2 = HEAP32[i8 >> 2] | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == -1) break;
   i9 = i3 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i9 * 24 | 0) | 0);
   i3 = i9;
  }
  HEAP32[i8 >> 2] = i2 + -24;
  __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i6, 50536, i5);
  i2 = HEAP8[i6 + 11 >> 0] | 0;
  i3 = i2 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i8 >> 2] | 0) + -24 | 0, i3 ? HEAP32[i6 >> 2] | 0 : i6, i3 ? HEAP32[i6 + 4 >> 2] | 0 : i2 & 255) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  i10 = i7;
 } else i10 = i1;
 STACKTOP = i4;
 return i10 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4 + 12 | 0;
 i6 = i4;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 100 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i7 = i1 + 2 | 0, i8 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0, (i8 | 0) != (i7 | 0)) : 0) ? (i7 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i8, i2, i3) | 0, (i7 | 0) != (i8 | 0)) : 0) ? (i8 = i3 + 4 | 0, i2 = HEAP32[i8 >> 2] | 0, ((i2 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i2 + -24 | 0);
  i2 = HEAP32[i8 >> 2] | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == -1) break;
   i9 = i3 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i9 * 24 | 0) | 0);
   i3 = i9;
  }
  HEAP32[i8 >> 2] = i2 + -24;
  __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i6, 50534, i5);
  i2 = HEAP8[i6 + 11 >> 0] | 0;
  i3 = i2 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i8 >> 2] | 0) + -24 | 0, i3 ? HEAP32[i6 >> 2] | 0 : i6, i3 ? HEAP32[i6 + 4 >> 2] | 0 : i2 & 255) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  i10 = i7;
 } else i10 = i1;
 STACKTOP = i4;
 return i10 | 0;
}

function _format_message(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i3 + 8 | 0;
 i5 = i3;
 i6 = HEAP32[i1 >> 2] | 0;
 i1 = HEAP32[i6 + 20 >> 2] | 0;
 if ((i1 | 0) > 0 ? (i1 | 0) <= (HEAP32[i6 + 116 >> 2] | 0) : 0) {
  i7 = (HEAP32[i6 + 112 >> 2] | 0) + (i1 << 2) | 0;
  i8 = 8;
 } else {
  i9 = HEAP32[i6 + 120 >> 2] | 0;
  if (((i9 | 0) != 0 ? (i10 = HEAP32[i6 + 124 >> 2] | 0, (i1 | 0) >= (i10 | 0)) : 0) ? (i1 | 0) <= (HEAP32[i6 + 128 >> 2] | 0) : 0) {
   i7 = i9 + (i1 - i10 << 2) | 0;
   i8 = 8;
  } else i8 = 9;
 }
 if ((i8 | 0) == 8) {
  i10 = HEAP32[i7 >> 2] | 0;
  if (!i10) i8 = 9; else i11 = i10;
 }
 if ((i8 | 0) == 9) {
  HEAP32[i6 + 24 >> 2] = i1;
  i11 = HEAP32[HEAP32[i6 + 112 >> 2] >> 2] | 0;
 }
 i1 = i11;
 L14 : while (1) {
  i12 = i1 + 1 | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 0:
   {
    break L14;
    break;
   }
  case 37:
   {
    i8 = 12;
    break L14;
    break;
   }
  default:
   i1 = i12;
  }
 }
 if ((i8 | 0) == 12 ? (HEAP8[i12 >> 0] | 0) == 115 : 0) {
  HEAP32[i5 >> 2] = i6 + 24;
  _sprintf(i2, i11, i5) | 0;
  STACKTOP = i3;
  return;
 }
 i5 = HEAP32[i6 + 28 >> 2] | 0;
 i12 = HEAP32[i6 + 32 >> 2] | 0;
 i8 = HEAP32[i6 + 36 >> 2] | 0;
 i1 = HEAP32[i6 + 40 >> 2] | 0;
 i10 = HEAP32[i6 + 44 >> 2] | 0;
 i7 = HEAP32[i6 + 48 >> 2] | 0;
 i9 = HEAP32[i6 + 52 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i6 + 24 >> 2];
 HEAP32[i4 + 4 >> 2] = i5;
 HEAP32[i4 + 8 >> 2] = i12;
 HEAP32[i4 + 12 >> 2] = i8;
 HEAP32[i4 + 16 >> 2] = i1;
 HEAP32[i4 + 20 >> 2] = i10;
 HEAP32[i4 + 24 >> 2] = i7;
 HEAP32[i4 + 28 >> 2] = i9;
 _sprintf(i2, i11, i4) | 0;
 STACKTOP = i3;
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i6 = (i4 - i5 | 0) / 20 | 0;
 i7 = i6 + 1 | 0;
 i8 = i5;
 i9 = i4;
 if (i7 >>> 0 > 214748364) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i4 = i1 + 8 | 0;
 i10 = ((HEAP32[i4 >> 2] | 0) - i5 | 0) / 20 | 0;
 i11 = i10 << 1;
 i12 = i10 >>> 0 < 107374182 ? (i11 >>> 0 < i7 >>> 0 ? i7 : i11) : 214748364;
 do if (i12) if (i12 >>> 0 > 214748364) {
  i11 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i11, 40980);
  HEAP32[i11 >> 2] = 17420;
  ___cxa_throw(i11 | 0, 13288, 107);
 } else {
  i13 = __Znwm(i12 * 20 | 0) | 0;
  break;
 } else i13 = 0; while (0);
 i11 = i13 + (i6 * 20 | 0) | 0;
 i6 = i13 + (i12 * 20 | 0) | 0;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i11 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 HEAP32[i11 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
 HEAP32[i11 + 16 >> 2] = HEAP32[i2 + 16 >> 2];
 i2 = i11 + 20 | 0;
 if ((i9 | 0) == (i8 | 0)) {
  i14 = i11;
  i15 = i5;
 } else {
  i5 = i9;
  i9 = i11;
  do {
   i9 = i9 + -20 | 0;
   i5 = i5 + -20 | 0;
   HEAP32[i9 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
   HEAP32[i9 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
   HEAP32[i9 + 16 >> 2] = HEAP32[i5 + 16 >> 2];
  } while ((i5 | 0) != (i8 | 0));
  i14 = i9;
  i15 = HEAP32[i1 >> 2] | 0;
 }
 HEAP32[i1 >> 2] = i14;
 HEAP32[i3 >> 2] = i2;
 HEAP32[i4 >> 2] = i6;
 if (!i15) return;
 __ZdlPv(i15);
 return;
}

function _setMatrixCodeType(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  STACKTOP = i3;
  return;
 }
 i6 = i5 + -1 | 0;
 i7 = (i6 & i5 | 0) == 0;
 if (!i7) if (i5 >>> 0 > i1 >>> 0) i8 = i1; else i8 = (i1 >>> 0) % (i5 >>> 0) | 0; else i8 = i6 & i1;
 i9 = HEAP32[(HEAP32[14186] | 0) + (i8 << 2) >> 2] | 0;
 if (!i9) {
  STACKTOP = i3;
  return;
 }
 i10 = HEAP32[i9 >> 2] | 0;
 if (!i10) {
  STACKTOP = i3;
  return;
 }
 L15 : do if (i7) {
  i9 = i10;
  while (1) {
   i11 = HEAP32[i9 + 4 >> 2] | 0;
   i12 = (i11 | 0) == (i1 | 0);
   if (!(i12 | (i11 & i6 | 0) == (i8 | 0))) {
    i13 = 22;
    break;
   }
   if (i12 ? (HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i3;
   return;
  }
 } else {
  i9 = i10;
  while (1) {
   i12 = HEAP32[i9 + 4 >> 2] | 0;
   if ((i12 | 0) == (i1 | 0)) {
    if ((HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i12 >>> 0 < i5 >>> 0) i14 = i12; else i14 = (i12 >>> 0) % (i5 >>> 0) | 0;
    if ((i14 | 0) != (i8 | 0)) {
     i13 = 22;
     break;
    }
   }
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i3;
   return;
  }
 } while (0);
 i13 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i4) | 0) + 216 | 0;
 _arSetMatrixCodeType(HEAP32[i13 >> 2] | 0, i2) | 0;
 STACKTOP = i3;
 return;
}

function __ZN6vision25DoGScaleInvariantDetectorC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 10;
 HEAP32[i1 + 12 >> 2] = 10;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP8[i1 + 28 >> 0] = 1;
 i2 = i1 + 32 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAPF32[i1 + 56 >> 2] = 10.0;
 i2 = i1 + 60 | 0;
 i3 = i1 + 64 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAPF32[i1 + 88 >> 2] = 9.0;
 __ZN6vision21OrientationAssignmentC2Ev(i1 + 92 | 0);
 i4 = i1 + 68 | 0;
 i5 = i1 + 144 | 0;
 HEAP32[i5 >> 2] = 0;
 i6 = i1 + 148 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i1 + 152 >> 2] = 0;
 HEAP32[i1 + 84 >> 2] = 5e3;
 i1 = HEAP32[i2 >> 2] | 0;
 if ((((HEAP32[i4 >> 2] | 0) - i1 | 0) / 36 | 0) >>> 0 < 5e3) {
  i7 = (HEAP32[i3 >> 2] | 0) - i1 | 0;
  i8 = __Znwm(18e4) | 0;
  i9 = i8 + (((i7 | 0) / 36 | 0) * 36 | 0) | 0;
  i10 = i9 + (((i7 | 0) / -36 | 0) * 36 | 0) | 0;
  if ((i7 | 0) > 0) _memcpy(i10 | 0, i1 | 0, i7 | 0) | 0;
  HEAP32[i2 >> 2] = i10;
  HEAP32[i3 >> 2] = i9;
  HEAP32[i4 >> 2] = i8 + 18e4;
  if (i1) {
   __ZdlPv(i1);
   i11 = HEAP32[i5 >> 2] | 0;
   i12 = HEAP32[i6 >> 2] | 0;
  } else {
   i11 = 0;
   i12 = 0;
  }
 } else {
  i11 = 0;
  i12 = 0;
 }
 i1 = i12 - i11 | 0;
 i12 = i1 >> 2;
 if (i12 >>> 0 < 36) {
  __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i5, 36 - i12 | 0);
  return;
 }
 if ((i1 | 0) == 144) return;
 HEAP32[i6 >> 2] = i11 + 144;
 return;
}

function __ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 var i4 = 0, d5 = 0.0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, d11 = 0.0, d12 = 0.0, i13 = 0, d14 = 0.0, i15 = 0, d16 = 0.0, i17 = 0, i18 = 0, d19 = 0.0, i20 = 0;
 i4 = i2 + 16 | 0;
 d5 = +HEAPF32[i4 >> 2];
 i6 = i2 + 20 | 0;
 d7 = +HEAPF32[i6 >> 2];
 i8 = i2 + 28 | 0;
 d9 = +HEAPF32[i8 >> 2];
 i10 = i2 + 32 | 0;
 d11 = +HEAPF32[i10 >> 2];
 d12 = d5 * d11 - d7 * d9;
 i13 = i2 + 12 | 0;
 d14 = +HEAPF32[i13 >> 2];
 i15 = i2 + 24 | 0;
 d16 = +HEAPF32[i15 >> 2];
 i17 = i2 + 4 | 0;
 i18 = i2 + 8 | 0;
 d19 = d12 * +HEAPF32[i2 >> 2] - +HEAPF32[i17 >> 2] * (d11 * d14 - d7 * d16) + (d9 * d14 - d5 * d16) * +HEAPF32[i18 >> 2];
 if (+Math_abs(+d19) <= d3) {
  i20 = 0;
  return i20 | 0;
 }
 d3 = 1.0 / d19;
 HEAPF32[i1 >> 2] = d12 * d3;
 HEAPF32[i1 + 4 >> 2] = d3 * (+HEAPF32[i18 >> 2] * +HEAPF32[i8 >> 2] - +HEAPF32[i17 >> 2] * +HEAPF32[i10 >> 2]);
 HEAPF32[i1 + 8 >> 2] = d3 * (+HEAPF32[i17 >> 2] * +HEAPF32[i6 >> 2] - +HEAPF32[i18 >> 2] * +HEAPF32[i4 >> 2]);
 HEAPF32[i1 + 12 >> 2] = d3 * (+HEAPF32[i6 >> 2] * +HEAPF32[i15 >> 2] - +HEAPF32[i13 >> 2] * +HEAPF32[i10 >> 2]);
 HEAPF32[i1 + 16 >> 2] = d3 * (+HEAPF32[i2 >> 2] * +HEAPF32[i10 >> 2] - +HEAPF32[i18 >> 2] * +HEAPF32[i15 >> 2]);
 HEAPF32[i1 + 20 >> 2] = d3 * (+HEAPF32[i18 >> 2] * +HEAPF32[i13 >> 2] - +HEAPF32[i2 >> 2] * +HEAPF32[i6 >> 2]);
 HEAPF32[i1 + 24 >> 2] = d3 * (+HEAPF32[i13 >> 2] * +HEAPF32[i8 >> 2] - +HEAPF32[i4 >> 2] * +HEAPF32[i15 >> 2]);
 HEAPF32[i1 + 28 >> 2] = d3 * (+HEAPF32[i17 >> 2] * +HEAPF32[i15 >> 2] - +HEAPF32[i2 >> 2] * +HEAPF32[i8 >> 2]);
 HEAPF32[i1 + 32 >> 2] = d3 * (+HEAPF32[i2 >> 2] * +HEAPF32[i4 >> 2] - +HEAPF32[i17 >> 2] * +HEAPF32[i13 >> 2]);
 i20 = 1;
 return i20 | 0;
}

function _setProjectionNearPlane(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  STACKTOP = i3;
  return;
 }
 i6 = i5 + -1 | 0;
 i7 = (i6 & i5 | 0) == 0;
 if (!i7) if (i5 >>> 0 > i1 >>> 0) i8 = i1; else i8 = (i1 >>> 0) % (i5 >>> 0) | 0; else i8 = i6 & i1;
 i9 = HEAP32[(HEAP32[14186] | 0) + (i8 << 2) >> 2] | 0;
 if (!i9) {
  STACKTOP = i3;
  return;
 }
 i10 = HEAP32[i9 >> 2] | 0;
 if (!i10) {
  STACKTOP = i3;
  return;
 }
 L15 : do if (i7) {
  i9 = i10;
  while (1) {
   i11 = HEAP32[i9 + 4 >> 2] | 0;
   i12 = (i11 | 0) == (i1 | 0);
   if (!(i12 | (i11 & i6 | 0) == (i8 | 0))) {
    i13 = 22;
    break;
   }
   if (i12 ? (HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i3;
   return;
  }
 } else {
  i9 = i10;
  while (1) {
   i12 = HEAP32[i9 + 4 >> 2] | 0;
   if ((i12 | 0) == (i1 | 0)) {
    if ((HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i12 >>> 0 < i5 >>> 0) i14 = i12; else i14 = (i12 >>> 0) % (i5 >>> 0) | 0;
    if ((i14 | 0) != (i8 | 0)) {
     i13 = 22;
     break;
    }
   }
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i3;
   return;
  }
 } while (0);
 i13 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i4) | 0) + 272 | 0;
 HEAPF64[i13 >> 3] = d2;
 STACKTOP = i3;
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i4 = i3;
 i5 = i2;
 i6 = i4 - i5 | 0;
 i7 = i1 + 8 | 0;
 i8 = HEAP32[i7 >> 2] | 0;
 i9 = HEAP32[i1 >> 2] | 0;
 i10 = i9;
 do if (i6 >>> 0 > (i8 - i9 | 0) >>> 0) {
  if (!i9) i11 = i8; else {
   i12 = i1 + 4 | 0;
   HEAP32[i12 >> 2] = i9;
   __ZdlPv(i10);
   HEAP32[i7 >> 2] = 0;
   HEAP32[i12 >> 2] = 0;
   HEAP32[i1 >> 2] = 0;
   i11 = 0;
  }
  if ((i6 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
  i12 = i11 << 1;
  i13 = i11 >>> 0 < 1073741823 ? (i12 >>> 0 < i6 >>> 0 ? i6 : i12) : 2147483647;
  if ((i13 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
   i12 = __Znwm(i13) | 0;
   i14 = i1 + 4 | 0;
   HEAP32[i14 >> 2] = i12;
   HEAP32[i1 >> 2] = i12;
   HEAP32[i7 >> 2] = i12 + i13;
   _memcpy(i12 | 0, i2 | 0, i6 | 0) | 0;
   i15 = i12 + i6 | 0;
   i16 = i14;
   break;
  }
 } else {
  i14 = i1 + 4 | 0;
  i12 = (HEAP32[i14 >> 2] | 0) - i9 | 0;
  i13 = i6 >>> 0 > i12 >>> 0;
  i17 = i13 ? i2 + i12 | 0 : i3;
  i12 = i17;
  i18 = i12 - i5 | 0;
  if (i18 | 0) _memmove(i10 | 0, i2 | 0, i18 | 0) | 0;
  if (!i13) {
   i15 = i10 + i18 | 0;
   i16 = i14;
   break;
  }
  i18 = i4 - i12 | 0;
  if ((i18 | 0) > 0) {
   _memcpy(HEAP32[i14 >> 2] | 0, i17 | 0, i18 | 0) | 0;
   i15 = (HEAP32[i14 >> 2] | 0) + i18 | 0;
   i16 = i14;
   break;
  } else return;
 } while (0);
 HEAP32[i16 >> 2] = i15;
 return;
}

function _setProjectionFarPlane(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 i5 = HEAP32[14187] | 0;
 if (!i5) {
  STACKTOP = i3;
  return;
 }
 i6 = i5 + -1 | 0;
 i7 = (i6 & i5 | 0) == 0;
 if (!i7) if (i5 >>> 0 > i1 >>> 0) i8 = i1; else i8 = (i1 >>> 0) % (i5 >>> 0) | 0; else i8 = i6 & i1;
 i9 = HEAP32[(HEAP32[14186] | 0) + (i8 << 2) >> 2] | 0;
 if (!i9) {
  STACKTOP = i3;
  return;
 }
 i10 = HEAP32[i9 >> 2] | 0;
 if (!i10) {
  STACKTOP = i3;
  return;
 }
 L15 : do if (i7) {
  i9 = i10;
  while (1) {
   i11 = HEAP32[i9 + 4 >> 2] | 0;
   i12 = (i11 | 0) == (i1 | 0);
   if (!(i12 | (i11 & i6 | 0) == (i8 | 0))) {
    i13 = 22;
    break;
   }
   if (i12 ? (HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0) : 0) break L15;
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i3;
   return;
  }
 } else {
  i9 = i10;
  while (1) {
   i12 = HEAP32[i9 + 4 >> 2] | 0;
   if ((i12 | 0) == (i1 | 0)) {
    if ((HEAP32[i9 + 8 >> 2] | 0) == (i1 | 0)) break L15;
   } else {
    if (i12 >>> 0 < i5 >>> 0) i14 = i12; else i14 = (i12 >>> 0) % (i5 >>> 0) | 0;
    if ((i14 | 0) != (i8 | 0)) {
     i13 = 22;
     break;
    }
   }
   i9 = HEAP32[i9 >> 2] | 0;
   if (!i9) {
    i13 = 22;
    break;
   }
  }
  if ((i13 | 0) == 22) {
   STACKTOP = i3;
   return;
  }
 } while (0);
 i13 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i4) | 0) + 280 | 0;
 HEAPF64[i13 >> 3] = d2;
 STACKTOP = i3;
 return;
}

function __ZNSt3__2L11init_wweeksEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56232] | 0) == 0 ? ___cxa_guard_acquire(56232) | 0 : 0) {
  i1 = 55632;
  do {
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i1 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 12 | 0;
  } while ((i1 | 0) != 55800);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55632, 15876) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55644, 15904) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55656, 15932) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55668, 15964) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55680, 16004) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55692, 16040) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55704, 16068) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55716, 16104) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55728, 16120) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55740, 16136) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55752, 16152) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55764, 16168) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55776, 16184) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55788, 16200) | 0;
 return;
}

function __ZNSt3__2L10init_weeksEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56152] | 0) == 0 ? ___cxa_guard_acquire(56152) | 0 : 0) {
  i1 = 54880;
  do {
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i1 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 12 | 0;
  } while ((i1 | 0) != 55048);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54880, 47984) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54892, 47991) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54904, 47998) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54916, 48006) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54928, 48016) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54940, 48025) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54952, 48032) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54964, 48041) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54976, 48045) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54988, 48049) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55e3, 48053) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55012, 48057) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55024, 48061) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(55036, 48065) | 0;
 return;
}

function ___fdopen(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i4 = i3 + 40 | 0;
 i5 = i3 + 24 | 0;
 i6 = i3 + 16 | 0;
 i7 = i3;
 i8 = i3 + 56 | 0;
 if (_strchr(46736, HEAP8[i2 >> 0] | 0) | 0) {
  i9 = _malloc(1176) | 0;
  if (!i9) i10 = 0; else {
   _memset(i9 | 0, 0, 144) | 0;
   if (!(_strchr(i2, 43) | 0)) HEAP32[i9 >> 2] = (HEAP8[i2 >> 0] | 0) == 114 ? 8 : 4;
   if (_strchr(i2, 101) | 0) {
    HEAP32[i7 >> 2] = i1;
    HEAP32[i7 + 4 >> 2] = 2;
    HEAP32[i7 + 8 >> 2] = 1;
    ___syscall221(221, i7 | 0) | 0;
   }
   if ((HEAP8[i2 >> 0] | 0) == 97) {
    HEAP32[i6 >> 2] = i1;
    HEAP32[i6 + 4 >> 2] = 3;
    i2 = ___syscall221(221, i6 | 0) | 0;
    if (!(i2 & 1024)) {
     HEAP32[i5 >> 2] = i1;
     HEAP32[i5 + 4 >> 2] = 4;
     HEAP32[i5 + 8 >> 2] = i2 | 1024;
     ___syscall221(221, i5 | 0) | 0;
    }
    i5 = HEAP32[i9 >> 2] | 128;
    HEAP32[i9 >> 2] = i5;
    i11 = i5;
   } else i11 = HEAP32[i9 >> 2] | 0;
   HEAP32[i9 + 60 >> 2] = i1;
   HEAP32[i9 + 44 >> 2] = i9 + 152;
   HEAP32[i9 + 48 >> 2] = 1024;
   i5 = i9 + 75 | 0;
   HEAP8[i5 >> 0] = -1;
   if ((i11 & 8 | 0) == 0 ? (HEAP32[i4 >> 2] = i1, HEAP32[i4 + 4 >> 2] = 21523, HEAP32[i4 + 8 >> 2] = i8, (___syscall54(54, i4 | 0) | 0) == 0) : 0) HEAP8[i5 >> 0] = 10;
   HEAP32[i9 + 32 >> 2] = 1;
   HEAP32[i9 + 36 >> 2] = 2;
   HEAP32[i9 + 40 >> 2] = 1;
   HEAP32[i9 + 12 >> 2] = 2;
   if (!(HEAP32[14199] | 0)) HEAP32[i9 + 76 >> 2] = -1;
   ___ofl_add(i9) | 0;
   i10 = i9;
  }
 } else {
  i9 = ___errno_location() | 0;
  HEAP32[i9 >> 2] = 22;
  i10 = 0;
 }
 STACKTOP = i3;
 return i10 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 L1 : do if (i1 >>> 0 < i2 >>> 0) {
  L3 : do if ((HEAP8[i1 >> 0] | 0) != 95) {
   if ((__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0) != (i2 | 0)) {
    HEAP32[i4 >> 2] = -2;
    break L1;
   }
  } else {
   if ((i2 - i1 | 0) <= 3) {
    HEAP32[i4 >> 2] = -2;
    break L1;
   }
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 90:
    {
     i5 = i1 + 2 | 0;
     i6 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i5, i2, i3) | 0;
     if (!((i6 | 0) == (i5 | 0) | (i6 | 0) == (i2 | 0)) ? (HEAP8[i6 >> 0] | 0) == 46 : 0) i7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i3) | 0; else i7 = i6;
     if ((i7 | 0) == (i2 | 0)) break L3;
     HEAP32[i4 >> 2] = -2;
     break L1;
     break;
    }
   case 95:
    {
     i8 = 11;
     break;
    }
   default:
    {}
   }
   if (((i8 | 0) == 11 ? (HEAP8[i1 + 2 >> 0] | 0) == 95 : 0) ? (HEAP8[i1 + 3 >> 0] | 0) == 90 : 0) {
    i6 = i1 + 4 | 0;
    i5 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i3) | 0;
    if ((i5 | 0) == (i6 | 0) | (i5 | 0) == (i2 | 0)) {
     HEAP32[i4 >> 2] = -2;
     break L1;
    }
    if ((__ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_(i5, i2, i3) | 0) == (i2 | 0)) break;
    HEAP32[i4 >> 2] = -2;
    break L1;
   }
   HEAP32[i4 >> 2] = -2;
   break L1;
  } while (0);
  if ((HEAP32[i4 >> 2] | 0) == 0 ? (HEAP32[i3 >> 2] | 0) == (HEAP32[i3 + 4 >> 2] | 0) : 0) HEAP32[i4 >> 2] = -2;
 } else HEAP32[i4 >> 2] = -2; while (0);
 return;
}

function ___vfprintf_internal(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(224);
 i7 = i6 + 208 | 0;
 i8 = i6 + 160 | 0;
 i9 = i6 + 80 | 0;
 i10 = i6;
 i11 = i8;
 i12 = i11 + 40 | 0;
 do {
  HEAP32[i11 >> 2] = 0;
  i11 = i11 + 4 | 0;
 } while ((i11 | 0) < (i12 | 0));
 HEAP32[i7 >> 2] = HEAP32[i3 >> 2];
 if ((_printf_core(0, i2, i7, i9, i8, i4, i5) | 0) < 0) i13 = -1; else {
  if ((HEAP32[i1 + 76 >> 2] | 0) > -1) i14 = ___lockfile(i1) | 0; else i14 = 0;
  i3 = HEAP32[i1 >> 2] | 0;
  i11 = i3 & 32;
  if ((HEAP8[i1 + 74 >> 0] | 0) < 1) HEAP32[i1 >> 2] = i3 & -33;
  i3 = i1 + 48 | 0;
  if (!(HEAP32[i3 >> 2] | 0)) {
   i12 = i1 + 44 | 0;
   i15 = HEAP32[i12 >> 2] | 0;
   HEAP32[i12 >> 2] = i10;
   i16 = i1 + 28 | 0;
   HEAP32[i16 >> 2] = i10;
   i17 = i1 + 20 | 0;
   HEAP32[i17 >> 2] = i10;
   HEAP32[i3 >> 2] = 80;
   i18 = i1 + 16 | 0;
   HEAP32[i18 >> 2] = i10 + 80;
   i10 = _printf_core(i1, i2, i7, i9, i8, i4, i5) | 0;
   if (!i15) i19 = i10; else {
    FUNCTION_TABLE_iiii[HEAP32[i1 + 36 >> 2] & 63](i1, 0, 0) | 0;
    i20 = (HEAP32[i17 >> 2] | 0) == 0 ? -1 : i10;
    HEAP32[i12 >> 2] = i15;
    HEAP32[i3 >> 2] = 0;
    HEAP32[i18 >> 2] = 0;
    HEAP32[i16 >> 2] = 0;
    HEAP32[i17 >> 2] = 0;
    i19 = i20;
   }
  } else i19 = _printf_core(i1, i2, i7, i9, i8, i4, i5) | 0;
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = i5 | i11;
  if (i14 | 0) ___unlockfile(i1);
  i13 = (i5 & 32 | 0) == 0 ? i19 : -1;
 }
 STACKTOP = i6;
 return i13 | 0;
}

function __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4 + 12 | 0;
 i6 = i4;
 i7 = i4 + 8 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i6, i1);
 if (!(HEAP8[i6 >> 0] | 0)) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i6);
  STACKTOP = i4;
  return i1 | 0;
 }
 i8 = (HEAP32[i1 >> 2] | 0) + -12 | 0;
 HEAP32[i7 >> 2] = HEAP32[i1 + (HEAP32[i8 >> 2] | 0) + 24 >> 2];
 i9 = i1 + (HEAP32[i8 >> 2] | 0) | 0;
 i8 = HEAP32[i9 + 4 >> 2] | 0;
 i10 = i2 + i3 | 0;
 i3 = i9 + 76 | 0;
 i11 = HEAP32[i3 >> 2] | 0;
 if ((i11 | 0) == -1) {
  __ZNKSt3__28ios_base6getlocEv(i5, i9);
  i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58484) | 0;
  i13 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 63](i12, 32) | 0;
  __ZNSt3__26localeD2Ev(i5);
  i12 = i13 << 24 >> 24;
  HEAP32[i3 >> 2] = i12;
  i14 = i12;
 } else i14 = i11;
 HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
 if (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i5, i2, (i8 & 176 | 0) == 32 ? i10 : i2, i10, i9, i14 & 255) | 0) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i6);
  STACKTOP = i4;
  return i1 | 0;
 }
 i14 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 __ZNSt3__28ios_base5clearEj(i14, HEAP32[i14 + 16 >> 2] | 5);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i6);
 STACKTOP = i4;
 return i1 | 0;
}

function _jinit_2pass_quantizer(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = i1 + 4 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 44) | 0;
 HEAP32[i1 + 460 >> 2] = i3;
 HEAP32[i3 >> 2] = 43;
 HEAP32[i3 + 12 >> 2] = 124;
 i4 = i3 + 32 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i3 + 40 >> 2] = 0;
 if ((HEAP32[i1 + 120 >> 2] | 0) != 3) {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i5 + 20 >> 2] = 47;
  FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i1);
 }
 i5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 128) | 0;
 i6 = i3 + 24 | 0;
 HEAP32[i6 >> 2] = i5;
 i5 = 0;
 do {
  i7 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] & 63](i1, 1, 4096) | 0;
  HEAP32[(HEAP32[i6 >> 2] | 0) + (i5 << 2) >> 2] = i7;
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) != 32);
 HEAP32[i3 + 28 >> 2] = 1;
 if (!(HEAP32[i1 + 108 >> 2] | 0)) HEAP32[i3 + 16 >> 2] = 0; else {
  i5 = HEAP32[i1 + 96 >> 2] | 0;
  if ((i5 | 0) >= 8) {
   if ((i5 | 0) > 256) {
    i6 = HEAP32[i1 >> 2] | 0;
    HEAP32[i6 + 20 >> 2] = 57;
    HEAP32[i6 + 24 >> 2] = 256;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   }
  } else {
   i6 = HEAP32[i1 >> 2] | 0;
   HEAP32[i6 + 20 >> 2] = 56;
   HEAP32[i6 + 24 >> 2] = 8;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
  }
  i6 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 15](i1, 1, i5, 3) | 0;
  HEAP32[i3 + 16 >> 2] = i6;
  HEAP32[i3 + 20 >> 2] = i5;
 }
 i5 = i1 + 88 | 0;
 if (!(HEAP32[i5 >> 2] | 0)) return;
 HEAP32[i5 >> 2] = 2;
 i5 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] & 63](i1, 1, ((HEAP32[i1 + 112 >> 2] | 0) * 6 | 0) + 12 | 0) | 0;
 HEAP32[i4 >> 2] = i5;
 _init_error_limit(i1);
 return;
}

function _getMarkerNum(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 HEAP32[i3 >> 2] = i1;
 i4 = HEAP32[14187] | 0;
 L1 : do if (i4) {
  i5 = i4 + -1 | 0;
  i6 = (i5 & i4 | 0) == 0;
  if (!i6) if (i4 >>> 0 > i1 >>> 0) i7 = i1; else i7 = (i1 >>> 0) % (i4 >>> 0) | 0; else i7 = i5 & i1;
  i8 = HEAP32[(HEAP32[14186] | 0) + (i7 << 2) >> 2] | 0;
  if ((i8 | 0) != 0 ? (i9 = HEAP32[i8 >> 2] | 0, (i9 | 0) != 0) : 0) {
   L10 : do if (i6) {
    i8 = i9;
    while (1) {
     i10 = HEAP32[i8 + 4 >> 2] | 0;
     i11 = (i10 | 0) == (i1 | 0);
     if (!(i11 | (i10 & i5 | 0) == (i7 | 0))) {
      i12 = 13736;
      break L1;
     }
     if (i11 ? (HEAP32[i8 + 8 >> 2] | 0) == (i1 | 0) : 0) break L10;
     i8 = HEAP32[i8 >> 2] | 0;
     if (!i8) {
      i12 = 13736;
      break L1;
     }
    }
   } else {
    i8 = i9;
    while (1) {
     i11 = HEAP32[i8 + 4 >> 2] | 0;
     if ((i11 | 0) == (i1 | 0)) {
      if ((HEAP32[i8 + 8 >> 2] | 0) == (i1 | 0)) break L10;
     } else {
      if (i11 >>> 0 < i4 >>> 0) i13 = i11; else i13 = (i11 >>> 0) % (i4 >>> 0) | 0;
      if ((i13 | 0) != (i7 | 0)) {
       i12 = 13736;
       break L1;
      }
     }
     i8 = HEAP32[i8 >> 2] | 0;
     if (!i8) {
      i12 = 13736;
      break L1;
     }
    }
   } while (0);
   i9 = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i3) | 0) + 216 | 0;
   i12 = (HEAP32[i9 >> 2] | 0) + 44 | 0;
  } else i12 = 13736;
 } else i12 = 13736; while (0);
 STACKTOP = i2;
 return HEAP32[i12 >> 2] | 0;
}

function _free_pool(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 if (i2 >>> 0 <= 1) {
  if ((i2 | 0) == 1) {
   i4 = i3 + 68 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   if (i5 | 0) {
    i6 = i5;
    do {
     i5 = i6 + 40 | 0;
     if (HEAP32[i5 >> 2] | 0) {
      HEAP32[i5 >> 2] = 0;
      FUNCTION_TABLE_vii[HEAP32[i6 + 56 >> 2] & 63](i1, i6 + 48 | 0);
     }
     i6 = HEAP32[i6 + 44 >> 2] | 0;
    } while ((i6 | 0) != 0);
   }
   HEAP32[i4 >> 2] = 0;
   i4 = i3 + 72 | 0;
   i6 = HEAP32[i4 >> 2] | 0;
   if (i6 | 0) {
    i5 = i6;
    do {
     i6 = i5 + 40 | 0;
     if (HEAP32[i6 >> 2] | 0) {
      HEAP32[i6 >> 2] = 0;
      FUNCTION_TABLE_vii[HEAP32[i5 + 56 >> 2] & 63](i1, i5 + 48 | 0);
     }
     i5 = HEAP32[i5 + 44 >> 2] | 0;
    } while ((i5 | 0) != 0);
   }
   HEAP32[i4 >> 2] = 0;
  }
 } else {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 14;
  HEAP32[i4 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i4 = i3 + 60 + (i2 << 2) | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = 0;
 if (i5 | 0) {
  i4 = i3 + 76 | 0;
  i6 = i5;
  do {
   i5 = i6;
   i6 = HEAP32[i6 >> 2] | 0;
   i7 = (HEAP32[i5 + 4 >> 2] | 0) + 16 + (HEAP32[i5 + 8 >> 2] | 0) | 0;
   _jpeg_free_large(i1, i5, i7);
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) - i7;
  } while ((i6 | 0) != 0);
 }
 i6 = i3 + 52 + (i2 << 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = 0;
 if (!i2) return;
 i6 = i3 + 76 | 0;
 i3 = i2;
 do {
  i2 = i3;
  i3 = HEAP32[i3 >> 2] | 0;
  i4 = (HEAP32[i2 + 4 >> 2] | 0) + 16 + (HEAP32[i2 + 8 >> 2] | 0) | 0;
  _jpeg_free_small(i1, i2, i4);
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) - i4;
 } while ((i3 | 0) != 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 if (i2 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 i3 = i1 + 11 | 0;
 i4 = HEAP8[i3 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 if (i5) {
  i6 = HEAP32[i1 + 4 >> 2] | 0;
  i7 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i6 = i4 & 255;
  i7 = 10;
 }
 i8 = i6 >>> 0 > i2 >>> 0 ? i6 : i2;
 i2 = i8 >>> 0 < 11;
 i9 = i2 ? 10 : (i8 + 16 & -16) + -1 | 0;
 do if ((i9 | 0) != (i7 | 0)) {
  do if (i2) {
   i8 = HEAP32[i1 >> 2] | 0;
   if (i5) {
    i10 = 0;
    i11 = i8;
    i12 = i1;
    i13 = 13;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm(i1, i8, (i4 & 255) + 1 | 0) | 0;
    __ZdlPv(i8);
    i13 = 16;
   }
  } else {
   i8 = i9 + 1 | 0;
   i14 = __Znwm(i8) | 0;
   if (i5) {
    i10 = 1;
    i11 = HEAP32[i1 >> 2] | 0;
    i12 = i14;
    i13 = 13;
    break;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm(i14, i1, (i4 & 255) + 1 | 0) | 0;
    i15 = i14;
    i16 = i8;
    i17 = i1 + 4 | 0;
    i13 = 15;
    break;
   }
  } while (0);
  if ((i13 | 0) == 13) {
   i8 = i1 + 4 | 0;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i12, i11, (HEAP32[i8 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv(i11);
   if (i10) {
    i15 = i12;
    i16 = i9 + 1 | 0;
    i17 = i8;
    i13 = 15;
   } else i13 = 16;
  }
  if ((i13 | 0) == 15) {
   HEAP32[i1 + 8 >> 2] = i16 | -2147483648;
   HEAP32[i17 >> 2] = i6;
   HEAP32[i1 >> 2] = i15;
   break;
  } else if ((i13 | 0) == 16) {
   HEAP8[i3 >> 0] = i6;
   break;
  }
 } while (0);
 return;
}

function _jpeg_huff_decode(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 do if ((i3 | 0) < (i5 | 0)) if (!(_jpeg_fill_bit_buffer(i1, i2, i3, i5) | 0)) {
  i6 = -1;
  return i6 | 0;
 } else {
  i7 = HEAP32[i1 + 8 >> 2] | 0;
  i8 = HEAP32[i1 + 12 >> 2] | 0;
  break;
 } else {
  i7 = i2;
  i8 = i3;
 } while (0);
 i3 = i8 - i5 | 0;
 i8 = i7 >> i3 & (1 << i5) + -1;
 i2 = i1 + 8 | 0;
 i9 = i1 + 12 | 0;
 L7 : do if ((i8 | 0) > (HEAP32[i4 + (i5 << 2) >> 2] | 0)) {
  i10 = i5;
  i11 = i8;
  i12 = i3;
  i13 = i7;
  while (1) {
   i14 = i11 << 1;
   if ((i12 | 0) < 1) {
    if (!(_jpeg_fill_bit_buffer(i1, i13, i12, 1) | 0)) {
     i6 = -1;
     break;
    }
    i15 = HEAP32[i2 >> 2] | 0;
    i16 = HEAP32[i9 >> 2] | 0;
   } else {
    i15 = i13;
    i16 = i12;
   }
   i17 = i16 + -1 | 0;
   i18 = i15 >>> i17 & 1 | i14;
   i14 = i10 + 1 | 0;
   if ((i18 | 0) > (HEAP32[i4 + (i14 << 2) >> 2] | 0)) {
    i10 = i14;
    i11 = i18;
    i12 = i17;
    i13 = i15;
   } else {
    i19 = i18;
    i20 = i14;
    i21 = i15;
    i22 = i17;
    break L7;
   }
  }
  return i6 | 0;
 } else {
  i19 = i8;
  i20 = i5;
  i21 = i7;
  i22 = i3;
 } while (0);
 HEAP32[i2 >> 2] = i21;
 HEAP32[i9 >> 2] = i22;
 if ((i20 | 0) > 16) {
  i22 = HEAP32[i1 + 16 >> 2] | 0;
  i1 = HEAP32[i22 >> 2] | 0;
  HEAP32[i1 + 20 >> 2] = 118;
  FUNCTION_TABLE_vii[HEAP32[i1 + 4 >> 2] & 63](i22, -1);
  i6 = 0;
  return i6 | 0;
 } else {
  i6 = HEAPU8[(HEAP32[i4 + 72 + (i20 << 2) >> 2] | 0) + i19 + ((HEAP32[i4 + 140 >> 2] | 0) + 17) >> 0] | 0;
  return i6 | 0;
 }
 return 0;
}

function _jinit_d_coef_controller(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i3 = i1 + 4 | 0;
 i4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 116) | 0;
 HEAP32[i1 + 428 >> 2] = i4;
 HEAP32[i4 >> 2] = 131;
 HEAP32[i4 + 8 >> 2] = 132;
 HEAP32[i4 + 112 >> 2] = 0;
 if (!i2) {
  i2 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 4 >> 2] & 63](i1, 1, 1280) | 0;
  HEAP32[i4 + 32 >> 2] = i2;
  HEAP32[i4 + 36 >> 2] = i2 + 128;
  HEAP32[i4 + 40 >> 2] = i2 + 256;
  HEAP32[i4 + 44 >> 2] = i2 + 384;
  HEAP32[i4 + 48 >> 2] = i2 + 512;
  HEAP32[i4 + 52 >> 2] = i2 + 640;
  HEAP32[i4 + 56 >> 2] = i2 + 768;
  HEAP32[i4 + 60 >> 2] = i2 + 896;
  HEAP32[i4 + 64 >> 2] = i2 + 1024;
  HEAP32[i4 + 68 >> 2] = i2 + 1152;
  HEAP32[i4 + 4 >> 2] = 73;
  HEAP32[i4 + 12 >> 2] = 22;
  HEAP32[i4 + 16 >> 2] = 0;
  return;
 }
 i2 = i1 + 36 | 0;
 if ((HEAP32[i2 >> 2] | 0) > 0) {
  i5 = i1 + 220 | 0;
  i6 = i4 + 72 | 0;
  i7 = 0;
  i8 = HEAP32[i1 + 216 >> 2] | 0;
  while (1) {
   i9 = i8 + 12 | 0;
   i10 = HEAP32[i9 >> 2] | 0;
   i11 = (HEAP32[i5 >> 2] | 0) == 0 ? i10 : i10 * 3 | 0;
   i10 = HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] | 0;
   i12 = _jround_up(HEAP32[i8 + 28 >> 2] | 0, HEAP32[i8 + 8 >> 2] | 0) | 0;
   i13 = _jround_up(HEAP32[i8 + 32 >> 2] | 0, HEAP32[i9 >> 2] | 0) | 0;
   i9 = FUNCTION_TABLE_iiiiiii[i10 & 63](i1, 1, 1, i12, i13, i11) | 0;
   HEAP32[i6 + (i7 << 2) >> 2] = i9;
   i7 = i7 + 1 | 0;
   if ((i7 | 0) >= (HEAP32[i2 >> 2] | 0)) {
    i14 = i6;
    break;
   } else i8 = i8 + 84 | 0;
  }
 } else i14 = i4 + 72 | 0;
 HEAP32[i4 + 4 >> 2] = 72;
 HEAP32[i4 + 12 >> 2] = 21;
 HEAP32[i4 + 16 >> 2] = i14;
 return;
}

function _ar2ScreenCoord2MarkerCoord(i1, i2, d3, d4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i8 = i7 + 52 | 0;
 i9 = i7 + 48 | 0;
 i10 = i7;
 do if (i1) if ((_arParamObserv2IdealLTf(i1 + 184 | 0, d3, d4, i8, i9) | 0) < 0) {
  i11 = -1;
  STACKTOP = i7;
  return i11 | 0;
 } else {
  _arUtilMatMuldff(i1 + 8 | 0, i2, i10) | 0;
  d12 = +HEAPF32[i10 + 32 >> 2];
  d13 = +HEAPF32[i8 >> 2];
  d14 = +HEAPF32[i10 + 36 >> 2];
  d15 = +HEAPF32[i9 >> 2];
  d16 = +HEAPF32[i10 + 44 >> 2];
  d17 = +HEAPF32[i10 + 12 >> 2] - d13 * d16;
  d18 = d14 * d15 - +HEAPF32[i10 + 20 >> 2];
  d19 = d12 * d15 - +HEAPF32[i10 + 16 >> 2];
  d20 = d13 * d14 - +HEAPF32[i10 + 4 >> 2];
  d21 = d12 * d13 - +HEAPF32[i10 >> 2];
  d22 = +HEAPF32[i10 + 28 >> 2];
  d23 = d15 * d16;
  break;
 } else {
  d16 = +HEAPF32[i2 + 32 >> 2];
  d15 = +HEAPF32[i2 + 36 >> 2];
  d13 = +HEAPF32[i2 + 44 >> 2];
  d17 = +HEAPF32[i2 + 12 >> 2] - d13 * d3;
  d18 = d15 * d4 - +HEAPF32[i2 + 20 >> 2];
  d19 = d16 * d4 - +HEAPF32[i2 + 16 >> 2];
  d20 = d15 * d3 - +HEAPF32[i2 + 4 >> 2];
  d21 = d16 * d3 - +HEAPF32[i2 >> 2];
  d22 = +HEAPF32[i2 + 28 >> 2];
  d23 = d13 * d4;
 } while (0);
 d4 = d22 - d23;
 d23 = d21 * d18 - d20 * d19;
 if (d23 == 0.0) {
  i11 = -1;
  STACKTOP = i7;
  return i11 | 0;
 }
 HEAPF32[i5 >> 2] = (d18 * d17 - d20 * d4) / d23;
 HEAPF32[i6 >> 2] = (d21 * d4 - d19 * d17) / d23;
 i11 = 0;
 STACKTOP = i7;
 return i11 | 0;
}

function _jinit_merged_upsampler(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i2 = i1 + 4 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 48) | 0;
 i4 = i1 + 452 | 0;
 HEAP32[i4 >> 2] = i3;
 HEAP32[i3 >> 2] = 125;
 HEAP32[i3 + 8 >> 2] = 0;
 i5 = Math_imul(HEAP32[i1 + 120 >> 2] | 0, HEAP32[i1 + 112 >> 2] | 0) | 0;
 HEAP32[i3 + 40 >> 2] = i5;
 i6 = i3 + 4 | 0;
 if ((HEAP32[i1 + 312 >> 2] | 0) == 2) {
  HEAP32[i6 >> 2] = 1;
  HEAP32[i3 + 12 >> 2] = 9;
  i7 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] & 63](i1, 1, i5) | 0;
  HEAP32[i3 + 32 >> 2] = i7;
  i8 = HEAP32[i4 >> 2] | 0;
 } else {
  HEAP32[i6 >> 2] = 2;
  HEAP32[i3 + 12 >> 2] = 10;
  HEAP32[i3 + 32 >> 2] = 0;
  i8 = i3;
 }
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i6 = i8 + 16 | 0;
 HEAP32[i6 >> 2] = i3;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i4 = i8 + 20 | 0;
 HEAP32[i4 >> 2] = i3;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 i7 = i8 + 24 | 0;
 HEAP32[i7 >> 2] = i3;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 1024) | 0;
 HEAP32[i8 + 28 >> 2] = i3;
 i8 = HEAP32[i6 >> 2] | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i7 = 0;
 i1 = -128;
 while (1) {
  HEAP32[i8 + (i7 << 2) >> 2] = (i1 * 91881 | 0) + 32768 >> 16;
  HEAP32[i6 + (i7 << 2) >> 2] = (i1 * 116130 | 0) + 32768 >> 16;
  i2 = Math_imul(i1, -46802) | 0;
  HEAP32[i4 + (i7 << 2) >> 2] = i2;
  i2 = (Math_imul(i1, -22554) | 0) + 32768 | 0;
  HEAP32[i3 + (i7 << 2) >> 2] = i2;
  i7 = i7 + 1 | 0;
  if ((i7 | 0) == 256) break; else i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4 + 24 | 0;
 i6 = i4;
 i7 = i4 + 12 | 0;
 if (((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 116 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 119 : 0) ? (i8 = i1 + 2 | 0, i9 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i8, i2, i3) | 0, (i9 | 0) != (i8 | 0)) : 0) ? (i8 = i3 + 4 | 0, i2 = HEAP32[i8 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i2 | 0)) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i2 + -24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i7, 0, 50441) | 0;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i7 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[i8 >> 2] | 0) + -24 | 0, i5);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
  i10 = i9;
 } else i10 = i1;
 STACKTOP = i4;
 return i10 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if ((((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 112 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i6 = i1 + 2 | 0, i7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i3) | 0, (i7 | 0) != (i6 | 0)) : 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i7, i2, i3) | 0, (i6 | 0) != (i7 | 0)) : 0) ? (i7 = i3 + 4 | 0, i2 = HEAP32[i7 >> 2] | 0, ((i2 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i2 + -24 | 0);
  i2 = HEAP32[i7 >> 2] | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) == -1) break;
   i8 = i3 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i2 + (i8 * 24 | 0) | 0);
   i3 = i8;
  }
  HEAP32[i7 >> 2] = i2 + -24;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -48 | 0, 50513) | 0;
  i2 = HEAP8[i5 + 11 >> 0] | 0;
  i3 = i2 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[i7 >> 2] | 0) + -24 | 0, i3 ? HEAP32[i5 >> 2] | 0 : i5, i3 ? HEAP32[i5 + 4 >> 2] | 0 : i2 & 255) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
  i9 = i6;
 } else i9 = i1;
 STACKTOP = i4;
 return i9 | 0;
}

function ___dynamic_cast(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i6 = i5;
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = i1 + (HEAP32[i7 + -8 >> 2] | 0) | 0;
 i9 = HEAP32[i7 + -4 >> 2] | 0;
 HEAP32[i6 >> 2] = i3;
 HEAP32[i6 + 4 >> 2] = i1;
 HEAP32[i6 + 8 >> 2] = i2;
 HEAP32[i6 + 12 >> 2] = i4;
 i4 = i6 + 16 | 0;
 i2 = i6 + 20 | 0;
 i1 = i6 + 24 | 0;
 i7 = i6 + 28 | 0;
 i10 = i6 + 32 | 0;
 i11 = i6 + 40 | 0;
 i12 = i4;
 i13 = i12 + 36 | 0;
 do {
  HEAP32[i12 >> 2] = 0;
  i12 = i12 + 4 | 0;
 } while ((i12 | 0) < (i13 | 0));
 HEAP16[i4 + 36 >> 1] = 0;
 HEAP8[i4 + 38 >> 0] = 0;
 L1 : do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i9, i3, 0) | 0) {
  HEAP32[i6 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 20 >> 2] & 7](i9, i6, i8, i8, 1, 0);
  i14 = (HEAP32[i1 >> 2] | 0) == 1 ? i8 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 24 >> 2] & 31](i9, i6, i8, 1, 0);
  switch (HEAP32[i6 + 36 >> 2] | 0) {
  case 0:
   {
    i14 = (HEAP32[i11 >> 2] | 0) == 1 & (HEAP32[i7 >> 2] | 0) == 1 & (HEAP32[i10 >> 2] | 0) == 1 ? HEAP32[i2 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    i14 = 0;
    break L1;
   }
  }
  if ((HEAP32[i1 >> 2] | 0) != 1 ? !((HEAP32[i11 >> 2] | 0) == 0 & (HEAP32[i7 >> 2] | 0) == 1 & (HEAP32[i10 >> 2] | 0) == 1) : 0) {
   i14 = 0;
   break;
  }
  i14 = HEAP32[i4 >> 2] | 0;
 } while (0);
 STACKTOP = i5;
 return i14 | 0;
}

function __ZN6vision14FREAKExtractor7extractERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS6_9allocatorIS8_EEEE(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 HEAP32[i2 >> 2] = 96;
 i7 = ((HEAP32[i4 + 4 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) | 0) / 20 | 0;
 i8 = i2 + 4 | 0;
 i9 = i7 * 96 | 0;
 HEAP8[i6 >> 0] = 0;
 i10 = i2 + 8 | 0;
 i11 = HEAP32[i8 >> 2] | 0;
 i12 = (HEAP32[i10 >> 2] | 0) - i11 | 0;
 i13 = i11;
 if (i9 >>> 0 <= i12 >>> 0) {
  if (i9 >>> 0 < i12 >>> 0) HEAP32[i10 >> 2] = i13 + i9;
 } else __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEmRKh(i8, i9 - i12 | 0, i6);
 i6 = i2 + 16 | 0;
 i12 = i2 + 20 | 0;
 i9 = HEAP32[i6 >> 2] | 0;
 i8 = ((HEAP32[i12 >> 2] | 0) - i9 | 0) / 20 | 0;
 if (i7 >>> 0 <= i8 >>> 0) {
  if (i7 >>> 0 < i8 >>> 0) HEAP32[i12 >> 2] = i9 + (i7 * 20 | 0);
 } else __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8__appendEm(i6, i7 - i8 | 0);
 __ZN6vision14ExtractFREAK84ERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS5_9allocatorIS7_EEEEPKfSE_SE_SE_SE_SE_ffffffff(i2, i3, i4, i1, i1 + 48 | 0, i1 + 96 | 0, i1 + 144 | 0, i1 + 192 | 0, i1 + 240 | 0, +HEAPF32[i1 + 288 >> 2], +HEAPF32[i1 + 292 >> 2], +HEAPF32[i1 + 296 >> 2], +HEAPF32[i1 + 300 >> 2], +HEAPF32[i1 + 304 >> 2], +HEAPF32[i1 + 308 >> 2], +HEAPF32[i1 + 312 >> 2], +HEAPF32[i1 + 316 >> 2]);
 STACKTOP = i5;
 return;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i6 = i4 - i5 >> 3;
 i7 = i6 + 1 | 0;
 i8 = i5;
 i9 = i4;
 if (i7 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i4 = i1 + 8 | 0;
 i10 = (HEAP32[i4 >> 2] | 0) - i5 | 0;
 i11 = i10 >> 2;
 i12 = i10 >> 3 >>> 0 < 268435455 ? (i11 >>> 0 < i7 >>> 0 ? i7 : i11) : 536870911;
 do if (i12) if (i12 >>> 0 > 536870911) {
  i11 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i11, 40980);
  HEAP32[i11 >> 2] = 17420;
  ___cxa_throw(i11 | 0, 13288, 107);
 } else {
  i13 = __Znwm(i12 << 3) | 0;
  break;
 } else i13 = 0; while (0);
 i11 = i13 + (i6 << 3) | 0;
 i7 = i13 + (i12 << 3) | 0;
 i12 = i2;
 i2 = HEAP32[i12 + 4 >> 2] | 0;
 i10 = i11;
 HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
 HEAP32[i10 + 4 >> 2] = i2;
 i2 = i11 + 8 | 0;
 if ((i9 | 0) == (i8 | 0)) {
  i14 = i11;
  i15 = i5;
 } else {
  i10 = i6 + -1 - ((i9 + -8 + (0 - i5) | 0) >>> 3) | 0;
  i5 = i9;
  i9 = i11;
  do {
   i9 = i9 + -8 | 0;
   i5 = i5 + -8 | 0;
   i11 = i5;
   i6 = HEAP32[i11 + 4 >> 2] | 0;
   i12 = i9;
   HEAP32[i12 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i12 + 4 >> 2] = i6;
  } while ((i5 | 0) != (i8 | 0));
  i14 = i13 + (i10 << 3) | 0;
  i15 = HEAP32[i1 >> 2] | 0;
 }
 HEAP32[i1 >> 2] = i14;
 HEAP32[i3 >> 2] = i2;
 HEAP32[i4 >> 2] = i7;
 if (!i15) return;
 __ZdlPv(i15);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3 + 12 | 0;
 i5 = i3 + 8 | 0;
 i6 = i3;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i6, i1);
 if (HEAP8[i6 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv(i4, i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i7 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58540) | 0;
  __ZNSt3__26localeD2Ev(i4);
  i8 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i9 = HEAP32[i8 + 24 >> 2] | 0;
  i10 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  i11 = i8 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i10, HEAP32[i11 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv(i4, i8);
   i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
   i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i10, 32) | 0;
   __ZNSt3__26localeD2Ev(i4);
   i10 = i12 << 24 >> 24;
   HEAP32[i11 >> 2] = i10;
   i13 = i10;
  } else i13 = HEAP32[i11 >> 2] | 0;
  i11 = HEAP32[(HEAP32[i7 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i5 >> 2] = i9;
  HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[i11 & 31](i7, i4, i8, i13 & 255, i2) | 0)) {
   i2 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj(i2, HEAP32[i2 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i6);
 STACKTOP = i3;
 return i1 | 0;
}

function _ycck_cmyk_convert(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i6 = HEAP32[i1 + 456 >> 2] | 0;
 i7 = HEAP32[i1 + 112 >> 2] | 0;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i1 = HEAP32[i6 + 8 >> 2] | 0;
 i9 = HEAP32[i6 + 12 >> 2] | 0;
 i10 = HEAP32[i6 + 16 >> 2] | 0;
 i11 = HEAP32[i6 + 20 >> 2] | 0;
 if ((i5 | 0) <= 0) return;
 i6 = i2 + 4 | 0;
 i12 = i2 + 8 | 0;
 i13 = i2 + 12 | 0;
 if (!i7) return;
 i14 = i4;
 i4 = i3;
 i3 = i5;
 while (1) {
  i5 = i3;
  i3 = i3 + -1 | 0;
  i15 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i4 << 2) >> 2] | 0;
  i16 = HEAP32[(HEAP32[i6 >> 2] | 0) + (i4 << 2) >> 2] | 0;
  i17 = HEAP32[(HEAP32[i12 >> 2] | 0) + (i4 << 2) >> 2] | 0;
  i18 = HEAP32[(HEAP32[i13 >> 2] | 0) + (i4 << 2) >> 2] | 0;
  i4 = i4 + 1 | 0;
  i19 = HEAP32[i14 >> 2] | 0;
  i20 = 0;
  while (1) {
   i21 = HEAPU8[i16 + i20 >> 0] | 0;
   i22 = HEAPU8[i17 + i20 >> 0] | 0;
   i23 = ~HEAP8[i15 + i20 >> 0] & 255;
   HEAP8[i19 >> 0] = HEAP8[i8 + (i23 - (HEAP32[i1 + (i22 << 2) >> 2] | 0)) >> 0] | 0;
   HEAP8[i19 + 1 >> 0] = HEAP8[i8 + (i23 - ((HEAP32[i10 + (i22 << 2) >> 2] | 0) + (HEAP32[i11 + (i21 << 2) >> 2] | 0) >> 16)) >> 0] | 0;
   HEAP8[i19 + 2 >> 0] = HEAP8[i8 + (i23 - (HEAP32[i9 + (i21 << 2) >> 2] | 0)) >> 0] | 0;
   HEAP8[i19 + 3 >> 0] = HEAP8[i18 + i20 >> 0] | 0;
   i20 = i20 + 1 | 0;
   if ((i20 | 0) == (i7 | 0)) break; else i19 = i19 + 4 | 0;
  }
  if ((i5 | 0) <= 1) break; else i14 = i14 + 4 | 0;
 }
 return;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = HEAP32[i1 + 812 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 816 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 800 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 804 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 788 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 792 >> 2] = i2;
  __ZdlPv(i2);
 }
 __ZN6vision21HoughSimilarityVotingD2Ev(i1 + 652 | 0);
 i2 = HEAP32[i1 + 636 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 640 >> 2] = i2;
  __ZdlPv(i2);
 }
 __ZN6vision25DoGScaleInvariantDetectorD2Ev(i1 + 160 | 0);
 __ZN6vision18BinomialPyramid32fD2Ev(i1 + 92 | 0);
 i2 = HEAP32[i1 + 80 >> 2] | 0;
 if (i2 | 0) {
  i3 = i2;
  do {
   i2 = i3;
   i3 = HEAP32[i3 >> 2] | 0;
   i4 = HEAP32[i2 + 16 >> 2] | 0;
   if (i4 | 0 ? (i5 = i4 + 4 | 0, i6 = HEAP32[i5 >> 2] | 0, HEAP32[i5 >> 2] = i6 + -1, (i6 | 0) == 0) : 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 255](i4);
    __ZNSt3__219__shared_weak_count14__release_weakEv(i4);
   }
   __ZdlPv(i2);
  } while ((i3 | 0) != 0);
 }
 i3 = i1 + 72 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = 0;
 if (i2 | 0) __ZdlPv(i2);
 i2 = HEAP32[i1 + 68 >> 2] | 0;
 if (i2 | 0 ? (i3 = i2 + 4 | 0, i4 = HEAP32[i3 >> 2] | 0, HEAP32[i3 >> 2] = i4 + -1, (i4 | 0) == 0) : 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 255](i2);
  __ZNSt3__219__shared_weak_count14__release_weakEv(i2);
 }
 i2 = HEAP32[i1 + 12 >> 2] | 0;
 if (!i2) return;
 HEAP32[i1 + 16 >> 2] = i2;
 __ZdlPv(i2);
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = i1 + 4 | 0;
 i6 = ((HEAP32[i5 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 4) + 1 | 0;
 i7 = __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i7 >>> 0 < i6 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i9 = (HEAP32[i1 + 8 >> 2] | 0) - i8 | 0;
  i10 = i9 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEEC2EmmS9_(i4, i9 >> 4 >>> 0 < i7 >>> 1 >>> 0 ? (i10 >>> 0 < i6 >>> 0 ? i6 : i10) : i7, (HEAP32[i5 >> 2] | 0) - i8 >> 4, i1 + 12 | 0);
  i8 = i4 + 8 | 0;
  i5 = HEAP32[i8 >> 2] | 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i5 + 4 >> 2] = 0;
  HEAP32[i5 + 8 >> 2] = 0;
  HEAP32[i5 + 12 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i8 >> 2] = i5 + 16;
  __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i1, i4);
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEED2Ev(i4);
  STACKTOP = i3;
  return;
 }
}

function __ZNK6vision10DoGPyramid15octaveFromIndexEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = HEAP32[i1 >> 2] | 0;
 i6 = i5;
 if ((HEAP32[i1 + 4 >> 2] | 0) - i5 >> 5 >>> 0 > i2 >>> 0) {
  i5 = ~~+Math_floor(+(+Math_log(+(+((((HEAP32[i6 + 4 >> 2] | 0) >>> 0) / ((HEAP32[i6 + (i2 << 5) + 4 >> 2] | 0) >>> 0) | 0) >>> 0))) / .6931471824645996 + .5));
  STACKTOP = i3;
  return i5 | 0;
 } else {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 24900, 45) | 0, 22500, 128) | 0, 33554, 6) | 0, 94) | 0, 33561, 2) | 0, 24946, 21) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 return 0;
}

function _jinit_memory_mgr(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i2 + 8 | 0;
 i5 = i2 + 12 | 0;
 i6 = i1 + 4 | 0;
 HEAP32[i6 >> 2] = 0;
 i7 = _jpeg_mem_init(i1) | 0;
 HEAP32[i4 >> 2] = i7;
 i8 = _jpeg_get_small(i1, 84) | 0;
 if (!i8) {
  _jpeg_mem_term(i1);
  i9 = HEAP32[i1 >> 2] | 0;
  HEAP32[i9 + 20 >> 2] = 54;
  HEAP32[i9 + 24 >> 2] = 0;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 HEAP32[i8 >> 2] = 27;
 HEAP32[i8 + 4 >> 2] = 28;
 HEAP32[i8 + 8 >> 2] = 7;
 HEAP32[i8 + 12 >> 2] = 8;
 HEAP32[i8 + 16 >> 2] = 39;
 HEAP32[i8 + 20 >> 2] = 40;
 HEAP32[i8 + 24 >> 2] = 114;
 HEAP32[i8 + 28 >> 2] = 21;
 HEAP32[i8 + 32 >> 2] = 22;
 HEAP32[i8 + 36 >> 2] = 40;
 HEAP32[i8 + 40 >> 2] = 115;
 HEAP32[i8 + 48 >> 2] = 1e9;
 i1 = i8 + 44 | 0;
 HEAP32[i1 >> 2] = i7;
 HEAP32[i8 + 56 >> 2] = 0;
 HEAP32[i8 + 64 >> 2] = 0;
 HEAP32[i8 + 52 >> 2] = 0;
 HEAP32[i8 + 60 >> 2] = 0;
 HEAP32[i8 + 68 >> 2] = 0;
 HEAP32[i8 + 72 >> 2] = 0;
 HEAP32[i8 + 76 >> 2] = 84;
 HEAP32[i6 >> 2] = i8;
 i8 = _getenv(38293) | 0;
 if (!i8) {
  STACKTOP = i2;
  return;
 }
 HEAP8[i5 >> 0] = 120;
 HEAP32[i3 >> 2] = i4;
 HEAP32[i3 + 4 >> 2] = i5;
 if ((_sscanf(i8, 38301, i3) | 0) > 0) {
  switch (HEAP8[i5 >> 0] | 0) {
  case 77:
  case 109:
   {
    i5 = (HEAP32[i4 >> 2] | 0) * 1e3 | 0;
    HEAP32[i4 >> 2] = i5;
    i10 = i5;
    break;
   }
  default:
   i10 = HEAP32[i4 >> 2] | 0;
  }
  HEAP32[i1 >> 2] = i10 * 1e3;
 }
 STACKTOP = i2;
 return;
}

function _ar2GetSearchPoint(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, d14 = 0.0, d15 = 0.0, i16 = 0, i17 = 0, i18 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i8 = i7 + 20 | 0;
 i9 = i7 + 16 | 0;
 i10 = i7 + 12 | 0;
 i11 = i7 + 8 | 0;
 i12 = i7 + 4 | 0;
 i13 = i7;
 d14 = +HEAPF32[i5 + 8 >> 2];
 d15 = +HEAPF32[i5 + 12 >> 2];
 if ((i2 | 0) != 0 ? (_ar2MarkerCoord2ScreenCoord(i1, i2, d14, d15, i8, i11) | 0) >= 0 : 0) {
  HEAP32[i6 >> 2] = ~~+HEAPF32[i8 >> 2];
  HEAP32[i6 + 4 >> 2] = ~~+HEAPF32[i11 >> 2];
  if ((i3 | 0) != 0 ? (_ar2MarkerCoord2ScreenCoord(i1, i3, d14, d15, i9, i12) | 0) >= 0 : 0) {
   HEAP32[i6 + 8 >> 2] = ~~(+HEAPF32[i8 >> 2] * 2.0 - +HEAPF32[i9 >> 2]);
   HEAP32[i6 + 12 >> 2] = ~~(+HEAPF32[i11 >> 2] * 2.0 - +HEAPF32[i12 >> 2]);
   if (i4 | 0 ? (_ar2MarkerCoord2ScreenCoord(i1, i4, d14, d15, i10, i13) | 0) >= 0 : 0) {
    HEAP32[i6 + 16 >> 2] = ~~(+HEAPF32[i10 >> 2] + (+HEAPF32[i8 >> 2] * 3.0 - +HEAPF32[i9 >> 2] * 3.0));
    i16 = ~~(+HEAPF32[i13 >> 2] + (+HEAPF32[i11 >> 2] * 3.0 - +HEAPF32[i12 >> 2] * 3.0));
    i17 = i6 + 20 | 0;
    HEAP32[i17 >> 2] = i16;
    STACKTOP = i7;
    return;
   }
  } else i18 = 9;
 } else {
  HEAP32[i6 >> 2] = -1;
  HEAP32[i6 + 4 >> 2] = -1;
  i18 = 9;
 }
 if ((i18 | 0) == 9) {
  HEAP32[i6 + 8 >> 2] = -1;
  HEAP32[i6 + 12 >> 2] = -1;
 }
 HEAP32[i6 + 16 >> 2] = -1;
 i16 = -1;
 i17 = i6 + 20 | 0;
 HEAP32[i17 >> 2] = i16;
 STACKTOP = i7;
 return;
}

function _mbtowc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 L1 : do if (!i2) i6 = 0; else {
  do if (i3 | 0) {
   i7 = (i1 | 0) == 0 ? i5 : i1;
   i8 = HEAP8[i2 >> 0] | 0;
   if (i8 << 24 >> 24 > -1) {
    HEAP32[i7 >> 2] = i8 & 255;
    i6 = i8 << 24 >> 24 != 0 & 1;
    break L1;
   }
   i8 = (___pthread_self_293() | 0) + 188 | 0;
   i9 = HEAP8[i2 >> 0] | 0;
   if (!(HEAP32[HEAP32[i8 >> 2] >> 2] | 0)) {
    HEAP32[i7 >> 2] = i9 << 24 >> 24 & 57343;
    i6 = 1;
    break L1;
   }
   i8 = (i9 & 255) + -194 | 0;
   if (i8 >>> 0 <= 50) {
    i9 = i2 + 1 | 0;
    i10 = HEAP32[3472 + (i8 << 2) >> 2] | 0;
    if (i3 >>> 0 < 4 ? i10 & -2147483648 >>> ((i3 * 6 | 0) + -6 | 0) | 0 : 0) break;
    i8 = HEAPU8[i9 >> 0] | 0;
    i9 = i8 >>> 3;
    if ((i9 + -16 | i9 + (i10 >> 26)) >>> 0 <= 7) {
     i9 = i8 + -128 | i10 << 6;
     if ((i9 | 0) >= 0) {
      HEAP32[i7 >> 2] = i9;
      i6 = 2;
      break L1;
     }
     i10 = (HEAPU8[i2 + 2 >> 0] | 0) + -128 | 0;
     if (i10 >>> 0 <= 63) {
      i8 = i10 | i9 << 6;
      if ((i8 | 0) >= 0) {
       HEAP32[i7 >> 2] = i8;
       i6 = 3;
       break L1;
      }
      i9 = (HEAPU8[i2 + 3 >> 0] | 0) + -128 | 0;
      if (i9 >>> 0 <= 63) {
       HEAP32[i7 >> 2] = i9 | i8 << 6;
       i6 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  i8 = ___errno_location() | 0;
  HEAP32[i8 >> 2] = 84;
  i6 = -1;
 } while (0);
 STACKTOP = i4;
 return i6 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 L1 : do if ((i1 | 0) == (i2 | 0)) i4 = i1; else switch (HEAP8[i1 >> 0] | 0) {
 case 88:
  {
   i5 = i1 + 1 | 0;
   i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i5, i2, i3) | 0;
   if ((i6 | 0) == (i5 | 0) | (i6 | 0) == (i2 | 0)) {
    i4 = i1;
    break L1;
   }
   i4 = (HEAP8[i6 >> 0] | 0) == 69 ? i6 + 1 | 0 : i1;
   break L1;
   break;
  }
 case 74:
  {
   i6 = i1 + 1 | 0;
   if ((i6 | 0) == (i2 | 0)) {
    i4 = i1;
    break L1;
   }
   i5 = i6;
   while (1) {
    if ((HEAP8[i5 >> 0] | 0) == 69) break;
    i6 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_(i5, i2, i3) | 0;
    if ((i6 | 0) == (i5 | 0)) {
     i4 = i1;
     break L1;
    } else i5 = i6;
   }
   i4 = i5 + 1 | 0;
   break L1;
   break;
  }
 case 76:
  {
   i6 = i1 + 1 | 0;
   if ((i6 | 0) != (i2 | 0) ? (HEAP8[i6 >> 0] | 0) == 90 : 0) {
    i6 = i1 + 2 | 0;
    i7 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i3) | 0;
    if ((i7 | 0) == (i6 | 0) | (i7 | 0) == (i2 | 0)) {
     i4 = i1;
     break L1;
    }
    i4 = (HEAP8[i7 >> 0] | 0) == 69 ? i7 + 1 | 0 : i1;
    break L1;
   }
   i4 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   break L1;
   break;
  }
 default:
  {
   i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   break L1;
  }
 } while (0);
 return i4 | 0;
}

function __ZN6vision25DoGScaleInvariantDetectorD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i2 = HEAP32[i1 + 144 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 148 >> 2] = i2;
  __ZdlPv(i2);
 }
 __ZN6vision21OrientationAssignmentD2Ev(i1 + 92 | 0);
 i2 = HEAP32[i1 + 72 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 76 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 60 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 64 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = i1 + 32 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i1 + 36 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (i3 | 0)) i6 = i3; else {
   i7 = i5;
   do {
    i7 = i7 + -32 | 0;
    __ZN6vision5ImageD2Ev(i7);
   } while ((i7 | 0) != (i3 | 0));
   i6 = HEAP32[i2 >> 2] | 0;
  }
  HEAP32[i4 >> 2] = i3;
  __ZdlPv(i6);
 }
 i6 = i1 + 16 | 0;
 i3 = HEAP32[i6 >> 2] | 0;
 if (!i3) return;
 i4 = i1 + 20 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if ((i1 | 0) == (i3 | 0)) i8 = i3; else {
  i2 = i1;
  do {
   i1 = i2;
   i2 = i2 + -12 | 0;
   i7 = HEAP32[i2 >> 2] | 0;
   if (i7 | 0) {
    i5 = i1 + -8 | 0;
    i1 = HEAP32[i5 >> 2] | 0;
    if ((i1 | 0) == (i7 | 0)) i9 = i7; else {
     i10 = i1;
     do {
      i1 = i10;
      i10 = i10 + -12 | 0;
      i11 = HEAP32[i10 >> 2] | 0;
      if (i11 | 0) {
       HEAP32[i1 + -8 >> 2] = i11;
       __ZdlPv(i11);
      }
     } while ((i10 | 0) != (i7 | 0));
     i9 = HEAP32[i2 >> 2] | 0;
    }
    HEAP32[i5 >> 2] = i7;
    __ZdlPv(i9);
   }
  } while ((i2 | 0) != (i3 | 0));
  i8 = HEAP32[i6 >> 2] | 0;
 }
 HEAP32[i4 >> 2] = i3;
 __ZdlPv(i8);
 return;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i3 = i2;
 i4 = i1 + 4 | 0;
 i5 = (((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 i6 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i6 >>> 0 < i5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i7 = HEAP32[i1 >> 2] | 0;
  i8 = ((HEAP32[i1 + 8 >> 2] | 0) - i7 | 0) / 24 | 0;
  i9 = i8 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_(i3, i8 >>> 0 < i6 >>> 1 >>> 0 ? (i9 >>> 0 < i5 >>> 0 ? i5 : i9) : i6, ((HEAP32[i4 >> 2] | 0) - i7 | 0) / 24 | 0, i1 + 12 | 0);
  i7 = i3 + 8 | 0;
  i4 = HEAP32[i7 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP32[i4 + 12 >> 2] = 0;
  HEAP32[i4 + 16 >> 2] = 0;
  HEAP32[i4 + 20 >> 2] = 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i4);
  HEAP32[i7 >> 2] = i4 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i3);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev(i3);
  STACKTOP = i2;
  return;
 }
}

function _sep_upsample(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i4 = HEAP32[i1 + 452 >> 2] | 0;
 i8 = i4 + 92 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i10 = i1 + 312 | 0;
 i11 = HEAP32[i10 >> 2] | 0;
 if ((i9 | 0) < (i11 | 0)) {
  i12 = i9;
  i13 = i11;
 } else {
  i9 = i1 + 36 | 0;
  if ((HEAP32[i9 >> 2] | 0) > 0) {
   i14 = HEAP32[i1 + 216 >> 2] | 0;
   i15 = 0;
   while (1) {
    i16 = (HEAP32[i2 + (i15 << 2) >> 2] | 0) + ((Math_imul(HEAP32[i4 + 100 + (i15 << 2) >> 2] | 0, HEAP32[i3 >> 2] | 0) | 0) << 2) | 0;
    FUNCTION_TABLE_viiii[HEAP32[i4 + 52 + (i15 << 2) >> 2] & 31](i1, i14, i16, i4 + 12 + (i15 << 2) | 0);
    i15 = i15 + 1 | 0;
    if ((i15 | 0) >= (HEAP32[i9 >> 2] | 0)) break; else i14 = i14 + 84 | 0;
   }
   i17 = HEAP32[i10 >> 2] | 0;
  } else i17 = i11;
  HEAP32[i8 >> 2] = 0;
  i12 = 0;
  i13 = i17;
 }
 i17 = i13 - i12 | 0;
 i13 = i4 + 96 | 0;
 i11 = HEAP32[i13 >> 2] | 0;
 i14 = i17 >>> 0 > i11 >>> 0 ? i11 : i17;
 i17 = HEAP32[i6 >> 2] | 0;
 i11 = i7 - i17 | 0;
 i7 = i14 >>> 0 > i11 >>> 0 ? i11 : i14;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i1 + 456 >> 2] | 0) + 4 >> 2] & 31](i1, i4 + 12 | 0, i12, i5 + (i17 << 2) | 0, i7);
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i7;
 HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) - i7;
 i13 = (HEAP32[i8 >> 2] | 0) + i7 | 0;
 HEAP32[i8 >> 2] = i13;
 if ((i13 | 0) < (HEAP32[i10 >> 2] | 0)) return;
 HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 return;
}

function _arUtilMatInv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = _arMatrixAlloc(4, 4) | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF64[i4 >> 3] = +HEAPF64[i1 >> 3];
 HEAPF64[i4 + 8 >> 3] = +HEAPF64[i1 + 8 >> 3];
 HEAPF64[i4 + 16 >> 3] = +HEAPF64[i1 + 16 >> 3];
 HEAPF64[i4 + 24 >> 3] = +HEAPF64[i1 + 24 >> 3];
 HEAPF64[i4 + 32 >> 3] = +HEAPF64[i1 + 32 >> 3];
 HEAPF64[i4 + 40 >> 3] = +HEAPF64[i1 + 40 >> 3];
 HEAPF64[i4 + 48 >> 3] = +HEAPF64[i1 + 48 >> 3];
 HEAPF64[i4 + 56 >> 3] = +HEAPF64[i1 + 56 >> 3];
 HEAPF64[i4 + 64 >> 3] = +HEAPF64[i1 + 64 >> 3];
 HEAPF64[i4 + 72 >> 3] = +HEAPF64[i1 + 72 >> 3];
 HEAPF64[i4 + 80 >> 3] = +HEAPF64[i1 + 80 >> 3];
 HEAPF64[i4 + 88 >> 3] = +HEAPF64[i1 + 88 >> 3];
 i1 = i4 + 96 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAPF64[i4 + 120 >> 3] = 1.0;
 _arMatrixSelfInv(i3) | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF64[i2 >> 3] = +HEAPF64[i4 >> 3];
 HEAPF64[i2 + 8 >> 3] = +HEAPF64[i4 + 8 >> 3];
 HEAPF64[i2 + 16 >> 3] = +HEAPF64[i4 + 16 >> 3];
 HEAPF64[i2 + 24 >> 3] = +HEAPF64[i4 + 24 >> 3];
 HEAPF64[i2 + 32 >> 3] = +HEAPF64[i4 + 32 >> 3];
 HEAPF64[i2 + 40 >> 3] = +HEAPF64[i4 + 40 >> 3];
 HEAPF64[i2 + 48 >> 3] = +HEAPF64[i4 + 48 >> 3];
 HEAPF64[i2 + 56 >> 3] = +HEAPF64[i4 + 56 >> 3];
 HEAPF64[i2 + 64 >> 3] = +HEAPF64[i4 + 64 >> 3];
 HEAPF64[i2 + 72 >> 3] = +HEAPF64[i4 + 72 >> 3];
 HEAPF64[i2 + 80 >> 3] = +HEAPF64[i4 + 80 >> 3];
 HEAPF64[i2 + 88 >> 3] = +HEAPF64[i4 + 88 >> 3];
 _arMatrixFree(i3) | 0;
 return 0;
}

function _arUtilMatInvf(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = _arMatrixAlloc(4, 4) | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF64[i4 >> 3] = +HEAPF32[i1 >> 2];
 HEAPF64[i4 + 8 >> 3] = +HEAPF32[i1 + 4 >> 2];
 HEAPF64[i4 + 16 >> 3] = +HEAPF32[i1 + 8 >> 2];
 HEAPF64[i4 + 24 >> 3] = +HEAPF32[i1 + 12 >> 2];
 HEAPF64[i4 + 32 >> 3] = +HEAPF32[i1 + 16 >> 2];
 HEAPF64[i4 + 40 >> 3] = +HEAPF32[i1 + 20 >> 2];
 HEAPF64[i4 + 48 >> 3] = +HEAPF32[i1 + 24 >> 2];
 HEAPF64[i4 + 56 >> 3] = +HEAPF32[i1 + 28 >> 2];
 HEAPF64[i4 + 64 >> 3] = +HEAPF32[i1 + 32 >> 2];
 HEAPF64[i4 + 72 >> 3] = +HEAPF32[i1 + 36 >> 2];
 HEAPF64[i4 + 80 >> 3] = +HEAPF32[i1 + 40 >> 2];
 HEAPF64[i4 + 88 >> 3] = +HEAPF32[i1 + 44 >> 2];
 i1 = i4 + 96 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAPF64[i4 + 120 >> 3] = 1.0;
 _arMatrixSelfInv(i3) | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF32[i2 >> 2] = +HEAPF64[i4 >> 3];
 HEAPF32[i2 + 4 >> 2] = +HEAPF64[i4 + 8 >> 3];
 HEAPF32[i2 + 8 >> 2] = +HEAPF64[i4 + 16 >> 3];
 HEAPF32[i2 + 12 >> 2] = +HEAPF64[i4 + 24 >> 3];
 HEAPF32[i2 + 16 >> 2] = +HEAPF64[i4 + 32 >> 3];
 HEAPF32[i2 + 20 >> 2] = +HEAPF64[i4 + 40 >> 3];
 HEAPF32[i2 + 24 >> 2] = +HEAPF64[i4 + 48 >> 3];
 HEAPF32[i2 + 28 >> 2] = +HEAPF64[i4 + 56 >> 3];
 HEAPF32[i2 + 32 >> 2] = +HEAPF64[i4 + 64 >> 3];
 HEAPF32[i2 + 36 >> 2] = +HEAPF64[i4 + 72 >> 3];
 HEAPF32[i2 + 40 >> 2] = +HEAPF64[i4 + 80 >> 3];
 HEAPF32[i2 + 44 >> 2] = +HEAPF64[i4 + 88 >> 3];
 _arMatrixFree(i3) | 0;
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i1 + 11 | 0;
 if ((HEAP8[i5 >> 0] | 0) < 0) {
  i6 = HEAP32[i1 >> 2] | 0;
  HEAP8[i4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i6, i4);
  HEAP32[i1 + 4 >> 2] = 0;
 } else {
  HEAP8[i4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i4);
  HEAP8[i5 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i1);
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i5 = 0;
 while (1) {
  if ((i5 | 0) == 3) break;
  HEAP32[i2 + (i5 << 2) >> 2] = 0;
  i5 = i5 + 1 | 0;
 }
 i5 = i1 + 12 | 0;
 i6 = i2 + 12 | 0;
 i2 = i5 + 11 | 0;
 if ((HEAP8[i2 >> 0] | 0) < 0) {
  i7 = HEAP32[i5 >> 2] | 0;
  HEAP8[i4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i4);
  HEAP32[i1 + 16 >> 2] = 0;
 } else {
  HEAP8[i4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i5, i4);
  HEAP8[i2 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm(i5);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i5 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 HEAP32[i5 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
 i5 = 0;
 while (1) {
  if ((i5 | 0) == 3) break;
  HEAP32[i6 + (i5 << 2) >> 2] = 0;
  i5 = i5 + 1 | 0;
 }
 STACKTOP = i3;
 return;
}

function _arImageProcLumaHistAndOtsu(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, i14 = 0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, i19 = 0, d20 = 0.0, i21 = 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  i4 = -1;
  return i4 | 0;
 }
 _memset(i1 + 12 | 0, 0, 1024) | 0;
 i5 = Math_imul(HEAP32[i1 + 8 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
 if ((i5 | 0) > 0) {
  i6 = i2 + i5 | 0;
  i7 = i2;
  do {
   i2 = i1 + 12 + ((HEAPU8[i7 >> 0] | 0) << 2) | 0;
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
   i7 = i7 + 1 | 0;
  } while (i7 >>> 0 < i6 >>> 0);
 }
 d8 = 0.0;
 i6 = 1;
 do {
  d8 = d8 + +((Math_imul(HEAP32[i1 + 12 + (i6 << 2) >> 2] | 0, i6) | 0) >>> 0);
  i6 = i6 + 1 | 0;
 } while ((i6 | 0) != 256);
 d9 = +(i5 | 0);
 i5 = 0;
 d10 = 0.0;
 d11 = 0.0;
 d12 = 0.0;
 i6 = 0;
 while (1) {
  i7 = HEAP32[i1 + 12 + (i6 << 2) >> 2] | 0;
  d11 = d11 + +(i7 >>> 0);
  if (d11 != 0.0) {
   d13 = d9 - d11;
   if (d13 == 0.0) {
    i14 = i5;
    break;
   }
   d15 = d12 + +((Math_imul(i7, i6) | 0) >>> 0);
   d16 = d15 / d11 - (d8 - d15) / d13;
   d17 = d16 * (d11 * d13 * d16);
   i7 = d17 > d10;
   i2 = i6 & 255;
   d18 = d15;
   i19 = i7 ? i2 : i5;
   d20 = i7 ? d17 : d10;
   i21 = i2;
  } else {
   d18 = d12;
   i19 = i5;
   d20 = d10;
   i21 = i6 & 255;
  }
  if (i21 << 24 >> 24 == -1) {
   i14 = i19;
   break;
  } else {
   i5 = i19;
   d10 = d20;
   d12 = d18;
   i6 = i6 + 1 | 0;
  }
 }
 HEAP8[i3 >> 0] = i14;
 i4 = 0;
 return i4 | 0;
}

function __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i5 = i1 + 11 | 0;
 i6 = HEAP8[i5 >> 0] | 0;
 i7 = i1 + 4 | 0;
 i8 = HEAP32[i7 >> 2] | 0;
 i9 = i6 & 255;
 do if ((i6 << 24 >> 24 < 0 ? i8 : i9) | 0) {
  if ((i2 | 0) == (i3 | 0)) {
   i10 = i9;
   i11 = i6;
   i12 = i8;
  } else {
   i13 = i3;
   i14 = i2;
   while (1) {
    i15 = i13 + -4 | 0;
    if (i14 >>> 0 >= i15 >>> 0) break;
    i16 = HEAP32[i14 >> 2] | 0;
    HEAP32[i14 >> 2] = HEAP32[i15 >> 2];
    HEAP32[i15 >> 2] = i16;
    i13 = i15;
    i14 = i14 + 4 | 0;
   }
   i14 = HEAP8[i5 >> 0] | 0;
   i10 = i14 & 255;
   i11 = i14;
   i12 = HEAP32[i7 >> 2] | 0;
  }
  i14 = i11 << 24 >> 24 < 0;
  i13 = i14 ? HEAP32[i1 >> 2] | 0 : i1;
  i15 = i3 + -4 | 0;
  i16 = i13 + (i14 ? i12 : i10) | 0;
  i14 = i2;
  i17 = i13;
  while (1) {
   i18 = HEAP8[i17 >> 0] | 0;
   i19 = i18 << 24 >> 24 > 0 & i18 << 24 >> 24 != 127;
   if (i14 >>> 0 >= i15 >>> 0) break;
   if (i19 ? (HEAP32[i14 >> 2] | 0) != (i18 << 24 >> 24 | 0) : 0) {
    i20 = 11;
    break;
   }
   i14 = i14 + 4 | 0;
   i17 = (i16 - i17 | 0) > 1 ? i17 + 1 | 0 : i17;
  }
  if ((i20 | 0) == 11) {
   HEAP32[i4 >> 2] = 4;
   break;
  }
  if (i19 ? ((HEAP32[i15 >> 2] | 0) + -1 | 0) >>> 0 >= i18 << 24 >> 24 >>> 0 : 0) HEAP32[i4 >> 2] = 4;
 } while (0);
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i6) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i2, i3, i4, i5); else {
  i7 = i2 + 52 | 0;
  i8 = HEAP8[i7 >> 0] | 0;
  i9 = i2 + 53 | 0;
  i10 = HEAP8[i9 >> 0] | 0;
  i11 = HEAP32[i1 + 12 >> 2] | 0;
  i12 = i1 + 16 + (i11 << 3) | 0;
  HEAP8[i7 >> 0] = 0;
  HEAP8[i9 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1 + 16 | 0, i2, i3, i4, i5, i6);
  L4 : do if ((i11 | 0) > 1) {
   i13 = i2 + 24 | 0;
   i14 = i1 + 8 | 0;
   i15 = i2 + 54 | 0;
   i16 = i1 + 24 | 0;
   do {
    if (HEAP8[i15 >> 0] | 0) break L4;
    if (!(HEAP8[i7 >> 0] | 0)) {
     if (HEAP8[i9 >> 0] | 0 ? (HEAP32[i14 >> 2] & 1 | 0) == 0 : 0) break L4;
    } else {
     if ((HEAP32[i13 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[i14 >> 2] & 2)) break L4;
    }
    HEAP8[i7 >> 0] = 0;
    HEAP8[i9 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i16, i2, i3, i4, i5, i6);
    i16 = i16 + 8 | 0;
   } while (i16 >>> 0 < i12 >>> 0);
  } while (0);
  HEAP8[i7 >> 0] = i8;
  HEAP8[i9 >> 0] = i10;
 }
 return;
}

function _confidenceCutoff(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 switch (HEAP32[i1 + 24 >> 2] | 0) {
 case 1:
 case 0:
  {
   i2 = HEAP32[i1 + 44 >> 2] | 0;
   if ((i2 | 0) <= 0) return;
   i3 = 0;
   do {
    i4 = i1 + 48 + (i3 << 8) + 4 | 0;
    if ((HEAP32[i4 >> 2] | 0) > -1 ? +HEAPF64[i1 + 48 + (i3 << 8) + 32 >> 3] < .5 : 0) {
     HEAP32[i1 + 48 + (i3 << 8) + 8 >> 2] = -1;
     HEAP32[i4 >> 2] = -1;
     HEAP32[i1 + 48 + (i3 << 8) + 236 >> 2] = 6;
    }
    i3 = i3 + 1 | 0;
   } while ((i3 | 0) < (i2 | 0));
   return;
  }
 case 2:
  {
   i2 = HEAP32[i1 + 44 >> 2] | 0;
   if ((i2 | 0) <= 0) return;
   i3 = 0;
   do {
    i4 = i1 + 48 + (i3 << 8) + 4 | 0;
    if ((HEAP32[i4 >> 2] | 0) > -1 ? +HEAPF64[i1 + 48 + (i3 << 8) + 32 >> 3] < .5 : 0) {
     HEAP32[i1 + 48 + (i3 << 8) + 12 >> 2] = -1;
     HEAP32[i4 >> 2] = -1;
     HEAP32[i1 + 48 + (i3 << 8) + 236 >> 2] = 6;
    }
    i3 = i3 + 1 | 0;
   } while ((i3 | 0) < (i2 | 0));
   return;
  }
 default:
  {
   i2 = HEAP32[i1 + 44 >> 2] | 0;
   if ((i2 | 0) <= 0) return;
   i3 = 0;
   do {
    i4 = i1 + 48 + (i3 << 8) + 8 | 0;
    if ((HEAP32[i4 >> 2] | 0) > -1 ? +HEAPF64[i1 + 48 + (i3 << 8) + 40 >> 3] < .5 : 0) {
     HEAP32[i4 >> 2] = -1;
     i5 = 0;
    } else i5 = 1;
    i4 = i1 + 48 + (i3 << 8) + 12 | 0;
    if (((HEAP32[i4 >> 2] | 0) > -1 ? +HEAPF64[i1 + 48 + (i3 << 8) + 48 >> 3] < .5 : 0) ? (HEAP32[i4 >> 2] = -1, (i5 | 0) == 0) : 0) HEAP32[i1 + 48 + (i3 << 8) + 236 >> 2] = 6;
    i3 = i3 + 1 | 0;
   } while ((i3 | 0) < (i2 | 0));
   return;
  }
 }
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if (((i4 - i6 | 0) / 36 | 0) >>> 0 >= i2 >>> 0) {
  i7 = i2;
  i8 = i6;
  do {
   i9 = i8;
   i10 = i9 + 36 | 0;
   do {
    HEAP32[i9 >> 2] = 0;
    i9 = i9 + 4 | 0;
   } while ((i9 | 0) < (i10 | 0));
   i8 = (HEAP32[i5 >> 2] | 0) + 36 | 0;
   HEAP32[i5 >> 2] = i8;
   i7 = i7 + -1 | 0;
  } while ((i7 | 0) != 0);
  return;
 }
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = i6 - i7 | 0;
 i6 = (i8 | 0) / 36 | 0;
 i9 = i6 + i2 | 0;
 if (i9 >>> 0 > 119304647) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i10 = (i4 - i7 | 0) / 36 | 0;
 i4 = i10 << 1;
 i11 = i10 >>> 0 < 59652323 ? (i4 >>> 0 < i9 >>> 0 ? i9 : i4) : 119304647;
 do if (i11) if (i11 >>> 0 > 119304647) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 } else {
  i12 = __Znwm(i11 * 36 | 0) | 0;
  break;
 } else i12 = 0; while (0);
 i4 = i12 + (i6 * 36 | 0) | 0;
 _memset(i4 | 0, 0, i2 * 36 | 0) | 0;
 i2 = i4 + (((i8 | 0) / -36 | 0) * 36 | 0) | 0;
 if ((i8 | 0) > 0) _memcpy(i2 | 0, i7 | 0, i8 | 0) | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i5 >> 2] = i12 + (i9 * 36 | 0);
 HEAP32[i3 >> 2] = i12 + (i11 * 36 | 0);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function _quantize3_ord_dither(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i5 = HEAP32[i1 + 460 >> 2] | 0;
 i6 = HEAP32[i5 + 24 >> 2] | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = HEAP32[i6 + 4 >> 2] | 0;
 i9 = HEAP32[i6 + 8 >> 2] | 0;
 i6 = HEAP32[i1 + 112 >> 2] | 0;
 if ((i4 | 0) <= 0) return;
 i1 = i5 + 48 | 0;
 i10 = i5 + 52 | 0;
 i11 = i5 + 56 | 0;
 i12 = i5 + 60 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 if (!i6) {
  i13 = 0;
  i14 = i5;
  do {
   i14 = i14 + 1 & 15;
   i13 = i13 + 1 | 0;
  } while ((i13 | 0) != (i4 | 0));
  HEAP32[i1 >> 2] = i14;
  return;
 }
 i14 = 0;
 i13 = i5;
 do {
  i5 = HEAP32[i10 >> 2] | 0;
  i15 = HEAP32[i11 >> 2] | 0;
  i16 = HEAP32[i12 >> 2] | 0;
  i17 = i6;
  i18 = 0;
  i19 = HEAP32[i3 + (i14 << 2) >> 2] | 0;
  i20 = HEAP32[i2 + (i14 << 2) >> 2] | 0;
  while (1) {
   HEAP8[i19 >> 0] = (HEAPU8[i8 + ((HEAP32[i15 + (i13 << 6) + (i18 << 2) >> 2] | 0) + (HEAPU8[i20 + 1 >> 0] | 0)) >> 0] | 0) + (HEAPU8[i7 + ((HEAP32[i5 + (i13 << 6) + (i18 << 2) >> 2] | 0) + (HEAPU8[i20 >> 0] | 0)) >> 0] | 0) + (HEAPU8[i9 + ((HEAP32[i16 + (i13 << 6) + (i18 << 2) >> 2] | 0) + (HEAPU8[i20 + 2 >> 0] | 0)) >> 0] | 0);
   i17 = i17 + -1 | 0;
   if (!i17) break; else {
    i18 = i18 + 1 & 15;
    i19 = i19 + 1 | 0;
    i20 = i20 + 3 | 0;
   }
  }
  i13 = i13 + 1 & 15;
  HEAP32[i1 >> 2] = i13;
  i14 = i14 + 1 | 0;
 } while ((i14 | 0) != (i4 | 0));
 return;
}

function ___mo_lookup(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i4 = (HEAP32[i1 >> 2] | 0) + 1794895138 | 0;
 i5 = _swapc(HEAP32[i1 + 8 >> 2] | 0, i4) | 0;
 i6 = _swapc(HEAP32[i1 + 12 >> 2] | 0, i4) | 0;
 i7 = _swapc(HEAP32[i1 + 16 >> 2] | 0, i4) | 0;
 L1 : do if ((i5 >>> 0 < i2 >>> 2 >>> 0 ? (i8 = i2 - (i5 << 2) | 0, i6 >>> 0 < i8 >>> 0 & i7 >>> 0 < i8 >>> 0) : 0) ? ((i7 | i6) & 3 | 0) == 0 : 0) {
  i8 = i6 >>> 2;
  i9 = i7 >>> 2;
  i10 = 0;
  i11 = i5;
  while (1) {
   i12 = i11 >>> 1;
   i13 = i10 + i12 | 0;
   i14 = i13 << 1;
   i15 = i14 + i8 | 0;
   i16 = _swapc(HEAP32[i1 + (i15 << 2) >> 2] | 0, i4) | 0;
   i17 = _swapc(HEAP32[i1 + (i15 + 1 << 2) >> 2] | 0, i4) | 0;
   if (!(i17 >>> 0 < i2 >>> 0 & i16 >>> 0 < (i2 - i17 | 0) >>> 0)) {
    i18 = 0;
    break L1;
   }
   if (HEAP8[i1 + (i17 + i16) >> 0] | 0) {
    i18 = 0;
    break L1;
   }
   i16 = _strcmp(i3, i1 + i17 | 0) | 0;
   if (!i16) break;
   i17 = (i16 | 0) < 0;
   if ((i11 | 0) == 1) {
    i18 = 0;
    break L1;
   }
   i10 = i17 ? i10 : i13;
   i11 = i17 ? i12 : i11 - i12 | 0;
  }
  i11 = i14 + i9 | 0;
  i10 = _swapc(HEAP32[i1 + (i11 << 2) >> 2] | 0, i4) | 0;
  i8 = _swapc(HEAP32[i1 + (i11 + 1 << 2) >> 2] | 0, i4) | 0;
  if (i8 >>> 0 < i2 >>> 0 & i10 >>> 0 < (i2 - i8 | 0) >>> 0) i18 = (HEAP8[i1 + (i8 + i10) >> 0] | 0) == 0 ? i1 + i8 | 0 : 0; else i18 = 0;
 } else i18 = 0; while (0);
 return i18 | 0;
}

function __ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i2;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 i8 = 0;
 while (1) {
  if ((i8 | 0) == 3) break;
  HEAP32[i7 + (i8 << 2) >> 2] = 0;
  i8 = i8 + 1 | 0;
 }
 i8 = HEAP8[i6 + 11 >> 0] | 0;
 i9 = i8 << 24 >> 24 < 0;
 i10 = i9 ? HEAP32[i6 >> 2] | 0 : i6;
 i11 = i10 + (i9 ? HEAP32[i6 + 4 >> 2] | 0 : i8 & 255) | 0;
 i8 = i10;
 while (1) {
  if (i8 >>> 0 >= i11 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i7, HEAP8[i8 >> 0] | 0);
  i8 = i8 + 1 | 0;
 }
 i8 = (HEAP8[i7 + 11 >> 0] | 0) < 0 ? HEAP32[i7 >> 2] | 0 : i7;
 i11 = _catgets((i3 | 0) == -1 ? -1 : i3 << 1, i4, i5, i8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i5 = 0;
 while (1) {
  if ((i5 | 0) == 3) break;
  HEAP32[i1 + (i5 << 2) >> 2] = 0;
  i5 = i5 + 1 | 0;
 }
 i5 = i8 + (_strlen(i11) | 0) | 0;
 i11 = i8;
 while (1) {
  if (i11 >>> 0 >= i5 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i1, HEAP8[i11 >> 0] | 0);
  i11 = i11 + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 STACKTOP = i2;
 return;
}

function _arGetTransMatRobust(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i8 = i7 + 20 | 0;
 i9 = i7;
 i10 = _malloc(i5 << 4) | 0;
 HEAP32[i8 >> 2] = i10;
 if (!i10) {
  _arLog(0, 3, 20510, i7 + 8 | 0);
  _exit(1);
 }
 i11 = _malloc(i5 * 24 | 0) | 0;
 i12 = i8 + 4 | 0;
 HEAP32[i12 >> 2] = i11;
 if (!i11) {
  _arLog(0, 3, 20510, i7 + 16 | 0);
  _exit(1);
 }
 if ((i5 | 0) > 0) {
  i13 = 0;
  do {
   HEAPF64[i10 + (i13 << 4) >> 3] = +HEAPF64[i3 + (i13 << 4) >> 3];
   HEAPF64[i10 + (i13 << 4) + 8 >> 3] = +HEAPF64[i3 + (i13 << 4) + 8 >> 3];
   HEAPF64[i11 + (i13 * 24 | 0) >> 3] = +HEAPF64[i4 + (i13 * 24 | 0) >> 3];
   HEAPF64[i11 + (i13 * 24 | 0) + 8 >> 3] = +HEAPF64[i4 + (i13 * 24 | 0) + 8 >> 3];
   HEAPF64[i11 + (i13 * 24 | 0) + 16 >> 3] = +HEAPF64[i4 + (i13 * 24 | 0) + 16 >> 3];
   i13 = i13 + 1 | 0;
  } while ((i13 | 0) != (i5 | 0));
 }
 HEAP32[i8 + 8 >> 2] = i5;
 if ((_icpPointRobust(HEAP32[i1 >> 2] | 0, i8, i2, i6, i9) | 0) >= 0) {
  i14 = HEAP32[i8 >> 2] | 0;
  _free(i14);
  i15 = HEAP32[i12 >> 2] | 0;
  _free(i15);
  d16 = +HEAPF64[i9 >> 3];
  STACKTOP = i7;
  return +d16;
 }
 HEAPF64[i9 >> 3] = 1.0e8;
 i14 = HEAP32[i8 >> 2] | 0;
 _free(i14);
 i15 = HEAP32[i12 >> 2] | 0;
 _free(i15);
 d16 = +HEAPF64[i9 >> 3];
 STACKTOP = i7;
 return +d16;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEmRKi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i4 = i1 + 8 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = i1 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = i7;
 if (i5 - i7 >> 2 >>> 0 >= i2 >>> 0) {
  i9 = i2;
  i10 = i8;
  while (1) {
   HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
   i9 = i9 + -1 | 0;
   if (!i9) break; else i10 = i10 + 4 | 0;
  }
  HEAP32[i6 >> 2] = i8 + (i2 << 2);
  return;
 }
 i8 = HEAP32[i1 >> 2] | 0;
 i10 = i7 - i8 | 0;
 i7 = i10 >> 2;
 i9 = i7 + i2 | 0;
 if (i9 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i11 = i5 - i8 | 0;
 i5 = i11 >> 1;
 i12 = i11 >> 2 >>> 0 < 536870911 ? (i5 >>> 0 < i9 >>> 0 ? i9 : i5) : 1073741823;
 do if (i12) if (i12 >>> 0 > 1073741823) {
  i5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i5, 40980);
  HEAP32[i5 >> 2] = 17420;
  ___cxa_throw(i5 | 0, 13288, 107);
 } else {
  i5 = __Znwm(i12 << 2) | 0;
  i13 = i5;
  i14 = i5;
  break;
 } else {
  i13 = 0;
  i14 = 0;
 } while (0);
 i5 = i13 + (i7 << 2) | 0;
 i7 = i13 + (i12 << 2) | 0;
 i12 = i2;
 i9 = i5;
 while (1) {
  HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
  i12 = i12 + -1 | 0;
  if (!i12) break; else i9 = i9 + 4 | 0;
 }
 if ((i10 | 0) > 0) _memcpy(i14 | 0, i8 | 0, i10 | 0) | 0;
 HEAP32[i1 >> 2] = i13;
 HEAP32[i6 >> 2] = i5 + (i2 << 2);
 HEAP32[i4 >> 2] = i7;
 if (!i8) return;
 __ZdlPv(i8);
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i6 = i1 + 184 | 0;
 i7 = i1 + 192 | 0;
 i8 = i1 + 160 | 0;
 i9 = i1;
 i10 = i1 + 188 | 0;
 HEAP8[i7 >> 0] = HEAP8[47578] | 0;
 HEAP8[i7 + 1 >> 0] = HEAP8[47579] | 0;
 HEAP8[i7 + 2 >> 0] = HEAP8[47580] | 0;
 HEAP8[i7 + 3 >> 0] = HEAP8[47581] | 0;
 HEAP8[i7 + 4 >> 0] = HEAP8[47582] | 0;
 HEAP8[i7 + 5 >> 0] = HEAP8[47583] | 0;
 i11 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i5;
 i5 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i8, 20, i11, i7, i6) | 0;
 i7 = i8 + i5 | 0;
 i11 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i8, i7, i3) | 0;
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58516) | 0;
 __ZNSt3__26localeD2Ev(i6);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 48 >> 2] & 15](i12, i8, i7, i9) | 0;
 i12 = i9 + (i5 << 2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i6 >> 2] = HEAP32[i10 >> 2];
 i10 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i9, (i11 | 0) == (i7 | 0) ? i12 : i9 + (i11 - i8 << 2) | 0, i12, i3, i4) | 0;
 STACKTOP = i1;
 return i10 | 0;
}

function _arGetTransMat(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, d16 = 0.0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i8 = i7 + 20 | 0;
 i9 = i7;
 i10 = _malloc(i5 << 4) | 0;
 HEAP32[i8 >> 2] = i10;
 if (!i10) {
  _arLog(0, 3, 20510, i7 + 8 | 0);
  _exit(1);
 }
 i11 = _malloc(i5 * 24 | 0) | 0;
 i12 = i8 + 4 | 0;
 HEAP32[i12 >> 2] = i11;
 if (!i11) {
  _arLog(0, 3, 20510, i7 + 16 | 0);
  _exit(1);
 }
 if ((i5 | 0) > 0) {
  i13 = 0;
  do {
   HEAPF64[i10 + (i13 << 4) >> 3] = +HEAPF64[i3 + (i13 << 4) >> 3];
   HEAPF64[i10 + (i13 << 4) + 8 >> 3] = +HEAPF64[i3 + (i13 << 4) + 8 >> 3];
   HEAPF64[i11 + (i13 * 24 | 0) >> 3] = +HEAPF64[i4 + (i13 * 24 | 0) >> 3];
   HEAPF64[i11 + (i13 * 24 | 0) + 8 >> 3] = +HEAPF64[i4 + (i13 * 24 | 0) + 8 >> 3];
   HEAPF64[i11 + (i13 * 24 | 0) + 16 >> 3] = +HEAPF64[i4 + (i13 * 24 | 0) + 16 >> 3];
   i13 = i13 + 1 | 0;
  } while ((i13 | 0) != (i5 | 0));
 }
 HEAP32[i8 + 8 >> 2] = i5;
 if ((_icpPoint(HEAP32[i1 >> 2] | 0, i8, i2, i6, i9) | 0) >= 0) {
  i14 = HEAP32[i8 >> 2] | 0;
  _free(i14);
  i15 = HEAP32[i12 >> 2] | 0;
  _free(i15);
  d16 = +HEAPF64[i9 >> 3];
  STACKTOP = i7;
  return +d16;
 }
 HEAPF64[i9 >> 3] = 1.0e8;
 i14 = HEAP32[i8 >> 2] | 0;
 _free(i14);
 i15 = HEAP32[i12 >> 2] | 0;
 _free(i15);
 d16 = +HEAPF64[i9 >> 3];
 STACKTOP = i7;
 return +d16;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = i1 + 8 | 0;
 i6 = i1 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 do if ((HEAP32[i5 >> 2] | 0) - i7 >> 2 >>> 0 < i2 >>> 0) {
  i8 = (i7 - (HEAP32[i1 >> 2] | 0) >> 2) + i2 | 0;
  i9 = __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv(i1) | 0;
  if (i9 >>> 0 < i8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
   i10 = HEAP32[i1 >> 2] | 0;
   i11 = (HEAP32[i5 >> 2] | 0) - i10 | 0;
   i12 = i11 >> 1;
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_(i4, i11 >> 2 >>> 0 < i9 >>> 1 >>> 0 ? (i12 >>> 0 < i8 >>> 0 ? i8 : i12) : i9, (HEAP32[i6 >> 2] | 0) - i10 >> 2, i1 + 16 | 0);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i4, i2);
   __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i4);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev(i4);
   break;
  }
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i1, i2); while (0);
 STACKTOP = i3;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 i7 = i1 + 11 | 0;
 i8 = HEAP8[i7 >> 0] | 0;
 i9 = i8 << 24 >> 24 < 0;
 if (i9) i10 = HEAP32[i1 + 4 >> 2] | 0; else i10 = i8 & 255;
 if (i10 >>> 0 < i2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv(i1);
 if (i9) i11 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0; else i11 = 10;
 if ((i11 - i10 | 0) >>> 0 >= i4 >>> 0) {
  if (i4 | 0) {
   if (i9) i12 = HEAP32[i1 >> 2] | 0; else i12 = i1;
   i9 = i10 - i2 | 0;
   i8 = i12 + i2 | 0;
   if (!i9) i13 = i3; else {
    __ZNSt3__211char_traitsIcE4moveEPcPKcm(i8 + i4 | 0, i8, i9) | 0;
    i13 = i8 >>> 0 <= i3 >>> 0 & (i12 + i10 | 0) >>> 0 > i3 >>> 0 ? i3 + i4 | 0 : i3;
   }
   __ZNSt3__211char_traitsIcE4moveEPcPKcm(i8, i13, i4) | 0;
   i13 = i10 + i4 | 0;
   if ((HEAP8[i7 >> 0] | 0) < 0) HEAP32[i1 + 4 >> 2] = i13; else HEAP8[i7 >> 0] = i13;
   HEAP8[i6 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i12 + i13 | 0, i6);
  }
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i1, i11, i10 + i4 - i11 | 0, i10, i2, 0, i4, i3);
 STACKTOP = i5;
 return i1 | 0;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryERKNS_5ImageE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = i1 + 92 | 0;
 i6 = HEAP32[i1 + 96 >> 2] | 0;
 i7 = i6;
 if ((HEAP32[i1 + 100 >> 2] | 0) != (i6 | 0)) {
  i6 = HEAP32[i7 + 4 >> 2] | 0;
  i8 = HEAP32[i2 + 4 >> 2] | 0;
  if ((i6 | 0) == (i8 | 0)) {
   if ((HEAP32[i7 + 8 >> 2] | 0) != (HEAP32[i2 + 8 >> 2] | 0)) {
    i9 = i6;
    i10 = 5;
   }
  } else {
   i9 = i8;
   i10 = 5;
  }
 } else {
  i9 = HEAP32[i2 + 4 >> 2] | 0;
  i10 = 5;
 }
 if ((i10 | 0) == 5) {
  i10 = HEAP32[i2 + 8 >> 2] | 0;
  if ((i9 | 0) < 8 | (i10 | 0) < 8) i11 = 0; else {
   i8 = i10;
   i6 = 0;
   i7 = i9;
   while (1) {
    i12 = i6 + 1 | 0;
    if (i7 >>> 0 < 16 | i8 >>> 0 < 16) {
     i11 = i12;
     break;
    } else {
     i8 = i8 >>> 1;
     i6 = i12;
     i7 = i7 >>> 1;
    }
   }
  }
  __ZN6vision18BinomialPyramid32f5allocEmmi(i5, i9, i10, i11);
 }
 __ZN6vision11ScopedTimerC2EPKc(i4, 27162);
 __ZN6vision18BinomialPyramid32f5buildERKNS_5ImageE(i5, i2);
 __ZN6vision11ScopedTimerD2Ev(i4);
 i4 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_25GaussianScaleSpacePyramidE(i1, i5) | 0;
 STACKTOP = i3;
 return i4 | 0;
}

function _quantize_ord_dither(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i5 = HEAP32[i1 + 460 >> 2] | 0;
 i6 = HEAP32[i1 + 120 >> 2] | 0;
 i7 = HEAP32[i1 + 112 >> 2] | 0;
 if ((i4 | 0) <= 0) return;
 i1 = i5 + 48 | 0;
 i8 = i5 + 24 | 0;
 i9 = (i7 | 0) == 0;
 if ((i6 | 0) <= 0) {
  i10 = 0;
  do {
   _jzero_far(HEAP32[i3 + (i10 << 2) >> 2] | 0, i7);
   HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1 & 15;
   i10 = i10 + 1 | 0;
  } while ((i10 | 0) != (i4 | 0));
  return;
 }
 i10 = 0;
 do {
  i11 = i3 + (i10 << 2) | 0;
  _jzero_far(HEAP32[i11 >> 2] | 0, i7);
  i12 = HEAP32[i1 >> 2] | 0;
  i13 = i2 + (i10 << 2) | 0;
  if (!i9) {
   i14 = 0;
   do {
    i15 = HEAP32[(HEAP32[i8 >> 2] | 0) + (i14 << 2) >> 2] | 0;
    i16 = HEAP32[i5 + 52 + (i14 << 2) >> 2] | 0;
    i17 = i7;
    i18 = HEAP32[i11 >> 2] | 0;
    i19 = 0;
    i20 = (HEAP32[i13 >> 2] | 0) + i14 | 0;
    while (1) {
     HEAP8[i18 >> 0] = (HEAPU8[i18 >> 0] | 0) + (HEAPU8[i15 + ((HEAP32[i16 + (i12 << 6) + (i19 << 2) >> 2] | 0) + (HEAPU8[i20 >> 0] | 0)) >> 0] | 0);
     i17 = i17 + -1 | 0;
     if (!i17) break; else {
      i18 = i18 + 1 | 0;
      i19 = i19 + 1 & 15;
      i20 = i20 + i6 | 0;
     }
    }
    i14 = i14 + 1 | 0;
   } while ((i14 | 0) != (i6 | 0));
  }
  HEAP32[i1 >> 2] = i12 + 1 & 15;
  i10 = i10 + 1 | 0;
 } while ((i10 | 0) != (i4 | 0));
 return;
}

function ___stpcpy(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i3 = i2;
 L1 : do if (!((i3 ^ i1) & 3)) {
  if (!(i3 & 3)) {
   i4 = i2;
   i5 = i1;
  } else {
   i6 = i2;
   i7 = i1;
   while (1) {
    i8 = HEAP8[i6 >> 0] | 0;
    HEAP8[i7 >> 0] = i8;
    if (!(i8 << 24 >> 24)) {
     i9 = i7;
     break L1;
    }
    i8 = i6 + 1 | 0;
    i10 = i7 + 1 | 0;
    if (!(i8 & 3)) {
     i4 = i8;
     i5 = i10;
     break;
    } else {
     i6 = i8;
     i7 = i10;
    }
   }
  }
  i7 = HEAP32[i4 >> 2] | 0;
  if (!((i7 & -2139062144 ^ -2139062144) & i7 + -16843009)) {
   i6 = i5;
   i10 = i4;
   i8 = i7;
   while (1) {
    i7 = i10 + 4 | 0;
    i11 = i6 + 4 | 0;
    HEAP32[i6 >> 2] = i8;
    i8 = HEAP32[i7 >> 2] | 0;
    if ((i8 & -2139062144 ^ -2139062144) & i8 + -16843009 | 0) {
     i12 = i7;
     i13 = i11;
     break;
    } else {
     i6 = i11;
     i10 = i7;
    }
   }
  } else {
   i12 = i4;
   i13 = i5;
  }
  i14 = i12;
  i15 = i13;
  i16 = 10;
 } else {
  i14 = i2;
  i15 = i1;
  i16 = 10;
 } while (0);
 if ((i16 | 0) == 10) {
  i16 = HEAP8[i14 >> 0] | 0;
  HEAP8[i15 >> 0] = i16;
  if (!(i16 << 24 >> 24)) i9 = i15; else {
   i16 = i15;
   i15 = i14;
   while (1) {
    i15 = i15 + 1 | 0;
    i14 = i16 + 1 | 0;
    i1 = HEAP8[i15 >> 0] | 0;
    HEAP8[i14 >> 0] = i1;
    if (!(i1 << 24 >> 24)) {
     i9 = i14;
     break;
    } else i16 = i14;
   }
  }
 }
 return i9 | 0;
}

function __ZN6vision40Homography4PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_S3_S3_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, i21 = 0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0;
 d9 = +HEAPF32[i2 >> 2];
 d10 = +HEAPF32[i1 >> 2];
 d11 = +HEAPF32[i3 + 4 >> 2];
 d12 = +HEAPF32[i1 + 4 >> 2];
 d13 = +HEAPF32[i2 + 4 >> 2];
 d14 = +HEAPF32[i3 >> 2];
 d15 = +HEAPF32[i6 >> 2];
 d16 = +HEAPF32[i5 >> 2];
 d17 = +HEAPF32[i7 + 4 >> 2];
 d18 = +HEAPF32[i5 + 4 >> 2];
 d19 = +HEAPF32[i6 + 4 >> 2];
 d20 = +HEAPF32[i7 >> 2];
 if ((d9 - d10) * (d11 - d12) - (d13 - d12) * (d14 - d10) > 0.0 ^ (d15 - d16) * (d17 - d18) - (d19 - d18) * (d20 - d16) > 0.0) {
  i21 = 0;
  return i21 | 0;
 }
 d22 = +HEAPF32[i4 + 4 >> 2];
 d23 = +HEAPF32[i4 >> 2];
 d24 = +HEAPF32[i8 + 4 >> 2];
 d25 = +HEAPF32[i8 >> 2];
 if ((d14 - d9) * (d22 - d13) - (d11 - d13) * (d23 - d9) > 0.0 ^ (d20 - d15) * (d24 - d19) - (d17 - d19) * (d25 - d15) > 0.0) {
  i21 = 0;
  return i21 | 0;
 }
 if ((d12 - d11) * (d23 - d14) - (d10 - d14) * (d22 - d11) > 0.0 ^ (d18 - d17) * (d25 - d20) - (d16 - d20) * (d24 - d17) > 0.0) {
  i21 = 0;
  return i21 | 0;
 }
 i21 = (d13 - d22) * (d10 - d23) - (d12 - d22) * (d9 - d23) > 0.0 ^ (d19 - d24) * (d16 - d25) - (d18 - d24) * (d15 - d25) > 0.0 ^ 1;
 return i21 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if ((i1 | 0) != (i2 | 0) ? (i6 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0, (i6 | 0) != (i1 | 0)) : 0) {
  i7 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i3) | 0;
  if ((i7 | 0) != (i6 | 0)) {
   i2 = i3 + 4 | 0;
   i8 = HEAP32[i2 >> 2] | 0;
   if (((i8 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) i9 = i1; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i5, i8 + -24 | 0);
    i8 = HEAP32[i2 >> 2] | 0;
    i3 = 0;
    while (1) {
     if ((i3 | 0) == -1) break;
     i10 = i3 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8 + (i10 * 24 | 0) | 0);
     i3 = i10;
    }
    HEAP32[i2 >> 2] = i8 + -24;
    i2 = HEAP8[i5 + 11 >> 0] | 0;
    i3 = i2 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i8 + -48 | 0, i3 ? HEAP32[i5 >> 2] | 0 : i5, i3 ? HEAP32[i5 + 4 >> 2] | 0 : i2 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i9 = i7;
   }
  } else i9 = i6;
 } else i9 = i1;
 STACKTOP = i4;
 return i9 | 0;
}
function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 i6 = i1 + 72 | 0;
 i7 = i1 + 80 | 0;
 i8 = i1 + 48 | 0;
 i9 = i1;
 i10 = i1 + 76 | 0;
 HEAP8[i7 >> 0] = HEAP8[47578] | 0;
 HEAP8[i7 + 1 >> 0] = HEAP8[47579] | 0;
 HEAP8[i7 + 2 >> 0] = HEAP8[47580] | 0;
 HEAP8[i7 + 3 >> 0] = HEAP8[47581] | 0;
 HEAP8[i7 + 4 >> 0] = HEAP8[47582] | 0;
 HEAP8[i7 + 5 >> 0] = HEAP8[47583] | 0;
 i11 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i5;
 i5 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i8, 20, i11, i7, i6) | 0;
 i7 = i8 + i5 | 0;
 i11 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i8, i7, i3) | 0;
 __ZNKSt3__28ios_base6getlocEv(i6, i3);
 i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i6, 58484) | 0;
 __ZNSt3__26localeD2Ev(i6);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 32 >> 2] & 15](i12, i8, i7, i9) | 0;
 i12 = i9 + i5 | 0;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i6 >> 2] = HEAP32[i10 >> 2];
 i10 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i9, (i11 | 0) == (i7 | 0) ? i12 : i9 + (i11 - i8) | 0, i12, i3, i4) | 0;
 STACKTOP = i1;
 return i10 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i9;
 if ((1073741806 - i2 | 0) >>> 0 < i3 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 i11 = i1 + 8 | 0;
 if ((HEAP8[i11 + 3 >> 0] | 0) < 0) i12 = HEAP32[i1 >> 2] | 0; else i12 = i1;
 if (i2 >>> 0 < 536870887) {
  i13 = i3 + i2 | 0;
  i3 = i2 << 1;
  i14 = i13 >>> 0 < i3 >>> 0 ? i3 : i13;
  i13 = i14 >>> 0 < 2 ? 2 : i14 + 4 & -4;
  if (i13 >>> 0 > 1073741823) _abort(); else i15 = i13;
 } else i15 = 1073741807;
 i13 = __Znwm(i15 << 2) | 0;
 if (i5 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i13, i12, i5) | 0;
 if (i7 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i13 + (i5 << 2) | 0, i8, i7) | 0;
 i8 = i4 - i6 | 0;
 i4 = i8 - i5 | 0;
 if (i4 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i13 + (i5 << 2) + (i7 << 2) | 0, i12 + (i5 << 2) + (i6 << 2) | 0, i4) | 0;
 if ((i2 | 0) != 1) __ZdlPv(i12);
 HEAP32[i1 >> 2] = i13;
 HEAP32[i11 >> 2] = i15 | -2147483648;
 i15 = i8 + i7 | 0;
 HEAP32[i1 + 4 >> 2] = i15;
 HEAP32[i10 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i13 + (i15 << 2) | 0, i10);
 STACKTOP = i9;
 return;
}

function _init_error_limit(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = HEAP32[i1 + 460 >> 2] | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, 2044) | 0;
 i1 = i3 + 1020 | 0;
 HEAP32[i2 + 40 >> 2] = i1;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i3 + 1024 >> 2] = 1;
 HEAP32[i3 + 1016 >> 2] = -1;
 HEAP32[i3 + 1028 >> 2] = 2;
 HEAP32[i3 + 1012 >> 2] = -2;
 HEAP32[i3 + 1032 >> 2] = 3;
 HEAP32[i3 + 1008 >> 2] = -3;
 HEAP32[i3 + 1036 >> 2] = 4;
 HEAP32[i3 + 1004 >> 2] = -4;
 HEAP32[i3 + 1040 >> 2] = 5;
 HEAP32[i3 + 1e3 >> 2] = -5;
 HEAP32[i3 + 1044 >> 2] = 6;
 HEAP32[i3 + 996 >> 2] = -6;
 HEAP32[i3 + 1048 >> 2] = 7;
 HEAP32[i3 + 992 >> 2] = -7;
 HEAP32[i3 + 1052 >> 2] = 8;
 HEAP32[i3 + 988 >> 2] = -8;
 HEAP32[i3 + 1056 >> 2] = 9;
 HEAP32[i3 + 984 >> 2] = -9;
 HEAP32[i3 + 1060 >> 2] = 10;
 HEAP32[i3 + 980 >> 2] = -10;
 HEAP32[i3 + 1064 >> 2] = 11;
 HEAP32[i3 + 976 >> 2] = -11;
 HEAP32[i3 + 1068 >> 2] = 12;
 HEAP32[i3 + 972 >> 2] = -12;
 HEAP32[i3 + 1072 >> 2] = 13;
 HEAP32[i3 + 968 >> 2] = -13;
 HEAP32[i3 + 1076 >> 2] = 14;
 HEAP32[i3 + 964 >> 2] = -14;
 HEAP32[i3 + 1080 >> 2] = 15;
 HEAP32[i3 + 960 >> 2] = -15;
 i3 = 16;
 i2 = 16;
 do {
  HEAP32[i1 + (i3 << 2) >> 2] = i2;
  HEAP32[i1 + (0 - i3 << 2) >> 2] = 0 - i2;
  i3 = i3 + 1 | 0;
  i2 = (i3 & 1 ^ 1) + i2 | 0;
 } while ((i3 | 0) != 48);
 i3 = 0 - i2 | 0;
 i4 = 48;
 do {
  HEAP32[i1 + (i4 << 2) >> 2] = i2;
  HEAP32[i1 + (0 - i4 << 2) >> 2] = i3;
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) != 256);
 return;
}

function _ar2CreateHandleSub(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5 + 16 | 0;
 i7 = i5 + 8 | 0;
 i8 = _malloc(13732) | 0;
 if (!i8) {
  _arLog(0, 3, 20510, i5);
  _exit(1);
 }
 HEAP32[i8 + 20 >> 2] = i1;
 HEAP32[i8 + 4 >> 2] = i2;
 HEAP32[i8 + 8 >> 2] = i3;
 HEAP32[i8 + 24 >> 2] = 25;
 HEAP32[i8 + 28 >> 2] = 11;
 HEAP32[i8 + 32 >> 2] = 11;
 HEAP32[i8 + 36 >> 2] = 10;
 HEAPF32[i8 + 40 >> 2] = .6000000238418579;
 HEAPF32[i8 + 44 >> 2] = 2.0;
 if ((i4 | 0) == -1) i9 = _threadGetCPU() | 0; else i9 = i4;
 i4 = (i9 | 0) > 1 ? i9 : 1;
 i9 = (i4 | 0) < 8 ? i4 : 8;
 i1 = i8 + 13280 | 0;
 HEAP32[i1 >> 2] = i9;
 HEAP32[i7 >> 2] = i9;
 _arLog(0, 1, 19391, i7);
 if ((i4 | 0) <= 0) {
  STACKTOP = i5;
  return i8 | 0;
 }
 i4 = Math_imul(i3, i2) | 0;
 i2 = i8 + 13284 | 0;
 i3 = i8 + 13700 | 0;
 i7 = 0;
 while (1) {
  i9 = _malloc(i4) | 0;
  HEAP32[i2 + (i7 * 52 | 0) + 16 >> 2] = i9;
  if (!i9) {
   i10 = 8;
   break;
  }
  HEAP32[i2 + (i7 * 52 | 0) + 20 >> 2] = 0;
  i9 = _threadInit(i7, i2 + (i7 * 52 | 0) | 0, 62) | 0;
  HEAP32[i3 + (i7 << 2) >> 2] = i9;
  i7 = i7 + 1 | 0;
  if ((i7 | 0) >= (HEAP32[i1 >> 2] | 0)) {
   i10 = 10;
   break;
  }
 }
 if ((i10 | 0) == 8) {
  _arLog(0, 3, 20510, i6);
  _exit(1);
 } else if ((i10 | 0) == 10) {
  STACKTOP = i5;
  return i8 | 0;
 }
 return 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i9;
 if ((-18 - i2 | 0) >>> 0 < i3 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) i11 = HEAP32[i1 >> 2] | 0; else i11 = i1;
 if (i2 >>> 0 < 2147483623) {
  i12 = i3 + i2 | 0;
  i3 = i2 << 1;
  i13 = i12 >>> 0 < i3 >>> 0 ? i3 : i12;
  i14 = i13 >>> 0 < 11 ? 11 : i13 + 16 & -16;
 } else i14 = -17;
 i13 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i14) | 0;
 if (i5 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i13, i11, i5) | 0;
 if (i7 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i13 + i5 | 0, i8, i7) | 0;
 i8 = i4 - i6 | 0;
 i4 = i8 - i5 | 0;
 if (i4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i13 + i5 + i7 | 0, i11 + i5 + i6 | 0, i4) | 0;
 if ((i2 | 0) != 10) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i11);
 HEAP32[i1 >> 2] = i13;
 HEAP32[i1 + 8 >> 2] = i14 | -2147483648;
 i14 = i8 + i7 | 0;
 HEAP32[i1 + 4 >> 2] = i14;
 HEAP8[i10 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i13 + i14 | 0, i10);
 STACKTOP = i9;
 return;
}

function _icpCreateHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = _malloc(136) | 0;
 if (!i2) {
  i3 = 0;
  return i3 | 0;
 };
 HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i2 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i2 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i2 + 20 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i2 + 24 >> 2] = HEAP32[i1 + 24 >> 2];
 HEAP32[i2 + 28 >> 2] = HEAP32[i1 + 28 >> 2];
 i4 = i2 + 32 | 0;
 i5 = i1 + 32 | 0;
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i4 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i4 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i4 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
 HEAP32[i4 + 16 >> 2] = HEAP32[i5 + 16 >> 2];
 HEAP32[i4 + 20 >> 2] = HEAP32[i5 + 20 >> 2];
 HEAP32[i4 + 24 >> 2] = HEAP32[i5 + 24 >> 2];
 HEAP32[i4 + 28 >> 2] = HEAP32[i5 + 28 >> 2];
 i5 = i2 + 64 | 0;
 i4 = i1 + 64 | 0;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i5 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 HEAP32[i5 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 HEAP32[i5 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
 HEAP32[i5 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
 HEAP32[i5 + 20 >> 2] = HEAP32[i4 + 20 >> 2];
 HEAP32[i5 + 24 >> 2] = HEAP32[i4 + 24 >> 2];
 HEAP32[i5 + 28 >> 2] = HEAP32[i4 + 28 >> 2];
 HEAP32[i2 + 96 >> 2] = 10;
 HEAPF64[i2 + 104 >> 3] = .10000000149011612;
 HEAPF64[i2 + 112 >> 3] = .9900000095367432;
 HEAPF64[i2 + 120 >> 3] = 4.0;
 HEAPF64[i2 + 128 >> 3] = .5;
 i3 = i2;
 return i3 | 0;
}

function _arMatrixMul(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, d18 = 0.0;
 i4 = HEAP32[i2 + 8 >> 2] | 0;
 if ((i4 | 0) != (HEAP32[i3 + 4 >> 2] | 0)) {
  i5 = -1;
  return i5 | 0;
 }
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i6 | 0) != (HEAP32[i2 + 4 >> 2] | 0)) {
  i5 = -1;
  return i5 | 0;
 }
 i7 = HEAP32[i1 + 8 >> 2] | 0;
 if ((i7 | 0) != (HEAP32[i3 + 8 >> 2] | 0)) {
  i5 = -1;
  return i5 | 0;
 }
 if ((i6 | 0) <= 0) {
  i5 = 0;
  return i5 | 0;
 }
 i8 = (i4 | 0) > 0;
 if ((i7 | 0) <= 0) {
  i5 = 0;
  return i5 | 0;
 }
 i9 = i7 << 3;
 i10 = 0;
 i11 = HEAP32[i1 >> 2] | 0;
 while (1) {
  i1 = (HEAP32[i2 >> 2] | 0) + ((Math_imul(i10, i4) | 0) << 3) | 0;
  i12 = HEAP32[i3 >> 2] | 0;
  if (i8) {
   i13 = 0;
   i14 = i11;
   while (1) {
    HEAPF64[i14 >> 3] = 0.0;
    i15 = i12 + (i13 << 3) | 0;
    i16 = i1;
    i17 = 0;
    d18 = 0.0;
    while (1) {
     d18 = d18 + +HEAPF64[i16 >> 3] * +HEAPF64[i15 >> 3];
     HEAPF64[i14 >> 3] = d18;
     i17 = i17 + 1 | 0;
     if ((i17 | 0) == (i4 | 0)) break; else {
      i15 = i15 + (i7 << 3) | 0;
      i16 = i16 + 8 | 0;
     }
    }
    i13 = i13 + 1 | 0;
    if ((i13 | 0) == (i7 | 0)) break; else i14 = i14 + 8 | 0;
   }
  } else _memset(i11 | 0, 0, i9 | 0) | 0;
  i10 = i10 + 1 | 0;
  if ((i10 | 0) == (i6 | 0)) {
   i5 = 0;
   break;
  } else i11 = i11 + (i7 << 3) | 0;
 }
 return i5 | 0;
}

function __ZNK6vision5Image3getIfEEPKT_m(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 if ((HEAP32[i1 + 8 >> 2] | 0) >>> 0 > i2 >>> 0) {
  i5 = (HEAP32[i1 + 24 >> 2] | 0) + (Math_imul(HEAP32[i1 + 12 >> 2] | 0, i2) | 0) | 0;
  STACKTOP = i3;
  return i5 | 0;
 } else {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21640, 36) | 0, 21677, 105) | 0, 33554, 6) | 0, 124) | 0, 33561, 2) | 0, 21783, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 return 0;
}

function __ZN6vision5Image3getIfEEPT_m(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 if ((HEAP32[i1 + 8 >> 2] | 0) >>> 0 > i2 >>> 0) {
  i5 = (HEAP32[i1 + 24 >> 2] | 0) + (Math_imul(HEAP32[i1 + 12 >> 2] | 0, i2) | 0) | 0;
  STACKTOP = i3;
  return i5 | 0;
 } else {
  i5 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 21640, 36) | 0, 21677, 105) | 0, 33554, 6) | 0, 119) | 0, 33561, 2) | 0, 21783, 17) | 0;
  __ZNKSt3__28ios_base6getlocEv(i4, i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58484) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, 10) | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i2) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  _abort();
 }
 return 0;
}

function _ycc_rgb_convert(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i6 = HEAP32[i1 + 456 >> 2] | 0;
 i7 = HEAP32[i1 + 112 >> 2] | 0;
 i8 = HEAP32[i1 + 324 >> 2] | 0;
 i1 = HEAP32[i6 + 8 >> 2] | 0;
 i9 = HEAP32[i6 + 12 >> 2] | 0;
 i10 = HEAP32[i6 + 16 >> 2] | 0;
 i11 = HEAP32[i6 + 20 >> 2] | 0;
 if ((i5 | 0) <= 0) return;
 i6 = i2 + 4 | 0;
 i12 = i2 + 8 | 0;
 if (!i7) return;
 i13 = i4;
 i4 = i3;
 i3 = i5;
 while (1) {
  i5 = i3;
  i3 = i3 + -1 | 0;
  i14 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i4 << 2) >> 2] | 0;
  i15 = HEAP32[(HEAP32[i6 >> 2] | 0) + (i4 << 2) >> 2] | 0;
  i16 = HEAP32[(HEAP32[i12 >> 2] | 0) + (i4 << 2) >> 2] | 0;
  i4 = i4 + 1 | 0;
  i17 = HEAP32[i13 >> 2] | 0;
  i18 = 0;
  while (1) {
   i19 = HEAPU8[i14 + i18 >> 0] | 0;
   i20 = HEAPU8[i15 + i18 >> 0] | 0;
   i21 = HEAPU8[i16 + i18 >> 0] | 0;
   HEAP8[i17 >> 0] = HEAP8[i8 + ((HEAP32[i1 + (i21 << 2) >> 2] | 0) + i19) >> 0] | 0;
   HEAP8[i17 + 1 >> 0] = HEAP8[i8 + (((HEAP32[i10 + (i21 << 2) >> 2] | 0) + (HEAP32[i11 + (i20 << 2) >> 2] | 0) >> 16) + i19) >> 0] | 0;
   HEAP8[i17 + 2 >> 0] = HEAP8[i8 + ((HEAP32[i9 + (i20 << 2) >> 2] | 0) + i19) >> 0] | 0;
   i18 = i18 + 1 | 0;
   if ((i18 | 0) == (i7 | 0)) break; else i17 = i17 + 3 | 0;
  }
  if ((i5 | 0) <= 1) break; else i13 = i13 + 4 | 0;
 }
 return;
}

function __ZN6vision5Timer4stopEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 if (!(+HEAPF64[i1 >> 3] >= 0.0)) {
  i4 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(57780, 33406, 38) | 0, 33445, 108) | 0, 33554, 6) | 0, 67) | 0, 33561, 2) | 0, 33564, 26) | 0;
  __ZNKSt3__28ios_base6getlocEv(i3, i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i3, 58484) | 0;
  i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 63](i5, 10) | 0;
  __ZNSt3__26localeD2Ev(i3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i6) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 } else {
  _gettimeofday(i3 | 0, 0) | 0;
  HEAPF64[i1 + 8 >> 3] = +(HEAP32[i3 + 4 >> 2] | 0) * 1.0e-06 + +(HEAP32[i3 >> 2] | 0);
  STACKTOP = i2;
  return;
 }
}

function _h2v1_fancy_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i4 = i1 + 312 | 0;
 if ((HEAP32[i4 >> 2] | 0) <= 0) return;
 i1 = i2 + 40 | 0;
 i2 = 0;
 do {
  i6 = HEAP32[i3 + (i2 << 2) >> 2] | 0;
  i7 = HEAP32[i5 + (i2 << 2) >> 2] | 0;
  i8 = i6 + 1 | 0;
  i9 = HEAP8[i6 >> 0] | 0;
  HEAP8[i7 >> 0] = i9;
  HEAP8[i7 + 1 >> 0] = (((i9 & 255) * 3 | 0) + 2 + (HEAPU8[i8 >> 0] | 0) | 0) >>> 2;
  i9 = HEAP32[i1 >> 2] | 0;
  i10 = i9 + -2 | 0;
  i11 = i7 + 2 | 0;
  if (!i10) {
   i12 = i11;
   i13 = i8;
   i14 = i7;
  } else {
   i15 = i9 << 1;
   i16 = i6 + -1 | 0;
   i6 = i7 + -2 | 0;
   i17 = i10;
   i10 = i11;
   i11 = i8;
   i8 = i7;
   while (1) {
    i18 = (HEAPU8[i11 >> 0] | 0) * 3 | 0;
    HEAP8[i10 >> 0] = ((HEAPU8[i11 + -1 >> 0] | 0) + 1 + i18 | 0) >>> 2;
    i11 = i11 + 1 | 0;
    HEAP8[i8 + 3 >> 0] = (i18 + 2 + (HEAPU8[i11 >> 0] | 0) | 0) >>> 2;
    i17 = i17 + -1 | 0;
    if (!i17) break; else {
     i18 = i10;
     i10 = i10 + 2 | 0;
     i8 = i18;
    }
   }
   i12 = i6 + i15 | 0;
   i13 = i16 + i9 | 0;
   i14 = i7 + -4 + i15 | 0;
  }
  i8 = HEAP8[i13 >> 0] | 0;
  HEAP8[i12 >> 0] = ((HEAPU8[i13 + -1 >> 0] | 0) + 1 + ((i8 & 255) * 3 | 0) | 0) >>> 2;
  HEAP8[i14 + 3 >> 0] = i8;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) < (HEAP32[i4 >> 2] | 0));
 return;
}

function _get_vertex(i1, i2, i3, i4, d5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, d10 = 0.0, i11 = 0, i12 = 0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, i18 = 0, i19 = 0, d20 = 0.0, i21 = 0;
 i8 = HEAP32[i2 + (i4 << 2) >> 2] | 0;
 i9 = HEAP32[i2 + (i3 << 2) >> 2] | 0;
 d10 = +(i8 - i9 | 0);
 i11 = HEAP32[i1 + (i3 << 2) >> 2] | 0;
 i12 = HEAP32[i1 + (i4 << 2) >> 2] | 0;
 d13 = +(i11 - i12 | 0);
 d14 = +((Math_imul(i12, i9) | 0) - (Math_imul(i11, i8) | 0) | 0);
 i8 = i3 + 1 | 0;
 if ((i8 | 0) < (i4 | 0)) {
  i11 = i8;
  d15 = 0.0;
  i9 = i8;
  while (1) {
   d16 = d10 * +(HEAP32[i1 + (i11 << 2) >> 2] | 0) + d13 * +(HEAP32[i2 + (i11 << 2) >> 2] | 0) + d14;
   d17 = d16 * d16;
   i12 = d17 > d15;
   d16 = i12 ? d17 : d15;
   i18 = i12 ? i11 : i9;
   i11 = i11 + 1 | 0;
   if ((i11 | 0) == (i4 | 0)) {
    i19 = i18;
    d20 = d16;
    break;
   } else {
    d15 = d16;
    i9 = i18;
   }
  }
 } else {
  i19 = i8;
  d20 = 0.0;
 }
 if (d20 / (d10 * d10 + d13 * d13) > d5) {
  if ((_get_vertex(i1, i2, i3, i19, d5, i6, i7) | 0) < 0) {
   i21 = -1;
   return i21 | 0;
  }
  i3 = HEAP32[i7 >> 2] | 0;
  if ((i3 | 0) > 5) {
   i21 = -1;
   return i21 | 0;
  }
  HEAP32[i6 + (i3 << 2) >> 2] = i19;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
  if ((_get_vertex(i1, i2, i19, i4, d5, i6, i7) | 0) < 0) {
   i21 = -1;
   return i21 | 0;
  }
 }
 i21 = 0;
 return i21 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = i1 + 4 | 0;
 i6 = (((HEAP32[i5 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 i7 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i7 >>> 0 < i6 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i9 = ((HEAP32[i1 + 8 >> 2] | 0) - i8 | 0) / 24 | 0;
  i10 = i9 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_(i4, i9 >>> 0 < i7 >>> 1 >>> 0 ? (i10 >>> 0 < i6 >>> 0 ? i6 : i10) : i7, ((HEAP32[i5 >> 2] | 0) - i8 | 0) / 24 | 0, i1 + 12 | 0);
  i8 = i4 + 8 | 0;
  i5 = HEAP32[i8 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i5, i2);
  HEAP32[i8 >> 2] = i5 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i4);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev(i4);
  STACKTOP = i3;
  return;
 }
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = i1 + 4 | 0;
 i6 = (((HEAP32[i5 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 i7 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) | 0;
 if (i7 >>> 0 < i6 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i8 = HEAP32[i1 >> 2] | 0;
  i9 = ((HEAP32[i1 + 8 >> 2] | 0) - i8 | 0) / 24 | 0;
  i10 = i9 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_(i4, i9 >>> 0 < i7 >>> 1 >>> 0 ? (i10 >>> 0 < i6 >>> 0 ? i6 : i10) : i7, ((HEAP32[i5 >> 2] | 0) - i8 | 0) / 24 | 0, i1 + 12 | 0);
  i8 = i4 + 8 | 0;
  i5 = HEAP32[i8 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i5, i2);
  HEAP32[i8 >> 2] = i5 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i4);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev(i4);
  STACKTOP = i3;
  return;
 }
}

function _jpeg_resync_to_restart(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i3 = i1 + 416 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i5 + 20 >> 2] = 121;
 HEAP32[i5 + 24 >> 2] = i4;
 HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i2;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, -1);
 i5 = i2 + 1 & 7 | 208;
 i6 = i2 + 2 & 7 | 208;
 i7 = i2 + 7 & 7 | 208;
 i8 = i2 + 6 & 7 | 208;
 i2 = i4;
 L1 : while (1) {
  i4 = (i2 | 0) < 192;
  i9 = (i2 & -8 | 0) != 208 | (i2 | 0) == (i5 | 0) | (i2 | 0) == (i6 | 0);
  i10 = (i2 | 0) == (i7 | 0) | (i2 | 0) == (i8 | 0) ? 2 : 1;
  L3 : while (1) {
   i11 = i4 ? 2 : i9 ? 3 : i10;
   i12 = HEAP32[i1 >> 2] | 0;
   HEAP32[i12 + 20 >> 2] = 97;
   HEAP32[i12 + 24 >> 2] = i2;
   HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i11;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 4);
   switch (i11 & 3) {
   case 1:
    {
     i13 = 4;
     break L1;
     break;
    }
   case 3:
    {
     i14 = 1;
     i13 = 7;
     break L1;
     break;
    }
   case 2:
    {
     break L3;
     break;
    }
   default:
    {}
   }
  }
  if (!(_next_marker(i1) | 0)) {
   i14 = 0;
   i13 = 7;
   break;
  }
  i2 = HEAP32[i3 >> 2] | 0;
 }
 if ((i13 | 0) == 4) {
  HEAP32[i3 >> 2] = 0;
  i14 = 1;
  return i14 | 0;
 } else if ((i13 | 0) == 7) return i14 | 0;
 return 0;
}

function _jinit_marker_reader(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 0, 172) | 0;
 i3 = i1 + 440 | 0;
 HEAP32[i3 >> 2] = i2;
 HEAP32[i2 >> 2] = 116;
 HEAP32[i2 + 4 >> 2] = 67;
 HEAP32[i2 + 8 >> 2] = 68;
 HEAP32[i2 + 28 >> 2] = 69;
 HEAP32[i2 + 96 >> 2] = 0;
 HEAP32[i2 + 100 >> 2] = 0;
 HEAP32[i2 + 36 >> 2] = 69;
 HEAP32[i2 + 104 >> 2] = 0;
 HEAP32[i2 + 40 >> 2] = 69;
 HEAP32[i2 + 108 >> 2] = 0;
 HEAP32[i2 + 44 >> 2] = 69;
 HEAP32[i2 + 112 >> 2] = 0;
 HEAP32[i2 + 48 >> 2] = 69;
 HEAP32[i2 + 116 >> 2] = 0;
 HEAP32[i2 + 52 >> 2] = 69;
 HEAP32[i2 + 120 >> 2] = 0;
 HEAP32[i2 + 56 >> 2] = 69;
 HEAP32[i2 + 124 >> 2] = 0;
 HEAP32[i2 + 60 >> 2] = 69;
 HEAP32[i2 + 128 >> 2] = 0;
 HEAP32[i2 + 64 >> 2] = 69;
 HEAP32[i2 + 132 >> 2] = 0;
 HEAP32[i2 + 68 >> 2] = 69;
 HEAP32[i2 + 136 >> 2] = 0;
 HEAP32[i2 + 72 >> 2] = 69;
 HEAP32[i2 + 140 >> 2] = 0;
 HEAP32[i2 + 76 >> 2] = 69;
 HEAP32[i2 + 144 >> 2] = 0;
 HEAP32[i2 + 80 >> 2] = 69;
 HEAP32[i2 + 148 >> 2] = 0;
 HEAP32[i2 + 84 >> 2] = 69;
 HEAP32[i2 + 152 >> 2] = 0;
 HEAP32[i2 + 156 >> 2] = 0;
 HEAP32[i2 + 92 >> 2] = 69;
 HEAP32[i2 + 160 >> 2] = 0;
 HEAP32[i2 + 32 >> 2] = 70;
 HEAP32[i2 + 88 >> 2] = 70;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i1 + 216 >> 2] = 0;
 HEAP32[i1 + 144 >> 2] = 0;
 HEAP32[i1 + 416 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 0;
 HEAP32[i2 + 164 >> 2] = 0;
 return;
}

function _byteswap(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 i3 = i2;
 HEAP8[i3 >> 0] = HEAP8[i1 + 3 >> 0] | 0;
 HEAP8[i3 + 1 >> 0] = HEAP8[i1 + 2 >> 0] | 0;
 HEAP8[i3 + 2 >> 0] = HEAP8[i1 + 1 >> 0] | 0;
 HEAP8[i3 + 3 >> 0] = HEAP8[i1 >> 0] | 0;
 i4 = i1 + 4 | 0;
 i5 = i3 + 4 | 0;
 HEAP8[i5 >> 0] = HEAP8[i4 + 3 >> 0] | 0;
 HEAP8[i5 + 1 >> 0] = HEAP8[i4 + 2 >> 0] | 0;
 HEAP8[i5 + 2 >> 0] = HEAP8[i4 + 1 >> 0] | 0;
 HEAP8[i5 + 3 >> 0] = HEAP8[i4 >> 0] | 0;
 _byteSwapDouble(i1 + 8 | 0, i3 + 8 | 0);
 _byteSwapDouble(i1 + 16 | 0, i3 + 16 | 0);
 _byteSwapDouble(i1 + 24 | 0, i3 + 24 | 0);
 _byteSwapDouble(i1 + 32 | 0, i3 + 32 | 0);
 _byteSwapDouble(i1 + 40 | 0, i3 + 40 | 0);
 _byteSwapDouble(i1 + 48 | 0, i3 + 48 | 0);
 _byteSwapDouble(i1 + 56 | 0, i3 + 56 | 0);
 _byteSwapDouble(i1 + 64 | 0, i3 + 64 | 0);
 _byteSwapDouble(i1 + 72 | 0, i3 + 72 | 0);
 _byteSwapDouble(i1 + 80 | 0, i3 + 80 | 0);
 _byteSwapDouble(i1 + 88 | 0, i3 + 88 | 0);
 _byteSwapDouble(i1 + 96 | 0, i3 + 96 | 0);
 i4 = i1 + 176 | 0;
 i5 = 0;
 do {
  _byteSwapDouble(i1 + 104 + (i5 << 3) | 0, i3 + 104 + (i5 << 3) | 0);
  i5 = i5 + 1 | 0;
  i6 = HEAP32[i4 >> 2] | 0;
 } while ((i5 | 0) < (HEAP32[1712 + (i6 + -1 << 3) >> 2] | 0));
 HEAP32[i3 + 176 >> 2] = i6;
 _memcpy(i1 | 0, i3 | 0, 184) | 0;
 STACKTOP = i2;
 return;
}

function _kpmChangePageNoOfRefDataSet(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!i1) {
  _arLog(0, 3, 20285, i4);
  i5 = -1;
  STACKTOP = i4;
  return i5 | 0;
 }
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i6 | 0) > 0) {
  i7 = HEAP32[i1 >> 2] | 0;
  if ((i2 | 0) == -1) {
   i8 = 0;
   do {
    i9 = i7 + (i8 * 132 | 0) + 124 | 0;
    if ((HEAP32[i9 >> 2] | 0) > -2) HEAP32[i9 >> 2] = i3;
    i8 = i8 + 1 | 0;
   } while ((i8 | 0) < (i6 | 0));
  } else {
   i8 = 0;
   do {
    i9 = i7 + (i8 * 132 | 0) + 124 | 0;
    if ((HEAP32[i9 >> 2] | 0) == (i2 | 0)) HEAP32[i9 >> 2] = i3;
    i8 = i8 + 1 | 0;
   } while ((i8 | 0) < (i6 | 0));
  }
 }
 i6 = HEAP32[i1 + 12 >> 2] | 0;
 if ((i6 | 0) <= 0) {
  i5 = 0;
  STACKTOP = i4;
  return i5 | 0;
 }
 i8 = HEAP32[i1 + 8 >> 2] | 0;
 if ((i2 | 0) == -1) {
  i1 = 0;
  do {
   i7 = i8 + (i1 * 12 | 0) + 8 | 0;
   if ((HEAP32[i7 >> 2] | 0) > -2) HEAP32[i7 >> 2] = i3;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) < (i6 | 0));
  i5 = 0;
  STACKTOP = i4;
  return i5 | 0;
 } else {
  i1 = 0;
  do {
   i7 = i8 + (i1 * 12 | 0) + 8 | 0;
   if ((HEAP32[i7 >> 2] | 0) == (i2 | 0)) HEAP32[i7 >> 2] = i3;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) < (i6 | 0));
  i5 = 0;
  STACKTOP = i4;
  return i5 | 0;
 }
 return 0;
}

function __ZN6vision14FREAKExtractorC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = i1;
 i3 = 1760;
 i4 = i2 + 48 | 0;
 do {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  i2 = i2 + 4 | 0;
  i3 = i3 + 4 | 0;
 } while ((i2 | 0) < (i4 | 0));
 i2 = i1 + 48 | 0;
 i3 = 1808;
 i4 = i2 + 48 | 0;
 do {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  i2 = i2 + 4 | 0;
  i3 = i3 + 4 | 0;
 } while ((i2 | 0) < (i4 | 0));
 i2 = i1 + 96 | 0;
 i3 = 1856;
 i4 = i2 + 48 | 0;
 do {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  i2 = i2 + 4 | 0;
  i3 = i3 + 4 | 0;
 } while ((i2 | 0) < (i4 | 0));
 i2 = i1 + 144 | 0;
 i3 = 1904;
 i4 = i2 + 48 | 0;
 do {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  i2 = i2 + 4 | 0;
  i3 = i3 + 4 | 0;
 } while ((i2 | 0) < (i4 | 0));
 i2 = i1 + 192 | 0;
 i3 = 1952;
 i4 = i2 + 48 | 0;
 do {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  i2 = i2 + 4 | 0;
  i3 = i3 + 4 | 0;
 } while ((i2 | 0) < (i4 | 0));
 i2 = i1 + 240 | 0;
 i3 = 2e3;
 i4 = i2 + 48 | 0;
 do {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  i2 = i2 + 4 | 0;
  i3 = i3 + 4 | 0;
 } while ((i2 | 0) < (i4 | 0));
 HEAPF32[i1 + 288 >> 2] = .10000000149011612;
 HEAPF32[i1 + 292 >> 2] = .17499999701976776;
 HEAPF32[i1 + 296 >> 2] = .25;
 HEAPF32[i1 + 300 >> 2] = .32499998807907104;
 HEAPF32[i1 + 304 >> 2] = .4000000059604645;
 HEAPF32[i1 + 308 >> 2] = .4749999940395355;
 HEAPF32[i1 + 312 >> 2] = .550000011920929;
 HEAPF32[i1 + 316 >> 2] = 7.0;
 return;
}

function _strspn(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = 0;
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i4 + 24 >> 2] = 0;
 HEAP32[i4 + 28 >> 2] = 0;
 i5 = HEAP8[i2 >> 0] | 0;
 do if (!(i5 << 24 >> 24)) i6 = 0; else {
  if (!(HEAP8[i2 + 1 >> 0] | 0)) {
   i7 = i1;
   while (1) if ((HEAP8[i7 >> 0] | 0) == i5 << 24 >> 24) i7 = i7 + 1 | 0; else break;
   i6 = i7 - i1 | 0;
   break;
  }
  i8 = i2;
  i9 = i5;
  do {
   i10 = i9 & 255;
   i11 = i4 + (i10 >>> 5 << 2) | 0;
   HEAP32[i11 >> 2] = HEAP32[i11 >> 2] | 1 << (i10 & 31);
   i8 = i8 + 1 | 0;
   i9 = HEAP8[i8 >> 0] | 0;
  } while (i9 << 24 >> 24 != 0);
  i9 = HEAP8[i1 >> 0] | 0;
  L12 : do if (!(i9 << 24 >> 24)) i12 = i1; else {
   i8 = i1;
   i7 = i9;
   while (1) {
    i10 = i7 & 255;
    if (!(HEAP32[i4 + (i10 >>> 5 << 2) >> 2] & 1 << (i10 & 31))) {
     i12 = i8;
     break L12;
    }
    i10 = i8 + 1 | 0;
    i7 = HEAP8[i10 >> 0] | 0;
    if (!(i7 << 24 >> 24)) {
     i12 = i10;
     break;
    } else i8 = i10;
   }
  } while (0);
  i6 = i12 - i1 | 0;
 } while (0);
 STACKTOP = i3;
 return i6 | 0;
}

function __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 if ((i1 | 0) == (i2 | 0)) {
  HEAP32[i3 >> 2] = 4;
  i7 = 0;
 } else {
  i8 = ___errno_location() | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  i8 = ___errno_location() | 0;
  HEAP32[i8 >> 2] = 0;
  i8 = _strtoll_l(i1, i6, i4, __ZNSt3__26__clocEv() | 0) | 0;
  i4 = getTempRet0() | 0;
  i1 = ___errno_location() | 0;
  i10 = HEAP32[i1 >> 2] | 0;
  if (!i10) {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = i9;
  }
  L7 : do if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) {
   do if ((i10 | 0) == 34) {
    HEAP32[i3 >> 2] = 4;
    if ((i4 | 0) > 0 | (i4 | 0) == 0 & i8 >>> 0 > 0) {
     i11 = 2147483647;
     break L7;
    }
   } else {
    if ((i4 | 0) < -1 | (i4 | 0) == -1 & i8 >>> 0 < 2147483648) {
     HEAP32[i3 >> 2] = 4;
     break;
    }
    if ((i4 | 0) > 0 | (i4 | 0) == 0 & i8 >>> 0 > 2147483647) {
     HEAP32[i3 >> 2] = 4;
     i11 = 2147483647;
     break L7;
    } else {
     i11 = i8;
     break L7;
    }
   } while (0);
   i11 = -2147483648;
  } else {
   HEAP32[i3 >> 2] = 4;
   i11 = 0;
  } while (0);
  i7 = i11;
 }
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 | 0;
 i6 = (i5 | 0) / 36 | 0;
 i7 = i6 + 1 | 0;
 if (i7 >>> 0 > 119304647) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 i9 = ((HEAP32[i8 >> 2] | 0) - i4 | 0) / 36 | 0;
 i10 = i9 << 1;
 i11 = i9 >>> 0 < 59652323 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : 119304647;
 do if (i11) if (i11 >>> 0 > 119304647) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i12 = __Znwm(i11 * 36 | 0) | 0;
  break;
 } else i12 = 0; while (0);
 i10 = i12 + (i6 * 36 | 0) | 0;
 i6 = i12 + (i11 * 36 | 0) | 0;
 i11 = i10;
 i12 = i2;
 i2 = i11 + 36 | 0;
 do {
  HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
  i11 = i11 + 4 | 0;
  i12 = i12 + 4 | 0;
 } while ((i11 | 0) < (i2 | 0));
 i12 = i10 + (((i5 | 0) / -36 | 0) * 36 | 0) | 0;
 if ((i5 | 0) > 0) _memcpy(i12 | 0, i4 | 0, i5 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i3 >> 2] = i10 + 36;
 HEAP32[i8 >> 2] = i6;
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i10 = i9;
 if ((-18 - i2 | 0) >>> 0 < i3 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) i11 = HEAP32[i1 >> 2] | 0; else i11 = i1;
 if (i2 >>> 0 < 2147483623) {
  i12 = i3 + i2 | 0;
  i3 = i2 << 1;
  i13 = i12 >>> 0 < i3 >>> 0 ? i3 : i12;
  i14 = i13 >>> 0 < 11 ? 11 : i13 + 16 & -16;
 } else i14 = -17;
 i13 = __Znwm(i14) | 0;
 if (i5 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i13, i11, i5) | 0;
 if (i7 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i13 + i5 | 0, i8, i7) | 0;
 i8 = i4 - i6 | 0;
 i4 = i8 - i5 | 0;
 if (i4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i13 + i5 + i7 | 0, i11 + i5 + i6 | 0, i4) | 0;
 if ((i2 | 0) != 10) __ZdlPv(i11);
 HEAP32[i1 >> 2] = i13;
 HEAP32[i1 + 8 >> 2] = i14 | -2147483648;
 i14 = i8 + i7 | 0;
 HEAP32[i1 + 4 >> 2] = i14;
 HEAP8[i10 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i13 + i14 | 0, i10);
 STACKTOP = i9;
 return;
}

function _skip_input_data(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i3 = i1 + 24 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 if ((i2 | 0) <= 0) return;
 i5 = i4 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 L4 : do if ((i6 | 0) < (i2 | 0)) {
  i7 = i2;
  i8 = i4;
  i9 = i6;
  while (1) {
   i10 = i7 - i9 | 0;
   i11 = i8 + 32 | 0;
   i12 = _fread(HEAP32[i11 >> 2] | 0, 1, 4096, HEAP32[i8 + 28 >> 2] | 0) | 0;
   i13 = i8 + 36 | 0;
   if (!i12) {
    if (HEAP32[i13 >> 2] | 0) {
     i14 = HEAP32[i1 >> 2] | 0;
     HEAP32[i14 + 20 >> 2] = 42;
     FUNCTION_TABLE_vi[HEAP32[i14 >> 2] & 255](i1);
    }
    i14 = HEAP32[i1 >> 2] | 0;
    HEAP32[i14 + 20 >> 2] = 120;
    FUNCTION_TABLE_vii[HEAP32[i14 + 4 >> 2] & 63](i1, -1);
    HEAP8[HEAP32[i11 >> 2] >> 0] = -1;
    HEAP8[(HEAP32[i11 >> 2] | 0) + 1 >> 0] = -39;
    i15 = 2;
   } else i15 = i12;
   HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i8 + 4 >> 2] = i15;
   HEAP32[i13 >> 2] = 0;
   i13 = HEAP32[i5 >> 2] | 0;
   if ((i10 | 0) <= (i13 | 0)) {
    i16 = i10;
    i17 = i13;
    break L4;
   }
   i7 = i10;
   i8 = HEAP32[i3 >> 2] | 0;
   i9 = i13;
  }
 } else {
  i16 = i2;
  i17 = i6;
 } while (0);
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i16;
 HEAP32[i5 >> 2] = i17 - i16;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i10 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 8 >> 2] & 127](i10) | 0;
 i10 = HEAP8[i1 + 8 + 3 >> 0] | 0;
 if (i10 << 24 >> 24 < 0) i11 = HEAP32[i1 + 4 >> 2] | 0; else i11 = i10 & 255;
 i10 = HEAP8[i1 + 20 + 3 >> 0] | 0;
 if (i10 << 24 >> 24 < 0) i12 = HEAP32[i1 + 16 >> 2] | 0; else i12 = i10 & 255;
 do if ((i11 | 0) != (0 - i12 | 0)) {
  HEAP32[i9 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  i10 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i3, i8, i1, i1 + 24 | 0, i6, i5, 0) | 0) - i1 | 0;
  i13 = HEAP32[i2 >> 2] | 0;
  if ((i13 | 0) == 12 & (i10 | 0) == 0) {
   HEAP32[i2 >> 2] = 0;
   break;
  }
  if ((i13 | 0) < 12 & (i10 | 0) == 12) HEAP32[i2 >> 2] = i13 + 12;
 } else HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 4; while (0);
 STACKTOP = i7;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE6rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if ((i2 | 0) != 1) if (!(i2 + -1 & i2)) i3 = i2; else i3 = __ZNSt3__212__next_primeEm(i2) | 0; else i3 = 2;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 if (i3 >>> 0 > i2 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm(i1, i3);
  return;
 }
 if (i3 >>> 0 >= i2 >>> 0) return;
 i4 = ~~+Math_ceil(+(+((HEAP32[i1 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i1 + 16 >> 2])) >>> 0;
 if (i2 >>> 0 > 2 & (i2 + -1 & i2 | 0) == 0) {
  i5 = 1 << 32 - (Math_clz32(i4 + -1 | 0) | 0);
  i6 = i4 >>> 0 < 2 ? i4 : i5;
 } else i6 = __ZNSt3__212__next_primeEm(i4) | 0;
 i4 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
 if (i4 >>> 0 >= i2 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm(i1, i4);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE6rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if ((i2 | 0) != 1) if (!(i2 + -1 & i2)) i3 = i2; else i3 = __ZNSt3__212__next_primeEm(i2) | 0; else i3 = 2;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 if (i3 >>> 0 > i2 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm(i1, i3);
  return;
 }
 if (i3 >>> 0 >= i2 >>> 0) return;
 i4 = ~~+Math_ceil(+(+((HEAP32[i1 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i1 + 16 >> 2])) >>> 0;
 if (i2 >>> 0 > 2 & (i2 + -1 & i2 | 0) == 0) {
  i5 = 1 << 32 - (Math_clz32(i4 + -1 | 0) | 0);
  i6 = i4 >>> 0 < 2 ? i4 : i5;
 } else i6 = __ZNSt3__212__next_primeEm(i4) | 0;
 i4 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
 if (i4 >>> 0 >= i2 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm(i1, i4);
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i10 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 8 >> 2] & 127](i10) | 0;
 i10 = HEAP8[i1 + 11 >> 0] | 0;
 if (i10 << 24 >> 24 < 0) i11 = HEAP32[i1 + 4 >> 2] | 0; else i11 = i10 & 255;
 i10 = HEAP8[i1 + 12 + 11 >> 0] | 0;
 if (i10 << 24 >> 24 < 0) i12 = HEAP32[i1 + 16 >> 2] | 0; else i12 = i10 & 255;
 do if ((i11 | 0) != (0 - i12 | 0)) {
  HEAP32[i9 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  i10 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i3, i8, i1, i1 + 24 | 0, i6, i5, 0) | 0) - i1 | 0;
  i13 = HEAP32[i2 >> 2] | 0;
  if ((i13 | 0) == 12 & (i10 | 0) == 0) {
   HEAP32[i2 >> 2] = 0;
   break;
  }
  if ((i13 | 0) < 12 & (i10 | 0) == 12) HEAP32[i2 >> 2] = i13 + 12;
 } else HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 4; while (0);
 STACKTOP = i7;
 return;
}

function _arLogv(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i1 + 16 | 0;
 i6 = i1;
 if ((i3 | 0) == 0 | (HEAP32[3368] | 0) > (i2 | 0)) {
  STACKTOP = i1;
  return;
 }
 if (!(HEAP8[i3 >> 0] | 0)) {
  STACKTOP = i1;
  return;
 }
 HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
 i7 = _vsnprintf(0, 0, i3, i6) | 0;
 if (!i7) {
  STACKTOP = i1;
  return;
 }
 if (i2 >>> 0 < 4) i8 = (_strlen(HEAP32[1744 + (i2 << 2) >> 2] | 0) | 0) + 3 | 0; else i8 = 0;
 i6 = i8 + i7 | 0;
 i9 = i6 + 1 | 0;
 i10 = _malloc(i9) | 0;
 if (i8 | 0) {
  HEAP32[i5 >> 2] = HEAP32[1744 + (i2 << 2) >> 2];
  _snprintf(i10, i8 + 1 | 0, 19360, i5) | 0;
 }
 _vsnprintf(i10 + i8 | 0, i7 + 1 | 0, i3, i4) | 0;
 do if (0) {
  if (0 ? (i4 = HEAP32[14182] | 0, i4 >>> 0 < 0) : 0) {
   i3 = 0 + i4 | 0;
   if (i6 >>> 0 > (-4 - i4 + 0 | 0) >>> 0) {
    HEAP8[i3 >> 0] = 46;
    HEAP8[i3 + 1 >> 0] = 46;
    HEAP8[i3 + 2 >> 0] = 46;
    HEAP8[i3 + 3 >> 0] = 0;
    HEAP32[14182] = 0;
    break;
   } else {
    _strncpy(i3, i10, i9) | 0;
    HEAP32[14182] = (HEAP32[14182] | 0) + i6;
    break;
   }
  }
 } else _fputs(i10, HEAP32[3449] | 0) | 0; while (0);
 _free(i10);
 STACKTOP = i1;
 return;
}

function _merged_2v_upsample(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i4;
 i9 = HEAP32[i1 + 452 >> 2] | 0;
 i10 = i9 + 36 | 0;
 if (!(HEAP32[i10 >> 2] | 0)) {
  i11 = i9 + 44 | 0;
  i12 = HEAP32[i11 >> 2] | 0;
  i13 = i12 >>> 0 < 2 ? i12 : 2;
  i12 = HEAP32[i6 >> 2] | 0;
  i14 = i7 - i12 | 0;
  i7 = i13 >>> 0 > i14 >>> 0 ? i14 : i13;
  HEAP32[i8 >> 2] = HEAP32[i5 + (i12 << 2) >> 2];
  if (i7 >>> 0 > 1) HEAP32[i8 + 4 >> 2] = HEAP32[i5 + (i12 + 1 << 2) >> 2]; else {
   HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 32 >> 2];
   HEAP32[i10 >> 2] = 1;
  }
  FUNCTION_TABLE_viiii[HEAP32[i9 + 12 >> 2] & 31](i1, i2, HEAP32[i3 >> 2] | 0, i8);
  i15 = i7;
  i16 = i11;
 } else {
  _jcopy_sample_rows(i9 + 32 | 0, 0, i5 + (HEAP32[i6 >> 2] << 2) | 0, 0, 1, HEAP32[i9 + 40 >> 2] | 0);
  HEAP32[i10 >> 2] = 0;
  i15 = 1;
  i16 = i9 + 44 | 0;
 }
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i15;
 HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) - i15;
 if (HEAP32[i10 >> 2] | 0) {
  STACKTOP = i4;
  return;
 }
 HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 STACKTOP = i4;
 return;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = i1 + 4 | 0;
 i5 = i2 + 4 | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((i6 | 0) == (i3 | 0)) break;
  i7 = HEAP32[i5 >> 2] | 0;
  i8 = i7 + -16 | 0;
  i9 = i6 + -16 | 0;
  HEAP32[i8 >> 2] = 0;
  i10 = i7 + -12 | 0;
  HEAP32[i10 >> 2] = 0;
  i11 = i7 + -8 | 0;
  HEAP32[i11 >> 2] = 0;
  HEAP32[i7 + -4 >> 2] = HEAP32[i6 + -4 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  i8 = i6 + -12 | 0;
  HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
  i10 = i6 + -8 | 0;
  HEAP32[i11 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i10 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i9 >> 2] = 0;
  HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + -16;
  i6 = i9;
 }
 i6 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i6;
 i6 = i2 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i3;
 i3 = i1 + 8 | 0;
 i1 = i2 + 12 | 0;
 i6 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i1 >> 2] = i6;
 HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
 return;
}

function _post_process_prepass(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = HEAP32[i1 + 432 >> 2] | 0;
 i5 = i7 + 24 | 0;
 i8 = HEAP32[i5 >> 2] | 0;
 if (!i8) {
  i9 = i7 + 16 | 0;
  i10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 28 >> 2] & 31](i1, HEAP32[i7 + 8 >> 2] | 0, HEAP32[i7 + 20 >> 2] | 0, HEAP32[i9 >> 2] | 0, 1) | 0;
  i11 = i7 + 12 | 0;
  HEAP32[i11 >> 2] = i10;
  i12 = i9;
  i13 = i11;
  i14 = i10;
  i15 = HEAP32[i5 >> 2] | 0;
 } else {
  i10 = i7 + 12 | 0;
  i12 = i7 + 16 | 0;
  i13 = i10;
  i14 = HEAP32[i10 >> 2] | 0;
  i15 = i8;
 }
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i1 + 452 >> 2] | 0) + 4 >> 2] & 7](i1, i2, i3, i4, i14, i5, HEAP32[i12 >> 2] | 0);
 i14 = HEAP32[i5 >> 2] | 0;
 if (i14 >>> 0 > i15 >>> 0) {
  i4 = i14 - i15 | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 4 >> 2] & 31](i1, (HEAP32[i13 >> 2] | 0) + (i15 << 2) | 0, 0, i4);
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i4;
  i16 = HEAP32[i5 >> 2] | 0;
 } else i16 = i14;
 i14 = HEAP32[i12 >> 2] | 0;
 if (i16 >>> 0 < i14 >>> 0) return;
 i16 = i7 + 20 | 0;
 HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + i14;
 HEAP32[i5 >> 2] = 0;
 return;
}

function _arPattDeleteHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 if (!i1) {
  i2 = -1;
  return i2 | 0;
 }
 i3 = i1 + 4 | 0;
 if ((HEAP32[i3 >> 2] | 0) > 0) {
  i4 = i1 + 8 | 0;
  i5 = i1 + 12 | 0;
  i6 = i1 + 20 | 0;
  i7 = 0;
  do {
   if (HEAP32[(HEAP32[i4 >> 2] | 0) + (i7 << 2) >> 2] | 0) _arPattFree(i1, i7) | 0;
   i8 = i7 << 2;
   _free(HEAP32[(HEAP32[i5 >> 2] | 0) + (i8 << 2) >> 2] | 0);
   _free(HEAP32[(HEAP32[i6 >> 2] | 0) + (i8 << 2) >> 2] | 0);
   i9 = i8 | 1;
   _free(HEAP32[(HEAP32[i5 >> 2] | 0) + (i9 << 2) >> 2] | 0);
   _free(HEAP32[(HEAP32[i6 >> 2] | 0) + (i9 << 2) >> 2] | 0);
   i9 = i8 | 2;
   _free(HEAP32[(HEAP32[i5 >> 2] | 0) + (i9 << 2) >> 2] | 0);
   _free(HEAP32[(HEAP32[i6 >> 2] | 0) + (i9 << 2) >> 2] | 0);
   i9 = i8 | 3;
   _free(HEAP32[(HEAP32[i5 >> 2] | 0) + (i9 << 2) >> 2] | 0);
   _free(HEAP32[(HEAP32[i6 >> 2] | 0) + (i9 << 2) >> 2] | 0);
   i7 = i7 + 1 | 0;
  } while ((i7 | 0) < (HEAP32[i3 >> 2] | 0));
  i10 = i6;
  i11 = i4;
  i12 = i5;
 } else {
  i10 = i1 + 20 | 0;
  i11 = i1 + 8 | 0;
  i12 = i1 + 12 | 0;
 }
 _free(HEAP32[i12 >> 2] | 0);
 _free(HEAP32[i10 >> 2] | 0);
 _free(HEAP32[i11 >> 2] | 0);
 _free(HEAP32[i1 + 16 >> 2] | 0);
 _free(HEAP32[i1 + 24 >> 2] | 0);
 _free(i1);
 i2 = 0;
 return i2 | 0;
}

function _post_process_2pass(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i4 = HEAP32[i1 + 432 >> 2] | 0;
 i3 = i4 + 24 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 if (!i2) {
  i8 = i4 + 20 | 0;
  i9 = i4 + 16 | 0;
  i10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 28 >> 2] & 31](i1, HEAP32[i4 + 8 >> 2] | 0, HEAP32[i8 >> 2] | 0, HEAP32[i9 >> 2] | 0, 0) | 0;
  HEAP32[i4 + 12 >> 2] = i10;
  i11 = i8;
  i12 = i9;
  i13 = HEAP32[i3 >> 2] | 0;
  i14 = i10;
 } else {
  i11 = i4 + 20 | 0;
  i12 = i4 + 16 | 0;
  i13 = i2;
  i14 = HEAP32[i4 + 12 >> 2] | 0;
 }
 i4 = (HEAP32[i12 >> 2] | 0) - i13 | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 i10 = i7 - i2 | 0;
 i7 = i4 >>> 0 > i10 >>> 0 ? i10 : i4;
 i4 = (HEAP32[i1 + 116 >> 2] | 0) - (HEAP32[i11 >> 2] | 0) | 0;
 i10 = i7 >>> 0 > i4 >>> 0 ? i4 : i7;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 4 >> 2] & 31](i1, i14 + (i13 << 2) | 0, i5 + (i2 << 2) | 0, i10);
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i10;
 i6 = (HEAP32[i3 >> 2] | 0) + i10 | 0;
 HEAP32[i3 >> 2] = i6;
 i10 = HEAP32[i12 >> 2] | 0;
 if (i6 >>> 0 < i10 >>> 0) return;
 HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + i10;
 HEAP32[i3 >> 2] = 0;
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = i1 + 4 | 0;
 i5 = i2 + 4 | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((i6 | 0) == (i3 | 0)) break;
  i7 = HEAP32[i5 >> 2] | 0;
  i8 = i7 + -16 | 0;
  i9 = i6 + -16 | 0;
  HEAP32[i8 >> 2] = 0;
  i10 = i7 + -12 | 0;
  HEAP32[i10 >> 2] = 0;
  i11 = i7 + -8 | 0;
  HEAP32[i11 >> 2] = 0;
  HEAP32[i7 + -4 >> 2] = HEAP32[i6 + -4 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
  i8 = i6 + -12 | 0;
  HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
  i10 = i6 + -8 | 0;
  HEAP32[i11 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i10 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i9 >> 2] = 0;
  HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + -16;
  i6 = i9;
 }
 i6 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i6;
 i6 = i2 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i3;
 i3 = i1 + 8 | 0;
 i1 = i2 + 12 | 0;
 i6 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i1 >> 2] = i6;
 HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEmRKh(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i4 = i1 + 8 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = i1 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 if ((i5 - i7 | 0) >>> 0 >= i2 >>> 0) {
  i8 = i2;
  i9 = i7;
  do {
   HEAP8[i9 >> 0] = HEAP8[i3 >> 0] | 0;
   i9 = (HEAP32[i6 >> 2] | 0) + 1 | 0;
   HEAP32[i6 >> 2] = i9;
   i8 = i8 + -1 | 0;
  } while ((i8 | 0) != 0);
  return;
 }
 i8 = HEAP32[i1 >> 2] | 0;
 i9 = i7 - i8 | 0;
 i10 = i9 + i2 | 0;
 if ((i10 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i11 = i5 - i8 | 0;
 i5 = i11 << 1;
 i12 = i11 >>> 0 < 1073741823 ? (i5 >>> 0 < i10 >>> 0 ? i10 : i5) : 2147483647;
 if (!i12) i13 = 0; else i13 = __Znwm(i12) | 0;
 i5 = i13 + i9 | 0;
 i9 = i13 + i12 | 0;
 i12 = i7 + i2 - i8 | 0;
 i8 = i2;
 i2 = i5;
 while (1) {
  HEAP8[i2 >> 0] = HEAP8[i3 >> 0] | 0;
  i8 = i8 + -1 | 0;
  if (!i8) break; else i2 = i2 + 1 | 0;
 }
 i2 = HEAP32[i1 >> 2] | 0;
 i8 = (HEAP32[i6 >> 2] | 0) - i2 | 0;
 i3 = i5 + (0 - i8) | 0;
 if ((i8 | 0) > 0) _memcpy(i3 | 0, i2 | 0, i8 | 0) | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i6 >> 2] = i13 + i12;
 HEAP32[i4 >> 2] = i9;
 if (!i2) return;
 __ZdlPv(i2);
 return;
}

function _jpeg_finish_decompress(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = i1 + 20 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 + -205 | 0) >>> 0 < 2 ? (HEAP32[i1 + 64 >> 2] | 0) == 0 : 0) {
  if ((HEAP32[i1 + 140 >> 2] | 0) >>> 0 < (HEAP32[i1 + 116 >> 2] | 0) >>> 0) {
   i4 = HEAP32[i1 >> 2] | 0;
   HEAP32[i4 + 20 >> 2] = 67;
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i1);
  }
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 + 420 >> 2] | 0) + 4 >> 2] & 255](i1);
  HEAP32[i2 >> 2] = 210;
 } else i5 = 6;
 L7 : do if ((i5 | 0) == 6) switch (i3 | 0) {
 case 210:
  {
   break L7;
   break;
  }
 case 207:
  {
   HEAP32[i2 >> 2] = 210;
   break L7;
   break;
  }
 default:
  {
   i4 = HEAP32[i1 >> 2] | 0;
   HEAP32[i4 + 20 >> 2] = 20;
   HEAP32[i4 + 24 >> 2] = i3;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
   break L7;
  }
 } while (0);
 i3 = i1 + 436 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 L13 : do if (!(HEAP32[i2 + 20 >> 2] | 0)) {
  i5 = i2;
  while (1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[i5 >> 2] & 127](i1) | 0)) {
    i6 = 0;
    break;
   }
   i5 = HEAP32[i3 >> 2] | 0;
   if (HEAP32[i5 + 20 >> 2] | 0) break L13;
  }
  return i6 | 0;
 } while (0);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 + 24 >> 2] | 0) + 24 >> 2] & 255](i1);
 _jpeg_abort(i1);
 i6 = 1;
 return i6 | 0;
}

function __ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 i3 = i4;
 i8 = i4 + 400 | 0;
 HEAP32[i8 >> 2] = i3 + 400;
 __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc(i1 + 8 | 0, i3, i8, i5, i6, i7);
 i7 = HEAP32[i8 >> 2] | 0;
 i8 = i3;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i8 | 0) == (i7 | 0)) break;
  i2 = HEAP32[i8 >> 2] | 0;
  if (!i3) i9 = 0; else {
   i6 = i3 + 24 | 0;
   i5 = HEAP32[i6 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i3 + 28 >> 2] | 0)) {
    i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + 52 >> 2] | 0;
    i10 = __ZNSt3__211char_traitsIwE11to_int_typeEw(i2) | 0;
    i11 = FUNCTION_TABLE_iii[i1 & 63](i3, i10) | 0;
   } else {
    HEAP32[i6 >> 2] = i5 + 4;
    HEAP32[i5 >> 2] = i2;
    i11 = __ZNSt3__211char_traitsIwE11to_int_typeEw(i2) | 0;
   }
   i2 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj(i11, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
   i9 = i2 ? 0 : i3;
  }
  i8 = i8 + 4 | 0;
  i3 = i9;
 }
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE6rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if ((i2 | 0) != 1) if (!(i2 + -1 & i2)) i3 = i2; else i3 = __ZNSt3__212__next_primeEm(i2) | 0; else i3 = 2;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 if (i3 >>> 0 > i2 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm(i1, i3);
  return;
 }
 if (i3 >>> 0 >= i2 >>> 0) return;
 i4 = ~~+Math_ceil(+(+((HEAP32[i1 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i1 + 16 >> 2])) >>> 0;
 if (i2 >>> 0 > 2 & (i2 + -1 & i2 | 0) == 0) {
  i5 = 1 << 32 - (Math_clz32(i4 + -1 | 0) | 0);
  i6 = i4 >>> 0 < 2 ? i4 : i5;
 } else i6 = __ZNSt3__212__next_primeEm(i4) | 0;
 i4 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
 if (i4 >>> 0 >= i2 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm(i1, i4);
 return;
}

function __ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 i3 = i4;
 i8 = i4 + 100 | 0;
 HEAP32[i8 >> 2] = i3 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc(i1 + 8 | 0, i3, i8, i5, i6, i7);
 i7 = HEAP32[i8 >> 2] | 0;
 i8 = i3;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i8 | 0) == (i7 | 0)) break;
  i2 = HEAP8[i8 >> 0] | 0;
  if (!i3) i9 = 0; else {
   i6 = i3 + 24 | 0;
   i5 = HEAP32[i6 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i3 + 28 >> 2] | 0)) {
    i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + 52 >> 2] | 0;
    i10 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i2) | 0;
    i11 = FUNCTION_TABLE_iii[i1 & 63](i3, i10) | 0;
   } else {
    HEAP32[i6 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i2;
    i11 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i2) | 0;
   }
   i2 = __ZNSt3__211char_traitsIcE11eq_int_typeEii(i11, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
   i9 = i2 ? 0 : i3;
  }
  i8 = i8 + 1 | 0;
  i3 = i9;
 }
 STACKTOP = i4;
 return i3 | 0;
}

function ___fwritex(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i4 = i3 + 16 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 if (!i5) if (!(___towrite(i3) | 0)) {
  i6 = HEAP32[i4 >> 2] | 0;
  i7 = 5;
 } else i8 = 0; else {
  i6 = i5;
  i7 = 5;
 }
 L5 : do if ((i7 | 0) == 5) {
  i5 = i3 + 20 | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  i9 = i4;
  if ((i6 - i4 | 0) >>> 0 < i2 >>> 0) {
   i8 = FUNCTION_TABLE_iiii[HEAP32[i3 + 36 >> 2] & 63](i3, i1, i2) | 0;
   break;
  }
  L10 : do if ((HEAP8[i3 + 75 >> 0] | 0) < 0 | (i2 | 0) == 0) {
   i10 = 0;
   i11 = i1;
   i12 = i2;
   i13 = i9;
  } else {
   i4 = i2;
   while (1) {
    i14 = i4 + -1 | 0;
    if ((HEAP8[i1 + i14 >> 0] | 0) == 10) break;
    if (!i14) {
     i10 = 0;
     i11 = i1;
     i12 = i2;
     i13 = i9;
     break L10;
    } else i4 = i14;
   }
   i14 = FUNCTION_TABLE_iiii[HEAP32[i3 + 36 >> 2] & 63](i3, i1, i4) | 0;
   if (i14 >>> 0 < i4 >>> 0) {
    i8 = i14;
    break L5;
   }
   i10 = i4;
   i11 = i1 + i4 | 0;
   i12 = i2 - i4 | 0;
   i13 = HEAP32[i5 >> 2] | 0;
  } while (0);
  _memcpy(i13 | 0, i11 | 0, i12 | 0) | 0;
  HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i12;
  i8 = i10 + i12 | 0;
 } while (0);
 return i8 | 0;
}

function __ZL25default_terminate_handlerv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i2 = i1 + 32 | 0;
 i3 = i1 + 24 | 0;
 i4 = i1 + 16 | 0;
 i5 = i1;
 i6 = i1 + 36 | 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if (i1 | 0 ? (i7 = HEAP32[i1 >> 2] | 0, i7 | 0) : 0) {
  i1 = i7 + 48 | 0;
  i8 = HEAP32[i1 >> 2] | 0;
  i9 = HEAP32[i1 + 4 >> 2] | 0;
  if (!((i8 & -256 | 0) == 1126902528 & (i9 | 0) == 1129074247)) {
   HEAP32[i3 >> 2] = 49654;
   _abort_message(49604, i3);
  }
  if ((i8 | 0) == 1126902529 & (i9 | 0) == 1129074247) i10 = HEAP32[i7 + 44 >> 2] | 0; else i10 = i7 + 80 | 0;
  HEAP32[i6 >> 2] = i10;
  i10 = HEAP32[i7 >> 2] | 0;
  i7 = HEAP32[i10 + 4 >> 2] | 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[3302] | 0) + 16 >> 2] & 63](13208, i10, i6) | 0) {
   i10 = HEAP32[i6 >> 2] | 0;
   i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 8 >> 2] & 127](i10) | 0;
   HEAP32[i5 >> 2] = 49654;
   HEAP32[i5 + 4 >> 2] = i7;
   HEAP32[i5 + 8 >> 2] = i6;
   _abort_message(49518, i5);
  } else {
   HEAP32[i4 >> 2] = 49654;
   HEAP32[i4 + 4 >> 2] = i7;
   _abort_message(49563, i4);
  }
 }
 _abort_message(49642, i2);
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if (i4 - i6 >> 3 >>> 0 >= i2 >>> 0) {
  _memset(i6 | 0, 0, i2 << 3 | 0) | 0;
  HEAP32[i5 >> 2] = i6 + (i2 << 3);
  return;
 }
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = i6 - i7 | 0;
 i6 = i8 >> 3;
 i9 = i6 + i2 | 0;
 if (i9 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i10 = i4 - i7 | 0;
 i4 = i10 >> 2;
 i11 = i10 >> 3 >>> 0 < 268435455 ? (i4 >>> 0 < i9 >>> 0 ? i9 : i4) : 536870911;
 do if (i11) if (i11 >>> 0 > 536870911) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 } else {
  i4 = __Znwm(i11 << 3) | 0;
  i12 = i4;
  i13 = i4;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i4 = i12 + (i6 << 3) | 0;
 _memset(i4 | 0, 0, i2 << 3 | 0) | 0;
 if ((i8 | 0) > 0) _memcpy(i13 | 0, i7 | 0, i8 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i5 >> 2] = i4 + (i2 << 3);
 HEAP32[i3 >> 2] = i12 + (i11 << 3);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 | 0;
 i6 = (i5 | 0) / 12 | 0;
 i7 = i6 + 1 | 0;
 if (i7 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 i9 = ((HEAP32[i8 >> 2] | 0) - i4 | 0) / 12 | 0;
 i10 = i9 << 1;
 i11 = i9 >>> 0 < 178956970 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : 357913941;
 do if (i11) if (i11 >>> 0 > 357913941) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i12 = __Znwm(i11 * 12 | 0) | 0;
  break;
 } else i12 = 0; while (0);
 i10 = i12 + (i6 * 12 | 0) | 0;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i10 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i2 = i10 + (((i5 | 0) / -12 | 0) * 12 | 0) | 0;
 if ((i5 | 0) > 0) _memcpy(i2 | 0, i4 | 0, i5 | 0) | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i3 >> 2] = i10 + 12;
 HEAP32[i8 >> 2] = i12 + (i11 * 12 | 0);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 do if ((i1 | 0) == (i2 | 0)) {
  HEAP32[i3 >> 2] = 4;
  i7 = 0;
  i8 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i3 >> 2] = 4;
   i7 = 0;
   i8 = 0;
   break;
  }
  i9 = ___errno_location() | 0;
  i10 = HEAP32[i9 >> 2] | 0;
  i9 = ___errno_location() | 0;
  HEAP32[i9 >> 2] = 0;
  i9 = _strtoull_l(i1, i6, i4, __ZNSt3__26__clocEv() | 0) | 0;
  i11 = getTempRet0() | 0;
  i12 = ___errno_location() | 0;
  i13 = HEAP32[i12 >> 2] | 0;
  if (!i13) {
   i12 = ___errno_location() | 0;
   HEAP32[i12 >> 2] = i10;
  }
  if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) if ((i13 | 0) == 34) {
   i14 = -1;
   i15 = -1;
   i16 = 8;
  } else {
   i17 = i9;
   i18 = i11;
  } else {
   i14 = 0;
   i15 = 0;
   i16 = 8;
  }
  if ((i16 | 0) == 8) {
   HEAP32[i3 >> 2] = 4;
   i17 = i14;
   i18 = i15;
  }
  i7 = i18;
  i8 = i17;
 } while (0);
 setTempRet0(i7 | 0);
 STACKTOP = i5;
 return i8 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE6rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if ((i2 | 0) != 1) if (!(i2 + -1 & i2)) i3 = i2; else i3 = __ZNSt3__212__next_primeEm(i2) | 0; else i3 = 2;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 if (i3 >>> 0 > i2 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE8__rehashEm(i1, i3);
  return;
 }
 if (i3 >>> 0 >= i2 >>> 0) return;
 i4 = ~~+Math_ceil(+(+((HEAP32[i1 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i1 + 16 >> 2])) >>> 0;
 if (i2 >>> 0 > 2 & (i2 + -1 & i2 | 0) == 0) {
  i5 = 1 << 32 - (Math_clz32(i4 + -1 | 0) | 0);
  i6 = i4 >>> 0 < 2 ? i4 : i5;
 } else i6 = __ZNSt3__212__next_primeEm(i4) | 0;
 i4 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
 if (i4 >>> 0 >= i2 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE8__rehashEm(i1, i4);
 return;
}

function _arLabeling(i1, i2, i3, i4, i5, i6, i7, i8, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i10 = 0, i11 = 0;
 i10 = (i5 | 0) == 1;
 i5 = (i9 | 0) != 0;
 do if (!i4) if (i10) {
  if (i5) {
   i11 = _arLabelingSubDBZ(i1, i2, i3, i9, i8) | 0;
   break;
  }
  if (!i7) {
   i11 = _arLabelingSubDBRC(i1, i2, i3, i6, i8) | 0;
   break;
  } else {
   i11 = _arLabelingSubDBIC(i1, i2, i3, i6, i8) | 0;
   break;
  }
 } else {
  if (i5) {
   i11 = _arLabelingSubDWZ(i1, i2, i3, i9, i8) | 0;
   break;
  }
  if (!i7) {
   i11 = _arLabelingSubDWRC(i1, i2, i3, i6, i8) | 0;
   break;
  } else {
   i11 = _arLabelingSubDWIC(i1, i2, i3, i6, i8) | 0;
   break;
  }
 } else if (i10) {
  if (i5) {
   i11 = _arLabelingSubEBZ(i1, i2, i3, i9, i8) | 0;
   break;
  }
  if (!i7) {
   i11 = _arLabelingSubEBRC(i1, i2, i3, i6, i8) | 0;
   break;
  } else {
   i11 = _arLabelingSubEBIC(i1, i2, i3, i6, i8) | 0;
   break;
  }
 } else {
  if (i5) {
   i11 = _arLabelingSubEWZ(i1, i2, i3, i9, i8) | 0;
   break;
  }
  if (!i7) {
   i11 = _arLabelingSubEWRC(i1, i2, i3, i6, i8) | 0;
   break;
  } else {
   i11 = _arLabelingSubEWIC(i1, i2, i3, i6, i8) | 0;
   break;
  }
 } while (0);
 return i11 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if (i4 - i6 >> 2 >>> 0 >= i2 >>> 0) {
  _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
  HEAP32[i5 >> 2] = i6 + (i2 << 2);
  return;
 }
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = i6 - i7 | 0;
 i6 = i8 >> 2;
 i9 = i6 + i2 | 0;
 if (i9 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i10 = i4 - i7 | 0;
 i4 = i10 >> 1;
 i11 = i10 >> 2 >>> 0 < 536870911 ? (i4 >>> 0 < i9 >>> 0 ? i9 : i4) : 1073741823;
 do if (i11) if (i11 >>> 0 > 1073741823) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 } else {
  i4 = __Znwm(i11 << 2) | 0;
  i12 = i4;
  i13 = i4;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i4 = i12 + (i6 << 2) | 0;
 _memset(i4 | 0, 0, i2 << 2 | 0) | 0;
 if ((i8 | 0) > 0) _memcpy(i13 | 0, i7 | 0, i8 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i5 >> 2] = i4 + (i2 << 2);
 HEAP32[i3 >> 2] = i12 + (i11 << 2);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if (i4 - i6 >> 2 >>> 0 >= i2 >>> 0) {
  _memset(i6 | 0, 0, i2 << 2 | 0) | 0;
  HEAP32[i5 >> 2] = i6 + (i2 << 2);
  return;
 }
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = i6 - i7 | 0;
 i6 = i8 >> 2;
 i9 = i6 + i2 | 0;
 if (i9 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i10 = i4 - i7 | 0;
 i4 = i10 >> 1;
 i11 = i10 >> 2 >>> 0 < 536870911 ? (i4 >>> 0 < i9 >>> 0 ? i9 : i4) : 1073741823;
 do if (i11) if (i11 >>> 0 > 1073741823) {
  i4 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i4, 40980);
  HEAP32[i4 >> 2] = 17420;
  ___cxa_throw(i4 | 0, 13288, 107);
 } else {
  i4 = __Znwm(i11 << 2) | 0;
  i12 = i4;
  i13 = i4;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i4 = i12 + (i6 << 2) | 0;
 _memset(i4 | 0, 0, i2 << 2 | 0) | 0;
 if ((i8 | 0) > 0) _memcpy(i13 | 0, i7 | 0, i8 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i5 >> 2] = i4 + (i2 << 2);
 HEAP32[i3 >> 2] = i12 + (i11 << 2);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function _trackingInitGetResult(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!((i1 | 0) != 0 & (i2 | 0) != 0 & (i3 | 0) != 0)) {
  _arLog(0, 3, 38634, i4);
  i5 = -1;
  STACKTOP = i4;
  return i5 | 0;
 }
 if (!(_threadGetStatus(i1) | 0)) {
  i5 = 0;
  STACKTOP = i4;
  return i5 | 0;
 }
 _threadEndWait(i1) | 0;
 i6 = _threadGetArg(i1) | 0;
 if (!i6) {
  i5 = -1;
  STACKTOP = i4;
  return i5 | 0;
 }
 if (!(HEAP32[i6 + 64 >> 2] | 0)) {
  i5 = -1;
  STACKTOP = i4;
  return i5 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i6 + 12 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i6 + 16 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i6 + 20 >> 2];
 HEAP32[i2 + 12 >> 2] = HEAP32[i6 + 24 >> 2];
 HEAP32[i2 + 16 >> 2] = HEAP32[i6 + 28 >> 2];
 HEAP32[i2 + 20 >> 2] = HEAP32[i6 + 32 >> 2];
 HEAP32[i2 + 24 >> 2] = HEAP32[i6 + 36 >> 2];
 HEAP32[i2 + 28 >> 2] = HEAP32[i6 + 40 >> 2];
 HEAP32[i2 + 32 >> 2] = HEAP32[i6 + 44 >> 2];
 HEAP32[i2 + 36 >> 2] = HEAP32[i6 + 48 >> 2];
 HEAP32[i2 + 40 >> 2] = HEAP32[i6 + 52 >> 2];
 HEAP32[i2 + 44 >> 2] = HEAP32[i6 + 56 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i6 + 60 >> 2];
 i5 = 1;
 STACKTOP = i4;
 return i5 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if ((i2 | 0) != 1) if (!(i2 + -1 & i2)) i3 = i2; else i3 = __ZNSt3__212__next_primeEm(i2) | 0; else i3 = 2;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 if (i3 >>> 0 > i2 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i1, i3);
  return;
 }
 if (i3 >>> 0 >= i2 >>> 0) return;
 i4 = ~~+Math_ceil(+(+((HEAP32[i1 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i1 + 16 >> 2])) >>> 0;
 if (i2 >>> 0 > 2 & (i2 + -1 & i2 | 0) == 0) {
  i5 = 1 << 32 - (Math_clz32(i4 + -1 | 0) | 0);
  i6 = i4 >>> 0 < 2 ? i4 : i5;
 } else i6 = __ZNSt3__212__next_primeEm(i4) | 0;
 i4 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
 if (i4 >>> 0 >= i2 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i1, i4);
 return;
}

function _fread(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i5 = Math_imul(i3, i2) | 0;
 i6 = (i2 | 0) == 0 ? 0 : i3;
 if ((HEAP32[i4 + 76 >> 2] | 0) > -1) i7 = ___lockfile(i4) | 0; else i7 = 0;
 i3 = i4 + 74 | 0;
 i8 = HEAP8[i3 >> 0] | 0;
 HEAP8[i3 >> 0] = i8 + 255 | i8;
 i8 = i4 + 4 | 0;
 i3 = HEAP32[i8 >> 2] | 0;
 i9 = (HEAP32[i4 + 8 >> 2] | 0) - i3 | 0;
 if ((i9 | 0) > 0) {
  i10 = i9 >>> 0 < i5 >>> 0 ? i9 : i5;
  _memcpy(i1 | 0, i3 | 0, i10 | 0) | 0;
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i10;
  i11 = i5 - i10 | 0;
  i12 = i1 + i10 | 0;
 } else {
  i11 = i5;
  i12 = i1;
 }
 L7 : do if (!i11) i13 = 13; else {
  i1 = i4 + 32 | 0;
  i10 = i12;
  i8 = i11;
  while (1) {
   if (___toread(i4) | 0) break;
   i3 = FUNCTION_TABLE_iiii[HEAP32[i1 >> 2] & 63](i4, i10, i8) | 0;
   if ((i3 + 1 | 0) >>> 0 < 2) break;
   i9 = i8 - i3 | 0;
   if (!i9) {
    i13 = 13;
    break L7;
   } else {
    i10 = i10 + i3 | 0;
    i8 = i9;
   }
  }
  if (i7 | 0) ___unlockfile(i4);
  i14 = ((i5 - i8 | 0) >>> 0) / (i2 >>> 0) | 0;
 } while (0);
 if ((i13 | 0) == 13) if (!i7) i14 = i6; else {
  ___unlockfile(i4);
  i14 = i6;
 }
 return i14 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i4, i1);
 do if (HEAP8[i4 >> 0] | 0) {
  i5 = HEAP32[i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  i6 = i5;
  if (i5 | 0) {
   i7 = i6 + 24 | 0;
   i8 = HEAP32[i7 >> 2] | 0;
   if ((i8 | 0) == (HEAP32[i6 + 28 >> 2] | 0)) {
    i9 = HEAP32[(HEAP32[i5 >> 2] | 0) + 52 >> 2] | 0;
    i5 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i2) | 0;
    i10 = FUNCTION_TABLE_iii[i9 & 63](i6, i5) | 0;
   } else {
    HEAP32[i7 >> 2] = i8 + 1;
    HEAP8[i8 >> 0] = i2;
    i10 = __ZNSt3__211char_traitsIcE11to_int_typeEc(i2) | 0;
   }
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii(i10, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) break;
  }
  i8 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj(i8, HEAP32[i8 + 16 >> 2] | 1);
 } while (0);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i4);
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if ((i2 | 0) != 1) if (!(i2 + -1 & i2)) i3 = i2; else i3 = __ZNSt3__212__next_primeEm(i2) | 0; else i3 = 2;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 if (i3 >>> 0 > i2 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i1, i3);
  return;
 }
 if (i3 >>> 0 >= i2 >>> 0) return;
 i4 = ~~+Math_ceil(+(+((HEAP32[i1 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i1 + 16 >> 2])) >>> 0;
 if (i2 >>> 0 > 2 & (i2 + -1 & i2 | 0) == 0) {
  i5 = 1 << 32 - (Math_clz32(i4 + -1 | 0) | 0);
  i6 = i4 >>> 0 < 2 ? i4 : i5;
 } else i6 = __ZNSt3__212__next_primeEm(i4) | 0;
 i4 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
 if (i4 >>> 0 >= i2 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm(i1, i4);
 return;
}

function ___strchrnul(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = i2 & 255;
 L1 : do if (!i3) i4 = i1 + (_strlen(i1) | 0) | 0; else {
  if (!(i1 & 3)) i5 = i1; else {
   i6 = i2 & 255;
   i7 = i1;
   while (1) {
    i8 = HEAP8[i7 >> 0] | 0;
    if (i8 << 24 >> 24 == 0 ? 1 : i8 << 24 >> 24 == i6 << 24 >> 24) {
     i4 = i7;
     break L1;
    }
    i8 = i7 + 1 | 0;
    if (!(i8 & 3)) {
     i5 = i8;
     break;
    } else i7 = i8;
   }
  }
  i7 = Math_imul(i3, 16843009) | 0;
  i6 = HEAP32[i5 >> 2] | 0;
  L10 : do if (!((i6 & -2139062144 ^ -2139062144) & i6 + -16843009)) {
   i8 = i5;
   i9 = i6;
   while (1) {
    i10 = i9 ^ i7;
    if ((i10 & -2139062144 ^ -2139062144) & i10 + -16843009 | 0) {
     i11 = i8;
     break L10;
    }
    i10 = i8 + 4 | 0;
    i9 = HEAP32[i10 >> 2] | 0;
    if ((i9 & -2139062144 ^ -2139062144) & i9 + -16843009 | 0) {
     i11 = i10;
     break;
    } else i8 = i10;
   }
  } else i11 = i5; while (0);
  i7 = i2 & 255;
  i6 = i11;
  while (1) {
   i8 = HEAP8[i6 >> 0] | 0;
   if (i8 << 24 >> 24 == 0 ? 1 : i8 << 24 >> 24 == i7 << 24 >> 24) {
    i4 = i6;
    break;
   } else i6 = i6 + 1 | 0;
  }
 } while (0);
 return i4 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 L1 : do if ((i2 - i1 | 0) > 12) {
  i4 = 0;
  i5 = i1;
  while (1) {
   if (i4 >>> 0 >= 13) break;
   if ((HEAP8[i5 >> 0] | 0) != (HEAP8[51876 + i4 >> 0] | 0)) {
    i6 = i1;
    break L1;
   }
   i4 = i4 + 1 | 0;
   i5 = i5 + 1 | 0;
  }
  L8 : do if ((i5 | 0) == (i2 | 0)) i7 = i2; else {
   if ((HEAP8[i5 >> 0] | 0) == 95) {
    i4 = i5 + 1 | 0;
    if ((i4 | 0) == (i2 | 0)) {
     i6 = i1;
     break L1;
    }
    if (((HEAP8[i4 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
     i6 = i1;
     break L1;
    }
    i8 = i5 + 2 | 0;
   } else i8 = i5;
   i4 = i8;
   while (1) {
    if ((i4 | 0) == (i2 | 0)) {
     i7 = i2;
     break L8;
    }
    if (((HEAP8[i4 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
     i7 = i4;
     break L8;
    }
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i5 = HEAP32[i3 + 4 >> 2] | 0;
  if ((HEAP32[i3 >> 2] | 0) != (i5 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i5 + -24 | 0, 0, 51890) | 0;
   i6 = i7;
  } else i6 = i1;
 } else i6 = i1; while (0);
 return i6 | 0;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 | 0;
 i6 = i5 >> 3;
 i7 = i6 + 1 | 0;
 if (i7 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 i9 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 i10 = i9 >> 2;
 i11 = i9 >> 3 >>> 0 < 268435455 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : 536870911;
 do if (i11) if (i11 >>> 0 > 536870911) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i11 << 3) | 0;
  i12 = i10;
  i13 = i10;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i10 = i12 + (i6 << 3) | 0;
 i6 = i2;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i7 = i10;
 HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i7 + 4 >> 2] = i2;
 if ((i5 | 0) > 0) _memcpy(i13 | 0, i4 | 0, i5 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i3 >> 2] = i10 + 8;
 HEAP32[i8 >> 2] = i12 + (i11 << 3);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 | 0;
 i6 = i5 >> 3;
 i7 = i6 + 1 | 0;
 if (i7 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 i9 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 i10 = i9 >> 2;
 i11 = i9 >> 3 >>> 0 < 268435455 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : 536870911;
 do if (i11) if (i11 >>> 0 > 536870911) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i11 << 3) | 0;
  i12 = i10;
  i13 = i10;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i10 = i12 + (i6 << 3) | 0;
 i6 = i2;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i7 = i10;
 HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i7 + 4 >> 2] = i2;
 if ((i5 | 0) > 0) _memcpy(i13 | 0, i4 | 0, i5 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i3 >> 2] = i10 + 8;
 HEAP32[i8 >> 2] = i12 + (i11 << 3);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 | 0;
 i6 = i5 >> 3;
 i7 = i6 + 1 | 0;
 if (i7 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 i9 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 i10 = i9 >> 2;
 i11 = i9 >> 3 >>> 0 < 268435455 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : 536870911;
 do if (i11) if (i11 >>> 0 > 536870911) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i11 << 3) | 0;
  i12 = i10;
  i13 = i10;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i10 = i12 + (i6 << 3) | 0;
 i6 = i2;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i7 = i10;
 HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i7 + 4 >> 2] = i2;
 if ((i5 | 0) > 0) _memcpy(i13 | 0, i4 | 0, i5 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i3 >> 2] = i10 + 8;
 HEAP32[i8 >> 2] = i12 + (i11 << 3);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 | 0;
 i6 = i5 >> 3;
 i7 = i6 + 1 | 0;
 if (i7 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 i9 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 i10 = i9 >> 2;
 i11 = i9 >> 3 >>> 0 < 268435455 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : 536870911;
 do if (i11) if (i11 >>> 0 > 536870911) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i11 << 3) | 0;
  i12 = i10;
  i13 = i10;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i10 = i12 + (i6 << 3) | 0;
 i6 = i2;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i7 = i10;
 HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i7 + 4 >> 2] = i2;
 if ((i5 | 0) > 0) _memcpy(i13 | 0, i4 | 0, i5 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i3 >> 2] = i10 + 8;
 HEAP32[i8 >> 2] = i12 + (i11 << 3);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__26vectorItNS_9allocatorItEEE8__appendEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if (i4 - i6 >> 1 >>> 0 >= i2 >>> 0) {
  _memset(i6 | 0, 0, i2 << 1 | 0) | 0;
  HEAP32[i5 >> 2] = i6 + (i2 << 1);
  return;
 }
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = i6 - i7 | 0;
 i6 = i8 >> 1;
 i9 = i6 + i2 | 0;
 if ((i9 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i10 = i4 - i7 | 0;
 i4 = i10 >> 1 >>> 0 < 1073741823 ? (i10 >>> 0 < i9 >>> 0 ? i9 : i10) : 2147483647;
 do if (i4) if ((i4 | 0) < 0) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i4 << 1) | 0;
  i11 = i10;
  i12 = i10;
  break;
 } else {
  i11 = 0;
  i12 = 0;
 } while (0);
 i10 = i11 + (i6 << 1) | 0;
 _memset(i10 | 0, 0, i2 << 1 | 0) | 0;
 if ((i8 | 0) > 0) _memcpy(i12 | 0, i7 | 0, i8 | 0) | 0;
 HEAP32[i1 >> 2] = i11;
 HEAP32[i5 >> 2] = i10 + (i2 << 1);
 HEAP32[i3 >> 2] = i11 + (i4 << 1);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function __ZN6vision21HoughSimilarityVoting4initEffffiiii(i1, d2, d3, d4, d5, i6, i7, i8, i9) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i10 = 0;
 HEAPF32[i1 + 20 >> 2] = d2;
 HEAPF32[i1 + 24 >> 2] = d3;
 HEAPF32[i1 + 28 >> 2] = d4;
 HEAPF32[i1 + 32 >> 2] = d5;
 HEAPF32[i1 + 36 >> 2] = -1.0;
 HEAPF32[i1 + 40 >> 2] = 1.0;
 HEAP32[i1 + 52 >> 2] = i6;
 HEAP32[i1 + 56 >> 2] = i7;
 HEAP32[i1 + 60 >> 2] = i8;
 HEAP32[i1 + 64 >> 2] = i9;
 i9 = Math_imul(i7, i6) | 0;
 HEAP32[i1 + 84 >> 2] = i9;
 i10 = Math_imul(i9, i8) | 0;
 HEAP32[i1 + 88 >> 2] = i10;
 HEAPF32[i1 + 44 >> 2] = 10.0;
 HEAPF32[i1 + 48 >> 2] = .4342944622039795;
 HEAP8[i1 + 16 >> 0] = (i7 | i6 | 0) == 0 & 1;
 i6 = i1 + 104 | 0;
 if (!(HEAP32[i6 >> 2] | 0)) return;
 i7 = i1 + 100 | 0;
 i10 = HEAP32[i7 >> 2] | 0;
 if (i10 | 0) {
  i8 = i10;
  do {
   i10 = i8;
   i8 = HEAP32[i8 >> 2] | 0;
   __ZdlPv(i10);
  } while ((i8 | 0) != 0);
 }
 HEAP32[i7 >> 2] = 0;
 i7 = HEAP32[i1 + 96 >> 2] | 0;
 if (i7 | 0) {
  i8 = i1 + 92 | 0;
  i1 = 0;
  do {
   HEAP32[(HEAP32[i8 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != (i7 | 0));
 }
 HEAP32[i6 >> 2] = 0;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE6rehashEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if ((i2 | 0) != 1) if (!(i2 + -1 & i2)) i3 = i2; else i3 = __ZNSt3__212__next_primeEm(i2) | 0; else i3 = 2;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 if (i3 >>> 0 > i2 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm(i1, i3);
  return;
 }
 if (i3 >>> 0 >= i2 >>> 0) return;
 i4 = ~~+Math_ceil(+(+((HEAP32[i1 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i1 + 16 >> 2])) >>> 0;
 if (i2 >>> 0 > 2 & (i2 + -1 & i2 | 0) == 0) {
  i5 = 1 << 32 - (Math_clz32(i4 + -1 | 0) | 0);
  i6 = i4 >>> 0 < 2 ? i4 : i5;
 } else i6 = __ZNSt3__212__next_primeEm(i4) | 0;
 i4 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
 if (i4 >>> 0 >= i2 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm(i1, i4);
 return;
}

function _icpGetDeltaS(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i6 = i5 + 24 | 0;
 i7 = i5 + 12 | 0;
 i8 = i5;
 HEAP32[i6 + 4 >> 2] = 6;
 HEAP32[i6 + 8 >> 2] = 1;
 HEAP32[i6 >> 2] = i1;
 HEAP32[i7 + 4 >> 2] = i4;
 HEAP32[i7 + 8 >> 2] = 1;
 HEAP32[i7 >> 2] = i2;
 HEAP32[i8 + 4 >> 2] = i4;
 HEAP32[i8 + 8 >> 2] = 6;
 HEAP32[i8 >> 2] = i3;
 i3 = _arMatrixAllocTrans(i8) | 0;
 if (!i3) {
  i9 = -1;
  STACKTOP = i5;
  return i9 | 0;
 }
 i4 = _arMatrixAllocMul(i3, i8) | 0;
 if (!i4) {
  _arMatrixFree(i3) | 0;
  i9 = -1;
  STACKTOP = i5;
  return i9 | 0;
 }
 i8 = _arMatrixAllocMul(i3, i7) | 0;
 if (!i8) {
  _arMatrixFree(i3) | 0;
  _arMatrixFree(i4) | 0;
  i9 = -1;
  STACKTOP = i5;
  return i9 | 0;
 }
 if ((_arMatrixSelfInv(i4) | 0) < 0) {
  _arMatrixFree(i3) | 0;
  _arMatrixFree(i4) | 0;
  _arMatrixFree(i8) | 0;
  i9 = -1;
  STACKTOP = i5;
  return i9 | 0;
 } else {
  _arMatrixMul(i6, i4, i8) | 0;
  _arMatrixFree(i3) | 0;
  _arMatrixFree(i4) | 0;
  _arMatrixFree(i8) | 0;
  i9 = 0;
  STACKTOP = i5;
  return i9 | 0;
 }
 return 0;
}

function _skip_variable(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i2 = i1 + 24 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i4 = i3 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 do if (!i5) if (!(FUNCTION_TABLE_ii[HEAP32[i3 + 12 >> 2] & 127](i1) | 0)) {
  i6 = 0;
  return i6 | 0;
 } else {
  i7 = HEAP32[i4 >> 2] | 0;
  break;
 } else i7 = i5; while (0);
 i5 = HEAP32[i3 >> 2] | 0;
 i8 = i7 + -1 | 0;
 i7 = i5 + 1 | 0;
 i9 = (HEAPU8[i5 >> 0] | 0) << 8;
 do if (!i8) if (!(FUNCTION_TABLE_ii[HEAP32[i3 + 12 >> 2] & 127](i1) | 0)) {
  i6 = 0;
  return i6 | 0;
 } else {
  i10 = HEAP32[i4 >> 2] | 0;
  i11 = HEAP32[i3 >> 2] | 0;
  break;
 } else {
  i10 = i8;
  i11 = i7;
 } while (0);
 i7 = i9 | (HEAPU8[i11 >> 0] | 0);
 i9 = i7 + -2 | 0;
 i8 = HEAP32[i1 >> 2] | 0;
 HEAP32[i8 + 20 >> 2] = 91;
 HEAP32[i8 + 24 >> 2] = HEAP32[i1 + 416 >> 2];
 HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i9;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 1);
 HEAP32[i3 >> 2] = i11 + 1;
 HEAP32[i4 >> 2] = i10 + -1;
 if (i7 >>> 0 <= 2) {
  i6 = 1;
  return i6 | 0;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 63](i1, i9);
 i6 = 1;
 return i6 | 0;
}

function _arCreateHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = _malloc(7062432) | 0;
 if (!i3) {
  _arLog(0, 3, 20510, i2);
  _exit(1);
 }
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4834148 >> 2] = 0;
 HEAP32[i3 + 7062408 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = -1;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 1;
 HEAP32[i3 + 16 >> 2] = 100;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 2;
 HEAPF64[i3 + 7062416 >> 3] = .5;
 HEAP32[i3 + 7062424 >> 2] = 3;
 HEAP32[i3 + 32 >> 2] = i1;
 i4 = HEAP32[i1 >> 2] | 0;
 HEAP32[i3 + 36 >> 2] = i4;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i3 + 40 >> 2] = i5;
 HEAP32[i3 + 44 >> 2] = 0;
 HEAP32[i3 + 15408 >> 2] = 0;
 HEAP32[i3 + 4834152 >> 2] = 0;
 HEAP32[i3 + 4818296 >> 2] = 0;
 i1 = _malloc(Math_imul(i4 << 1, i5) | 0) | 0;
 HEAP32[i3 + 4834144 >> 2] = i1;
 if (!i1) {
  _arLog(0, 3, 20510, i2 + 8 | 0);
  _exit(1);
 } else {
  HEAP32[i3 + 7062384 >> 2] = 0;
  HEAP32[i3 + 7062388 >> 2] = 0;
  HEAP32[i3 + 7062392 >> 2] = 7;
  HEAP32[i3 + 7062396 >> 2] = 0;
  STACKTOP = i2;
  return i3 | 0;
 }
 return 0;
}

function _sift(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 i7 = i6;
 HEAP32[i7 >> 2] = i1;
 L1 : do if ((i4 | 0) > 1) {
  i8 = 0 - i2 | 0;
  i9 = i1;
  i10 = i4;
  i11 = 1;
  i12 = i1;
  while (1) {
   i13 = i9 + i8 | 0;
   i14 = i10 + -2 | 0;
   i15 = i13 + (0 - (HEAP32[i5 + (i14 << 2) >> 2] | 0)) | 0;
   if ((FUNCTION_TABLE_iii[i3 & 63](i12, i15) | 0) > -1 ? (FUNCTION_TABLE_iii[i3 & 63](i12, i13) | 0) > -1 : 0) {
    i16 = i11;
    break L1;
   }
   i17 = i7 + (i11 << 2) | 0;
   if ((FUNCTION_TABLE_iii[i3 & 63](i15, i13) | 0) > -1) {
    HEAP32[i17 >> 2] = i15;
    i18 = i15;
    i19 = i10 + -1 | 0;
   } else {
    HEAP32[i17 >> 2] = i13;
    i18 = i13;
    i19 = i14;
   }
   i14 = i11 + 1 | 0;
   if ((i19 | 0) <= 1) {
    i16 = i14;
    break L1;
   }
   i9 = i18;
   i10 = i19;
   i11 = i14;
   i12 = HEAP32[i7 >> 2] | 0;
  }
 } else i16 = 1; while (0);
 _cycle(i2, i7, i16);
 STACKTOP = i6;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 1 | 0;
 HEAP8[i4 >> 0] = i2;
 i2 = i1 + 11 | 0;
 i6 = HEAP8[i2 >> 0] | 0;
 i7 = i6 << 24 >> 24 < 0;
 if (i7) {
  i8 = HEAP32[i1 + 4 >> 2] | 0;
  i9 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i8 = i6 & 255;
  i9 = 10;
 }
 if ((i8 | 0) == (i9 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm(i1, i9, 1, i9, i9, 0);
  if ((HEAP8[i2 >> 0] | 0) < 0) i10 = 8; else i10 = 7;
 } else if (i7) i10 = 8; else i10 = 7;
 if ((i10 | 0) == 7) {
  HEAP8[i2 >> 0] = i8 + 1;
  i11 = i1;
 } else if ((i10 | 0) == 8) {
  i10 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 + 4 >> 2] = i8 + 1;
  i11 = i10;
 }
 i10 = i11 + i8 | 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i10, i4);
 HEAP8[i5 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i10 + 1 | 0, i5);
 STACKTOP = i3;
 return;
}

function _setup(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4 + 8 | 0;
 i6 = i4 + 12 | 0;
 i7 = HEAP32[14197] | 0;
 HEAP32[14197] = i7 + 1;
 HEAP32[i6 >> 2] = i7;
 i7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56744, i6) | 0;
 HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i7 + 208 >> 2] = i1;
 HEAP32[i7 + 212 >> 2] = i2;
 i8 = Math_imul(i1 << 2, i2) | 0;
 i2 = i7 + 200 | 0;
 HEAP32[i2 >> 2] = i8;
 i1 = _malloc(i8) | 0;
 i8 = i7 + 196 | 0;
 HEAP32[i8 >> 2] = i1;
 i1 = _malloc((HEAP32[i2 >> 2] | 0) / 4 | 0) | 0;
 i9 = i7 + 204 | 0;
 HEAP32[i9 >> 2] = i1;
 i1 = _arPattCreateHandle() | 0;
 HEAP32[i7 + 220 >> 2] = i1;
 if (!i1) _arLog(0, 3, 44971, i4);
 _setCamera(HEAP32[i6 >> 2] | 0, i3) | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 _arLog(0, 1, 45008, i5);
 _emscripten_asm_const_iiiiiii(0, HEAP32[i7 >> 2] | 0, HEAP32[i8 >> 2] | 0, HEAP32[i2 >> 2] | 0, i7 + 304 | 0, 52128, HEAP32[i9 >> 2] | 0) | 0;
 STACKTOP = i4;
 return HEAP32[i7 >> 2] | 0;
}

function __ZN10emscripten8internal7InvokerIiJiNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiiS8_EiPNS0_11BindingTypeIS8_EUt_E(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i3 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 if (i7 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i5);
 if (i7 >>> 0 < 11) {
  HEAP8[i5 + 11 >> 0] = i7;
  if (!i7) i8 = i5; else {
   i9 = i5;
   i10 = 6;
  }
 } else {
  i3 = i7 + 16 & -16;
  i11 = __Znwm(i3) | 0;
  HEAP32[i5 >> 2] = i11;
  HEAP32[i5 + 8 >> 2] = i3 | -2147483648;
  HEAP32[i5 + 4 >> 2] = i7;
  i9 = i11;
  i10 = 6;
 }
 if ((i10 | 0) == 6) {
  _memcpy(i9 | 0, i6 | 0, i7 | 0) | 0;
  i8 = i9;
 }
 HEAP8[i8 + i7 >> 0] = 0;
 i7 = FUNCTION_TABLE_iii[i1 & 63](i2, i5) | 0;
 if ((HEAP8[i5 + 11 >> 0] | 0) >= 0) {
  STACKTOP = i4;
  return i7 | 0;
 }
 __ZdlPv(HEAP32[i5 >> 2] | 0);
 STACKTOP = i4;
 return i7 | 0;
}

function _arSetPixelFormat(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 L1 : do if (i1) {
  i5 = i1 + 4 | 0;
  if ((HEAP32[i5 >> 2] | 0) != (i2 | 0)) {
   if (i2 >>> 0 >= 15) {
    HEAP32[i4 >> 2] = i2;
    _arLog(0, 3, 17701, i4);
    i6 = -1;
    break;
   }
   HEAP32[i5 >> 2] = i2;
   i5 = _arUtilGetPixelSize(i2) | 0;
   HEAP32[i1 + 8 >> 2] = i5;
   i5 = i1 + 24 | 0;
   i7 = HEAP32[i5 >> 2] | 0;
   if (!(28704 >>> (i2 & 32767) & 1)) switch (i7 | 0) {
   case 1:
    {
     HEAP32[i5 >> 2] = 4;
     i6 = 0;
     break L1;
     break;
    }
   case 4:
    {
     HEAP32[i5 >> 2] = 3;
     i6 = 0;
     break L1;
     break;
    }
   default:
    {
     i6 = 0;
     break L1;
    }
   } else switch (i7 | 0) {
   case 0:
    {
     HEAP32[i5 >> 2] = 1;
     i6 = 0;
     break L1;
     break;
    }
   case 3:
    {
     HEAP32[i5 >> 2] = 4;
     i6 = 0;
     break L1;
     break;
    }
   default:
    {
     i6 = 0;
     break L1;
    }
   }
  } else i6 = 0;
 } else i6 = -1; while (0);
 STACKTOP = i3;
 return i6 | 0;
}

function _start_pass_dpost(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i1 + 432 >> 2] | 0;
 L1 : do switch (i2 | 0) {
 case 0:
  {
   if (!(HEAP32[i1 + 84 >> 2] | 0)) {
    HEAP32[i3 + 4 >> 2] = HEAP32[(HEAP32[i1 + 452 >> 2] | 0) + 4 >> 2];
    break L1;
   }
   HEAP32[i3 + 4 >> 2] = 4;
   i4 = i3 + 12 | 0;
   if (!(HEAP32[i4 >> 2] | 0)) {
    i5 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 28 >> 2] & 31](i1, HEAP32[i3 + 8 >> 2] | 0, 0, HEAP32[i3 + 16 >> 2] | 0, 1) | 0;
    HEAP32[i4 >> 2] = i5;
   }
   break;
  }
 case 3:
  {
   if (!(HEAP32[i3 + 8 >> 2] | 0)) {
    i5 = HEAP32[i1 >> 2] | 0;
    HEAP32[i5 + 20 >> 2] = 4;
    FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i1);
   }
   HEAP32[i3 + 4 >> 2] = 5;
   break;
  }
 case 2:
  {
   if (!(HEAP32[i3 + 8 >> 2] | 0)) {
    i5 = HEAP32[i1 >> 2] | 0;
    HEAP32[i5 + 20 >> 2] = 4;
    FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i1);
   }
   HEAP32[i3 + 4 >> 2] = 6;
   break;
  }
 default:
  {
   i5 = HEAP32[i1 >> 2] | 0;
   HEAP32[i5 + 20 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i1);
  }
 } while (0);
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 4 | 0;
 HEAP32[i4 >> 2] = i2;
 i2 = i1 + 8 | 0;
 i6 = i2 + 3 | 0;
 i7 = HEAP8[i6 >> 0] | 0;
 i8 = i7 << 24 >> 24 < 0;
 if (i8) {
  i9 = HEAP32[i1 + 4 >> 2] | 0;
  i10 = (HEAP32[i2 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i7 & 255;
  i10 = 1;
 }
 if ((i9 | 0) == (i10 | 0)) {
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm(i1, i10, 1, i10, i10, 0, 0);
  if ((HEAP8[i6 >> 0] | 0) < 0) i11 = 8; else i11 = 7;
 } else if (i8) i11 = 8; else i11 = 7;
 if ((i11 | 0) == 7) {
  HEAP8[i6 >> 0] = i9 + 1;
  i12 = i1;
 } else if ((i11 | 0) == 8) {
  i11 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 + 4 >> 2] = i9 + 1;
  i12 = i11;
 }
 i11 = i12 + (i9 << 2) | 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i11, i4);
 HEAP32[i5 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i11 + 4 | 0, i5);
 STACKTOP = i3;
 return;
}

function __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 do if ((i1 | 0) == (i2 | 0)) {
  HEAP32[i3 >> 2] = 4;
  i7 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i3 >> 2] = 4;
   i7 = 0;
   break;
  }
  i8 = ___errno_location() | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  i8 = ___errno_location() | 0;
  HEAP32[i8 >> 2] = 0;
  i8 = _strtoull_l(i1, i6, i4, __ZNSt3__26__clocEv() | 0) | 0;
  i10 = getTempRet0() | 0;
  i11 = ___errno_location() | 0;
  i12 = HEAP32[i11 >> 2] | 0;
  if (!i12) {
   i11 = ___errno_location() | 0;
   HEAP32[i11 >> 2] = i9;
  }
  do if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) if (i10 >>> 0 > 0 | (i10 | 0) == 0 & i8 >>> 0 > 65535 | (i12 | 0) == 34) {
   HEAP32[i3 >> 2] = 4;
   i13 = -1;
   break;
  } else {
   i13 = i8 & 65535;
   break;
  } else {
   HEAP32[i3 >> 2] = 4;
   i13 = 0;
  } while (0);
  i7 = i13;
 } while (0);
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 | 0;
 i6 = i5 >> 2;
 i7 = i6 + 1 | 0;
 if (i7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 i9 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 i10 = i9 >> 1;
 i11 = i9 >> 2 >>> 0 < 536870911 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : 1073741823;
 do if (i11) if (i11 >>> 0 > 1073741823) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i11 << 2) | 0;
  i12 = i10;
  i13 = i10;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i10 = i12 + (i6 << 2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 if ((i5 | 0) > 0) _memcpy(i13 | 0, i4 | 0, i5 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i3 >> 2] = i10 + 4;
 HEAP32[i8 >> 2] = i12 + (i11 << 2);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 | 0;
 i6 = i5 >> 2;
 i7 = i6 + 1 | 0;
 if (i7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 i9 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 i10 = i9 >> 1;
 i11 = i9 >> 2 >>> 0 < 536870911 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : 1073741823;
 do if (i11) if (i11 >>> 0 > 1073741823) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i11 << 2) | 0;
  i12 = i10;
  i13 = i10;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i10 = i12 + (i6 << 2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 if ((i5 | 0) > 0) _memcpy(i13 | 0, i4 | 0, i5 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i3 >> 2] = i10 + 4;
 HEAP32[i8 >> 2] = i12 + (i11 << 2);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 do if ((i1 | 0) == (i2 | 0)) {
  HEAP32[i3 >> 2] = 4;
  i7 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i3 >> 2] = 4;
   i7 = 0;
   break;
  }
  i8 = ___errno_location() | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  i8 = ___errno_location() | 0;
  HEAP32[i8 >> 2] = 0;
  i8 = _strtoull_l(i1, i6, i4, __ZNSt3__26__clocEv() | 0) | 0;
  i10 = getTempRet0() | 0;
  i11 = ___errno_location() | 0;
  i12 = HEAP32[i11 >> 2] | 0;
  if (!i12) {
   i11 = ___errno_location() | 0;
   HEAP32[i11 >> 2] = i9;
  }
  do if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) if (i10 >>> 0 > 0 | (i10 | 0) == 0 & i8 >>> 0 > 4294967295 | (i12 | 0) == 34) {
   HEAP32[i3 >> 2] = 4;
   i13 = -1;
   break;
  } else {
   i13 = i8;
   break;
  } else {
   HEAP32[i3 >> 2] = 4;
   i13 = 0;
  } while (0);
  i7 = i13;
 } while (0);
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 do if ((i1 | 0) == (i2 | 0)) {
  HEAP32[i3 >> 2] = 4;
  i7 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i3 >> 2] = 4;
   i7 = 0;
   break;
  }
  i8 = ___errno_location() | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  i8 = ___errno_location() | 0;
  HEAP32[i8 >> 2] = 0;
  i8 = _strtoull_l(i1, i6, i4, __ZNSt3__26__clocEv() | 0) | 0;
  i10 = getTempRet0() | 0;
  i11 = ___errno_location() | 0;
  i12 = HEAP32[i11 >> 2] | 0;
  if (!i12) {
   i11 = ___errno_location() | 0;
   HEAP32[i11 >> 2] = i9;
  }
  do if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) if (i10 >>> 0 > 0 | (i10 | 0) == 0 & i8 >>> 0 > 4294967295 | (i12 | 0) == 34) {
   HEAP32[i3 >> 2] = 4;
   i13 = -1;
   break;
  } else {
   i13 = i8;
   break;
  } else {
   HEAP32[i3 >> 2] = 4;
   i13 = 0;
  } while (0);
  i7 = i13;
 } while (0);
 STACKTOP = i5;
 return i7 | 0;
}

function _arImageProcLumaHistAndCDFAndMedian(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  i4 = -1;
  return i4 | 0;
 }
 _memset(i1 + 12 | 0, 0, 1024) | 0;
 i5 = Math_imul(HEAP32[i1 + 8 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
 if ((i5 | 0) > 0) {
  i6 = i2 + i5 | 0;
  i7 = i2;
  do {
   i2 = i1 + 12 + ((HEAPU8[i7 >> 0] | 0) << 2) | 0;
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
   i7 = i7 + 1 | 0;
  } while (i7 >>> 0 < i6 >>> 0);
 }
 i6 = 0;
 i7 = 0;
 do {
  i6 = (HEAP32[i1 + 12 + (i7 << 2) >> 2] | 0) + i6 | 0;
  HEAP32[i1 + 1036 + (i7 << 2) >> 2] = i6;
  i7 = i7 + 1 | 0;
 } while ((i7 | 0) != 256);
 i7 = ~~(+(i5 | 0) * .5) >>> 0;
 i5 = 0;
 while (1) {
  i8 = i5 & 255;
  i9 = HEAP32[i1 + 1036 + (i8 << 2) >> 2] | 0;
  if (i9 >>> 0 < i7 >>> 0) i5 = i5 + 1 << 24 >> 24; else break;
 }
 if ((i9 | 0) == (i7 | 0)) {
  i9 = i5;
  do {
   i9 = i9 + 1 << 24 >> 24;
   i5 = i9 & 255;
  } while ((HEAP32[i1 + 1036 + (i5 << 2) >> 2] | 0) == (i7 | 0));
  i10 = i5;
 } else i10 = i8;
 HEAP8[i3 >> 0] = (i10 + i8 | 0) >>> 1;
 i4 = 0;
 return i4 | 0;
}

function __ZN10emscripten8internal7InvokerIiJNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiS8_EPNS0_11BindingTypeIS8_EUt_E(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i2 + 4 | 0;
 i6 = HEAP32[i2 >> 2] | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 if (i6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i4);
 if (i6 >>> 0 < 11) {
  HEAP8[i4 + 11 >> 0] = i6;
  if (!i6) i7 = i4; else {
   i8 = i4;
   i9 = 6;
  }
 } else {
  i2 = i6 + 16 & -16;
  i10 = __Znwm(i2) | 0;
  HEAP32[i4 >> 2] = i10;
  HEAP32[i4 + 8 >> 2] = i2 | -2147483648;
  HEAP32[i4 + 4 >> 2] = i6;
  i8 = i10;
  i9 = 6;
 }
 if ((i9 | 0) == 6) {
  _memcpy(i8 | 0, i5 | 0, i6 | 0) | 0;
  i7 = i8;
 }
 HEAP8[i7 + i6 >> 0] = 0;
 i6 = FUNCTION_TABLE_ii[i1 & 127](i4) | 0;
 if ((HEAP8[i4 + 11 >> 0] | 0) >= 0) {
  STACKTOP = i3;
  return i6 | 0;
 }
 __ZdlPv(HEAP32[i4 >> 2] | 0);
 STACKTOP = i3;
 return i6 | 0;
}

function _strcspn(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i4 = i3;
 i5 = HEAP8[i2 >> 0] | 0;
 L1 : do if (i5 << 24 >> 24 != 0 ? (HEAP8[i2 + 1 >> 0] | 0) != 0 : 0) {
  _memset(i4 | 0, 0, 32) | 0;
  i6 = HEAP8[i2 >> 0] | 0;
  if (i6 << 24 >> 24) {
   i7 = i2;
   i8 = i6;
   do {
    i6 = i8 & 255;
    i9 = i4 + (i6 >>> 5 << 2) | 0;
    HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 1 << (i6 & 31);
    i7 = i7 + 1 | 0;
    i8 = HEAP8[i7 >> 0] | 0;
   } while (i8 << 24 >> 24 != 0);
  }
  i8 = HEAP8[i1 >> 0] | 0;
  if (!(i8 << 24 >> 24)) i10 = i1; else {
   i7 = i1;
   i6 = i8;
   while (1) {
    i8 = i6 & 255;
    if (HEAP32[i4 + (i8 >>> 5 << 2) >> 2] & 1 << (i8 & 31) | 0) {
     i10 = i7;
     break L1;
    }
    i8 = i7 + 1 | 0;
    i6 = HEAP8[i8 >> 0] | 0;
    if (!(i6 << 24 >> 24)) {
     i10 = i8;
     break;
    } else i7 = i8;
   }
  }
 } else i11 = 3; while (0);
 if ((i11 | 0) == 3) i10 = ___strchrnul(i1, i5 << 24 >> 24) | 0;
 STACKTOP = i3;
 return i10 - i1 | 0;
}

function _arSetLabelingThreshMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3 + 8 | 0;
 if (!i1) {
  i5 = -1;
  STACKTOP = i3;
  return i5 | 0;
 }
 i6 = i1 + 7062388 | 0;
 if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 i7 = i1 + 7062408 | 0;
 i8 = HEAP32[i7 >> 2] | 0;
 if (i8 | 0) {
  _arImageProcFinal(i8);
  HEAP32[i7 >> 2] = 0;
 }
 switch (i2 | 0) {
 case 3:
 case 2:
 case 1:
  {
   i8 = _arImageProcInit(HEAP32[i1 + 36 >> 2] | 0, HEAP32[i1 + 40 >> 2] | 0) | 0;
   HEAP32[i7 >> 2] = i8;
   i9 = i2;
   break;
  }
 case 4:
  {
   HEAP32[i1 + 7062404 >> 2] = 1;
   HEAP32[i1 + 7062400 >> 2] = 1;
   i9 = 4;
   break;
  }
 case 0:
  {
   i9 = i2;
   break;
  }
 default:
  {
   _arLog(0, 3, 17532, i3);
   i9 = 0;
  }
 }
 HEAP32[i6 >> 2] = i9;
 if ((HEAP32[i1 >> 2] | 0) != 1) {
  i5 = 0;
  STACKTOP = i3;
  return i5 | 0;
 }
 HEAP32[i4 >> 2] = HEAP32[16 + (i9 << 2) >> 2];
 _arLog(0, 3, 17606, i4);
 i5 = 0;
 STACKTOP = i3;
 return i5 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 11 | 0;
 i7 = HEAP8[i6 >> 0] | 0;
 i8 = i7 << 24 >> 24 < 0;
 if (i8) {
  i9 = HEAP32[i1 + 4 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i7 & 255;
  i10 = 10;
 }
 if ((i10 - i9 | 0) >>> 0 >= i3 >>> 0) {
  if (i3 | 0) {
   if (i8) i11 = HEAP32[i1 >> 2] | 0; else i11 = i1;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i11 + i9 | 0, i2, i3) | 0;
   i8 = i9 + i3 | 0;
   if ((HEAP8[i6 >> 0] | 0) < 0) HEAP32[i1 + 4 >> 2] = i8; else HEAP8[i6 >> 0] = i8;
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i11 + i8 | 0, i5);
  }
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i1, i10, i9 + i3 - i10 | 0, i9, i9, 0, i3, i2);
 STACKTOP = i4;
 return i1 | 0;
}

function ___stdio_read(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4 + 16 | 0;
 i6 = i4;
 HEAP32[i6 >> 2] = i2;
 i7 = i6 + 4 | 0;
 i8 = i1 + 48 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 HEAP32[i7 >> 2] = i3 - ((i9 | 0) != 0 & 1);
 i10 = i1 + 44 | 0;
 HEAP32[i6 + 8 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i6 + 12 >> 2] = i9;
 HEAP32[i5 >> 2] = HEAP32[i1 + 60 >> 2];
 HEAP32[i5 + 4 >> 2] = i6;
 HEAP32[i5 + 8 >> 2] = 2;
 i6 = ___syscall_ret(___syscall145(145, i5 | 0) | 0) | 0;
 if ((i6 | 0) >= 1) {
  i5 = HEAP32[i7 >> 2] | 0;
  if (i6 >>> 0 > i5 >>> 0) {
   i7 = HEAP32[i10 >> 2] | 0;
   i10 = i1 + 4 | 0;
   HEAP32[i10 >> 2] = i7;
   i9 = i7;
   HEAP32[i1 + 8 >> 2] = i9 + (i6 - i5);
   if (!(HEAP32[i8 >> 2] | 0)) i11 = i3; else {
    HEAP32[i10 >> 2] = i9 + 1;
    HEAP8[i2 + (i3 + -1) >> 0] = HEAP8[i9 >> 0] | 0;
    i11 = i3;
   }
  } else i11 = i6;
 } else {
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | i6 & 48 ^ 16;
  i11 = i6;
 }
 STACKTOP = i4;
 return i11 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i3 + 1 | 0;
 HEAP8[i4 >> 0] = i2;
 i2 = i1 + 11 | 0;
 i6 = HEAP8[i2 >> 0] | 0;
 i7 = i6 << 24 >> 24 < 0;
 if (i7) {
  i8 = HEAP32[i1 + 4 >> 2] | 0;
  i9 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i8 = i6 & 255;
  i9 = 10;
 }
 if ((i8 | 0) == (i9 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(i1, i9, 1, i9, i9, 0, 0);
  if ((HEAP8[i2 >> 0] | 0) < 0) i10 = 8; else i10 = 7;
 } else if (i7) i10 = 8; else i10 = 7;
 if ((i10 | 0) == 7) {
  HEAP8[i2 >> 0] = i8 + 1;
  i11 = i1;
 } else if ((i10 | 0) == 8) {
  i10 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 + 4 >> 2] = i8 + 1;
  i11 = i10;
 }
 i10 = i11 + i8 | 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i10, i4);
 HEAP8[i5 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i10 + 1 | 0, i5);
 STACKTOP = i3;
 return;
}

function __ZN6vision5ImageC2ERKS0_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = i1 + 24 | 0;
 i4 = i1 + 28 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 28 >> 2] = 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 HEAP32[i1 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
 HEAP32[i1 + 16 >> 2] = HEAP32[i2 + 16 >> 2];
 HEAP32[i1 + 20 >> 2] = HEAP32[i2 + 20 >> 2];
 i1 = HEAP32[i2 + 24 >> 2] | 0;
 i5 = HEAP32[i2 + 28 >> 2] | 0;
 i2 = i5;
 if (!i5) {
  HEAP32[i3 >> 2] = i1;
  HEAP32[i4 >> 2] = i2;
  return;
 }
 i6 = i5 + 4 | 0;
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
 i6 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i4 >> 2] = i2;
 if (!i6) return;
 i2 = i6 + 4 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = i4 + -1;
 if (i4 | 0) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 255](i6);
 __ZNSt3__219__shared_weak_count14__release_weakEv(i6);
 return;
}

function __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 if ((i1 | 0) == (i2 | 0)) {
  HEAP32[i3 >> 2] = 4;
  i7 = 0;
  i8 = 0;
 } else {
  i9 = ___errno_location() | 0;
  i10 = HEAP32[i9 >> 2] | 0;
  i9 = ___errno_location() | 0;
  HEAP32[i9 >> 2] = 0;
  i9 = _strtoll_l(i1, i6, i4, __ZNSt3__26__clocEv() | 0) | 0;
  i4 = getTempRet0() | 0;
  i1 = ___errno_location() | 0;
  i11 = HEAP32[i1 >> 2] | 0;
  if (!i11) {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = i10;
  }
  if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) if ((i11 | 0) == 34) {
   HEAP32[i3 >> 2] = 4;
   i11 = (i4 | 0) > 0 | (i4 | 0) == 0 & i9 >>> 0 > 0;
   i12 = i11 ? -1 : 0;
   i13 = i11 ? 2147483647 : -2147483648;
  } else {
   i12 = i9;
   i13 = i4;
  } else {
   HEAP32[i3 >> 2] = 4;
   i12 = 0;
   i13 = 0;
  }
  i7 = i13;
  i8 = i12;
 }
 setTempRet0(i7 | 0);
 STACKTOP = i5;
 return i8 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 | 0;
 i6 = i5 >> 2;
 i7 = i6 + 1 | 0;
 if (i7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 i9 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 i10 = i9 >> 1;
 i11 = i9 >> 2 >>> 0 < 536870911 ? (i10 >>> 0 < i7 >>> 0 ? i7 : i10) : 1073741823;
 do if (i11) if (i11 >>> 0 > 1073741823) {
  i10 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i10, 40980);
  HEAP32[i10 >> 2] = 17420;
  ___cxa_throw(i10 | 0, 13288, 107);
 } else {
  i10 = __Znwm(i11 << 2) | 0;
  i12 = i10;
  i13 = i10;
  break;
 } else {
  i12 = 0;
  i13 = 0;
 } while (0);
 i10 = i12 + (i6 << 2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 if ((i5 | 0) > 0) _memcpy(i13 | 0, i4 | 0, i5 | 0) | 0;
 HEAP32[i1 >> 2] = i12;
 HEAP32[i3 >> 2] = i10 + 4;
 HEAP32[i8 >> 2] = i12 + (i11 << 2);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 8 | 0;
 i7 = i6 + 3 | 0;
 i8 = HEAP8[i7 >> 0] | 0;
 i9 = i8 << 24 >> 24 < 0;
 if (i9) {
  i10 = HEAP32[i1 + 4 >> 2] | 0;
  i11 = (HEAP32[i6 >> 2] & 2147483647) + -1 | 0;
 } else {
  i10 = i8 & 255;
  i11 = 1;
 }
 if ((i11 - i10 | 0) >>> 0 >= i3 >>> 0) {
  if (i3 | 0) {
   if (i9) i12 = HEAP32[i1 >> 2] | 0; else i12 = i1;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm(i12 + (i10 << 2) | 0, i2, i3) | 0;
   i9 = i10 + i3 | 0;
   if ((HEAP8[i7 >> 0] | 0) < 0) HEAP32[i1 + 4 >> 2] = i9; else HEAP8[i7 >> 0] = i9;
   HEAP32[i5 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw(i12 + (i9 << 2) | 0, i5);
  }
 } else __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw(i1, i11, i10 + i3 - i11 | 0, i10, i10, 0, i3, i2);
 STACKTOP = i4;
 return i1 | 0;
}

function _ar2MarkerCoord2ScreenCoord(i1, i2, d3, d4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i8 = i7;
 if (!i1) {
  d9 = +HEAPF32[i2 + 28 >> 2] + (+HEAPF32[i2 + 16 >> 2] * d3 + +HEAPF32[i2 + 20 >> 2] * d4);
  d10 = +HEAPF32[i2 + 44 >> 2] + (+HEAPF32[i2 + 32 >> 2] * d3 + +HEAPF32[i2 + 36 >> 2] * d4);
  HEAPF32[i5 >> 2] = (+HEAPF32[i2 + 12 >> 2] + (+HEAPF32[i2 >> 2] * d3 + +HEAPF32[i2 + 4 >> 2] * d4)) / d10;
  HEAPF32[i6 >> 2] = d9 / d10;
  i11 = 0;
  STACKTOP = i7;
  return i11 | 0;
 } else {
  _arUtilMatMuldff(i1 + 8 | 0, i2, i8) | 0;
  d10 = +HEAPF32[i8 + 44 >> 2] + (+HEAPF32[i8 + 32 >> 2] * d3 + +HEAPF32[i8 + 36 >> 2] * d4);
  i11 = (_arParamIdeal2ObservLTf(i1 + 184 | 0, (+HEAPF32[i8 + 12 >> 2] + (+HEAPF32[i8 >> 2] * d3 + +HEAPF32[i8 + 4 >> 2] * d4)) / d10, (+HEAPF32[i8 + 28 >> 2] + (+HEAPF32[i8 + 16 >> 2] * d3 + +HEAPF32[i8 + 20 >> 2] * d4)) / d10, i5, i6) | 0) >> 31;
  STACKTOP = i7;
  return i11 | 0;
 }
 return 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 11 | 0;
 i7 = HEAP8[i6 >> 0] | 0;
 i8 = i7 << 24 >> 24 < 0;
 if (i8) i9 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0; else i9 = 10;
 do if (i9 >>> 0 >= i3 >>> 0) {
  if (i8) i10 = HEAP32[i1 >> 2] | 0; else i10 = i1;
  __ZNSt3__211char_traitsIcE4moveEPcPKcm(i10, i2, i3) | 0;
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i10 + i3 | 0, i5);
  if ((HEAP8[i6 >> 0] | 0) < 0) {
   HEAP32[i1 + 4 >> 2] = i3;
   break;
  } else {
   HEAP8[i6 >> 0] = i3;
   break;
  }
 } else {
  if (i8) i11 = HEAP32[i1 + 4 >> 2] | 0; else i11 = i7 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc(i1, i9, i3 - i9 | 0, i11, 0, i11, i3, i2);
 } while (0);
 STACKTOP = i4;
 return;
}

function _alloc_barray(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = i3 << 7;
 i7 = 999999984 / (i6 >>> 0) | 0;
 if (i6 >>> 0 > 999999984) {
  i8 = HEAP32[i1 >> 2] | 0;
  HEAP32[i8 + 20 >> 2] = 70;
  FUNCTION_TABLE_vi[HEAP32[i8 >> 2] & 255](i1);
 }
 i8 = (i7 | 0) < (i4 | 0) ? i7 : i4;
 HEAP32[i5 + 80 >> 2] = i8;
 i5 = _alloc_small(i1, i2, i4 << 2) | 0;
 if (!i4) return i5 | 0;
 i7 = ~i4;
 i9 = 0;
 i10 = i8;
 while (1) {
  i8 = i4 - i9 | 0;
  i11 = i10;
  i10 = i10 >>> 0 < i8 >>> 0 ? i10 : i8;
  i8 = _alloc_large(i1, i2, Math_imul(i6, i10) | 0) | 0;
  if (!i10) i12 = i9; else {
   i13 = i9 + i7 | 0;
   i14 = ~i11;
   i11 = i13 >>> 0 > i14 >>> 0 ? i13 : i14;
   i14 = i10;
   i13 = i8;
   i8 = i9;
   while (1) {
    HEAP32[i5 + (i8 << 2) >> 2] = i13;
    i14 = i14 + -1 | 0;
    if (!i14) break; else {
     i13 = i13 + (i3 << 7) | 0;
     i8 = i8 + 1 | 0;
    }
   }
   i12 = i9 + -1 - i11 | 0;
  }
  if (i12 >>> 0 >= i4 >>> 0) break; else i9 = i12;
 }
 return i5 | 0;
}

function _jpeg_read_scanlines(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = HEAP32[i1 + 20 >> 2] | 0;
 if ((i6 | 0) != 205) {
  i7 = HEAP32[i1 >> 2] | 0;
  HEAP32[i7 + 20 >> 2] = 20;
  HEAP32[i7 + 24 >> 2] = i6;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i6 = i1 + 140 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i8 = HEAP32[i1 + 116 >> 2] | 0;
 if (i7 >>> 0 >= i8 >>> 0) {
  i9 = HEAP32[i1 >> 2] | 0;
  HEAP32[i9 + 20 >> 2] = 123;
  FUNCTION_TABLE_vii[HEAP32[i9 + 4 >> 2] & 63](i1, -1);
  i10 = 0;
  STACKTOP = i4;
  return i10 | 0;
 }
 i9 = HEAP32[i1 + 8 >> 2] | 0;
 if (i9 | 0) {
  HEAP32[i9 + 4 >> 2] = i7;
  HEAP32[i9 + 8 >> 2] = i8;
  FUNCTION_TABLE_vi[HEAP32[i9 >> 2] & 255](i1);
 }
 HEAP32[i5 >> 2] = 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i1 + 424 >> 2] | 0) + 4 >> 2] & 31](i1, i2, i5, i3);
 i3 = HEAP32[i5 >> 2] | 0;
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i3;
 i10 = i3;
 STACKTOP = i4;
 return i10 | 0;
}

function _wcrtomb(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 do if (i1) {
  if (i2 >>> 0 < 128) {
   HEAP8[i1 >> 0] = i2;
   i4 = 1;
   break;
  }
  i3 = (___pthread_self_306() | 0) + 188 | 0;
  if (!(HEAP32[HEAP32[i3 >> 2] >> 2] | 0)) if ((i2 & -128 | 0) == 57216) {
   HEAP8[i1 >> 0] = i2;
   i4 = 1;
   break;
  } else {
   i3 = ___errno_location() | 0;
   HEAP32[i3 >> 2] = 84;
   i4 = -1;
   break;
  }
  if (i2 >>> 0 < 2048) {
   HEAP8[i1 >> 0] = i2 >>> 6 | 192;
   HEAP8[i1 + 1 >> 0] = i2 & 63 | 128;
   i4 = 2;
   break;
  }
  if (i2 >>> 0 < 55296 | (i2 & -8192 | 0) == 57344) {
   HEAP8[i1 >> 0] = i2 >>> 12 | 224;
   HEAP8[i1 + 1 >> 0] = i2 >>> 6 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i2 & 63 | 128;
   i4 = 3;
   break;
  }
  if ((i2 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[i1 >> 0] = i2 >>> 18 | 240;
   HEAP8[i1 + 1 >> 0] = i2 >>> 12 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i2 >>> 6 & 63 | 128;
   HEAP8[i1 + 3 >> 0] = i2 & 63 | 128;
   i4 = 4;
   break;
  } else {
   i3 = ___errno_location() | 0;
   HEAP32[i3 >> 2] = 84;
   i4 = -1;
   break;
  }
 } else i4 = 1; while (0);
 return i4 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if (i2 | 0) {
  i6 = i1 + 11 | 0;
  i7 = HEAP8[i6 >> 0] | 0;
  if (i7 << 24 >> 24 < 0) {
   i8 = HEAP32[i1 + 4 >> 2] | 0;
   i9 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   i8 = i7 & 255;
   i9 = 10;
  }
  if ((i9 - i8 | 0) >>> 0 < i2 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(i1, i9, i8 + i2 - i9 | 0, i8, i8, 0, 0);
   i10 = HEAP8[i6 >> 0] | 0;
  } else i10 = i7;
  if (i10 << 24 >> 24 < 0) i11 = HEAP32[i1 >> 2] | 0; else i11 = i1;
  __ZNSt3__211char_traitsIcE6assignEPcmc(i11 + i8 | 0, i2, i3) | 0;
  i3 = i8 + i2 | 0;
  if ((HEAP8[i6 >> 0] | 0) < 0) HEAP32[i1 + 4 >> 2] = i3; else HEAP8[i6 >> 0] = i3;
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i11 + i3 | 0, i5);
 }
 STACKTOP = i4;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 8 | 0;
 i7 = i6 + 3 | 0;
 i8 = HEAP8[i7 >> 0] | 0;
 i9 = i8 << 24 >> 24 < 0;
 if (i9) i10 = (HEAP32[i6 >> 2] & 2147483647) + -1 | 0; else i10 = 1;
 do if (i10 >>> 0 >= i3 >>> 0) {
  if (i9) i11 = HEAP32[i1 >> 2] | 0; else i11 = i1;
  __ZNSt3__211char_traitsIwE4moveEPwPKwm(i11, i2, i3) | 0;
  HEAP32[i5 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw(i11 + (i3 << 2) | 0, i5);
  if ((HEAP8[i7 >> 0] | 0) < 0) {
   HEAP32[i1 + 4 >> 2] = i3;
   break;
  } else {
   HEAP8[i7 >> 0] = i3;
   break;
  }
 } else {
  if (i9) i12 = HEAP32[i1 + 4 >> 2] | 0; else i12 = i8 & 255;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw(i1, i10, i3 - i10 | 0, i12, 0, i12, i3, i2);
 } while (0);
 STACKTOP = i4;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbC2ILm4096EEERNS0_5arenaIXT_EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EEC2ERNS0_5arenaILm4096EEE(i4, i2);
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = HEAP32[i4 >> 2];
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i4, i2);
 __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEC2EmRKS6_RKS7_(i1 + 16 | 0, i4);
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i4, i2);
 __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEEC2EmRKS8_RKS9_(i1 + 32 | 0, i4);
 STACKTOP = i3;
 return;
}

function ___newlocale(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4;
 L1 : do if (!(___loc_is_allocated(i3) | 0)) {
  i6 = (i3 | 0) != 0;
  i7 = 0;
  i8 = 0;
  do {
   i9 = 1 << i8 & i1;
   if (i6 & (i9 | 0) == 0) i10 = HEAP32[i3 + (i8 << 2) >> 2] | 0; else i10 = ___get_locale(i8, (i9 | 0) == 0 ? 58932 : i2) | 0;
   i7 = i7 + ((i10 | 0) != 0 & 1) | 0;
   HEAP32[i5 + (i8 << 2) >> 2] = i10;
   i8 = i8 + 1 | 0;
  } while ((i8 | 0) != 6);
  switch (i7 & 2147483647 | 0) {
  case 0:
   {
    i11 = 56856;
    break L1;
    break;
   }
  case 1:
   {
    if ((HEAP32[i5 >> 2] | 0) == 13740) {
     i11 = 13768;
     break L1;
    }
    break;
   }
  default:
   {}
  }
  i11 = i3;
 } else {
  i8 = 0;
  do {
   if (1 << i8 & i1 | 0) {
    i6 = ___get_locale(i8, i2) | 0;
    HEAP32[i3 + (i8 << 2) >> 2] = i6;
   }
   i8 = i8 + 1 | 0;
  } while ((i8 | 0) != 6);
  i11 = i3;
 } while (0);
 STACKTOP = i4;
 return i11 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i2;
 i6 = i4;
 i7 = i3 - i5 | 0;
 if (i7 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i7 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i7;
  i8 = i1;
 } else {
  i9 = i7 + 16 & -16;
  i10 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i9) | 0;
  HEAP32[i1 >> 2] = i10;
  HEAP32[i1 + 8 >> 2] = i9 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i7;
  i8 = i10;
 }
 i10 = i3 - i5 | 0;
 i5 = i2;
 i2 = i8;
 while (1) {
  if ((i5 | 0) == (i3 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i5);
  i5 = i5 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i6 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i8 + i10 | 0, i6);
 STACKTOP = i4;
 return;
}

function __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i4;
 HEAP32[i1 + 8 >> 2] = i5;
 HEAP32[i1 + 16 >> 2] = i7;
 i10 = Math_imul(i6, i5) | 0;
 HEAP32[i1 + 20 >> 2] = i10;
 i10 = i1 + 24 | 0;
 HEAP32[i10 >> 2] = i2;
 i5 = __Znwm(16) | 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 >> 2] = 13592;
 HEAP32[i5 + 12 >> 2] = i2;
 HEAP32[i1 + 28 >> 2] = i5;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i9 + 4 >> 2] = i2;
 __ZNSt3__210shared_ptrIhE18__enable_weak_thisEz(i10, i9);
 if ((i6 | 0) >= 0) {
  i11 = i6;
  i12 = i1 + 12 | 0;
  HEAP32[i12 >> 2] = i11;
  STACKTOP = i8;
  return;
 }
 i11 = Math_imul(Math_imul(i7, i4) | 0, __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE(i3) | 0) | 0;
 i12 = i1 + 12 | 0;
 HEAP32[i12 >> 2] = i11;
 STACKTOP = i8;
 return;
}

function _jpeg_CreateDecompress(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 if ((i2 | 0) != 62) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 12;
  HEAP32[i4 + 24 >> 2] = 62;
  HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 if ((i3 | 0) == 464) i5 = i1; else {
  i2 = HEAP32[i1 >> 2] | 0;
  HEAP32[i2 + 20 >> 2] = 21;
  HEAP32[i2 + 24 >> 2] = 464;
  HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] = i3;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
  i5 = i1;
 }
 i3 = HEAP32[i1 >> 2] | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 _memset(i1 + 4 | 0, 0, 460) | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 + 16 >> 2] = 1;
 _jinit_memory_mgr(i5);
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 304 >> 2] = 0;
 i5 = i1 + 164 | 0;
 i4 = i5 + 48 | 0;
 do {
  HEAP32[i5 >> 2] = 0;
  i5 = i5 + 4 | 0;
 } while ((i5 | 0) < (i4 | 0));
 _jinit_marker_reader(i1);
 _jinit_input_controller(i1);
 HEAP32[i1 + 20 >> 2] = 200;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 11 | 0;
 i7 = HEAP8[i6 >> 0] | 0;
 i8 = i7 << 24 >> 24 < 0;
 if (i8) {
  i9 = HEAP32[i1 + 4 >> 2] | 0;
  i10 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i7 & 255;
  i10 = 10;
 }
 if ((i10 - i9 | 0) >>> 0 >= i3 >>> 0) {
  if (i3 | 0) {
   if (i8) i11 = HEAP32[i1 >> 2] | 0; else i11 = i1;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i11 + i9 | 0, i2, i3) | 0;
   i8 = i9 + i3 | 0;
   if ((HEAP8[i6 >> 0] | 0) < 0) HEAP32[i1 + 4 >> 2] = i8; else HEAP8[i6 >> 0] = i8;
   HEAP8[i5 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc(i11 + i8 | 0, i5);
  }
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc(i1, i10, i9 + i3 - i10 | 0, i9, i9, 0, i3, i2);
 STACKTOP = i4;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 L1 : do if ((i1 | 0) != (i2 | 0)) {
  i3 = HEAP8[i1 >> 0] | 0;
  if (i3 << 24 >> 24 != 95) {
   if (((i3 << 24 >> 24) + -48 | 0) >>> 0 >= 10) {
    i4 = i1;
    break;
   }
   i3 = i1;
   while (1) {
    i5 = i3 + 1 | 0;
    if ((i5 | 0) == (i2 | 0)) {
     i4 = i2;
     break L1;
    }
    if (((HEAP8[i5 >> 0] | 0) + -48 | 0) >>> 0 < 10) i3 = i5; else {
     i4 = i5;
     break L1;
    }
   }
  }
  i3 = i1 + 1 | 0;
  if ((i3 | 0) != (i2 | 0)) {
   i5 = HEAP8[i3 >> 0] | 0;
   if (((i5 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
    i4 = i1 + 2 | 0;
    break;
   }
   if (i5 << 24 >> 24 == 95) {
    i5 = i1 + 2 | 0;
    while (1) {
     if ((i5 | 0) == (i2 | 0)) {
      i4 = i1;
      break L1;
     }
     i6 = HEAP8[i5 >> 0] | 0;
     if (((i6 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     i5 = i5 + 1 | 0;
    }
    return (i6 << 24 >> 24 == 95 ? i5 + 1 | 0 : i1) | 0;
   } else i4 = i1;
  } else i4 = i1;
 } else i4 = i1; while (0);
 return i4 | 0;
}

function __ZN6vision11ScopedTimerD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i3 = i2;
 i4 = i2 + 24 | 0;
 __ZN6vision5Timer4stopEv(i1);
 if ((HEAP8[55808] | 0) == 0 ? ___cxa_guard_acquire(55808) | 0 : 0) __ZN6vision6LoggerC2Ev(56732);
 __ZN6vision15get_pretty_timeEv(i4);
 i5 = i4 + 11 | 0;
 i6 = (HEAP8[i5 >> 0] | 0) < 0 ? HEAP32[i4 >> 2] | 0 : i4;
 i7 = i1 + 16 | 0;
 i8 = i7 + 11 | 0;
 if ((HEAP8[i8 >> 0] | 0) < 0) i9 = HEAP32[i7 >> 2] | 0; else i9 = i7;
 d10 = +__ZNK6vision5Timer19duration_in_secondsEv(i1) * 1.0e3;
 HEAP32[i3 >> 2] = 33683;
 HEAP32[i3 + 4 >> 2] = i6;
 HEAP32[i3 + 8 >> 2] = 33691;
 HEAP32[i3 + 12 >> 2] = i9;
 HEAPF64[i3 + 16 >> 3] = d10;
 __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz(56732, 8, 33656, i3);
 if ((HEAP8[i5 >> 0] | 0) < 0) __ZdlPv(HEAP32[i4 >> 2] | 0);
 if ((HEAP8[i8 >> 0] | 0) >= 0) {
  STACKTOP = i2;
  return;
 }
 __ZdlPv(HEAP32[i7 >> 2] | 0);
 STACKTOP = i2;
 return;
}

function _alloc_sarray(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = 999999984 / (i3 >>> 0) | 0;
 if (i3 >>> 0 > 999999984) {
  i7 = HEAP32[i1 >> 2] | 0;
  HEAP32[i7 + 20 >> 2] = 70;
  FUNCTION_TABLE_vi[HEAP32[i7 >> 2] & 255](i1);
 }
 i7 = (i6 | 0) < (i4 | 0) ? i6 : i4;
 HEAP32[i5 + 80 >> 2] = i7;
 i5 = _alloc_small(i1, i2, i4 << 2) | 0;
 if (!i4) return i5 | 0;
 i6 = ~i4;
 i8 = 0;
 i9 = i7;
 while (1) {
  i7 = i4 - i8 | 0;
  i10 = i9;
  i9 = i9 >>> 0 < i7 >>> 0 ? i9 : i7;
  i7 = _alloc_large(i1, i2, Math_imul(i9, i3) | 0) | 0;
  if (!i9) i11 = i8; else {
   i12 = i8 + i6 | 0;
   i13 = ~i10;
   i10 = i12 >>> 0 > i13 >>> 0 ? i12 : i13;
   i13 = i9;
   i12 = i7;
   i7 = i8;
   while (1) {
    HEAP32[i5 + (i7 << 2) >> 2] = i12;
    i13 = i13 + -1 | 0;
    if (!i13) break; else {
     i12 = i12 + i3 | 0;
     i7 = i7 + 1 | 0;
    }
   }
   i11 = i8 + -1 - i10 | 0;
  }
  if (i11 >>> 0 >= i4 >>> 0) break; else i8 = i11;
 }
 return i5 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 i12 = i1 + 8 | 0;
 i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i12) | 0;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 i3 = HEAP8[i13 + 8 + 3 >> 0] | 0;
 i2 = i3 << 24 >> 24 < 0;
 i12 = i2 ? HEAP32[i13 >> 2] | 0 : i13;
 i14 = i12 + ((i2 ? HEAP32[i13 + 4 >> 2] | 0 : i3 & 255) << 2) | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i9, i8, i4, i5, i6, i12, i14) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 11 | 0;
 i7 = HEAP8[i6 >> 0] | 0;
 i8 = i7 << 24 >> 24 < 0;
 if (i8) i9 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0; else i9 = 10;
 do if (i9 >>> 0 >= i3 >>> 0) {
  if (i8) i10 = HEAP32[i1 >> 2] | 0; else i10 = i1;
  __ZNSt3__211char_traitsIcE4moveEPcPKcm(i10, i2, i3) | 0;
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i10 + i3 | 0, i5);
  if ((HEAP8[i6 >> 0] | 0) < 0) {
   HEAP32[i1 + 4 >> 2] = i3;
   break;
  } else {
   HEAP8[i6 >> 0] = i3;
   break;
  }
 } else {
  if (i8) i11 = HEAP32[i1 + 4 >> 2] | 0; else i11 = i7 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc(i1, i9, i3 - i9 | 0, i11, 0, i11, i3, i2);
 } while (0);
 STACKTOP = i4;
 return i1 | 0;
}

function __ZN6vision4NodeILi96EED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i2 = i1 + 104 | 0;
 i3 = i1 + 108 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 i6 = i5;
 if ((i4 | 0) == (i5 | 0)) i7 = i6; else {
  i8 = 0;
  i9 = i6;
  i10 = i5;
  i5 = i6;
  i6 = i4;
  while (1) {
   i4 = HEAP32[i9 + (i8 << 2) >> 2] | 0;
   if (!i4) {
    i11 = i10;
    i12 = i10;
    i13 = i6;
    i14 = i5;
   } else {
    __ZN6vision4NodeILi96EED2Ev(i4);
    __ZdlPv(i4);
    i4 = HEAP32[i2 >> 2] | 0;
    i15 = i4;
    i11 = i15;
    i12 = i4;
    i13 = HEAP32[i3 >> 2] | 0;
    i14 = i15;
   }
   i8 = i8 + 1 | 0;
   if (i8 >>> 0 >= i13 - i12 >> 2 >>> 0) {
    i7 = i14;
    break;
   } else {
    i9 = i11;
    i10 = i12;
    i5 = i14;
    i6 = i13;
   }
  }
 }
 i13 = HEAP32[i1 + 116 >> 2] | 0;
 if (!i13) i16 = i7; else {
  HEAP32[i1 + 120 >> 2] = i13;
  __ZdlPv(i13);
  i16 = HEAP32[i2 >> 2] | 0;
 }
 if (!i16) return;
 HEAP32[i3 >> 2] = i16;
 __ZdlPv(i16);
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 i12 = i1 + 8 | 0;
 i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i12) | 0;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 i3 = HEAP8[i13 + 11 >> 0] | 0;
 i2 = i3 << 24 >> 24 < 0;
 i12 = i2 ? HEAP32[i13 >> 2] | 0 : i13;
 i14 = i12 + (i2 ? HEAP32[i13 + 4 >> 2] | 0 : i3 & 255) | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i9, i8, i4, i5, i6, i12, i14) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZN6vision11ScopedTimerC2EPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAPF64[i1 >> 3] = -1.0;
 HEAPF64[i1 + 8 >> 3] = -1.0;
 i5 = i1 + 16 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 i6 = _strlen(i2) | 0;
 if (i6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i5);
 if (i6 >>> 0 < 11) {
  HEAP8[i5 + 11 >> 0] = i6;
  if (!i6) i7 = i5; else {
   i8 = i5;
   i9 = 6;
  }
 } else {
  i10 = i6 + 16 & -16;
  i11 = __Znwm(i10) | 0;
  HEAP32[i5 >> 2] = i11;
  HEAP32[i1 + 24 >> 2] = i10 | -2147483648;
  HEAP32[i1 + 20 >> 2] = i6;
  i8 = i11;
  i9 = 6;
 }
 if ((i9 | 0) == 6) {
  _memcpy(i8 | 0, i2 | 0, i6 | 0) | 0;
  i7 = i8;
 }
 HEAP8[i7 + i6 >> 0] = 0;
 _gettimeofday(i4 | 0, 0) | 0;
 HEAPF64[i1 >> 3] = +(HEAP32[i4 + 4 >> 2] | 0) * 1.0e-06 + +(HEAP32[i4 >> 2] | 0);
 STACKTOP = i3;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i3 - i2 >> 2;
 if (i6 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 do if (i6 >>> 0 >= 2) {
  i7 = i6 + 4 & -4;
  if (i7 >>> 0 > 1073741823) _abort(); else {
   i8 = __Znwm(i7 << 2) | 0;
   HEAP32[i1 >> 2] = i8;
   HEAP32[i1 + 8 >> 2] = i7 | -2147483648;
   HEAP32[i1 + 4 >> 2] = i6;
   i9 = i8;
   break;
  }
 } else {
  HEAP8[i1 + 8 + 3 >> 0] = i6;
  i9 = i1;
 } while (0);
 i1 = i2;
 i2 = i9;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  __ZNSt3__211char_traitsIwE6assignERwRKw(i2, i1);
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 }
 HEAP32[i5 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i2, i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i3 - i2 >> 2;
 if (i6 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 do if (i6 >>> 0 >= 2) {
  i7 = i6 + 4 & -4;
  if (i7 >>> 0 > 1073741823) _abort(); else {
   i8 = __Znwm(i7 << 2) | 0;
   HEAP32[i1 >> 2] = i8;
   HEAP32[i1 + 8 >> 2] = i7 | -2147483648;
   HEAP32[i1 + 4 >> 2] = i6;
   i9 = i8;
   break;
  }
 } else {
  HEAP8[i1 + 8 + 3 >> 0] = i6;
  i9 = i1;
 } while (0);
 i1 = i2;
 i2 = i9;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  __ZNSt3__211char_traitsIwE6assignERwRKw(i2, i1);
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 }
 HEAP32[i5 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i2, i5);
 STACKTOP = i4;
 return;
}

function _color_quantize(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i6 = HEAP32[i1 + 112 >> 2] | 0;
 i7 = HEAP32[i1 + 120 >> 2] | 0;
 if ((i4 | 0) < 1 | (i6 | 0) == 0) return;
 if ((i7 | 0) <= 0) {
  i1 = 0;
  do {
   _memset(HEAP32[i3 + (i1 << 2) >> 2] | 0, 0, i6 | 0) | 0;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != (i4 | 0));
  return;
 }
 i1 = 0;
 do {
  i8 = i6;
  i9 = HEAP32[i3 + (i1 << 2) >> 2] | 0;
  i10 = HEAP32[i2 + (i1 << 2) >> 2] | 0;
  while (1) {
   i11 = 0;
   i12 = 0;
   i13 = i10;
   while (1) {
    i12 = i12 + (HEAPU8[(HEAP32[i5 + (i11 << 2) >> 2] | 0) + (HEAPU8[i13 >> 0] | 0) >> 0] | 0) | 0;
    i11 = i11 + 1 | 0;
    if ((i11 | 0) == (i7 | 0)) break; else i13 = i13 + 1 | 0;
   }
   HEAP8[i9 >> 0] = i12;
   i8 = i8 + -1 | 0;
   if (!i8) break; else {
    i9 = i9 + 1 | 0;
    i10 = i10 + i7 | 0;
   }
  }
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != (i4 | 0));
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 if ((1073741807 - i2 | 0) >>> 0 < i3 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 i8 = i1 + 8 | 0;
 if ((HEAP8[i8 + 3 >> 0] | 0) < 0) i9 = HEAP32[i1 >> 2] | 0; else i9 = i1;
 if (i2 >>> 0 < 536870887) {
  i10 = i3 + i2 | 0;
  i3 = i2 << 1;
  i11 = i10 >>> 0 < i3 >>> 0 ? i3 : i10;
  i10 = i11 >>> 0 < 2 ? 2 : i11 + 4 & -4;
  if (i10 >>> 0 > 1073741823) _abort(); else i12 = i10;
 } else i12 = 1073741807;
 i10 = __Znwm(i12 << 2) | 0;
 if (i5 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i10, i9, i5) | 0;
 i11 = i4 - i6 - i5 | 0;
 if (i11 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm(i10 + (i5 << 2) + (i7 << 2) | 0, i9 + (i5 << 2) + (i6 << 2) | 0, i11) | 0;
 if ((i2 | 0) != 1) __ZdlPv(i9);
 HEAP32[i1 >> 2] = i10;
 HEAP32[i8 >> 2] = i12 | -2147483648;
 return;
}

function _ar2GetImageValue(i1, i2, i3, d4, d5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 if ((_ar2ScreenCoord2MarkerCoord(i1, i2, d4, d5, i8, i9) | 0) < 0) {
  i10 = -1;
  STACKTOP = i7;
  return i10 | 0;
 }
 d5 = +HEAPF32[i3 + 12 >> 2];
 i2 = ~~(+HEAPF32[i8 >> 2] * d5 / 25.399999618530273 + .5);
 if ((i2 | 0) < 0) {
  i10 = -1;
  STACKTOP = i7;
  return i10 | 0;
 }
 i8 = HEAP32[i3 + 4 >> 2] | 0;
 if ((i8 | 0) <= (i2 | 0)) {
  i10 = -1;
  STACKTOP = i7;
  return i10 | 0;
 }
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 i11 = ~~(+(i1 | 0) - d5 * +HEAPF32[i9 >> 2] / 25.399999618530273 + .5);
 if (!((i11 | 0) > -1 & (i1 | 0) > (i11 | 0))) {
  i10 = -1;
  STACKTOP = i7;
  return i10 | 0;
 }
 i1 = (Math_imul(i8, i11) | 0) + i2 | 0;
 HEAP8[i6 >> 0] = HEAP8[(HEAP32[i3 >> 2] | 0) + i1 >> 0] | 0;
 i10 = 0;
 STACKTOP = i7;
 return i10 | 0;
}

function _tmpfile() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i2 = i1 + 48 | 0;
 i3 = i1 + 40 | 0;
 i4 = i1 + 24 | 0;
 i5 = i1;
 HEAP32[i5 >> 2] = HEAP32[1620];
 HEAP32[i5 + 4 >> 2] = HEAP32[1621];
 HEAP32[i5 + 8 >> 2] = HEAP32[1622];
 HEAP32[i5 + 12 >> 2] = HEAP32[1623];
 HEAP32[i5 + 16 >> 2] = HEAP32[1624];
 i6 = i5 + 13 | 0;
 i7 = i5;
 i5 = 0;
 while (1) {
  ___randname(i6) | 0;
  HEAP32[i4 >> 2] = i7;
  HEAP32[i4 + 4 >> 2] = 32962;
  HEAP32[i4 + 8 >> 2] = 384;
  i8 = ___syscall_ret(___syscall5(5, i4 | 0) | 0) | 0;
  i5 = i5 + 1 | 0;
  if ((i8 | 0) > -1) {
   i9 = 4;
   break;
  }
  if (i5 >>> 0 >= 100) {
   i10 = 0;
   break;
  }
 }
 if ((i9 | 0) == 4) {
  HEAP32[i3 >> 2] = i7;
  ___syscall10(10, i3 | 0) | 0;
  i3 = ___fdopen(i8, 46779) | 0;
  if (!i3) {
   HEAP32[i2 >> 2] = i8;
   ___syscall6(6, i2 | 0) | 0;
   i10 = 0;
  } else i10 = i3;
 }
 STACKTOP = i1;
 return i10 | 0;
}

function _vsnprintf(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 i6 = i5 + 144 | 0;
 i7 = i5;
 _memcpy(i7 | 0, 11696, 144) | 0;
 if ((i2 + -1 | 0) >>> 0 > 2147483646) if (!i2) {
  i8 = i6;
  i9 = 1;
  i10 = 4;
 } else {
  i6 = ___errno_location() | 0;
  HEAP32[i6 >> 2] = 75;
  i11 = -1;
 } else {
  i8 = i1;
  i9 = i2;
  i10 = 4;
 }
 if ((i10 | 0) == 4) {
  i10 = -2 - i8 | 0;
  i2 = i9 >>> 0 > i10 >>> 0 ? i10 : i9;
  HEAP32[i7 + 48 >> 2] = i2;
  i9 = i7 + 20 | 0;
  HEAP32[i9 >> 2] = i8;
  HEAP32[i7 + 44 >> 2] = i8;
  i10 = i8 + i2 | 0;
  i8 = i7 + 16 | 0;
  HEAP32[i8 >> 2] = i10;
  HEAP32[i7 + 28 >> 2] = i10;
  i10 = _vfprintf(i7, i3, i4) | 0;
  if (!i2) i11 = i10; else {
   i2 = HEAP32[i9 >> 2] | 0;
   HEAP8[i2 + (((i2 | 0) == (HEAP32[i8 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
   i11 = i10;
  }
 }
 STACKTOP = i5;
 return i11 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 if ((-17 - i2 | 0) >>> 0 < i3 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) i7 = HEAP32[i1 >> 2] | 0; else i7 = i1;
 if (i2 >>> 0 < 2147483623) {
  i8 = i3 + i2 | 0;
  i3 = i2 << 1;
  i9 = i8 >>> 0 < i3 >>> 0 ? i3 : i8;
  i10 = i9 >>> 0 < 11 ? 11 : i9 + 16 & -16;
 } else i10 = -17;
 i9 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i10) | 0;
 if (i5 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i9, i7, i5) | 0;
 i8 = i4 - i5 | 0;
 if (i8 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i9 + i5 + i6 | 0, i7 + i5 | 0, i8) | 0;
 if ((i2 | 0) != 10) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i7);
 HEAP32[i1 >> 2] = i9;
 HEAP32[i1 + 8 >> 2] = i10 | -2147483648;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i2;
 i6 = i4;
 i7 = i3 - i5 | 0;
 if (i7 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i7 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i7;
  i8 = i1;
 } else {
  i9 = i7 + 16 & -16;
  i10 = __Znwm(i9) | 0;
  HEAP32[i1 >> 2] = i10;
  HEAP32[i1 + 8 >> 2] = i9 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i7;
  i8 = i10;
 }
 i10 = i3 - i5 | 0;
 i5 = i2;
 i2 = i8;
 while (1) {
  if ((i5 | 0) == (i3 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i5);
  i5 = i5 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i6 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i8 + i10 | 0, i6);
 STACKTOP = i4;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i2;
 i6 = i4;
 i7 = i3 - i5 | 0;
 if (i7 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i7 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i7;
  i8 = i1;
 } else {
  i9 = i7 + 16 & -16;
  i10 = __Znwm(i9) | 0;
  HEAP32[i1 >> 2] = i10;
  HEAP32[i1 + 8 >> 2] = i9 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i7;
  i8 = i10;
 }
 i10 = i3 - i5 | 0;
 i5 = i2;
 i2 = i8;
 while (1) {
  if ((i5 | 0) == (i3 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i2, i5);
  i5 = i5 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i6 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i8 + i10 | 0, i6);
 STACKTOP = i4;
 return;
}

function _memset(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = i1 + i3 | 0;
 i2 = i2 & 255;
 if ((i3 | 0) >= 67) {
  while (i1 & 3) {
   HEAP8[i1 >> 0] = i2;
   i1 = i1 + 1 | 0;
  }
  i5 = i4 & -4 | 0;
  i6 = i2 | i2 << 8 | i2 << 16 | i2 << 24;
  i7 = i5 - 64 | 0;
  while ((i1 | 0) <= (i7 | 0)) {
   HEAP32[i1 >> 2] = i6;
   HEAP32[i1 + 4 >> 2] = i6;
   HEAP32[i1 + 8 >> 2] = i6;
   HEAP32[i1 + 12 >> 2] = i6;
   HEAP32[i1 + 16 >> 2] = i6;
   HEAP32[i1 + 20 >> 2] = i6;
   HEAP32[i1 + 24 >> 2] = i6;
   HEAP32[i1 + 28 >> 2] = i6;
   HEAP32[i1 + 32 >> 2] = i6;
   HEAP32[i1 + 36 >> 2] = i6;
   HEAP32[i1 + 40 >> 2] = i6;
   HEAP32[i1 + 44 >> 2] = i6;
   HEAP32[i1 + 48 >> 2] = i6;
   HEAP32[i1 + 52 >> 2] = i6;
   HEAP32[i1 + 56 >> 2] = i6;
   HEAP32[i1 + 60 >> 2] = i6;
   i1 = i1 + 64 | 0;
  }
  while ((i1 | 0) < (i5 | 0)) {
   HEAP32[i1 >> 2] = i6;
   i1 = i1 + 4 | 0;
  }
 }
 while ((i1 | 0) < (i4 | 0)) {
  HEAP8[i1 >> 0] = i2;
  i1 = i1 + 1 | 0;
 }
 return i4 - i3 | 0;
}

function __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 switch (i1 | 0) {
 case 2:
  {
   i4 = 4;
   STACKTOP = i2;
   return i4 | 0;
  }
 case 1:
  {
   i4 = i1;
   STACKTOP = i2;
   return i4 | 0;
  }
 default:
  {
   i4 = ___cxa_allocate_exception(16) | 0;
   HEAP32[i3 >> 2] = 0;
   HEAP32[i3 + 4 >> 2] = 0;
   HEAP32[i3 + 8 >> 2] = 0;
   i2 = __Znwm(32) | 0;
   HEAP32[i3 >> 2] = i2;
   HEAP32[i3 + 8 >> 2] = -2147483616;
   HEAP32[i3 + 4 >> 2] = 18;
   i1 = i2;
   i5 = 33292;
   i6 = i1 + 18 | 0;
   do {
    HEAP8[i1 >> 0] = HEAP8[i5 >> 0] | 0;
    i1 = i1 + 1 | 0;
    i5 = i5 + 1 | 0;
   } while ((i1 | 0) < (i6 | 0));
   HEAP8[i2 + 18 >> 0] = 0;
   HEAP32[i4 >> 2] = 13516;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4 + 4 | 0, i3);
   ___cxa_throw(i4 | 0, 11016, 5);
  }
 }
 return 0;
}

function _threadInit(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i5 = i4;
 i6 = _malloc(144) | 0;
 if (!i6) {
  i7 = 0;
  STACKTOP = i4;
  return i7 | 0;
 }
 HEAP32[i6 >> 2] = i1;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 + 140 >> 2] = i2;
 i2 = i6 + 16 | 0;
 _pthread_mutex_init(i2, 0) | 0;
 i1 = i6 + 44 | 0;
 _pthread_cond_init(i1 | 0, 0) | 0;
 i8 = i6 + 92 | 0;
 _pthread_cond_init(i8 | 0, 0) | 0;
 _pthread_attr_init(i5 | 0) | 0;
 _pthread_attr_setdetachstate(i5 | 0, 1) | 0;
 i9 = _pthread_create(i4 + 44 | 0, i5 | 0, i3 | 0, i6 | 0) | 0;
 _pthread_attr_destroy(i5 | 0) | 0;
 if (!i9) {
  i7 = i6;
  STACKTOP = i4;
  return i7 | 0;
 }
 _pthread_mutex_destroy(i2) | 0;
 _pthread_cond_destroy(i1 | 0) | 0;
 _pthread_cond_destroy(i8 | 0) | 0;
 _free(i6);
 i7 = 0;
 STACKTOP = i4;
 return i7 | 0;
}

function _pass2_no_dither(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i5 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i6 = HEAP32[i1 + 112 >> 2] | 0;
 if ((i4 | 0) < 1 | (i6 | 0) == 0) return;
 i7 = 0;
 do {
  i8 = i6;
  i9 = HEAP32[i3 + (i7 << 2) >> 2] | 0;
  i10 = HEAP32[i2 + (i7 << 2) >> 2] | 0;
  while (1) {
   i11 = (HEAPU8[i10 >> 0] | 0) >>> 3;
   i12 = (HEAPU8[i10 + 1 >> 0] | 0) >>> 2;
   i13 = (HEAPU8[i10 + 2 >> 0] | 0) >>> 3;
   i14 = (HEAP32[i5 + (i11 << 2) >> 2] | 0) + (i12 << 6) + (i13 << 1) | 0;
   i15 = HEAP16[i14 >> 1] | 0;
   if (!(i15 << 16 >> 16)) {
    _fill_inverse_cmap(i1, i11, i12, i13);
    i16 = HEAP16[i14 >> 1] | 0;
   } else i16 = i15;
   HEAP8[i9 >> 0] = (i16 & 65535) + 255;
   i8 = i8 + -1 | 0;
   if (!i8) break; else {
    i9 = i9 + 1 | 0;
    i10 = i10 + 3 | 0;
   }
  }
  i7 = i7 + 1 | 0;
 } while ((i7 | 0) != (i4 | 0));
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i4 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 i5 = i1 + 24 | 0;
 i6 = i1 + 28 | 0;
 i7 = i2;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i3 | 0)) break;
  i8 = HEAP32[i5 >> 2] | 0;
  i9 = HEAP32[i6 >> 2] | 0;
  if (i8 >>> 0 < i9 >>> 0) {
   i10 = i9 - i8 >> 2;
   i9 = i3 - i2 | 0;
   i11 = (i9 | 0) < (i10 | 0) ? i9 : i10;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm(i8, i7, i11) | 0;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + (i11 << 2);
   i12 = i7 + (i11 << 2) | 0;
   i13 = i11 + i2 | 0;
  } else {
   i11 = HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] | 0;
   i8 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i7 >> 2] | 0) | 0;
   if ((FUNCTION_TABLE_iii[i11 & 63](i1, i8) | 0) == (i4 | 0)) break;
   i12 = i7 + 4 | 0;
   i13 = i2 + 1 | 0;
  }
  i7 = i12;
  i2 = i13;
 }
 return i2 | 0;
}

function _alloc_large(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 if (i3 >>> 0 > 999999984) {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i5 + 20 >> 2] = 54;
  HEAP32[i5 + 24 >> 2] = 3;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i5 = i3 & 7;
 i6 = ((i5 | 0) == 0 ? 0 : 8 - i5 | 0) + i3 | 0;
 if (i2 >>> 0 > 1) {
  i3 = HEAP32[i1 >> 2] | 0;
  HEAP32[i3 + 20 >> 2] = 14;
  HEAP32[i3 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i3 = i6 + 16 | 0;
 i5 = _jpeg_get_large(i1, i3) | 0;
 if (!i5) {
  i7 = HEAP32[i1 >> 2] | 0;
  HEAP32[i7 + 20 >> 2] = 54;
  HEAP32[i7 + 24 >> 2] = 4;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i1 = i4 + 76 | 0;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + i3;
 i3 = i4 + 60 + (i2 << 2) | 0;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i5 + 4 >> 2] = i6;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i3 >> 2] = i5;
 return i5 + 16 | 0;
}

function __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 if (!(i3 & 2048)) i4 = i1; else {
  HEAP8[i1 >> 0] = 43;
  i4 = i1 + 1 | 0;
 }
 if (!(i3 & 1024)) i5 = i4; else {
  HEAP8[i4 >> 0] = 35;
  i5 = i4 + 1 | 0;
 }
 i4 = i3 & 260;
 i1 = i3 & 16384;
 i3 = (i4 | 0) == 260;
 if (i3) {
  i6 = 0;
  i7 = i5;
 } else {
  HEAP8[i5 >> 0] = 46;
  HEAP8[i5 + 1 >> 0] = 42;
  i6 = 1;
  i7 = i5 + 2 | 0;
 }
 i5 = i2;
 i2 = i7;
 while (1) {
  i7 = HEAP8[i5 >> 0] | 0;
  if (!(i7 << 24 >> 24)) break;
  HEAP8[i2 >> 0] = i7;
  i5 = i5 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 L14 : do switch (i4 & 511) {
 case 4:
  {
   i8 = i1 >>> 9 & 255 ^ 102;
   break;
  }
 case 256:
  {
   i8 = i1 >>> 9 & 255 ^ 101;
   break;
  }
 default:
  {
   i5 = i1 >>> 9 & 255;
   if (i3) {
    i8 = i5 ^ 97;
    break L14;
   } else {
    i8 = i5 ^ 103;
    break L14;
   }
  }
 } while (0);
 HEAP8[i2 >> 0] = i8;
 return i6 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i4 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 i5 = i1 + 24 | 0;
 i6 = i1 + 28 | 0;
 i7 = i2;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i3 | 0)) break;
  i8 = HEAP32[i5 >> 2] | 0;
  i9 = HEAP32[i6 >> 2] | 0;
  if (i8 >>> 0 < i9 >>> 0) {
   i10 = i9 - i8 | 0;
   i9 = i3 - i2 | 0;
   i11 = (i9 | 0) < (i10 | 0) ? i9 : i10;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i8, i7, i11) | 0;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + i11;
   i12 = i7 + i11 | 0;
   i13 = i11 + i2 | 0;
  } else {
   i11 = HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] | 0;
   i8 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i7 >> 0] | 0) | 0;
   if ((FUNCTION_TABLE_iii[i11 & 63](i1, i8) | 0) == (i4 | 0)) break;
   i12 = i7 + 1 | 0;
   i13 = i2 + 1 | 0;
  }
  i7 = i12;
  i2 = i13;
 }
 return i2 | 0;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 i5 = i4;
 if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, i2, 0) | 0)) if ((i2 | 0) != 0 ? (i6 = ___dynamic_cast(i2, 13232, 13216, 0) | 0, (i6 | 0) != 0) : 0) {
  i2 = i5 + 4 | 0;
  i7 = i2 + 52 | 0;
  do {
   HEAP32[i2 >> 2] = 0;
   i2 = i2 + 4 | 0;
  } while ((i2 | 0) < (i7 | 0));
  HEAP32[i5 >> 2] = i6;
  HEAP32[i5 + 8 >> 2] = i1;
  HEAP32[i5 + 12 >> 2] = -1;
  HEAP32[i5 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 31](i6, i5, HEAP32[i3 >> 2] | 0, 1);
  if ((HEAP32[i5 + 24 >> 2] | 0) == 1) {
   HEAP32[i3 >> 2] = HEAP32[i5 + 16 >> 2];
   i8 = 1;
  } else i8 = 0;
  i9 = i8;
 } else i9 = 0; else i9 = 1;
 STACKTOP = i4;
 return i9 | 0;
}

function __ZN6vision15get_pretty_timeEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 i3 = i2 + 256 | 0;
 i4 = i2;
 _time(i3 | 0) | 0;
 _strftime(i4 | 0, 256, 32745, _localtime(i3 | 0) | 0) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i3 = _strlen(i4) | 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i3;
  if (!i3) {
   i5 = i1;
   i6 = i5 + i3 | 0;
   HEAP8[i6 >> 0] = 0;
   STACKTOP = i2;
   return;
  } else i7 = i1;
 } else {
  i8 = i3 + 16 & -16;
  i9 = __Znwm(i8) | 0;
  HEAP32[i1 >> 2] = i9;
  HEAP32[i1 + 8 >> 2] = i8 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i3;
  i7 = i9;
 }
 _memcpy(i7 | 0, i4 | 0, i3 | 0) | 0;
 i5 = i7;
 i6 = i5 + i3 | 0;
 HEAP8[i6 >> 0] = 0;
 STACKTOP = i2;
 return;
}

function _jinit_d_post_controller(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i3 = i1 + 4 | 0;
 i4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i3 >> 2] >> 2] & 63](i1, 1, 28) | 0;
 HEAP32[i1 + 432 >> 2] = i4;
 HEAP32[i4 >> 2] = 44;
 i5 = i4 + 8 | 0;
 HEAP32[i5 >> 2] = 0;
 i6 = i4 + 12 | 0;
 HEAP32[i6 >> 2] = 0;
 if (!(HEAP32[i1 + 84 >> 2] | 0)) return;
 i7 = HEAP32[i1 + 312 >> 2] | 0;
 i8 = i4 + 16 | 0;
 HEAP32[i8 >> 2] = i7;
 i4 = HEAP32[i3 >> 2] | 0;
 if (!i2) {
  i2 = Math_imul(HEAP32[i1 + 120 >> 2] | 0, HEAP32[i1 + 112 >> 2] | 0) | 0;
  i3 = FUNCTION_TABLE_iiiii[HEAP32[i4 + 8 >> 2] & 15](i1, 1, i2, i7) | 0;
  HEAP32[i6 >> 2] = i3;
  return;
 } else {
  i3 = HEAP32[i4 + 16 >> 2] | 0;
  i4 = Math_imul(HEAP32[i1 + 120 >> 2] | 0, HEAP32[i1 + 112 >> 2] | 0) | 0;
  i6 = _jround_up(HEAP32[i1 + 116 >> 2] | 0, i7) | 0;
  i7 = FUNCTION_TABLE_iiiiiii[i3 & 63](i1, 1, 0, i4, i6, HEAP32[i8 >> 2] | 0) | 0;
  HEAP32[i5 >> 2] = i7;
  return;
 }
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 __ZNSt3__211char_traitsIwE3eofEv() | 0;
 i4 = i1 + 12 | 0;
 i5 = i1 + 16 | 0;
 i6 = i2;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i3 | 0)) break;
  i7 = HEAP32[i4 >> 2] | 0;
  i8 = HEAP32[i5 >> 2] | 0;
  if (i7 >>> 0 < i8 >>> 0) {
   i9 = i8 - i7 >> 2;
   i8 = i3 - i2 | 0;
   i10 = (i8 | 0) < (i9 | 0) ? i8 : i9;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm(i6, i7, i10) | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + (i10 << 2);
   i11 = i6 + (i10 << 2) | 0;
   i12 = i10;
  } else {
   i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   if ((i10 | 0) == -1) break;
   i7 = __ZNSt3__211char_traitsIwE12to_char_typeEj(i10) | 0;
   HEAP32[i6 >> 2] = i7;
   i11 = i6 + 4 | 0;
   i12 = 1;
  }
  i6 = i11;
  i2 = i12 + i2 | 0;
 }
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 L1 : do if ((i1 | 0) != (i2 | 0)) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 104:
   {
    i3 = i1 + 1 | 0;
    i4 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i3, i2) | 0;
    if ((i4 | 0) == (i3 | 0) | (i4 | 0) == (i2 | 0)) {
     i5 = i1;
     break L1;
    }
    return ((HEAP8[i4 >> 0] | 0) == 95 ? i4 + 1 | 0 : i1) | 0;
   }
  case 118:
   break;
  default:
   {
    i5 = i1;
    break L1;
   }
  }
  i4 = i1 + 1 | 0;
  i3 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i4, i2) | 0;
  if ((!((i3 | 0) == (i4 | 0) | (i3 | 0) == (i2 | 0)) ? (HEAP8[i3 >> 0] | 0) == 95 : 0) ? (i4 = i3 + 1 | 0, i3 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i4, i2) | 0, !((i3 | 0) == (i4 | 0) | (i3 | 0) == (i2 | 0))) : 0) i5 = (HEAP8[i3 >> 0] | 0) == 95 ? i3 + 1 | 0 : i1; else i5 = i1;
 } else i5 = i1; while (0);
 return i5 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 __ZNSt3__211char_traitsIcE3eofEv() | 0;
 i4 = i1 + 12 | 0;
 i5 = i1 + 16 | 0;
 i6 = i2;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i3 | 0)) break;
  i7 = HEAP32[i4 >> 2] | 0;
  i8 = HEAP32[i5 >> 2] | 0;
  if (i7 >>> 0 < i8 >>> 0) {
   i9 = i8 - i7 | 0;
   i8 = i3 - i2 | 0;
   i10 = (i8 | 0) < (i9 | 0) ? i8 : i9;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm(i6, i7, i10) | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i10;
   i11 = i6 + i10 | 0;
   i12 = i10;
  } else {
   i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   if ((i10 | 0) == -1) break;
   i7 = __ZNSt3__211char_traitsIcE12to_char_typeEi(i10) | 0;
   HEAP8[i6 >> 0] = i7;
   i11 = i6 + 1 | 0;
   i12 = 1;
  }
  i6 = i11;
  i2 = i12 + i2 | 0;
 }
 return i2 | 0;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0;
 do if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i5) | 0)) {
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 >> 2] | 0, i5) | 0) {
   if ((HEAP32[i2 + 16 >> 2] | 0) != (i3 | 0) ? (i6 = i2 + 20 | 0, (HEAP32[i6 >> 2] | 0) != (i3 | 0)) : 0) {
    HEAP32[i2 + 32 >> 2] = i4;
    HEAP32[i6 >> 2] = i3;
    i6 = i2 + 40 | 0;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
    if ((HEAP32[i2 + 36 >> 2] | 0) == 1 ? (HEAP32[i2 + 24 >> 2] | 0) == 2 : 0) HEAP8[i2 + 54 >> 0] = 1;
    HEAP32[i2 + 44 >> 2] = 4;
    break;
   }
   if ((i4 | 0) == 1) HEAP32[i2 + 32 >> 2] = 1;
  }
 } else __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, i2, i3, i4); while (0);
 return;
}

function _kpmDeleteRefDataSet(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!i1) {
  _arLog(0, 3, 20075, i2);
  i3 = -1;
  STACKTOP = i2;
  return i3 | 0;
 }
 i4 = HEAP32[i1 >> 2] | 0;
 if (!i4) {
  i3 = 0;
  STACKTOP = i2;
  return i3 | 0;
 }
 i5 = HEAP32[i4 >> 2] | 0;
 if (!i5) i6 = i4; else {
  _free(i5);
  i6 = HEAP32[i1 >> 2] | 0;
 }
 i5 = i6 + 8 | 0;
 if ((HEAP32[i6 + 12 >> 2] | 0) > 0) {
  i6 = 0;
  i4 = i5;
  while (1) {
   _free(HEAP32[(HEAP32[i4 >> 2] | 0) + (i6 * 12 | 0) >> 2] | 0);
   i6 = i6 + 1 | 0;
   i7 = HEAP32[i1 >> 2] | 0;
   i8 = i7 + 8 | 0;
   if ((i6 | 0) >= (HEAP32[i7 + 12 >> 2] | 0)) {
    i9 = i8;
    break;
   } else i4 = i8;
  }
 } else i9 = i5;
 _free(HEAP32[i9 >> 2] | 0);
 _free(HEAP32[i1 >> 2] | 0);
 HEAP32[i1 >> 2] = 0;
 i3 = 0;
 STACKTOP = i2;
 return i3 | 0;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0;
 HEAP8[i2 + 53 >> 0] = 1;
 do if ((HEAP32[i2 + 4 >> 2] | 0) == (i4 | 0)) {
  HEAP8[i2 + 52 >> 0] = 1;
  i1 = i2 + 16 | 0;
  i6 = HEAP32[i1 >> 2] | 0;
  if (!i6) {
   HEAP32[i1 >> 2] = i3;
   HEAP32[i2 + 24 >> 2] = i5;
   HEAP32[i2 + 36 >> 2] = 1;
   if (!((i5 | 0) == 1 ? (HEAP32[i2 + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[i2 + 54 >> 0] = 1;
   break;
  }
  if ((i6 | 0) != (i3 | 0)) {
   i6 = i2 + 36 | 0;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
   HEAP8[i2 + 54 >> 0] = 1;
   break;
  }
  i6 = i2 + 24 | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  if ((i1 | 0) == 2) {
   HEAP32[i6 >> 2] = i5;
   i7 = i5;
  } else i7 = i1;
  if ((i7 | 0) == 1 ? (HEAP32[i2 + 48 >> 2] | 0) == 1 : 0) HEAP8[i2 + 54 >> 0] = 1;
 } while (0);
 return;
}

function _fflush(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 do if (i1) {
  if ((HEAP32[i1 + 76 >> 2] | 0) <= -1) {
   i2 = ___fflush_unlocked(i1) | 0;
   break;
  }
  i3 = (___lockfile(i1) | 0) == 0;
  i4 = ___fflush_unlocked(i1) | 0;
  if (i3) i2 = i4; else {
   ___unlockfile(i1);
   i2 = i4;
  }
 } else {
  if (!(HEAP32[3451] | 0)) i5 = 0; else i5 = _fflush(HEAP32[3451] | 0) | 0;
  i4 = ___ofl_lock() | 0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) i6 = i5; else {
   i4 = i3;
   i3 = i5;
   while (1) {
    if ((HEAP32[i4 + 76 >> 2] | 0) > -1) i7 = ___lockfile(i4) | 0; else i7 = 0;
    if ((HEAP32[i4 + 20 >> 2] | 0) >>> 0 > (HEAP32[i4 + 28 >> 2] | 0) >>> 0) i8 = ___fflush_unlocked(i4) | 0 | i3; else i8 = i3;
    if (i7 | 0) ___unlockfile(i4);
    i4 = HEAP32[i4 + 56 >> 2] | 0;
    if (!i4) {
     i6 = i8;
     break;
    } else i3 = i8;
   }
  }
  ___ofl_unlock();
  i2 = i6;
 } while (0);
 return i2 | 0;
}

function __ZNSt3__211__stdoutbufIwE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2 + 8 | 0;
 i4 = i2;
 i5 = i1 + 36 | 0;
 i6 = i1 + 40 | 0;
 i7 = i3 + 8 | 0;
 i8 = i3;
 i9 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  i10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i6 >> 2] | 0, i3, i7, i4) | 0;
  i1 = (HEAP32[i4 >> 2] | 0) - i8 | 0;
  if ((_fwrite(i3, 1, i1, HEAP32[i9 >> 2] | 0) | 0) != (i1 | 0)) {
   i11 = -1;
   break;
  }
  switch (i10 | 0) {
  case 1:
   break;
  case 2:
   {
    i11 = -1;
    break L1;
    break;
   }
  default:
   {
    i12 = 4;
    break L1;
   }
  }
 }
 if ((i12 | 0) == 4) i11 = ((_fflush(HEAP32[i9 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i2;
 return i11 | 0;
}

function __ZNSt3__211__stdoutbufIcE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2 + 8 | 0;
 i4 = i2;
 i5 = i1 + 36 | 0;
 i6 = i1 + 40 | 0;
 i7 = i3 + 8 | 0;
 i8 = i3;
 i9 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  i10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i6 >> 2] | 0, i3, i7, i4) | 0;
  i1 = (HEAP32[i4 >> 2] | 0) - i8 | 0;
  if ((_fwrite(i3, 1, i1, HEAP32[i9 >> 2] | 0) | 0) != (i1 | 0)) {
   i11 = -1;
   break;
  }
  switch (i10 | 0) {
  case 1:
   break;
  case 2:
   {
    i11 = -1;
    break L1;
    break;
   }
  default:
   {
    i12 = 4;
    break L1;
   }
  }
 }
 if ((i12 | 0) == 4) i11 = ((_fflush(HEAP32[i9 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i2;
 return i11 | 0;
}

function __ZNSt3__215__num_get_floatIeEET_PKcS3_Rj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, i11 = 0, d12 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if ((i1 | 0) == (i2 | 0)) {
  HEAP32[i3 >> 2] = 4;
  d6 = 0.0;
 } else {
  i7 = ___errno_location() | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  i7 = ___errno_location() | 0;
  HEAP32[i7 >> 2] = 0;
  d9 = +_strtold_l(i1, i5, __ZNSt3__26__clocEv() | 0);
  i1 = ___errno_location() | 0;
  i7 = HEAP32[i1 >> 2] | 0;
  if (!i7) {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = i8;
  }
  if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) if ((i7 | 0) == 34) {
   d10 = d9;
   i11 = 6;
  } else d12 = d9; else {
   d10 = 0.0;
   i11 = 6;
  }
  if ((i11 | 0) == 6) {
   HEAP32[i3 >> 2] = 4;
   d12 = d10;
  }
  d6 = d12;
 }
 STACKTOP = i4;
 return +d6;
}

function __ZNSt3__215__num_get_floatIfEET_PKcS3_Rj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, i11 = 0, d12 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if ((i1 | 0) == (i2 | 0)) {
  HEAP32[i3 >> 2] = 4;
  d6 = 0.0;
 } else {
  i7 = ___errno_location() | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  i7 = ___errno_location() | 0;
  HEAP32[i7 >> 2] = 0;
  d9 = +_strtof_l(i1, i5, __ZNSt3__26__clocEv() | 0);
  i1 = ___errno_location() | 0;
  i7 = HEAP32[i1 >> 2] | 0;
  if (!i7) {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = i8;
  }
  if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) if ((i7 | 0) == 34) {
   d10 = d9;
   i11 = 6;
  } else d12 = d9; else {
   d10 = 0.0;
   i11 = 6;
  }
  if ((i11 | 0) == 6) {
   HEAP32[i3 >> 2] = 4;
   d12 = d10;
  }
  d6 = d12;
 }
 STACKTOP = i4;
 return +d6;
}

function __ZNSt3__215__num_get_floatIdEET_PKcS3_Rj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, i11 = 0, d12 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if ((i1 | 0) == (i2 | 0)) {
  HEAP32[i3 >> 2] = 4;
  d6 = 0.0;
 } else {
  i7 = ___errno_location() | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  i7 = ___errno_location() | 0;
  HEAP32[i7 >> 2] = 0;
  d9 = +_strtod_l(i1, i5, __ZNSt3__26__clocEv() | 0);
  i1 = ___errno_location() | 0;
  i7 = HEAP32[i1 >> 2] | 0;
  if (!i7) {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = i8;
  }
  if ((HEAP32[i5 >> 2] | 0) == (i2 | 0)) if ((i7 | 0) == 34) {
   d10 = d9;
   i11 = 6;
  } else d12 = d9; else {
   d10 = 0.0;
   i11 = 6;
  }
  if ((i11 | 0) == 6) {
   HEAP32[i3 >> 2] = 4;
   d12 = d10;
  }
  d6 = d12;
 }
 STACKTOP = i4;
 return +d6;
}

function _fmt_u(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 4294967295) {
  i4 = i3;
  i5 = i1;
  i6 = i2;
  do {
   i2 = i5;
   i5 = ___udivdi3(i5 | 0, i6 | 0, 10, 0) | 0;
   i7 = i6;
   i6 = getTempRet0() | 0;
   i8 = ___muldi3(i5 | 0, i6 | 0, 10, 0) | 0;
   i9 = _i64Subtract(i2 | 0, i7 | 0, i8 | 0, getTempRet0() | 0) | 0;
   getTempRet0() | 0;
   i4 = i4 + -1 | 0;
   HEAP8[i4 >> 0] = i9 & 255 | 48;
  } while (i7 >>> 0 > 9 | (i7 | 0) == 9 & i2 >>> 0 > 4294967295);
  i10 = i5;
  i11 = i4;
 } else {
  i10 = i1;
  i11 = i3;
 }
 if (!i10) i12 = i11; else {
  i3 = i10;
  i10 = i11;
  while (1) {
   i11 = i3;
   i3 = (i3 >>> 0) / 10 | 0;
   i1 = i10 + -1 | 0;
   HEAP8[i1 >> 0] = i11 - (i3 * 10 | 0) | 48;
   if (i11 >>> 0 < 10) {
    i12 = i1;
    break;
   } else i10 = i1;
  }
 }
 return i12 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 if ((-17 - i2 | 0) >>> 0 < i3 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) i8 = HEAP32[i1 >> 2] | 0; else i8 = i1;
 if (i2 >>> 0 < 2147483623) {
  i9 = i3 + i2 | 0;
  i3 = i2 << 1;
  i10 = i9 >>> 0 < i3 >>> 0 ? i3 : i9;
  i11 = i10 >>> 0 < 11 ? 11 : i10 + 16 & -16;
 } else i11 = -17;
 i10 = __Znwm(i11) | 0;
 if (i5 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i10, i8, i5) | 0;
 i9 = i4 - i6 - i5 | 0;
 if (i9 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm(i10 + i5 + i7 | 0, i8 + i5 + i6 | 0, i9) | 0;
 if ((i2 | 0) != 10) __ZdlPv(i8);
 HEAP32[i1 >> 2] = i10;
 HEAP32[i1 + 8 >> 2] = i11 | -2147483648;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 L1 : do if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, 0) | 0)) {
  i5 = HEAP32[i1 + 12 >> 2] | 0;
  i6 = i1 + 16 + (i5 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1 + 16 | 0, i2, i3, i4);
  if ((i5 | 0) > 1) {
   i5 = i2 + 54 | 0;
   i7 = i1 + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i7, i2, i3, i4);
    if (HEAP8[i5 >> 0] | 0) break L1;
    i7 = i7 + 8 | 0;
   } while (i7 >>> 0 < i6 >>> 0);
  }
 } else __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i3, i4); while (0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if ((i2 - i1 | 0) > 1) {
  if ((HEAP8[i1 >> 0] | 0) == 83 ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) {
   i4 = i1 + 2 | 0;
   if ((i4 | 0) == (i2 | 0)) {
    i5 = 0;
    i6 = i2;
   } else {
    i5 = 0;
    i6 = (HEAP8[i4 >> 0] | 0) == 76 ? i1 + 3 | 0 : i4;
   }
  } else {
   i5 = 1;
   i6 = i1;
  }
  i4 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i3) | 0;
  i2 = (i4 | 0) == (i6 | 0);
  if (!(i5 | i2)) {
   i5 = HEAP32[i3 + 4 >> 2] | 0;
   if ((HEAP32[i3 >> 2] | 0) == (i5 | 0)) i7 = i1; else {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i5 + -24 | 0, 0, 50539) | 0;
    i7 = i4;
   }
  } else i7 = i2 ? i1 : i4;
 } else i7 = i1;
 return i7 | 0;
}

function ___fseeko_unlocked(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 if ((i4 | 0) == 1) {
  i5 = (HEAP32[i1 + 8 >> 2] | 0) - (HEAP32[i1 + 4 >> 2] | 0) | 0;
  i6 = _i64Subtract(i2 | 0, i3 | 0, i5 | 0, ((i5 | 0) < 0) << 31 >> 31 | 0) | 0;
  i7 = i6;
  i8 = getTempRet0() | 0;
 } else {
  i7 = i2;
  i8 = i3;
 }
 i3 = i1 + 20 | 0;
 i2 = i1 + 28 | 0;
 if ((HEAP32[i3 >> 2] | 0) >>> 0 > (HEAP32[i2 >> 2] | 0) >>> 0 ? (FUNCTION_TABLE_iiii[HEAP32[i1 + 36 >> 2] & 63](i1, 0, 0) | 0, (HEAP32[i3 >> 2] | 0) == 0) : 0) i9 = -1; else {
  HEAP32[i1 + 16 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  FUNCTION_TABLE_iiiii[HEAP32[i1 + 40 >> 2] & 15](i1, i7, i8, i4) | 0;
  if ((getTempRet0() | 0) < 0) i9 = -1; else {
   HEAP32[i1 + 8 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -17;
   i9 = 0;
  }
 }
 return i9 | 0;
}

function _fopen(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i4 = i3 + 32 | 0;
 i5 = i3 + 16 | 0;
 i6 = i3;
 if (_strchr(46736, HEAP8[i2 >> 0] | 0) | 0) {
  i7 = ___fmodeflags(i2) | 0;
  HEAP32[i6 >> 2] = i1;
  HEAP32[i6 + 4 >> 2] = i7 | 32768;
  HEAP32[i6 + 8 >> 2] = 438;
  i1 = ___syscall_ret(___syscall5(5, i6 | 0) | 0) | 0;
  if ((i1 | 0) >= 0) {
   if (i7 & 524288 | 0) {
    HEAP32[i5 >> 2] = i1;
    HEAP32[i5 + 4 >> 2] = 2;
    HEAP32[i5 + 8 >> 2] = 1;
    ___syscall221(221, i5 | 0) | 0;
   }
   i5 = ___fdopen(i1, i2) | 0;
   if (!i5) {
    HEAP32[i4 >> 2] = i1;
    ___syscall6(6, i4 | 0) | 0;
    i8 = 0;
   } else i8 = i5;
  } else i8 = 0;
 } else {
  i5 = ___errno_location() | 0;
  HEAP32[i5 >> 2] = 22;
  i8 = 0;
 }
 STACKTOP = i3;
 return i8 | 0;
}

function __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 i8 = i7;
 i9 = i7 + 116 | 0;
 i10 = i7 + 104 | 0;
 i11 = i7 + 112 | 0;
 HEAP32[i9 >> 2] = i8 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc(i1, i8, i9, i4, i5, i6);
 i6 = i10;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i11 >> 2] = i8;
 i8 = __ZNSt3__212_GLOBAL__N_17countofIwEEmPKT_S4_(i2, HEAP32[i3 >> 2] | 0) | 0;
 i6 = ___uselocale(HEAP32[i1 >> 2] | 0) | 0;
 i1 = _mbsrtowcs(i2, i11, i8, i10) | 0;
 if (i6 | 0) ___uselocale(i6) | 0;
 if ((i1 | 0) == -1) __ZNSt3__221__throw_runtime_errorEPKc(0); else {
  HEAP32[i3 >> 2] = i2 + (i1 << 2);
  STACKTOP = i7;
  return;
 }
}
function __ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 HEAP32[i5 >> 2] = i3;
 i3 = ___uselocale(HEAP32[i1 + 8 >> 2] | 0) | 0;
 i1 = _wcrtomb(i7, 0, i2) | 0;
 if (i3 | 0) ___uselocale(i3) | 0;
 L4 : do if ((i1 + 1 | 0) >>> 0 >= 2) {
  i3 = i1 + -1 | 0;
  if (i3 >>> 0 > (i4 - (HEAP32[i5 >> 2] | 0) | 0) >>> 0) i8 = 1; else {
   i2 = i7;
   i9 = i3;
   while (1) {
    if (!i9) {
     i8 = 0;
     break L4;
    }
    i3 = HEAP8[i2 >> 0] | 0;
    i10 = HEAP32[i5 >> 2] | 0;
    HEAP32[i5 >> 2] = i10 + 1;
    HEAP8[i10 >> 0] = i3;
    i2 = i2 + 1 | 0;
    i9 = i9 + -1 | 0;
   }
  }
 } else i8 = 2; while (0);
 STACKTOP = i6;
 return i8 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = i1 + 4 | 0;
 i5 = i2 + 4 | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((i6 | 0) == (i3 | 0)) break;
  i7 = i6 + -24 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_((HEAP32[i5 >> 2] | 0) + -24 | 0, i7);
  HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + -24;
  i6 = i7;
 }
 i6 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i6;
 i6 = i2 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i6 >> 2] = i3;
 i3 = i1 + 8 | 0;
 i1 = i2 + 12 | 0;
 i6 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i1 >> 2] = i6;
 HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
 return;
}

function _fill_input_buffer(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = HEAP32[i1 + 24 >> 2] | 0;
 i3 = i2 + 32 | 0;
 i4 = _fread(HEAP32[i3 >> 2] | 0, 1, 4096, HEAP32[i2 + 28 >> 2] | 0) | 0;
 i5 = i2 + 36 | 0;
 if (i4 | 0) {
  i6 = i4;
  i7 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 >> 2] = i7;
  i8 = i2 + 4 | 0;
  HEAP32[i8 >> 2] = i6;
  HEAP32[i5 >> 2] = 0;
  return 1;
 }
 if (!(HEAP32[i5 >> 2] | 0)) i9 = i1; else {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 42;
  FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i1);
  i9 = i1;
 }
 i4 = HEAP32[i1 >> 2] | 0;
 HEAP32[i4 + 20 >> 2] = 120;
 FUNCTION_TABLE_vii[HEAP32[i4 + 4 >> 2] & 63](i9, -1);
 HEAP8[HEAP32[i3 >> 2] >> 0] = -1;
 HEAP8[(HEAP32[i3 >> 2] | 0) + 1 >> 0] = -39;
 i6 = 2;
 i7 = HEAP32[i3 >> 2] | 0;
 HEAP32[i2 >> 2] = i7;
 i8 = i2 + 4 | 0;
 HEAP32[i8 >> 2] = i6;
 HEAP32[i5 >> 2] = 0;
 return 1;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 i6 = i1 + 11 | 0;
 i7 = HEAP8[i6 >> 0] | 0;
 i8 = i7 << 24 >> 24 < 0;
 if (i8) i9 = HEAP32[i1 + 4 >> 2] | 0; else i9 = i7 & 255;
 do if (i9 >>> 0 >= i2 >>> 0) if (i8) {
  i7 = (HEAP32[i1 >> 2] | 0) + i2 | 0;
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i7, i5);
  HEAP32[i1 + 4 >> 2] = i2;
  break;
 } else {
  HEAP8[i5 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc(i1 + i2 | 0, i5);
  HEAP8[i6 >> 0] = i2;
  break;
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(i1, i2 - i9 | 0, i3) | 0; while (0);
 STACKTOP = i4;
 return;
}

function __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 __ZNKSt3__28ios_base6getlocEv(i7, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58516) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 48 >> 2] & 15](i2, 10736, 10768, i3) | 0;
 i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58524) | 0;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3) | 0;
 HEAP32[i4 >> 2] = i2;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0;
 HEAP32[i5 >> 2] = i2;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] & 63](i1, i3);
 __ZNSt3__26localeD2Ev(i7);
 STACKTOP = i6;
 return;
}

function __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 __ZNKSt3__28ios_base6getlocEv(i7, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58484) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 15](i2, 10736, 10768, i3) | 0;
 i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i7, 58500) | 0;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3) | 0;
 HEAP8[i4 >> 0] = i2;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0;
 HEAP8[i5 >> 0] = i2;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] & 63](i1, i3);
 __ZNSt3__26localeD2Ev(i7);
 STACKTOP = i6;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i10 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 4 >> 2] & 127](i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i9 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i3, i8, i1, i1 + 288 | 0, i6, i5, 0) | 0) - i1 | 0;
 if ((i9 | 0) < 288) HEAP32[i2 >> 2] = ((i9 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i10 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 4 >> 2] & 127](i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i9 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i3, i8, i1, i1 + 288 | 0, i6, i5, 0) | 0) - i1 | 0;
 if ((i9 | 0) < 288) HEAP32[i2 >> 2] = ((i9 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function _kpmCreateHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i5 = _calloc(1, 4156) | 0;
 if (!i5) {
  _arLog(0, 3, 20510, i2);
  _exit(1);
 } else {
  i6 = __Znwm(4) | 0;
  __ZN6vision20VisualDatabaseFacadeC2Ev(i6);
  HEAP32[i5 >> 2] = i6;
  HEAP32[i5 + 4 >> 2] = i1;
  HEAP32[i5 + 8 >> 2] = 1;
  HEAP32[i5 + 12 >> 2] = i3;
  HEAP32[i5 + 16 >> 2] = i4;
  HEAP32[i5 + 20 >> 2] = 1;
  HEAP32[i5 + 24 >> 2] = -1;
  i4 = i5 + 28 | 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP32[i4 + 12 >> 2] = 0;
  HEAP32[i4 + 16 >> 2] = 0;
  HEAP32[i4 + 20 >> 2] = 0;
  HEAP32[i4 + 24 >> 2] = 0;
  HEAP32[i4 + 28 >> 2] = 0;
  STACKTOP = i2;
  return i5 | 0;
 }
 return 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = i1 + 4 | 0;
 i5 = i2 + 4 | 0;
 i6 = (HEAP32[i4 >> 2] | 0) - i3 | 0;
 i7 = (HEAP32[i5 >> 2] | 0) + (0 - (i6 >> 2) << 2) | 0;
 HEAP32[i5 >> 2] = i7;
 if ((i6 | 0) > 0) {
  _memcpy(i7 | 0, i3 | 0, i6 | 0) | 0;
  i8 = i5;
  i9 = HEAP32[i5 >> 2] | 0;
 } else {
  i8 = i5;
  i9 = i7;
 }
 i7 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i9;
 HEAP32[i8 >> 2] = i7;
 i7 = i2 + 8 | 0;
 i9 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i9;
 i9 = i1 + 8 | 0;
 i1 = i2 + 12 | 0;
 i7 = HEAP32[i9 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i1 >> 2] = i7;
 HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 L1 : do if ((i1 | 0) == (i2 | 0)) i4 = i1; else switch (HEAP8[i1 >> 0] | 0) {
 case 68:
 case 67:
  {
   i4 = __ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   break L1;
   break;
  }
 case 85:
  {
   i4 = __ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   break L1;
   break;
  }
 case 57:
 case 56:
 case 55:
 case 54:
 case 53:
 case 52:
 case 51:
 case 50:
 case 49:
  {
   i4 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
   break L1;
   break;
  }
 default:
  return __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
 } while (0);
 return i4 | 0;
}

function _null_convert_24(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i6 = HEAP32[i1 + 36 >> 2] | 0;
 i7 = HEAP32[i1 + 112 >> 2] | 0;
 if ((i5 | 0) <= 0) return;
 i1 = (i7 | 0) == 0;
 if ((i6 | 0) <= 0) return;
 i8 = i3;
 i3 = i4;
 i4 = i5;
 while (1) {
  i5 = i4;
  i4 = i4 + -1 | 0;
  if (!i1) {
   i9 = 0;
   do {
    i10 = i7;
    i11 = (HEAP32[i3 >> 2] | 0) + i9 | 0;
    i12 = HEAP32[(HEAP32[i2 + (i9 << 2) >> 2] | 0) + (i8 << 2) >> 2] | 0;
    while (1) {
     HEAP8[i11 >> 0] = HEAP8[i12 >> 0] | 0;
     i10 = i10 + -1 | 0;
     if (!i10) break; else {
      i11 = i11 + i6 | 0;
      i12 = i12 + 1 | 0;
     }
    }
    i9 = i9 + 1 | 0;
   } while ((i9 | 0) != (i6 | 0));
  }
  if ((i5 | 0) <= 1) break; else {
   i8 = i8 + 1 | 0;
   i3 = i3 + 4 | 0;
  }
 }
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i10 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i10 >> 2] >> 2] & 127](i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i9 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i3, i8, i1, i1 + 168 | 0, i6, i5, 0) | 0) - i1 | 0;
 if ((i9 | 0) < 168) HEAP32[i2 >> 2] = ((i9 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 i10 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i10 >> 2] >> 2] & 127](i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i9 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i3, i8, i1, i1 + 168 | 0, i6, i5, 0) | 0) - i1 | 0;
 if ((i9 | 0) < 168) HEAP32[i2 >> 2] = ((i9 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if (i3 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 do if (i3 >>> 0 >= 2) {
  i6 = i3 + 4 & -4;
  if (i6 >>> 0 > 1073741823) _abort(); else {
   i7 = __Znwm(i6 << 2) | 0;
   HEAP32[i1 >> 2] = i7;
   HEAP32[i1 + 8 >> 2] = i6 | -2147483648;
   HEAP32[i1 + 4 >> 2] = i3;
   i8 = i7;
   break;
  }
 } else {
  HEAP8[i1 + 8 + 3 >> 0] = i3;
  i8 = i1;
 } while (0);
 __ZNSt3__211char_traitsIwE4copyEPwPKwm(i8, i2, i3) | 0;
 HEAP32[i5 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i8 + (i3 << 2) | 0, i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = i1 + 4 | 0;
 i5 = (HEAP32[i4 >> 2] | 0) != 143;
 i6 = HEAP32[i1 >> 2] | 0;
 i7 = i6;
 i8 = (HEAP32[i3 >> 2] | 0) - i7 | 0;
 i9 = i8 << 1;
 i10 = i8 >>> 0 < 2147483647 ? ((i9 | 0) == 0 ? 4 : i9) : -1;
 i9 = (HEAP32[i2 >> 2] | 0) - i7 >> 2;
 i7 = _realloc(i5 ? i6 : 0, i10) | 0;
 if (!i7) __ZSt17__throw_bad_allocv();
 if (!i5) {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = i7;
  if (!i5) i11 = i7; else {
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i5);
   i11 = HEAP32[i1 >> 2] | 0;
  }
 } else {
  HEAP32[i1 >> 2] = i7;
  i11 = i7;
 }
 HEAP32[i4 >> 2] = 144;
 HEAP32[i2 >> 2] = i11 + (i9 << 2);
 HEAP32[i3 >> 2] = (HEAP32[i1 >> 2] | 0) + (i10 >>> 2 << 2);
 return;
}

function __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = i1 + 4 | 0;
 i5 = (HEAP32[i4 >> 2] | 0) != 143;
 i6 = HEAP32[i1 >> 2] | 0;
 i7 = i6;
 i8 = (HEAP32[i3 >> 2] | 0) - i7 | 0;
 i9 = i8 << 1;
 i10 = i8 >>> 0 < 2147483647 ? ((i9 | 0) == 0 ? 4 : i9) : -1;
 i9 = (HEAP32[i2 >> 2] | 0) - i7 >> 2;
 i7 = _realloc(i5 ? i6 : 0, i10) | 0;
 if (!i7) __ZSt17__throw_bad_allocv();
 if (!i5) {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = i7;
  if (!i5) i11 = i7; else {
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i5);
   i11 = HEAP32[i1 >> 2] | 0;
  }
 } else {
  HEAP32[i1 >> 2] = i7;
  i11 = i7;
 }
 HEAP32[i4 >> 2] = 144;
 HEAP32[i2 >> 2] = i11 + (i9 << 2);
 HEAP32[i3 >> 2] = (HEAP32[i1 >> 2] | 0) + (i10 >>> 2 << 2);
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if (i2 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 do if (i2 >>> 0 >= 2) {
  i6 = i2 + 4 & -4;
  if (i6 >>> 0 > 1073741823) _abort(); else {
   i7 = __Znwm(i6 << 2) | 0;
   HEAP32[i1 >> 2] = i7;
   HEAP32[i1 + 8 >> 2] = i6 | -2147483648;
   HEAP32[i1 + 4 >> 2] = i2;
   i8 = i7;
   break;
  }
 } else {
  HEAP8[i1 + 8 + 3 >> 0] = i2;
  i8 = i1;
 } while (0);
 __ZNSt3__211char_traitsIwE6assignEPwmw(i8, i2, i3) | 0;
 HEAP32[i5 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw(i8 + (i2 << 2) | 0, i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcmm(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 if (i4 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i4 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i3;
  i7 = i1;
 } else {
  i8 = i4 + 16 & -16;
  i4 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i8) | 0;
  HEAP32[i1 >> 2] = i4;
  HEAP32[i1 + 8 >> 2] = i8 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i3;
  i7 = i4;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcm(i7, i2, i3) | 0;
 HEAP8[i6 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i7 + i3 | 0, i6);
 STACKTOP = i5;
 return;
}

function ___overflow(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 i5 = i2 & 255;
 HEAP8[i4 >> 0] = i5;
 i6 = i1 + 16 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 if (!i7) if (!(___towrite(i1) | 0)) {
  i8 = HEAP32[i6 >> 2] | 0;
  i9 = 4;
 } else i10 = -1; else {
  i8 = i7;
  i9 = 4;
 }
 do if ((i9 | 0) == 4) {
  i7 = i1 + 20 | 0;
  i6 = HEAP32[i7 >> 2] | 0;
  if (i6 >>> 0 < i8 >>> 0 ? (i11 = i2 & 255, (i11 | 0) != (HEAP8[i1 + 75 >> 0] | 0)) : 0) {
   HEAP32[i7 >> 2] = i6 + 1;
   HEAP8[i6 >> 0] = i5;
   i10 = i11;
   break;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[i1 + 36 >> 2] & 63](i1, i4, 1) | 0) == 1) i10 = HEAPU8[i4 >> 0] | 0; else i10 = -1;
 } while (0);
 STACKTOP = i3;
 return i10 | 0;
}

function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i1 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = __ZNSt3__211char_traitsIcE6lengthEPKc(i2) | 0;
 i5 = i3 + 11 | 0;
 i6 = HEAP8[i5 >> 0] | 0;
 i7 = i6 << 24 >> 24 < 0 ? HEAP32[i3 + 4 >> 2] | 0 : i6 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcmm(i1, i2, i4, i7 + i4 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i1, (HEAP8[i5 >> 0] | 0) < 0 ? HEAP32[i3 >> 2] | 0 : i3, i7) | 0;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i3;
  i6 = i1;
 } else {
  i7 = i3 + 16 & -16;
  i8 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i7) | 0;
  HEAP32[i1 >> 2] = i8;
  HEAP32[i1 + 8 >> 2] = i7 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i3;
  i6 = i8;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcm(i6, i2, i3) | 0;
 HEAP8[i5 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i6 + i3 | 0, i5);
 STACKTOP = i4;
 return;
}

function _post_process_1pass(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i9 = i8;
 i10 = HEAP32[i1 + 432 >> 2] | 0;
 i11 = i7 - (HEAP32[i6 >> 2] | 0) | 0;
 i7 = HEAP32[i10 + 16 >> 2] | 0;
 HEAP32[i9 >> 2] = 0;
 i12 = i10 + 12 | 0;
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i1 + 452 >> 2] | 0) + 4 >> 2] & 7](i1, i2, i3, i4, HEAP32[i12 >> 2] | 0, i9, i11 >>> 0 > i7 >>> 0 ? i7 : i11);
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 4 >> 2] & 31](i1, HEAP32[i12 >> 2] | 0, i5 + (HEAP32[i6 >> 2] << 2) | 0, HEAP32[i9 >> 2] | 0);
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + (HEAP32[i9 >> 2] | 0);
 STACKTOP = i8;
 return;
}

function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) == 3) break;
  HEAP32[i1 + (i4 << 2) >> 2] = 0;
  i4 = i4 + 1 | 0;
 }
 i4 = i2 + 11 | 0;
 i5 = HEAP8[i4 >> 0] | 0;
 i6 = i5 << 24 >> 24 < 0 ? HEAP32[i2 + 4 >> 2] | 0 : i5 & 255;
 i5 = __ZNSt3__211char_traitsIcE6lengthEPKc(i3) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcmm(i1, (HEAP8[i4 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2, i6, i6 + i5 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i1, i3, i5) | 0;
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 if ((((HEAP32[i3 >> 2] | 0) - i4 | 0) / 36 | 0) >>> 0 >= i2 >>> 0) return;
 i5 = i1 + 4 | 0;
 if (i2 >>> 0 > 119304647) {
  i6 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i6, 40980);
  HEAP32[i6 >> 2] = 17420;
  ___cxa_throw(i6 | 0, 13288, 107);
 }
 i6 = (HEAP32[i5 >> 2] | 0) - i4 | 0;
 i7 = __Znwm(i2 * 36 | 0) | 0;
 i8 = i7 + (((i6 | 0) / 36 | 0) * 36 | 0) | 0;
 i9 = i8 + (((i6 | 0) / -36 | 0) * 36 | 0) | 0;
 if ((i6 | 0) > 0) _memcpy(i9 | 0, i4 | 0, i6 | 0) | 0;
 HEAP32[i1 >> 2] = i9;
 HEAP32[i5 >> 2] = i8;
 HEAP32[i3 >> 2] = i7 + (i2 * 36 | 0);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZN6vision16RobustHomographyIfEC2Efiii(i1, d2, i3, i4, i5) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i6 = i1 + 24 | 0;
 i7 = i1 + 28 | 0;
 i8 = (i3 | 0) == 0;
 i9 = i1;
 i10 = i9 + 36 | 0;
 do {
  HEAP32[i9 >> 2] = 0;
  i9 = i9 + 4 | 0;
 } while ((i9 | 0) < (i10 | 0));
 if (i8) {
  i11 = 0;
  i12 = 0;
 } else {
  __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm(i1, i3 * 9 | 0);
  i11 = HEAP32[i6 >> 2] | 0;
  i12 = HEAP32[i7 >> 2] | 0;
 }
 i8 = i12 - i11 >> 3;
 if (i8 >>> 0 >= i3 >>> 0) {
  if (i8 >>> 0 > i3 >>> 0) HEAP32[i7 >> 2] = i11 + (i3 << 3);
 } else __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8__appendEm(i6, i3 - i8 | 0);
 HEAPF32[i1 + 36 >> 2] = d2;
 HEAP32[i1 + 40 >> 2] = i3;
 HEAP32[i1 + 44 >> 2] = i4;
 HEAP32[i1 + 48 >> 2] = i5;
 return;
}

function _arMatrixTrans(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i3 | 0) != (HEAP32[i2 + 8 >> 2] | 0)) {
  i4 = -1;
  return i4 | 0;
 }
 i5 = HEAP32[i1 + 8 >> 2] | 0;
 if ((i5 | 0) != (HEAP32[i2 + 4 >> 2] | 0)) {
  i4 = -1;
  return i4 | 0;
 }
 if ((i3 | 0) <= 0) {
  i4 = 0;
  return i4 | 0;
 }
 i6 = HEAP32[i2 >> 2] | 0;
 if ((i5 | 0) <= 0) {
  i4 = 0;
  return i4 | 0;
 }
 i2 = 0;
 i7 = HEAP32[i1 >> 2] | 0;
 while (1) {
  i1 = i6 + (i2 << 3) | 0;
  i8 = 0;
  i9 = i7;
  while (1) {
   HEAPF64[i9 >> 3] = +HEAPF64[i1 >> 3];
   i8 = i8 + 1 | 0;
   if ((i8 | 0) == (i5 | 0)) break; else {
    i1 = i1 + (i3 << 3) | 0;
    i9 = i9 + 8 | 0;
   }
  }
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == (i3 | 0)) {
   i4 = 0;
   break;
  } else i7 = i7 + (i5 << 3) | 0;
 }
 return i4 | 0;
}

function _h2v2_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i2 = HEAP32[i4 >> 2] | 0;
 i4 = i1 + 312 | 0;
 if ((HEAP32[i4 >> 2] | 0) <= 0) return;
 i5 = i1 + 112 | 0;
 i1 = 0;
 i6 = 0;
 while (1) {
  i7 = HEAP32[i2 + (i6 << 2) >> 2] | 0;
  i8 = HEAP32[i5 >> 2] | 0;
  i9 = i7 + i8 | 0;
  if ((i8 | 0) > 0) {
   i10 = HEAP32[i3 + (i1 << 2) >> 2] | 0;
   i11 = i7;
   while (1) {
    i7 = HEAP8[i10 >> 0] | 0;
    HEAP8[i11 >> 0] = i7;
    HEAP8[i11 + 1 >> 0] = i7;
    i11 = i11 + 2 | 0;
    if (i11 >>> 0 >= i9 >>> 0) break; else i10 = i10 + 1 | 0;
   }
   i12 = HEAP32[i5 >> 2] | 0;
  } else i12 = i8;
  _jcopy_sample_rows(i2, i6, i2, i6 | 1, 1, i12);
  i6 = i6 + 2 | 0;
  if ((i6 | 0) >= (HEAP32[i4 >> 2] | 0)) break; else i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = i1 + 4 | 0;
 i5 = (HEAP32[i4 >> 2] | 0) != 143;
 i6 = HEAP32[i1 >> 2] | 0;
 i7 = i6;
 i8 = (HEAP32[i3 >> 2] | 0) - i7 | 0;
 i9 = i8 << 1;
 i10 = i8 >>> 0 < 2147483647 ? ((i9 | 0) == 0 ? 1 : i9) : -1;
 i9 = (HEAP32[i2 >> 2] | 0) - i7 | 0;
 i7 = _realloc(i5 ? i6 : 0, i10) | 0;
 if (!i7) __ZSt17__throw_bad_allocv();
 if (!i5) {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = i7;
  if (!i5) i11 = i7; else {
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i5);
   i11 = HEAP32[i1 >> 2] | 0;
  }
 } else {
  HEAP32[i1 >> 2] = i7;
  i11 = i7;
 }
 HEAP32[i4 >> 2] = 144;
 HEAP32[i2 >> 2] = i11 + i9;
 HEAP32[i3 >> 2] = (HEAP32[i1 >> 2] | 0) + i10;
 return;
}

function _loadCamera(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i3 = i2 + 192 | 0;
 i4 = i2 + 184 | 0;
 i5 = i2;
 i6 = i1 + 11 | 0;
 if ((HEAP8[i6 >> 0] | 0) < 0) i7 = HEAP32[i1 >> 2] | 0; else i7 = i1;
 if ((_arParamLoad(i7, 1, i5, i4) | 0) >= 0) {
  i7 = HEAP32[14196] | 0;
  HEAP32[14196] = i7 + 1;
  HEAP32[i4 >> 2] = i7;
  _memcpy(__ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56764, i4) | 0, i5 | 0, 184) | 0;
  i8 = HEAP32[i4 >> 2] | 0;
  STACKTOP = i2;
  return i8 | 0;
 }
 if ((HEAP8[i6 >> 0] | 0) < 0) i9 = HEAP32[i1 >> 2] | 0; else i9 = i1;
 HEAP32[i3 >> 2] = i9;
 _arLog(0, 3, 44206, i3);
 i8 = -1;
 STACKTOP = i2;
 return i8 | 0;
}

function _fputc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 if ((HEAP32[i2 + 76 >> 2] | 0) >= 0 ? (___lockfile(i2) | 0) != 0 : 0) {
  i3 = i1 & 255;
  i4 = i1 & 255;
  if ((i4 | 0) != (HEAP8[i2 + 75 >> 0] | 0) ? (i5 = i2 + 20 | 0, i6 = HEAP32[i5 >> 2] | 0, i6 >>> 0 < (HEAP32[i2 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i5 >> 2] = i6 + 1;
   HEAP8[i6 >> 0] = i3;
   i7 = i4;
  } else i7 = ___overflow(i2, i1) | 0;
  ___unlockfile(i2);
  i8 = i7;
 } else i9 = 3;
 do if ((i9 | 0) == 3) {
  i7 = i1 & 255;
  i4 = i1 & 255;
  if ((i4 | 0) != (HEAP8[i2 + 75 >> 0] | 0) ? (i3 = i2 + 20 | 0, i6 = HEAP32[i3 >> 2] | 0, i6 >>> 0 < (HEAP32[i2 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i3 >> 2] = i6 + 1;
   HEAP8[i6 >> 0] = i7;
   i8 = i4;
   break;
  }
  i8 = ___overflow(i2, i1) | 0;
 } while (0);
 return i8 | 0;
}

function _cycle(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i5 = i4;
 L1 : do if ((i3 | 0) >= 2 ? (i6 = i2 + (i3 << 2) | 0, HEAP32[i6 >> 2] = i5, i1 | 0) : 0) {
  i7 = i1;
  i8 = i5;
  while (1) {
   i9 = i7 >>> 0 < 256 ? i7 : 256;
   _memcpy(i8 | 0, HEAP32[i2 >> 2] | 0, i9 | 0) | 0;
   i10 = 0;
   do {
    i11 = i2 + (i10 << 2) | 0;
    i10 = i10 + 1 | 0;
    _memcpy(HEAP32[i11 >> 2] | 0, HEAP32[i2 + (i10 << 2) >> 2] | 0, i9 | 0) | 0;
    HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + i9;
   } while ((i10 | 0) != (i3 | 0));
   i10 = i7 - i9 | 0;
   if (!i10) break L1;
   i7 = i10;
   i8 = HEAP32[i6 >> 2] | 0;
  }
 } while (0);
 STACKTOP = i4;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = i1 + 11 | 0;
 i5 = HEAP8[i4 >> 0] | 0;
 if (i5 << 24 >> 24 < 0) {
  i6 = HEAP32[i1 >> 2] | 0;
  i7 = HEAP32[i1 + 4 >> 2] | 0;
 } else {
  i6 = i1;
  i7 = i5 & 255;
 }
 i8 = (i7 | 0) != 0 & 1;
 i9 = i7 - i8 | 0;
 if (!i9) i10 = i5; else {
  __ZNSt3__211char_traitsIcE4moveEPcPKcm(i6, i6 + i8 | 0, i9) | 0;
  i10 = HEAP8[i4 >> 0] | 0;
 }
 if (i10 << 24 >> 24 < 0) HEAP32[i1 + 4 >> 2] = i9; else HEAP8[i4 >> 0] = i9;
 HEAP8[i3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i6 + i9 | 0, i3);
 STACKTOP = i2;
 return;
}

function _color_quantize3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i5 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i7 = HEAP32[i5 + 4 >> 2] | 0;
 i8 = HEAP32[i5 + 8 >> 2] | 0;
 i5 = HEAP32[i1 + 112 >> 2] | 0;
 if ((i4 | 0) < 1 | (i5 | 0) == 0) return;
 i1 = 0;
 do {
  i9 = i5;
  i10 = HEAP32[i3 + (i1 << 2) >> 2] | 0;
  i11 = HEAP32[i2 + (i1 << 2) >> 2] | 0;
  while (1) {
   HEAP8[i10 >> 0] = (HEAPU8[i7 + (HEAPU8[i11 + 1 >> 0] | 0) >> 0] | 0) + (HEAPU8[i6 + (HEAPU8[i11 >> 0] | 0) >> 0] | 0) + (HEAPU8[i8 + (HEAPU8[i11 + 2 >> 0] | 0) >> 0] | 0);
   i9 = i9 + -1 | 0;
   if (!i9) break; else {
    i10 = i10 + 1 | 0;
    i11 = i11 + 3 | 0;
   }
  }
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != (i4 | 0));
 return;
}

function _read_restart_marker(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = i1 + 416 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 do if (!i3) if (!(_next_marker(i1) | 0)) {
  i4 = 0;
  return i4 | 0;
 } else {
  i5 = HEAP32[i2 >> 2] | 0;
  break;
 } else i5 = i3; while (0);
 i3 = i1 + 440 | 0;
 i6 = HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] | 0;
 if ((i5 | 0) != (i6 + 208 | 0)) {
  if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 + 24 >> 2] | 0) + 20 >> 2] & 63](i1, i6) | 0)) {
   i4 = 0;
   return i4 | 0;
  }
 } else {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i5 + 20 >> 2] = 98;
  HEAP32[i5 + 24 >> 2] = i6;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 63](i1, 3);
  HEAP32[i2 >> 2] = 0;
 }
 i2 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
 HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1 & 7;
 i4 = 1;
 return i4 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 if (HEAP32[i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i3, i1);
  if (HEAP8[i3 >> 0] | 0 ? (i4 = HEAP32[i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0) == -1) : 0) {
   i4 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj(i4, HEAP32[i4 + 16 >> 2] | 1);
  }
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i3);
 }
 STACKTOP = i2;
 return i1 | 0;
}

function __ZN6vision20VisualDatabaseFacadeC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 HEAP32[i1 >> 2] = 0;
 i2 = __Znwm(24) | 0;
 __ZN6vision18VisualDatabaseImplC2Ev(i2);
 i3 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i2;
 if (!i3) return;
 i2 = HEAP32[i3 + 12 >> 2] | 0;
 if (i2 | 0) {
  i1 = i2;
  do {
   i2 = i1;
   i1 = HEAP32[i1 >> 2] | 0;
   i4 = HEAP32[i2 + 12 >> 2] | 0;
   if (i4 | 0) {
    HEAP32[i2 + 16 >> 2] = i4;
    __ZdlPv(i4);
   }
   __ZdlPv(i2);
  } while ((i1 | 0) != 0);
 }
 i1 = i3 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 if (i2 | 0) __ZdlPv(i2);
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = 0;
 if (i2 | 0) {
  __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEED2Ev(i2);
  __ZdlPv(i2);
 }
 __ZdlPv(i3);
 return;
}

function _ungetc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 do if ((i1 | 0) != -1) {
  if ((HEAP32[i2 + 76 >> 2] | 0) > -1) i3 = ___lockfile(i2) | 0; else i3 = 0;
  i4 = i2 + 4 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if (!i5) {
   ___toread(i2) | 0;
   i6 = HEAP32[i4 >> 2] | 0;
   if (i6 | 0) {
    i7 = i6;
    i8 = 6;
   }
  } else {
   i7 = i5;
   i8 = 6;
  }
  if ((i8 | 0) == 6 ? i7 >>> 0 > ((HEAP32[i2 + 44 >> 2] | 0) + -8 | 0) >>> 0 : 0) {
   i5 = i7 + -1 | 0;
   HEAP32[i4 >> 2] = i5;
   HEAP8[i5 >> 0] = i1;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] & -17;
   if (!i3) {
    i9 = i1;
    break;
   }
   ___unlockfile(i2);
   i9 = i1;
   break;
  }
  if (i3) {
   ___unlockfile(i2);
   i9 = -1;
  } else i9 = -1;
 } else i9 = -1; while (0);
 return i9 | 0;
}

function _frexp(d1, i2) {
 d1 = +d1;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, i8 = 0, d9 = 0.0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i3 = HEAP32[tempDoublePtr >> 2] | 0;
 i4 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i5 = _bitshift64Lshr(i3 | 0, i4 | 0, 52) | 0;
 getTempRet0() | 0;
 switch (i5 & 2047) {
 case 0:
  {
   if (d1 != 0.0) {
    d6 = +_frexp(d1 * 18446744073709551616.0, i2);
    d7 = d6;
    i8 = (HEAP32[i2 >> 2] | 0) + -64 | 0;
   } else {
    d7 = d1;
    i8 = 0;
   }
   HEAP32[i2 >> 2] = i8;
   d9 = d7;
   break;
  }
 case 2047:
  {
   d9 = d1;
   break;
  }
 default:
  {
   HEAP32[i2 >> 2] = (i5 & 2047) + -1022;
   HEAP32[tempDoublePtr >> 2] = i3;
   HEAP32[tempDoublePtr + 4 >> 2] = i4 & -2146435073 | 1071644672;
   d9 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +d9;
}

function __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEENS5_IS9_Lm4096EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  i3 = i1 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  while (1) {
   if ((i4 | 0) == (i2 | 0)) break;
   i5 = i4 + -16 | 0;
   __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i5);
   i4 = i5;
  }
  HEAP32[i3 >> 2] = i2;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE10deallocateEPS8_m(i1 + 12 | 0, i2, (HEAP32[i1 + 8 >> 2] | 0) - i2 >> 4);
 }
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 while (1) {
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -16 | 0;
  HEAP32[i3 >> 2] = i5;
  __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i5);
 }
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE10deallocateEPS8_m(HEAP32[i1 + 16 >> 2] | 0, i3, (HEAP32[i1 + 12 >> 2] | 0) - i3 >> 4);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58516) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 16 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58516) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 24 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 16 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 24 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 84 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 88 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 72 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 76 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 60 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 64 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 48 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 52 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 36 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 40 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 24 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 28 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = i1 + 8 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = 0;
 if (!i1) return;
 __ZN6vision4NodeILi96EED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _strlen(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i2 = i1;
 L1 : do if (!(i2 & 3)) {
  i3 = i1;
  i4 = 5;
 } else {
  i5 = i1;
  i6 = i2;
  while (1) {
   if (!(HEAP8[i5 >> 0] | 0)) {
    i7 = i6;
    break L1;
   }
   i8 = i5 + 1 | 0;
   i6 = i8;
   if (!(i6 & 3)) {
    i3 = i8;
    i4 = 5;
    break;
   } else i5 = i8;
  }
 } while (0);
 if ((i4 | 0) == 5) {
  i4 = i3;
  while (1) {
   i9 = HEAP32[i4 >> 2] | 0;
   if (!((i9 & -2139062144 ^ -2139062144) & i9 + -16843009)) i4 = i4 + 4 | 0; else break;
  }
  if (!((i9 & 255) << 24 >> 24)) i10 = i4; else {
   i9 = i4;
   while (1) {
    i4 = i9 + 1 | 0;
    if (!(HEAP8[i4 >> 0] | 0)) {
     i10 = i4;
     break;
    } else i9 = i4;
   }
  }
  i7 = i10;
 }
 return i7 - i2 | 0;
}

function _h2v1_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i2 = HEAP32[i4 >> 2] | 0;
 i4 = i1 + 312 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 if ((i5 | 0) <= 0) return;
 i6 = i1 + 112 | 0;
 i1 = 0;
 i7 = i5;
 while (1) {
  i5 = HEAP32[i2 + (i1 << 2) >> 2] | 0;
  i8 = HEAP32[i6 >> 2] | 0;
  i9 = i5 + i8 | 0;
  if ((i8 | 0) > 0) {
   i8 = HEAP32[i3 + (i1 << 2) >> 2] | 0;
   i10 = i5;
   while (1) {
    i5 = HEAP8[i8 >> 0] | 0;
    HEAP8[i10 >> 0] = i5;
    HEAP8[i10 + 1 >> 0] = i5;
    i10 = i10 + 2 | 0;
    if (i10 >>> 0 >= i9 >>> 0) break; else i8 = i8 + 1 | 0;
   }
   i11 = HEAP32[i4 >> 2] | 0;
  } else i11 = i7;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) >= (i11 | 0)) break; else i7 = i11;
 }
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i9, i8, i4, i5, i6, 10960, 10992) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i9, i8, i4, i5, i6, 48109, 48117) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i3;
  i6 = i1;
 } else {
  i7 = i3 + 16 & -16;
  i8 = __Znwm(i7) | 0;
  HEAP32[i1 >> 2] = i8;
  HEAP32[i1 + 8 >> 2] = i7 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i3;
  i6 = i8;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcm(i6, i2, i3) | 0;
 HEAP8[i5 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i6 + i3 | 0, i5);
 STACKTOP = i4;
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58516) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6 + 20 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 4 | 0;
 i9 = i7;
 __ZNKSt3__28ios_base6getlocEv(i8, i4);
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i8, 58484) | 0;
 __ZNSt3__26localeD2Ev(i8);
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6 + 20 | 0, i2, i8, i5, i4);
 STACKTOP = i7;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 if (i2 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i2 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i2;
  i6 = i1;
 } else {
  i7 = i2 + 16 & -16;
  i8 = __Znwm(i7) | 0;
  HEAP32[i1 >> 2] = i8;
  HEAP32[i1 + 8 >> 2] = i7 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i2;
  i6 = i8;
 }
 __ZNSt3__211char_traitsIcE6assignEPcmc(i6, i2, i3) | 0;
 HEAP8[i5 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc(i6 + i2 | 0, i5);
 STACKTOP = i4;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i8 | 0) < 69) i9 = i8 + 2e3 | 0; else i9 = (i8 | 0) < 100 ? i8 + 1900 | 0 : i8;
  HEAP32[i2 >> 2] = i9 + -1900;
 }
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i8 | 0) < 69) i9 = i8 + 2e3 | 0; else i9 = (i8 | 0) < 100 ? i8 + 1900 | 0 : i8;
  HEAP32[i2 >> 2] = i9 + -1900;
 }
 STACKTOP = i1;
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i10 = i7 + 4 | 0;
 i11 = i7;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
 i11 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i11 | 0;
}

function _scalbn(d1, i2) {
 d1 = +d1;
 i2 = i2 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0;
 if ((i2 | 0) <= 1023) if ((i2 | 0) < -1022) {
  d3 = d1 * 2.2250738585072014e-308;
  i4 = (i2 | 0) < -2044;
  i5 = i2 + 2044 | 0;
  d6 = i4 ? d3 * 2.2250738585072014e-308 : d3;
  i7 = i4 ? ((i5 | 0) > -1022 ? i5 : -1022) : i2 + 1022 | 0;
 } else {
  d6 = d1;
  i7 = i2;
 } else {
  d3 = d1 * 8988465674311579538646525.0e283;
  i5 = (i2 | 0) > 2046;
  i4 = i2 + -2046 | 0;
  d6 = i5 ? d3 * 8988465674311579538646525.0e283 : d3;
  i7 = i5 ? ((i4 | 0) < 1023 ? i4 : 1023) : i2 + -1023 | 0;
 }
 i2 = _bitshift64Shl(i7 + 1023 | 0, 0, 52) | 0;
 i7 = getTempRet0() | 0;
 HEAP32[tempDoublePtr >> 2] = i2;
 HEAP32[tempDoublePtr + 4 >> 2] = i7;
 return +(d6 * +HEAPF64[tempDoublePtr >> 3]);
}

function _atoi(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i1;
 while (1) {
  i3 = i2 + 1 | 0;
  if (!(_isspace(HEAP8[i2 >> 0] | 0) | 0)) break; else i2 = i3;
 }
 i1 = HEAP8[i2 >> 0] | 0;
 switch (i1 | 0) {
 case 45:
  {
   i4 = 1;
   i5 = 5;
   break;
  }
 case 43:
  {
   i4 = 0;
   i5 = 5;
   break;
  }
 default:
  {
   i6 = 0;
   i7 = i2;
   i8 = i1;
  }
 }
 if ((i5 | 0) == 5) {
  i6 = i4;
  i7 = i3;
  i8 = HEAP8[i3 >> 0] | 0;
 }
 if (!(_isdigit(i8) | 0)) i9 = 0; else {
  i8 = 0;
  i3 = i7;
  while (1) {
   i7 = (i8 * 10 | 0) + 48 - (HEAP8[i3 >> 0] | 0) | 0;
   i3 = i3 + 1 | 0;
   if (!(_isdigit(HEAP8[i3 >> 0] | 0) | 0)) {
    i9 = i7;
    break;
   } else i8 = i7;
  }
 }
 return ((i6 | 0) == 0 ? 0 - i9 | 0 : i9) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 HEAP32[i3 >> 2] = 0;
 if ((i1 | 0) != (i2 | 0)) {
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 == 114) {
   HEAP32[i3 >> 2] = 4;
   i4 = i1 + 1 | 0;
   i5 = i4;
   i6 = 4;
   i7 = HEAP8[i4 >> 0] | 0;
  } else {
   i5 = i1;
   i6 = 0;
   i7 = i2;
  }
  if (i7 << 24 >> 24 == 86) {
   i2 = i6 | 2;
   HEAP32[i3 >> 2] = i2;
   i4 = i5 + 1 | 0;
   i8 = i4;
   i9 = HEAP8[i4 >> 0] | 0;
   i10 = i2;
  } else {
   i8 = i5;
   i9 = i7;
   i10 = i6;
  }
  if (i9 << 24 >> 24 == 75) {
   HEAP32[i3 >> 2] = i10 | 1;
   i11 = i8 + 1 | 0;
  } else i11 = i8;
 } else i11 = i1;
 return i11 | 0;
}

function _strtox(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, d8 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i5 = i4;
 _memset(i5 | 0, 0, 144) | 0;
 i6 = i5 + 4 | 0;
 HEAP32[i6 >> 2] = i1;
 i7 = i5 + 8 | 0;
 HEAP32[i7 >> 2] = -1;
 HEAP32[i5 + 44 >> 2] = i1;
 HEAP32[i5 + 76 >> 2] = -1;
 ___shlim(i5, 0, 0);
 d8 = +___floatscan(i5, i3, 1);
 i3 = i5 + 120 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) | 0;
 i7 = _i64Add(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, i5 | 0, ((i5 | 0) < 0) << 31 >> 31 | 0) | 0;
 i5 = getTempRet0() | 0;
 if (i2 | 0) HEAP32[i2 >> 2] = (i7 | 0) == 0 & (i5 | 0) == 0 ? i1 : i1 + i7 | 0;
 STACKTOP = i4;
 return +d8;
}

function __ZN6vision18BinomialPyramid32fD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 HEAP32[i1 >> 2] = 13484;
 i2 = HEAP32[i1 + 56 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 60 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 48 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 32 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 36 >> 2] = i2;
  __ZdlPv(i2);
 }
 HEAP32[i1 >> 2] = 13500;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) return;
 i4 = i1 + 8 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if ((i1 | 0) == (i3 | 0)) i5 = i3; else {
  i6 = i1;
  do {
   i6 = i6 + -32 | 0;
   __ZN6vision5ImageD2Ev(i6);
  } while ((i6 | 0) != (i3 | 0));
  i5 = HEAP32[i2 >> 2] | 0;
 }
 HEAP32[i4 >> 2] = i3;
 __ZdlPv(i5);
 return;
}

function ___ftello_unlocked(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (!(HEAP32[i1 >> 2] & 128)) i2 = 1; else i2 = (HEAP32[i1 + 20 >> 2] | 0) >>> 0 > (HEAP32[i1 + 28 >> 2] | 0) >>> 0 ? 2 : 1;
 i3 = FUNCTION_TABLE_iiiii[HEAP32[i1 + 40 >> 2] & 15](i1, 0, 0, i2) | 0;
 i2 = getTempRet0() | 0;
 if ((i2 | 0) < 0) {
  i4 = i2;
  i5 = i3;
 } else {
  i6 = (HEAP32[i1 + 8 >> 2] | 0) - (HEAP32[i1 + 4 >> 2] | 0) | 0;
  i7 = _i64Subtract(i3 | 0, i2 | 0, i6 | 0, ((i6 | 0) < 0) << 31 >> 31 | 0) | 0;
  i6 = getTempRet0() | 0;
  i2 = (HEAP32[i1 + 20 >> 2] | 0) - (HEAP32[i1 + 28 >> 2] | 0) | 0;
  i1 = _i64Add(i7 | 0, i6 | 0, i2 | 0, ((i2 | 0) < 0) << 31 >> 31 | 0) | 0;
  i4 = getTempRet0() | 0;
  i5 = i1;
 }
 setTempRet0(i4 | 0);
 return i5 | 0;
}

function __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = i2 + 4 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 i4 = i1 + 8 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 if ((HEAP32[i1 + 12 >> 2] | 0) - i5 >> 2 >>> 0 > i3 >>> 0) {
  i6 = i4;
  i7 = i5;
 } else {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm(i4, i3 + 1 | 0);
  i6 = i4;
  i7 = HEAP32[i4 >> 2] | 0;
 }
 i4 = HEAP32[i7 + (i3 << 2) >> 2] | 0;
 if (i4 | 0 ? (i7 = i4 + 4 | 0, i5 = HEAP32[i7 >> 2] | 0, HEAP32[i7 >> 2] = i5 + -1, (i5 | 0) == 0) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 255](i4);
 HEAP32[(HEAP32[i6 >> 2] | 0) + (i3 << 2) >> 2] = i2;
 return;
}

function __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 L1 : do switch ((HEAP32[i3 + 4 >> 2] & 176) << 24 >> 24) {
 case 16:
  {
   i4 = HEAP8[i1 >> 0] | 0;
   switch (i4 << 24 >> 24) {
   case 43:
   case 45:
    {
     i5 = i1 + 1 | 0;
     break L1;
     break;
    }
   default:
    {}
   }
   if ((i2 - i1 | 0) > 1 & i4 << 24 >> 24 == 48) {
    switch (HEAP8[i1 + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      i6 = 7;
      break L1;
     }
    }
    i5 = i1 + 2 | 0;
   } else i6 = 7;
   break;
  }
 case 32:
  {
   i5 = i2;
   break;
  }
 default:
  i6 = 7;
 } while (0);
 if ((i6 | 0) == 7) i5 = i1;
 return i5 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 + -1 | 0) >>> 0 < 12 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 + -1 | 0) >>> 0 < 12 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function _prescan_quantize(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 24 >> 2] | 0;
 i5 = HEAP32[i1 + 112 >> 2] | 0;
 if ((i4 | 0) < 1 | (i5 | 0) == 0) return;
 i1 = 0;
 do {
  i6 = i5;
  i7 = HEAP32[i2 + (i1 << 2) >> 2] | 0;
  while (1) {
   i8 = (HEAP32[i3 + ((HEAPU8[i7 >> 0] | 0) >>> 3 << 2) >> 2] | 0) + ((HEAPU8[i7 + 1 >> 0] | 0) >>> 2 << 6) + ((HEAPU8[i7 + 2 >> 0] | 0) >>> 3 << 1) | 0;
   i9 = HEAP16[i8 >> 1] | 0;
   i10 = i9 + 1 << 16 >> 16;
   HEAP16[i8 >> 1] = i10 << 16 >> 16 == 0 ? i9 : i10;
   i6 = i6 + -1 | 0;
   if (!i6) break; else i7 = i7 + 3 | 0;
  }
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != (i4 | 0));
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 + -1 | 0) >>> 0 < 31 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 3) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 366 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 + -1 | 0) >>> 0 < 31 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 3) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 366 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function _fclose(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if ((HEAP32[i1 + 76 >> 2] | 0) > -1) i2 = ___lockfile(i1) | 0; else i2 = 0;
 ___unlist_locked_file(i1);
 i3 = (HEAP32[i1 >> 2] & 1 | 0) != 0;
 if (!i3) {
  i4 = ___ofl_lock() | 0;
  i5 = HEAP32[i1 + 52 >> 2] | 0;
  i6 = i1 + 56 | 0;
  if (i5 | 0) HEAP32[i5 + 56 >> 2] = HEAP32[i6 >> 2];
  i7 = HEAP32[i6 >> 2] | 0;
  if (i7 | 0) HEAP32[i7 + 52 >> 2] = i5;
  if ((HEAP32[i4 >> 2] | 0) == (i1 | 0)) HEAP32[i4 >> 2] = i7;
  ___ofl_unlock();
 }
 i7 = _fflush(i1) | 0;
 i4 = FUNCTION_TABLE_ii[HEAP32[i1 + 12 >> 2] & 127](i1) | 0 | i7;
 i7 = HEAP32[i1 + 96 >> 2] | 0;
 if (i7 | 0) _free(i7);
 if (i3) {
  if (i2 | 0) ___unlockfile(i1);
 } else _free(i1);
 return i4 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 13 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8 + -1; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 13 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8 + -1; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 1) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 7 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 61 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 60 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 1) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 7 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 61 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 60 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 24 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 2) | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 if ((i8 | 0) < 24 & (i6 & 4 | 0) == 0) HEAP32[i2 >> 2] = i8; else HEAP32[i5 >> 2] = i6 | 4;
 STACKTOP = i1;
 return;
}

function ___fflush_unlocked(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i1 + 20 | 0;
 i3 = i1 + 28 | 0;
 if ((HEAP32[i2 >> 2] | 0) >>> 0 > (HEAP32[i3 >> 2] | 0) >>> 0 ? (FUNCTION_TABLE_iiii[HEAP32[i1 + 36 >> 2] & 63](i1, 0, 0) | 0, (HEAP32[i2 >> 2] | 0) == 0) : 0) i4 = -1; else {
  i5 = i1 + 4 | 0;
  i6 = HEAP32[i5 >> 2] | 0;
  i7 = i1 + 8 | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  if (i6 >>> 0 < i8 >>> 0) {
   i9 = i6 - i8 | 0;
   FUNCTION_TABLE_iiiii[HEAP32[i1 + 40 >> 2] & 15](i1, i9, ((i9 | 0) < 0) << 31 >> 31, 1) | 0;
   getTempRet0() | 0;
  }
  HEAP32[i1 + 16 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i5 >> 2] = 0;
  i4 = 0;
 }
 return i4 | 0;
}

function __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i8 = i7;
 HEAP8[i8 >> 0] = 37;
 i9 = i8 + 1 | 0;
 HEAP8[i9 >> 0] = i5;
 i10 = i8 + 2 | 0;
 HEAP8[i10 >> 0] = i6;
 HEAP8[i8 + 3 >> 0] = 0;
 if (i6 << 24 >> 24) {
  HEAP8[i9 >> 0] = i6;
  HEAP8[i10 >> 0] = i5;
 }
 i5 = __ZNSt3__212_GLOBAL__N_17countofIcEEmPKT_S4_(i2, HEAP32[i3 >> 2] | 0) | 0;
 i10 = i2 + (_strftime_l(i2 | 0, i5 | 0, i8 | 0, i4 | 0, HEAP32[i1 >> 2] | 0) | 0) | 0;
 HEAP32[i3 >> 2] = i10;
 STACKTOP = i7;
 return;
}

function _arSetDebugMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!i1) {
  i4 = -1;
  STACKTOP = i3;
  return i4 | 0;
 }
 if ((HEAP32[i1 >> 2] | 0) == (i2 | 0)) {
  i4 = 0;
  STACKTOP = i3;
  return i4 | 0;
 }
 HEAP32[i1 >> 2] = i2;
 if (!i2) {
  i2 = i1 + 4834148 | 0;
  _free(HEAP32[i2 >> 2] | 0);
  HEAP32[i2 >> 2] = 0;
  i4 = 0;
  STACKTOP = i3;
  return i4 | 0;
 }
 i2 = _malloc(Math_imul(HEAP32[i1 + 40 >> 2] | 0, HEAP32[i1 + 36 >> 2] | 0) | 0) | 0;
 HEAP32[i1 + 4834148 >> 2] = i2;
 if (!i2) {
  _arLog(0, 3, 20510, i3);
  _exit(1);
 } else {
  i4 = 0;
  STACKTOP = i3;
  return i4 | 0;
 }
 return 0;
}

function _arMatrixDup(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i3 | 0) != (HEAP32[i2 + 4 >> 2] | 0)) {
  i4 = -1;
  return i4 | 0;
 }
 i5 = HEAP32[i1 + 8 >> 2] | 0;
 if ((i5 | 0) != (HEAP32[i2 + 8 >> 2] | 0)) {
  i4 = -1;
  return i4 | 0;
 }
 if (!((i3 | 0) > 0 & (i5 | 0) > 0)) {
  i4 = 0;
  return i4 | 0;
 }
 i6 = HEAP32[i2 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i1 = 0;
 do {
  i7 = Math_imul(i1, i5) | 0;
  i8 = 0;
  do {
   i9 = i8 + i7 | 0;
   HEAPF64[i2 + (i9 << 3) >> 3] = +HEAPF64[i6 + (i9 << 3) >> 3];
   i8 = i8 + 1 | 0;
  } while ((i8 | 0) != (i5 | 0));
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != (i3 | 0));
 i4 = 0;
 return i4 | 0;
}

function __ZNSt3__26locale5__impD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 HEAP32[i1 >> 2] = 16816;
 i2 = i1 + 8 | 0;
 i3 = i1 + 12 | 0;
 i4 = 0;
 while (1) {
  i5 = HEAP32[i2 >> 2] | 0;
  if (i4 >>> 0 >= (HEAP32[i3 >> 2] | 0) - i5 >> 2 >>> 0) break;
  i6 = HEAP32[i5 + (i4 << 2) >> 2] | 0;
  if (i6 | 0 ? (i5 = i6 + 4 | 0, i7 = HEAP32[i5 >> 2] | 0, HEAP32[i5 >> 2] = i7 + -1, (i7 | 0) == 0) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 255](i6);
  i4 = i4 + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 144 | 0);
 __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev(i2);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 if ((i1 | 0) != (i2 | 0)) {
  i4 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
  if ((i4 | 0) == (i1 | 0)) i5 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0; else i5 = i4;
  if ((i5 | 0) != (i1 | 0) ? (i4 = HEAP32[i3 + 4 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i4 | 0)) : 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i4 + -24 | 0, 0, 50315) | 0;
   i6 = i5;
  } else i6 = i1;
 } else i6 = i1;
 return i6 | 0;
}

function _strtox_547(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i7 = i6;
 HEAP32[i7 >> 2] = 0;
 i8 = i7 + 4 | 0;
 HEAP32[i8 >> 2] = i1;
 HEAP32[i7 + 44 >> 2] = i1;
 i9 = i7 + 8 | 0;
 HEAP32[i9 >> 2] = (i1 | 0) < 0 ? -1 : i1 + 2147483647 | 0;
 HEAP32[i7 + 76 >> 2] = -1;
 ___shlim(i7, 0, 0);
 i10 = ___intscan(i7, i3, 1, i4, i5) | 0;
 i5 = getTempRet0() | 0;
 if (i2 | 0) HEAP32[i2 >> 2] = i1 + ((HEAP32[i8 >> 2] | 0) + (HEAP32[i7 + 120 >> 2] | 0) - (HEAP32[i9 >> 2] | 0));
 setTempRet0(i5 | 0);
 STACKTOP = i6;
 return i10 | 0;
}

function _arVecHousehold(i1) {
 i1 = i1 | 0;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0, i5 = 0, d6 = 0.0, d7 = 0.0, i8 = 0;
 d2 = +Math_sqrt(+(+_arVecInnerproduct(i1, i1)));
 if (!(d2 != 0.0)) {
  d3 = d2;
  d4 = -d3;
  return +d4;
 }
 i5 = HEAP32[i1 >> 2] | 0;
 d6 = +HEAPF64[i5 >> 3];
 d7 = d6 < 0.0 ? -d2 : d2;
 d2 = d6 + d7;
 HEAPF64[i5 >> 3] = d2;
 d6 = 1.0 / +Math_sqrt(+(d7 * d2));
 i8 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i8 | 0) <= 0) {
  d3 = d7;
  d4 = -d3;
  return +d4;
 }
 HEAPF64[i5 >> 3] = d6 * d2;
 if ((i8 | 0) == 1) {
  d3 = d7;
  d4 = -d3;
  return +d4;
 }
 i1 = 1;
 do {
  HEAPF64[i5 + (i1 << 3) >> 3] = d6 * +HEAPF64[i5 + (i1 << 3) >> 3];
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) < (i8 | 0));
 d3 = d7;
 d4 = -d3;
 return +d4;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i3 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if ((((HEAP32[i3 + 24 >> 2] | 0 ? (HEAP32[i3 + 16 >> 2] | 0) == 0 : 0) ? HEAP32[i3 + 4 >> 2] & 8192 | 0 : 0) ? !(__ZSt18uncaught_exceptionv() | 0) : 0) ? (i3 = HEAP32[i2 >> 2] | 0, i1 = HEAP32[i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 127](i1) | 0) == -1) : 0) {
  i1 = HEAP32[i2 >> 2] | 0;
  i2 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj(i2, HEAP32[i2 + 16 >> 2] | 1);
 }
 return;
}

function __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  i3 = i1 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  while (1) {
   if ((i4 | 0) == (i2 | 0)) break;
   i5 = i4 + -16 | 0;
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
   i4 = i5;
  }
  HEAP32[i3 >> 2] = i2;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE10deallocateEPS6_m(i1 + 12 | 0, i2, (HEAP32[i1 + 8 >> 2] | 0) - i2 >> 4);
 }
 return;
}

function _ar2FreeImageSet(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 if (!i1) {
  i2 = -1;
  return i2 | 0;
 }
 i3 = HEAP32[i1 >> 2] | 0;
 if (!i3) {
  i2 = -1;
  return i2 | 0;
 }
 i4 = HEAP32[i3 >> 2] | 0;
 if ((HEAP32[i3 + 4 >> 2] | 0) > 0) {
  i3 = 0;
  i5 = i4;
  while (1) {
   _free(HEAP32[HEAP32[i5 + (i3 << 2) >> 2] >> 2] | 0);
   _free(HEAP32[(HEAP32[HEAP32[i1 >> 2] >> 2] | 0) + (i3 << 2) >> 2] | 0);
   i3 = i3 + 1 | 0;
   i6 = HEAP32[i1 >> 2] | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   if ((i3 | 0) >= (HEAP32[i6 + 4 >> 2] | 0)) {
    i8 = i7;
    break;
   } else i5 = i7;
  }
 } else i8 = i4;
 _free(i8);
 _free(HEAP32[i1 >> 2] | 0);
 HEAP32[i1 >> 2] = 0;
 i2 = 0;
 return i2 | 0;
}

function _cat(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (!i1) {
  i3 = ___errno_location() | 0;
  HEAP32[i3 >> 2] = 22;
  i4 = 0;
  return i4 | 0;
 }
 i3 = _fopen(i1, 20119) | 0;
 if (!i3) {
  i4 = 0;
  return i4 | 0;
 }
 _fseek(i3, 0, 2) | 0;
 i1 = _ftell(i3) | 0;
 _fseek(i3, 0, 0) | 0;
 i5 = i1 + 1 | 0;
 i6 = _malloc(i5) | 0;
 if (!i6) {
  _fclose(i3) | 0;
  i7 = ___errno_location() | 0;
  HEAP32[i7 >> 2] = 12;
  i4 = 0;
  return i4 | 0;
 }
 if (!(_fread(i6, i1, 1, i3) | 0)) {
  _free(i6);
  _fclose(i3) | 0;
  i4 = 0;
  return i4 | 0;
 }
 HEAP8[i6 + i1 >> 0] = 0;
 _fclose(i3) | 0;
 if (!i2) {
  i4 = i6;
  return i4 | 0;
 }
 HEAP32[i2 >> 2] = i5;
 i4 = i6;
 return i4 | 0;
}

function __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE7reserveEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i3 >> 2] | 0) - i4 >> 2 >>> 0 >= i2 >>> 0) return;
 i5 = i1 + 4 | 0;
 if (i2 >>> 0 > 1073741823) {
  i6 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i6, 40980);
  HEAP32[i6 >> 2] = 17420;
  ___cxa_throw(i6 | 0, 13288, 107);
 }
 i6 = (HEAP32[i5 >> 2] | 0) - i4 | 0;
 i7 = __Znwm(i2 << 2) | 0;
 if ((i6 | 0) > 0) _memcpy(i7 | 0, i4 | 0, i6 | 0) | 0;
 HEAP32[i1 >> 2] = i7;
 HEAP32[i5 >> 2] = i7 + (i6 >> 2 << 2);
 HEAP32[i3 >> 2] = i7 + (i2 << 2);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function _icpGetU_from_X_by_MatX2U(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, i8 = 0, d9 = 0.0;
 d4 = +HEAPF64[i3 >> 3];
 d5 = +HEAPF64[i3 + 8 >> 3];
 d6 = +HEAPF64[i3 + 16 >> 3];
 d7 = +HEAPF64[i2 + 88 >> 3] + (d4 * +HEAPF64[i2 + 64 >> 3] + d5 * +HEAPF64[i2 + 72 >> 3] + d6 * +HEAPF64[i2 + 80 >> 3]);
 if (d7 == 0.0) {
  i8 = -1;
  return i8 | 0;
 }
 d9 = +HEAPF64[i2 + 56 >> 3] + (d4 * +HEAPF64[i2 + 32 >> 3] + d5 * +HEAPF64[i2 + 40 >> 3] + d6 * +HEAPF64[i2 + 48 >> 3]);
 HEAPF64[i1 >> 3] = (+HEAPF64[i2 + 24 >> 3] + (d4 * +HEAPF64[i2 >> 3] + d5 * +HEAPF64[i2 + 8 >> 3] + d6 * +HEAPF64[i2 + 16 >> 3])) / d7;
 HEAPF64[i1 + 8 >> 3] = d9 / d7;
 i8 = 0;
 return i8 | 0;
}

function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 while (1) {
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -16 | 0;
  HEAP32[i3 >> 2] = i5;
  __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i5);
 }
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE10deallocateEPS6_m(HEAP32[i1 + 16 >> 2] | 0, i3, (HEAP32[i1 + 12 >> 2] | 0) - i3 >> 4);
 return;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i3 >> 2] | 0) - i4 >> 3 >>> 0 >= i2 >>> 0) return;
 i5 = i1 + 4 | 0;
 if (i2 >>> 0 > 536870911) {
  i6 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc(i6, 40980);
  HEAP32[i6 >> 2] = 17420;
  ___cxa_throw(i6 | 0, 13288, 107);
 }
 i6 = (HEAP32[i5 >> 2] | 0) - i4 | 0;
 i7 = __Znwm(i2 << 3) | 0;
 if ((i6 | 0) > 0) _memcpy(i7 | 0, i4 | 0, i6 | 0) | 0;
 HEAP32[i1 >> 2] = i7;
 HEAP32[i5 >> 2] = i7 + (i6 >> 3 << 3);
 HEAP32[i3 >> 2] = i7 + (i2 << 3);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function ___stdio_seek(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5 + 8 | 0;
 i7 = i5;
 HEAP32[i6 >> 2] = HEAP32[i1 + 60 >> 2];
 HEAP32[i6 + 4 >> 2] = i3;
 HEAP32[i6 + 8 >> 2] = i2;
 HEAP32[i6 + 12 >> 2] = i7;
 HEAP32[i6 + 16 >> 2] = i4;
 if ((___syscall_ret(___syscall140(140, i6 | 0) | 0) | 0) < 0) {
  i6 = i7;
  HEAP32[i6 >> 2] = -1;
  HEAP32[i6 + 4 >> 2] = -1;
  i8 = -1;
  i9 = -1;
 } else {
  i6 = i7;
  i8 = HEAP32[i6 + 4 >> 2] | 0;
  i9 = HEAP32[i6 >> 2] | 0;
 }
 setTempRet0(i8 | 0);
 STACKTOP = i5;
 return i9 | 0;
}

function _process_data_simple_main_29(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i5 = HEAP32[i1 + 424 >> 2] | 0;
 i6 = i5 + 48 | 0;
 do if (!(HEAP32[i6 >> 2] | 0)) {
  i7 = i5 + 8 | 0;
  if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 + 428 >> 2] | 0) + 12 >> 2] & 63](i1, i7) | 0)) return; else {
   HEAP32[i6 >> 2] = 1;
   i8 = i7;
   break;
  }
 } else i8 = i5 + 8 | 0; while (0);
 i7 = HEAP32[i1 + 316 >> 2] | 0;
 i9 = i5 + 52 | 0;
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i1 + 432 >> 2] | 0) + 4 >> 2] & 7](i1, i8, i9, i7, i2, i3, i4);
 if ((HEAP32[i9 >> 2] | 0) >>> 0 < i7 >>> 0) return;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i9 >> 2] = 0;
 return;
}

function _gray_rgb_convert(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i6 = HEAP32[i1 + 112 >> 2] | 0;
 if ((i5 | 0) < 1 | (i6 | 0) == 0) return;
 i1 = i4;
 i4 = i3;
 i3 = i5;
 while (1) {
  i5 = i3;
  i3 = i3 + -1 | 0;
  i7 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i4 << 2) >> 2] | 0;
  i8 = 0;
  i9 = HEAP32[i1 >> 2] | 0;
  while (1) {
   i10 = HEAP8[i7 + i8 >> 0] | 0;
   HEAP8[i9 + 2 >> 0] = i10;
   HEAP8[i9 + 1 >> 0] = i10;
   HEAP8[i9 >> 0] = i10;
   i8 = i8 + 1 | 0;
   if ((i8 | 0) == (i6 | 0)) break; else i9 = i9 + 3 | 0;
  }
  if ((i5 | 0) <= 1) break; else {
   i1 = i1 + 4 | 0;
   i4 = i4 + 1 | 0;
  }
 }
 return;
}

function _arUtilReplaceExt(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = 0;
 i5 = 0;
 L1 : while (1) {
  switch (HEAP8[i1 + i5 >> 0] | 0) {
  case 0:
   {
    break L1;
    break;
   }
  case 46:
   {
    i6 = i5;
    break;
   }
  default:
   i6 = i4;
  }
  i4 = i6;
  i5 = i5 + 1 | 0;
 }
 i6 = i1 + i5 | 0;
 i7 = (_strlen(i3) | 0) + 2 | 0;
 do if (!i4) if ((i7 + i5 | 0) > (i2 | 0)) {
  i8 = -1;
  return i8 | 0;
 } else {
  HEAP8[i6 >> 0] = 46;
  i9 = i5;
  break;
 } else if ((i7 + i4 | 0) > (i2 | 0)) {
  i8 = -1;
  return i8 | 0;
 } else i9 = i4; while (0);
 HEAP8[i1 + (i9 + 1) >> 0] = 0;
 _strcat(i1, i3) | 0;
 i8 = 0;
 return i8 | 0;
}

function _threadStartWait(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 i3 = i1 + 4 | 0;
 i4 = i1 + 44 | 0;
 L1 : while (1) {
  switch (HEAP32[i3 >> 2] | 0) {
  case 1:
   {
    i5 = 4;
    break L1;
    break;
   }
  case 0:
   break;
  default:
   {
    i5 = 5;
    break L1;
   }
  }
  _pthread_cond_wait(i4 | 0, i2 | 0) | 0;
 }
 if ((i5 | 0) == 4) {
  HEAP32[i3 >> 2] = 0;
  HEAP32[i1 + 12 >> 2] = 1;
  _pthread_mutex_unlock(i2) | 0;
  i6 = 0;
  return i6 | 0;
 } else if ((i5 | 0) == 5) {
  HEAP32[i1 + 8 >> 2] = 2;
  _pthread_cond_signal(i1 + 92 | 0) | 0;
  _pthread_mutex_unlock(i2) | 0;
  i6 = -1;
  return i6 | 0;
 }
 return 0;
}

function __ZNSt3__211__stdoutbufIwE6xsputnEPKwl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 L1 : do if (!(HEAP8[i1 + 44 >> 0] | 0)) {
  i4 = 0;
  i5 = i2;
  while (1) {
   if ((i4 | 0) >= (i3 | 0)) {
    i6 = i4;
    break L1;
   }
   i7 = HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] | 0;
   i8 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i5 >> 2] | 0) | 0;
   i9 = FUNCTION_TABLE_iii[i7 & 63](i1, i8) | 0;
   if ((i9 | 0) == (__ZNSt3__211char_traitsIwE3eofEv() | 0)) {
    i6 = i4;
    break L1;
   }
   i4 = i4 + 1 | 0;
   i5 = i5 + 4 | 0;
  }
 } else i6 = _fwrite(i2, 4, i3, HEAP32[i1 + 32 >> 2] | 0) | 0; while (0);
 return i6 | 0;
}

function __ZNSt3__211__stdoutbufIcE6xsputnEPKcl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 L1 : do if (!(HEAP8[i1 + 44 >> 0] | 0)) {
  i4 = 0;
  i5 = i2;
  while (1) {
   if ((i4 | 0) >= (i3 | 0)) {
    i6 = i4;
    break L1;
   }
   i7 = HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] | 0;
   i8 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i5 >> 0] | 0) | 0;
   i9 = FUNCTION_TABLE_iii[i7 & 63](i1, i8) | 0;
   if ((i9 | 0) == (__ZNSt3__211char_traitsIcE3eofEv() | 0)) {
    i6 = i4;
    break L1;
   }
   i4 = i4 + 1 | 0;
   i5 = i5 + 1 | 0;
  }
 } else i6 = _fwrite(i2, 1, i3, HEAP32[i1 + 32 >> 2] | 0) | 0; while (0);
 return i6 | 0;
}

function __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 14416;
 HEAP32[i1 + 32 >> 2] = i2;
 __ZNSt3__26localeC2ERKS0_(i5, i1 + 4 | 0);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58796) | 0;
 __ZNSt3__26localeD2Ev(i5);
 HEAP32[i1 + 36 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 i3 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i2) | 0) & 1;
 HEAP8[i1 + 44 >> 0] = i3;
 STACKTOP = i4;
 return;
}

function __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 14480;
 HEAP32[i1 + 32 >> 2] = i2;
 __ZNSt3__26localeC2ERKS0_(i5, i1 + 4 | 0);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58788) | 0;
 __ZNSt3__26localeD2Ev(i5);
 HEAP32[i1 + 36 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 i3 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i2) | 0) & 1;
 HEAP8[i1 + 44 >> 0] = i3;
 STACKTOP = i4;
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i6 = i4;
 i7 = i1 + 8 | 0;
 i1 = 0;
 i8 = 0;
 i9 = i3;
 L1 : while (1) {
  if ((i9 | 0) == (i4 | 0) | i1 >>> 0 >= i5 >>> 0) break;
  i3 = ___uselocale(HEAP32[i7 >> 2] | 0) | 0;
  i10 = _mbrlen(i9, i6 - i9 | 0, i2) | 0;
  if (i3 | 0) ___uselocale(i3) | 0;
  switch (i10 | 0) {
  case -2:
  case -1:
   {
    break L1;
    break;
   }
  case 0:
   {
    i11 = 1;
    break;
   }
  default:
   i11 = i10;
  }
  i1 = i1 + 1 | 0;
  i8 = i11 + i8 | 0;
  i9 = i9 + i11 | 0;
 }
 return i8 | 0;
}

function _jpeg_read_header(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = HEAP32[i1 + 20 >> 2] | 0;
 if ((i3 & -2 | 0) != 200) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 20;
  HEAP32[i4 + 24 >> 2] = i3;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 i3 = _jpeg_consume_input(i1) | 0;
 switch (i3 | 0) {
 case 1:
  {
   i5 = 1;
   return i5 | 0;
  }
 case 2:
  {
   if (!i2) i6 = i1; else {
    i2 = HEAP32[i1 >> 2] | 0;
    HEAP32[i2 + 20 >> 2] = 51;
    FUNCTION_TABLE_vi[HEAP32[i2 >> 2] & 255](i1);
    i6 = i1;
   }
   _jpeg_abort(i6);
   i5 = 2;
   return i5 | 0;
  }
 default:
  {
   i5 = i3;
   return i5 | 0;
  }
 }
 return 0;
}

function _request_virt_sarray(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i2 | 0) == 1) i8 = 1; else {
  i9 = HEAP32[i1 >> 2] | 0;
  HEAP32[i9 + 20 >> 2] = 14;
  HEAP32[i9 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
  i8 = i2;
 }
 i2 = _alloc_small(i1, i8, 128) | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = i5;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 12 >> 2] = i6;
 HEAP32[i2 + 32 >> 2] = i3;
 HEAP32[i2 + 40 >> 2] = 0;
 i3 = i7 + 68 | 0;
 HEAP32[i2 + 44 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i2;
 return i2 | 0;
}

function _request_virt_barray(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i2 | 0) == 1) i8 = 1; else {
  i9 = HEAP32[i1 >> 2] | 0;
  HEAP32[i9 + 20 >> 2] = 14;
  HEAP32[i9 + 24 >> 2] = i2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
  i8 = i2;
 }
 i2 = _alloc_small(i1, i8, 128) | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = i5;
 HEAP32[i2 + 8 >> 2] = i4;
 HEAP32[i2 + 12 >> 2] = i6;
 HEAP32[i2 + 32 >> 2] = i3;
 HEAP32[i2 + 40 >> 2] = 0;
 i3 = i7 + 72 | 0;
 HEAP32[i2 + 44 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i2;
 return i2 | 0;
}

function _arParamObserv2IdealLTf(i1, d2, d3, i4, i5) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i6 = (HEAP32[i1 + 16 >> 2] | 0) + ~~(d2 + .5) | 0;
 i7 = (HEAP32[i1 + 20 >> 2] | 0) + ~~(d3 + .5) | 0;
 if ((i6 | 0) < 0) {
  i8 = -1;
  return i8 | 0;
 }
 i9 = HEAP32[i1 + 8 >> 2] | 0;
 if ((i7 | 0) < 0 | (i6 | 0) >= (i9 | 0)) {
  i8 = -1;
  return i8 | 0;
 }
 if ((i7 | 0) >= (HEAP32[i1 + 12 >> 2] | 0)) {
  i8 = -1;
  return i8 | 0;
 }
 i10 = (HEAP32[i1 + 4 >> 2] | 0) + ((Math_imul(i9, i7) | 0) + i6 << 1 << 2) | 0;
 HEAP32[i4 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i10 + 4 >> 2];
 i8 = 0;
 return i8 | 0;
}

function __ZNSt3__26locale2id5__getEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 i3 = i2 + 32 | 0;
 i4 = i2 + 24 | 0;
 i5 = i2;
 i6 = i2 + 16 | 0;
 HEAP32[i6 >> 2] = 141;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_(i5, i3, i1);
 if ((HEAP32[i1 >> 2] | 0) != -1) {
  HEAP32[i3 >> 2] = i5;
  HEAP32[i4 >> 2] = i3;
  __ZNSt3__211__call_onceERVmPvPFvS2_E(i1, i4, 142);
 }
 STACKTOP = i2;
 return (HEAP32[i1 + 4 >> 2] | 0) + -1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) HEAP32[i2 >> 2] = i8 + -1900;
 STACKTOP = i1;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i1 + 4 | 0;
 i8 = i1;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i3, i7, i5, i6, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) HEAP32[i2 >> 2] = i8 + -1900;
 STACKTOP = i1;
 return;
}

function __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 14544;
 HEAP32[i1 + 32 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 i3 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[i1 + 48 >> 2] = i3;
 HEAP8[i1 + 52 >> 0] = 0;
 i3 = HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0;
 __ZNSt3__26localeC2ERKS0_(i5, i1 + 4 | 0);
 FUNCTION_TABLE_vii[i3 & 63](i1, i5);
 __ZNSt3__26localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 14608;
 HEAP32[i1 + 32 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 i3 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[i1 + 48 >> 2] = i3;
 HEAP8[i1 + 52 >> 0] = 0;
 i3 = HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0;
 __ZNSt3__26localeC2ERKS0_(i5, i1 + 4 | 0);
 FUNCTION_TABLE_vii[i3 & 63](i1, i5);
 __ZNSt3__26localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function _arParamIdeal2ObservLTf(i1, d2, d3, i4, i5) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i6 = (HEAP32[i1 + 16 >> 2] | 0) + ~~(d2 + .5) | 0;
 i7 = (HEAP32[i1 + 20 >> 2] | 0) + ~~(d3 + .5) | 0;
 if ((i6 | 0) < 0) {
  i8 = -1;
  return i8 | 0;
 }
 i9 = HEAP32[i1 + 8 >> 2] | 0;
 if ((i7 | 0) < 0 | (i6 | 0) >= (i9 | 0)) {
  i8 = -1;
  return i8 | 0;
 }
 if ((i7 | 0) >= (HEAP32[i1 + 12 >> 2] | 0)) {
  i8 = -1;
  return i8 | 0;
 }
 i10 = (HEAP32[i1 >> 2] | 0) + ((Math_imul(i9, i7) | 0) + i6 << 1 << 2) | 0;
 HEAP32[i4 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i10 + 4 >> 2];
 i8 = 0;
 return i8 | 0;
}

function _jpeg_stdio_src(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i3 = i1 + 24 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 if (!i4) {
  i5 = i1 + 4 | 0;
  i6 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i5 >> 2] >> 2] & 63](i1, 0, 40) | 0;
  HEAP32[i3 >> 2] = i6;
  i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i5 >> 2] >> 2] & 63](i1, 0, 4096) | 0;
  HEAP32[i6 + 32 >> 2] = i7;
  i8 = HEAP32[i3 >> 2] | 0;
 } else i8 = i4;
 HEAP32[i8 + 8 >> 2] = 135;
 HEAP32[i8 + 12 >> 2] = 74;
 HEAP32[i8 + 16 >> 2] = 46;
 HEAP32[i8 + 20 >> 2] = 28;
 HEAP32[i8 + 24 >> 2] = 136;
 HEAP32[i8 + 28 >> 2] = i2;
 HEAP32[i8 + 4 >> 2] = 0;
 HEAP32[i8 >> 2] = 0;
 return;
}

function _kpmFopen(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4 + 8 | 0;
 if (!i1) {
  i6 = 0;
  STACKTOP = i4;
  return i6 | 0;
 }
 if (!i2) {
  i6 = _fopen(i1, i3) | 0;
  STACKTOP = i4;
  return i6 | 0;
 }
 i7 = _strlen(i1) | 0;
 i8 = _malloc(i7 + 2 + (_strlen(i2) | 0) | 0) | 0;
 if (!i8) {
  _arLog(0, 3, 20510, i4);
  _exit(1);
 }
 HEAP32[i5 >> 2] = i1;
 HEAP32[i5 + 4 >> 2] = i2;
 _sprintf(i8, 20527, i5) | 0;
 i5 = _fopen(i8, i3) | 0;
 _free(i8);
 i6 = i5;
 STACKTOP = i4;
 return i6 | 0;
}

function __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i1 >> 2] = i2;
 i5 = __Znwm(16) | 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 >> 2] = 13536;
 HEAP32[i5 + 12 >> 2] = i2;
 HEAP32[i1 + 4 >> 2] = i5;
 HEAP32[i4 >> 2] = i2;
 HEAP32[i4 + 4 >> 2] = i2;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEE18__enable_weak_thisEz(i1, i4);
 STACKTOP = i3;
 return;
}

function ___strerror_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = 0;
 while (1) {
  if ((HEAPU8[4496 + i3 >> 0] | 0) == (i1 | 0)) {
   i4 = 4;
   break;
  }
  i5 = i3 + 1 | 0;
  if ((i5 | 0) == 87) {
   i6 = 87;
   i4 = 5;
   break;
  } else i3 = i5;
 }
 if ((i4 | 0) == 4) if (!i3) i7 = 4592; else {
  i6 = i3;
  i4 = 5;
 }
 if ((i4 | 0) == 5) {
  i4 = 4592;
  i3 = i6;
  while (1) {
   i6 = i4;
   do {
    i1 = i6;
    i6 = i6 + 1 | 0;
   } while ((HEAP8[i1 >> 0] | 0) != 0);
   i3 = i3 + -1 | 0;
   if (!i3) {
    i7 = i6;
    break;
   } else i4 = i6;
  }
 }
 return ___lctrans(i7, HEAP32[i2 + 20 >> 2] | 0) | 0;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEEC2EmmSB_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = i1 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = i4;
 if (!i2) i6 = 0; else i6 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE8allocateEm(i4, i2) | 0;
 HEAP32[i1 >> 2] = i6;
 i4 = i6 + (i3 << 4) | 0;
 HEAP32[i1 + 8 >> 2] = i4;
 HEAP32[i1 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i6 + (i2 << 4);
 return;
}

function _jinit_phuff_decoder(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = i1 + 4 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 64) | 0;
 HEAP32[i1 + 444 >> 2] = i3;
 HEAP32[i3 >> 2] = 129;
 i4 = i3 + 44 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 i4 = i1 + 36 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, HEAP32[i4 >> 2] << 8) | 0;
 HEAP32[i1 + 160 >> 2] = i3;
 if ((HEAP32[i4 >> 2] | 0) <= 0) return;
 i1 = 0;
 do {
  _memset(i3 + (i1 << 8) | 0, -1, 256) | 0;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) < (HEAP32[i4 >> 2] | 0));
 return;
}

function _getc(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if ((HEAP32[i1 + 76 >> 2] | 0) >= 0 ? (___lockfile(i1) | 0) != 0 : 0) {
  i2 = i1 + 4 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if (i3 >>> 0 < (HEAP32[i1 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i2 >> 2] = i3 + 1;
   i4 = HEAPU8[i3 >> 0] | 0;
  } else i4 = ___uflow(i1) | 0;
  ___unlockfile(i1);
  i5 = i4;
 } else i6 = 3;
 do if ((i6 | 0) == 3) {
  i4 = i1 + 4 | 0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (i3 >>> 0 < (HEAP32[i1 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i4 >> 2] = i3 + 1;
   i5 = HEAPU8[i3 >> 0] | 0;
   break;
  } else {
   i5 = ___uflow(i1) | 0;
   break;
  }
 } while (0);
 return i5 | 0;
}

function _jinit_inverse_dct(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = i1 + 4 | 0;
 i3 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 84) | 0;
 HEAP32[i1 + 448 >> 2] = i3;
 HEAP32[i3 >> 2] = 128;
 i4 = i1 + 36 | 0;
 if ((HEAP32[i4 >> 2] | 0) <= 0) return;
 i5 = i3 + 44 | 0;
 i3 = 0;
 i6 = HEAP32[i1 + 216 >> 2] | 0;
 while (1) {
  i7 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i2 >> 2] >> 2] & 63](i1, 1, 256) | 0;
  HEAP32[i6 + 80 >> 2] = i7;
  _memset(i7 | 0, 0, 256) | 0;
  HEAP32[i5 + (i3 << 2) >> 2] = -1;
  i3 = i3 + 1 | 0;
  if ((i3 | 0) >= (HEAP32[i4 >> 2] | 0)) break; else i6 = i6 + 84 | 0;
 }
 return;
}

function __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 if (!(i4 & 2048)) i5 = i1; else {
  HEAP8[i1 >> 0] = 43;
  i5 = i1 + 1 | 0;
 }
 if (!(i4 & 512)) i6 = i5; else {
  HEAP8[i5 >> 0] = 35;
  i6 = i5 + 1 | 0;
 }
 i5 = i2;
 i2 = i6;
 while (1) {
  i6 = HEAP8[i5 >> 0] | 0;
  if (!(i6 << 24 >> 24)) break;
  HEAP8[i2 >> 0] = i6;
  i5 = i5 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 switch (i4 & 74) {
 case 64:
  {
   i7 = 111;
   break;
  }
 case 8:
  {
   i7 = i4 >>> 9 & 32 ^ 120;
   break;
  }
 default:
  i7 = i3 ? 100 : 117;
 }
 HEAP8[i2 >> 0] = i7;
 return;
}

function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP8[i1 + 11 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 if (i5) i6 = HEAP32[i1 + 4 >> 2] | 0; else i6 = i4 & 255;
 if ((i3 | 0) == -1) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv(i1);
 if (i5) i7 = HEAP32[i1 >> 2] | 0; else i7 = i1;
 i1 = i6 >>> 0 > i3 >>> 0;
 i5 = __ZNSt3__211char_traitsIcE7compareEPKcS3_m(i7, i2, i1 ? i3 : i6) | 0;
 if (!i5) return (i6 >>> 0 < i3 >>> 0 ? -1 : i1 & 1) | 0; else return i5 | 0;
 return 0;
}

function _ar2GenTemplate(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = _malloc(40) | 0;
 if (!i4) {
  _arLog(0, 3, 20510, i3);
  _exit(1);
 }
 HEAP32[i4 + 16 >> 2] = i1;
 HEAP32[i4 + 8 >> 2] = i1;
 HEAP32[i4 + 20 >> 2] = i2;
 HEAP32[i4 + 12 >> 2] = i2;
 i5 = i1 + 1 + i2 | 0;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i4 + 4 >> 2] = i5;
 i2 = _malloc(Math_imul(i5 << 1, i5) | 0) | 0;
 HEAP32[i4 + 24 >> 2] = i2;
 if (!i2) {
  _arLog(0, 3, 20510, i3 + 8 | 0);
  _exit(1);
 } else {
  STACKTOP = i3;
  return i4 | 0;
 }
 return 0;
}

function _arPattLoad(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3 + 8 | 0;
 i5 = i3;
 i6 = _cat(i2, 0) | 0;
 if (!i6) {
  HEAP32[i5 >> 2] = i2;
  _arLog(0, 3, 18117, i5);
  i5 = ___errno_location() | 0;
  i2 = _strerror(HEAP32[i5 >> 2] | 0) | 0;
  HEAP32[i4 >> 2] = 58932;
  HEAP32[i4 + 4 >> 2] = i2;
  _arLog(0, 3, 19710, i4);
  i7 = -1;
  STACKTOP = i3;
  return i7 | 0;
 } else {
  i4 = _arPattLoadFromBuffer(i1, i6) | 0;
  _free(i6);
  i7 = i4;
  STACKTOP = i3;
  return i7 | 0;
 }
 return 0;
}

function _trackingInitInit(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!i1) {
  _arLog(0, 3, 38311, i2);
  i3 = 0;
  STACKTOP = i2;
  return i3 | 0;
 }
 i4 = _malloc(68) | 0;
 if (!i4) {
  i3 = 0;
  STACKTOP = i2;
  return i3 | 0;
 }
 HEAP32[i4 >> 2] = i1;
 i5 = _kpmHandleGetXSize(i1) | 0;
 i6 = Math_imul(_kpmHandleGetYSize(i1) | 0, i5) | 0;
 HEAP32[i4 + 8 >> 2] = i6;
 i5 = _malloc(i6) | 0;
 HEAP32[i4 + 4 >> 2] = i5;
 HEAP32[i4 + 64 >> 2] = 0;
 i3 = _threadInit(0, i4, 75) | 0;
 STACKTOP = i2;
 return i3 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i2 + 4 | 0;
 i9 = i2;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i9 >> 2] = i6;
 i10 = __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i3, i4, i1, i6, i7, i9, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 STACKTOP = i2;
 return i10 | 0;
}

function _realloc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if (!i1) {
  i3 = _malloc(i2) | 0;
  return i3 | 0;
 }
 if (i2 >>> 0 > 4294967231) {
  i4 = ___errno_location() | 0;
  HEAP32[i4 >> 2] = 12;
  i3 = 0;
  return i3 | 0;
 }
 i4 = _try_realloc_chunk(i1 + -8 | 0, i2 >>> 0 < 11 ? 16 : i2 + 11 & -8) | 0;
 if (i4 | 0) {
  i3 = i4 + 8 | 0;
  return i3 | 0;
 }
 i4 = _malloc(i2) | 0;
 if (!i4) {
  i3 = 0;
  return i3 | 0;
 }
 i5 = HEAP32[i1 + -4 >> 2] | 0;
 i6 = (i5 & -8) - ((i5 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy(i4 | 0, i1 | 0, (i6 >>> 0 < i2 >>> 0 ? i6 : i2) | 0) | 0;
 _free(i1);
 i3 = i4;
 return i3 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i2 + 4 | 0;
 i9 = i2;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i9 >> 2] = i6;
 i10 = __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i3, i4, i1, i6, i7, i9, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 STACKTOP = i2;
 return i10 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i2 + 4 | 0;
 i9 = i2;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i9 >> 2] = i6;
 i10 = __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i3, i4, i1, i6, i7, i9, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 STACKTOP = i2;
 return i10 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 L1 : do if ((i1 | 0) != (i2 | 0) ? (i3 = (HEAP8[i1 >> 0] | 0) == 110 ? i1 + 1 | 0 : i1, (i3 | 0) != (i2 | 0)) : 0) {
  i4 = HEAP8[i3 >> 0] | 0;
  if (i4 << 24 >> 24 == 48) {
   i5 = i3 + 1 | 0;
   break;
  }
  if ((i4 + -49 & 255) < 9) {
   i4 = i3;
   while (1) {
    i3 = i4 + 1 | 0;
    if ((i3 | 0) == (i2 | 0)) {
     i5 = i2;
     break L1;
    }
    if (((HEAP8[i3 >> 0] | 0) + -48 | 0) >>> 0 < 10) i4 = i3; else {
     i5 = i3;
     break;
    }
   }
  } else i5 = i1;
 } else i5 = i1; while (0);
 return i5 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0, i10 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i1 = i2 + 4 | 0;
 i9 = i2;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i9 >> 2] = i6;
 i10 = __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i3, i4, i1, i6, i7, i9, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 STACKTOP = i2;
 return i10 | 0;
}

function _pad_734(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 i7 = i6;
 if ((i3 | 0) > (i4 | 0) & (i5 & 73728 | 0) == 0) {
  i5 = i3 - i4 | 0;
  _memset(i7 | 0, i2 << 24 >> 24 | 0, (i5 >>> 0 < 256 ? i5 : 256) | 0) | 0;
  if (i5 >>> 0 > 255) {
   i2 = i3 - i4 | 0;
   i4 = i5;
   do {
    _out_728(i1, i7, 256);
    i4 = i4 + -256 | 0;
   } while (i4 >>> 0 > 255);
   i8 = i2 & 255;
  } else i8 = i5;
  _out_728(i1, i7, i8);
 }
 STACKTOP = i6;
 return;
}

function ___toread(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = i1 + 74 | 0;
 i3 = HEAP8[i2 >> 0] | 0;
 HEAP8[i2 >> 0] = i3 + 255 | i3;
 i3 = i1 + 20 | 0;
 i2 = i1 + 28 | 0;
 if ((HEAP32[i3 >> 2] | 0) >>> 0 > (HEAP32[i2 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[i1 + 36 >> 2] & 63](i1, 0, 0) | 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i3 >> 2] = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (!(i3 & 4)) {
  i2 = (HEAP32[i1 + 44 >> 2] | 0) + (HEAP32[i1 + 48 >> 2] | 0) | 0;
  HEAP32[i1 + 8 >> 2] = i2;
  HEAP32[i1 + 4 >> 2] = i2;
  i4 = i3 << 27 >> 31;
 } else {
  HEAP32[i1 >> 2] = i3 | 32;
  i4 = -1;
 }
 return i4 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = i2 + 12 | 0;
 i4 = HEAP8[i3 + 11 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i2, i5 ? HEAP32[i3 >> 2] | 0 : i3, i5 ? HEAP32[i2 + 16 >> 2] | 0 : i4 & 255) | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i5 = i1 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = i4;
 do if (i2) {
  i6 = i4 + 112 | 0;
  if (i2 >>> 0 < 29 & (HEAP8[i6 >> 0] | 0) == 0) {
   HEAP8[i6 >> 0] = 1;
   i7 = i4;
   break;
  } else {
   i7 = __Znwm(i2 << 2) | 0;
   break;
  }
 } else i7 = 0; while (0);
 HEAP32[i1 >> 2] = i7;
 i4 = i7 + (i3 << 2) | 0;
 HEAP32[i1 + 8 >> 2] = i4;
 HEAP32[i1 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i7 + (i2 << 2);
 return;
}

function __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) {
  i3 = i1 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  while (1) {
   if ((i4 | 0) == (i2 | 0)) break;
   i5 = i4 + -24 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   i4 = i5;
  }
  HEAP32[i3 >> 2] = i2;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE10deallocateEPS2_m(i1 + 12 | 0, i2, ((HEAP32[i1 + 8 >> 2] | 0) - i2 | 0) / 24 | 0);
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i3 = 0;
 while (1) {
  if ((i3 | 0) == 3) break;
  HEAP32[i2 + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 }
 i3 = i1 + 12 | 0;
 i1 = i2 + 12 | 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 i3 = 0;
 while (1) {
  if ((i3 | 0) == 3) break;
  HEAP32[i1 + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[HEAP32[i1 >> 2] >> 2] | 0;
 i1 = HEAP32[i2 + 64 >> 2] | 0;
 i3 = HEAP32[i2 + 68 >> 2] | 0;
 if (!i3) {
  i4 = i1 + 24 | 0;
  return i4 | 0;
 }
 i2 = i3 + 4 | 0;
 HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 i5 = i1 + 24 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = i1 + -1;
 if (i1 | 0) {
  i4 = i5;
  return i4 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 255](i3);
 __ZNSt3__219__shared_weak_count14__release_weakEv(i3);
 i4 = i5;
 return i4 | 0;
}

function __ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0;
 i1 = i4;
 i4 = i2;
 while (1) {
  if ((i1 | 0) == (i5 | 0)) {
   i6 = 7;
   break;
  }
  if ((i4 | 0) == (i3 | 0)) {
   i7 = -1;
   break;
  }
  i2 = HEAP8[i4 >> 0] | 0;
  i8 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 < i8 << 24 >> 24) {
   i7 = -1;
   break;
  }
  if (i8 << 24 >> 24 < i2 << 24 >> 24) {
   i7 = 1;
   break;
  }
  i1 = i1 + 1 | 0;
  i4 = i4 + 1 | 0;
 }
 if ((i6 | 0) == 7) i7 = (i4 | 0) != (i3 | 0) & 1;
 return i7 | 0;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i1 = i2 + 16 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 do if (i5) {
  if ((i5 | 0) != (i3 | 0)) {
   i6 = i2 + 36 | 0;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
   HEAP32[i2 + 24 >> 2] = 2;
   HEAP8[i2 + 54 >> 0] = 1;
   break;
  }
  i6 = i2 + 24 | 0;
  if ((HEAP32[i6 >> 2] | 0) == 2) HEAP32[i6 >> 2] = i4;
 } else {
  HEAP32[i1 >> 2] = i3;
  HEAP32[i2 + 24 >> 2] = i4;
  HEAP32[i2 + 36 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEEC2EmmS9_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = i1 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = i4;
 if (!i2) i6 = 0; else i6 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE8allocateEm(i4, i2) | 0;
 HEAP32[i1 >> 2] = i6;
 i4 = i6 + (i3 << 4) | 0;
 HEAP32[i1 + 8 >> 2] = i4;
 HEAP32[i1 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i6 + (i2 << 4);
 return;
}

function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 while (1) {
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -24 | 0;
  HEAP32[i3 >> 2] = i5;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
 }
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE10deallocateEPS2_m(HEAP32[i1 + 16 >> 2] | 0, i3, ((HEAP32[i1 + 12 >> 2] | 0) - i3 | 0) / 24 | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i3 = 0;
 while (1) {
  if ((i3 | 0) == 3) break;
  HEAP32[i2 + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 }
 i3 = i1 + 12 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i3 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _trackingInitStart(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  _arLog(0, 3, 38520, i3);
  i4 = -1;
  STACKTOP = i3;
  return i4 | 0;
 }
 i5 = _threadGetArg(i1) | 0;
 if (!i5) {
  _arLog(0, 3, 38580, i3 + 8 | 0);
  i4 = -1;
  STACKTOP = i3;
  return i4 | 0;
 } else {
  _memcpy(HEAP32[i5 + 4 >> 2] | 0, i2 | 0, HEAP32[i5 + 8 >> 2] | 0) | 0;
  _threadStartSignal(i1) | 0;
  i4 = 0;
  STACKTOP = i3;
  return i4 | 0;
 }
 return 0;
}

function _strtok(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if (!i1) {
  i3 = HEAP32[14226] | 0;
  if (!i3) i4 = 0; else {
   i5 = i3;
   i6 = 3;
  }
 } else {
  i5 = i1;
  i6 = 3;
 }
 do if ((i6 | 0) == 3) {
  i1 = i5 + (_strspn(i5, i2) | 0) | 0;
  if (!(HEAP8[i1 >> 0] | 0)) {
   HEAP32[14226] = 0;
   i4 = 0;
   break;
  }
  i3 = i1 + (_strcspn(i1, i2) | 0) | 0;
  HEAP32[14226] = i3;
  if (!(HEAP8[i3 >> 0] | 0)) {
   HEAP32[14226] = 0;
   i4 = i1;
   break;
  } else {
   HEAP32[14226] = i3 + 1;
   HEAP8[i3 >> 0] = 0;
   i4 = i1;
   break;
  }
 } while (0);
 return i4 | 0;
}

function __ZNSt3__2L11init_wam_pmEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56200] | 0) == 0 ? ___cxa_guard_acquire(56200) | 0 : 0) {
  i1 = 55056;
  do {
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i1 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 12 | 0;
  } while ((i1 | 0) != 55344);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55056, 15332) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55068, 15344) | 0;
 return;
}

function __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNKSt3__28ios_base6getlocEv(i5, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58524) | 0;
 i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
 HEAP32[i3 >> 2] = i6;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i1, i2);
 __ZNSt3__26localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__2L10init_am_pmEv() {
 var i1 = 0, i2 = 0;
 if ((HEAP8[56120] | 0) == 0 ? ___cxa_guard_acquire(56120) | 0 : 0) {
  i1 = 54304;
  do {
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i1 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   i1 = i1 + 12 | 0;
  } while ((i1 | 0) != 54592);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54304, 47848) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54316, 47851) | 0;
 return;
}

function __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 __ZNKSt3__28ios_base6getlocEv(i5, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i5, 58500) | 0;
 i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
 HEAP8[i3 >> 0] = i6;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i1, i2);
 __ZNSt3__26localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function _ar2FreeFeatureSet(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!i2) {
  i3 = -1;
  return i3 | 0;
 }
 i4 = HEAP32[i2 >> 2] | 0;
 if ((HEAP32[i2 + 4 >> 2] | 0) > 0) {
  i2 = 0;
  i5 = i4;
  while (1) {
   _free(HEAP32[i5 + (i2 * 20 | 0) >> 2] | 0);
   i2 = i2 + 1 | 0;
   i6 = HEAP32[i1 >> 2] | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   if ((i2 | 0) >= (HEAP32[i6 + 4 >> 2] | 0)) {
    i8 = i7;
    break;
   } else i5 = i7;
  }
 } else i8 = i4;
 _free(i8);
 _free(HEAP32[i1 >> 2] | 0);
 HEAP32[i1 >> 2] = 0;
 i3 = 0;
 return i3 | 0;
}

function __ZNK6vision21HoughSimilarityVoting23getMaximumNumberOfVotesERfRi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, d5 = 0.0, i6 = 0, d7 = 0.0, d8 = 0.0;
 HEAPF32[i2 >> 2] = 0.0;
 HEAP32[i3 >> 2] = -1;
 i4 = HEAP32[i1 + 100 >> 2] | 0;
 if (!i4) return;
 i1 = i4;
 d5 = 0.0;
 while (1) {
  i4 = i1;
  i6 = i4 + 12 | 0;
  if (d5 < +((HEAP32[i6 >> 2] | 0) >>> 0)) {
   HEAP32[i3 >> 2] = HEAP32[i4 + 8 >> 2];
   d7 = +((HEAP32[i6 >> 2] | 0) >>> 0);
   HEAPF32[i2 >> 2] = d7;
   d8 = d7;
  } else d8 = d5;
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) break; else d5 = d8;
 }
 return;
}

function _saveSetjmp(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 setjmpId = setjmpId + 1 | 0;
 HEAP32[i1 >> 2] = setjmpId;
 while ((i5 | 0) < (i4 | 0)) {
  if (!(HEAP32[i3 + (i5 << 3) >> 2] | 0)) {
   HEAP32[i3 + (i5 << 3) >> 2] = setjmpId;
   HEAP32[i3 + ((i5 << 3) + 4) >> 2] = i2;
   HEAP32[i3 + ((i5 << 3) + 8) >> 2] = 0;
   setTempRet0(i4 | 0);
   return i3 | 0;
  }
  i5 = i5 + 1 | 0;
 }
 i4 = i4 * 2 | 0;
 i3 = _realloc(i3 | 0, 8 * (i4 + 1 | 0) | 0) | 0;
 i3 = _saveSetjmp(i1 | 0, i2 | 0, i3 | 0, i4 | 0) | 0;
 setTempRet0(i4 | 0);
 return i3 | 0;
}

function __ZN6vision18VisualDatabaseImplC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 1065353216;
 i2 = __Znwm(840) | 0;
 __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEEC2Ev(i2);
 i3 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i2;
 if (!i3) return;
 __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEED2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0;
 i1 = i4;
 i4 = i2;
 while (1) {
  if ((i1 | 0) == (i5 | 0)) {
   i6 = 7;
   break;
  }
  if ((i4 | 0) == (i3 | 0)) {
   i7 = -1;
   break;
  }
  i2 = HEAP32[i4 >> 2] | 0;
  i8 = HEAP32[i1 >> 2] | 0;
  if ((i2 | 0) < (i8 | 0)) {
   i7 = -1;
   break;
  }
  if ((i8 | 0) < (i2 | 0)) {
   i7 = 1;
   break;
  }
  i1 = i1 + 4 | 0;
  i4 = i4 + 4 | 0;
 }
 if ((i6 | 0) == 7) i7 = (i4 | 0) != (i3 | 0) & 1;
 return i7 | 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EEC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 HEAP32[i1 >> 2] = 1234;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = i1;
 i2 = i1 + 16 | 0;
 HEAP32[i1 + 100 >> 2] = 0;
 HEAP32[i1 + 104 >> 2] = 0;
 i3 = i1 + 108 | 0;
 i4 = i2 + 4 | 0;
 i5 = i4 + 76 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i5 | 0));
 HEAP32[i3 >> 2] = 16;
 HEAP32[i2 >> 2] = 8;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm(i1 + 24 | 0, 8);
 HEAP32[i1 + 20 >> 2] = 1;
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i6) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i2, i3, i4, i5); else {
  i7 = HEAP32[i1 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 20 >> 2] & 7](i7, i2, i3, i4, i5, i6);
 }
 return;
}

function __ZN6vision21HoughSimilarityVotingC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP8[i1 + 16 >> 0] = 1;
 i2 = i1 + 108 | 0;
 i3 = i1 + 20 | 0;
 i4 = i3 + 88 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAP32[i2 >> 2] = 1065353216;
 i2 = i1 + 112 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 if ((__ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv(i1) | 0) >>> 0 < i2 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1);
 i3 = i1 + 128 | 0;
 if (i2 >>> 0 < 29 & (HEAP8[i3 >> 0] | 0) == 0) {
  HEAP8[i3 >> 0] = 1;
  i4 = i1 + 16 | 0;
 } else i4 = __Znwm(i2 << 2) | 0;
 HEAP32[i1 + 4 >> 2] = i4;
 HEAP32[i1 >> 2] = i4;
 HEAP32[i1 + 8 >> 2] = i4 + (i2 << 2);
 return;
}

function __ZN6vision20VisualDatabaseFacade5queryEPhmm(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i6 = i5;
 __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim(i6, i2, 1, i3, i4, i3, 1);
 i3 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryERKNS_5ImageE(HEAP32[HEAP32[i1 >> 2] >> 2] | 0, i6) | 0;
 __ZN6vision5ImageD2Ev(i6);
 STACKTOP = i5;
 return i3 | 0;
}

function __ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58796) | 0;
 i2 = i1 + 36 | 0;
 HEAP32[i2 >> 2] = i3;
 i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 24 >> 2] & 127](i3) | 0;
 i3 = i1 + 44 | 0;
 HEAP32[i3 >> 2] = i4;
 i4 = HEAP32[i2 >> 2] | 0;
 i2 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 127](i4) | 0) & 1;
 HEAP8[i1 + 53 >> 0] = i2;
 if ((HEAP32[i3 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(47220); else return;
}

function __ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58788) | 0;
 i2 = i1 + 36 | 0;
 HEAP32[i2 >> 2] = i3;
 i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 24 >> 2] & 127](i3) | 0;
 i3 = i1 + 44 | 0;
 HEAP32[i3 >> 2] = i4;
 i4 = HEAP32[i2 >> 2] | 0;
 i2 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 127](i4) | 0) & 1;
 HEAP8[i1 + 53 >> 0] = i2;
 if ((HEAP32[i3 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(47220); else return;
}

function _store_int_669(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 L1 : do if (i1 | 0) switch (i2 | 0) {
 case -2:
  {
   HEAP8[i1 >> 0] = i3;
   break L1;
   break;
  }
 case -1:
  {
   HEAP16[i1 >> 1] = i3;
   break L1;
   break;
  }
 case 0:
  {
   HEAP32[i1 >> 2] = i3;
   break L1;
   break;
  }
 case 1:
  {
   HEAP32[i1 >> 2] = i3;
   break L1;
   break;
  }
 case 3:
  {
   i5 = i1;
   HEAP32[i5 >> 2] = i3;
   HEAP32[i5 + 4 >> 2] = i4;
   break L1;
   break;
  }
 default:
  break L1;
 } while (0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i4 = HEAP8[i2 + 11 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 i6 = i5 ? HEAP32[i2 + 4 >> 2] | 0 : i4 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i5 ? HEAP32[i2 >> 2] | 0 : i2, i6 >>> 0 < i3 >>> 0 ? i6 : i3);
 return;
}

function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = i1 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = i4;
 if (!i2) i6 = 0; else i6 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE8allocateEm(i4, i2) | 0;
 HEAP32[i1 >> 2] = i6;
 i4 = i6 + (i3 * 24 | 0) | 0;
 HEAP32[i1 + 8 >> 2] = i4;
 HEAP32[i1 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i6 + (i2 * 24 | 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0); else {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 }
 return;
}

function __ZN6vision21OrientationAssignmentD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = i1 + 40 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) {
  i4 = i1 + 44 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (i3 | 0)) i6 = i3; else {
   i7 = i5;
   do {
    i7 = i7 + -32 | 0;
    __ZN6vision5ImageD2Ev(i7);
   } while ((i7 | 0) != (i3 | 0));
   i6 = HEAP32[i2 >> 2] | 0;
  }
  HEAP32[i4 >> 2] = i3;
  __ZdlPv(i6);
 }
 i6 = HEAP32[i1 + 28 >> 2] | 0;
 if (!i6) return;
 HEAP32[i1 + 32 >> 2] = i6;
 __ZdlPv(i6);
 return;
}

function ___shlim(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = i1 + 112 | 0;
 HEAP32[i4 >> 2] = i2;
 HEAP32[i4 + 4 >> 2] = i3;
 i4 = HEAP32[i1 + 8 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = i4 - i5 | 0;
 i7 = ((i6 | 0) < 0) << 31 >> 31;
 i8 = i1 + 120 | 0;
 HEAP32[i8 >> 2] = i6;
 HEAP32[i8 + 4 >> 2] = i7;
 if (((i2 | 0) != 0 | (i3 | 0) != 0) & ((i7 | 0) > (i3 | 0) | (i7 | 0) == (i3 | 0) & i6 >>> 0 > i2 >>> 0)) HEAP32[i1 + 104 >> 2] = i5 + i2; else HEAP32[i1 + 104 >> 2] = i4;
 return;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 HEAP32[i1 >> 2] = 0;
 i4 = i1 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = HEAP32[i3 >> 2];
 __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8allocateEm(i1);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(HEAP32[i4 >> 2] | 0, i2);
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
 return;
}

function _strncat(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = i1 + (_strlen(i1) | 0) | 0;
 L1 : do if (!i3) i5 = i4; else {
  i6 = i3;
  i7 = i2;
  i8 = i4;
  while (1) {
   i9 = HEAP8[i7 >> 0] | 0;
   if (!(i9 << 24 >> 24)) {
    i5 = i8;
    break L1;
   }
   i6 = i6 + -1 | 0;
   i10 = i8 + 1 | 0;
   HEAP8[i8 >> 0] = i9;
   if (!i6) {
    i5 = i10;
    break;
   } else {
    i7 = i7 + 1 | 0;
    i8 = i10;
   }
  }
 } while (0);
 HEAP8[i5 >> 0] = 0;
 return i1 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8allocateEm(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (!(__ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) | 0)) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1); else {
  i2 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE8allocateEm(i1 + 12 | 0, 1) | 0;
  HEAP32[i1 + 4 >> 2] = i2;
  HEAP32[i1 >> 2] = i2;
  HEAP32[i1 + 8 >> 2] = i2 + 24;
  return;
 }
}

function __ZN6vision21HoughSimilarityVotingD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 + 124 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 128 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 112 >> 2] | 0;
 if (i2 | 0) {
  HEAP32[i1 + 116 >> 2] = i2;
  __ZdlPv(i2);
 }
 i2 = HEAP32[i1 + 100 >> 2] | 0;
 if (i2 | 0) {
  i3 = i2;
  do {
   i2 = i3;
   i3 = HEAP32[i3 >> 2] | 0;
   __ZdlPv(i2);
  } while ((i3 | 0) != 0);
 }
 i3 = i1 + 92 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i5 = i4 + -4 | 0;
  HEAP32[i3 >> 2] = i5;
  i4 = i5;
 }
 i4 = HEAP32[i1 >> 2] | 0;
 do if (i4 | 0) {
  i3 = HEAP32[i1 + 16 >> 2] | 0;
  if ((i4 | 0) == (i3 | 0)) {
   HEAP8[i3 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i4);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__211__call_onceERVmPvPFvS2_E(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _pthread_mutex_lock(58836) | 0;
 while (1) {
  if ((HEAP32[i1 >> 2] | 0) != 1) break;
  _pthread_cond_wait(58864, 58836) | 0;
 }
 if (!(HEAP32[i1 >> 2] | 0)) {
  HEAP32[i1 >> 2] = 1;
  _pthread_mutex_unlock(58836) | 0;
  FUNCTION_TABLE_vi[i3 & 255](i2);
  _pthread_mutex_lock(58836) | 0;
  HEAP32[i1 >> 2] = -1;
  _pthread_mutex_unlock(58836) | 0;
  _pthread_cond_broadcast(58864) | 0;
 } else _pthread_mutex_unlock(58836) | 0;
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = HEAP32[i1 + 4 >> 2] | 0;
 i8 = i7 >> 8;
 if (!(i7 & 1)) i9 = i8; else i9 = HEAP32[(HEAP32[i4 >> 2] | 0) + i8 >> 2] | 0;
 i8 = HEAP32[i1 >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 20 >> 2] & 7](i8, i2, i3, i4 + i9 | 0, (i7 & 2 | 0) == 0 ? 2 : i5, i6);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i3, i4); else {
  i5 = HEAP32[i1 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 31](i5, i2, i3, i4);
 }
 return;
}

function ___stdout_write(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 i5 = i4;
 HEAP32[i1 + 36 >> 2] = 2;
 if ((HEAP32[i1 >> 2] & 64 | 0) == 0 ? (HEAP32[i5 >> 2] = HEAP32[i1 + 60 >> 2], HEAP32[i5 + 4 >> 2] = 21523, HEAP32[i5 + 8 >> 2] = i4 + 16, ___syscall54(54, i5 | 0) | 0) : 0) HEAP8[i1 + 75 >> 0] = -1;
 i5 = ___stdio_write(i1, i2, i3) | 0;
 STACKTOP = i4;
 return i5 | 0;
}

function _arVecInnerproduct(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, d4 = 0.0, i5 = 0, d6 = 0.0, d7 = 0.0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 if ((i3 | 0) != (HEAP32[i2 + 4 >> 2] | 0)) _exit(0);
 if ((i3 | 0) <= 0) {
  d4 = 0.0;
  return +d4;
 }
 i5 = HEAP32[i1 >> 2] | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 d6 = 0.0;
 i2 = 0;
 while (1) {
  d7 = d6 + +HEAPF64[i5 + (i2 << 3) >> 3] * +HEAPF64[i1 + (i2 << 3) >> 3];
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == (i3 | 0)) {
   d4 = d7;
   break;
  } else d6 = d7;
 }
 return +d4;
}

function __ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i1;
 __ZNKSt3__28ios_base6getlocEv(i4, i2);
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i4, 58516) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 48 >> 2] & 15](i2, 10736, 10762, i3) | 0;
 __ZNSt3__26localeD2Ev(i4);
 STACKTOP = i1;
 return i3 | 0;
}

function __ZN6vision25GaussianScaleSpacePyramidD0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 HEAP32[i1 >> 2] = 13500;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) {
  __ZdlPv(i1);
  return;
 }
 i4 = i1 + 8 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 if ((i5 | 0) == (i3 | 0)) i6 = i3; else {
  i7 = i5;
  do {
   i7 = i7 + -32 | 0;
   __ZN6vision5ImageD2Ev(i7);
  } while ((i7 | 0) != (i3 | 0));
  i6 = HEAP32[i2 >> 2] | 0;
 }
 HEAP32[i4 >> 2] = i3;
 __ZdlPv(i6);
 __ZdlPv(i1);
 return;
}

function _wmemmove(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 if (i1 - i2 >> 2 >>> 0 >= i3 >>> 0) {
  if (i3 | 0) {
   i4 = i2;
   i5 = i1;
   i6 = i3;
   while (1) {
    i6 = i6 + -1 | 0;
    HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
    if (!i6) break; else {
     i4 = i4 + 4 | 0;
     i5 = i5 + 4 | 0;
    }
   }
  }
 } else {
  i5 = i3;
  do {
   i5 = i5 + -1 | 0;
   HEAP32[i1 + (i5 << 2) >> 2] = HEAP32[i2 + (i5 << 2) >> 2];
  } while ((i5 | 0) != 0);
 }
 return i1 | 0;
}

function _arUtilGetDirectoryNameFromPath(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0 & (i3 | 0) != 0)) {
  i5 = 0;
  return i5 | 0;
 }
 i6 = _strrchr(i2, 47) | 0;
 if (!i6) {
  HEAP8[i1 >> 0] = 0;
  i5 = i1;
  return i5 | 0;
 }
 i7 = i6 + ((i4 | 0) != 0 & 1) - i2 | 0;
 if ((i7 + 1 | 0) >>> 0 > i3 >>> 0) {
  i5 = 0;
  return i5 | 0;
 }
 _strncpy(i1, i2, i7) | 0;
 HEAP8[i1 + i7 >> 0] = 0;
 i5 = i1;
 return i5 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 17);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 14);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 13);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 12);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 11);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 10);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 9);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 8);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 5);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 4);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm4EEERAT__Kc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, i2, 3);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm22EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51636, 21);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm19EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51857, 18);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm16EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51030, 15);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0;
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 i7 = i6 >> 8;
 if (!(i6 & 1)) i8 = i7; else i8 = HEAP32[(HEAP32[i3 >> 2] | 0) + i7 >> 2] | 0;
 i7 = HEAP32[i1 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 24 >> 2] & 31](i7, i2, i3 + i8 | 0, (i6 & 2 | 0) == 0 ? 2 : i4, i5);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm8EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51437, 7);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm7EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51850, 6);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm3EEERAT__Kc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm(i1, 51661, 2);
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _strcmp(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = HEAP8[i1 >> 0] | 0;
 i4 = HEAP8[i2 >> 0] | 0;
 if (i3 << 24 >> 24 == 0 ? 1 : i3 << 24 >> 24 != i4 << 24 >> 24) {
  i5 = i4;
  i6 = i3;
 } else {
  i3 = i2;
  i2 = i1;
  do {
   i2 = i2 + 1 | 0;
   i3 = i3 + 1 | 0;
   i1 = HEAP8[i2 >> 0] | 0;
   i4 = HEAP8[i3 >> 0] | 0;
  } while (!(i1 << 24 >> 24 == 0 ? 1 : i1 << 24 >> 24 != i4 << 24 >> 24));
  i5 = i4;
  i6 = i1;
 }
 return (i6 & 255) - (i5 & 255) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEENS5_IS9_Lm4096EEEED2Ev(i1 + 32 | 0);
 __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev(i1 + 16 | 0);
 __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev(i1);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0); else {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 }
 return;
}

function _fwrite(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i5 = Math_imul(i3, i2) | 0;
 i6 = (i2 | 0) == 0 ? 0 : i3;
 if ((HEAP32[i4 + 76 >> 2] | 0) > -1) {
  i3 = (___lockfile(i4) | 0) == 0;
  i7 = ___fwritex(i1, i5, i4) | 0;
  if (i3) i8 = i7; else {
   ___unlockfile(i4);
   i8 = i7;
  }
 } else i8 = ___fwritex(i1, i5, i4) | 0;
 if ((i8 | 0) == (i5 | 0)) i9 = i6; else i9 = (i8 >>> 0) / (i2 >>> 0) | 0;
 return i9 | 0;
}

function _memcmp(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 L1 : do if (!i3) i4 = 0; else {
  i5 = i1;
  i6 = i3;
  i7 = i2;
  while (1) {
   i8 = HEAP8[i5 >> 0] | 0;
   i9 = HEAP8[i7 >> 0] | 0;
   if (i8 << 24 >> 24 != i9 << 24 >> 24) break;
   i6 = i6 + -1 | 0;
   if (!i6) {
    i4 = 0;
    break L1;
   } else {
    i5 = i5 + 1 | 0;
    i7 = i7 + 1 | 0;
   }
  }
  i4 = (i8 & 255) - (i9 & 255) | 0;
 } while (0);
 return i4 | 0;
}

function _emit_message(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) >= 0) {
  if ((HEAP32[i3 + 104 >> 2] | 0) < (i2 | 0)) return;
  FUNCTION_TABLE_vi[HEAP32[i3 + 8 >> 2] & 255](i1);
  return;
 }
 i2 = i3 + 108 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 if ((i4 | 0) != 0 ? (HEAP32[i3 + 104 >> 2] | 0) <= 2 : 0) i5 = i4; else {
  FUNCTION_TABLE_vi[HEAP32[i3 + 8 >> 2] & 255](i1);
  i5 = HEAP32[i2 >> 2] | 0;
 }
 HEAP32[i2 >> 2] = i5 + 1;
 return;
}

function __ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 12 >> 2] | 0;
 if (!i2) return;
 __ZN6vision28BinaryHierarchicalClusteringILi96EED2Ev(i2 + 36 | 0);
 i1 = HEAP32[i2 + 24 >> 2] | 0;
 if (i1 | 0) {
  HEAP32[i2 + 28 >> 2] = i1;
  __ZdlPv(i1);
 }
 i1 = HEAP32[i2 + 12 >> 2] | 0;
 if (i1 | 0) {
  HEAP32[i2 + 16 >> 2] = i1;
  __ZdlPv(i1);
 }
 __ZdlPv(i2);
 return;
}

function _jpeg_open_backing_store(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i3 = _tmpfile() | 0;
 HEAP32[i2 + 12 >> 2] = i3;
 if (!i3) {
  i3 = HEAP32[i1 >> 2] | 0;
  HEAP32[i3 + 20 >> 2] = 63;
  i4 = i3 + 24 | 0;
  i3 = i4 + 80 | 0;
  do {
   HEAP8[i4 >> 0] = 0;
   i4 = i4 + 1 | 0;
  } while ((i4 | 0) < (i3 | 0));
  FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 >> 2] >> 2] & 255](i1);
 }
 HEAP32[i2 >> 2] = 4;
 HEAP32[i2 + 4 >> 2] = 5;
 HEAP32[i2 + 8 >> 2] = 41;
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = i5 >> 8;
 if (!(i5 & 1)) i7 = i6; else i7 = HEAP32[(HEAP32[i3 >> 2] | 0) + i6 >> 2] | 0;
 i6 = HEAP32[i1 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 31](i6, i2, i3 + i7 | 0, (i5 & 2 | 0) == 0 ? 2 : i4);
 return;
}

function _write_backing_store(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0;
 i6 = i2 + 12 | 0;
 if (_fseek(HEAP32[i6 >> 2] | 0, i4, 0) | 0) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 65;
  FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i1);
 }
 if ((_fwrite(i3, 1, i5, HEAP32[i6 >> 2] | 0) | 0) == (i5 | 0)) return;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i5 + 20 >> 2] = 66;
 FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i1);
 return;
}

function _vasprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 i6 = _vsnprintf(0, 0, i2, i5) | 0;
 if ((i6 | 0) >= 0 ? (i5 = i6 + 1 | 0, i6 = _malloc(i5) | 0, HEAP32[i1 >> 2] = i6, (i6 | 0) != 0) : 0) i7 = _vsnprintf(i6, i5, i2, i3) | 0; else i7 = -1;
 STACKTOP = i4;
 return i7 | 0;
}

function _read_backing_store(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0;
 i6 = i2 + 12 | 0;
 if (_fseek(HEAP32[i6 >> 2] | 0, i4, 0) | 0) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = 65;
  FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i1);
 }
 if ((_fread(i3, 1, i5, HEAP32[i6 >> 2] | 0) | 0) == (i5 | 0)) return;
 i5 = HEAP32[i1 >> 2] | 0;
 HEAP32[i5 + 20 >> 2] = 64;
 FUNCTION_TABLE_vi[HEAP32[i5 >> 2] & 255](i1);
 return;
}

function _ar2ReadJpegImage2(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = _malloc(20) | 0;
 if (!i3) {
  _arLog(0, 3, 20510, i2);
  _exit(1);
 }
 i4 = _jpgread(i1, i3 + 8 | 0, i3 + 12 | 0, i3 + 4 | 0, i3 + 16 | 0) | 0;
 HEAP32[i3 >> 2] = i4;
 if (i4 | 0) {
  i5 = i3;
  STACKTOP = i2;
  return i5 | 0;
 }
 _free(i3);
 i5 = 0;
 STACKTOP = i2;
 return i5 | 0;
}

function __ZNK6vision20VisualDatabaseFacade18get3DFeaturePointsEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i2;
 i2 = __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_((HEAP32[i1 >> 2] | 0) + 4 | 0, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN6vision25GaussianScaleSpacePyramidD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 HEAP32[i1 >> 2] = 13500;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) return;
 i4 = i1 + 8 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if ((i1 | 0) == (i3 | 0)) i5 = i3; else {
  i6 = i1;
  do {
   i6 = i6 + -32 | 0;
   __ZN6vision5ImageD2Ev(i6);
  } while ((i6 | 0) != (i3 | 0));
  i5 = HEAP32[i2 >> 2] | 0;
 }
 HEAP32[i4 >> 2] = i3;
 __ZdlPv(i5);
 return;
}

function ___towrite(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = i1 + 74 | 0;
 i3 = HEAP8[i2 >> 0] | 0;
 HEAP8[i2 >> 0] = i3 + 255 | i3;
 i3 = HEAP32[i1 >> 2] | 0;
 if (!(i3 & 8)) {
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  i2 = HEAP32[i1 + 44 >> 2] | 0;
  HEAP32[i1 + 28 >> 2] = i2;
  HEAP32[i1 + 20 >> 2] = i2;
  HEAP32[i1 + 16 >> 2] = i2 + (HEAP32[i1 + 48 >> 2] | 0);
  i4 = 0;
 } else {
  HEAP32[i1 >> 2] = i3 | 32;
  i4 = -1;
 }
 return i4 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = i1 + 8 | 0;
 i1 = ___uselocale(HEAP32[i2 >> 2] | 0) | 0;
 i3 = _mbtowc(0, 0, 4) | 0;
 if (i1 | 0) ___uselocale(i1) | 0;
 if (!i3) {
  i3 = HEAP32[i2 >> 2] | 0;
  if (!i3) i4 = 1; else {
   i2 = ___uselocale(i3) | 0;
   i3 = ___ctype_get_mb_cur_max() | 0;
   if (i2 | 0) ___uselocale(i2) | 0;
   return (i3 | 0) == 1 | 0;
  }
 } else i4 = -1;
 return i4 | 0;
}

function __ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 i1 = i3;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) {
   i5 = i4;
   break;
  }
  if ((HEAP32[i1 >> 2] | 0) >>> 0 >= 128) {
   i5 = i1;
   break;
  }
  i3 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
  if (!((HEAP16[i3 + (HEAP32[i1 >> 2] << 1) >> 1] & i2) << 16 >> 16)) {
   i5 = i1;
   break;
  }
  i1 = i1 + 4 | 0;
 }
 return i5 | 0;
}

function _fmt_x(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 if ((i1 | 0) == 0 & (i2 | 0) == 0) i5 = i3; else {
  i6 = i3;
  i3 = i2;
  i2 = i1;
  while (1) {
   i1 = i6 + -1 | 0;
   HEAP8[i1 >> 0] = HEAPU8[4448 + (i2 & 15) >> 0] | 0 | i4;
   i2 = _bitshift64Lshr(i2 | 0, i3 | 0, 4) | 0;
   i3 = getTempRet0() | 0;
   if ((i2 | 0) == 0 & (i3 | 0) == 0) {
    i5 = i1;
    break;
   } else i6 = i1;
  }
 }
 return i5 | 0;
}

function ___randname(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 ___clock_gettime(0, i3 | 0) | 0;
 i4 = 0;
 i5 = (HEAP32[i3 + 4 >> 2] | 0) * 65537 ^ (i3 >>> 4) + i1;
 while (1) {
  HEAP8[i1 + i4 >> 0] = (i5 & 15) + 65 | i5 << 1 & 32;
  i4 = i4 + 1 | 0;
  if ((i4 | 0) == 6) break; else i5 = i5 >>> 5;
 }
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 if ((i2 | 0) == (__ZNSt3__211char_traitsIwE3eofEv() | 0)) i3 = __ZNSt3__211char_traitsIwE3eofEv() | 0; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 4;
  i3 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[i1 >> 2] | 0) | 0;
 }
 return i3 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
 if ((i2 | 0) == (__ZNSt3__211char_traitsIcE3eofEv() | 0)) i3 = __ZNSt3__211char_traitsIcE3eofEv() | 0; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 1;
  i3 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[i1 >> 0] | 0) | 0;
 }
 return i3 | 0;
}

function _jinit_huff_decoder(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 1, 232) | 0;
 HEAP32[i1 + 444 >> 2] = i2;
 HEAP32[i2 >> 2] = 130;
 HEAP32[i2 + 4 >> 2] = 20;
 i1 = i2 + 40 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i2 + 60 >> 2] = 0;
 HEAP32[i2 + 64 >> 2] = 0;
 HEAP32[i2 + 68 >> 2] = 0;
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i5 = (HEAP32[i3 >> 2] | 0) - i4 >> 2;
 i6 = i4;
 if (i5 >>> 0 >= i2 >>> 0) {
  if (i5 >>> 0 > i2 >>> 0) HEAP32[i3 >> 2] = i6 + (i2 << 2);
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm(i1, i2 - i5 | 0);
 return;
}

function _arg_n_668(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
 i1 = i2;
 while (1) {
  i2 = (HEAP32[i4 >> 2] | 0) + (4 - 1) & ~(4 - 1);
  i5 = HEAP32[i2 >> 2] | 0;
  HEAP32[i4 >> 2] = i2 + 4;
  if (i1 >>> 0 > 1) i1 = i1 + -1 | 0; else break;
 }
 STACKTOP = i3;
 return i5 | 0;
}

function __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i7 = i6;
 HEAP32[i7 >> 2] = i5;
 i5 = ___uselocale(i3) | 0;
 i3 = _vsnprintf(i1, i2, i4, i7) | 0;
 if (i5 | 0) ___uselocale(i5) | 0;
 STACKTOP = i6;
 return i3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 if (((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 112 : 0) {
  i4 = i1 + 2 | 0;
  i5 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i4, i2, i3) | 0;
  i6 = (i5 | 0) == (i4 | 0) ? i1 : i5;
 } else i6 = i1;
 return i6 | 0;
}

function ___string_read(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = i1 + 84 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = i3 + 256 | 0;
 i7 = _memchr(i5, 0, i6) | 0;
 i8 = (i7 | 0) == 0 ? i6 : i7 - i5 | 0;
 i7 = i8 >>> 0 < i3 >>> 0 ? i8 : i3;
 _memcpy(i2 | 0, i5 | 0, i7 | 0) | 0;
 HEAP32[i1 + 4 >> 2] = i5 + i7;
 i2 = i5 + i8 | 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i4 >> 2] = i2;
 return i7 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 if ((i1 | 0) != (i2 | 0)) {
  i3 = HEAP8[i2 + 11 >> 0] | 0;
  i4 = i3 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcm(i1, i4 ? HEAP32[i2 >> 2] | 0 : i2, i4 ? HEAP32[i2 + 4 >> 2] | 0 : i3 & 255);
 }
 return;
}

function _sbrk(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = _emscripten_get_heap_size() | 0;
 i3 = HEAP32[DYNAMICTOP_PTR >> 2] | 0;
 i4 = i3 + i1 | 0;
 if ((i1 | 0) > 0 & (i4 | 0) < (i3 | 0) | (i4 | 0) < 0) {
  abortOnCannotGrowMemory(i4 | 0) | 0;
  ___setErrNo(12);
  return -1;
 }
 if ((i4 | 0) > (i2 | 0)) if (!(_emscripten_resize_heap(i4 | 0) | 0)) {
  ___setErrNo(12);
  return -1;
 }
 HEAP32[DYNAMICTOP_PTR >> 2] = i4;
 return i3 | 0;
}

function _ar3DCreateHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = _malloc(4) | 0;
 if (!i3) {
  _arLog(0, 3, 20510, i2);
  _exit(1);
 }
 i4 = _icpCreateHandle(i1 + 8 | 0) | 0;
 HEAP32[i3 >> 2] = i4;
 if (i4 | 0) {
  i5 = i3;
  STACKTOP = i2;
  return i5 | 0;
 }
 _free(i3);
 i5 = 0;
 STACKTOP = i2;
 return i5 | 0;
}

function ___fmodeflags(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = (_strchr(i1, 43) | 0) == 0;
 i3 = HEAP8[i1 >> 0] | 0;
 i4 = i2 ? i3 << 24 >> 24 != 114 & 1 : 2;
 i2 = (_strchr(i1, 120) | 0) == 0;
 i5 = i2 ? i4 : i4 | 128;
 i4 = (_strchr(i1, 101) | 0) == 0;
 i1 = i4 ? i5 : i5 | 524288;
 i5 = i3 << 24 >> 24 == 114 ? i1 : i1 | 64;
 i1 = i3 << 24 >> 24 == 119 ? i5 | 512 : i5;
 return (i3 << 24 >> 24 == 97 ? i1 | 1024 : i1) | 0;
}

function __ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 i1 = i4;
 i4 = i2;
 while (1) {
  if ((i4 | 0) == (i3 | 0)) break;
  if ((HEAP32[i4 >> 2] | 0) >>> 0 < 128) {
   i2 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
   i5 = HEAPU16[i2 + (HEAP32[i4 >> 2] << 1) >> 1] | 0;
  } else i5 = 0;
  HEAP16[i1 >> 1] = i5;
  i1 = i1 + 2 | 0;
  i4 = i4 + 4 | 0;
 }
 return i3 | 0;
}

function __ZNSt3__28ios_base4initEPv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 HEAP32[i1 + 24 >> 2] = i2;
 HEAP32[i1 + 16 >> 2] = (i2 | 0) == 0 & 1;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 4098;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 6;
 i2 = i1 + 28 | 0;
 i3 = i1 + 32 | 0;
 i1 = i3 + 40 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i1 | 0));
 __ZNSt3__26localeC2Ev(i2);
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP8[i1 + 128 >> 0] = 0;
 if (i2 | 0) {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8allocateEm(i1, i2);
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i1, i2);
 }
 return;
}

function ___ftello(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if ((HEAP32[i1 + 76 >> 2] | 0) > -1) {
  i2 = (___lockfile(i1) | 0) == 0;
  i3 = ___ftello_unlocked(i1) | 0;
  i4 = getTempRet0() | 0;
  if (i2) {
   i5 = i3;
   i6 = i4;
  } else {
   ___unlockfile(i1);
   i5 = i3;
   i6 = i4;
  }
 } else {
  i4 = ___ftello_unlocked(i1) | 0;
  i5 = i4;
  i6 = getTempRet0() | 0;
 }
 setTempRet0(i6 | 0);
 return i5 | 0;
}

function __ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 i1 = i3;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) {
   i5 = i4;
   break;
  }
  if ((HEAP32[i1 >> 2] | 0) >>> 0 < 128 ? (i3 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0, (HEAP16[i3 + (HEAP32[i1 >> 2] << 1) >> 1] & i2) << 16 >> 16) : 0) {
   i5 = i1;
   break;
  }
  i1 = i1 + 4 | 0;
 }
 return i5 | 0;
}

function __ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i3 = i1;
 i5 = i2 - i1 >> 2;
 while (1) {
  if (!i5) break;
  i1 = (i5 | 0) / 2 | 0;
  i2 = i3 + (i1 << 2) | 0;
  i6 = (HEAP32[i2 >> 2] | 0) >>> 0 < i4 >>> 0;
  i3 = i6 ? i2 + 4 | 0 : i3;
  i5 = i6 ? i5 + -1 - i1 | 0 : i1;
 }
 return i3 | 0;
}

function ___cxa_can_catch(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 i6 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 63](i1, i2, i5) | 0;
 if (i6) HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 STACKTOP = i4;
 return i6 & 1 | 0;
}

function __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 HEAP32[i6 >> 2] = i4;
 i4 = ___uselocale(i2) | 0;
 i2 = _vasprintf(i1, i3, i6) | 0;
 if (i4 | 0) ___uselocale(i4) | 0;
 STACKTOP = i5;
 return i2 | 0;
}

function __ZNKSt3__25ctypeIcE10do_toupperEPcPKc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = i2;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 > -1) {
   i4 = __ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0;
   i5 = HEAP32[i4 + (HEAP8[i1 >> 0] << 2) >> 2] & 255;
  } else i5 = i2;
  HEAP8[i1 >> 0] = i5;
  i1 = i1 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEPcPKc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = i2;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 > -1) {
   i4 = __ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0;
   i5 = HEAP32[i4 + (HEAP8[i1 >> 0] << 2) >> 2] & 255;
  } else i5 = i2;
  HEAP8[i1 >> 0] = i5;
  i1 = i1 + 1 | 0;
 }
 return i3 | 0;
}

function _byteSwapDouble(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i2 >> 0] = HEAP8[i1 + 7 >> 0] | 0;
 HEAP8[i2 + 1 >> 0] = HEAP8[i1 + 6 >> 0] | 0;
 HEAP8[i2 + 2 >> 0] = HEAP8[i1 + 5 >> 0] | 0;
 HEAP8[i2 + 3 >> 0] = HEAP8[i1 + 4 >> 0] | 0;
 HEAP8[i2 + 4 >> 0] = HEAP8[i1 + 3 >> 0] | 0;
 HEAP8[i2 + 5 >> 0] = HEAP8[i1 + 2 >> 0] | 0;
 HEAP8[i2 + 6 >> 0] = HEAP8[i1 + 1 >> 0] | 0;
 HEAP8[i2 + 7 >> 0] = HEAP8[i1 >> 0] | 0;
 return;
}

function __ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 HEAP32[i6 >> 2] = i4;
 i4 = ___uselocale(i2) | 0;
 i2 = _vsscanf(i1, i3, i6) | 0;
 if (i4 | 0) ___uselocale(i4) | 0;
 STACKTOP = i5;
 return i2 | 0;
}

function __ZN6vision18BinomialPyramid32fC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 4 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 0;
 HEAP32[i1 >> 2] = 13484;
 i2 = i1 + 32 | 0;
 i1 = i2 + 36 | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = i2 + 4 | 0;
 } while ((i2 | 0) < (i1 | 0));
 return;
}

function _jcopy_sample_rows(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0;
 if ((i5 | 0) <= 0) return;
 i7 = i1 + (i2 << 2) | 0;
 i2 = i3 + (i4 << 2) | 0;
 i4 = i5;
 while (1) {
  _memcpy(HEAP32[i2 >> 2] | 0, HEAP32[i7 >> 2] | 0, i6 | 0) | 0;
  if ((i4 | 0) > 1) {
   i7 = i7 + 4 | 0;
   i2 = i2 + 4 | 0;
   i4 = i4 + -1 | 0;
  } else break;
 }
 return;
}

function __ZNKSt3__25ctypeIwE10do_toupperEPwPKw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = i2;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < 128) {
   i4 = __ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0;
   i5 = HEAP32[i4 + (HEAP32[i1 >> 2] << 2) >> 2] | 0;
  } else i5 = i2;
  HEAP32[i1 >> 2] = i5;
  i1 = i1 + 4 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEPwPKw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = i2;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < 128) {
   i4 = __ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0;
   i5 = HEAP32[i4 + (HEAP32[i1 >> 2] << 2) >> 2] | 0;
  } else i5 = i2;
  HEAP32[i1 >> 2] = i5;
  i1 = i1 + 4 | 0;
 }
 return i3 | 0;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, i6) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i2, i3, i4, i5);
 return;
}

function _fmt_o(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 if ((i1 | 0) == 0 & (i2 | 0) == 0) i4 = i3; else {
  i5 = i3;
  i3 = i2;
  i2 = i1;
  while (1) {
   i1 = i5 + -1 | 0;
   HEAP8[i1 >> 0] = i2 & 7 | 48;
   i2 = _bitshift64Lshr(i2 | 0, i3 | 0, 3) | 0;
   i3 = getTempRet0() | 0;
   if ((i2 | 0) == 0 & (i3 | 0) == 0) {
    i4 = i1;
    break;
   } else i5 = i1;
  }
 }
 return i4 | 0;
}

function _jpeg_std_error(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 137;
 HEAP32[i1 + 4 >> 2] = 47;
 HEAP32[i1 + 8 >> 2] = 138;
 HEAP32[i1 + 12 >> 2] = 48;
 HEAP32[i1 + 16 >> 2] = 139;
 HEAP32[i1 + 104 >> 2] = 0;
 HEAP32[i1 + 108 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 112 >> 2] = 2048;
 HEAP32[i1 + 116 >> 2] = 123;
 HEAP32[i1 + 120 >> 2] = 0;
 HEAP32[i1 + 124 >> 2] = 0;
 HEAP32[i1 + 128 >> 2] = 0;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (__ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE17pointer_in_bufferEPc(i1, i2) | 0) {
  i4 = i2 + (__ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8align_upEm(i3) | 0) | 0;
  i3 = i1 + 4096 | 0;
  if ((i4 | 0) == (HEAP32[i3 >> 2] | 0)) HEAP32[i3 >> 2] = i2;
 } else _free(i2);
 return;
}

function _vsscanf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 i5 = i4;
 _memset(i5 | 0, 0, 144) | 0;
 HEAP32[i5 + 32 >> 2] = 36;
 HEAP32[i5 + 44 >> 2] = i1;
 HEAP32[i5 + 76 >> 2] = -1;
 HEAP32[i5 + 84 >> 2] = i1;
 i1 = _vfscanf(i5, i2, i3) | 0;
 STACKTOP = i4;
 return i1 | 0;
}

function _shl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = i1 + 4 | 0;
 if (i2 >>> 0 > 31) {
  i4 = HEAP32[i1 >> 2] | 0;
  HEAP32[i3 >> 2] = i4;
  HEAP32[i1 >> 2] = 0;
  i5 = i2 + -32 | 0;
  i6 = 0;
  i7 = i4;
 } else {
  i5 = i2;
  i6 = HEAP32[i1 >> 2] | 0;
  i7 = HEAP32[i3 >> 2] | 0;
 }
 HEAP32[i3 >> 2] = i6 >>> (32 - i5 | 0) | i7 << i5;
 HEAP32[i1 >> 2] = i6 << i5;
 return;
}

function _getint_729(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 if (!(_isdigit(HEAP8[HEAP32[i1 >> 2] >> 0] | 0) | 0)) i2 = 0; else {
  i3 = 0;
  while (1) {
   i4 = HEAP32[i1 >> 2] | 0;
   i5 = (i3 * 10 | 0) + -48 + (HEAP8[i4 >> 0] | 0) | 0;
   i6 = i4 + 1 | 0;
   HEAP32[i1 >> 2] = i6;
   if (!(_isdigit(HEAP8[i6 >> 0] | 0) | 0)) {
    i2 = i5;
    break;
   } else i3 = i5;
  }
 }
 return i2 | 0;
}

function _shr(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = i1 + 4 | 0;
 if (i2 >>> 0 > 31) {
  i4 = HEAP32[i3 >> 2] | 0;
  HEAP32[i1 >> 2] = i4;
  HEAP32[i3 >> 2] = 0;
  i5 = i2 + -32 | 0;
  i6 = 0;
  i7 = i4;
 } else {
  i5 = i2;
  i6 = HEAP32[i3 >> 2] | 0;
  i7 = HEAP32[i1 >> 2] | 0;
 }
 HEAP32[i1 >> 2] = i6 << 32 - i5 | i7 >>> i5;
 HEAP32[i3 >> 2] = i6 >>> i5;
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 HEAP8[i1 >> 0] = 0;
 HEAP32[i1 + 4 >> 2] = i2;
 i3 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[i3 + 16 >> 2] | 0)) {
  i2 = HEAP32[i3 + 72 >> 2] | 0;
  if (i2 | 0) __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i2) | 0;
  HEAP8[i1 >> 0] = 1;
 }
 return;
}

function _copysign(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 var i3 = 0, i4 = 0, i5 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i3 = HEAP32[tempDoublePtr >> 2] | 0;
 i4 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = d2;
 i5 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | i4 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = i3;
 HEAP32[tempDoublePtr + 4 >> 2] = i5;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__28ios_base16__call_callbacksENS0_5eventE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = i1 + 32 | 0;
 i4 = i1 + 36 | 0;
 i5 = HEAP32[i1 + 40 >> 2] | 0;
 while (1) {
  if (!i5) break;
  i6 = i5 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + (i6 << 2) >> 2] & 3](i2, i1, HEAP32[(HEAP32[i4 >> 2] | 0) + (i6 << 2) >> 2] | 0);
  i5 = i6;
 }
 return;
}

function ___muldsi3(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = i1 & 65535;
 i4 = i2 & 65535;
 i5 = Math_imul(i4, i3) | 0;
 i6 = i1 >>> 16;
 i1 = (i5 >>> 16) + (Math_imul(i4, i6) | 0) | 0;
 i4 = i2 >>> 16;
 i2 = Math_imul(i4, i3) | 0;
 return (setTempRet0((i1 >>> 16) + (Math_imul(i4, i6) | 0) + (((i1 & 65535) + i2 | 0) >>> 16) | 0), i1 + i2 << 16 | i5 & 65535 | 0) | 0;
}

function __ZNSt3__218__libcpp_refstringC2EPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = _strlen(i2) | 0;
 i4 = __Znwm(i3 + 13 | 0) | 0;
 HEAP32[i4 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 8 >> 2] = 0;
 i5 = __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE(i4) | 0;
 _memcpy(i5 | 0, i2 | 0, i3 + 1 | 0) | 0;
 HEAP32[i1 >> 2] = i5;
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0;
 i1 = (i3 - i2 | 0) >>> 2;
 i6 = i5;
 i5 = i2;
 while (1) {
  if ((i5 | 0) == (i3 | 0)) break;
  i7 = HEAP32[i5 >> 2] | 0;
  HEAP8[i6 >> 0] = i7 >>> 0 < 128 ? i7 & 255 : i4;
  i6 = i6 + 1 | 0;
  i5 = i5 + 4 | 0;
 }
 return i2 + (i1 << 2) | 0;
}
function _start_input_pass(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 HEAP32[i1 + 148 >> 2] = 0;
 i2 = HEAP32[i1 + 428 >> 2] | 0;
 if ((HEAP32[i1 + 328 >> 2] | 0) > 1) i3 = 1; else {
  i4 = HEAP32[i1 + 332 >> 2] | 0;
  i3 = HEAP32[((HEAP32[i1 + 320 >> 2] | 0) == 1 ? i4 + 72 | 0 : i4 + 12 | 0) >> 2] | 0;
 }
 HEAP32[i2 + 28 >> 2] = i3;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 0;
 return;
}

function __ZNSt3__28numpunctIwEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 16928;
 HEAP32[i1 + 8 >> 2] = 46;
 HEAP32[i1 + 12 >> 2] = 44;
 i2 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _merged_1v_upsample(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i1 + 452 >> 2] | 0) + 12 >> 2] & 31](i1, i2, HEAP32[i3 >> 2] | 0, i5 + (HEAP32[i6 >> 2] << 2) | 0);
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
 HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 return;
}

function _output_message(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 i3 = i2 + 200 | 0;
 i4 = i2;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 63](i1, i4);
 i1 = HEAP32[3449] | 0;
 HEAP32[i3 >> 2] = i4;
 _fprintf(i1, 38307, i3) | 0;
 STACKTOP = i2;
 return;
}

function __ZNSt3__28numpunctIcEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 16888;
 HEAP8[i1 + 8 >> 0] = 46;
 HEAP8[i1 + 9 >> 0] = 44;
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 127](i1) | 0;
 i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58796) | 0;
 HEAP32[i1 + 36 >> 2] = i3;
 i2 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 HEAP8[i1 + 44 >> 0] = i2;
 return;
}

function __ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 127](i1) | 0;
 i3 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 58788) | 0;
 HEAP32[i1 + 36 >> 2] = i3;
 i2 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 HEAP8[i1 + 44 >> 0] = i2;
 return;
}

function _calloc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 if (i1) {
  i3 = Math_imul(i2, i1) | 0;
  if ((i2 | i1) >>> 0 > 65535) i4 = ((i3 >>> 0) / (i1 >>> 0) | 0 | 0) == (i2 | 0) ? i3 : -1; else i4 = i3;
 } else i4 = 0;
 i3 = _malloc(i4) | 0;
 if (!i3) return i3 | 0;
 if (!(HEAP32[i3 + -4 >> 2] & 3)) return i3 | 0;
 _memset(i3 | 0, 0, i4 | 0) | 0;
 return i3 | 0;
}

function _arMatrixAlloc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = _malloc(12) | 0;
 if (!i3) {
  i4 = 0;
  return i4 | 0;
 }
 i5 = _malloc(Math_imul(i1 << 3, i2) | 0) | 0;
 HEAP32[i3 >> 2] = i5;
 if (!i5) {
  _free(i3);
  i4 = 0;
  return i4 | 0;
 } else {
  HEAP32[i3 + 4 >> 2] = i1;
  HEAP32[i3 + 8 >> 2] = i2;
  i4 = i3;
  return i4 | 0;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8align_upEm(i2) | 0;
 i2 = i1 + 4096 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 if ((i1 + 4096 - i4 | 0) >>> 0 < i3 >>> 0) i5 = _malloc(i3) | 0; else {
  HEAP32[i2 >> 2] = i4 + i3;
  i5 = i4;
 }
 return i5 | 0;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, HEAP32[i2 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i3, i4);
 return;
}

function _memmove(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if ((i2 | 0) < (i1 | 0) & (i1 | 0) < (i2 + i3 | 0)) {
  i4 = i1;
  i2 = i2 + i3 | 0;
  i1 = i1 + i3 | 0;
  while ((i3 | 0) > 0) {
   i1 = i1 - 1 | 0;
   i2 = i2 - 1 | 0;
   i3 = i3 - 1 | 0;
   HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
  }
  i1 = i4;
 } else _memcpy(i1, i2, i3) | 0;
 return i1 | 0;
}

function _arLog(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i1;
 if ((i3 | 0) != 0 & (HEAP32[3368] | 0) <= (i2 | 0) ? HEAP8[i3 >> 0] | 0 : 0) {
  HEAP32[i5 >> 2] = i4;
  _arLogv(0, i2, i3, i5);
 }
 STACKTOP = i1;
 return;
}

function _reset_input_controller(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 436 >> 2] | 0;
 HEAP32[i2 >> 2] = 71;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 1;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 FUNCTION_TABLE_vi[HEAP32[HEAP32[i1 + 440 >> 2] >> 2] & 255](i1);
 HEAP32[i1 + 160 >> 2] = 0;
 return;
}

function ___fseeko(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 if ((HEAP32[i1 + 76 >> 2] | 0) > -1) {
  i5 = (___lockfile(i1) | 0) == 0;
  i6 = ___fseeko_unlocked(i1, i2, i3, i4) | 0;
  if (i5) i7 = i6; else {
   ___unlockfile(i1);
   i7 = i6;
  }
 } else i7 = ___fseeko_unlocked(i1, i2, i3, i4) | 0;
 return i7 | 0;
}

function _arUtilGetPixelSize(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 switch (i1 | 0) {
 case 1:
 case 0:
  {
   i2 = 3;
   break;
  }
 case 6:
 case 4:
 case 3:
 case 2:
  {
   i2 = 4;
   break;
  }
 case 14:
 case 13:
 case 12:
 case 5:
  {
   i2 = 1;
   break;
  }
 case 11:
 case 10:
 case 9:
 case 8:
 case 7:
  {
   i2 = 2;
   break;
  }
 default:
  i2 = 0;
 }
 return i2 | 0;
}

function _jinit_input_controller(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 0, 28) | 0;
 HEAP32[i1 + 436 >> 2] = i2;
 HEAP32[i2 >> 2] = 71;
 HEAP32[i2 + 4 >> 2] = 117;
 HEAP32[i2 + 8 >> 2] = 118;
 HEAP32[i2 + 12 >> 2] = 119;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 1;
 return;
}

function _arDeleteHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i2 = -1;
  return i2 | 0;
 }
 i3 = i1 + 7062408 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 if (i4 | 0) {
  _arImageProcFinal(i4);
  HEAP32[i3 >> 2] = 0;
 }
 _free(HEAP32[i1 + 4834144 >> 2] | 0);
 i3 = HEAP32[i1 + 4834148 >> 2] | 0;
 if (i3 | 0) _free(i3);
 _free(i1);
 i2 = 0;
 return i2 | 0;
}

function __ZNKSt3__27collateIwE12do_transformEPKwS3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i1, i3, i4);
 return;
}

function __ZNKSt3__27collateIcE12do_transformEPKcS3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i1, i3, i4);
 return;
}

function _arUtilRemoveExt(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = -1;
 i3 = 0;
 L1 : while (1) {
  switch (HEAP8[i1 + i3 >> 0] | 0) {
  case 0:
   {
    break L1;
    break;
   }
  case 46:
   {
    i4 = i3;
    break;
   }
  default:
   i4 = i2;
  }
  i2 = i4;
  i3 = i3 + 1 | 0;
 }
 if ((i2 | 0) == -1) return 0;
 HEAP8[i1 + i2 >> 0] = 0;
 return 0;
}

function __ZNKSt3__220__time_get_c_storageIwE3__xEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56168] | 0) == 0 ? ___cxa_guard_acquire(56168) | 0 : 0) {
  HEAP32[14659] = 0;
  HEAP32[14660] = 0;
  HEAP32[14661] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58636, 15164, __ZNSt3__211char_traitsIwE6lengthEPKw(15164) | 0);
 }
 return 58636;
}

function __ZNKSt3__220__time_get_c_storageIwE3__rEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56176] | 0) == 0 ? ___cxa_guard_acquire(56176) | 0 : 0) {
  HEAP32[14662] = 0;
  HEAP32[14663] = 0;
  HEAP32[14664] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58648, 15200, __ZNSt3__211char_traitsIwE6lengthEPKw(15200) | 0);
 }
 return 58648;
}

function __ZNKSt3__220__time_get_c_storageIwE3__cEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56184] | 0) == 0 ? ___cxa_guard_acquire(56184) | 0 : 0) {
  HEAP32[14665] = 0;
  HEAP32[14666] = 0;
  HEAP32[14667] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58660, 15248, __ZNSt3__211char_traitsIwE6lengthEPKw(15248) | 0);
 }
 return 58660;
}

function __ZNKSt3__220__time_get_c_storageIwE3__XEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56160] | 0) == 0 ? ___cxa_guard_acquire(56160) | 0 : 0) {
  HEAP32[14656] = 0;
  HEAP32[14657] = 0;
  HEAP32[14658] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58624, 15128, __ZNSt3__211char_traitsIwE6lengthEPKw(15128) | 0);
 }
 return 58624;
}

function __ZNKSt3__220__time_get_c_storageIcE3__xEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56088] | 0) == 0 ? ___cxa_guard_acquire(56088) | 0 : 0) {
  HEAP32[14642] = 0;
  HEAP32[14643] = 0;
  HEAP32[14644] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(58568, 47806, __ZNSt3__211char_traitsIcE6lengthEPKc(47806) | 0);
 }
 return 58568;
}

function __ZNKSt3__220__time_get_c_storageIcE3__rEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56096] | 0) == 0 ? ___cxa_guard_acquire(56096) | 0 : 0) {
  HEAP32[14645] = 0;
  HEAP32[14646] = 0;
  HEAP32[14647] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(58580, 47815, __ZNSt3__211char_traitsIcE6lengthEPKc(47815) | 0);
 }
 return 58580;
}

function __ZNKSt3__220__time_get_c_storageIcE3__cEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56104] | 0) == 0 ? ___cxa_guard_acquire(56104) | 0 : 0) {
  HEAP32[14648] = 0;
  HEAP32[14649] = 0;
  HEAP32[14650] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(58592, 47827, __ZNSt3__211char_traitsIcE6lengthEPKc(47827) | 0);
 }
 return 58592;
}

function __ZNKSt3__220__time_get_c_storageIcE3__XEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56080] | 0) == 0 ? ___cxa_guard_acquire(56080) | 0 : 0) {
  HEAP32[14639] = 0;
  HEAP32[14640] = 0;
  HEAP32[14641] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(58556, 47797, __ZNSt3__211char_traitsIcE6lengthEPKc(47797) | 0);
 }
 return 58556;
}

function ___unlist_locked_file(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (HEAP32[i1 + 68 >> 2] | 0) {
  i2 = HEAP32[i1 + 132 >> 2] | 0;
  i3 = i1 + 128 | 0;
  if (i2 | 0) HEAP32[i2 + 128 >> 2] = HEAP32[i3 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
  if (!i1) i4 = (___pthread_self_604() | 0) + 232 | 0; else i4 = i1 + 132 | 0;
  HEAP32[i4 >> 2] = i2;
 }
 return;
}

function ___uflow(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 if ((___toread(i1) | 0) == 0 ? (FUNCTION_TABLE_iiii[HEAP32[i1 + 32 >> 2] & 63](i1, i3, 1) | 0) == 1 : 0) i4 = HEAPU8[i3 >> 0] | 0; else i4 = -1;
 STACKTOP = i2;
 return i4 | 0;
}

function __ZSt9terminatev() {
 var i1 = 0, i2 = 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if ((i1 | 0 ? (i2 = HEAP32[i1 >> 2] | 0, i2 | 0) : 0) ? (i1 = i2 + 48 | 0, (HEAP32[i1 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[i1 + 4 >> 2] | 0) == 1129074247 : 0) : 0) __ZSt11__terminatePFvvE(HEAP32[i2 + 12 >> 2] | 0);
 __ZSt11__terminatePFvvE(__ZSt13get_terminatev() | 0);
}

function __ZNSt3__218__libcpp_refstringD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 if (__ZNKSt3__218__libcpp_refstring15__uses_refcountEv(i1) | 0 ? (i2 = __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_1028(HEAP32[i1 >> 2] | 0) | 0, i1 = i2 + 8 | 0, i3 = HEAP32[i1 >> 2] | 0, HEAP32[i1 >> 2] = i3 + -1, (i3 + -1 | 0) < 0) : 0) __ZdlPv(i2);
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 8 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function ___memrchr(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 L1 : do if (!i3) i4 = 0; else {
  i5 = i2 & 255;
  i6 = i3;
  while (1) {
   i6 = i6 + -1 | 0;
   if ((HEAP8[i1 + i6 >> 0] | 0) == i5 << 24 >> 24) break;
   if (!i6) {
    i4 = 0;
    break L1;
   }
  }
  i4 = i1 + i6 | 0;
 } while (0);
 return i4 | 0;
}

function _ar2CreateHandle(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i4 = _ar2CreateHandleSub(i2, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, i3) | 0;
 HEAP32[i4 >> 2] = 1;
 HEAP32[i4 + 12 >> 2] = i1;
 i3 = _icpCreateHandle(i1 + 8 | 0) | 0;
 HEAP32[i4 + 16 >> 2] = i3;
 _icpSetInlierProbability(i3, 0.0) | 0;
 return i4 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 4 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function ___stdio_close(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i3 = i2;
 i4 = _dummy_465(HEAP32[i1 + 60 >> 2] | 0) | 0;
 HEAP32[i3 >> 2] = i4;
 i4 = ___syscall_ret(___syscall6(6, i3 | 0) | 0) | 0;
 STACKTOP = i2;
 return i4 | 0;
}

function __ZN6vision5ImageD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 + 28 >> 2] | 0;
 if (!i2) return;
 i1 = i2 + 4 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i3 + -1;
 if (i3 | 0) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 255](i2);
 __ZNSt3__219__shared_weak_count14__release_weakEv(i2);
 return;
}

function __ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = HEAP8[i1 + 11 >> 0] | 0;
 if (i2 << 24 >> 24 < 0) i3 = HEAP32[i1 + 4 >> 2] | 0; else i3 = i2 & 255;
 i2 = HEAP8[i1 + 12 + 11 >> 0] | 0;
 if (i2 << 24 >> 24 < 0) i4 = HEAP32[i1 + 16 >> 2] | 0; else i4 = i2 & 255;
 return i4 + i3 | 0;
}

function _jpeg_idct_1x1(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i6 = 0;
 i6 = (HEAP32[i1 + 324 >> 2] | 0) + 128 + (((Math_imul(HEAP32[HEAP32[i2 + 80 >> 2] >> 2] | 0, HEAP16[i3 >> 1] | 0) | 0) + 4 | 0) >>> 3 & 1023) | 0;
 HEAP8[(HEAP32[i4 >> 2] | 0) + i5 >> 0] = HEAP8[i6 >> 0] | 0;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm(i1, i2, i3, __ZNSt3__211char_traitsIcE6lengthEPKc(i3) | 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1 + 12 | 0, i2 + 12 | 0);
 return;
}

function __ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i5;
 i5 = i2;
 while (1) {
  if ((i5 | 0) == (i3 | 0)) break;
  i2 = HEAP8[i5 >> 0] | 0;
  HEAP8[i1 >> 0] = i2 << 24 >> 24 > -1 ? i2 : i4;
  i1 = i1 + 1 | 0;
  i5 = i5 + 1 | 0;
 }
 return i3 | 0;
}

function _arParamLTFree(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 if (!i1) {
  i2 = -1;
  return i2 | 0;
 }
 i3 = HEAP32[i1 >> 2] | 0;
 if (!i3) {
  i2 = -1;
  return i2 | 0;
 }
 _free(HEAP32[i3 + 184 >> 2] | 0);
 _free(HEAP32[(HEAP32[i1 >> 2] | 0) + 188 >> 2] | 0);
 _free(HEAP32[i1 >> 2] | 0);
 HEAP32[i1 >> 2] = 0;
 i2 = 0;
 return i2 | 0;
}

function _rewind(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP32[i1 + 76 >> 2] | 0) > -1) {
  i2 = (___lockfile(i1) | 0) == 0;
  ___fseeko_unlocked(i1, 0, 0, 0) | 0;
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -33;
  if (!i2) ___unlockfile(i1);
 } else {
  ___fseeko_unlocked(i1, 0, 0, 0) | 0;
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -33;
 }
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 14160;
 __ZNSt3__26localeC2Ev(i1 + 4 | 0);
 i2 = i1 + 8 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 14096;
 __ZNSt3__26localeC2Ev(i1 + 4 | 0);
 i2 = i1 + 8 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 return;
}

function ___cxa_get_globals_fast() {
 var i1 = 0, i2 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!(_pthread_once(58912, 2) | 0)) {
  i2 = _pthread_getspecific(HEAP32[14729] | 0) | 0;
  STACKTOP = i1;
  return i2 | 0;
 } else _abort_message(49793, i1);
 return 0;
}

function __ZNSt3__25ctypeIcEC2EPKtbm(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i1 + 4 >> 2] = i4 + -1;
 HEAP32[i1 >> 2] = 16836;
 i4 = i1 + 8 | 0;
 HEAP32[i4 >> 2] = i2;
 HEAP8[i1 + 12 >> 0] = i3 & 1;
 if (!i2) {
  i2 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
  HEAP32[i4 >> 2] = i2;
 }
 return;
}

function __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = HEAP32[i1 + 8 >> 2] | 0;
 i4 = (HEAP32[i1 >> 2] | 0) + (i3 >> 1) | 0;
 if (!(i3 & 1)) i5 = i2; else i5 = HEAP32[(HEAP32[i4 >> 2] | 0) + i2 >> 2] | 0;
 FUNCTION_TABLE_vi[i5 & 255](i4);
 return;
}

function ___munmap(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i1;
 HEAP32[i4 + 4 >> 2] = i2;
 i2 = ___syscall_ret(___syscall91(91, i4 | 0) | 0) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = i1;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i1 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = i1;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i1 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function _threadEndWait(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 i3 = i1 + 8 | 0;
 if (!(HEAP32[i3 >> 2] | 0)) {
  i4 = i1 + 92 | 0;
  do _pthread_cond_wait(i4 | 0, i2 | 0) | 0; while (!(HEAP32[i3 >> 2] | 0));
 }
 HEAP32[i3 >> 2] = 0;
 _pthread_mutex_unlock(i2) | 0;
 return 0;
}

function __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2 | 0) {
  HEAP32[i1 + 4 >> 2] = i2;
  if ((i2 | 0) == (i1 + 16 | 0)) {
   HEAP8[i1 + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i2);
   break;
  }
 } while (0);
 return;
}

function __GLOBAL__sub_I_ARToolKitJS_cpp() {
 HEAP32[14186] = 0;
 HEAP32[14187] = 0;
 HEAP32[14188] = 0;
 HEAP32[14189] = 0;
 HEAP32[14190] = 1065353216;
 HEAP32[14191] = 0;
 HEAP32[14192] = 0;
 HEAP32[14193] = 0;
 HEAP32[14194] = 0;
 HEAP32[14195] = 1065353216;
 __ZN46EmscriptenBindingInitializer_constant_bindingsC2Ev(0);
 return;
}

function _sn_write(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = i1 + 20 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = (HEAP32[i1 + 16 >> 2] | 0) - i5 | 0;
 i1 = i6 >>> 0 > i3 >>> 0 ? i3 : i6;
 _memcpy(i5 | 0, i2 | 0, i1 | 0) | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i1;
 return i3 | 0;
}

function __ZNKSt3__27collateIwE7do_hashEPKwS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = 0;
 i4 = i2;
 while (1) {
  if ((i4 | 0) == (i3 | 0)) break;
  i2 = (HEAP32[i4 >> 2] | 0) + (i1 << 4) | 0;
  i5 = i2 & -268435456;
  i1 = (i5 >>> 24 | i5) ^ i2;
  i4 = i4 + 4 | 0;
 }
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 _free(i1);
 if (!(_pthread_setspecific(HEAP32[14729] | 0, 0) | 0)) {
  STACKTOP = i2;
  return;
 } else _abort_message(49892, i2);
}

function _snprintf(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i6 = i5;
 HEAP32[i6 >> 2] = i4;
 i4 = _vsnprintf(i1, i2, i3, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function _arMatrixAllocMul(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = _arMatrixAlloc(HEAP32[i1 + 4 >> 2] | 0, HEAP32[i2 + 8 >> 2] | 0) | 0;
 if (!i3) {
  i4 = 0;
  return i4 | 0;
 }
 if ((_arMatrixMul(i3, i1, i2) | 0) >= 0) {
  i4 = i3;
  return i4 | 0;
 }
 _arMatrixFree(i3) | 0;
 i4 = 0;
 return i4 | 0;
}

function __ZNKSt3__27collateIcE7do_hashEPKcS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = 0;
 i4 = i2;
 while (1) {
  if ((i4 | 0) == (i3 | 0)) break;
  i2 = (i1 << 4) + (HEAP8[i4 >> 0] | 0) | 0;
  i5 = i2 & -268435456;
  i1 = (i5 >>> 24 | i5) ^ i2;
  i4 = i4 + 1 | 0;
 }
 return i1 | 0;
}

function _jpeg_abort(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 if (!i2) return;
 FUNCTION_TABLE_vii[HEAP32[i2 + 36 >> 2] & 63](i1, 1);
 i2 = i1 + 20 | 0;
 if (!(HEAP32[i1 + 16 >> 2] | 0)) {
  HEAP32[i2 >> 2] = 100;
  return;
 } else {
  HEAP32[i2 >> 2] = 200;
  HEAP32[i1 + 304 >> 2] = 0;
  return;
 }
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEEC2EmRKS8_RKS9_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm(i1, i2, __ZNSt3__211char_traitsIcE6lengthEPKc(i2) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcm(i1, i2, __ZNSt3__211char_traitsIcE6lengthEPKc(i2) | 0);
 return;
}

function __ZNSt3__28ios_baseD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 14080;
 __ZNSt3__28ios_base16__call_callbacksENS0_5eventE(i1, 0);
 __ZNSt3__26localeD2Ev(i1 + 28 | 0);
 _free(HEAP32[i1 + 32 >> 2] | 0);
 _free(HEAP32[i1 + 36 >> 2] | 0);
 _free(HEAP32[i1 + 48 >> 2] | 0);
 _free(HEAP32[i1 + 60 >> 2] | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE10deallocateEPS8_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(HEAP32[i1 >> 2] | 0, i2, i3 << 4);
 return;
}

function _arVecAlloc(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = _malloc(8) | 0;
 if (!i2) {
  i3 = 0;
  return i3 | 0;
 }
 i4 = _malloc(i1 << 3) | 0;
 HEAP32[i2 >> 2] = i4;
 if (!i4) {
  _free(i2);
  i3 = 0;
  return i3 | 0;
 } else {
  HEAP32[i2 + 4 >> 2] = i1;
  i3 = i2;
  return i3 | 0;
 }
 return 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 + 8 >> 2] | 0;
 if (i2) {
  i1 = ___uselocale(i2) | 0;
  i2 = ___ctype_get_mb_cur_max() | 0;
  if (!i1) i3 = i2; else {
   ___uselocale(i1) | 0;
   i3 = i2;
  }
 } else i3 = 1;
 return i3 | 0;
}

function _abort_message(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i4 = i3;
 HEAP32[i4 >> 2] = i2;
 i2 = HEAP32[3449] | 0;
 _vfprintf(i2, i1, i4) | 0;
 _fputc(10, i2) | 0;
 _abort();
}

function _arMatrixAllocTrans(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = _arMatrixAlloc(HEAP32[i1 + 8 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
 if (!i2) {
  i3 = 0;
  return i3 | 0;
 }
 if ((_arMatrixTrans(i2, i1) | 0) >= 0) {
  i3 = i2;
  return i3 | 0;
 }
 _arMatrixFree(i2) | 0;
 i3 = 0;
 return i3 | 0;
}

function __ZNKSt3__28numpunctIwE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(i1, 16960, __ZNSt3__211char_traitsIwE6lengthEPKw(16960) | 0);
 return;
}

function __ZNKSt3__28numpunctIcE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, 51445, __ZNSt3__211char_traitsIcE6lengthEPKc(51445) | 0);
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if ((HEAP32[i2 + 4 >> 2] | 0) == (i3 | 0) ? (i3 = i2 + 28 | 0, (HEAP32[i3 >> 2] | 0) != 1) : 0) HEAP32[i3 >> 2] = i4;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKc(i1) {
 i1 = i1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKcm(i1, __ZNSt3__211char_traitsIcE6lengthEPKc(51664) | 0);
 return;
}

function __ZNKSt3__28numpunctIwE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(i1, 16984, __ZNSt3__211char_traitsIwE6lengthEPKw(16984) | 0);
 return;
}

function __ZNKSt3__28numpunctIcE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(i1, 51451, __ZNSt3__211char_traitsIcE6lengthEPKc(51451) | 0);
 return;
}

function __ZNSt3__219__shared_weak_count14__release_weakEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 8 | 0;
 if (!((HEAP32[i2 >> 2] | 0) != 0 ? (i3 = HEAP32[i2 >> 2] | 0, HEAP32[i2 >> 2] = i3 + -1, (i3 | 0) != 0) : 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 return;
}

function _ferror(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if ((HEAP32[i1 + 76 >> 2] | 0) > -1) {
  i2 = (___lockfile(i1) | 0) == 0;
  i3 = (HEAP32[i1 >> 2] | 0) >>> 5 & 1;
  if (i2) i4 = i3; else {
   ___unlockfile(i1);
   i4 = i3;
  }
 } else i4 = (HEAP32[i1 >> 2] | 0) >>> 5 & 1;
 return i4 | 0;
}

function _arMatrixAllocDup(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = _arMatrixAlloc(HEAP32[i1 + 4 >> 2] | 0, HEAP32[i1 + 8 >> 2] | 0) | 0;
 if (!i2) {
  i3 = 0;
  return i3 | 0;
 }
 if ((_arMatrixDup(i2, i1) | 0) >= 0) {
  i3 = i2;
  return i3 | 0;
 }
 _arMatrixFree(i2) | 0;
 i3 = 0;
 return i3 | 0;
}

function _wmemcpy(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (i3 | 0) {
  i4 = i3;
  i3 = i2;
  i2 = i1;
  while (1) {
   i4 = i4 + -1 | 0;
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   if (!i4) break; else {
    i3 = i3 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 return i1 | 0;
}

function _sprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vsprintf(i1, i2, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function _fprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vfprintf(i1, i2, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i1;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i1 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i1;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i1 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function dynCall_iiiiiiiii(i1, i2, i3, i4, i5, i6, i7, i8, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 return FUNCTION_TABLE_iiiiiiiii[i1 & 15](i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0, i9 | 0) | 0;
}

function _sscanf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vsscanf(i1, i2, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i1 + 12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i1);
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEC2EmRKS6_RKS7_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _catopen((HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _catopen((HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function _reset_marker_reader(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 440 >> 2] | 0;
 HEAP32[i1 + 216 >> 2] = 0;
 HEAP32[i1 + 144 >> 2] = 0;
 HEAP32[i1 + 416 >> 2] = 0;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 24 >> 2] = 0;
 HEAP32[i2 + 164 >> 2] = 0;
 return;
}

function ___muldi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = i1;
 i1 = i3;
 i3 = ___muldsi3(i5, i1) | 0;
 i6 = getTempRet0() | 0;
 return (setTempRet0((Math_imul(i2, i1) | 0) + (Math_imul(i4, i5) | 0) + i6 | i6 & 0 | 0), i3 | 0 | 0) | 0;
}

function _a_ctz_l_556(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (i1) if (!(i1 & 1)) {
  i2 = i1;
  i1 = 0;
  while (1) {
   i3 = i1 + 1 | 0;
   if (!(i2 & 2)) {
    i2 = i2 >>> 1;
    i1 = i3;
   } else {
    i4 = i3;
    break;
   }
  }
 } else i4 = 0; else i4 = 32;
 return i4 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE10deallocateEPS6_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(HEAP32[i1 >> 2] | 0, i2, i3 << 4);
 return;
}

function _testSetjmp(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 while ((i4 | 0) < (i3 | 0)) {
  i5 = HEAP32[i2 + (i4 << 3) >> 2] | 0;
  if (!i5) break;
  if ((i5 | 0) == (i1 | 0)) return HEAP32[i2 + ((i4 << 3) + 4) >> 2] | 0;
  i4 = i4 + 1 | 0;
 }
 return 0;
}

function __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i5 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i4;
 HEAP32[i1 + 8 >> 2] = i5;
 return;
}

function __Znwm(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = (i1 | 0) == 0 ? 1 : i1;
 while (1) {
  i1 = _malloc(i2) | 0;
  if (i1 | 0) {
   i3 = i1;
   break;
  }
  i1 = __ZSt15get_new_handlerv() | 0;
  if (!i1) {
   i3 = 0;
   break;
  }
  FUNCTION_TABLE_v[i1 & 3]();
 }
 return i3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!(_pthread_key_create(58916, 145) | 0)) {
  STACKTOP = i1;
  return;
 } else _abort_message(49842, i1);
}

function __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 switch (HEAP32[i1 + 4 >> 2] & 74) {
 case 64:
  {
   i2 = 8;
   break;
  }
 case 8:
  {
   i2 = 16;
   break;
  }
 case 0:
  {
   i2 = 0;
   break;
  }
 default:
  i2 = 10;
 }
 return i2 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(HEAP32[i1 >> 2] | 0, i2 << 4) | 0;
}

function __ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i4;
 i4 = i2;
 while (1) {
  if ((i4 | 0) == (i3 | 0)) break;
  HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
  i1 = i1 + 1 | 0;
  i4 = i4 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function _arPattFree(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = (HEAP32[i1 + 8 >> 2] | 0) + (i2 << 2) | 0;
 if (!(HEAP32[i3 >> 2] | 0)) {
  i4 = -1;
  return i4 | 0;
 }
 HEAP32[i3 >> 2] = 0;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + -1;
 i4 = 1;
 return i4 | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 16768;
 i2 = i1 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[i2 >> 2] | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i4;
 i4 = i2;
 while (1) {
  if ((i4 | 0) == (i3 | 0)) break;
  HEAP32[i1 >> 2] = HEAP8[i4 >> 0];
  i1 = i1 + 4 | 0;
  i4 = i4 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i3;
 HEAP32[i8 >> 2] = i6;
 return 3;
}

function __ZNKSt3__25ctypeIwE5do_isEtw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (i3 >>> 0 < 128) {
  i1 = (__ZNSt3__25ctypeIcE13classic_tableEv() | 0) + (i3 << 1) | 0;
  i4 = (HEAP16[i1 >> 1] & i2) << 16 >> 16 != 0;
 } else i4 = 0;
 return i4 | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i3;
 HEAP32[i8 >> 2] = i6;
 return 3;
}

function _finish_output_pass(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 420 >> 2] | 0;
 if (HEAP32[i1 + 84 >> 2] | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 8 >> 2] & 255](i1);
 i1 = i2 + 12 | 0;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (i2 << 24 >> 24 > -1) {
  i1 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + (i2 << 24 >> 24 << 2) | 0;
  i3 = HEAP32[i1 >> 2] & 255;
 } else i3 = i2;
 return i3 | 0;
}

function dynCall_iiiiiiii(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 return FUNCTION_TABLE_iiiiiiii[i1 & 7](i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0) | 0;
}

function __ZNKSt3__25ctypeIcE10do_toupperEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (i2 << 24 >> 24 > -1) {
  i1 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + ((i2 & 255) << 2) | 0;
  i3 = HEAP32[i1 >> 2] & 255;
 } else i3 = i2;
 return i3 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw(i1, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw(i1, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc(i1, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc(i1, 1, 45);
 return;
}

function __ZN6vision5ImageC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 28 >> 2] = 0;
 return;
}

function _ftell(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = ___ftello(i1) | 0;
 i1 = getTempRet0() | 0;
 if ((i1 | 0) > 0 | (i1 | 0) == 0 & i2 >>> 0 > 2147483647) {
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 75;
  i3 = -1;
 } else i3 = i2;
 return i3 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm(i1, i2, __ZNSt3__211char_traitsIwE6lengthEPKw(i2) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm(i1, i2, __ZNSt3__211char_traitsIcE6lengthEPKc(i2) | 0) | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14123] = 0;
 HEAP32[14122] = 17012;
 __ZNSt3__220__time_get_c_storageIwEC2Ev(56496);
 HEAP32[14122] = 15052;
 HEAP32[14124] = 15100;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14119] = 0;
 HEAP32[14118] = 17012;
 __ZNSt3__220__time_get_c_storageIcEC2Ev(56480);
 HEAP32[14118] = 14968;
 HEAP32[14120] = 15016;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE10deallocateEPS2_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(HEAP32[i1 >> 2] | 0, i2, i3 * 24 | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(HEAP32[i1 >> 2] | 0, i2 << 4) | 0;
}

function dynCall_viiiiiii(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 FUNCTION_TABLE_viiiiiii[i1 & 7](i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0);
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 var i1 = 0;
 HEAP32[14131] = 0;
 HEAP32[14130] = 17012;
 i1 = __ZNSt3__26__clocEv() | 0;
 HEAP32[14132] = i1;
 HEAP32[14130] = 16248;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 var i1 = 0;
 HEAP32[14127] = 0;
 HEAP32[14126] = 17012;
 i1 = __ZNSt3__26__clocEv() | 0;
 HEAP32[14128] = i1;
 HEAP32[14126] = 16224;
 return;
}

function __ZNSt3__26localeD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i1 = i2 + 4 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i3 + -1;
 if (!i3) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 255](i2);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE(i3, i4, i5, 1114111, 0) | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE(i3, i4, i5, 1114111, 0) | 0;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58764) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58756) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58748) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58740) | 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(HEAP32[i1 >> 2] | 0);
 return;
}

function _pntz(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = _a_ctz_l_556((HEAP32[i1 >> 2] | 0) + -1 | 0) | 0;
 if (!i2) {
  i3 = _a_ctz_l_556(HEAP32[i1 + 4 >> 2] | 0) | 0;
  return ((i3 | 0) == 0 ? 0 : i3 + 32 | 0) | 0;
 } else return i2 | 0;
 return 0;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58700) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58692) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58684) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58616) | 0);
 return;
}

function __ZNKSt3__25ctypeIwE10do_toupperEw(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (i2 >>> 0 < 128) {
  i1 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + (i2 << 2) | 0;
  i3 = HEAP32[i1 >> 2] | 0;
 } else i3 = i2;
 return i3 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEw(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (i2 >>> 0 < 128) {
  i1 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + (i2 << 2) | 0;
  i3 = HEAP32[i1 >> 2] | 0;
 } else i3 = i2;
 return i3 | 0;
}

function __ZN6vision21OrientationAssignmentC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 i2 = i1 + 12 | 0;
 i1 = i2 + 40 | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = i2 + 4 | 0;
 } while ((i2 | 0) < (i1 | 0));
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58548) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58540) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58532) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58508) | 0);
 return;
}

function __ZNSt3__211char_traitsIwE7not_eofEj(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) i2 = ~(__ZNSt3__211char_traitsIwE3eofEv() | 0); else i2 = i1;
 return i2 | 0;
}

function __ZNSt3__211char_traitsIcE7not_eofEi(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (__ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) i2 = ~(__ZNSt3__211char_traitsIcE3eofEv() | 0); else i2 = i1;
 return i2 | 0;
}

function ___ofl_add(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = ___ofl_lock() | 0;
 HEAP32[i1 + 56 >> 2] = HEAP32[i2 >> 2];
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) HEAP32[i3 + 52 >> 2] = i1;
 HEAP32[i2 >> 2] = i1;
 ___ofl_unlock();
 return i1 | 0;
}

function __ZNKSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ((HEAP32[i2 + 4 >> 2] | 0) == 28614 ? i1 + 12 | 0 : 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
}

function _wmemset(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (i3 | 0) {
  i4 = i3;
  i3 = i1;
  while (1) {
   i4 = i4 + -1 | 0;
   HEAP32[i3 >> 2] = i2;
   if (!i4) break; else i3 = i3 + 4 | 0;
  }
 }
 return i1 | 0;
}

function _pthread_key_create(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) {
  i3 = 22;
  return i3 | 0;
 }
 i2 = _malloc(8) | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 38177486;
 HEAP32[i1 >> 2] = i2;
 i3 = 0;
 return i3 | 0;
}

function dynCall_iiiiiii(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 return FUNCTION_TABLE_iiiiiii[i1 & 63](i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0) | 0;
}

function _threadEndSignal(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 HEAP32[i1 + 8 >> 2] = 1;
 HEAP32[i1 + 12 >> 2] = 0;
 _pthread_cond_signal(i1 + 92 | 0) | 0;
 _pthread_mutex_unlock(i2) | 0;
 return 0;
}

function ___uselocale(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = (___pthread_self_523() | 0) + 188 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i1 | 0) HEAP32[i2 >> 2] = (i1 | 0) == (-1 | 0) ? 56832 : i1;
 return ((i3 | 0) == 56832 ? -1 : i3) | 0;
}

function _bitshift64Shl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if ((i3 | 0) < 32) {
  setTempRet0(i2 << i3 | (i1 & (1 << i3) - 1 << 32 - i3) >>> 32 - i3 | 0);
  return i1 << i3;
 }
 setTempRet0(i1 << i3 - 32 | 0);
 return 0;
}

function _kpmGetResult(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (!i1) {
  i4 = -1;
  return i4 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 + 52 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i1 + 56 >> 2];
 i4 = 0;
 return i4 | 0;
}

function _ar3DDeleteHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!i2) {
  i3 = -1;
  return i3 | 0;
 }
 _icpDeleteHandle(i2) | 0;
 _free(HEAP32[i1 >> 2] | 0);
 HEAP32[i1 >> 2] = 0;
 i3 = 0;
 return i3 | 0;
}

function dynCall_iiiiiid(i1, i2, i3, i4, i5, i6, d7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 return FUNCTION_TABLE_iiiiiid[i1 & 3](i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, +d7) | 0;
}

function dynCall_iidiiii(i1, i2, d3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 return FUNCTION_TABLE_iidiiii[i1 & 1](i2 | 0, +d3, i4 | 0, i5 | 0, i6 | 0, i7 | 0) | 0;
}

function _ar2SetSearchFeatureNum(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = (i2 | 0) < 40 ? i2 : 40;
 if (!i1) {
  i4 = -1;
  return i4 | 0;
 }
 HEAP32[i1 + 36 >> 2] = (i3 | 0) > 3 ? i3 : 3;
 i4 = 0;
 return i4 | 0;
}

function __ZNSt3__26localeC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = __ZNSt3__26locale8__globalEv() | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i3;
 i1 = i3 + 4 | 0;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
 return;
}

function _bitshift64Lshr(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if ((i3 | 0) < 32) {
  setTempRet0(i2 >>> i3 | 0);
  return i1 >>> i3 | (i2 & (1 << i3) - 1) << 32 - i3;
 }
 setTempRet0(0);
 return i2 >>> i3 - 32 | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE8__monthsEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56208] | 0) == 0 ? ___cxa_guard_acquire(56208) | 0 : 0) {
  __ZNSt3__2L12init_wmonthsEv();
  HEAP32[14669] = 55344;
 }
 return HEAP32[14669] | 0;
}

function dynCall_viiiiii(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 FUNCTION_TABLE_viiiiii[i1 & 7](i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0);
}

function __ZSt11__terminatePFvvE(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 FUNCTION_TABLE_v[i1 & 3]();
 _abort_message(49945, i2);
}

function __ZNKSt3__220__time_get_c_storageIcE8__monthsEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56128] | 0) == 0 ? ___cxa_guard_acquire(56128) | 0 : 0) {
  __ZNSt3__2L11init_monthsEv();
  HEAP32[14652] = 54592;
 }
 return HEAP32[14652] | 0;
}

function _i64Subtract(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 i5 = i2 - i4 >>> 0;
 i5 = i2 - i4 - (i3 >>> 0 > i1 >>> 0 | 0) >>> 0;
 return (setTempRet0(i5 | 0), i1 - i3 >>> 0 | 0) | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__weeksEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56224] | 0) == 0 ? ___cxa_guard_acquire(56224) | 0 : 0) {
  __ZNSt3__2L11init_wweeksEv();
  HEAP32[14670] = 55632;
 }
 return HEAP32[14670] | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__am_pmEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56192] | 0) == 0 ? ___cxa_guard_acquire(56192) | 0 : 0) {
  __ZNSt3__2L11init_wam_pmEv();
  HEAP32[14668] = 55056;
 }
 return HEAP32[14668] | 0;
}

function __ZNK6vision9Exception4whatEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) < 0) {
  i3 = HEAP32[i2 >> 2] | 0;
  return i3 | 0;
 } else {
  i3 = i2;
  return i3 | 0;
 }
 return 0;
}

function __ZN6vision9ExceptionD0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 13516;
 i2 = i1 + 4 | 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) >= 0) {
  __ZdlPv(i1);
  return;
 }
 __ZdlPv(HEAP32[i2 >> 2] | 0);
 __ZdlPv(i1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE8allocateEm(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(HEAP32[i1 >> 2] | 0, i2 * 24 | 0) | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__weeksEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56144] | 0) == 0 ? ___cxa_guard_acquire(56144) | 0 : 0) {
  __ZNSt3__2L10init_weeksEv();
  HEAP32[14653] = 54880;
 }
 return HEAP32[14653] | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__am_pmEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[56112] | 0) == 0 ? ___cxa_guard_acquire(56112) | 0 : 0) {
  __ZNSt3__2L10init_am_pmEv();
  HEAP32[14651] = 54304;
 }
 return HEAP32[14651] | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 return;
}

function _jpeg_destroy(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0) FUNCTION_TABLE_vi[HEAP32[i3 + 40 >> 2] & 255](i1);
 HEAP32[i2 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function _arPattAttach(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 if ((i1 | 0) != 0 ? (i3 = i1 + 7062384 | 0, (HEAP32[i3 >> 2] | 0) == 0) : 0) {
  HEAP32[i3 >> 2] = i2;
  i4 = 0;
 } else i4 = -1;
 return i4 | 0;
}

function _arGetLabelingThreshMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 + 7062388 >> 2];
 i3 = 0;
 return i3 | 0;
}

function _pop_arg_long_double(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, d4 = 0.0;
 i3 = (HEAP32[i2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
 d4 = +HEAPF64[i3 >> 3];
 HEAP32[i2 >> 2] = i3 + 8;
 HEAPF64[i1 >> 3] = d4;
 return;
}

function __ZNSt3__211char_traitsIcE6assignEPcmc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i2 | 0) _memset(i1 | 0, (__ZNSt3__211char_traitsIcE11to_int_typeEc(i3) | 0) & 255 | 0, i2 | 0) | 0;
 return i1 | 0;
}

function _pthread_setspecific(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = i1;
 if ((HEAP32[i3 + 4 >> 2] | 0) != 38177486) {
  i4 = 22;
  return i4 | 0;
 }
 HEAP32[i3 >> 2] = i2;
 i4 = 0;
 return i4 | 0;
}

function _arGetMatrixCodeType(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 + 7062424 >> 2];
 i3 = 0;
 return i3 | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i4 - i3 | 0;
 return (i2 >>> 0 < i5 >>> 0 ? i2 : i5) | 0;
}

function __ZNKSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE13__get_deleterERKSt9type_info(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ((HEAP32[i2 + 4 >> 2] | 0) == 33189 ? i1 + 12 | 0 : 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2IS4_EERKNS1_IT_Lm4096EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58804) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58812) | 0);
 return;
}

function __ZNSt3__25ctypeIcED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 16836;
 i2 = HEAP32[i1 + 8 >> 2] | 0;
 if (i2 | 0 ? HEAP8[i1 + 12 >> 0] | 0 : 0) __ZdaPv(i2);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58796) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58788) | 0);
 return;
}

function __ZNKSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE13__get_deleterERKSt9type_info(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ((HEAP32[i2 + 4 >> 2] | 0) == 33311 ? i1 + 12 | 0 : 0) | 0;
}

function _threadStartSignal(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 HEAP32[i1 + 4 >> 2] = 1;
 _pthread_cond_signal(i1 + 44 | 0) | 0;
 _pthread_mutex_unlock(i2) | 0;
 return 0;
}

function _arImageProcInit(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = _malloc(2064) | 0;
 if (!i3) return i3 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = i1;
 HEAP32[i3 + 8 >> 2] = i2;
 return i3 | 0;
}

function _arGetLabelingThresh(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 + 16 >> 2];
 i3 = 0;
 return i3 | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev(i1, 14400);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev(i1, 14352);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev(i1, 14304);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev(i1, 14256);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(i1 + 8 | 0);
 return;
}

function dynCall_iiiiii(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 return FUNCTION_TABLE_iiiiii[i1 & 31](i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0) | 0;
}

function _process_data_crank_post(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[i1 + 432 >> 2] | 0) + 4 >> 2] & 7](i1, 0, 0, 0, i2, i3, i4);
 return;
}

function __ZNKSt3__26locale9use_facetERNS0_2idE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 return __ZNKSt3__26locale5__imp9use_facetEl(i3, __ZNSt3__26locale2id5__getEv(i2) | 0) | 0;
}

function stackAlloc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + i1 | 0;
 STACKTOP = STACKTOP + 15 & -16;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(i1 | 0);
 return i2 | 0;
}

function _arGetLabelingMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 + 12 >> 2];
 i3 = 0;
 return i3 | 0;
}

function _grayscale_convert_23(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 _jcopy_sample_rows(HEAP32[i2 >> 2] | 0, i3, i4, 0, i5, HEAP32[i1 + 112 >> 2] | 0);
 return;
}

function _self_destruct(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 _free_pool(i1, 1);
 _free_pool(i1, 0);
 i2 = i1 + 4 | 0;
 _jpeg_free_small(i1, HEAP32[i2 >> 2] | 0, 84);
 HEAP32[i2 >> 2] = 0;
 _jpeg_mem_term(i1);
 return;
}

function __ZNSt3__26locale8__globalEv() {
 if ((HEAP8[56720] | 0) == 0 ? ___cxa_guard_acquire(56720) | 0 : 0) {
  __ZNSt3__26locale5__imp11make_globalEv() | 0;
  HEAP32[14708] = 58828;
 }
 return HEAP32[14708] | 0;
}

function __ZNSt3__26locale7classicEv() {
 if ((HEAP8[56552] | 0) == 0 ? ___cxa_guard_acquire(56552) | 0 : 0) {
  __ZNSt3__26locale5__imp12make_classicEv() | 0;
  HEAP32[14706] = 58820;
 }
 return HEAP32[14706] | 0;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58732) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58724) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58716) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58708) | 0);
 return;
}

function __ZNSt3__26__clocEv() {
 var i1 = 0;
 if ((HEAP8[56072] | 0) == 0 ? ___cxa_guard_acquire(56072) | 0 : 0) {
  i1 = ___newlocale(2147483647, 47371, 0) | 0;
  HEAP32[14623] = i1;
 }
 return HEAP32[14623] | 0;
}

function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, i2, 0) | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tEC2Em(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 16768;
 i2 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i1 + 8 >> 2] = i2;
 return;
}

function __ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 12 >> 2] | 0;
 if (!i2) return;
 __ZdlPv(i2);
 return;
}

function dynCall_iiiiid(i1, i2, i3, i4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 return FUNCTION_TABLE_iiiiid[i1 & 7](i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6) | 0;
}

function _arSetPatternDetectionMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!((i1 | 0) != 0 & i2 >>> 0 < 5)) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i1 + 24 >> 2] = i2;
 i3 = 0;
 return i3 | 0;
}

function ___lctrans_impl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i2) i3 = 0; else i3 = ___mo_lookup(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0, i1) | 0;
 return ((i3 | 0) == 0 ? i1 : i3) | 0;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function _arPattDetach(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 if ((i1 | 0) != 0 ? (i2 = i1 + 7062384 | 0, (HEAP32[i2 >> 2] | 0) != 0) : 0) {
  HEAP32[i2 >> 2] = 0;
  i3 = 0;
 } else i3 = -1;
 return i3 | 0;
}

function _arGetDebugMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!((i1 | 0) != 0 & (i2 | 0) != 0)) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
 i3 = 0;
 return i3 | 0;
}

function __ZNSt3__28numpunctIwED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 16928;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 16 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__28numpunctIcED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 16888;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__26localeC2ERKS0_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i3;
 i1 = i3 + 4 | 0;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_(i1, i2, i3) | 0;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58524) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58500) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58780) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58772) | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 return;
}

function dynCall_viiiii(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 FUNCTION_TABLE_viiiii[i1 & 31](i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0);
}

function _i64Add(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 i5 = i1 + i3 >>> 0;
 return (setTempRet0(i2 + i4 + (i5 >>> 0 < i1 >>> 0 | 0) >>> 0 | 0), i5 | 0) | 0;
}

function __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58476) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58468) | 0);
 return;
}

function ___strdup(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = (_strlen(i1) | 0) + 1 | 0;
 i3 = _malloc(i2) | 0;
 if (!i3) i4 = 0; else i4 = _memcpy(i3 | 0, i1 | 0, i2 | 0) | 0;
 return i4 | 0;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58516) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(58484) | 0);
 return;
}

function _arSetPattRatio(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0;
 if ((i1 | 0) != 0 ? !(d2 <= 0.0 | d2 >= 1.0) : 0) {
  HEAPF64[i1 + 7062416 >> 3] = d2;
  i3 = 0;
 } else i3 = -1;
 return i3 | 0;
}

function _arSetLabelingThresh(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i1 | 0) == 0 | i2 >>> 0 > 255) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i1 + 16 >> 2] = i2;
 i3 = 0;
 return i3 | 0;
}

function _arSetImageProcMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!((i1 | 0) != 0 & i2 >>> 0 < 2)) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i1 + 20 >> 2] = i2;
 i3 = 0;
 return i3 | 0;
}

function _arSetLabelingMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!((i1 | 0) != 0 & i2 >>> 0 < 2)) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i1 + 12 >> 2] = i2;
 i3 = 0;
 return i3 | 0;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__211char_traitsIwE4moveEPwPKwm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (!i3) i4 = i1; else {
  _wmemmove(i1, i2, i3) | 0;
  i4 = i1;
 }
 return i4 | 0;
}

function __ZNSt3__211char_traitsIwE6assignEPwmw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (!i2) i4 = i1; else {
  _wmemset(i1, i3, i2) | 0;
  i4 = i1;
 }
 return i4 | 0;
}

function __ZNSt3__211char_traitsIwE4copyEPwPKwm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (!i3) i4 = i1; else {
  _wmemcpy(i1, i2, i3) | 0;
  i4 = i1;
 }
 return i4 | 0;
}

function __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return __ZNKSt3__29__num_getIcE12__do_widen_pERNS_8ios_baseEPc(i1, i2, i3) | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function _start_pass_upsample(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 452 >> 2] | 0;
 HEAP32[i2 + 92 >> 2] = HEAP32[i1 + 312 >> 2];
 HEAP32[i2 + 96 >> 2] = HEAP32[i1 + 116 >> 2];
 return;
}

function ___syscall_ret(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 if (i1 >>> 0 > 4294963200) {
  i2 = ___errno_location() | 0;
  HEAP32[i2 >> 2] = 0 - i1;
  i3 = -1;
 } else i3 = i1;
 return i3 | 0;
}

function __ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv(i1) {
 i1 = i1 | 0;
 __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv(HEAP32[HEAP32[i1 >> 2] >> 2] | 0);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i3;
 return 3;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i3;
 return 3;
}

function __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 268435455;
}

function __ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__214__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i3;
 return 3;
}

function ___DOUBLE_BITS_737(d1) {
 d1 = +d1;
 var i2 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 setTempRet0(HEAP32[tempDoublePtr + 4 >> 2] | 0);
 return i2 | 0;
}

function ___DOUBLE_BITS_102(d1) {
 d1 = +d1;
 var i2 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 setTempRet0(HEAP32[tempDoublePtr + 4 >> 2] | 0);
 return i2 | 0;
}

function __ZN6vision9ExceptionD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 13516;
 i2 = i1 + 4 | 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) >= 0) return;
 __ZdlPv(HEAP32[i2 >> 2] | 0);
 return;
}

function __ZN10emscripten8internal7InvokerIiJiiiEE6invokeEPFiiiiEiii(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return FUNCTION_TABLE_iiii[i1 & 63](i2, i3, i4) | 0;
}

function _icpDeleteHandle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!i2) {
  i3 = -1;
  return i3 | 0;
 }
 _free(i2);
 HEAP32[i1 >> 2] = 0;
 i3 = 0;
 return i3 | 0;
}

function _arGetPatternDetectionMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 + 24 >> 2];
 i3 = 0;
 return i3 | 0;
}

function b13(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 nullFunc_iiiiiiiii(13);
 return 0;
}

function _threadGetStatus(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 16 | 0;
 _pthread_mutex_lock(i2) | 0;
 i3 = HEAP32[i1 + 8 >> 2] | 0;
 _pthread_mutex_unlock(i2) | 0;
 return i3 | 0;
}

function _arGetPattRatio(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) {
  i3 = -1;
  return i3 | 0;
 }
 HEAPF64[i2 >> 3] = +HEAPF64[i1 + 7062416 >> 3];
 i3 = 0;
 return i3 | 0;
}

function _jpeg_alloc_quant_table(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 0, 132) | 0;
 HEAP32[i2 + 128 >> 2] = 0;
 return i2 | 0;
}

function _jpeg_alloc_huff_table(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[i1 + 4 >> 2] >> 2] & 63](i1, 0, 280) | 0;
 HEAP32[i2 + 276 >> 2] = 0;
 return i2 | 0;
}

function dynCall_iiiii(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return FUNCTION_TABLE_iiiii[i1 & 15](i2 | 0, i3 | 0, i4 | 0, i5 | 0) | 0;
}

function __ZNSt3__211char_traitsIcE7compareEPKcS3_m(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 if (!i3) i4 = 0; else i4 = _memcmp(i1, i2, i3) | 0;
 return i4 | 0;
}

function _arGetImageProcMode(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 + 20 >> 2];
 i3 = 0;
 return i3 | 0;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function _strtoll(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i4 = _strtox_547(i1, i2, i3, 0, -2147483648) | 0;
 setTempRet0(getTempRet0() | 0);
 return i4 | 0;
}

function __ZNKSt3__28numpunctIwE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 16 | 0);
 return;
}

function __ZNKSt3__28numpunctIcE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 12 | 0);
 return;
}

function _start_pass_merged_upsample(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 452 >> 2] | 0;
 HEAP32[i2 + 36 >> 2] = 0;
 HEAP32[i2 + 44 >> 2] = HEAP32[i1 + 116 >> 2];
 return;
}

function __ZNSt3__210__time_putD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE17pointer_in_bufferEPc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 + 4096 | 0) >>> 0 >= i2 >>> 0 & i1 >>> 0 <= i2 >>> 0 | 0;
}
function globalCtors() {
 __GLOBAL__I_000101();
 __GLOBAL__sub_I_ARToolKitJS_cpp();
 __GLOBAL__sub_I_bind_cpp();
 ___emscripten_environ_constructor();
 __GLOBAL__sub_I_iostream_cpp();
}

function _pthread_once(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 324508639) return 0;
 FUNCTION_TABLE_v[i2 & 3]();
 HEAP32[i1 >> 2] = 324508639;
 return 0;
}

function _pthread_getspecific(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP32[i1 + 4 >> 2] | 0) != 38177486) {
  i2 = 0;
  return i2 | 0;
 }
 i2 = HEAP32[i1 >> 2] | 0;
 return i2 | 0;
}

function _arSetMatrixCodeType(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) {
  i3 = -1;
  return i3 | 0;
 }
 HEAP32[i1 + 7062424 >> 2] = i2;
 i3 = 0;
 return i3 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _strtoull(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i4 = _strtox_547(i1, i2, i3, -1, -1) | 0;
 setTempRet0(getTempRet0() | 0);
 return i4 | 0;
}

function _icpSetInlierProbability(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0;
 if (!i1) {
  i3 = -1;
  return i3 | 0;
 }
 HEAPF64[i1 + 128 >> 3] = d2;
 i3 = 0;
 return i3 | 0;
}

function dynCall_viiii(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 FUNCTION_TABLE_viiii[i1 & 31](i2 | 0, i3 | 0, i4 | 0, i5 | 0);
}

function _strtoull_l(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = _strtoull(i1, i2, i3) | 0;
 setTempRet0(getTempRet0() | 0);
 return i4 | 0;
}

function b12(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 nullFunc_iiiiiiii(12);
 return 0;
}

function _new_color_map_1_quant(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i2 + 20 >> 2] = 46;
 FUNCTION_TABLE_vi[HEAP32[i2 >> 2] & 255](i1);
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 + 8 + 3 >> 0] | 0) < 0) __ZdlPv(HEAP32[i1 >> 2] | 0);
 return;
}

function _strtoll_l(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = _strtoll(i1, i2, i3) | 0;
 setTempRet0(getTempRet0() | 0);
 return i4 | 0;
}

function __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 268435455;
}

function _arGetTransMatMultiSquareRobust(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return +(+_arGetTransMatMultiSquare2(i1, i2, i3, i4, 1));
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EEC2ERNS0_5arenaILm4096EEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP8[i1 + 4 >> 0] = HEAP8[i2 >> 0] | 0;
 return;
}

function _strchr(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = ___strchrnul(i1, i2) | 0;
 return ((HEAP8[i3 >> 0] | 0) == (i2 & 255) << 24 >> 24 ? i3 : 0) | 0;
}

function _jpeg_mem_available(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return (HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 44 >> 2] | 0) - i4 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14117] = 0;
 HEAP32[14116] = 16580;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14115] = 0;
 HEAP32[14114] = 16552;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14113] = 0;
 HEAP32[14112] = 16524;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14111] = 0;
 HEAP32[14110] = 16496;
 return;
}

function __ZNSt3__211char_traitsIcE4moveEPcPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3 | 0) _memmove(i1 | 0, i2 | 0, i3 | 0) | 0;
 return i1 | 0;
}

function __ZN10emscripten8internal7InvokerIiJiiEE6invokeEPFiiiEii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return FUNCTION_TABLE_iii[i1 & 63](i2, i3) | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__214__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__211char_traitsIcE4copyEPcPKcm(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3 | 0) _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14101] = 0;
 HEAP32[14100] = 14916;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14099] = 0;
 HEAP32[14098] = 14864;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[14097] = 0;
 HEAP32[14096] = 14800;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[14095] = 0;
 HEAP32[14094] = 14736;
 return;
}

function __ZN10emscripten8internal7InvokerIvJiiEE6invokeEPFviiEii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 FUNCTION_TABLE_vii[i1 & 63](i2, i3);
 return;
}

function _arGetTransMatMultiSquare(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return +(+_arGetTransMatMultiSquare2(i1, i2, i3, i4, 0));
}

function __ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__214__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28ios_base33__set_badbit_and_consider_rethrowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
 return;
}

function b23(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 nullFunc_viiiiiii(23);
}

function _ar2SetTemplateSize2(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) i3 = -1; else {
  HEAP32[i1 + 32 >> 2] = i2;
  i3 = 0;
 }
 return i3 | 0;
}

function _ar2SetTemplateSize1(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) i3 = -1; else {
  HEAP32[i1 + 28 >> 2] = i2;
  i3 = 0;
 }
 return i3 | 0;
}

function __ZN10emscripten8internal7InvokerIvJifEE6invokeEPFvifEif(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 FUNCTION_TABLE_vid[i1 & 3](i2, d3);
 return;
}

function __ZN10emscripten8internal7InvokerIvJidEE6invokeEPFvidEid(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 FUNCTION_TABLE_vid[i1 & 3](i2, d3);
 return;
}

function _ar2SetTrackingThresh(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0;
 if (!i1) i3 = -1; else {
  HEAPF32[i1 + 44 >> 2] = d2;
  i3 = 0;
 }
 return i3 | 0;
}

function __ZNSt3__26locale5facet16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i2 >>> 0 <= i1 >>> 0 & i1 >>> 0 < i3 >>> 0 | 0;
}

function __ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i2 >>> 0 <= i1 >>> 0 & i1 >>> 0 < i3 >>> 0 | 0;
}

function __ZNSt11logic_errorC2EPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 17400;
 __ZNSt3__218__libcpp_refstringC2EPKc(i1 + 4 | 0, i2);
 return;
}

function dynCall_iiii(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return FUNCTION_TABLE_iiii[i1 & 63](i2 | 0, i3 | 0, i4 | 0) | 0;
}

function _ar2SetSearchSize(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) i3 = -1; else {
  HEAP32[i1 + 24 >> 2] = i2;
  i3 = 0;
 }
 return i3 | 0;
}

function ___cxa_is_pointer_type(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (!i1) i2 = 0; else i2 = (___dynamic_cast(i1, 13232, 13320, 0) | 0) != 0 & 1;
 return i2 | 0;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__26locale2id6__initEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[14624] | 0;
 HEAP32[14624] = i2 + 1;
 HEAP32[i1 + 4 >> 2] = i2 + 1;
 return;
}

function ___cxa_guard_acquire(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[i1 >> 0] | 0) == 1) i2 = 0; else {
  HEAP8[i1 >> 0] = 1;
  i2 = 1;
 }
 return i2 | 0;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _ar2SetSimThresh(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0;
 if (!i1) i3 = -1; else {
  HEAPF32[i1 + 40 >> 2] = d2;
  i3 = 0;
 }
 return i3 | 0;
}

function _fputs(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = _strlen(i1) | 0;
 return ((_fwrite(i1, 1, i3, i2) | 0) != (i3 | 0)) << 31 >> 31 | 0;
}

function _compE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0;
 d3 = +HEAPF64[i1 >> 3] - +HEAPF64[i2 >> 3];
 return (d3 < 0.0 ? -1 : d3 > 0.0 & 1) | 0;
}

function ___ctype_get_mb_cur_max() {
 var i1 = 0;
 i1 = (___pthread_self_826() | 0) + 188 | 0;
 return ((HEAP32[HEAP32[i1 >> 2] >> 2] | 0) == 0 ? 1 : 4) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function b11(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 nullFunc_iiiiiii(11);
 return 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 14160;
 __ZNSt3__26localeD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 14096;
 __ZNSt3__26localeD2Ev(i1 + 4 | 0);
 return;
}

function b10(i1, i2, i3, i4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 nullFunc_iiiiiid(10);
 return 0;
}

function _wcslen(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1;
 while (1) if (!(HEAP32[i2 >> 2] | 0)) break; else i2 = i2 + 4 | 0;
 return i2 - i1 >> 2 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__26locale5__imp12make_classicEv() {
 __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_();
 HEAP32[14705] = 56560;
 return 58820;
}

function b4(i1, d2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 nullFunc_iidiiii(4);
 return 0;
}

function __ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _kpmHandleGetYSize(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (!i1) {
  i2 = 0;
  return i2 | 0;
 }
 i2 = HEAP32[i1 + 16 >> 2] | 0;
 return i2 | 0;
}

function _kpmHandleGetXSize(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (!i1) {
  i2 = 0;
  return i2 | 0;
 }
 i2 = HEAP32[i1 + 12 >> 2] | 0;
 return i2 | 0;
}

function __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 178956970;
}

function dynCall_viii(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 FUNCTION_TABLE_viii[i1 & 3](i2 | 0, i3 | 0, i4 | 0);
}

function _reset_error_mgr(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i2 + 108 >> 2] = 0;
 HEAP32[i2 + 20 >> 2] = 0;
 return;
}

function _arImageProcFinal(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (!i1) return;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0) _free(i2);
 _free(i1);
 return;
}

function _strerror(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (___pthread_self_197() | 0) + 188 | 0;
 return ___strerror_l(i1, HEAP32[i2 >> 2] | 0) | 0;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNKSt3__26locale5__imp9use_facetEl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + (i2 << 2) >> 2] | 0;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function b22(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 nullFunc_viiiiii(22);
}

function __ZNSt3__28ios_base5clearEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 16 >> 2] = (HEAP32[i1 + 24 >> 2] | 0) == 0 | i2;
 return;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZN10emscripten8internal7InvokerIiJiEE6invokeEPFiiEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return FUNCTION_TABLE_ii[i1 & 127](i2) | 0;
}

function __ZNKSt3__25ctypeIwE9do_narrowEwc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return (i2 >>> 0 < 128 ? i2 & 255 : i3) | 0;
}

function dynCall_viid(i1, i2, i3, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 FUNCTION_TABLE_viid[i1 & 3](i2 | 0, i3 | 0, +d4);
}

function __ZNSt3__211__stdoutbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__211__stdoutbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__25ctypeIcE9do_narrowEcc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return (i2 << 24 >> 24 > -1 ? i2 : i3) | 0;
}

function __ZN10emscripten8internal7InvokerIvJiEE6invokeEPFviEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_vi[i1 & 255](i2);
 return;
}

function __ZN10emscripten8internal7InvokerIdJiEE6invokeEPFdiEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+FUNCTION_TABLE_di[i1 & 3](i2));
}

function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return (i1 | 0) == (i2 | 0) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i1 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i1 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_() {
 __ZNSt3__27codecvtIwc11__mbstate_tEC2Em(56288, 1);
 return;
}

function __ZNSt3__210__stdinbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210__stdinbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10__cxxabiv123__fundamental_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev(i1) {
 i1 = i1 | 0;
 HEAP8[HEAP32[i1 >> 2] >> 0] = HEAP8[i1 + 4 >> 0] | 0;
 return;
}

function _error_exit(i1) {
 i1 = i1 | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 _jpeg_destroy(i1);
 _exit(1);
}

function _swapc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = _llvm_bswap_i32(i1 | 0) | 0;
 return ((i2 | 0) == 0 ? i1 : i3) | 0;
}

function _out_728(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (!(HEAP32[i1 >> 2] & 32)) ___fwritex(i2, i3, i1) | 0;
 return;
}

function __ZN6vision20VisualDatabaseFacade9matchedIdEv(i1) {
 i1 = i1 | 0;
 return HEAP32[(HEAP32[HEAP32[i1 >> 2] >> 2] | 0) + 24 >> 2] | 0;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[HEAP32[i1 >> 2] >> 2] = HEAP32[i1 + 4 >> 2];
 return;
}

function ___udivdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return ___udivmoddi4(i1, i2, i3, i4, 0) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _jround_up(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + -1 + i2 | 0;
 return i3 - ((i3 | 0) % (i2 | 0) | 0) | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__27codecvtIwc11__mbstate_tED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _wctomb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if (!i1) i3 = 0; else i3 = _wcrtomb(i1, i2, 0) | 0;
 return i3 | 0;
}

function __ZNSt3__26locale5__imp11make_globalEv() {
 __ZNSt3__26localeC2ERKS0_(58828, __ZNSt3__26locale7classicEv() | 0);
 return 58828;
}

function __ZNSt11logic_errorD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 17400;
 __ZNSt3__218__libcpp_refstringD2Ev(i1 + 4 | 0);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function b9(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 nullFunc_iiiiii(9);
 return 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_() {
 HEAP32[14077] = 0;
 HEAP32[14076] = 17148;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_() {
 HEAP32[14079] = 0;
 HEAP32[14078] = 17196;
 return;
}

function __ZNKSt3__29__num_getIcE12__do_widen_pERNS_8ios_baseEPc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return 10736;
}

function _llvm_bswap_i32(i1) {
 i1 = i1 | 0;
 return (i1 & 255) << 24 | (i1 >> 8 & 255) << 16 | (i1 >> 16 & 255) << 8 | i1 >>> 24 | 0;
}

function _fseek(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return ___fseeko(i1, i2, ((i2 | 0) < 0) << 31 >> 31, i3) | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_() {
 HEAP32[14071] = 0;
 HEAP32[14070] = 17100;
 return;
}

function __ZN6vision6LoggerC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return;
}

function dynCall_iii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return FUNCTION_TABLE_iii[i1 & 63](i2 | 0, i3 | 0) | 0;
}

function _mbrlen(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return _mbrtowc(0, i1, i2, (i3 | 0) == 0 ? 56900 : i3) | 0;
}

function _jcopy_block_row(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _memcpy(i2 | 0, i1 | 0, i3 << 7 | 0) | 0;
 return;
}

function _fullsize_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i4 >> 2] = i3;
 return;
}

function __ZNSt3__25ctypeIcE21__classic_upper_tableEv() {
 var i1 = 0;
 i1 = ___ctype_toupper_loc() | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__25ctypeIcE21__classic_lower_tableEv() {
 var i1 = 0;
 i1 = ___ctype_tolower_loc() | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__211char_traitsIcE6assignERcRKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
 return;
}

function b8(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 nullFunc_iiiiid(8);
 return 0;
}

function __ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__211char_traitsIwE6assignERwRKw(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNKSt3__28ios_base6getlocEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26localeC2ERKS0_(i1, i2 + 28 | 0);
 return;
}

function dynCall_dii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +FUNCTION_TABLE_dii[i1 & 1](i2 | 0, i3 | 0);
}

function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_() {
 __ZNSt3__25ctypeIcEC2EPKtbm(56256, 0, 0, 1);
 return;
}

function __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv(i1) {
 i1 = i1 | 0;
 return 1073741823;
}

function __ZN6vision18BinomialPyramid32fD0Ev(i1) {
 i1 = i1 | 0;
 __ZN6vision18BinomialPyramid32fD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _noop_upsample(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i4 >> 2] = 0;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_() {
 HEAP32[14109] = 0;
 HEAP32[14108] = 16440;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_() {
 HEAP32[14107] = 0;
 HEAP32[14106] = 16384;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_() {
 HEAP32[14105] = 0;
 HEAP32[14104] = 16328;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_() {
 HEAP32[14103] = 0;
 HEAP32[14102] = 16272;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function _vfprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return ___vfprintf_internal(i1, i2, i3, 1, 56) | 0;
}

function __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEE18__enable_weak_thisEz(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function b21(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 nullFunc_viiiii(21);
}

function _mbsinit(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (!i1) i2 = 1; else i2 = (HEAP32[i1 >> 2] | 0) == 0 & 1;
 return i2 | 0;
}

function _ar2UtilReplaceExt(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return _arUtilReplaceExt(i1, i2, i3) | 0;
}

function __ZNSt3__27codecvtIDsc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27codecvtIDic11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__217__widen_from_utf8ILm32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNK6vision20VisualDatabaseFacade7inliersEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[HEAP32[i1 >> 2] >> 2] | 0) + 12 | 0;
}

function __ZNSt3__27codecvtIcc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__216__narrow_to_utf8ILm32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210__stdinbufIwE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb(i1, 0) | 0;
}

function __ZNSt3__210__stdinbufIcE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb(i1, 0) | 0;
}

function __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE(i1) {
 i1 = i1 | 0;
 return i1 + 12 | 0;
}

function __ZNSt3__211char_traitsIwE11eq_int_typeEjj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 | 0) == (i2 | 0) | 0;
}

function __ZNSt3__211char_traitsIcE11eq_int_typeEii(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 | 0) == (i2 | 0) | 0;
}

function dynCall_vii(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 FUNCTION_TABLE_vii[i1 & 63](i2 | 0, i3 | 0);
}

function _vsprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return _vsnprintf(i1, 2147483647, i2, i3) | 0;
}

function ___loc_is_allocated(i1) {
 i1 = i1 | 0;
 return (i1 | 0) != 13768 & ((i1 | 0) != 0 & (i1 | 0) != 56856) & 1 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_() {
 HEAP32[14137] = 0;
 HEAP32[14136] = 16640;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_() {
 HEAP32[14135] = 0;
 HEAP32[14134] = 16608;
 return;
}

function __ZNKSt11logic_error4whatEv(i1) {
 i1 = i1 | 0;
 return __ZNKSt3__218__libcpp_refstring5c_strEv(i1 + 4 | 0) | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_() {
 HEAP32[14063] = 0;
 HEAP32[14062] = 14704;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_() {
 HEAP32[14061] = 0;
 HEAP32[14060] = 14672;
 return;
}

function __ZNSt3__210__stdinbufIwE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb(i1, 1) | 0;
}

function __ZNSt3__210__stdinbufIcE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb(i1, 1) | 0;
}

function __ZN10emscripten8internal7InvokerIiJEE6invokeEPFivE(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 1]() | 0;
}

function __ZNSt3__25ctypeIcE13classic_tableEv() {
 var i1 = 0;
 i1 = ___ctype_b_loc() | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__210moneypunctIwLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _strncpy(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 ___stpncpy(i1, i2, i3) | 0;
 return i1 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_() {
 __ZNSt3__26locale5__impC2Em(56560, 1);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_() {
 HEAP32[14069] = 0;
 HEAP32[14068] = 17032;
 return;
}

function _do_read_589(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return ___string_read(i1, i2, i3) | 0;
}

function __ZNSt3__212_GLOBAL__N_17countofIwEEmPKT_S4_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 - i1 >> 2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 4096 >> 2] = i1;
 return;
}

function b7(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 nullFunc_iiiii(7);
 return 0;
}

function _strcat(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _strcpy(i1 + (_strlen(i1) | 0) | 0, i2) | 0;
 return i1 | 0;
}

function _close_backing_store(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _fclose(HEAP32[i2 + 12 >> 2] | 0) | 0;
 return;
}

function __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_1028(i1) {
 i1 = i1 | 0;
 return i1 + -12 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_() {
 __ZNSt3__28numpunctIwEC2Em(56344, 1);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_() {
 __ZNSt3__28numpunctIcEC2Em(56320, 1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 4096 >> 2] = 0;
 return;
}

function dynCall_vid(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 FUNCTION_TABLE_vid[i1 & 3](i2 | 0, +d3);
}

function _setThrew(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!__THREW__) {
  __THREW__ = i1;
  threwValue = i2;
 }
}

function _isxdigit(i1) {
 i1 = i1 | 0;
 return (((i1 | 32) + -97 | 0) >>> 0 < 6 | (_isdigit(i1) | 0) != 0) & 1 | 0;
}

function __ZSt15get_new_handlerv() {
 var i1 = 0;
 i1 = HEAP32[14730] | 0;
 HEAP32[14730] = i1 + 0;
 return i1 | 0;
}

function __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1);
 return;
}

function __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1);
 return;
}

function __GLOBAL__sub_I_bind_cpp() {
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(0);
 return;
}

function _strrchr(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ___memrchr(i1, i2, (_strlen(i1) | 0) + 1 | 0) | 0;
}

function _arMatrixFree(i1) {
 i1 = i1 | 0;
 if (!i1) return 0;
 _free(HEAP32[i1 >> 2] | 0);
 _free(i1);
 return 0;
}

function __ZNSt3__26locale5facetD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__26locale5__impD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5__impD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function _new_color_map_2_quant(i1) {
 i1 = i1 | 0;
 HEAP32[(HEAP32[i1 + 460 >> 2] | 0) + 28 >> 2] = 1;
 return;
}

function __ZNSt3__28messagesIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28messagesIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__212_GLOBAL__N_17countofIcEEmPKT_S4_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 - i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8align_upEm(i1) {
 i1 = i1 | 0;
 return i1 + 15 & -16 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm(i1) {
 i1 = i1 | 0;
 return _malloc(i1) | 0;
}

function __ZSt13get_terminatev() {
 var i1 = 0;
 i1 = HEAP32[4327] | 0;
 HEAP32[4327] = i1 + 0;
 return i1 | 0;
}

function __ZNSt3__28numpunctIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28numpunctIwED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28numpunctIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28numpunctIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27collateIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__27collateIwED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27collateIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__27collateIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__25ctypeIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _jdiv_round_up(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 + -1 + i2 | 0) / (i2 | 0) | 0 | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function b20(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 nullFunc_viiii(20);
}

function _llvm_cttz_i32(i1) {
 i1 = i1 | 0;
 return (i1 ? 31 - (Math_clz32(i1 ^ i1 - 1) | 0) | 0 : 32) | 0;
}

function _catgets(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return i4 | 0;
}

function dynCall_ii(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return FUNCTION_TABLE_ii[i1 & 127](i2 | 0) | 0;
}

function ___clang_call_terminate(i1) {
 i1 = i1 | 0;
 ___cxa_begin_catch(i1 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt12length_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt11logic_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__28numpunctIwE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 12 >> 2] | 0;
}

function __ZNKSt3__25ctypeIwE8do_widenEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 << 24 >> 24 | 0;
}

function _strtold_l(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +(+_strtold(i1, i2));
}

function __ZNSt3__28ios_baseD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__25ctypeIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__25ctypeIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIwLb1EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt11logic_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt11logic_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__28numpunctIwE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 8 >> 2] | 0;
}

function __ZNKSt3__28numpunctIcE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 9 >> 0] | 0;
}

function __ZNKSt3__28numpunctIcE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 8 >> 0] | 0;
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv(i1) {
 i1 = i1 | 0;
 _abort();
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 _abort();
}

function _strtof_l(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +(+_strtof(i1, i2));
}

function _strtod_l(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +(+_strtod(i1, i2));
}

function __ZNSt3__220__time_get_c_storageIwEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 17280;
 return;
}

function __ZNSt3__220__time_get_c_storageIcEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 17244;
 return;
}

function __ZNSt3__210shared_ptrIhE18__enable_weak_thisEz(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 _abort();
}

function _jpeg_free_small(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _free(i2);
 return;
}

function _jpeg_free_large(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 _free(i2);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function dynCall_di(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +FUNCTION_TABLE_di[i1 & 3](i2 | 0);
}

function _init_source(i1) {
 i1 = i1 | 0;
 HEAP32[(HEAP32[i1 + 24 >> 2] | 0) + 36 >> 2] = 1;
 return;
}

function establishStackSpace(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 STACKTOP = i1;
 STACK_MAX = i2;
}

function _jzero_far(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _memset(i1 | 0, 0, i2 | 0) | 0;
 return;
}

function _arMultiFreeConfig(i1) {
 i1 = i1 | 0;
 _free(HEAP32[i1 >> 2] | 0);
 _free(i1);
 return 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function _finish_input_pass(i1) {
 i1 = i1 | 0;
 HEAP32[HEAP32[i1 + 436 >> 2] >> 2] = 71;
 return;
}

function __ZNSt3__28messagesIwED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__28messagesIcED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function b6(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 nullFunc_iiii(6);
 return 0;
}

function _roundf(d1) {
 d1 = +d1;
 return d1 >= 0.0 ? +Math_floor(d1 + .5) : +Math_ceil(d1 - .5);
}

function _isspace(i1) {
 i1 = i1 | 0;
 return ((i1 | 0) == 32 | (i1 + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZNSt3__27collateIwED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__27collateIcED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__218__libcpp_refstring5c_strEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function dynCall_vi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_vi[i1 & 255](i2 | 0);
}

function _strcpy(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 ___stpcpy(i1, i2) | 0;
 return i1 | 0;
}

function _freelocale(i1) {
 i1 = i1 | 0;
 if (___loc_is_allocated(i1) | 0) _free(i1);
 return;
}

function ___lctrans(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return ___lctrans_impl(i1, i2) | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__25ctypeIcE8do_widenEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 | 0;
}

function __ZNSt3__211char_traitsIcE12to_char_typeEi(i1) {
 i1 = i1 | 0;
 return i1 & 255 | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZSt18uncaught_exceptionv() {
 return (__ZSt19uncaught_exceptionsv() | 0) > 0 | 0;
}

function __ZNSt3__211char_traitsIcE11to_int_typeEc(i1) {
 i1 = i1 | 0;
 return i1 & 255 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function _arVecFree(i1) {
 i1 = i1 | 0;
 _free(HEAP32[i1 >> 2] | 0);
 _free(i1);
 return 0;
}

function ___getTypeName(i1) {
 i1 = i1 | 0;
 return ___strdup(HEAP32[i1 + 4 >> 2] | 0) | 0;
}

function __ZSt19uncaught_exceptionsv() {
 return (___cxa_uncaught_exception() | 0) & 1 | 0;
}

function __ZNSt3__211char_traitsIwE6lengthEPKw(i1) {
 i1 = i1 | 0;
 return _wcslen(i1) | 0;
}

function __ZNSt3__211char_traitsIcE6lengthEPKc(i1) {
 i1 = i1 | 0;
 return _strlen(i1) | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function _my_error_exit(i1) {
 i1 = i1 | 0;
 _longjmp((HEAP32[i1 >> 2] | 0) + 132 | 0, 1);
}

function __ZNKSt3__28messagesIwE8do_closeEl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNKSt3__28messagesIcE8do_closeEl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNKSt3__218__libcpp_refstring15__uses_refcountEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function b19(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 nullFunc_viii(19);
}

function __ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function _strtold(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+_strtox(i1, i2, 2));
}

function _jpeg_get_small(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _malloc(i2) | 0;
}

function _jpeg_get_large(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _malloc(i2) | 0;
}

function __ZNSt3__211char_traitsIwE12to_char_typeEj(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function _strtof(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+_strtox(i1, i2, 0));
}

function _strtod(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+_strtox(i1, i2, 1));
}

function __ZNSt3__211char_traitsIwE11to_int_typeEw(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function b18(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 nullFunc_viid(18);
}

function _isxdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _isxdigit(i1) | 0;
}

function ___emscripten_environ_constructor() {
 ___buildEnvironment(57432);
 return;
}

function _isdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _isdigit(i1) | 0;
}

function _jpeg_destroy_decompress(i1) {
 i1 = i1 | 0;
 _jpeg_destroy(i1);
 return;
}

function _copysignl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_copysign(d1, d2));
}

function _scalbnl(d1, i2) {
 d1 = +d1;
 i2 = i2 | 0;
 return +(+_scalbn(d1, i2));
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b1(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 nullFunc_dii(1);
 return 0.0;
}

function _ar2UtilRemoveExt(i1) {
 i1 = i1 | 0;
 return _arUtilRemoveExt(i1) | 0;
}

function _ldexp(d1, i2) {
 d1 = +d1;
 i2 = i2 | 0;
 return +(+_scalbn(d1, i2));
}

function dynCall_i(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 1]() | 0;
}

function b5(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 nullFunc_iii(5);
 return 0;
}

function ___cxx_global_var_init() {
 __ZNSt3__28ios_base4InitC2Ev(0);
 return;
}

function _threadGetArg(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 140 >> 2] | 0;
}

function _pthread_mutex_init(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return 0;
}

function __ZNSt3__221__throw_runtime_errorEPKc(i1) {
 i1 = i1 | 0;
 _abort();
}

function _isupper(i1) {
 i1 = i1 | 0;
 return (i1 + -65 | 0) >>> 0 < 26 | 0;
}

function _isdigit(i1) {
 i1 = i1 | 0;
 return (i1 + -48 | 0) >>> 0 < 10 | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _fmodl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_fmod(d1, d2));
}

function _arPattCreateHandle() {
 return _arPattCreateHandle2(16, 50) | 0;
}

function _catopen(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return -1 | 0;
}

function _threadGetID(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function _setLogLevel(i1) {
 i1 = i1 | 0;
 HEAP32[3368] = i1;
 return;
}

function b17(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 nullFunc_vii(17);
}

function __ZNSt3__214__shared_countD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function dynCall_v(i1) {
 i1 = i1 | 0;
 FUNCTION_TABLE_v[i1 & 3]();
}

function __GLOBAL__I_000101() {
 ___cxx_global_var_init();
 return;
}

function b16(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 nullFunc_vid(16);
}

function __ZNSt3__26locale5facetD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__212__do_nothingEPv(i1) {
 i1 = i1 | 0;
 return;
}

function _pthread_cond_broadcast(i1) {
 i1 = i1 | 0;
 return 0;
}

function _lroundf(d1) {
 d1 = +d1;
 return ~~+_roundf(+d1) | 0;
}

function _pthread_mutex_destroy(i1) {
 i1 = i1 | 0;
 return 0;
}

function b0(i1) {
 i1 = i1 | 0;
 nullFunc_di(0);
 return 0.0;
}

function _pthread_mutex_unlock(i1) {
 i1 = i1 | 0;
 return 0;
}

function ___pthread_self_826() {
 return _pthread_self() | 0;
}

function ___pthread_self_604() {
 return _pthread_self() | 0;
}

function ___pthread_self_523() {
 return _pthread_self() | 0;
}

function ___pthread_self_306() {
 return _pthread_self() | 0;
}

function ___pthread_self_303() {
 return _pthread_self() | 0;
}

function ___pthread_self_300() {
 return _pthread_self() | 0;
}

function ___pthread_self_293() {
 return _pthread_self() | 0;
}

function ___pthread_self_197() {
 return _pthread_self() | 0;
}

function b3(i1) {
 i1 = i1 | 0;
 nullFunc_ii(3);
 return 0;
}

function _pthread_mutex_lock(i1) {
 i1 = i1 | 0;
 return 0;
}

function _dummy_consume_data(i1) {
 i1 = i1 | 0;
 return 0;
}

function __Znam(i1) {
 i1 = i1 | 0;
 return __Znwm(i1) | 0;
}

function __ZdaPv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _finish_pass_1_quant(i1) {
 i1 = i1 | 0;
 return;
}

function ___cxa_guard_release(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9exceptionD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function stackRestore(i1) {
 i1 = i1 | 0;
 STACKTOP = i1;
}

function __ZdlPv(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function __ZNSt3__211char_traitsIwE3eofEv() {
 return -1;
}

function __ZNSt3__211char_traitsIcE3eofEv() {
 return -1;
}

function _start_pass_dcolor(i1) {
 i1 = i1 | 0;
 return;
}

function _jpeg_mem_init(i1) {
 i1 = i1 | 0;
 return 1e6;
}

function ___ofl_lock() {
 ___lock(56884);
 return 56892;
}

function ___cxa_guard_abort(i1) {
 i1 = i1 | 0;
 return;
}

function _dummy_465(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function ___ofl_unlock() {
 ___unlock(56884);
 return;
}

function _threadGetCPU() {
 return _sysconf(84) | 0;
}

function _jpeg_mem_term(i1) {
 i1 = i1 | 0;
 return;
}

function _getLogLevel() {
 return HEAP32[3368] | 0;
}

function _finish_pass2(i1) {
 i1 = i1 | 0;
 return;
}

function ___unlockfile(i1) {
 i1 = i1 | 0;
 return;
}

function ___lockfile(i1) {
 i1 = i1 | 0;
 return 1;
}

function b15(i1) {
 i1 = i1 | 0;
 nullFunc_vi(15);
}

function _term_source(i1) {
 i1 = i1 | 0;
 return;
}

function __GLOBAL__sub_I_iostream_cpp() {
 return;
}

function _catclose(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZSt17__throw_bad_allocv() {
 _abort();
}

function ___ctype_toupper_loc() {
 return 14064;
}

function ___ctype_tolower_loc() {
 return 14068;
}

function ___errno_location() {
 return 56880;
}

function stackSave() {
 return STACKTOP | 0;
}

function b2() {
 nullFunc_i(2);
 return 0;
}

function __get_timezone() {
 return 57428;
}

function __get_daylight() {
 return 57424;
}

function ___ctype_b_loc() {
 return 14060;
}

function _pthread_self() {
 return 13808;
}

function __get_environ() {
 return 57432;
}

function __get_tzname() {
 return 57416;
}

function b14() {
 nullFunc_v(14);
}

function _dummy() {
 return;
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_di = [b0,_getProjectionNearPlane,_getProjectionFarPlane,_getPattRatio];
var FUNCTION_TABLE_dii = [b1,__ZN10emscripten8internal7InvokerIdJiEE6invokeEPFdiEi];
var FUNCTION_TABLE_i = [b2,_getLogLevel];
var FUNCTION_TABLE_ii = [b3,__ZNK6vision9Exception4whatEv,___stdio_close,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__211__stdoutbufIwE4syncEv,__ZNSt3__211__stdoutbufIcE4syncEv,__ZNSt3__210__stdinbufIwE9underflowEv,__ZNSt3__210__stdinbufIwE5uflowEv,__ZNSt3__210__stdinbufIcE9underflowEv,__ZNSt3__210__stdinbufIcE5uflowEv,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIcE7__weeksEv,__ZNKSt3__220__time_get_c_storageIcE8__monthsEv,__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIcE3__cEv,__ZNKSt3__220__time_get_c_storageIcE3__rEv,__ZNKSt3__220__time_get_c_storageIcE3__xEv,__ZNKSt3__220__time_get_c_storageIcE3__XEv,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIwE7__weeksEv,__ZNKSt3__220__time_get_c_storageIwE8__monthsEv,__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv
,__ZNKSt3__220__time_get_c_storageIwE3__cEv,__ZNKSt3__220__time_get_c_storageIwE3__rEv,__ZNKSt3__220__time_get_c_storageIwE3__xEv,__ZNKSt3__220__time_get_c_storageIwE3__XEv,__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__28numpunctIcE16do_decimal_pointEv,__ZNKSt3__28numpunctIcE16do_thousands_sepEv,__ZNKSt3__28numpunctIwE16do_decimal_pointEv,__ZNKSt3__28numpunctIwE16do_thousands_sepEv,__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv
,__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt11logic_error4whatEv,_ar2Tracking2d,_jpeg_std_error,_jpeg_start_decompress,_malloc,_jpeg_finish_decompress,_read_markers,_read_restart_marker,_skip_variable,_get_interesting_appn,_consume_markers,_consume_data,_dummy_consume_data,_fill_input_buffer,_trackingInitMain,_teardown,_setupAR2,_getMultiMarkerCount,_loadCamera,_detectMarker,_getMarkerNum,_detectNFTMarker,_getDebugMode,_getProcessingImage,__ZN10emscripten8internal7InvokerIiJEE6invokeEPFivE,_getThresholdMode,_getThreshold,_getPatternDetectionMode
,_getMatrixCodeType,_getLabelingMode,_getImageProcMode,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_iidiiii = [b4,_fmt_fp];
var FUNCTION_TABLE_iii = [b5,__ZNKSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info,__ZNKSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE13__get_deleterERKSt9type_info,__ZNKSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE13__get_deleterERKSt9type_info,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__211__stdoutbufIwE8overflowEj,__ZNSt3__211__stdoutbufIcE8overflowEi,__ZNSt3__210__stdinbufIwE9pbackfailEj,__ZNSt3__210__stdinbufIcE9pbackfailEi,__ZNKSt3__25ctypeIcE10do_toupperEc,__ZNKSt3__25ctypeIcE10do_tolowerEc,__ZNKSt3__25ctypeIcE8do_widenEc,__ZNKSt3__25ctypeIwE10do_toupperEw,__ZNKSt3__25ctypeIwE10do_tolowerEw,__ZNKSt3__25ctypeIwE8do_widenEc,_compE,_jpeg_read_header,_decode_mcu,_decompress_data,_decompress_onepass,_decompress_smooth_data,_decode_mcu_AC_first,_decode_mcu_DC_first,_decode_mcu_AC_refine,_decode_mcu_DC_refine,_jpeg_resync_to_restart
,__ZN10emscripten8internal7InvokerIiJiEE6invokeEPFiiEi,_addMarker,_addMultiMarker,_addNFTMarker,_getMultiMarkerNum,__ZN10emscripten8internal7InvokerIiJNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiS8_EPNS0_11BindingTypeIS8_EUt_E,_setMarkerInfoVertex,_getTransMatMultiSquare,_getTransMatMultiSquareRobust,_getMarkerInfo,_getNFTMarkerInfo,_setDebugMode,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiii = [b6,___stdio_read,___stdio_write,___stdout_write,_sn_write,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwl,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl,__ZNSt3__211__stdoutbufIwE6xsputnEPKwl,__ZNSt3__211__stdoutbufIcE6xsputnEPKcl,__ZNKSt3__27collateIcE7do_hashEPKcS3_,__ZNKSt3__27collateIwE7do_hashEPKwS3_,__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__25ctypeIcE10do_toupperEPcPKc,__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__25ctypeIcE9do_narrowEcc,__ZNKSt3__25ctypeIwE5do_isEtw,__ZNKSt3__25ctypeIwE10do_toupperEPwPKw,__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__25ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,_jpeg_read_scanlines,_alloc_small,_alloc_large
,_setup,__ZN10emscripten8internal7InvokerIiJiNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiiS8_EiPNS0_11BindingTypeIS8_EUt_E,__ZN10emscripten8internal7InvokerIiJiiEE6invokeEPFiiiEii,_setMarkerInfoDir,_getTransMatSquare,_getTransMatSquareCont,_getMultiEachMarkerInfo,_do_read_589,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiii = [b7,___stdio_seek,__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw,_alloc_sarray,_alloc_barray,__ZN10emscripten8internal7InvokerIiJiiiEE6invokeEPFiiiiEiii,b7,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiiid = [b8,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b8,b8,b8];
var FUNCTION_TABLE_iiiiii = [b9,__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m,__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m,__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m,__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m,_access_virt_sarray,_access_virt_barray,b9,b9,b9,b9,b9,b9
,b9,b9,b9];
var FUNCTION_TABLE_iiiiiid = [b10,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b10];
var FUNCTION_TABLE_iiiiiii = [b11,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,_request_virt_sarray,_request_virt_barray,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_iiiiiiii = [b12,__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b12];
var FUNCTION_TABLE_iiiiiiiii = [b13,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_v = [b14,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b14];
var FUNCTION_TABLE_vi = [b15,__ZN6vision18BinomialPyramid32fD2Ev,__ZN6vision18BinomialPyramid32fD0Ev,__ZN6vision25GaussianScaleSpacePyramidD2Ev,__ZN6vision25GaussianScaleSpacePyramidD0Ev,__ZN6vision9ExceptionD2Ev,__ZN6vision9ExceptionD0Ev,__ZNSt3__214__shared_countD2Ev,__ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEED0Ev,__ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEED0Ev,__ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE21__on_zero_shared_weakEv,__ZNSt3__28ios_baseD2Ev,__ZNSt3__28ios_baseD0Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev
,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__211__stdoutbufIwED0Ev,__ZNSt3__211__stdoutbufIcED0Ev,__ZNSt3__210__stdinbufIwED0Ev,__ZNSt3__210__stdinbufIcED0Ev,__ZNSt3__27collateIcED2Ev,__ZNSt3__27collateIcED0Ev,__ZNSt3__26locale5facet16__on_zero_sharedEv,__ZNSt3__27collateIwED2Ev,__ZNSt3__27collateIwED0Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__210moneypunctIcLb0EED2Ev,__ZNSt3__210moneypunctIcLb0EED0Ev,__ZNSt3__210moneypunctIcLb1EED2Ev,__ZNSt3__210moneypunctIcLb1EED0Ev,__ZNSt3__210moneypunctIwLb0EED2Ev,__ZNSt3__210moneypunctIwLb0EED0Ev,__ZNSt3__210moneypunctIwLb1EED2Ev,__ZNSt3__210moneypunctIwLb1EED0Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28messagesIcED2Ev,__ZNSt3__28messagesIcED0Ev,__ZNSt3__28messagesIwED2Ev,__ZNSt3__28messagesIwED0Ev,__ZNSt3__26locale5facetD2Ev,__ZNSt3__216__narrow_to_utf8ILm32EED0Ev,__ZNSt3__217__widen_from_utf8ILm32EED0Ev,__ZNSt3__27codecvtIwc11__mbstate_tED2Ev,__ZNSt3__27codecvtIwc11__mbstate_tED0Ev
,__ZNSt3__26locale5__impD2Ev,__ZNSt3__26locale5__impD0Ev,__ZNSt3__25ctypeIcED2Ev,__ZNSt3__25ctypeIcED0Ev,__ZNSt3__28numpunctIcED2Ev,__ZNSt3__28numpunctIcED0Ev,__ZNSt3__28numpunctIwED2Ev,__ZNSt3__28numpunctIwED0Ev,__ZNSt3__26locale5facetD0Ev,__ZNSt3__25ctypeIwED0Ev,__ZNSt3__27codecvtIcc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDic11__mbstate_tED0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,__ZNSt12length_errorD0Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,_my_error_exit,_jpeg_destroy_decompress,_realize_virt_arrays,_self_destruct,_reset_marker_reader,_reset_input_controller,_start_input_pass_27
,_finish_input_pass,_prepare_for_output_pass,_finish_output_pass,_finish_pass_1_quant,_new_color_map_1_quant,_new_color_map_2_quant,_start_pass_merged_upsample,_start_pass_dcolor,_start_pass_upsample,_start_pass,_start_pass_phuff_decoder,_start_pass_huff_decoder,_start_input_pass,_start_output_pass,_finish_pass1,_finish_pass2,_init_source,_term_source,_error_exit,_output_message,_reset_error_mgr,_setLogLevel,__ZNSt3__26locale2id6__initEv,__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,__ZNSt3__212__do_nothingEPv,_free,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_vid = [b16,_setProjectionNearPlane,_setProjectionFarPlane,_setPattRatio];
var FUNCTION_TABLE_vii = [b17,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE,__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv
,__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__28messagesIcE8do_closeEl,__ZNKSt3__28messagesIwE8do_closeEl,__ZNKSt3__28numpunctIcE11do_groupingEv,__ZNKSt3__28numpunctIcE11do_truenameEv,__ZNKSt3__28numpunctIcE12do_falsenameEv,__ZNKSt3__28numpunctIwE11do_groupingEv,__ZNKSt3__28numpunctIwE11do_truenameEv,__ZNKSt3__28numpunctIwE12do_falsenameEv,_jpeg_stdio_src,_free_pool,_close_backing_store,_start_pass_1_quant,_start_pass_2_quant,_start_pass_dpost,_start_pass_main_28,_skip_input_data,_emit_message,_format_message,__ZN10emscripten8internal7InvokerIvJiEE6invokeEPFviEi,_setThresholdMode,_setThreshold,_setPatternDetectionMode,_setMatrixCodeType,_setLabelingMode,_setImageProcMode,_pop_arg_long_double,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_viid = [b18,__ZN10emscripten8internal7InvokerIvJidEE6invokeEPFvidEid,__ZN10emscripten8internal7InvokerIvJifEE6invokeEPFvifEif,b18];
var FUNCTION_TABLE_viii = [b19,_jpeg_CreateDecompress,__ZN10emscripten8internal7InvokerIvJiiEE6invokeEPFviiEii,b19];
var FUNCTION_TABLE_viiii = [b20,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__27collateIcE12do_transformEPKcS3_,__ZNKSt3__27collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,_arLog,_h2v2_merged_upsample,_h2v1_merged_upsample,_noop_upsample,_fullsize_upsample,_h2v1_fancy_upsample,_h2v1_upsample,_h2v2_fancy_upsample,_h2v2_upsample,_int_upsample,_process_data_context_main,_process_data_simple_main_29,_process_data_crank_post,_prescan_quantize,_pass2_no_dither,_pass2_fs_dither,_color_quantize3,_color_quantize,_quantize_ord_dither,_quantize3_ord_dither,_quantize_fs_dither
,b20,b20,b20];
var FUNCTION_TABLE_viiiii = [b21,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,_read_backing_store,_write_backing_store,_grayscale_convert_23,_ycc_rgb_convert,_gray_rgb_convert,_null_convert_24,_ycck_cmyk_convert,_jpeg_idct_1x1,_jpeg_idct_2x2,_jpeg_idct_4x4,_jpeg_idct_islow,_jpeg_idct_ifast,_jpeg_idct_float,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21];
var FUNCTION_TABLE_viiiiii = [b22,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib];
var FUNCTION_TABLE_viiiiiii = [b23,_merged_2v_upsample,_merged_1v_upsample,_sep_upsample,_post_process_1pass,_post_process_prepass,_post_process_2pass,b23];

  return { __ZSt18uncaught_exceptionv: __ZSt18uncaught_exceptionv, ___cxa_can_catch: ___cxa_can_catch, ___cxa_demangle: ___cxa_demangle, ___cxa_is_pointer_type: ___cxa_is_pointer_type, ___errno_location: ___errno_location, ___getTypeName: ___getTypeName, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, __get_daylight: __get_daylight, __get_environ: __get_environ, __get_timezone: __get_timezone, __get_tzname: __get_tzname, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _emscripten_replace_memory: _emscripten_replace_memory, _fflush: _fflush, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _llvm_bswap_i32: _llvm_bswap_i32, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _pthread_cond_broadcast: _pthread_cond_broadcast, _realloc: _realloc, _roundf: _roundf, _saveSetjmp: _saveSetjmp, _sbrk: _sbrk, _setThrew: _setThrew, _testSetjmp: _testSetjmp, dynCall_di: dynCall_di, dynCall_dii: dynCall_dii, dynCall_i: dynCall_i, dynCall_ii: dynCall_ii, dynCall_iidiiii: dynCall_iidiiii, dynCall_iii: dynCall_iii, dynCall_iiii: dynCall_iiii, dynCall_iiiii: dynCall_iiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_iiiiii: dynCall_iiiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_v: dynCall_v, dynCall_vi: dynCall_vi, dynCall_vid: dynCall_vid, dynCall_vii: dynCall_vii, dynCall_viid: dynCall_viid, dynCall_viii: dynCall_viii, dynCall_viiii: dynCall_viiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiiiii: dynCall_viiiiiii, establishStackSpace: establishStackSpace, globalCtors: globalCtors, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
// EMSCRIPTEN_END_ASM
(asmGlobalArg, asmLibraryArg, buffer);

var real___ZSt18uncaught_exceptionv = asm["__ZSt18uncaught_exceptionv"];

asm["__ZSt18uncaught_exceptionv"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___ZSt18uncaught_exceptionv.apply(null, arguments);
};

var real____cxa_can_catch = asm["___cxa_can_catch"];

asm["___cxa_can_catch"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____cxa_can_catch.apply(null, arguments);
};

var real____cxa_demangle = asm["___cxa_demangle"];

asm["___cxa_demangle"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____cxa_demangle.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"];

asm["___cxa_is_pointer_type"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____cxa_is_pointer_type.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"];

asm["___errno_location"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____errno_location.apply(null, arguments);
};

var real____getTypeName = asm["___getTypeName"];

asm["___getTypeName"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____getTypeName.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"];

asm["___muldi3"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____muldi3.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"];

asm["___udivdi3"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____udivdi3.apply(null, arguments);
};

var real___get_daylight = asm["__get_daylight"];

asm["__get_daylight"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___get_daylight.apply(null, arguments);
};

var real___get_environ = asm["__get_environ"];

asm["__get_environ"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___get_environ.apply(null, arguments);
};

var real___get_timezone = asm["__get_timezone"];

asm["__get_timezone"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___get_timezone.apply(null, arguments);
};

var real___get_tzname = asm["__get_tzname"];

asm["__get_tzname"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___get_tzname.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"];

asm["_bitshift64Lshr"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"];

asm["_bitshift64Shl"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__bitshift64Shl.apply(null, arguments);
};

var real__fflush = asm["_fflush"];

asm["_fflush"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__fflush.apply(null, arguments);
};

var real__free = asm["_free"];

asm["_free"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__free.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"];

asm["_i64Add"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__i64Add.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"];

asm["_i64Subtract"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__i64Subtract.apply(null, arguments);
};

var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"];

asm["_llvm_bswap_i32"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__llvm_bswap_i32.apply(null, arguments);
};

var real__malloc = asm["_malloc"];

asm["_malloc"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__malloc.apply(null, arguments);
};

var real__memmove = asm["_memmove"];

asm["_memmove"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__memmove.apply(null, arguments);
};

var real__pthread_cond_broadcast = asm["_pthread_cond_broadcast"];

asm["_pthread_cond_broadcast"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__pthread_cond_broadcast.apply(null, arguments);
};

var real__realloc = asm["_realloc"];

asm["_realloc"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__realloc.apply(null, arguments);
};

var real__roundf = asm["_roundf"];

asm["_roundf"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__roundf.apply(null, arguments);
};

var real__saveSetjmp = asm["_saveSetjmp"];

asm["_saveSetjmp"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__saveSetjmp.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"];

asm["_sbrk"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__sbrk.apply(null, arguments);
};

var real__setThrew = asm["_setThrew"];

asm["_setThrew"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__setThrew.apply(null, arguments);
};

var real__testSetjmp = asm["_testSetjmp"];

asm["_testSetjmp"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__testSetjmp.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"];

asm["establishStackSpace"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real_establishStackSpace.apply(null, arguments);
};

var real_globalCtors = asm["globalCtors"];

asm["globalCtors"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real_globalCtors.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"];

asm["stackAlloc"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real_stackAlloc.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"];

asm["stackRestore"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real_stackRestore.apply(null, arguments);
};

var real_stackSave = asm["stackSave"];

asm["stackSave"] = function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real_stackSave.apply(null, arguments);
};

var __ZSt18uncaught_exceptionv = Module["__ZSt18uncaught_exceptionv"] = asm["__ZSt18uncaught_exceptionv"];

var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];

var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];

var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];

var ___errno_location = Module["___errno_location"] = asm["___errno_location"];

var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];

var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];

var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];

var __get_daylight = Module["__get_daylight"] = asm["__get_daylight"];

var __get_environ = Module["__get_environ"] = asm["__get_environ"];

var __get_timezone = Module["__get_timezone"] = asm["__get_timezone"];

var __get_tzname = Module["__get_tzname"] = asm["__get_tzname"];

var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];

var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];

var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];

var _fflush = Module["_fflush"] = asm["_fflush"];

var _free = Module["_free"] = asm["_free"];

var _i64Add = Module["_i64Add"] = asm["_i64Add"];

var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];

var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];

var _malloc = Module["_malloc"] = asm["_malloc"];

var _memcpy = Module["_memcpy"] = asm["_memcpy"];

var _memmove = Module["_memmove"] = asm["_memmove"];

var _memset = Module["_memset"] = asm["_memset"];

var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = asm["_pthread_cond_broadcast"];

var _realloc = Module["_realloc"] = asm["_realloc"];

var _roundf = Module["_roundf"] = asm["_roundf"];

var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];

var _sbrk = Module["_sbrk"] = asm["_sbrk"];

var _setThrew = Module["_setThrew"] = asm["_setThrew"];

var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];

var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];

var globalCtors = Module["globalCtors"] = asm["globalCtors"];

var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];

var stackRestore = Module["stackRestore"] = asm["stackRestore"];

var stackSave = Module["stackSave"] = asm["stackSave"];

var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];

var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];

var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];

var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];

var dynCall_iidiiii = Module["dynCall_iidiiii"] = asm["dynCall_iidiiii"];

var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];

var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];

var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];

var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];

var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];

var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];

var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];

var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];

var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];

var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];

var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];

var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];

var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];

var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];

var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];

var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];

var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];

var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];

Module["asm"] = asm;

if (!Module["intArrayFromString"]) Module["intArrayFromString"] = function() {
 abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["intArrayToString"]) Module["intArrayToString"] = function() {
 abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["ccall"]) Module["ccall"] = function() {
 abort("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["cwrap"]) Module["cwrap"] = function() {
 abort("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["setValue"]) Module["setValue"] = function() {
 abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getValue"]) Module["getValue"] = function() {
 abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["allocate"]) Module["allocate"] = function() {
 abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getMemory"]) Module["getMemory"] = function() {
 abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["AsciiToString"]) Module["AsciiToString"] = function() {
 abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToAscii"]) Module["stringToAscii"] = function() {
 abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["UTF8ArrayToString"]) Module["UTF8ArrayToString"] = function() {
 abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["UTF8ToString"]) Module["UTF8ToString"] = function() {
 abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToUTF8Array"]) Module["stringToUTF8Array"] = function() {
 abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToUTF8"]) Module["stringToUTF8"] = function() {
 abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["lengthBytesUTF8"]) Module["lengthBytesUTF8"] = function() {
 abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["UTF16ToString"]) Module["UTF16ToString"] = function() {
 abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToUTF16"]) Module["stringToUTF16"] = function() {
 abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["lengthBytesUTF16"]) Module["lengthBytesUTF16"] = function() {
 abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["UTF32ToString"]) Module["UTF32ToString"] = function() {
 abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stringToUTF32"]) Module["stringToUTF32"] = function() {
 abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["lengthBytesUTF32"]) Module["lengthBytesUTF32"] = function() {
 abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["allocateUTF8"]) Module["allocateUTF8"] = function() {
 abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stackTrace"]) Module["stackTrace"] = function() {
 abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnPreRun"]) Module["addOnPreRun"] = function() {
 abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnInit"]) Module["addOnInit"] = function() {
 abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnPreMain"]) Module["addOnPreMain"] = function() {
 abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnExit"]) Module["addOnExit"] = function() {
 abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addOnPostRun"]) Module["addOnPostRun"] = function() {
 abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["writeStringToMemory"]) Module["writeStringToMemory"] = function() {
 abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["writeArrayToMemory"]) Module["writeArrayToMemory"] = function() {
 abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["writeAsciiToMemory"]) Module["writeAsciiToMemory"] = function() {
 abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addRunDependency"]) Module["addRunDependency"] = function() {
 abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["removeRunDependency"]) Module["removeRunDependency"] = function() {
 abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["ENV"]) Module["ENV"] = function() {
 abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["FS"]) Module["FS"] = function() {
 abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["FS_createFolder"]) Module["FS_createFolder"] = function() {
 abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createPath"]) Module["FS_createPath"] = function() {
 abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createDataFile"]) Module["FS_createDataFile"] = function() {
 abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createPreloadedFile"]) Module["FS_createPreloadedFile"] = function() {
 abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createLazyFile"]) Module["FS_createLazyFile"] = function() {
 abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createLink"]) Module["FS_createLink"] = function() {
 abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_createDevice"]) Module["FS_createDevice"] = function() {
 abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["FS_unlink"]) Module["FS_unlink"] = function() {
 abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Module["GL"]) Module["GL"] = function() {
 abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["dynamicAlloc"]) Module["dynamicAlloc"] = function() {
 abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["warnOnce"]) Module["warnOnce"] = function() {
 abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["loadDynamicLibrary"]) Module["loadDynamicLibrary"] = function() {
 abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["loadWebAssemblyModule"]) Module["loadWebAssemblyModule"] = function() {
 abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getLEB"]) Module["getLEB"] = function() {
 abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getFunctionTables"]) Module["getFunctionTables"] = function() {
 abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["alignFunctionTables"]) Module["alignFunctionTables"] = function() {
 abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["registerFunctions"]) Module["registerFunctions"] = function() {
 abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["addFunction"]) Module["addFunction"] = function() {
 abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["removeFunction"]) Module["removeFunction"] = function() {
 abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getFuncWrapper"]) Module["getFuncWrapper"] = function() {
 abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["prettyPrint"]) Module["prettyPrint"] = function() {
 abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["makeBigInt"]) Module["makeBigInt"] = function() {
 abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["dynCall"]) Module["dynCall"] = function() {
 abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getCompilerSetting"]) Module["getCompilerSetting"] = function() {
 abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stackSave"]) Module["stackSave"] = function() {
 abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stackRestore"]) Module["stackRestore"] = function() {
 abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["stackAlloc"]) Module["stackAlloc"] = function() {
 abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["establishStackSpace"]) Module["establishStackSpace"] = function() {
 abort("'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["print"]) Module["print"] = function() {
 abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["printErr"]) Module["printErr"] = function() {
 abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["getTempRet0"]) Module["getTempRet0"] = function() {
 abort("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["setTempRet0"]) Module["setTempRet0"] = function() {
 abort("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["Pointer_stringify"]) Module["Pointer_stringify"] = function() {
 abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["intArrayFromBase64"]) Module["intArrayFromBase64"] = function() {
 abort("'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["tryParseAsDataURI"]) Module["tryParseAsDataURI"] = function() {
 abort("'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Module["ALLOC_NORMAL"]) Object.defineProperty(Module, "ALLOC_NORMAL", {
 get: function() {
  abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (!Module["ALLOC_STACK"]) Object.defineProperty(Module, "ALLOC_STACK", {
 get: function() {
  abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (!Module["ALLOC_DYNAMIC"]) Object.defineProperty(Module, "ALLOC_DYNAMIC", {
 get: function() {
  abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (!Module["ALLOC_NONE"]) Object.defineProperty(Module, "ALLOC_NONE", {
 get: function() {
  abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (memoryInitializer) {
 if (!isDataURI(memoryInitializer)) {
  memoryInitializer = locateFile(memoryInitializer);
 }
 if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
  var data = Module["readBinary"](memoryInitializer);
  HEAPU8.set(data, GLOBAL_BASE);
 } else {
  addRunDependency("memory initializer");
  var applyMemoryInitializer = function(data) {
   if (data.byteLength) data = new Uint8Array(data);
   for (var i = 0; i < data.length; i++) {
    assert(HEAPU8[GLOBAL_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
   }
   HEAPU8.set(data, GLOBAL_BASE);
   if (Module["memoryInitializerRequest"]) delete Module["memoryInitializerRequest"].response;
   removeRunDependency("memory initializer");
  };
  var doBrowserLoad = function() {
   Module["readAsync"](memoryInitializer, applyMemoryInitializer, function() {
    throw "could not load memory initializer " + memoryInitializer;
   });
  };
  var memoryInitializerBytes = tryParseAsDataURI(memoryInitializer);
  if (memoryInitializerBytes) {
   applyMemoryInitializer(memoryInitializerBytes.buffer);
  } else if (Module["memoryInitializerRequest"]) {
   var useRequest = function() {
    var request = Module["memoryInitializerRequest"];
    var response = request.response;
    if (request.status !== 200 && request.status !== 0) {
     var data = tryParseAsDataURI(Module["memoryInitializerRequestURL"]);
     if (data) {
      response = data.buffer;
     } else {
      console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: " + request.status + ", retrying " + memoryInitializer);
      doBrowserLoad();
      return;
     }
    }
    applyMemoryInitializer(response);
   };
   if (Module["memoryInitializerRequest"].response) {
    setTimeout(useRequest, 0);
   } else {
    Module["memoryInitializerRequest"].addEventListener("load", useRequest);
   }
  } else {
   doBrowserLoad();
  }
 }
}

function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}

ExitStatus.prototype = new Error();

ExitStatus.prototype.constructor = ExitStatus;

dependenciesFulfilled = function runCaller() {
 if (!Module["calledRun"]) run();
 if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
};

function run(args) {
 args = args || Module["arguments"];
 if (runDependencies > 0) {
  return;
 }
 writeStackCookie();
 preRun();
 if (runDependencies > 0) return;
 if (Module["calledRun"]) return;
 function doRun() {
  if (Module["calledRun"]) return;
  Module["calledRun"] = true;
  if (ABORT) return;
  ensureInitRuntime();
  preMain();
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  assert(!Module["_main"], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout(function() {
   setTimeout(function() {
    Module["setStatus"]("");
   }, 1);
   doRun();
  }, 1);
 } else {
  doRun();
 }
 checkStackCookie();
}

Module["run"] = run;

function checkUnflushedContent() {
 var print = out;
 var printErr = err;
 var has = false;
 out = err = function(x) {
  has = true;
 };
 try {
  var flush = Module["_fflush"];
  if (flush) flush(0);
  [ "stdout", "stderr" ].forEach(function(name) {
   var info = FS.analyzePath("/dev/" + name);
   if (!info) return;
   var stream = info.object;
   var rdev = stream.rdev;
   var tty = TTY.ttys[rdev];
   if (tty && tty.output && tty.output.length) {
    has = true;
   }
  });
 } catch (e) {}
 out = print;
 err = printErr;
 if (has) {
  warnOnce("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.");
 }
}

function exit(status, implicit) {
 checkUnflushedContent();
 if (implicit && Module["noExitRuntime"] && status === 0) {
  return;
 }
 if (Module["noExitRuntime"]) {
  if (!implicit) {
   err("exit(" + status + ") called, but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)");
  }
 } else {
  ABORT = true;
  EXITSTATUS = status;
  exitRuntime();
  if (Module["onExit"]) Module["onExit"](status);
 }
 Module["quit"](status, new ExitStatus(status));
}

var abortDecorators = [];

function abort(what) {
 if (Module["onAbort"]) {
  Module["onAbort"](what);
 }
 if (what !== undefined) {
  out(what);
  err(what);
  what = JSON.stringify(what);
 } else {
  what = "";
 }
 ABORT = true;
 EXITSTATUS = 1;
 var extra = "";
 var output = "abort(" + what + ") at " + stackTrace() + extra;
 if (abortDecorators) {
  abortDecorators.forEach(function(decorator) {
   output = decorator(output, what);
  });
 }
 throw output;
}

Module["abort"] = abort;

if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}

Module["noExitRuntime"] = true;

run();

